# 16 "cparser/Lexer.mll"
 
open Lexing
open Pre_parser
open Pre_parser_aux
open Cabshelper
open Camlcoq

let contexts : string list list ref = ref []
let lexicon : (string, Cabs.cabsloc -> token) Hashtbl.t = Hashtbl.create 0

let init filename channel : Lexing.lexbuf =
  assert (!contexts = []);
  Hashtbl.clear lexicon;
  List.iter
    (fun (key, builder) -> Hashtbl.add lexicon key builder)
    [ ("auto", fun loc -> AUTO loc);
      ("break", fun loc -> BREAK loc);
      ("case", fun loc -> CASE loc);
      ("char", fun loc -> CHAR loc);
      ("const", fun loc -> CONST loc);
      ("__const", fun loc -> CONST loc);
      ("__const__", fun loc -> CONST loc);
      ("continue", fun loc -> CONTINUE loc);
      ("default", fun loc -> DEFAULT loc);
      ("do", fun loc -> DO loc);
      ("double", fun loc -> DOUBLE loc);
      ("else", fun loc -> ELSE loc);
      ("enum", fun loc -> ENUM loc);
      ("extern", fun loc -> EXTERN loc);
      ("float", fun loc -> FLOAT loc);
      ("for", fun loc -> FOR loc);
      ("goto", fun loc -> GOTO loc);
      ("if", fun loc -> IF loc);
      ("inline", fun loc -> INLINE loc);
      ("__inline", fun loc -> INLINE loc);
      ("__inline__", fun loc -> INLINE loc);
      ("int", fun loc -> INT loc);
      ("long", fun loc -> LONG loc);
      ("register", fun loc -> REGISTER loc);
      ("restrict", fun loc -> RESTRICT loc);
      ("__restrict", fun loc -> RESTRICT loc);
      ("__restrict__", fun loc -> RESTRICT loc);
      ("return", fun loc -> RETURN loc);
      ("short", fun loc -> SHORT loc);
      ("signed", fun loc -> SIGNED loc);
      ("sizeof", fun loc -> SIZEOF loc);
      ("static", fun loc -> STATIC loc);
      ("struct", fun loc -> STRUCT loc);
      ("switch", fun loc -> SWITCH loc);
      ("typedef", fun loc -> TYPEDEF loc);
      ("union", fun loc -> UNION loc);
      ("unsigned", fun loc -> UNSIGNED loc);
      ("void", fun loc -> VOID loc);
      ("volatile", fun loc -> VOLATILE loc);
      ("while", fun loc -> WHILE loc);
      ("_Alignas", fun loc -> ALIGNAS loc);
      ("_Alignof", fun loc -> ALIGNOF loc);
      ("__alignof", fun loc -> ALIGNOF loc);
      ("__alignof__", fun loc -> ALIGNOF loc);
      ("__attribute", fun loc -> ATTRIBUTE loc);
      ("__attribute__", fun loc -> ATTRIBUTE loc);
      ("_Bool", fun loc -> UNDERSCORE_BOOL loc);
      ("__builtin_va_arg", fun loc -> BUILTIN_VA_ARG loc);
      ("__packed__", fun loc -> PACKED loc);
      ("__asm__", fun loc -> ASM loc);
      ("__asm", fun loc -> ASM loc);
      ("asm", fun loc -> ASM loc);
    ];

  push_context := begin fun () -> contexts := []::!contexts end;
  pop_context := begin fun () ->
    match !contexts with
      | [] -> assert false
      | t::q -> List.iter (Hashtbl.remove lexicon) t;
                contexts := q
  end;

 declare_varname := begin fun id ->
   if Hashtbl.mem lexicon id then begin
     Hashtbl.add lexicon id (fun loc -> VAR_NAME (id, ref VarId, loc));
     match !contexts with
       | [] -> ()
       | t::q -> contexts := (id::t)::q
     end
  end;

  declare_typename := begin fun id ->
    Hashtbl.add lexicon id (fun loc -> TYPEDEF_NAME (id, ref TypedefId, loc));
    match !contexts with
      | [] -> ()
      | t::q -> contexts := (id::t)::q
  end;

  !declare_typename "__builtin_va_list";

  let lb = Lexing.from_channel channel in
  lb.lex_curr_p <-
    {lb.lex_curr_p with pos_fname = filename; pos_lnum = 1};
  lb

let currentLoc =
  let nextident = ref 0 in
  let getident () =
    nextident := !nextident + 1;
    !nextident
  in
  fun lb ->
    let p = Lexing.lexeme_start_p lb in
    Cabs.({ lineno   = p.Lexing.pos_lnum;
            filename = p.Lexing.pos_fname;
            byteno   = p.Lexing.pos_cnum;
            ident    = getident ();})

(* Error reporting *)

let fatal_error lb fmt =
  Cerrors.fatal_error ("%s:%d: Error:@ " ^^ fmt)
      lb.lex_curr_p.pos_fname lb.lex_curr_p.pos_lnum

let error lb fmt =
  Cerrors.error ("%s:%d: Error:@ " ^^ fmt)
      lb.lex_curr_p.pos_fname lb.lex_curr_p.pos_lnum

let warning lb fmt =
  Cerrors.warning ("%s:%d: Warning:@ " ^^ fmt)
      lb.lex_curr_p.pos_fname lb.lex_curr_p.pos_lnum

(* Simple character escapes *)

let convert_escape = function
  | 'a' -> 7L  (* bell *)
  | 'b' -> 8L  (* backspace  *)
  | 'e' -> 27L (* escape (GCC extension) *)
  | 'f' -> 12L (* form feed *)
  | 'n' -> 10L (* new line *)
  | 'r' -> 13L (* carriage return *)
  | 't' -> 9L  (* horizontal tab *)
  | 'v' -> 11L (* vertical tab *)
  | c   -> Int64.of_int (Char.code c)

# 143 "cparser/Lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\196\255\197\255\091\000\200\255\201\255\202\255\203\255\
    \204\255\205\255\206\255\207\255\208\255\002\000\210\255\031\000\
    \035\000\067\000\093\000\070\000\094\000\091\000\072\000\074\000\
    \169\000\173\000\246\255\193\000\248\255\014\001\026\001\069\001\
    \175\000\075\001\255\255\240\255\252\255\253\255\107\001\139\001\
    \149\001\013\001\244\000\074\000\060\000\029\000\251\255\102\000\
    \250\255\178\001\210\001\220\001\250\255\249\001\025\002\035\002\
    \159\001\250\255\045\002\188\001\074\002\230\001\250\255\107\002\
    \003\002\117\002\146\002\178\002\188\002\207\002\244\002\014\001\
    \024\001\144\000\015\003\062\000\041\000\136\000\085\003\123\003\
    \053\003\161\003\193\003\016\001\027\001\147\000\107\000\076\000\
    \140\000\226\003\002\004\012\004\045\004\077\004\087\004\217\002\
    \249\255\097\004\025\003\126\004\108\003\249\255\159\004\169\004\
    \188\004\198\004\221\004\231\004\250\004\027\005\059\005\069\005\
    \079\005\249\255\098\005\108\005\139\000\132\005\250\255\162\005\
    \193\005\203\005\142\005\250\255\213\005\172\005\244\255\245\255\
    \247\255\224\255\243\255\222\255\223\255\242\255\241\255\239\255\
    \214\255\238\255\215\255\237\255\236\255\229\255\157\000\235\255\
    \228\255\163\000\234\255\231\255\230\255\100\002\253\255\254\255\
    \255\255\136\000\250\255\243\005\251\255\252\255\076\003\060\006\
    \083\006\121\006\147\006\185\006\208\006\255\255\246\006\013\007\
    \051\007\074\007\112\007\135\007\173\007\196\007\176\006\253\255\
    \103\001\254\255\255\255\106\001\254\255\255\255\034\006\252\255\
    \253\255\118\001\138\001\011\008\119\001\246\001\021\008\075\008\
    \139\001\016\003\141\001\255\255\051\002\144\002\210\001\181\002\
    \056\005\048\006\254\255\175\001\207\001\252\255\253\255\254\255\
    \179\000\255\255\212\001\253\255\254\255\255\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\057\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\046\000\255\255\039\000\
    \028\000\030\000\029\000\044\000\042\000\043\000\038\000\036\000\
    \035\000\034\000\255\255\057\000\255\255\056\000\004\000\004\000\
    \037\000\001\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \005\000\004\000\004\000\004\000\004\000\004\000\255\255\004\000\
    \255\255\255\255\255\255\005\000\255\255\255\255\255\255\005\000\
    \255\255\255\255\005\000\255\255\005\000\255\255\255\255\005\000\
    \255\255\005\000\255\255\005\000\255\255\255\255\255\255\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\255\255\004\000\
    \255\255\255\255\255\255\004\000\004\000\004\000\004\000\004\000\
    \004\000\255\255\255\255\255\255\255\255\255\255\006\000\255\255\
    \255\255\006\000\255\255\006\000\255\255\255\255\006\000\255\255\
    \006\000\255\255\006\000\255\255\255\255\255\255\255\255\006\000\
    \255\255\255\255\006\000\255\255\255\255\005\000\255\255\255\255\
    \255\255\005\000\255\255\255\255\005\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\022\000\255\255\
    \255\255\023\000\255\255\255\255\255\255\003\000\255\255\255\255\
    \255\255\255\255\255\255\005\000\255\255\255\255\002\000\004\000\
    \004\000\004\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\001\000\002\000\255\255\
    \002\000\255\255\255\255\002\000\255\255\255\255\255\255\255\255\
    \255\255\004\000\004\000\004\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \003\000\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\255\255\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\154\000\000\000\156\000\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\000\000\000\000\255\255\000\000\000\000\185\000\000\000\
    \000\000\188\000\188\000\188\000\188\000\188\000\188\000\188\000\
    \192\000\188\000\194\000\000\000\188\000\188\000\188\000\188\000\
    \188\000\203\000\000\000\203\000\205\000\000\000\000\000\000\000\
    \255\255\000\000\211\000\000\000\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\033\000\034\000\000\000\033\000\033\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \033\000\015\000\026\000\000\000\003\000\022\000\020\000\028\000\
    \007\000\006\000\023\000\025\000\004\000\024\000\029\000\032\000\
    \030\000\031\000\031\000\031\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\013\000\005\000\018\000\016\000\017\000\014\000\
    \008\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\027\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\009\000\148\000\008\000\019\000\003\000\
    \147\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\011\000\021\000\010\000\012\000\003\000\
    \144\000\145\000\011\000\140\000\138\000\135\000\010\000\134\000\
    \046\000\046\000\046\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\046\000\044\000\009\000\
    \137\000\142\000\141\000\139\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\045\000\046\000\
    \046\000\126\000\003\000\046\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\132\000\136\000\
    \129\000\037\000\143\000\046\000\075\000\046\000\036\000\086\000\
    \146\000\046\000\209\000\127\000\155\000\003\000\133\000\131\000\
    \128\000\000\000\130\000\000\000\035\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\076\000\046\000\000\000\087\000\
    \002\000\046\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \003\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\116\000\000\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\117\000\117\000\117\000\
    \040\000\046\000\074\000\074\000\074\000\074\000\074\000\074\000\
    \074\000\074\000\069\000\069\000\033\000\000\000\000\000\033\000\
    \033\000\047\000\077\000\000\000\088\000\000\000\000\000\038\000\
    \047\000\000\000\046\000\046\000\000\000\046\000\071\000\000\000\
    \000\000\046\000\000\000\033\000\000\000\046\000\000\000\073\000\
    \046\000\177\000\070\000\040\000\180\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\039\000\
    \184\000\184\000\046\000\046\000\077\000\046\000\072\000\088\000\
    \255\255\000\000\038\000\000\000\181\000\046\000\178\000\073\000\
    \046\000\041\000\070\000\000\000\184\000\184\000\068\000\195\000\
    \068\000\000\000\043\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\000\000\000\000\000\000\
    \000\000\000\000\039\000\000\000\000\000\194\000\000\000\000\000\
    \000\000\042\000\000\000\000\000\000\000\000\000\066\000\000\000\
    \066\000\202\000\043\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\051\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\206\000\049\000\048\000\184\000\064\000\213\000\064\000\
    \000\000\048\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\000\000\000\000\
    \000\000\208\000\050\000\048\000\196\000\061\000\000\000\061\000\
    \184\000\048\000\060\000\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
    \000\000\053\000\052\000\000\000\059\000\000\000\059\000\000\000\
    \052\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\184\000\000\000\199\000\
    \000\000\054\000\052\000\000\000\056\000\000\000\056\000\000\000\
    \052\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\177\000\
    \196\000\057\000\180\000\000\000\000\000\151\000\152\000\057\000\
    \151\000\151\000\000\000\057\000\000\000\000\000\183\000\183\000\
    \000\000\057\000\060\000\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\151\000\000\000\000\000\150\000\
    \000\000\057\000\183\000\183\000\000\000\183\000\000\000\057\000\
    \062\000\000\000\000\000\057\000\197\000\000\000\062\000\000\000\
    \000\000\057\000\184\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\183\000\
    \062\000\062\000\000\000\000\000\000\000\000\000\062\000\062\000\
    \000\000\000\000\000\000\062\000\000\000\000\000\000\000\184\000\
    \000\000\062\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\000\000\000\000\000\000\207\000\
    \000\000\062\000\183\000\000\000\212\000\000\000\000\000\062\000\
    \000\000\000\000\000\000\062\000\000\000\000\000\000\000\000\000\
    \000\000\062\000\067\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\067\000\183\000\198\000\
    \062\000\000\000\000\000\000\000\000\000\040\000\062\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\094\000\094\000\094\000\094\000\094\000\094\000\094\000\
    \094\000\094\000\094\000\000\000\038\000\000\000\200\000\000\000\
    \062\000\193\000\184\000\000\000\193\000\193\000\062\000\000\000\
    \000\000\000\000\078\000\000\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\000\000\000\000\
    \193\000\000\000\192\000\183\000\039\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\000\000\000\000\040\000\000\000\074\000\
    \074\000\074\000\074\000\074\000\074\000\074\000\074\000\069\000\
    \069\000\097\000\097\000\097\000\097\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\000\000\038\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\071\000\000\000\000\000\000\000\000\000\
    \107\000\000\000\107\000\000\000\073\000\106\000\106\000\106\000\
    \106\000\106\000\106\000\106\000\106\000\106\000\106\000\000\000\
    \000\000\000\000\000\000\000\000\039\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\072\000\174\000\174\000\174\000\174\000\
    \174\000\174\000\174\000\174\000\073\000\108\000\108\000\108\000\
    \108\000\108\000\108\000\108\000\108\000\108\000\108\000\000\000\
    \183\000\000\000\000\000\000\000\000\000\000\000\108\000\108\000\
    \108\000\108\000\108\000\108\000\099\000\099\000\099\000\099\000\
    \099\000\099\000\099\000\099\000\099\000\099\000\000\000\000\000\
    \000\000\082\000\000\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\183\000\108\000\108\000\
    \108\000\108\000\108\000\108\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\000\000\000\000\000\000\000\000\000\000\083\000\
    \000\000\000\000\000\000\080\000\105\000\000\000\105\000\000\000\
    \085\000\104\000\104\000\104\000\104\000\104\000\104\000\104\000\
    \104\000\104\000\104\000\000\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\000\000\000\000\000\000\000\000\000\000\084\000\
    \000\000\000\000\000\000\081\000\000\000\000\000\000\000\000\000\
    \085\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \000\000\000\000\000\000\000\000\000\000\103\000\000\000\103\000\
    \183\000\089\000\102\000\102\000\102\000\102\000\102\000\102\000\
    \102\000\102\000\102\000\102\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \000\000\000\000\000\000\000\000\000\000\100\000\000\000\100\000\
    \000\000\090\000\099\000\099\000\099\000\099\000\099\000\099\000\
    \099\000\099\000\099\000\099\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\000\000\000\000\000\000\000\000\000\000\
    \098\000\000\000\098\000\000\000\092\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\097\000\097\000\097\000\097\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\000\000\000\000\000\000\000\000\000\000\
    \095\000\000\000\095\000\000\000\093\000\094\000\094\000\094\000\
    \094\000\094\000\094\000\094\000\094\000\094\000\094\000\094\000\
    \094\000\094\000\094\000\094\000\094\000\094\000\094\000\094\000\
    \094\000\097\000\097\000\097\000\097\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\000\000\000\000\096\000\000\000\000\000\
    \000\000\000\000\000\000\096\000\000\000\000\000\000\000\096\000\
    \000\000\000\000\000\000\000\000\000\000\096\000\099\000\099\000\
    \099\000\099\000\099\000\099\000\099\000\099\000\099\000\099\000\
    \000\000\000\000\000\000\000\000\000\000\096\000\000\000\000\000\
    \000\000\000\000\000\000\096\000\101\000\000\000\000\000\096\000\
    \000\000\000\000\101\000\000\000\000\000\096\000\000\000\102\000\
    \102\000\102\000\102\000\102\000\102\000\102\000\102\000\102\000\
    \102\000\102\000\102\000\102\000\102\000\102\000\102\000\102\000\
    \102\000\102\000\102\000\000\000\101\000\101\000\000\000\000\000\
    \000\000\000\000\101\000\101\000\104\000\104\000\104\000\104\000\
    \104\000\104\000\104\000\104\000\104\000\104\000\104\000\104\000\
    \104\000\104\000\104\000\104\000\104\000\104\000\104\000\104\000\
    \000\000\000\000\101\000\000\000\000\000\101\000\000\000\000\000\
    \101\000\000\000\000\000\101\000\000\000\106\000\106\000\106\000\
    \106\000\106\000\106\000\106\000\106\000\106\000\106\000\106\000\
    \106\000\106\000\106\000\106\000\106\000\106\000\106\000\106\000\
    \106\000\000\000\101\000\101\000\000\000\000\000\000\000\000\000\
    \101\000\101\000\108\000\108\000\108\000\108\000\108\000\108\000\
    \108\000\108\000\108\000\108\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\108\000\108\000\108\000\108\000\108\000\
    \108\000\201\000\184\000\101\000\201\000\201\000\115\000\000\000\
    \115\000\101\000\109\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\000\000\000\000\000\000\
    \201\000\000\000\000\000\108\000\108\000\108\000\108\000\108\000\
    \108\000\000\000\000\000\000\000\000\000\000\000\112\000\000\000\
    \112\000\000\000\110\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\000\000\000\000\113\000\000\000\000\000\000\000\000\000\
    \000\000\113\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\114\000\114\000\000\000\000\000\
    \113\000\000\000\000\000\113\000\000\000\000\000\113\000\000\000\
    \000\000\113\000\000\000\000\000\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\117\000\121\000\121\000\
    \121\000\121\000\121\000\121\000\121\000\121\000\121\000\121\000\
    \113\000\119\000\118\000\000\000\000\000\125\000\113\000\125\000\
    \118\000\000\000\124\000\124\000\124\000\124\000\124\000\124\000\
    \124\000\124\000\124\000\124\000\124\000\124\000\124\000\124\000\
    \124\000\124\000\124\000\124\000\124\000\124\000\000\000\000\000\
    \000\000\120\000\118\000\000\000\122\000\000\000\122\000\000\000\
    \118\000\121\000\121\000\121\000\121\000\121\000\121\000\121\000\
    \121\000\121\000\121\000\121\000\121\000\121\000\121\000\121\000\
    \121\000\121\000\121\000\121\000\121\000\124\000\124\000\124\000\
    \124\000\124\000\124\000\124\000\124\000\124\000\124\000\000\000\
    \000\000\123\000\000\000\000\000\000\000\157\000\000\000\123\000\
    \000\000\000\000\157\000\123\000\000\000\000\000\000\000\000\000\
    \000\000\123\000\000\000\158\000\158\000\158\000\158\000\158\000\
    \158\000\158\000\158\000\187\000\184\000\000\000\187\000\187\000\
    \000\000\123\000\157\000\000\000\000\000\000\000\000\000\123\000\
    \183\000\201\000\202\000\123\000\201\000\201\000\000\000\000\000\
    \000\000\123\000\187\000\000\000\000\000\000\000\000\000\000\000\
    \160\000\000\000\000\000\000\000\000\000\000\000\000\000\157\000\
    \201\000\000\000\000\000\000\000\157\000\157\000\000\000\000\000\
    \157\000\157\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\157\000\000\000\000\000\000\000\157\000\000\000\157\000\
    \161\000\157\000\000\000\159\000\173\000\173\000\173\000\173\000\
    \173\000\173\000\173\000\173\000\173\000\173\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\173\000\173\000\173\000\
    \173\000\173\000\173\000\166\000\166\000\166\000\166\000\166\000\
    \166\000\166\000\166\000\166\000\166\000\000\000\000\000\000\000\
    \000\000\000\000\186\000\000\000\166\000\166\000\166\000\166\000\
    \166\000\166\000\000\000\000\000\000\000\173\000\173\000\173\000\
    \173\000\173\000\173\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\162\000\162\000\162\000\162\000\162\000\162\000\162\000\
    \162\000\162\000\162\000\000\000\166\000\166\000\166\000\166\000\
    \166\000\166\000\162\000\162\000\162\000\162\000\162\000\162\000\
    \000\000\000\000\000\000\163\000\163\000\163\000\163\000\163\000\
    \163\000\163\000\163\000\163\000\163\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\163\000\163\000\163\000\163\000\
    \163\000\163\000\162\000\162\000\162\000\162\000\162\000\162\000\
    \175\000\175\000\175\000\175\000\175\000\175\000\175\000\175\000\
    \000\000\164\000\164\000\164\000\164\000\164\000\164\000\164\000\
    \164\000\164\000\164\000\255\255\163\000\163\000\163\000\163\000\
    \163\000\163\000\164\000\164\000\164\000\164\000\164\000\164\000\
    \165\000\165\000\165\000\165\000\165\000\165\000\165\000\165\000\
    \165\000\165\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\165\000\165\000\165\000\165\000\165\000\165\000\000\000\
    \000\000\000\000\164\000\164\000\164\000\164\000\164\000\164\000\
    \000\000\000\000\183\000\000\000\000\000\000\000\167\000\167\000\
    \167\000\167\000\167\000\167\000\167\000\167\000\167\000\167\000\
    \183\000\165\000\165\000\165\000\165\000\165\000\165\000\167\000\
    \167\000\167\000\167\000\167\000\167\000\168\000\168\000\168\000\
    \168\000\168\000\168\000\168\000\168\000\168\000\168\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\168\000\168\000\
    \168\000\168\000\168\000\168\000\000\000\000\000\000\000\167\000\
    \167\000\167\000\167\000\167\000\167\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\169\000\169\000\169\000\169\000\169\000\
    \169\000\169\000\169\000\169\000\169\000\000\000\168\000\168\000\
    \168\000\168\000\168\000\168\000\169\000\169\000\169\000\169\000\
    \169\000\169\000\170\000\170\000\170\000\170\000\170\000\170\000\
    \170\000\170\000\170\000\170\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\170\000\170\000\170\000\170\000\170\000\
    \170\000\000\000\000\000\000\000\169\000\169\000\169\000\169\000\
    \169\000\169\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \171\000\171\000\171\000\171\000\171\000\171\000\171\000\171\000\
    \171\000\171\000\000\000\170\000\170\000\170\000\170\000\170\000\
    \170\000\171\000\171\000\171\000\171\000\171\000\171\000\172\000\
    \172\000\172\000\172\000\172\000\172\000\172\000\172\000\172\000\
    \172\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \172\000\172\000\172\000\172\000\172\000\172\000\000\000\000\000\
    \000\000\171\000\171\000\171\000\171\000\171\000\171\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\165\000\165\000\165\000\
    \165\000\165\000\165\000\165\000\165\000\165\000\165\000\000\000\
    \172\000\172\000\172\000\172\000\172\000\172\000\165\000\165\000\
    \165\000\165\000\165\000\165\000\173\000\173\000\173\000\173\000\
    \173\000\173\000\173\000\173\000\173\000\173\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\173\000\173\000\173\000\
    \173\000\173\000\173\000\000\000\000\000\000\000\165\000\165\000\
    \165\000\165\000\165\000\165\000\191\000\184\000\000\000\191\000\
    \191\000\000\000\000\000\000\000\000\000\000\000\193\000\184\000\
    \000\000\193\000\193\000\000\000\000\000\173\000\173\000\173\000\
    \173\000\173\000\173\000\191\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\193\000\000\000\192\000\
    \000\000\000\000\000\000\000\000\190\000\190\000\190\000\190\000\
    \190\000\190\000\190\000\190\000\190\000\190\000\190\000\190\000\
    \190\000\190\000\190\000\190\000\190\000\190\000\190\000\000\000\
    \000\000\000\000\000\000\000\000\191\000\184\000\000\000\191\000\
    \191\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\191\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\189\000\190\000\190\000\190\000\190\000\
    \190\000\190\000\190\000\190\000\190\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\189\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\183\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\183\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\183\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\015\000\000\000\000\000\000\000\
    \016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \017\000\017\000\018\000\019\000\020\000\022\000\022\000\023\000\
    \044\000\045\000\075\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\076\000\043\000\018\000\
    \021\000\018\000\018\000\020\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\043\000\086\000\
    \087\000\116\000\003\000\047\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\024\000\021\000\
    \025\000\032\000\142\000\047\000\073\000\077\000\032\000\085\000\
    \145\000\088\000\208\000\027\000\153\000\027\000\024\000\024\000\
    \027\000\255\255\025\000\255\255\032\000\255\255\255\255\255\255\
    \255\255\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\255\255\073\000\077\000\255\255\085\000\
    \000\000\088\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\255\255\255\255\255\255\255\255\
    \027\000\255\255\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\029\000\255\255\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \030\000\042\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\033\000\255\255\255\255\033\000\
    \033\000\041\000\071\000\255\255\083\000\255\255\255\255\030\000\
    \042\000\255\255\041\000\071\000\255\255\083\000\030\000\255\255\
    \255\255\042\000\255\255\033\000\255\255\072\000\255\255\030\000\
    \084\000\176\000\030\000\031\000\179\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\031\000\030\000\
    \185\000\188\000\041\000\071\000\072\000\083\000\030\000\084\000\
    \153\000\255\255\031\000\255\255\179\000\072\000\176\000\030\000\
    \084\000\031\000\030\000\255\255\186\000\192\000\038\000\194\000\
    \038\000\255\255\031\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\255\255\255\255\255\255\
    \255\255\255\255\031\000\255\255\255\255\192\000\255\255\255\255\
    \255\255\031\000\255\255\255\255\255\255\255\255\039\000\255\255\
    \039\000\203\000\031\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\204\000\040\000\040\000\198\000\049\000\210\000\049\000\
    \255\255\040\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\059\000\059\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\255\255\255\255\
    \255\255\204\000\040\000\040\000\186\000\050\000\255\255\050\000\
    \189\000\040\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\050\000\050\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\061\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \255\255\051\000\051\000\255\255\053\000\255\255\053\000\255\255\
    \051\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\064\000\196\000\255\255\198\000\
    \255\255\051\000\051\000\255\255\054\000\255\255\054\000\255\255\
    \051\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\176\000\
    \189\000\055\000\179\000\255\255\255\255\149\000\149\000\055\000\
    \149\000\149\000\255\255\058\000\255\255\255\255\185\000\188\000\
    \255\255\058\000\060\000\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\149\000\255\255\255\255\149\000\
    \255\255\055\000\186\000\192\000\255\255\194\000\255\255\055\000\
    \060\000\255\255\255\255\058\000\196\000\255\255\060\000\255\255\
    \255\255\058\000\197\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\203\000\
    \060\000\063\000\255\255\255\255\255\255\255\255\060\000\063\000\
    \255\255\255\255\255\255\065\000\255\255\255\255\255\255\199\000\
    \255\255\065\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \066\000\066\000\066\000\066\000\255\255\255\255\255\255\204\000\
    \255\255\063\000\198\000\255\255\210\000\255\255\255\255\063\000\
    \255\255\255\255\255\255\065\000\255\255\255\255\255\255\255\255\
    \255\255\065\000\067\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\068\000\068\000\068\000\068\000\
    \068\000\068\000\068\000\068\000\068\000\068\000\189\000\197\000\
    \067\000\255\255\255\255\255\255\255\255\069\000\067\000\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\095\000\095\000\095\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\255\255\069\000\255\255\199\000\255\255\
    \067\000\193\000\193\000\255\255\193\000\193\000\067\000\255\255\
    \255\255\255\255\070\000\255\255\070\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\070\000\070\000\255\255\255\255\
    \193\000\255\255\193\000\196\000\069\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\255\255\255\255\074\000\255\255\074\000\
    \074\000\074\000\074\000\074\000\074\000\074\000\074\000\074\000\
    \074\000\098\000\098\000\098\000\098\000\098\000\098\000\098\000\
    \098\000\098\000\098\000\255\255\074\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\074\000\255\255\255\255\255\255\255\255\
    \080\000\255\255\080\000\255\255\074\000\080\000\080\000\080\000\
    \080\000\080\000\080\000\080\000\080\000\080\000\080\000\255\255\
    \255\255\255\255\255\255\255\255\074\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\074\000\158\000\158\000\158\000\158\000\
    \158\000\158\000\158\000\158\000\074\000\078\000\078\000\078\000\
    \078\000\078\000\078\000\078\000\078\000\078\000\078\000\255\255\
    \197\000\255\255\255\255\255\255\255\255\255\255\078\000\078\000\
    \078\000\078\000\078\000\078\000\100\000\100\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\255\255\255\255\
    \255\255\079\000\255\255\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\199\000\078\000\078\000\
    \078\000\078\000\078\000\078\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\255\255\255\255\255\255\255\255\255\255\079\000\
    \255\255\255\255\255\255\079\000\081\000\255\255\081\000\255\255\
    \079\000\081\000\081\000\081\000\081\000\081\000\081\000\081\000\
    \081\000\081\000\081\000\255\255\079\000\079\000\079\000\079\000\
    \079\000\079\000\255\255\255\255\255\255\255\255\255\255\079\000\
    \255\255\255\255\255\255\079\000\255\255\255\255\255\255\255\255\
    \079\000\082\000\082\000\082\000\082\000\082\000\082\000\082\000\
    \082\000\082\000\082\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\082\000\082\000\082\000\082\000\082\000\082\000\
    \255\255\255\255\255\255\255\255\255\255\089\000\255\255\089\000\
    \193\000\082\000\089\000\089\000\089\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\082\000\082\000\082\000\082\000\082\000\082\000\
    \255\255\255\255\255\255\255\255\255\255\090\000\255\255\090\000\
    \255\255\082\000\090\000\090\000\090\000\090\000\090\000\090\000\
    \090\000\090\000\090\000\090\000\091\000\091\000\091\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\091\000\091\000\091\000\
    \091\000\091\000\091\000\255\255\255\255\255\255\255\255\255\255\
    \092\000\255\255\092\000\255\255\091\000\092\000\092\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\091\000\091\000\091\000\
    \091\000\091\000\091\000\255\255\255\255\255\255\255\255\255\255\
    \093\000\255\255\093\000\255\255\091\000\093\000\093\000\093\000\
    \093\000\093\000\093\000\093\000\093\000\093\000\093\000\094\000\
    \094\000\094\000\094\000\094\000\094\000\094\000\094\000\094\000\
    \094\000\097\000\097\000\097\000\097\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\255\255\255\255\094\000\255\255\255\255\
    \255\255\255\255\255\255\094\000\255\255\255\255\255\255\097\000\
    \255\255\255\255\255\255\255\255\255\255\097\000\099\000\099\000\
    \099\000\099\000\099\000\099\000\099\000\099\000\099\000\099\000\
    \255\255\255\255\255\255\255\255\255\255\094\000\255\255\255\255\
    \255\255\255\255\255\255\094\000\099\000\255\255\255\255\097\000\
    \255\255\255\255\099\000\255\255\255\255\097\000\255\255\102\000\
    \102\000\102\000\102\000\102\000\102\000\102\000\102\000\102\000\
    \102\000\103\000\103\000\103\000\103\000\103\000\103\000\103\000\
    \103\000\103\000\103\000\255\255\099\000\102\000\255\255\255\255\
    \255\255\255\255\099\000\102\000\104\000\104\000\104\000\104\000\
    \104\000\104\000\104\000\104\000\104\000\104\000\105\000\105\000\
    \105\000\105\000\105\000\105\000\105\000\105\000\105\000\105\000\
    \255\255\255\255\104\000\255\255\255\255\102\000\255\255\255\255\
    \104\000\255\255\255\255\102\000\255\255\106\000\106\000\106\000\
    \106\000\106\000\106\000\106\000\106\000\106\000\106\000\107\000\
    \107\000\107\000\107\000\107\000\107\000\107\000\107\000\107\000\
    \107\000\255\255\104\000\106\000\255\255\255\255\255\255\255\255\
    \104\000\106\000\108\000\108\000\108\000\108\000\108\000\108\000\
    \108\000\108\000\108\000\108\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\108\000\108\000\108\000\108\000\108\000\
    \108\000\200\000\200\000\106\000\200\000\200\000\109\000\255\255\
    \109\000\106\000\108\000\109\000\109\000\109\000\109\000\109\000\
    \109\000\109\000\109\000\109\000\109\000\255\255\255\255\255\255\
    \200\000\255\255\255\255\108\000\108\000\108\000\108\000\108\000\
    \108\000\255\255\255\255\255\255\255\255\255\255\110\000\255\255\
    \110\000\255\255\108\000\110\000\110\000\110\000\110\000\110\000\
    \110\000\110\000\110\000\110\000\110\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\112\000\
    \112\000\112\000\112\000\112\000\112\000\112\000\112\000\112\000\
    \112\000\255\255\255\255\111\000\255\255\255\255\255\255\255\255\
    \255\255\111\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\114\000\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\115\000\115\000\115\000\255\255\255\255\
    \114\000\255\255\255\255\111\000\255\255\255\255\114\000\255\255\
    \255\255\111\000\255\255\255\255\117\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\117\000\122\000\122\000\
    \122\000\122\000\122\000\122\000\122\000\122\000\122\000\122\000\
    \114\000\117\000\117\000\255\255\255\255\119\000\114\000\119\000\
    \117\000\255\255\119\000\119\000\119\000\119\000\119\000\119\000\
    \119\000\119\000\119\000\119\000\125\000\125\000\125\000\125\000\
    \125\000\125\000\125\000\125\000\125\000\125\000\255\255\255\255\
    \255\255\117\000\117\000\255\255\120\000\255\255\120\000\255\255\
    \117\000\120\000\120\000\120\000\120\000\120\000\120\000\120\000\
    \120\000\120\000\120\000\121\000\121\000\121\000\121\000\121\000\
    \121\000\121\000\121\000\121\000\121\000\124\000\124\000\124\000\
    \124\000\124\000\124\000\124\000\124\000\124\000\124\000\255\255\
    \255\255\121\000\255\255\255\255\255\255\155\000\255\255\121\000\
    \255\255\255\255\155\000\124\000\255\255\255\255\255\255\255\255\
    \255\255\124\000\255\255\155\000\155\000\155\000\155\000\155\000\
    \155\000\155\000\155\000\182\000\182\000\255\255\182\000\182\000\
    \255\255\121\000\155\000\255\255\255\255\255\255\255\255\121\000\
    \200\000\201\000\201\000\124\000\201\000\201\000\255\255\255\255\
    \255\255\124\000\182\000\255\255\255\255\255\255\255\255\255\255\
    \155\000\255\255\255\255\255\255\255\255\255\255\255\255\155\000\
    \201\000\255\255\255\255\255\255\155\000\155\000\255\255\255\255\
    \155\000\155\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\155\000\255\255\255\255\255\255\155\000\255\255\155\000\
    \155\000\155\000\255\255\155\000\159\000\159\000\159\000\159\000\
    \159\000\159\000\159\000\159\000\159\000\159\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\159\000\159\000\159\000\
    \159\000\159\000\159\000\160\000\160\000\160\000\160\000\160\000\
    \160\000\160\000\160\000\160\000\160\000\255\255\255\255\255\255\
    \255\255\255\255\182\000\255\255\160\000\160\000\160\000\160\000\
    \160\000\160\000\255\255\255\255\255\255\159\000\159\000\159\000\
    \159\000\159\000\159\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\161\000\161\000\161\000\161\000\161\000\161\000\161\000\
    \161\000\161\000\161\000\255\255\160\000\160\000\160\000\160\000\
    \160\000\160\000\161\000\161\000\161\000\161\000\161\000\161\000\
    \255\255\255\255\255\255\162\000\162\000\162\000\162\000\162\000\
    \162\000\162\000\162\000\162\000\162\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\162\000\162\000\162\000\162\000\
    \162\000\162\000\161\000\161\000\161\000\161\000\161\000\161\000\
    \174\000\174\000\174\000\174\000\174\000\174\000\174\000\174\000\
    \255\255\163\000\163\000\163\000\163\000\163\000\163\000\163\000\
    \163\000\163\000\163\000\155\000\162\000\162\000\162\000\162\000\
    \162\000\162\000\163\000\163\000\163\000\163\000\163\000\163\000\
    \164\000\164\000\164\000\164\000\164\000\164\000\164\000\164\000\
    \164\000\164\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\164\000\164\000\164\000\164\000\164\000\164\000\255\255\
    \255\255\255\255\163\000\163\000\163\000\163\000\163\000\163\000\
    \255\255\255\255\182\000\255\255\255\255\255\255\166\000\166\000\
    \166\000\166\000\166\000\166\000\166\000\166\000\166\000\166\000\
    \201\000\164\000\164\000\164\000\164\000\164\000\164\000\166\000\
    \166\000\166\000\166\000\166\000\166\000\167\000\167\000\167\000\
    \167\000\167\000\167\000\167\000\167\000\167\000\167\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\167\000\167\000\
    \167\000\167\000\167\000\167\000\255\255\255\255\255\255\166\000\
    \166\000\166\000\166\000\166\000\166\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\168\000\168\000\168\000\168\000\168\000\
    \168\000\168\000\168\000\168\000\168\000\255\255\167\000\167\000\
    \167\000\167\000\167\000\167\000\168\000\168\000\168\000\168\000\
    \168\000\168\000\169\000\169\000\169\000\169\000\169\000\169\000\
    \169\000\169\000\169\000\169\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\169\000\169\000\169\000\169\000\169\000\
    \169\000\255\255\255\255\255\255\168\000\168\000\168\000\168\000\
    \168\000\168\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \170\000\170\000\170\000\170\000\170\000\170\000\170\000\170\000\
    \170\000\170\000\255\255\169\000\169\000\169\000\169\000\169\000\
    \169\000\170\000\170\000\170\000\170\000\170\000\170\000\171\000\
    \171\000\171\000\171\000\171\000\171\000\171\000\171\000\171\000\
    \171\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \171\000\171\000\171\000\171\000\171\000\171\000\255\255\255\255\
    \255\255\170\000\170\000\170\000\170\000\170\000\170\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\172\000\172\000\172\000\
    \172\000\172\000\172\000\172\000\172\000\172\000\172\000\255\255\
    \171\000\171\000\171\000\171\000\171\000\171\000\172\000\172\000\
    \172\000\172\000\172\000\172\000\173\000\173\000\173\000\173\000\
    \173\000\173\000\173\000\173\000\173\000\173\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\173\000\173\000\173\000\
    \173\000\173\000\173\000\255\255\255\255\255\255\172\000\172\000\
    \172\000\172\000\172\000\172\000\187\000\187\000\255\255\187\000\
    \187\000\255\255\255\255\255\255\255\255\255\255\190\000\190\000\
    \255\255\190\000\190\000\255\255\255\255\173\000\173\000\173\000\
    \173\000\173\000\173\000\187\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\190\000\255\255\190\000\
    \255\255\255\255\255\255\255\255\187\000\187\000\187\000\187\000\
    \187\000\187\000\187\000\187\000\187\000\190\000\190\000\190\000\
    \190\000\190\000\190\000\190\000\190\000\190\000\190\000\255\255\
    \255\255\255\255\255\255\255\255\191\000\191\000\255\255\191\000\
    \191\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\191\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\187\000\191\000\191\000\191\000\191\000\
    \191\000\191\000\191\000\191\000\191\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\191\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\187\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\190\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\191\000";
  Lexing.lex_base_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\010\000\022\000\044\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\032\000\076\000\
    \098\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \039\000\108\000\120\000\131\000\068\000\141\000\153\000\163\000\
    \173\000\101\000\185\000\195\000\205\000\215\000\129\000\225\000\
    \235\000\245\000\255\000\009\001\019\001\031\001\053\001\000\000\
    \000\000\000\000\087\001\000\000\000\000\000\000\109\001\147\001\
    \041\001\180\001\212\001\000\000\000\000\000\000\000\000\000\000\
    \000\000\245\001\021\002\031\002\064\002\096\002\106\002\116\002\
    \174\000\126\002\136\002\146\002\156\002\202\000\166\002\176\002\
    \186\002\196\002\206\002\216\002\226\002\003\003\035\003\045\003\
    \055\003\228\000\065\003\075\003\000\000\085\003\252\000\095\003\
    \107\003\117\003\127\003\020\001\139\003\149\003\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\017\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\159\003\039\001\000\000\000\000\
    \000\000\000\000\000\000\000\000\182\003\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\253\003\000\000\000\000\219\003\023\004\
    \135\001\000\000\000\000\063\001\000\000\000\000\000\000\000\000\
    \005\000\007\000\072\001\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_backtrk_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \028\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\050\000\000\000\000\000\000\000\081\000\
    \000\000\000\000\081\000\000\000\116\000\000\000\000\000\116\000\
    \000\000\116\000\000\000\116\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\159\000\000\000\
    \000\000\159\000\000\000\189\000\000\000\000\000\189\000\000\000\
    \189\000\000\000\189\000\000\000\000\000\000\000\000\000\215\000\
    \000\000\000\000\215\000\000\000\000\000\241\000\000\000\000\000\
    \000\000\007\001\000\000\000\000\007\001\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_default_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \055\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_trans_code = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\044\001\000\000\000\000\044\001\044\001\001\000\000\000\
    \001\000\001\000\001\000\001\000\001\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \044\001\000\000\058\001\000\000\000\000\001\000\000\000\001\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\012\000\000\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\012\000\017\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\033\001\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\
    \000\000\017\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\017\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\033\001\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\
    \000\000\017\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\000\000\017\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\000\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\017\000\
    \017\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\000\000\
    \017\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\012\000\000\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\142\000\017\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\017\000\012\000\000\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\000\000\000\000\000\000\000\000\000\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\017\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\148\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\017\000\000\000\000\000\000\000\
    \000\000\142\000\000\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\000\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\151\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\151\000\148\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\151\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\151\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\148\000\148\000\
    \148\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\151\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\151\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\148\000\148\000\148\000\148\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\148\000\148\000\148\000\148\000\148\000\
    \148\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\151\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\148\000\148\000\148\000\148\000\148\000\
    \148\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\151\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\154\000\154\000\154\000\
    \154\000\154\000\154\000\154\000\154\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\000\000\017\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\000\000\017\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\096\000\
    \096\000\096\000\096\000\096\000\096\000\096\000\096\000\036\001\
    \036\001\036\001\036\001\036\001\036\001\036\001\036\001\036\001\
    \036\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \036\001\036\001\036\001\036\001\036\001\036\001\036\001\036\001\
    \036\001\036\001\036\001\036\001\036\001\036\001\036\001\036\001\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\001\
    \036\001\036\001\036\001\036\001\036\001\050\001\000\000\000\000\
    \036\001\036\001\036\001\036\001\036\001\036\001\044\001\000\000\
    \000\000\044\001\044\001\047\001\047\001\047\001\047\001\047\001\
    \047\001\047\001\047\001\047\001\047\001\000\000\000\000\036\001\
    \036\001\036\001\036\001\036\001\036\001\044\001\000\000\000\000\
    \044\001\000\000\000\000\044\001\044\001\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\047\001\047\001\
    \047\001\047\001\047\001\047\001\047\001\047\001\047\001\044\001\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \047\001\047\001\047\001\047\001\047\001\047\001\047\001\047\001\
    \047\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check_code = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\182\000\255\255\255\255\182\000\182\000\200\000\255\255\
    \201\000\200\000\200\000\201\000\201\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \182\000\255\255\193\000\255\255\255\255\200\000\255\255\201\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\030\000\255\255\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\031\000\030\000\031\000\031\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\155\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\030\000\255\255\
    \255\255\031\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\030\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\155\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\030\000\255\255\
    \255\255\031\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\255\255\040\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\255\255\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\040\000\
    \051\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\054\000\054\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\255\255\
    \051\000\058\000\058\000\058\000\058\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\059\000\059\000\059\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\060\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\064\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \066\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\068\000\068\000\068\000\068\000\068\000\
    \068\000\068\000\068\000\068\000\068\000\069\000\255\255\069\000\
    \069\000\069\000\069\000\069\000\069\000\069\000\069\000\069\000\
    \069\000\080\000\080\000\080\000\080\000\080\000\080\000\080\000\
    \080\000\080\000\080\000\070\000\069\000\070\000\070\000\070\000\
    \070\000\070\000\070\000\070\000\070\000\070\000\070\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\070\000\070\000\
    \070\000\070\000\070\000\070\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\069\000\074\000\255\255\074\000\
    \074\000\074\000\074\000\074\000\074\000\074\000\074\000\074\000\
    \074\000\192\000\255\255\255\255\255\255\255\255\070\000\070\000\
    \070\000\070\000\070\000\070\000\074\000\078\000\078\000\078\000\
    \078\000\078\000\078\000\078\000\078\000\078\000\078\000\255\255\
    \255\255\192\000\255\255\255\255\255\255\255\255\078\000\078\000\
    \078\000\078\000\078\000\078\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\074\000\255\255\255\255\255\255\
    \255\255\079\000\255\255\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\255\255\078\000\078\000\
    \078\000\078\000\078\000\078\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\079\000\081\000\081\000\081\000\081\000\
    \081\000\081\000\081\000\081\000\081\000\081\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\079\000\079\000\079\000\079\000\
    \079\000\079\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\079\000\082\000\082\000\082\000\082\000\
    \082\000\082\000\082\000\082\000\082\000\082\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\082\000\082\000\082\000\
    \082\000\082\000\082\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\082\000\089\000\089\000\089\000\
    \089\000\089\000\089\000\089\000\089\000\089\000\089\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\082\000\082\000\082\000\
    \082\000\082\000\082\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\082\000\090\000\090\000\090\000\
    \090\000\090\000\090\000\090\000\090\000\090\000\090\000\091\000\
    \091\000\091\000\091\000\091\000\091\000\091\000\091\000\091\000\
    \091\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \091\000\091\000\091\000\091\000\091\000\091\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\091\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \092\000\092\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \091\000\091\000\091\000\091\000\091\000\091\000\255\255\192\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\091\000\
    \093\000\093\000\093\000\093\000\093\000\093\000\093\000\093\000\
    \093\000\093\000\094\000\094\000\094\000\094\000\094\000\094\000\
    \094\000\094\000\094\000\094\000\095\000\095\000\095\000\095\000\
    \095\000\095\000\095\000\095\000\095\000\095\000\097\000\097\000\
    \097\000\097\000\097\000\097\000\097\000\097\000\097\000\097\000\
    \098\000\098\000\098\000\098\000\098\000\098\000\098\000\098\000\
    \098\000\098\000\099\000\099\000\099\000\099\000\099\000\099\000\
    \099\000\099\000\099\000\099\000\100\000\100\000\100\000\100\000\
    \100\000\100\000\100\000\100\000\100\000\100\000\102\000\102\000\
    \102\000\102\000\102\000\102\000\102\000\102\000\102\000\102\000\
    \103\000\103\000\103\000\103\000\103\000\103\000\103\000\103\000\
    \103\000\103\000\104\000\104\000\104\000\104\000\104\000\104\000\
    \104\000\104\000\104\000\104\000\105\000\105\000\105\000\105\000\
    \105\000\105\000\105\000\105\000\105\000\105\000\106\000\106\000\
    \106\000\106\000\106\000\106\000\106\000\106\000\106\000\106\000\
    \107\000\107\000\107\000\107\000\107\000\107\000\107\000\107\000\
    \107\000\107\000\108\000\108\000\108\000\108\000\108\000\108\000\
    \108\000\108\000\108\000\108\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\108\000\108\000\108\000\108\000\108\000\
    \108\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\108\000\109\000\109\000\109\000\109\000\109\000\
    \109\000\109\000\109\000\109\000\109\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\108\000\108\000\108\000\108\000\108\000\
    \108\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\108\000\110\000\110\000\110\000\110\000\110\000\
    \110\000\110\000\110\000\110\000\110\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\112\000\
    \112\000\112\000\112\000\112\000\112\000\112\000\112\000\112\000\
    \112\000\114\000\114\000\114\000\114\000\114\000\114\000\114\000\
    \114\000\114\000\114\000\115\000\115\000\115\000\115\000\115\000\
    \115\000\115\000\115\000\115\000\115\000\117\000\117\000\117\000\
    \117\000\117\000\117\000\117\000\117\000\117\000\117\000\119\000\
    \119\000\119\000\119\000\119\000\119\000\119\000\119\000\119\000\
    \119\000\255\255\117\000\120\000\120\000\120\000\120\000\120\000\
    \120\000\120\000\120\000\120\000\120\000\121\000\121\000\121\000\
    \121\000\121\000\121\000\121\000\121\000\121\000\121\000\122\000\
    \122\000\122\000\122\000\122\000\122\000\122\000\122\000\122\000\
    \122\000\255\255\117\000\124\000\124\000\124\000\124\000\124\000\
    \124\000\124\000\124\000\124\000\124\000\125\000\125\000\125\000\
    \125\000\125\000\125\000\125\000\125\000\125\000\125\000\164\000\
    \164\000\164\000\164\000\164\000\164\000\164\000\164\000\164\000\
    \164\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \164\000\164\000\164\000\164\000\164\000\164\000\172\000\172\000\
    \172\000\172\000\172\000\172\000\172\000\172\000\172\000\172\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\172\000\
    \172\000\172\000\172\000\172\000\172\000\190\000\255\255\255\255\
    \164\000\164\000\164\000\164\000\164\000\164\000\187\000\255\255\
    \255\255\187\000\187\000\190\000\190\000\190\000\190\000\190\000\
    \190\000\190\000\190\000\190\000\190\000\255\255\255\255\172\000\
    \172\000\172\000\172\000\172\000\172\000\187\000\255\255\255\255\
    \191\000\255\255\255\255\191\000\191\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\187\000\187\000\
    \187\000\187\000\187\000\187\000\187\000\187\000\187\000\191\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \191\000\191\000\191\000\191\000\191\000\191\000\191\000\191\000\
    \191\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_code = 
   "\255\008\255\255\009\255\255\012\255\011\255\255\011\255\008\255\
    \255\010\255\255\014\255\255\013\255\011\255\255\006\255\003\255\
    \001\255\005\007\004\009\255\003\255\001\255\006\011\005\007\004\
    \009\255\006\255\001\255\005\007\004\009\003\008\002\012\255\011\
    \255\012\255\255\001\255\006\011\005\007\004\009\003\008\002\012\
    \255\006\255\005\007\004\009\003\008\002\012\001\010\000\013\255\
    \011\255\013\255\255\006\011\005\007\004\009\003\008\002\012\001\
    \010\000\013\255\006\255\003\255\005\007\004\009\001\010\000\013\
    \255\003\255\006\011\005\007\004\009\001\010\000\013\255\015\255\
    \255\016\255\255\018\255\255\017\255\255\020\255\019\255\255\006\
    \255\005\014\004\016\003\015\002\018\001\017\000\019\255\006\020\
    \005\014\004\016\003\015\002\018\001\017\000\019\255\006\255\003\
    \255\005\014\004\016\001\017\000\019\255\003\255\006\020\005\014\
    \004\016\001\017\000\019\255\006\255\005\255\003\015\002\018\001\
    \017\000\019\255\005\255\006\020\003\015\002\018\001\017\000\019\
    \255\006\255\005\255\001\255\003\008\002\012\255\005\255\001\255\
    \006\011\003\008\002\012\255\006\255\005\255\003\008\002\012\001\
    \010\000\013\255\005\255\006\011\003\008\002\012\001\010\000\013\
    \255\002\255\255\003\255\255\001\002\000\003\255\004\255\255\005\
    \255\255\007\255\006\255\255\007\255\255\006\255\007\255\255\000\
    \004\001\005\002\006\003\007\255\000\008\255";
}

let rec initial lexbuf =
  lexbuf.Lexing.lex_mem <- Array.create 21 (-1) ; (* L=1 [7] <- p ;  *)
  lexbuf.Lexing.lex_mem.(7) <- lexbuf.Lexing.lex_curr_pos ;
  __ocaml_lex_initial_rec lexbuf 0
and __ocaml_lex_initial_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 246 "cparser/Lexer.mll"
                                  ( new_line lexbuf; initial_linebegin lexbuf )
# 1274 "cparser/Lexer.ml"

  | 1 ->
# 247 "cparser/Lexer.mll"
                                  ( initial lexbuf )
# 1279 "cparser/Lexer.ml"

  | 2 ->
# 248 "cparser/Lexer.mll"
                                  ( multiline_comment lexbuf; initial lexbuf )
# 1284 "cparser/Lexer.ml"

  | 3 ->
# 249 "cparser/Lexer.mll"
                                  ( singleline_comment lexbuf; initial lexbuf )
# 1289 "cparser/Lexer.ml"

  | 4 ->
let
# 250 "cparser/Lexer.mll"
                        s
# 1295 "cparser/Lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 250 "cparser/Lexer.mll"
                                  ( CONSTANT (Cabs.CONST_INT s, currentLoc lexbuf) )
# 1299 "cparser/Lexer.ml"

  | 5 ->
let
# 206 "cparser/Lexer.mll"
                                           suffix
# 1305 "cparser/Lexer.ml"
= Lexing.sub_lexeme_char_opt lexbuf lexbuf.Lexing.lex_mem.(6)
and
# 209 "cparser/Lexer.mll"
                       intpart
# 1310 "cparser/Lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(5) lexbuf.Lexing.lex_mem.(4)
and
# 209 "cparser/Lexer.mll"
                                                        frac
# 1315 "cparser/Lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(3) lexbuf.Lexing.lex_mem.(2)
and
# 212 "cparser/Lexer.mll"
                                   expo
# 1320 "cparser/Lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(1) lexbuf.Lexing.lex_mem.(0) in
# 251 "cparser/Lexer.mll"
                                  ( CONSTANT (Cabs.CONST_FLOAT
                                      {Cabs.isHex_FI = false;
                                       Cabs.integer_FI = intpart;
                                       Cabs.fraction_FI = frac;
                                       Cabs.exponent_FI = expo;
                                       Cabs.suffix_FI =
                                         match suffix with
                                         | None -> None
                                         | Some c -> Some (String.make 1 c) },
                                      currentLoc lexbuf) )
# 1333 "cparser/Lexer.ml"

  | 6 ->
let
# 206 "cparser/Lexer.mll"
                                           suffix
# 1339 "cparser/Lexer.ml"
= Lexing.sub_lexeme_char_opt lexbuf lexbuf.Lexing.lex_mem.(6)
and
# 220 "cparser/Lexer.mll"
                                   intpart
# 1344 "cparser/Lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(5) lexbuf.Lexing.lex_mem.(4)
and
# 220 "cparser/Lexer.mll"
                                                                                frac
# 1349 "cparser/Lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(3) lexbuf.Lexing.lex_mem.(2)
and
# 223 "cparser/Lexer.mll"
                                   expo
# 1354 "cparser/Lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(1) lexbuf.Lexing.lex_mem.(0) in
# 261 "cparser/Lexer.mll"
                                  ( CONSTANT (Cabs.CONST_FLOAT
                                      {Cabs.isHex_FI = true;
                                       Cabs.integer_FI = intpart;
                                       Cabs.fraction_FI = frac;
                                       Cabs.exponent_FI = Some expo;
                                       Cabs.suffix_FI =
                                         match suffix with
                                           | None -> None
                                           | Some c -> Some (String.make 1 c) },
                                      currentLoc lexbuf))
# 1367 "cparser/Lexer.ml"

  | 7 ->
# 271 "cparser/Lexer.mll"
                                  ( let l = char_literal [] lexbuf in
                                    CONSTANT (Cabs.CONST_CHAR(false, l),
                                              currentLoc lexbuf) )
# 1374 "cparser/Lexer.ml"

  | 8 ->
# 274 "cparser/Lexer.mll"
                                  ( let l = char_literal [] lexbuf in
                                    CONSTANT (Cabs.CONST_CHAR(true, l),
                                              currentLoc lexbuf) )
# 1381 "cparser/Lexer.ml"

  | 9 ->
# 277 "cparser/Lexer.mll"
                                  ( let l = string_literal [] lexbuf in
                                    STRING_LITERAL(false, l, currentLoc lexbuf) )
# 1387 "cparser/Lexer.ml"

  | 10 ->
# 279 "cparser/Lexer.mll"
                                  ( let l = string_literal [] lexbuf in
                                    STRING_LITERAL(true, l, currentLoc lexbuf) )
# 1393 "cparser/Lexer.ml"

  | 11 ->
# 281 "cparser/Lexer.mll"
                                  ( ELLIPSIS(currentLoc lexbuf) )
# 1398 "cparser/Lexer.ml"

  | 12 ->
# 282 "cparser/Lexer.mll"
                                  ( ADD_ASSIGN(currentLoc lexbuf) )
# 1403 "cparser/Lexer.ml"

  | 13 ->
# 283 "cparser/Lexer.mll"
                                  ( SUB_ASSIGN(currentLoc lexbuf) )
# 1408 "cparser/Lexer.ml"

  | 14 ->
# 284 "cparser/Lexer.mll"
                                  ( MUL_ASSIGN(currentLoc lexbuf) )
# 1413 "cparser/Lexer.ml"

  | 15 ->
# 285 "cparser/Lexer.mll"
                                  ( DIV_ASSIGN(currentLoc lexbuf) )
# 1418 "cparser/Lexer.ml"

  | 16 ->
# 286 "cparser/Lexer.mll"
                                  ( MOD_ASSIGN(currentLoc lexbuf) )
# 1423 "cparser/Lexer.ml"

  | 17 ->
# 287 "cparser/Lexer.mll"
                                  ( OR_ASSIGN(currentLoc lexbuf) )
# 1428 "cparser/Lexer.ml"

  | 18 ->
# 288 "cparser/Lexer.mll"
                                  ( AND_ASSIGN(currentLoc lexbuf) )
# 1433 "cparser/Lexer.ml"

  | 19 ->
# 289 "cparser/Lexer.mll"
                                  ( XOR_ASSIGN(currentLoc lexbuf) )
# 1438 "cparser/Lexer.ml"

  | 20 ->
# 290 "cparser/Lexer.mll"
                                  ( LEFT_ASSIGN(currentLoc lexbuf) )
# 1443 "cparser/Lexer.ml"

  | 21 ->
# 291 "cparser/Lexer.mll"
                                  ( RIGHT_ASSIGN(currentLoc lexbuf) )
# 1448 "cparser/Lexer.ml"

  | 22 ->
# 292 "cparser/Lexer.mll"
                                  ( LEFT(currentLoc lexbuf) )
# 1453 "cparser/Lexer.ml"

  | 23 ->
# 293 "cparser/Lexer.mll"
                                  ( RIGHT(currentLoc lexbuf) )
# 1458 "cparser/Lexer.ml"

  | 24 ->
# 294 "cparser/Lexer.mll"
                                  ( EQEQ(currentLoc lexbuf) )
# 1463 "cparser/Lexer.ml"

  | 25 ->
# 295 "cparser/Lexer.mll"
                                  ( NEQ(currentLoc lexbuf) )
# 1468 "cparser/Lexer.ml"

  | 26 ->
# 296 "cparser/Lexer.mll"
                                  ( LEQ(currentLoc lexbuf) )
# 1473 "cparser/Lexer.ml"

  | 27 ->
# 297 "cparser/Lexer.mll"
                                  ( GEQ(currentLoc lexbuf) )
# 1478 "cparser/Lexer.ml"

  | 28 ->
# 298 "cparser/Lexer.mll"
                                  ( EQ(currentLoc lexbuf) )
# 1483 "cparser/Lexer.ml"

  | 29 ->
# 299 "cparser/Lexer.mll"
                                  ( LT(currentLoc lexbuf) )
# 1488 "cparser/Lexer.ml"

  | 30 ->
# 300 "cparser/Lexer.mll"
                                  ( GT(currentLoc lexbuf) )
# 1493 "cparser/Lexer.ml"

  | 31 ->
# 301 "cparser/Lexer.mll"
                                  ( INC(currentLoc lexbuf) )
# 1498 "cparser/Lexer.ml"

  | 32 ->
# 302 "cparser/Lexer.mll"
                                  ( DEC(currentLoc lexbuf) )
# 1503 "cparser/Lexer.ml"

  | 33 ->
# 303 "cparser/Lexer.mll"
                                  ( PTR(currentLoc lexbuf) )
# 1508 "cparser/Lexer.ml"

  | 34 ->
# 304 "cparser/Lexer.mll"
                                  ( PLUS(currentLoc lexbuf) )
# 1513 "cparser/Lexer.ml"

  | 35 ->
# 305 "cparser/Lexer.mll"
                                  ( MINUS(currentLoc lexbuf) )
# 1518 "cparser/Lexer.ml"

  | 36 ->
# 306 "cparser/Lexer.mll"
                                  ( STAR(currentLoc lexbuf) )
# 1523 "cparser/Lexer.ml"

  | 37 ->
# 307 "cparser/Lexer.mll"
                                  ( SLASH(currentLoc lexbuf) )
# 1528 "cparser/Lexer.ml"

  | 38 ->
# 308 "cparser/Lexer.mll"
                                  ( PERCENT(currentLoc lexbuf) )
# 1533 "cparser/Lexer.ml"

  | 39 ->
# 309 "cparser/Lexer.mll"
                                  ( BANG(currentLoc lexbuf) )
# 1538 "cparser/Lexer.ml"

  | 40 ->
# 310 "cparser/Lexer.mll"
                                  ( ANDAND(currentLoc lexbuf) )
# 1543 "cparser/Lexer.ml"

  | 41 ->
# 311 "cparser/Lexer.mll"
                                  ( BARBAR(currentLoc lexbuf) )
# 1548 "cparser/Lexer.ml"

  | 42 ->
# 312 "cparser/Lexer.mll"
                                  ( AND(currentLoc lexbuf) )
# 1553 "cparser/Lexer.ml"

  | 43 ->
# 313 "cparser/Lexer.mll"
                                  ( BAR(currentLoc lexbuf) )
# 1558 "cparser/Lexer.ml"

  | 44 ->
# 314 "cparser/Lexer.mll"
                                  ( HAT(currentLoc lexbuf) )
# 1563 "cparser/Lexer.ml"

  | 45 ->
# 315 "cparser/Lexer.mll"
                                  ( QUESTION(currentLoc lexbuf) )
# 1568 "cparser/Lexer.ml"

  | 46 ->
# 316 "cparser/Lexer.mll"
                                  ( COLON(currentLoc lexbuf) )
# 1573 "cparser/Lexer.ml"

  | 47 ->
# 317 "cparser/Lexer.mll"
                                  ( TILDE(currentLoc lexbuf) )
# 1578 "cparser/Lexer.ml"

  | 48 ->
# 318 "cparser/Lexer.mll"
                                  ( LBRACE(currentLoc lexbuf) )
# 1583 "cparser/Lexer.ml"

  | 49 ->
# 319 "cparser/Lexer.mll"
                                  ( RBRACE(currentLoc lexbuf) )
# 1588 "cparser/Lexer.ml"

  | 50 ->
# 320 "cparser/Lexer.mll"
                                  ( LBRACK(currentLoc lexbuf) )
# 1593 "cparser/Lexer.ml"

  | 51 ->
# 321 "cparser/Lexer.mll"
                                  ( RBRACK(currentLoc lexbuf) )
# 1598 "cparser/Lexer.ml"

  | 52 ->
# 322 "cparser/Lexer.mll"
                                  ( LPAREN(currentLoc lexbuf) )
# 1603 "cparser/Lexer.ml"

  | 53 ->
# 323 "cparser/Lexer.mll"
                                  ( RPAREN(currentLoc lexbuf) )
# 1608 "cparser/Lexer.ml"

  | 54 ->
# 324 "cparser/Lexer.mll"
                                  ( SEMICOLON(currentLoc lexbuf) )
# 1613 "cparser/Lexer.ml"

  | 55 ->
# 325 "cparser/Lexer.mll"
                                  ( COMMA(currentLoc lexbuf) )
# 1618 "cparser/Lexer.ml"

  | 56 ->
# 326 "cparser/Lexer.mll"
                                  ( DOT(currentLoc lexbuf) )
# 1623 "cparser/Lexer.ml"

  | 57 ->
let
# 327 "cparser/Lexer.mll"
                  id
# 1629 "cparser/Lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 327 "cparser/Lexer.mll"
                                  (
        try Hashtbl.find lexicon id (currentLoc lexbuf)
        with Not_found -> VAR_NAME (id, ref VarId, currentLoc lexbuf) )
# 1635 "cparser/Lexer.ml"

  | 58 ->
# 330 "cparser/Lexer.mll"
                                  ( EOF )
# 1640 "cparser/Lexer.ml"

  | 59 ->
let
# 331 "cparser/Lexer.mll"
         c
# 1646 "cparser/Lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 331 "cparser/Lexer.mll"
                                  ( fatal_error lexbuf "invalid symbol %C" c )
# 1650 "cparser/Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_initial_rec lexbuf __ocaml_lex_state

and initial_linebegin lexbuf =
    __ocaml_lex_initial_linebegin_rec lexbuf 149
and __ocaml_lex_initial_linebegin_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 334 "cparser/Lexer.mll"
                                  ( new_line lexbuf; initial_linebegin lexbuf )
# 1661 "cparser/Lexer.ml"

  | 1 ->
# 335 "cparser/Lexer.mll"
                                  ( initial_linebegin lexbuf )
# 1666 "cparser/Lexer.ml"

  | 2 ->
# 336 "cparser/Lexer.mll"
                                  ( hash lexbuf )
# 1671 "cparser/Lexer.ml"

  | 3 ->
# 337 "cparser/Lexer.mll"
                                  ( initial lexbuf )
# 1676 "cparser/Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_initial_linebegin_rec lexbuf __ocaml_lex_state

and char lexbuf =
  lexbuf.Lexing.lex_mem <- Array.create 4 (-1) ;   __ocaml_lex_char_rec lexbuf 153
and __ocaml_lex_char_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 165 "cparser/Lexer.mll"
                       n
# 1688 "cparser/Lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(1) lexbuf.Lexing.lex_mem.(0) in
# 341 "cparser/Lexer.mll"
      ( try
          Int64.of_string ("0x" ^ n)
        with Failure _ ->
          error lexbuf "overflow in universal character name";
          0L
      )
# 1697 "cparser/Lexer.ml"

  | 1 ->
let
# 238 "cparser/Lexer.mll"
                                                               n
# 1703 "cparser/Lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_curr_pos in
# 348 "cparser/Lexer.mll"
      ( try
          Int64.of_string ("0x" ^ n)
        with Failure _ ->
          error lexbuf "overflow in hexadecimal escape sequence";
          0L
      )
# 1712 "cparser/Lexer.ml"

  | 2 ->
let
# 237 "cparser/Lexer.mll"
                                                   n
# 1718 "cparser/Lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 355 "cparser/Lexer.mll"
      ( Int64.of_string  ("0o" ^ n) )
# 1722 "cparser/Lexer.ml"

  | 3 ->
let
# 233 "cparser/Lexer.mll"
                                                                            c
# 1728 "cparser/Lexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 357 "cparser/Lexer.mll"
      ( convert_escape c )
# 1732 "cparser/Lexer.ml"

  | 4 ->
let
# 358 "cparser/Lexer.mll"
               c
# 1738 "cparser/Lexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 359 "cparser/Lexer.mll"
      ( warning lexbuf "incorrect escape sequence '\\%c', treating as '%c'" c c;
        Int64.of_int (Char.code c) )
# 1743 "cparser/Lexer.ml"

  | 5 ->
let
# 361 "cparser/Lexer.mll"
         c
# 1749 "cparser/Lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 362 "cparser/Lexer.mll"
      ( Int64.of_int (Char.code c) )
# 1753 "cparser/Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_char_rec lexbuf __ocaml_lex_state

and char_literal accu lexbuf =
    __ocaml_lex_char_literal_rec accu lexbuf 176
and __ocaml_lex_char_literal_rec accu lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 365 "cparser/Lexer.mll"
               ( List.rev accu )
# 1764 "cparser/Lexer.ml"

  | 1 ->
# 366 "cparser/Lexer.mll"
               ( fatal_error lexbuf "missing terminating \"'\" character" )
# 1769 "cparser/Lexer.ml"

  | 2 ->
# 367 "cparser/Lexer.mll"
               ( let c = char lexbuf in char_literal (c :: accu) lexbuf )
# 1774 "cparser/Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_char_literal_rec accu lexbuf __ocaml_lex_state

and string_literal accu lexbuf =
    __ocaml_lex_string_literal_rec accu lexbuf 179
and __ocaml_lex_string_literal_rec accu lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 370 "cparser/Lexer.mll"
               ( List.rev accu )
# 1785 "cparser/Lexer.ml"

  | 1 ->
# 371 "cparser/Lexer.mll"
               ( fatal_error lexbuf "missing terminating '\"' character" )
# 1790 "cparser/Lexer.ml"

  | 2 ->
# 372 "cparser/Lexer.mll"
               ( let c = char lexbuf in string_literal (c :: accu) lexbuf )
# 1795 "cparser/Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_string_literal_rec accu lexbuf __ocaml_lex_state

and hash lexbuf =
  lexbuf.Lexing.lex_mem <- Array.create 9 (-1) ;   __ocaml_lex_hash_rec lexbuf 182
and __ocaml_lex_hash_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 377 "cparser/Lexer.mll"
                         n
# 1807 "cparser/Lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_mem.(1)
and
# 379 "cparser/Lexer.mll"
                            file
# 1812 "cparser/Lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(2) lexbuf.Lexing.lex_mem.(3) in
# 381 "cparser/Lexer.mll"
      ( let n =
          try
            int_of_string n
          with Failure _ ->
            warning lexbuf "invalid line number"; lexbuf.lex_curr_p.pos_lnum
        in
        lexbuf.lex_curr_p <- {
          lexbuf.lex_curr_p with
            pos_fname = file;
            pos_lnum = n;
            pos_bol = lexbuf.lex_curr_p.pos_cnum
        };
        initial_linebegin lexbuf )
# 1828 "cparser/Lexer.ml"

  | 1 ->
let
# 397 "cparser/Lexer.mll"
                  s
# 1834 "cparser/Lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) (lexbuf.Lexing.lex_curr_pos + -1) in
# 398 "cparser/Lexer.mll"
      ( new_line lexbuf; PRAGMA (s, currentLoc lexbuf) )
# 1838 "cparser/Lexer.ml"

  | 2 ->
# 400 "cparser/Lexer.mll"
      ( warning lexbuf "unrecognized '#' line";
        new_line lexbuf; initial_linebegin lexbuf )
# 1844 "cparser/Lexer.ml"

  | 3 ->
# 403 "cparser/Lexer.mll"
      ( fatal_error lexbuf "unexpected end of file" )
# 1849 "cparser/Lexer.ml"

  | 4 ->
let
# 404 "cparser/Lexer.mll"
         c
# 1855 "cparser/Lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 405 "cparser/Lexer.mll"
      ( fatal_error lexbuf "invalid symbol %C" c )
# 1859 "cparser/Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_hash_rec lexbuf __ocaml_lex_state

and multiline_comment lexbuf =
    __ocaml_lex_multiline_comment_rec lexbuf 204
and __ocaml_lex_multiline_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 409 "cparser/Lexer.mll"
           ( () )
# 1870 "cparser/Lexer.ml"

  | 1 ->
# 410 "cparser/Lexer.mll"
           ( error lexbuf "unterminated comment" )
# 1875 "cparser/Lexer.ml"

  | 2 ->
# 411 "cparser/Lexer.mll"
           ( new_line lexbuf; multiline_comment lexbuf )
# 1880 "cparser/Lexer.ml"

  | 3 ->
# 412 "cparser/Lexer.mll"
           ( multiline_comment lexbuf )
# 1885 "cparser/Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_multiline_comment_rec lexbuf __ocaml_lex_state

and singleline_comment lexbuf =
    __ocaml_lex_singleline_comment_rec lexbuf 210
and __ocaml_lex_singleline_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 416 "cparser/Lexer.mll"
           ( new_line lexbuf )
# 1896 "cparser/Lexer.ml"

  | 1 ->
# 417 "cparser/Lexer.mll"
           ( () )
# 1901 "cparser/Lexer.ml"

  | 2 ->
# 418 "cparser/Lexer.mll"
           ( singleline_comment lexbuf )
# 1906 "cparser/Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_singleline_comment_rec lexbuf __ocaml_lex_state

;;

# 420 "cparser/Lexer.mll"
 
  open Streams
  open Specif
  open Parser
  open Aut.GramDefs

  let tokens_stream lexbuf : token coq_Stream =
    let tokens = Queue.create () in
    let lexer_wraper lexbuf : Pre_parser.token =
      let res =
        if lexbuf.lex_curr_p.pos_cnum = lexbuf.lex_curr_p.pos_bol then
          initial_linebegin lexbuf
        else
          initial lexbuf
      in
      Queue.push res tokens;
      res
    in
    Pre_parser.translation_unit_file lexer_wraper lexbuf;
    assert (!contexts = []);
    let rec compute_token_stream () =
      let loop t v =
        Cons (Coq_existT (t, Obj.magic v), Lazy.from_fun compute_token_stream)
      in
      match Queue.pop tokens with
      | ADD_ASSIGN loc -> loop ADD_ASSIGN't loc
      | AND loc -> loop AND't loc
      | ANDAND loc -> loop ANDAND't loc
      | AND_ASSIGN loc -> loop AND_ASSIGN't loc
      | AUTO loc -> loop AUTO't loc
      | BANG loc -> loop BANG't loc
      | BAR loc -> loop BAR't loc
      | BARBAR loc -> loop BARBAR't loc
      | UNDERSCORE_BOOL loc -> loop UNDERSCORE_BOOL't loc
      | BREAK loc -> loop BREAK't loc
      | BUILTIN_VA_ARG loc -> loop BUILTIN_VA_ARG't loc
      | CASE loc -> loop CASE't loc
      | CHAR loc -> loop CHAR't loc
      | COLON loc -> loop COLON't loc
      | COMMA loc -> loop COMMA't loc
      | CONST loc -> loop CONST't loc
      | CONSTANT (cst, loc) -> loop CONSTANT't (cst, loc)
      | CONTINUE loc -> loop CONTINUE't loc
      | DEC loc -> loop DEC't loc
      | DEFAULT loc -> loop DEFAULT't loc
      | DIV_ASSIGN loc -> loop DIV_ASSIGN't loc
      | DO loc -> loop DO't loc
      | DOT loc -> loop DOT't loc
      | DOUBLE loc -> loop DOUBLE't loc
      | ELLIPSIS loc -> loop ELLIPSIS't loc
      | ELSE loc -> loop ELSE't loc
      | ENUM loc -> loop ENUM't loc
      | EOF -> loop EOF't ()
      | EQ loc -> loop EQ't loc
      | EQEQ loc -> loop EQEQ't loc
      | EXTERN loc -> loop EXTERN't loc
      | FLOAT loc -> loop FLOAT't loc
      | FOR loc -> loop FOR't loc
      | GEQ loc -> loop GEQ't loc
      | GOTO loc -> loop GOTO't loc
      | GT loc -> loop GT't loc
      | HAT loc -> loop HAT't loc
      | IF loc -> loop IF't loc
      | INC loc -> loop INC't loc
      | INLINE loc -> loop INLINE't loc
      | INT loc -> loop INT't loc
      | LBRACE loc -> loop LBRACE't loc
      | LBRACK loc -> loop LBRACK't loc
      | LEFT loc -> loop LEFT't loc
      | LEFT_ASSIGN loc -> loop LEFT_ASSIGN't loc
      | LEQ loc -> loop LEQ't loc
      | LONG loc -> loop LONG't loc
      | LPAREN loc -> loop LPAREN't loc
      | LT loc -> loop LT't loc
      | MINUS loc -> loop MINUS't loc
      | MOD_ASSIGN loc -> loop MOD_ASSIGN't loc
      | MUL_ASSIGN loc -> loop MUL_ASSIGN't loc
      | NEQ loc -> loop NEQ't loc
      | OR_ASSIGN loc -> loop OR_ASSIGN't loc
      | PACKED loc -> loop PACKED't loc
      | PERCENT loc -> loop PERCENT't loc
      | PLUS loc -> loop PLUS't loc
      | PTR loc -> loop PTR't loc
      | QUESTION loc -> loop QUESTION't loc
      | RBRACE loc -> loop RBRACE't loc
      | RBRACK loc -> loop RBRACK't loc
      | REGISTER loc -> loop REGISTER't loc
      | RESTRICT loc -> loop RESTRICT't loc
      | RETURN loc -> loop RETURN't loc
      | RIGHT loc -> loop RIGHT't loc
      | RIGHT_ASSIGN loc -> loop RIGHT_ASSIGN't loc
      | RPAREN loc -> loop RPAREN't loc
      | SEMICOLON loc -> loop SEMICOLON't loc
      | SHORT loc -> loop SHORT't loc
      | SIGNED loc -> loop SIGNED't loc
      | SIZEOF loc -> loop SIZEOF't loc
      | SLASH loc -> loop SLASH't loc
      | STAR loc -> loop STAR't loc
      | STATIC loc -> loop STATIC't loc
      | STRING_LITERAL (wide, str, loc) ->
          (* Merge consecutive string literals *)
          let rec doConcat wide str =
            try
              match Queue.peek tokens with
              | STRING_LITERAL (wide', str', loc) ->
                  ignore (Queue.pop tokens);
                  let (wide'', str'') = doConcat wide' str' in
                  if str'' <> []
                  then (wide || wide'', str @ str'')
                  else (wide, str)
              | _ ->
                  (wide, str)
            with Queue.Empty -> (wide, str) in
          let (wide', str') = doConcat wide str in
          loop STRING_LITERAL't ((wide', str'), loc)
      | STRUCT loc -> loop STRUCT't loc
      | SUB_ASSIGN loc -> loop SUB_ASSIGN't loc
      | SWITCH loc -> loop SWITCH't loc
      | TILDE loc -> loop TILDE't loc
      | TYPEDEF loc -> loop TYPEDEF't loc
      | TYPEDEF_NAME (id, typ, loc)
      | VAR_NAME (id, typ, loc) ->
          let terminal = match !typ with
            | VarId -> VAR_NAME't
            | TypedefId -> TYPEDEF_NAME't
            | OtherId -> OTHER_NAME't
          in
          loop terminal (id, loc)
      | UNION loc -> loop UNION't loc
      | UNSIGNED loc -> loop UNSIGNED't loc
      | VOID loc -> loop VOID't loc
      | VOLATILE loc -> loop VOLATILE't loc
      | WHILE loc -> loop WHILE't loc
      | XOR_ASSIGN loc -> loop XOR_ASSIGN't loc
      | ALIGNAS loc -> loop ALIGNAS't loc
      | ALIGNOF loc -> loop ALIGNOF't loc
      | ATTRIBUTE loc -> loop ATTRIBUTE't loc
      | ASM loc -> loop ASM't loc
      | PRAGMA (s, loc) -> loop PRAGMA't (s, loc)
    in
    Lazy.from_fun compute_token_stream


# 2056 "cparser/Lexer.ml"
