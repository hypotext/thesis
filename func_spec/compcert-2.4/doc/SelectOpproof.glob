DIGEST NO
Fcompcert.ia32.SelectOpproof
R889:894 compcert.lib.Coqlib <> <> lib
R912:914 compcert.common.AST <> <> lib
R932:939 compcert.lib.Integers <> <> lib
R957:962 compcert.lib.Floats <> <> lib
R980:985 compcert.common.Values <> <> lib
R1003:1008 compcert.common.Memory <> <> lib
R1026:1035 compcert.common.Globalenvs <> <> lib
R1053:1058 compcert.backend.Cminor <> <> lib
R1076:1077 compcert.ia32.Op <> <> lib
R1095:1103 compcert.backend.CminorSel <> <> lib
R1121:1128 compcert.ia32.SelectOp <> <> lib
R1398:1405 compcert.backend.CminorSel <> eval_Eop constr
R1475:1483 compcert.backend.CminorSel <> eval_expr ind
R1496:1498 compcert.backend.CminorSel <> Eop constr
R1502:1505 compcert.backend.CminorSel <> Enil constr
R1475:1483 compcert.backend.CminorSel <> eval_expr ind
R1496:1498 compcert.backend.CminorSel <> Eop constr
R1502:1505 compcert.backend.CminorSel <> Enil constr
R1553:1561 compcert.backend.CminorSel <> eval_expr ind
R1574:1576 compcert.backend.CminorSel <> Eop constr
R1582:1586 compcert.backend.CminorSel <> :cminorsel_scope:x_':::'_x not
R1587:1590 compcert.backend.CminorSel <> Enil constr
R1553:1561 compcert.backend.CminorSel <> eval_expr ind
R1574:1576 compcert.backend.CminorSel <> Eop constr
R1582:1586 compcert.backend.CminorSel <> :cminorsel_scope:x_':::'_x not
R1587:1590 compcert.backend.CminorSel <> Enil constr
R1639:1647 compcert.backend.CminorSel <> eval_expr ind
R1660:1662 compcert.backend.CminorSel <> Eop constr
R1668:1672 compcert.backend.CminorSel <> :cminorsel_scope:x_':::'_x not
R1674:1678 compcert.backend.CminorSel <> :cminorsel_scope:x_':::'_x not
R1679:1682 compcert.backend.CminorSel <> Enil constr
R1639:1647 compcert.backend.CminorSel <> eval_expr ind
R1660:1662 compcert.backend.CminorSel <> Eop constr
R1668:1672 compcert.backend.CminorSel <> :cminorsel_scope:x_':::'_x not
R1674:1678 compcert.backend.CminorSel <> :cminorsel_scope:x_':::'_x not
R1679:1682 compcert.backend.CminorSel <> Enil constr
R1731:1743 compcert.backend.CminorSel <> eval_exprlist ind
R1755:1758 compcert.backend.CminorSel <> Enil constr
R1731:1743 compcert.backend.CminorSel <> eval_exprlist ind
R1755:1758 compcert.backend.CminorSel <> Enil constr
R1805:1817 compcert.backend.CminorSel <> eval_exprlist ind
R1831:1835 compcert.backend.CminorSel <> :cminorsel_scope:x_':::'_x not
R1805:1817 compcert.backend.CminorSel <> eval_exprlist ind
R1831:1835 compcert.backend.CminorSel <> :cminorsel_scope:x_':::'_x not
R1974:1976 Coq.Init.Logic <> :type_scope:x_'='_x not
R1948:1961 compcert.ia32.Op <> eval_operation def
R1969:1971 Coq.Init.Datatypes <> nil constr
R1977:1980 Coq.Init.Datatypes <> Some constr
R1974:1976 Coq.Init.Logic <> :type_scope:x_'='_x not
R1948:1961 compcert.ia32.Op <> eval_operation def
R1969:1971 Coq.Init.Datatypes <> nil constr
R1977:1980 Coq.Init.Datatypes <> Some constr
R2062:2064 Coq.Init.Logic <> :type_scope:x_'='_x not
R2029:2042 compcert.ia32.Op <> eval_operation def
R2052:2055 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2056:2058 Coq.Init.Datatypes <> nil constr
R2065:2068 Coq.Init.Datatypes <> Some constr
R2062:2064 Coq.Init.Logic <> :type_scope:x_'='_x not
R2029:2042 compcert.ia32.Op <> eval_operation def
R2052:2055 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2056:2058 Coq.Init.Datatypes <> nil constr
R2065:2068 Coq.Init.Datatypes <> Some constr
R2157:2159 Coq.Init.Logic <> :type_scope:x_'='_x not
R2119:2132 compcert.ia32.Op <> eval_operation def
R2142:2145 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2147:2150 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2151:2153 Coq.Init.Datatypes <> nil constr
R2160:2163 Coq.Init.Datatypes <> Some constr
R2157:2159 Coq.Init.Logic <> :type_scope:x_'='_x not
R2119:2132 compcert.ia32.Op <> eval_operation def
R2142:2145 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2147:2150 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2151:2153 Coq.Init.Datatypes <> nil constr
R2160:2163 Coq.Init.Datatypes <> Some constr
R2257:2259 Coq.Init.Logic <> :type_scope:x_'='_x not
R2214:2227 compcert.ia32.Op <> eval_operation def
R2237:2240 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2242:2245 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2247:2250 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2251:2253 Coq.Init.Datatypes <> nil constr
R2260:2263 Coq.Init.Datatypes <> Some constr
R2257:2259 Coq.Init.Logic <> :type_scope:x_'='_x not
R2214:2227 compcert.ia32.Op <> eval_operation def
R2237:2240 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2242:2245 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2247:2250 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2251:2253 Coq.Init.Datatypes <> nil constr
R2260:2263 Coq.Init.Datatypes <> Some constr
R2429:2435 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2437:2438 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2440:2443 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2444:2454 compcert.common.Values Val lessdef ind
R2459:2459 compcert.ia32.SelectOpproof <> v var
R2429:2435 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2437:2438 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2440:2443 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2444:2454 compcert.common.Values Val lessdef ind
R2459:2459 compcert.ia32.SelectOpproof <> v var
sec 2563:2570 <> CMCONSTR
var 2583:2584 CMCONSTR ge
R2587:2590 compcert.backend.CminorSel <> genv def
var 2602:2603 CMCONSTR sp
R2606:2608 compcert.common.Values <> val ind
var 2620:2620 CMCONSTR e
R2623:2625 compcert.backend.Cminor <> env def
var 2637:2637 CMCONSTR m
R2640:2642 compcert.common.Memory <> mem syndef
def 3605:3627 <> unary_constructor_sound
R3644:3647 compcert.backend.CminorSel <> expr ind
R3636:3639 compcert.backend.CminorSel <> expr ind
R3663:3665 compcert.common.Values <> val ind
R3656:3658 compcert.common.Values <> val ind
R3729:3735 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3737:3738 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3772:3775 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3739:3747 compcert.backend.CminorSel <> eval_expr ind
R3771:3771 compcert.ia32.SelectOpproof <> v var
R3763:3766 compcert.ia32.SelectOpproof <> cstr var
R3768:3768 compcert.ia32.SelectOpproof <> a var
R3759:3760 compcert.ia32.SelectOpproof <> le var
R3757:3757 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R3755:3755 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R3752:3753 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R3749:3750 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R3776:3786 compcert.common.Values Val lessdef ind
R3796:3796 compcert.ia32.SelectOpproof <> v var
R3789:3791 compcert.ia32.SelectOpproof <> sem var
R3793:3793 compcert.ia32.SelectOpproof <> x var
R3697:3705 compcert.backend.CminorSel <> eval_expr ind
R3722:3722 compcert.ia32.SelectOpproof <> x var
R3720:3720 compcert.ia32.SelectOpproof <> a var
R3717:3718 compcert.ia32.SelectOpproof <> le var
R3715:3715 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R3713:3713 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R3710:3711 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R3707:3708 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
def 3811:3834 <> binary_constructor_sound
R3859:3862 compcert.backend.CminorSel <> expr ind
R3851:3854 compcert.backend.CminorSel <> expr ind
R3843:3846 compcert.backend.CminorSel <> expr ind
R3885:3887 compcert.common.Values <> val ind
R3878:3880 compcert.common.Values <> val ind
R3871:3873 compcert.common.Values <> val ind
R3987:3993 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3995:3996 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4032:4035 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3997:4005 compcert.backend.CminorSel <> eval_expr ind
R4031:4031 compcert.ia32.SelectOpproof <> v var
R4021:4024 compcert.ia32.SelectOpproof <> cstr var
R4028:4028 compcert.ia32.SelectOpproof <> b var
R4026:4026 compcert.ia32.SelectOpproof <> a var
R4017:4018 compcert.ia32.SelectOpproof <> le var
R4015:4015 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R4013:4013 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R4010:4011 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R4007:4008 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R4036:4046 compcert.common.Values Val lessdef ind
R4058:4058 compcert.ia32.SelectOpproof <> v var
R4049:4051 compcert.ia32.SelectOpproof <> sem var
R4055:4055 compcert.ia32.SelectOpproof <> y var
R4053:4053 compcert.ia32.SelectOpproof <> x var
R3955:3963 compcert.backend.CminorSel <> eval_expr ind
R3980:3980 compcert.ia32.SelectOpproof <> y var
R3978:3978 compcert.ia32.SelectOpproof <> b var
R3975:3976 compcert.ia32.SelectOpproof <> le var
R3973:3973 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R3971:3971 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R3968:3969 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R3965:3966 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R3923:3931 compcert.backend.CminorSel <> eval_expr ind
R3948:3948 compcert.ia32.SelectOpproof <> x var
R3946:3946 compcert.ia32.SelectOpproof <> a var
R3943:3944 compcert.ia32.SelectOpproof <> le var
R3941:3941 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R3939:3939 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R3936:3937 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R3933:3934 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
prf 4070:4084 <> eval_addrsymbol
R4109:4115 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4117:4118 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4163:4166 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4119:4127 compcert.backend.CminorSel <> eval_expr ind
R4162:4162 compcert.ia32.SelectOpproof <> v var
R4143:4152 compcert.ia32.SelectOp <> addrsymbol def
R4157:4159 compcert.ia32.SelectOpproof <> ofs var
R4154:4155 compcert.ia32.SelectOpproof <> id var
R4139:4140 compcert.ia32.SelectOpproof <> le var
R4137:4137 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R4135:4135 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R4132:4133 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R4129:4130 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R4167:4177 compcert.common.Values Val lessdef ind
R4211:4211 compcert.ia32.SelectOpproof <> v var
R4180:4198 compcert.common.Globalenvs Genv symbol_address def
R4206:4208 compcert.ia32.SelectOpproof <> ofs var
R4203:4204 compcert.ia32.SelectOpproof <> id var
R4200:4201 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R4238:4247 compcert.ia32.SelectOp <> addrsymbol def
R4258:4276 compcert.common.Globalenvs Genv symbol_address def
R4278:4279 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R4258:4276 compcert.common.Globalenvs Genv symbol_address def
R4278:4279 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R4315:4332 compcert.ia32.SelectOp <> symbol_is_external defax
R4315:4332 compcert.ia32.SelectOp <> symbol_is_external defax
R4373:4380 compcert.lib.Integers Int zero def
R4357:4367 compcert.lib.Integers Int eq_spec thm
R4350:4355 compcert.lib.Integers Int eq def
R4477:4495 compcert.common.Globalenvs Genv symbol_address def
R4508:4523 compcert.common.Globalenvs Genv find_symbol def
R4525:4526 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R4508:4523 compcert.common.Globalenvs Genv find_symbol def
R4525:4526 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R4557:4570 compcert.lib.Integers Int add_commut thm
R4557:4570 compcert.lib.Integers Int add_commut thm
R4581:4592 compcert.lib.Integers Int add_zero thm
R4581:4592 compcert.lib.Integers Int add_zero thm
prf 4626:4639 <> eval_addrstack
R4661:4667 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4669:4670 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4711:4714 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4671:4679 compcert.backend.CminorSel <> eval_expr ind
R4710:4710 compcert.ia32.SelectOpproof <> v var
R4695:4703 compcert.ia32.SelectOp <> addrstack def
R4705:4707 compcert.ia32.SelectOpproof <> ofs var
R4691:4692 compcert.ia32.SelectOpproof <> le var
R4689:4689 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R4687:4687 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R4684:4685 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R4681:4682 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R4715:4725 compcert.common.Values Val lessdef ind
R4751:4751 compcert.ia32.SelectOpproof <> v var
R4728:4734 compcert.common.Values Val add def
R4740:4743 compcert.common.Values <> Vint constr
R4745:4747 compcert.ia32.SelectOpproof <> ofs var
R4736:4737 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R4778:4786 compcert.ia32.SelectOp <> addrstack def
prf 4857:4867 <> eval_notint
R4870:4892 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R4901:4910 compcert.common.Values Val notint def
R4894:4899 compcert.ia32.SelectOp <> notint def
R4929:4934 compcert.ia32.SelectOp <> notint def
R4964:4975 compcert.ia32.SelectOp <> notint_match def
R4964:4975 compcert.ia32.SelectOp <> notint_match def
R5043:5053 compcert.common.Values Val not_xor thm
R5043:5053 compcert.common.Values Val not_xor thm
R5064:5076 compcert.common.Values Val xor_assoc thm
R5064:5076 compcert.common.Values Val xor_assoc thm
prf 5125:5135 <> eval_addimm
R5150:5172 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R5195:5201 compcert.common.Values Val add def
R5206:5209 compcert.common.Values <> Vint constr
R5211:5211 compcert.ia32.SelectOpproof <> n var
R5203:5203 compcert.ia32.SelectOpproof <> x var
R5175:5180 compcert.ia32.SelectOp <> addimm def
R5182:5182 compcert.ia32.SelectOpproof <> n var
R5237:5242 compcert.ia32.SelectOp <> addimm def
R5293:5300 compcert.lib.Integers Int zero def
R5279:5289 compcert.lib.Integers Int eq_spec thm
R5272:5277 compcert.lib.Integers Int eq def
R5381:5392 compcert.lib.Integers Int add_zero thm
R5381:5392 compcert.lib.Integers Int add_zero thm
R5409:5420 compcert.lib.Integers Int add_zero thm
R5409:5420 compcert.lib.Integers Int add_zero thm
R5437:5448 compcert.ia32.SelectOp <> addimm_match def
R5437:5448 compcert.ia32.SelectOp <> addimm_match def
R5510:5523 compcert.lib.Integers Int add_commut thm
R5510:5523 compcert.lib.Integers Int add_commut thm
R5584:5611 compcert.ia32.Op <> eval_offset_addressing_total thm
R5584:5611 compcert.ia32.Op <> eval_offset_addressing_total thm
prf 5653:5660 <> eval_add
R5663:5686 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R5692:5698 compcert.common.Values Val add def
R5688:5690 compcert.ia32.SelectOp <> add def
R5740:5742 compcert.ia32.SelectOp <> add def
R5751:5759 compcert.ia32.SelectOp <> add_match def
R5751:5759 compcert.ia32.SelectOp <> add_match def
R5794:5807 compcert.common.Values Val add_commut thm
R5794:5807 compcert.common.Values Val add_commut thm
R5816:5826 compcert.ia32.SelectOpproof <> eval_addimm thm
R5816:5826 compcert.ia32.SelectOpproof <> eval_addimm thm
R5843:5853 compcert.ia32.SelectOpproof <> eval_addimm thm
R5843:5853 compcert.ia32.SelectOpproof <> eval_addimm thm
R5901:5916 compcert.common.Values Val add_permut_4 thm
R5901:5916 compcert.common.Values Val add_permut_4 thm
R5964:5976 compcert.common.Values Val add_assoc thm
R5964:5976 compcert.common.Values Val add_assoc thm
R6001:6014 compcert.common.Values Val add_permut thm
R6001:6014 compcert.common.Values Val add_permut thm
R6062:6077 compcert.common.Values Val add_permut_4 thm
R6062:6077 compcert.common.Values Val add_permut_4 thm
R6091:6104 compcert.common.Values Val add_permut thm
R6091:6104 compcert.common.Values Val add_permut thm
R6118:6130 compcert.common.Values Val add_assoc thm
R6118:6130 compcert.common.Values Val add_assoc thm
R6178:6202 compcert.common.Globalenvs Genv shift_symbol_address thm
R6178:6202 compcert.common.Globalenvs Genv shift_symbol_address thm
R6218:6231 compcert.common.Values Val add_commut thm
R6218:6231 compcert.common.Values Val add_commut thm
R6242:6254 compcert.common.Values Val add_assoc thm
R6242:6254 compcert.common.Values Val add_assoc thm
R6277:6290 compcert.common.Values Val add_commut thm
R6277:6290 compcert.common.Values Val add_commut thm
R6332:6356 compcert.common.Globalenvs Genv shift_symbol_address thm
R6332:6356 compcert.common.Globalenvs Genv shift_symbol_address thm
R6367:6379 compcert.common.Values Val add_assoc thm
R6367:6379 compcert.common.Values Val add_assoc thm
R6406:6419 compcert.common.Values Val add_commut thm
R6406:6419 compcert.common.Values Val add_commut thm
R6461:6485 compcert.common.Globalenvs Genv shift_symbol_address thm
R6461:6485 compcert.common.Globalenvs Genv shift_symbol_address thm
R6496:6509 compcert.common.Values Val add_commut thm
R6496:6509 compcert.common.Values Val add_commut thm
R6525:6537 compcert.common.Values Val add_assoc thm
R6525:6537 compcert.common.Values Val add_assoc thm
R6560:6573 compcert.common.Values Val add_commut thm
R6560:6573 compcert.common.Values Val add_commut thm
R6615:6639 compcert.common.Globalenvs Genv shift_symbol_address thm
R6615:6639 compcert.common.Globalenvs Genv shift_symbol_address thm
R6654:6666 compcert.common.Values Val add_assoc thm
R6654:6666 compcert.common.Values Val add_assoc thm
R6689:6702 compcert.common.Values Val add_commut thm
R6689:6702 compcert.common.Values Val add_commut thm
R6744:6757 compcert.common.Values Val add_permut thm
R6744:6757 compcert.common.Values Val add_permut thm
R6768:6780 compcert.common.Values Val add_assoc thm
R6768:6780 compcert.common.Values Val add_assoc thm
R6807:6820 compcert.common.Values Val add_commut thm
R6807:6820 compcert.common.Values Val add_commut thm
R6893:6905 compcert.common.Values Val add_assoc thm
R6893:6905 compcert.common.Values Val add_assoc thm
R6893:6905 compcert.common.Values Val add_assoc thm
R6893:6905 compcert.common.Values Val add_assoc thm
R6928:6941 compcert.common.Values Val add_commut thm
R6928:6941 compcert.common.Values Val add_commut thm
R6983:6995 compcert.common.Values Val add_assoc thm
R6983:6995 compcert.common.Values Val add_assoc thm
R7073:7084 compcert.lib.Integers Int add_zero thm
R7073:7084 compcert.lib.Integers Int add_zero thm
R7073:7084 compcert.lib.Integers Int add_zero thm
R7073:7084 compcert.lib.Integers Int add_zero thm
prf 7107:7114 <> eval_sub
R7117:7140 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R7146:7152 compcert.common.Values Val sub def
R7142:7144 compcert.ia32.SelectOp <> sub def
R7194:7196 compcert.ia32.SelectOp <> sub def
R7205:7213 compcert.ia32.SelectOp <> sub_match def
R7205:7213 compcert.ia32.SelectOp <> sub_match def
R7248:7262 compcert.common.Values Val sub_add_opp thm
R7248:7262 compcert.common.Values Val sub_add_opp thm
R7271:7281 compcert.ia32.SelectOpproof <> eval_addimm thm
R7271:7281 compcert.ia32.SelectOpproof <> eval_addimm thm
R7307:7319 compcert.common.Values Val sub_add_l thm
R7307:7319 compcert.common.Values Val sub_add_l thm
R7330:7342 compcert.common.Values Val sub_add_r thm
R7330:7342 compcert.common.Values Val sub_add_r thm
R7358:7370 compcert.common.Values Val add_assoc thm
R7358:7370 compcert.common.Values Val add_assoc thm
R7388:7401 compcert.lib.Integers Int add_commut thm
R7388:7401 compcert.lib.Integers Int add_commut thm
R7415:7429 compcert.lib.Integers Int sub_add_opp thm
R7415:7429 compcert.lib.Integers Int sub_add_opp thm
R7442:7452 compcert.ia32.SelectOpproof <> eval_addimm thm
R7442:7452 compcert.ia32.SelectOpproof <> eval_addimm thm
R7480:7492 compcert.common.Values Val sub_add_l thm
R7480:7492 compcert.common.Values Val sub_add_l thm
R7501:7511 compcert.ia32.SelectOpproof <> eval_addimm thm
R7501:7511 compcert.ia32.SelectOpproof <> eval_addimm thm
R7539:7551 compcert.common.Values Val sub_add_r thm
R7539:7551 compcert.common.Values Val sub_add_r thm
R7560:7570 compcert.ia32.SelectOpproof <> eval_addimm thm
R7560:7570 compcert.ia32.SelectOpproof <> eval_addimm thm
prf 7612:7622 <> eval_negint
R7625:7647 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R7666:7672 compcert.common.Values Val sub def
R7680:7680 compcert.ia32.SelectOpproof <> v var
R7674:7678 compcert.common.Values <> Vzero def
R7649:7654 compcert.ia32.SelectOp <> negint def
R7721:7726 compcert.ia32.SelectOp <> negint def
R7735:7746 compcert.ia32.SelectOp <> negint_match def
R7735:7746 compcert.ia32.SelectOp <> negint_match def
prf 7818:7828 <> eval_shlimm
R7843:7865 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R7935:7941 compcert.common.Values Val shl def
R7946:7949 compcert.common.Values <> Vint constr
R7951:7951 compcert.ia32.SelectOpproof <> n var
R7943:7943 compcert.ia32.SelectOpproof <> x var
R7877:7882 compcert.ia32.SelectOp <> shlimm def
R7886:7886 compcert.ia32.SelectOpproof <> n var
R7884:7884 compcert.ia32.SelectOpproof <> a var
R7994:7999 compcert.ia32.SelectOp <> shlimm def
R8034:8041 compcert.lib.Integers Int zero def
R8020:8030 compcert.lib.Integers Int eq_spec thm
R8013:8018 compcert.lib.Integers Int eq def
R8117:8128 compcert.lib.Integers Int shl_zero thm
R8117:8128 compcert.lib.Integers Int shl_zero thm
R8149:8155 compcert.lib.Integers Int ltu def
R8159:8171 compcert.lib.Integers Int iwordsize def
R8149:8155 compcert.lib.Integers Int ltu def
R8159:8171 compcert.lib.Integers Int iwordsize def
R8201:8212 compcert.ia32.SelectOp <> shlimm_match def
R8201:8212 compcert.ia32.SelectOp <> shlimm_match def
R8245:8248 compcert.common.Values <> Vint constr
R8251:8257 compcert.lib.Integers Int shl def
R8245:8248 compcert.common.Values <> Vint constr
R8251:8257 compcert.lib.Integers Int shl def
R8322:8328 compcert.lib.Integers Int ltu def
R8345:8357 compcert.lib.Integers Int iwordsize def
R8331:8337 compcert.lib.Integers Int add def
R8322:8328 compcert.lib.Integers Int ltu def
R8345:8357 compcert.lib.Integers Int iwordsize def
R8331:8337 compcert.lib.Integers Int add def
R8377:8383 compcert.common.Values Val shl def
R8389:8392 compcert.common.Values <> Vint constr
R8395:8401 compcert.lib.Integers Int add def
R8377:8383 compcert.common.Values Val shl def
R8389:8392 compcert.common.Values <> Vint constr
R8395:8401 compcert.lib.Integers Int add def
R8491:8497 compcert.lib.Integers Int ltu def
R8502:8514 compcert.lib.Integers Int iwordsize def
R8491:8497 compcert.lib.Integers Int ltu def
R8502:8514 compcert.lib.Integers Int iwordsize def
R8549:8555 compcert.lib.Integers Int ltu def
R8559:8571 compcert.lib.Integers Int iwordsize def
R8549:8555 compcert.lib.Integers Int ltu def
R8559:8571 compcert.lib.Integers Int iwordsize def
R8604:8617 compcert.lib.Integers Int add_commut thm
R8604:8617 compcert.lib.Integers Int add_commut thm
R8628:8638 compcert.lib.Integers Int shl_shl thm
R8628:8638 compcert.lib.Integers Int shl_shl thm
R8655:8668 compcert.lib.Integers Int add_commut thm
R8655:8668 compcert.lib.Integers Int add_commut thm
R8785:8798 compcert.ia32.SelectOp <> shift_is_scale def
R8785:8798 compcert.ia32.SelectOp <> shift_is_scale def
R8900:8910 compcert.lib.Integers Int shl_mul thm
R8900:8910 compcert.lib.Integers Int shl_mul thm
R8921:8939 compcert.lib.Integers Int mul_add_distr_l thm
R8921:8939 compcert.lib.Integers Int mul_add_distr_l thm
R8951:8961 compcert.lib.Integers Int shl_mul thm
R8951:8961 compcert.lib.Integers Int shl_mul thm
R9059:9072 compcert.ia32.SelectOp <> shift_is_scale def
R9059:9072 compcert.ia32.SelectOp <> shift_is_scale def
R9173:9184 compcert.lib.Integers Int add_zero thm
R9173:9184 compcert.lib.Integers Int add_zero thm
R9195:9205 compcert.lib.Integers Int shl_mul thm
R9195:9205 compcert.lib.Integers Int shl_mul thm
prf 9348:9359 <> eval_shruimm
R9374:9396 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R9467:9474 compcert.common.Values Val shru def
R9479:9482 compcert.common.Values <> Vint constr
R9484:9484 compcert.ia32.SelectOpproof <> n var
R9476:9476 compcert.ia32.SelectOpproof <> x var
R9408:9414 compcert.ia32.SelectOp <> shruimm def
R9418:9418 compcert.ia32.SelectOpproof <> n var
R9416:9416 compcert.ia32.SelectOpproof <> a var
R9527:9533 compcert.ia32.SelectOp <> shruimm def
R9568:9575 compcert.lib.Integers Int zero def
R9554:9564 compcert.lib.Integers Int eq_spec thm
R9547:9552 compcert.lib.Integers Int eq def
R9651:9663 compcert.lib.Integers Int shru_zero thm
R9651:9663 compcert.lib.Integers Int shru_zero thm
R9684:9690 compcert.lib.Integers Int ltu def
R9694:9706 compcert.lib.Integers Int iwordsize def
R9684:9690 compcert.lib.Integers Int ltu def
R9694:9706 compcert.lib.Integers Int iwordsize def
R9736:9748 compcert.ia32.SelectOp <> shruimm_match def
R9736:9748 compcert.ia32.SelectOp <> shruimm_match def
R9781:9784 compcert.common.Values <> Vint constr
R9787:9794 compcert.lib.Integers Int shru def
R9781:9784 compcert.common.Values <> Vint constr
R9787:9794 compcert.lib.Integers Int shru def
R9860:9866 compcert.lib.Integers Int ltu def
R9883:9895 compcert.lib.Integers Int iwordsize def
R9869:9875 compcert.lib.Integers Int add def
R9860:9866 compcert.lib.Integers Int ltu def
R9883:9895 compcert.lib.Integers Int iwordsize def
R9869:9875 compcert.lib.Integers Int add def
R9915:9922 compcert.common.Values Val shru def
R9928:9931 compcert.common.Values <> Vint constr
R9934:9940 compcert.lib.Integers Int add def
R9915:9922 compcert.common.Values Val shru def
R9928:9931 compcert.common.Values <> Vint constr
R9934:9940 compcert.lib.Integers Int add def
R10030:10036 compcert.lib.Integers Int ltu def
R10041:10053 compcert.lib.Integers Int iwordsize def
R10030:10036 compcert.lib.Integers Int ltu def
R10041:10053 compcert.lib.Integers Int iwordsize def
R10098:10111 compcert.lib.Integers Int add_commut thm
R10098:10111 compcert.lib.Integers Int add_commut thm
R10122:10134 compcert.lib.Integers Int shru_shru thm
R10122:10134 compcert.lib.Integers Int shru_shru thm
R10151:10164 compcert.lib.Integers Int add_commut thm
R10151:10164 compcert.lib.Integers Int add_commut thm
prf 10395:10405 <> eval_shrimm
R10420:10442 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R10512:10518 compcert.common.Values Val shr def
R10523:10526 compcert.common.Values <> Vint constr
R10528:10528 compcert.ia32.SelectOpproof <> n var
R10520:10520 compcert.ia32.SelectOpproof <> x var
R10454:10459 compcert.ia32.SelectOp <> shrimm def
R10463:10463 compcert.ia32.SelectOpproof <> n var
R10461:10461 compcert.ia32.SelectOpproof <> a var
R10571:10576 compcert.ia32.SelectOp <> shrimm def
R10611:10618 compcert.lib.Integers Int zero def
R10597:10607 compcert.lib.Integers Int eq_spec thm
R10590:10595 compcert.lib.Integers Int eq def
R10694:10705 compcert.lib.Integers Int shr_zero thm
R10694:10705 compcert.lib.Integers Int shr_zero thm
R10726:10732 compcert.lib.Integers Int ltu def
R10736:10748 compcert.lib.Integers Int iwordsize def
R10726:10732 compcert.lib.Integers Int ltu def
R10736:10748 compcert.lib.Integers Int iwordsize def
R10778:10789 compcert.ia32.SelectOp <> shrimm_match def
R10778:10789 compcert.ia32.SelectOp <> shrimm_match def
R10822:10825 compcert.common.Values <> Vint constr
R10828:10834 compcert.lib.Integers Int shr def
R10822:10825 compcert.common.Values <> Vint constr
R10828:10834 compcert.lib.Integers Int shr def
R10900:10906 compcert.lib.Integers Int ltu def
R10923:10935 compcert.lib.Integers Int iwordsize def
R10909:10915 compcert.lib.Integers Int add def
R10900:10906 compcert.lib.Integers Int ltu def
R10923:10935 compcert.lib.Integers Int iwordsize def
R10909:10915 compcert.lib.Integers Int add def
R10955:10961 compcert.common.Values Val shr def
R10967:10970 compcert.common.Values <> Vint constr
R10973:10979 compcert.lib.Integers Int add def
R10955:10961 compcert.common.Values Val shr def
R10967:10970 compcert.common.Values <> Vint constr
R10973:10979 compcert.lib.Integers Int add def
R11069:11075 compcert.lib.Integers Int ltu def
R11080:11092 compcert.lib.Integers Int iwordsize def
R11069:11075 compcert.lib.Integers Int ltu def
R11080:11092 compcert.lib.Integers Int iwordsize def
R11140:11153 compcert.lib.Integers Int add_commut thm
R11140:11153 compcert.lib.Integers Int add_commut thm
R11164:11174 compcert.lib.Integers Int shr_shr thm
R11164:11174 compcert.lib.Integers Int shr_shr thm
R11191:11204 compcert.lib.Integers Int add_commut thm
R11191:11204 compcert.lib.Integers Int add_commut thm
prf 11433:11448 <> eval_mulimm_base
R11463:11485 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R11513:11519 compcert.common.Values Val mul def
R11524:11527 compcert.common.Values <> Vint constr
R11529:11529 compcert.ia32.SelectOpproof <> n var
R11521:11521 compcert.ia32.SelectOpproof <> x var
R11488:11498 compcert.ia32.SelectOp <> mulimm_base def
R11500:11500 compcert.ia32.SelectOpproof <> n var
R11571:11581 compcert.ia32.SelectOp <> mulimm_base def
R11599:11617 compcert.lib.Integers Int one_bits_decomp thm
R11599:11617 compcert.lib.Integers Int one_bits_decomp thm
R11638:11655 compcert.lib.Integers Int one_bits_range thm
R11638:11655 compcert.lib.Integers Int one_bits_range thm
R11673:11684 compcert.lib.Integers Int one_bits def
R11673:11684 compcert.lib.Integers Int one_bits def
R11770:11781 compcert.lib.Integers Int add_zero thm
R11770:11781 compcert.lib.Integers Int add_zero thm
R11795:11798 compcert.common.Values <> Vint constr
R11801:11807 compcert.lib.Integers Int shl def
R11809:11815 compcert.lib.Integers Int one def
R11827:11833 compcert.common.Values Val shl def
R11841:11844 compcert.common.Values <> Vint constr
R11835:11838 compcert.common.Values <> Vone def
R11827:11833 compcert.common.Values Val shl def
R11841:11844 compcert.common.Values <> Vint constr
R11835:11838 compcert.common.Values <> Vone def
R11795:11798 compcert.common.Values <> Vint constr
R11801:11807 compcert.lib.Integers Int shl def
R11809:11815 compcert.lib.Integers Int one def
R11859:11869 compcert.common.Values Val shl_mul thm
R11859:11869 compcert.common.Values Val shl_mul thm
R11880:11890 compcert.ia32.SelectOpproof <> eval_shlimm thm
R11880:11890 compcert.ia32.SelectOpproof <> eval_shlimm thm
R11990:12000 compcert.ia32.SelectOpproof <> eval_shlimm thm
R12015:12021 compcert.backend.CminorSel <> Eletvar constr
R12006:12009 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11990:12000 compcert.ia32.SelectOpproof <> eval_shlimm thm
R12015:12021 compcert.backend.CminorSel <> Eletvar constr
R12006:12009 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12081:12091 compcert.ia32.SelectOpproof <> eval_shlimm thm
R12107:12113 compcert.backend.CminorSel <> Eletvar constr
R12098:12101 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12081:12091 compcert.ia32.SelectOpproof <> eval_shlimm thm
R12107:12113 compcert.backend.CminorSel <> Eletvar constr
R12098:12101 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12172:12179 compcert.ia32.SelectOpproof <> eval_add thm
R12277:12288 compcert.lib.Integers Int add_zero thm
R12277:12288 compcert.lib.Integers Int add_zero thm
R12302:12305 compcert.common.Values <> Vint constr
R12308:12314 compcert.lib.Integers Int add def
R12337:12343 compcert.lib.Integers Int shl def
R12345:12351 compcert.lib.Integers Int one def
R12317:12323 compcert.lib.Integers Int shl def
R12325:12331 compcert.lib.Integers Int one def
R12370:12376 compcert.common.Values Val add def
R12403:12409 compcert.common.Values Val shl def
R12417:12420 compcert.common.Values <> Vint constr
R12411:12414 compcert.common.Values <> Vone def
R12379:12385 compcert.common.Values Val shl def
R12393:12396 compcert.common.Values <> Vint constr
R12387:12390 compcert.common.Values <> Vone def
R12370:12376 compcert.common.Values Val add def
R12403:12409 compcert.common.Values Val shl def
R12417:12420 compcert.common.Values <> Vint constr
R12411:12414 compcert.common.Values <> Vone def
R12379:12385 compcert.common.Values Val shl def
R12393:12396 compcert.common.Values <> Vint constr
R12387:12390 compcert.common.Values <> Vone def
R12302:12305 compcert.common.Values <> Vint constr
R12308:12314 compcert.lib.Integers Int add def
R12337:12343 compcert.lib.Integers Int shl def
R12345:12351 compcert.lib.Integers Int one def
R12317:12323 compcert.lib.Integers Int shl def
R12325:12331 compcert.lib.Integers Int one def
R12439:12457 compcert.common.Values Val mul_add_distr_r thm
R12439:12457 compcert.common.Values Val mul_add_distr_r thm
R12477:12487 compcert.common.Values Val shl_mul thm
R12477:12487 compcert.common.Values Val shl_mul thm
R12477:12487 compcert.common.Values Val shl_mul thm
R12477:12487 compcert.common.Values Val shl_mul thm
R12523:12529 compcert.common.Values Val add def
R12499:12515 compcert.common.Values Val lessdef_trans thm
R12523:12529 compcert.common.Values Val add def
R12499:12515 compcert.common.Values Val lessdef_trans thm
R12551:12565 compcert.common.Values Val add_lessdef thm
R12551:12565 compcert.common.Values Val add_lessdef thm
prf 12662:12672 <> eval_mulimm
R12687:12709 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R12732:12738 compcert.common.Values Val mul def
R12743:12746 compcert.common.Values <> Vint constr
R12748:12748 compcert.ia32.SelectOpproof <> n var
R12740:12740 compcert.ia32.SelectOpproof <> x var
R12712:12717 compcert.ia32.SelectOp <> mulimm def
R12719:12719 compcert.ia32.SelectOpproof <> n var
R12798:12803 compcert.ia32.SelectOp <> mulimm def
R12838:12845 compcert.lib.Integers Int zero def
R12824:12834 compcert.lib.Integers Int eq_spec thm
R12817:12822 compcert.lib.Integers Int eq def
R12867:12870 compcert.common.Values <> Vint constr
R12872:12879 compcert.lib.Integers Int zero def
R12867:12870 compcert.common.Values <> Vint constr
R12872:12879 compcert.lib.Integers Int zero def
R12943:12954 compcert.lib.Integers Int mul_zero thm
R12943:12954 compcert.lib.Integers Int mul_zero thm
R12995:13001 compcert.lib.Integers Int one def
R12981:12991 compcert.lib.Integers Int eq_spec thm
R12974:12979 compcert.lib.Integers Int eq def
R13081:13091 compcert.lib.Integers Int mul_one thm
R13081:13091 compcert.lib.Integers Int mul_one thm
R13108:13119 compcert.ia32.SelectOp <> mulimm_match def
R13108:13119 compcert.ia32.SelectOp <> mulimm_match def
R13174:13187 compcert.lib.Integers Int mul_commut thm
R13174:13187 compcert.lib.Integers Int mul_commut thm
R13213:13231 compcert.common.Values Val mul_add_distr_l thm
R13213:13231 compcert.common.Values Val mul_add_distr_l thm
R13245:13260 compcert.ia32.SelectOpproof <> eval_mulimm_base thm
R13324:13334 compcert.ia32.SelectOpproof <> eval_addimm thm
R13355:13365 compcert.ia32.SelectOp <> mulimm_base def
R13337:13343 compcert.lib.Integers Int mul def
R13324:13334 compcert.ia32.SelectOpproof <> eval_addimm thm
R13355:13365 compcert.ia32.SelectOp <> mulimm_base def
R13337:13343 compcert.lib.Integers Int mul def
R13440:13456 compcert.common.Values Val lessdef_trans thm
R13440:13456 compcert.common.Values Val lessdef_trans thm
R13466:13480 compcert.common.Values Val add_lessdef thm
R13466:13480 compcert.common.Values Val add_lessdef thm
R13501:13514 compcert.common.Values Val mul_commut thm
R13501:13514 compcert.common.Values Val mul_commut thm
R13531:13546 compcert.ia32.SelectOpproof <> eval_mulimm_base thm
R13531:13546 compcert.ia32.SelectOpproof <> eval_mulimm_base thm
prf 13569:13576 <> eval_mul
R13579:13602 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R13608:13614 compcert.common.Values Val mul def
R13604:13606 compcert.ia32.SelectOp <> mul def
R13656:13658 compcert.ia32.SelectOp <> mul def
R13667:13675 compcert.ia32.SelectOp <> mul_match def
R13667:13675 compcert.ia32.SelectOp <> mul_match def
R13710:13723 compcert.common.Values Val mul_commut thm
R13710:13723 compcert.common.Values Val mul_commut thm
R13732:13742 compcert.ia32.SelectOpproof <> eval_mulimm thm
R13732:13742 compcert.ia32.SelectOpproof <> eval_mulimm thm
R13760:13770 compcert.ia32.SelectOpproof <> eval_mulimm thm
R13760:13770 compcert.ia32.SelectOpproof <> eval_mulimm thm
prf 13810:13820 <> eval_andimm
R13835:13857 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R13880:13886 compcert.common.Values Val and def
R13891:13894 compcert.common.Values <> Vint constr
R13896:13896 compcert.ia32.SelectOpproof <> n var
R13888:13888 compcert.ia32.SelectOpproof <> x var
R13860:13865 compcert.ia32.SelectOp <> andimm def
R13867:13867 compcert.ia32.SelectOpproof <> n var
R13946:13951 compcert.ia32.SelectOp <> andimm def
R13986:13993 compcert.lib.Integers Int zero def
R13972:13982 compcert.lib.Integers Int eq_spec thm
R13965:13970 compcert.lib.Integers Int eq def
R14015:14018 compcert.common.Values <> Vint constr
R14020:14027 compcert.lib.Integers Int zero def
R14015:14018 compcert.common.Values <> Vint constr
R14020:14027 compcert.lib.Integers Int zero def
R14091:14102 compcert.lib.Integers Int and_zero thm
R14091:14102 compcert.lib.Integers Int and_zero thm
R14143:14150 compcert.lib.Integers Int mone def
R14129:14139 compcert.lib.Integers Int eq_spec thm
R14122:14127 compcert.lib.Integers Int eq def
R14230:14241 compcert.lib.Integers Int and_mone thm
R14230:14241 compcert.lib.Integers Int and_mone thm
R14258:14269 compcert.ia32.SelectOp <> andimm_match def
R14258:14269 compcert.ia32.SelectOp <> andimm_match def
R14324:14337 compcert.lib.Integers Int and_commut thm
R14324:14337 compcert.lib.Integers Int and_commut thm
R14385:14397 compcert.common.Values Val and_assoc thm
R14385:14397 compcert.common.Values Val and_assoc thm
R14408:14421 compcert.lib.Integers Int and_commut thm
R14408:14421 compcert.lib.Integers Int and_commut thm
R14447:14462 compcert.common.Values Val zero_ext_and thm
R14447:14462 compcert.common.Values Val zero_ext_and thm
R14488:14500 compcert.common.Values Val and_assoc thm
R14488:14500 compcert.common.Values Val and_assoc thm
R14514:14527 compcert.lib.Integers Int and_commut thm
R14514:14527 compcert.lib.Integers Int and_commut thm
R14568:14583 compcert.common.Values Val zero_ext_and thm
R14568:14583 compcert.common.Values Val zero_ext_and thm
R14609:14621 compcert.common.Values Val and_assoc thm
R14609:14621 compcert.common.Values Val and_assoc thm
R14635:14648 compcert.lib.Integers Int and_commut thm
R14635:14648 compcert.lib.Integers Int and_commut thm
prf 14703:14710 <> eval_and
R14713:14736 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R14742:14748 compcert.common.Values Val and def
R14738:14740 compcert.ia32.SelectOp <> and def
R14788:14790 compcert.ia32.SelectOp <> and def
R14799:14807 compcert.ia32.SelectOp <> and_match def
R14799:14807 compcert.ia32.SelectOp <> and_match def
R14842:14855 compcert.common.Values Val and_commut thm
R14842:14855 compcert.common.Values Val and_commut thm
R14864:14874 compcert.ia32.SelectOpproof <> eval_andimm thm
R14864:14874 compcert.ia32.SelectOpproof <> eval_andimm thm
R14891:14901 compcert.ia32.SelectOpproof <> eval_andimm thm
R14891:14901 compcert.ia32.SelectOpproof <> eval_andimm thm
prf 14941:14950 <> eval_orimm
R14965:14987 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R15009:15014 compcert.common.Values Val or def
R15019:15022 compcert.common.Values <> Vint constr
R15024:15024 compcert.ia32.SelectOpproof <> n var
R15016:15016 compcert.ia32.SelectOpproof <> x var
R14990:14994 compcert.ia32.SelectOp <> orimm def
R14996:14996 compcert.ia32.SelectOpproof <> n var
R15074:15078 compcert.ia32.SelectOp <> orimm def
R15113:15120 compcert.lib.Integers Int zero def
R15099:15109 compcert.lib.Integers Int eq_spec thm
R15092:15097 compcert.lib.Integers Int eq def
R15203:15213 compcert.lib.Integers Int or_zero thm
R15203:15213 compcert.lib.Integers Int or_zero thm
R15254:15261 compcert.lib.Integers Int mone def
R15240:15250 compcert.lib.Integers Int eq_spec thm
R15233:15238 compcert.lib.Integers Int eq def
R15282:15285 compcert.common.Values <> Vint constr
R15287:15294 compcert.lib.Integers Int mone def
R15282:15285 compcert.common.Values <> Vint constr
R15287:15294 compcert.lib.Integers Int mone def
R15357:15367 compcert.lib.Integers Int or_mone thm
R15357:15367 compcert.lib.Integers Int or_mone thm
R15388:15398 compcert.ia32.SelectOp <> orimm_match def
R15388:15398 compcert.ia32.SelectOp <> orimm_match def
R15453:15465 compcert.lib.Integers Int or_commut thm
R15453:15465 compcert.lib.Integers Int or_commut thm
R15491:15502 compcert.common.Values Val or_assoc thm
R15491:15502 compcert.common.Values Val or_assoc thm
R15520:15532 compcert.lib.Integers Int or_commut thm
R15520:15532 compcert.lib.Integers Int or_commut thm
prf 15581:15594 <> eval_same_expr
R15732:15735 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15727:15729 Coq.Init.Logic <> :type_scope:x_'='_x not
R15725:15726 compcert.ia32.SelectOpproof <> a1 var
R15730:15731 compcert.ia32.SelectOpproof <> a2 var
R15738:15740 Coq.Init.Logic <> :type_scope:x_'='_x not
R15736:15737 compcert.ia32.SelectOpproof <> v1 var
R15741:15742 compcert.ia32.SelectOpproof <> v2 var
R15691:15699 compcert.backend.CminorSel <> eval_expr ind
R15717:15718 compcert.ia32.SelectOpproof <> v2 var
R15714:15715 compcert.ia32.SelectOpproof <> a2 var
R15711:15712 compcert.ia32.SelectOpproof <> le var
R15709:15709 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R15707:15707 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R15704:15705 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R15701:15702 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R15657:15665 compcert.backend.CminorSel <> eval_expr ind
R15683:15684 compcert.ia32.SelectOpproof <> v1 var
R15680:15681 compcert.ia32.SelectOpproof <> a1 var
R15677:15678 compcert.ia32.SelectOpproof <> le var
R15675:15675 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R15673:15673 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R15670:15671 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R15667:15668 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R15644:15646 Coq.Init.Logic <> :type_scope:x_'='_x not
R15624:15637 compcert.ia32.SelectOp <> same_expr_pure def
R15642:15643 compcert.ia32.SelectOpproof <> a2 var
R15639:15640 compcert.ia32.SelectOpproof <> a1 var
R15647:15650 Coq.Init.Datatypes <> true constr
R15880:15887 compcert.common.AST <> ident_eq def
R15880:15887 compcert.common.AST <> ident_eq def
prf 15999:16012 <> int_add_sub_eq
R16061:16063 Coq.Init.Logic <> :type_scope:x_'='_x not
R16050:16056 compcert.lib.Integers Int sub def
R16060:16060 compcert.ia32.SelectOpproof <> x var
R16058:16058 compcert.ia32.SelectOpproof <> z var
R16064:16064 compcert.ia32.SelectOpproof <> y var
R16042:16044 Coq.Init.Logic <> :type_scope:x_'='_x not
R16031:16037 compcert.lib.Integers Int add def
R16041:16041 compcert.ia32.SelectOpproof <> y var
R16039:16039 compcert.ia32.SelectOpproof <> x var
R16045:16045 compcert.ia32.SelectOpproof <> z var
R16101:16113 compcert.lib.Integers Int sub_add_l thm
R16101:16113 compcert.lib.Integers Int sub_add_l thm
R16124:16135 compcert.lib.Integers Int sub_idem thm
R16124:16135 compcert.lib.Integers Int sub_idem thm
R16144:16157 compcert.lib.Integers Int add_zero_l thm
R16144:16157 compcert.lib.Integers Int add_zero_l thm
prf 16172:16178 <> eval_or
R16181:16204 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R16209:16214 compcert.common.Values Val or def
R16206:16207 compcert.ia32.SelectOp <> or def
R16254:16255 compcert.ia32.SelectOp <> or def
R16264:16271 compcert.ia32.SelectOp <> or_match def
R16264:16271 compcert.ia32.SelectOp <> or_match def
R16321:16333 compcert.common.Values Val or_commut thm
R16321:16333 compcert.common.Values Val or_commut thm
R16342:16351 compcert.ia32.SelectOpproof <> eval_orimm thm
R16342:16351 compcert.ia32.SelectOpproof <> eval_orimm thm
R16378:16387 compcert.ia32.SelectOpproof <> eval_orimm thm
R16378:16387 compcert.ia32.SelectOpproof <> eval_orimm thm
R16450:16456 compcert.lib.Integers Int add def
R16465:16477 compcert.lib.Integers Int iwordsize def
R16450:16456 compcert.lib.Integers Int add def
R16437:16447 compcert.lib.Integers Int eq_spec thm
R16430:16435 compcert.lib.Integers Int eq def
R16492:16505 compcert.ia32.SelectOp <> same_expr_pure def
R16492:16505 compcert.ia32.SelectOp <> same_expr_pure def
R16540:16553 compcert.ia32.SelectOpproof <> eval_same_expr thm
R16599:16605 compcert.common.Values Val ror def
R16611:16614 compcert.common.Values <> Vint constr
R16599:16605 compcert.common.Values Val ror def
R16611:16614 compcert.common.Values <> Vint constr
R16678:16684 compcert.lib.Integers Int ltu def
R16689:16701 compcert.lib.Integers Int iwordsize def
R16678:16684 compcert.lib.Integers Int ltu def
R16689:16701 compcert.lib.Integers Int iwordsize def
R16729:16735 compcert.lib.Integers Int ltu def
R16740:16752 compcert.lib.Integers Int iwordsize def
R16729:16735 compcert.lib.Integers Int ltu def
R16740:16752 compcert.lib.Integers Int iwordsize def
R16788:16797 compcert.lib.Integers Int or_ror thm
R16788:16797 compcert.lib.Integers Int or_ror thm
R16825:16830 compcert.common.Values Val or def
R16825:16830 compcert.common.Values Val or def
R16872:16885 compcert.ia32.SelectOpproof <> int_add_sub_eq thm
R16872:16885 compcert.ia32.SelectOpproof <> int_add_sub_eq thm
R17003:17009 compcert.lib.Integers Int add def
R17018:17030 compcert.lib.Integers Int iwordsize def
R17003:17009 compcert.lib.Integers Int add def
R16990:17000 compcert.lib.Integers Int eq_spec thm
R16983:16988 compcert.lib.Integers Int eq def
R17045:17058 compcert.ia32.SelectOp <> same_expr_pure def
R17045:17058 compcert.ia32.SelectOp <> same_expr_pure def
R17093:17106 compcert.ia32.SelectOpproof <> eval_same_expr thm
R17152:17158 compcert.common.Values Val ror def
R17164:17167 compcert.common.Values <> Vint constr
R17152:17158 compcert.common.Values Val ror def
R17164:17167 compcert.common.Values <> Vint constr
R17231:17237 compcert.lib.Integers Int ltu def
R17242:17254 compcert.lib.Integers Int iwordsize def
R17231:17237 compcert.lib.Integers Int ltu def
R17242:17254 compcert.lib.Integers Int iwordsize def
R17282:17288 compcert.lib.Integers Int ltu def
R17293:17305 compcert.lib.Integers Int iwordsize def
R17282:17288 compcert.lib.Integers Int ltu def
R17293:17305 compcert.lib.Integers Int iwordsize def
R17338:17350 compcert.lib.Integers Int or_commut thm
R17338:17350 compcert.lib.Integers Int or_commut thm
R17364:17373 compcert.lib.Integers Int or_ror thm
R17364:17373 compcert.lib.Integers Int or_ror thm
R17401:17406 compcert.common.Values Val or def
R17401:17406 compcert.common.Values Val or def
R17448:17461 compcert.ia32.SelectOpproof <> int_add_sub_eq thm
R17448:17461 compcert.ia32.SelectOpproof <> int_add_sub_eq thm
R17510:17522 compcert.common.Values Val or_commut thm
R17510:17522 compcert.common.Values Val or_commut thm
prf 17594:17604 <> eval_xorimm
R17619:17641 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R17664:17670 compcert.common.Values Val xor def
R17675:17678 compcert.common.Values <> Vint constr
R17680:17680 compcert.ia32.SelectOpproof <> n var
R17672:17672 compcert.ia32.SelectOpproof <> x var
R17644:17649 compcert.ia32.SelectOp <> xorimm def
R17651:17651 compcert.ia32.SelectOpproof <> n var
R17730:17735 compcert.ia32.SelectOp <> xorimm def
R17770:17777 compcert.lib.Integers Int zero def
R17756:17766 compcert.lib.Integers Int eq_spec thm
R17749:17754 compcert.lib.Integers Int eq def
R17860:17871 compcert.lib.Integers Int xor_zero thm
R17860:17871 compcert.lib.Integers Int xor_zero thm
R17892:17903 compcert.ia32.SelectOp <> xorimm_match def
R17892:17903 compcert.ia32.SelectOp <> xorimm_match def
R17958:17971 compcert.lib.Integers Int xor_commut thm
R17958:17971 compcert.lib.Integers Int xor_commut thm
R17997:18009 compcert.common.Values Val xor_assoc thm
R17997:18009 compcert.common.Values Val xor_assoc thm
R18027:18040 compcert.lib.Integers Int xor_commut thm
R18027:18040 compcert.lib.Integers Int xor_commut thm
R18075:18085 compcert.common.Values Val not_xor thm
R18075:18085 compcert.common.Values Val not_xor thm
R18096:18108 compcert.common.Values Val xor_assoc thm
R18096:18108 compcert.common.Values Val xor_assoc thm
R18123:18136 compcert.common.Values Val xor_commut thm
R18139:18142 compcert.common.Values <> Vint constr
R18144:18151 compcert.lib.Integers Int mone def
R18123:18136 compcert.common.Values Val xor_commut thm
R18139:18142 compcert.common.Values <> Vint constr
R18144:18151 compcert.lib.Integers Int mone def
prf 18202:18209 <> eval_xor
R18212:18235 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R18241:18247 compcert.common.Values Val xor def
R18237:18239 compcert.ia32.SelectOp <> xor def
R18287:18289 compcert.ia32.SelectOp <> xor def
R18298:18306 compcert.ia32.SelectOp <> xor_match def
R18298:18306 compcert.ia32.SelectOp <> xor_match def
R18341:18354 compcert.common.Values Val xor_commut thm
R18341:18354 compcert.common.Values Val xor_commut thm
R18363:18373 compcert.ia32.SelectOpproof <> eval_xorimm thm
R18363:18373 compcert.ia32.SelectOpproof <> eval_xorimm thm
R18390:18400 compcert.ia32.SelectOpproof <> eval_xorimm thm
R18390:18400 compcert.ia32.SelectOpproof <> eval_xorimm thm
prf 18440:18453 <> eval_divs_base
R18572:18578 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18580:18581 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18622:18625 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18582:18590 compcert.backend.CminorSel <> eval_expr ind
R18621:18621 compcert.ia32.SelectOpproof <> v var
R18606:18614 compcert.ia32.SelectOp <> divs_base def
R18618:18618 compcert.ia32.SelectOpproof <> b var
R18616:18616 compcert.ia32.SelectOpproof <> a var
R18602:18603 compcert.ia32.SelectOpproof <> le var
R18600:18600 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R18598:18598 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R18595:18596 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R18592:18593 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R18626:18636 compcert.common.Values Val lessdef ind
R18640:18640 compcert.ia32.SelectOpproof <> v var
R18638:18638 compcert.ia32.SelectOpproof <> z var
R18557:18559 Coq.Init.Logic <> :type_scope:x_'='_x not
R18545:18552 compcert.common.Values Val divs def
R18556:18556 compcert.ia32.SelectOpproof <> y var
R18554:18554 compcert.ia32.SelectOpproof <> x var
R18560:18563 Coq.Init.Datatypes <> Some constr
R18565:18565 compcert.ia32.SelectOpproof <> z var
R18513:18521 compcert.backend.CminorSel <> eval_expr ind
R18538:18538 compcert.ia32.SelectOpproof <> y var
R18536:18536 compcert.ia32.SelectOpproof <> b var
R18533:18534 compcert.ia32.SelectOpproof <> le var
R18531:18531 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R18529:18529 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R18526:18527 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R18523:18524 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R18481:18489 compcert.backend.CminorSel <> eval_expr ind
R18506:18506 compcert.ia32.SelectOpproof <> x var
R18504:18504 compcert.ia32.SelectOpproof <> a var
R18501:18502 compcert.ia32.SelectOpproof <> le var
R18499:18499 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R18497:18497 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R18494:18495 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R18491:18492 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R18667:18675 compcert.ia32.SelectOp <> divs_base def
prf 18723:18736 <> eval_divu_base
R18855:18861 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18863:18864 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18905:18908 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18865:18873 compcert.backend.CminorSel <> eval_expr ind
R18904:18904 compcert.ia32.SelectOpproof <> v var
R18889:18897 compcert.ia32.SelectOp <> divu_base def
R18901:18901 compcert.ia32.SelectOpproof <> b var
R18899:18899 compcert.ia32.SelectOpproof <> a var
R18885:18886 compcert.ia32.SelectOpproof <> le var
R18883:18883 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R18881:18881 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R18878:18879 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R18875:18876 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R18909:18919 compcert.common.Values Val lessdef ind
R18923:18923 compcert.ia32.SelectOpproof <> v var
R18921:18921 compcert.ia32.SelectOpproof <> z var
R18840:18842 Coq.Init.Logic <> :type_scope:x_'='_x not
R18828:18835 compcert.common.Values Val divu def
R18839:18839 compcert.ia32.SelectOpproof <> y var
R18837:18837 compcert.ia32.SelectOpproof <> x var
R18843:18846 Coq.Init.Datatypes <> Some constr
R18848:18848 compcert.ia32.SelectOpproof <> z var
R18796:18804 compcert.backend.CminorSel <> eval_expr ind
R18821:18821 compcert.ia32.SelectOpproof <> y var
R18819:18819 compcert.ia32.SelectOpproof <> b var
R18816:18817 compcert.ia32.SelectOpproof <> le var
R18814:18814 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R18812:18812 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R18809:18810 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R18806:18807 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R18764:18772 compcert.backend.CminorSel <> eval_expr ind
R18789:18789 compcert.ia32.SelectOpproof <> x var
R18787:18787 compcert.ia32.SelectOpproof <> a var
R18784:18785 compcert.ia32.SelectOpproof <> le var
R18782:18782 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R18780:18780 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R18777:18778 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R18774:18775 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R18950:18958 compcert.ia32.SelectOp <> divu_base def
prf 19006:19019 <> eval_mods_base
R19138:19144 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19146:19147 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19188:19191 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19148:19156 compcert.backend.CminorSel <> eval_expr ind
R19187:19187 compcert.ia32.SelectOpproof <> v var
R19172:19180 compcert.ia32.SelectOp <> mods_base def
R19184:19184 compcert.ia32.SelectOpproof <> b var
R19182:19182 compcert.ia32.SelectOpproof <> a var
R19168:19169 compcert.ia32.SelectOpproof <> le var
R19166:19166 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R19164:19164 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R19161:19162 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R19158:19159 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R19192:19202 compcert.common.Values Val lessdef ind
R19206:19206 compcert.ia32.SelectOpproof <> v var
R19204:19204 compcert.ia32.SelectOpproof <> z var
R19123:19125 Coq.Init.Logic <> :type_scope:x_'='_x not
R19111:19118 compcert.common.Values Val mods def
R19122:19122 compcert.ia32.SelectOpproof <> y var
R19120:19120 compcert.ia32.SelectOpproof <> x var
R19126:19129 Coq.Init.Datatypes <> Some constr
R19131:19131 compcert.ia32.SelectOpproof <> z var
R19079:19087 compcert.backend.CminorSel <> eval_expr ind
R19104:19104 compcert.ia32.SelectOpproof <> y var
R19102:19102 compcert.ia32.SelectOpproof <> b var
R19099:19100 compcert.ia32.SelectOpproof <> le var
R19097:19097 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R19095:19095 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R19092:19093 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R19089:19090 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R19047:19055 compcert.backend.CminorSel <> eval_expr ind
R19072:19072 compcert.ia32.SelectOpproof <> x var
R19070:19070 compcert.ia32.SelectOpproof <> a var
R19067:19068 compcert.ia32.SelectOpproof <> le var
R19065:19065 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R19063:19063 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R19060:19061 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R19057:19058 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R19233:19241 compcert.ia32.SelectOp <> mods_base def
prf 19289:19302 <> eval_modu_base
R19421:19427 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19429:19430 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19471:19474 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19431:19439 compcert.backend.CminorSel <> eval_expr ind
R19470:19470 compcert.ia32.SelectOpproof <> v var
R19455:19463 compcert.ia32.SelectOp <> modu_base def
R19467:19467 compcert.ia32.SelectOpproof <> b var
R19465:19465 compcert.ia32.SelectOpproof <> a var
R19451:19452 compcert.ia32.SelectOpproof <> le var
R19449:19449 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R19447:19447 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R19444:19445 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R19441:19442 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R19475:19485 compcert.common.Values Val lessdef ind
R19489:19489 compcert.ia32.SelectOpproof <> v var
R19487:19487 compcert.ia32.SelectOpproof <> z var
R19406:19408 Coq.Init.Logic <> :type_scope:x_'='_x not
R19394:19401 compcert.common.Values Val modu def
R19405:19405 compcert.ia32.SelectOpproof <> y var
R19403:19403 compcert.ia32.SelectOpproof <> x var
R19409:19412 Coq.Init.Datatypes <> Some constr
R19414:19414 compcert.ia32.SelectOpproof <> z var
R19362:19370 compcert.backend.CminorSel <> eval_expr ind
R19387:19387 compcert.ia32.SelectOpproof <> y var
R19385:19385 compcert.ia32.SelectOpproof <> b var
R19382:19383 compcert.ia32.SelectOpproof <> le var
R19380:19380 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R19378:19378 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R19375:19376 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R19372:19373 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R19330:19338 compcert.backend.CminorSel <> eval_expr ind
R19355:19355 compcert.ia32.SelectOpproof <> x var
R19353:19353 compcert.ia32.SelectOpproof <> a var
R19350:19351 compcert.ia32.SelectOpproof <> le var
R19348:19348 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R19346:19346 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R19343:19344 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R19340:19341 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R19516:19524 compcert.ia32.SelectOp <> modu_base def
prf 19572:19583 <> eval_shrximm
R19675:19681 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19683:19684 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19723:19726 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19685:19693 compcert.backend.CminorSel <> eval_expr ind
R19722:19722 compcert.ia32.SelectOpproof <> v var
R19709:19715 compcert.ia32.SelectOp <> shrximm def
R19719:19719 compcert.ia32.SelectOpproof <> n var
R19717:19717 compcert.ia32.SelectOpproof <> a var
R19705:19706 compcert.ia32.SelectOpproof <> le var
R19703:19703 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R19701:19701 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R19698:19699 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R19695:19696 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R19727:19737 compcert.common.Values Val lessdef ind
R19741:19741 compcert.ia32.SelectOpproof <> v var
R19739:19739 compcert.ia32.SelectOpproof <> z var
R19660:19662 Coq.Init.Logic <> :type_scope:x_'='_x not
R19641:19648 compcert.common.Values Val shrx def
R19653:19656 compcert.common.Values <> Vint constr
R19658:19658 compcert.ia32.SelectOpproof <> n var
R19650:19650 compcert.ia32.SelectOpproof <> x var
R19663:19666 Coq.Init.Datatypes <> Some constr
R19668:19668 compcert.ia32.SelectOpproof <> z var
R19609:19617 compcert.backend.CminorSel <> eval_expr ind
R19634:19634 compcert.ia32.SelectOpproof <> x var
R19632:19632 compcert.ia32.SelectOpproof <> a var
R19629:19630 compcert.ia32.SelectOpproof <> le var
R19627:19627 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R19625:19625 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R19622:19623 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R19619:19620 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R19768:19774 compcert.ia32.SelectOp <> shrximm def
R19810:19817 compcert.lib.Integers Int zero def
R19796:19806 compcert.lib.Integers Int eq_spec thm
R19789:19794 compcert.lib.Integers Int eq def
R19912:19918 compcert.lib.Integers Int ltu def
R19930:19937 compcert.lib.Integers Int repr def
R19920:19927 compcert.lib.Integers Int zero def
R19912:19918 compcert.lib.Integers Int ltu def
R19930:19937 compcert.lib.Integers Int repr def
R19920:19927 compcert.lib.Integers Int zero def
R19964:19971 compcert.lib.Integers Int shrx def
R19975:19982 compcert.lib.Integers Int zero def
R19964:19971 compcert.lib.Integers Int shrx def
R19975:19982 compcert.lib.Integers Int zero def
R20009:20016 compcert.lib.Integers Int shrx def
R20019:20026 compcert.lib.Integers Int divs def
R20037:20048 compcert.lib.Integers Int shl_zero thm
R20037:20048 compcert.lib.Integers Int shl_zero thm
R20062:20071 compcert.lib.Integers Int signed def
R20073:20079 compcert.lib.Integers Int one def
R20062:20071 compcert.lib.Integers Int signed def
R20073:20079 compcert.lib.Integers Int one def
R20098:20107 Coq.ZArith.BinInt Z quot_1_r thm
R20098:20107 Coq.ZArith.BinInt Z quot_1_r thm
R20118:20132 compcert.lib.Integers Int repr_signed thm
R20118:20132 compcert.lib.Integers Int repr_signed thm
prf 20192:20199 <> eval_shl
R20202:20225 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R20231:20237 compcert.common.Values Val shl def
R20227:20229 compcert.ia32.SelectOp <> shl def
R20277:20279 compcert.ia32.SelectOp <> shl def
R20288:20296 compcert.ia32.SelectOp <> shl_match def
R20288:20296 compcert.ia32.SelectOp <> shl_match def
R20327:20337 compcert.ia32.SelectOpproof <> eval_shlimm thm
R20327:20337 compcert.ia32.SelectOpproof <> eval_shlimm thm
prf 20378:20385 <> eval_shr
R20388:20411 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R20417:20423 compcert.common.Values Val shr def
R20413:20415 compcert.ia32.SelectOp <> shr def
R20463:20465 compcert.ia32.SelectOp <> shr def
R20474:20482 compcert.ia32.SelectOp <> shr_match def
R20474:20482 compcert.ia32.SelectOp <> shr_match def
R20513:20523 compcert.ia32.SelectOpproof <> eval_shrimm thm
R20513:20523 compcert.ia32.SelectOpproof <> eval_shrimm thm
prf 20564:20572 <> eval_shru
R20575:20598 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R20605:20612 compcert.common.Values Val shru def
R20600:20603 compcert.ia32.SelectOp <> shru def
R20652:20655 compcert.ia32.SelectOp <> shru def
R20664:20673 compcert.ia32.SelectOp <> shru_match def
R20664:20673 compcert.ia32.SelectOp <> shru_match def
R20704:20715 compcert.ia32.SelectOpproof <> eval_shruimm thm
R20704:20715 compcert.ia32.SelectOpproof <> eval_shruimm thm
prf 20756:20764 <> eval_negf
R20767:20789 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R20796:20803 compcert.common.Values Val negf def
R20791:20794 compcert.ia32.SelectOp <> negf def
prf 20858:20866 <> eval_absf
R20869:20891 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R20898:20905 compcert.common.Values Val absf def
R20893:20896 compcert.ia32.SelectOp <> absf def
prf 20960:20968 <> eval_addf
R20971:20994 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R21001:21008 compcert.common.Values Val addf def
R20996:20999 compcert.ia32.SelectOp <> addf def
prf 21063:21071 <> eval_subf
R21074:21097 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R21104:21111 compcert.common.Values Val subf def
R21099:21102 compcert.ia32.SelectOp <> subf def
prf 21165:21173 <> eval_mulf
R21176:21199 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R21206:21213 compcert.common.Values Val mulf def
R21201:21204 compcert.ia32.SelectOp <> mulf def
prf 21267:21276 <> eval_negfs
R21279:21301 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R21309:21317 compcert.common.Values Val negfs def
R21303:21307 compcert.ia32.SelectOp <> negfs def
prf 21372:21381 <> eval_absfs
R21384:21406 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R21414:21422 compcert.common.Values Val absfs def
R21408:21412 compcert.ia32.SelectOp <> absfs def
prf 21477:21486 <> eval_addfs
R21489:21512 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R21520:21528 compcert.common.Values Val addfs def
R21514:21518 compcert.ia32.SelectOp <> addfs def
prf 21583:21592 <> eval_subfs
R21595:21618 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R21626:21634 compcert.common.Values Val subfs def
R21620:21624 compcert.ia32.SelectOp <> subfs def
prf 21688:21697 <> eval_mulfs
R21700:21723 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R21731:21739 compcert.common.Values Val mulfs def
R21725:21729 compcert.ia32.SelectOp <> mulfs def
sec 21793:21800 CMCONSTR COMP_IMM
var 21813:21819 CMCONSTR.COMP_IMM default
R21843:21851 compcert.ia32.Op <> condition ind
R21836:21838 compcert.lib.Integers <> int syndef
R21822:21831 compcert.lib.Integers <> comparison ind
var 21863:21868 CMCONSTR.COMP_IMM intsem
R21899:21902 Coq.Init.Datatypes <> bool ind
R21892:21894 compcert.lib.Integers <> int syndef
R21885:21887 compcert.lib.Integers <> int syndef
R21871:21880 compcert.lib.Integers <> comparison ind
var 21914:21916 CMCONSTR.COMP_IMM sem
R21947:21949 compcert.common.Values <> val ind
R21940:21942 compcert.common.Values <> val ind
R21933:21935 compcert.common.Values <> val ind
R21919:21928 compcert.lib.Integers <> comparison ind
var 21964:21970 CMCONSTR.COMP_IMM sem_int
R22010:22012 Coq.Init.Logic <> :type_scope:x_'='_x not
R21987:21989 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem var
R22003:22006 compcert.common.Values <> Vint constr
R22008:22008 compcert.ia32.SelectOpproof <> y var
R21994:21997 compcert.common.Values <> Vint constr
R21999:21999 compcert.ia32.SelectOpproof <> x var
R21991:21991 compcert.ia32.SelectOpproof <> c var
R22013:22023 compcert.common.Values Val of_bool def
R22026:22031 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.intsem var
R22037:22037 compcert.ia32.SelectOpproof <> y var
R22035:22035 compcert.ia32.SelectOpproof <> x var
R22033:22033 compcert.ia32.SelectOpproof <> c var
var 22052:22060 CMCONSTR.COMP_IMM sem_undef
R22089:22091 Coq.Init.Logic <> :type_scope:x_'='_x not
R22075:22077 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem var
R22088:22088 compcert.ia32.SelectOpproof <> v var
R22081:22086 compcert.common.Values <> Vundef constr
R22079:22079 compcert.ia32.SelectOpproof <> c var
R22092:22097 compcert.common.Values <> Vundef constr
var 22111:22116 CMCONSTR.COMP_IMM sem_eq
R22156:22158 Coq.Init.Logic <> :type_scope:x_'='_x not
R22131:22133 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem var
R22149:22152 compcert.common.Values <> Vint constr
R22154:22154 compcert.ia32.SelectOpproof <> y var
R22140:22143 compcert.common.Values <> Vint constr
R22145:22145 compcert.ia32.SelectOpproof <> x var
R22135:22137 compcert.lib.Integers <> Ceq constr
R22159:22169 compcert.common.Values Val of_bool def
R22172:22177 compcert.lib.Integers Int eq def
R22181:22181 compcert.ia32.SelectOpproof <> y var
R22179:22179 compcert.ia32.SelectOpproof <> x var
var 22196:22201 CMCONSTR.COMP_IMM sem_ne
R22241:22243 Coq.Init.Logic <> :type_scope:x_'='_x not
R22216:22218 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem var
R22234:22237 compcert.common.Values <> Vint constr
R22239:22239 compcert.ia32.SelectOpproof <> y var
R22225:22228 compcert.common.Values <> Vint constr
R22230:22230 compcert.ia32.SelectOpproof <> x var
R22220:22222 compcert.lib.Integers <> Cne constr
R22244:22254 compcert.common.Values Val of_bool def
R22257:22260 Coq.Init.Datatypes <> negb def
R22263:22268 compcert.lib.Integers Int eq def
R22272:22272 compcert.ia32.SelectOpproof <> y var
R22270:22270 compcert.ia32.SelectOpproof <> x var
var 22288:22298 CMCONSTR.COMP_IMM sem_default
R22331:22333 Coq.Init.Logic <> :type_scope:x_'='_x not
R22315:22317 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem var
R22324:22327 compcert.common.Values <> Vint constr
R22329:22329 compcert.ia32.SelectOpproof <> n var
R22321:22321 compcert.ia32.SelectOpproof <> v var
R22319:22319 compcert.ia32.SelectOpproof <> c var
R22334:22347 compcert.common.Values Val of_optbool def
R22350:22363 compcert.ia32.Op <> eval_condition def
R22390:22390 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R22381:22384 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R22380:22380 compcert.ia32.SelectOpproof <> v var
R22385:22387 Coq.Init.Datatypes <> nil constr
R22366:22372 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.default var
R22376:22376 compcert.ia32.SelectOpproof <> n var
R22374:22374 compcert.ia32.SelectOpproof <> c var
prf 22401:22412 <> eval_compimm
R22471:22477 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22479:22480 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22537:22549 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22481:22489 compcert.backend.CminorSel <> eval_expr ind
R22536:22536 compcert.ia32.SelectOpproof <> v var
R22505:22511 compcert.ia32.SelectOp <> compimm def
R22532:22533 compcert.ia32.SelectOpproof <> n2 var
R22530:22530 compcert.ia32.SelectOpproof <> a var
R22528:22528 compcert.ia32.SelectOpproof <> c var
R22521:22526 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.intsem var
R22513:22519 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.default var
R22501:22502 compcert.ia32.SelectOpproof <> le var
R22499:22499 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R22497:22497 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R22494:22495 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R22491:22492 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R22550:22560 compcert.common.Values Val lessdef ind
R22582:22582 compcert.ia32.SelectOpproof <> v var
R22563:22565 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem var
R22572:22575 compcert.common.Values <> Vint constr
R22577:22578 compcert.ia32.SelectOpproof <> n2 var
R22569:22569 compcert.ia32.SelectOpproof <> x var
R22567:22567 compcert.ia32.SelectOpproof <> c var
R22439:22447 compcert.backend.CminorSel <> eval_expr ind
R22464:22464 compcert.ia32.SelectOpproof <> x var
R22462:22462 compcert.ia32.SelectOpproof <> a var
R22459:22460 compcert.ia32.SelectOpproof <> le var
R22457:22457 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R22455:22455 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R22452:22453 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R22449:22450 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R22619:22625 compcert.ia32.SelectOp <> compimm def
R22634:22646 compcert.ia32.SelectOp <> compimm_match def
R22634:22646 compcert.ia32.SelectOp <> compimm_match def
R22696:22702 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_int var
R22696:22702 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_int var
R22737:22742 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.intsem var
R22737:22742 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.intsem var
R22826:22835 compcert.lib.Integers Int eq_dec thm
R22840:22847 compcert.lib.Integers Int zero def
R22826:22835 compcert.lib.Integers Int eq_dec thm
R22840:22847 compcert.lib.Integers Int zero def
R22894:22914 compcert.ia32.Op <> eval_negate_condition thm
R22894:22914 compcert.ia32.Op <> eval_negate_condition thm
R22929:22942 compcert.ia32.Op <> eval_condition def
R22950:22950 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R22929:22942 compcert.ia32.Op <> eval_condition def
R22950:22950 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R22970:22974 compcert.common.Values <> Vtrue def
R22977:22982 compcert.common.Values <> Vfalse def
R23012:23017 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_eq var
R23012:23017 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_eq var
R23012:23017 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_eq var
R23036:23044 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R23036:23044 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R23065:23074 compcert.lib.Integers Int eq_dec thm
R23079:23085 compcert.lib.Integers Int one def
R23065:23074 compcert.lib.Integers Int eq_dec thm
R23079:23085 compcert.lib.Integers Int one def
R23133:23146 compcert.ia32.Op <> eval_condition def
R23154:23154 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R23133:23146 compcert.ia32.Op <> eval_condition def
R23154:23154 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R23174:23178 compcert.common.Values <> Vtrue def
R23181:23186 compcert.common.Values <> Vfalse def
R23216:23221 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_eq var
R23216:23221 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_eq var
R23216:23221 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_eq var
R23240:23248 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R23240:23248 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R23267:23270 compcert.common.Values <> Vint constr
R23272:23279 compcert.lib.Integers Int zero def
R23267:23270 compcert.common.Values <> Vint constr
R23272:23279 compcert.lib.Integers Int zero def
R23311:23324 compcert.ia32.Op <> eval_condition def
R23332:23332 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R23311:23324 compcert.ia32.Op <> eval_condition def
R23332:23332 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R23352:23356 compcert.common.Values <> Vtrue def
R23359:23364 compcert.common.Values <> Vfalse def
R23387:23392 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_eq var
R23403:23414 compcert.lib.Integers Int eq_false thm
R23387:23392 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_eq var
R23387:23392 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_eq var
R23403:23414 compcert.lib.Integers Int eq_false thm
R23403:23414 compcert.lib.Integers Int eq_false thm
R23433:23441 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R23433:23441 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R23515:23524 compcert.lib.Integers Int eq_dec thm
R23529:23536 compcert.lib.Integers Int zero def
R23515:23524 compcert.lib.Integers Int eq_dec thm
R23529:23536 compcert.lib.Integers Int zero def
R23585:23598 compcert.ia32.Op <> eval_condition def
R23606:23606 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R23585:23598 compcert.ia32.Op <> eval_condition def
R23606:23606 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R23626:23630 compcert.common.Values <> Vtrue def
R23633:23638 compcert.common.Values <> Vfalse def
R23668:23673 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_ne var
R23668:23673 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_ne var
R23668:23673 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_ne var
R23692:23700 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R23692:23700 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R23721:23730 compcert.lib.Integers Int eq_dec thm
R23735:23741 compcert.lib.Integers Int one def
R23721:23730 compcert.lib.Integers Int eq_dec thm
R23735:23741 compcert.lib.Integers Int one def
R23787:23807 compcert.ia32.Op <> eval_negate_condition thm
R23787:23807 compcert.ia32.Op <> eval_negate_condition thm
R23820:23833 compcert.ia32.Op <> eval_condition def
R23841:23841 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R23820:23833 compcert.ia32.Op <> eval_condition def
R23841:23841 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R23861:23865 compcert.common.Values <> Vtrue def
R23868:23873 compcert.common.Values <> Vfalse def
R23903:23908 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_ne var
R23903:23908 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_ne var
R23903:23908 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_ne var
R23927:23935 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R23927:23935 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R23954:23957 compcert.common.Values <> Vint constr
R23959:23965 compcert.lib.Integers Int one def
R23954:23957 compcert.common.Values <> Vint constr
R23959:23965 compcert.lib.Integers Int one def
R23997:24010 compcert.ia32.Op <> eval_condition def
R24018:24018 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R23997:24010 compcert.ia32.Op <> eval_condition def
R24018:24018 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R24038:24042 compcert.common.Values <> Vtrue def
R24045:24050 compcert.common.Values <> Vfalse def
R24073:24078 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_ne var
R24089:24100 compcert.lib.Integers Int eq_false thm
R24073:24078 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_ne var
R24073:24078 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_ne var
R24089:24100 compcert.lib.Integers Int eq_false thm
R24089:24100 compcert.lib.Integers Int eq_false thm
R24119:24127 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24119:24127 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24164:24173 compcert.lib.Integers Int eq_dec thm
R24178:24185 compcert.lib.Integers Int zero def
R24164:24173 compcert.lib.Integers Int eq_dec thm
R24178:24185 compcert.lib.Integers Int zero def
R24286:24294 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24286:24294 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24286:24294 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24286:24294 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24286:24294 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24286:24294 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24286:24294 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24312:24317 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_eq var
R24312:24317 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_eq var
R24333:24338 compcert.lib.Integers Int eq def
R24355:24362 compcert.lib.Integers Int zero def
R24341:24347 compcert.lib.Integers Int and def
R24333:24338 compcert.lib.Integers Int eq def
R24355:24362 compcert.lib.Integers Int zero def
R24341:24347 compcert.lib.Integers Int and def
R24405:24415 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_default var
R24405:24415 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_default var
R24452:24461 compcert.lib.Integers Int eq_dec thm
R24466:24473 compcert.lib.Integers Int zero def
R24452:24461 compcert.lib.Integers Int eq_dec thm
R24466:24473 compcert.lib.Integers Int zero def
R24574:24582 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24574:24582 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24574:24582 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24574:24582 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24574:24582 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24574:24582 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24574:24582 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_undef var
R24600:24605 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_ne var
R24600:24605 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_ne var
R24621:24626 compcert.lib.Integers Int eq def
R24643:24650 compcert.lib.Integers Int zero def
R24629:24635 compcert.lib.Integers Int and def
R24621:24626 compcert.lib.Integers Int eq def
R24643:24650 compcert.lib.Integers Int zero def
R24629:24635 compcert.lib.Integers Int and def
R24693:24703 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_default var
R24693:24703 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_default var
R24758:24768 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_default var
R24758:24768 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_default var
var 24794:24801 CMCONSTR.COMP_IMM sem_swap
R24847:24849 Coq.Init.Logic <> :type_scope:x_'='_x not
R24820:24822 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem var
R24846:24846 compcert.ia32.SelectOpproof <> y var
R24844:24844 compcert.ia32.SelectOpproof <> x var
R24825:24839 compcert.lib.Integers <> swap_comparison def
R24841:24841 compcert.ia32.SelectOpproof <> c var
R24850:24852 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem var
R24858:24858 compcert.ia32.SelectOpproof <> x var
R24856:24856 compcert.ia32.SelectOpproof <> y var
R24854:24854 compcert.ia32.SelectOpproof <> c var
prf 24868:24884 <> eval_compimm_swap
R24943:24949 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24951:24952 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25027:25039 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24953:24961 compcert.backend.CminorSel <> eval_expr ind
R25026:25026 compcert.ia32.SelectOpproof <> v var
R24977:24983 compcert.ia32.SelectOp <> compimm def
R25022:25023 compcert.ia32.SelectOpproof <> n2 var
R25020:25020 compcert.ia32.SelectOpproof <> a var
R25001:25015 compcert.lib.Integers <> swap_comparison def
R25017:25017 compcert.ia32.SelectOpproof <> c var
R24993:24998 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.intsem var
R24985:24991 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.default var
R24973:24974 compcert.ia32.SelectOpproof <> le var
R24971:24971 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R24969:24969 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R24966:24967 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R24963:24964 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R25040:25050 compcert.common.Values Val lessdef ind
R25072:25072 compcert.ia32.SelectOpproof <> v var
R25053:25055 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem var
R25069:25069 compcert.ia32.SelectOpproof <> x var
R25060:25063 compcert.common.Values <> Vint constr
R25065:25066 compcert.ia32.SelectOpproof <> n2 var
R25057:25057 compcert.ia32.SelectOpproof <> c var
R24911:24919 compcert.backend.CminorSel <> eval_expr ind
R24936:24936 compcert.ia32.SelectOpproof <> x var
R24934:24934 compcert.ia32.SelectOpproof <> a var
R24931:24932 compcert.ia32.SelectOpproof <> le var
R24929:24929 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R24927:24927 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R24924:24925 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R24921:24922 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R25103:25110 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_swap var
R25103:25110 compcert.ia32.SelectOpproof <> CMCONSTR.COMP_IMM.sem_swap var
R25120:25131 compcert.ia32.SelectOpproof <> eval_compimm thm
R25120:25131 compcert.ia32.SelectOpproof <> eval_compimm thm
R25152:25159 compcert.ia32.SelectOpproof CMCONSTR.COMP_IMM <> sec
prf 25171:25179 <> eval_comp
R25194:25217 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R25229:25235 compcert.common.Values Val cmp def
R25237:25237 compcert.ia32.SelectOpproof <> c var
R25220:25223 compcert.ia32.SelectOp <> comp def
R25225:25225 compcert.ia32.SelectOpproof <> c var
R25286:25289 compcert.ia32.SelectOp <> comp def
R25298:25307 compcert.ia32.SelectOp <> comp_match def
R25298:25307 compcert.ia32.SelectOp <> comp_match def
R25341:25357 compcert.ia32.SelectOpproof <> eval_compimm_swap thm
R25341:25357 compcert.ia32.SelectOpproof <> eval_compimm_swap thm
R25385:25391 compcert.common.Values Val cmp def
R25402:25418 compcert.common.Values Val swap_cmp_bool thm
R25402:25418 compcert.common.Values Val swap_cmp_bool thm
R25436:25447 compcert.ia32.SelectOpproof <> eval_compimm thm
R25436:25447 compcert.ia32.SelectOpproof <> eval_compimm thm
prf 25489:25498 <> eval_compu
R25513:25536 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R25549:25556 compcert.common.Values Val cmpu def
R25580:25580 compcert.ia32.SelectOpproof <> c var
R25559:25575 compcert.common.Memory Mem valid_pointer def
R25577:25577 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R25539:25543 compcert.ia32.SelectOp <> compu def
R25545:25545 compcert.ia32.SelectOpproof <> c var
R25629:25633 compcert.ia32.SelectOp <> compu def
R25642:25652 compcert.ia32.SelectOp <> compu_match def
R25642:25652 compcert.ia32.SelectOp <> compu_match def
R25686:25702 compcert.ia32.SelectOpproof <> eval_compimm_swap thm
R25686:25702 compcert.ia32.SelectOpproof <> eval_compimm_swap thm
R25730:25737 compcert.common.Values Val cmpu def
R25748:25765 compcert.common.Values Val swap_cmpu_bool thm
R25748:25765 compcert.common.Values Val swap_cmpu_bool thm
R25783:25794 compcert.ia32.SelectOpproof <> eval_compimm thm
R25783:25794 compcert.ia32.SelectOpproof <> eval_compimm thm
prf 25836:25845 <> eval_compf
R25860:25883 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R25896:25903 compcert.common.Values Val cmpf def
R25905:25905 compcert.ia32.SelectOpproof <> c var
R25886:25890 compcert.ia32.SelectOp <> compf def
R25892:25892 compcert.ia32.SelectOpproof <> c var
R25946:25950 compcert.ia32.SelectOp <> compf def
prf 25982:25992 <> eval_compfs
R26007:26030 compcert.ia32.SelectOpproof <> binary_constructor_sound def
R26044:26052 compcert.common.Values Val cmpfs def
R26054:26054 compcert.ia32.SelectOpproof <> c var
R26033:26038 compcert.ia32.SelectOp <> compfs def
R26040:26040 compcert.ia32.SelectOpproof <> c var
R26095:26100 compcert.ia32.SelectOp <> compfs def
prf 26132:26147 <> eval_cast8signed
R26150:26172 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R26187:26198 compcert.common.Values Val sign_ext def
R26174:26184 compcert.ia32.SelectOp <> cast8signed def
R26241:26251 compcert.ia32.SelectOp <> cast8signed def
R26260:26276 compcert.ia32.SelectOp <> cast8signed_match def
R26260:26276 compcert.ia32.SelectOp <> cast8signed_match def
prf 26347:26364 <> eval_cast8unsigned
R26367:26389 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R26406:26417 compcert.common.Values Val zero_ext def
R26391:26403 compcert.ia32.SelectOp <> cast8unsigned def
R26460:26472 compcert.ia32.SelectOp <> cast8unsigned def
R26485:26503 compcert.ia32.SelectOp <> cast8unsigned_match def
R26485:26503 compcert.ia32.SelectOp <> cast8unsigned_match def
R26560:26575 compcert.common.Values Val zero_ext_and thm
R26560:26575 compcert.common.Values Val zero_ext_and thm
R26586:26598 compcert.common.Values Val and_assoc thm
R26586:26598 compcert.common.Values Val and_assoc thm
R26611:26624 compcert.lib.Integers Int and_commut thm
R26611:26624 compcert.lib.Integers Int and_commut thm
R26633:26643 compcert.ia32.SelectOpproof <> eval_andimm thm
R26633:26643 compcert.ia32.SelectOpproof <> eval_andimm thm
prf 26698:26714 <> eval_cast16signed
R26717:26739 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R26755:26766 compcert.common.Values Val sign_ext def
R26741:26752 compcert.ia32.SelectOp <> cast16signed def
R26810:26821 compcert.ia32.SelectOp <> cast16signed def
R26830:26847 compcert.ia32.SelectOp <> cast16signed_match def
R26830:26847 compcert.ia32.SelectOp <> cast16signed_match def
prf 26918:26936 <> eval_cast16unsigned
R26939:26961 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R26979:26990 compcert.common.Values Val zero_ext def
R26963:26976 compcert.ia32.SelectOp <> cast16unsigned def
R27034:27047 compcert.ia32.SelectOp <> cast16unsigned def
R27060:27079 compcert.ia32.SelectOp <> cast16unsigned_match def
R27060:27079 compcert.ia32.SelectOp <> cast16unsigned_match def
R27136:27151 compcert.common.Values Val zero_ext_and thm
R27136:27151 compcert.common.Values Val zero_ext_and thm
R27162:27174 compcert.common.Values Val and_assoc thm
R27162:27174 compcert.common.Values Val and_assoc thm
R27188:27201 compcert.lib.Integers Int and_commut thm
R27188:27201 compcert.lib.Integers Int and_commut thm
R27210:27220 compcert.ia32.SelectOpproof <> eval_andimm thm
R27210:27220 compcert.ia32.SelectOpproof <> eval_andimm thm
prf 27275:27292 <> eval_singleoffloat
R27295:27317 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R27333:27349 compcert.common.Values Val singleoffloat def
R27319:27331 compcert.ia32.SelectOp <> singleoffloat def
R27381:27393 compcert.ia32.SelectOp <> singleoffloat def
prf 27425:27442 <> eval_floatofsingle
R27445:27467 compcert.ia32.SelectOpproof <> unary_constructor_sound def
R27483:27499 compcert.common.Values Val floatofsingle def
R27469:27481 compcert.ia32.SelectOp <> floatofsingle def
R27531:27543 compcert.ia32.SelectOp <> floatofsingle def
prf 27575:27589 <> eval_intoffloat
R27676:27682 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27684:27685 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27725:27728 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27686:27694 compcert.backend.CminorSel <> eval_expr ind
R27724:27724 compcert.ia32.SelectOpproof <> v var
R27710:27719 compcert.ia32.SelectOp <> intoffloat def
R27721:27721 compcert.ia32.SelectOpproof <> a var
R27706:27707 compcert.ia32.SelectOpproof <> le var
R27704:27704 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R27702:27702 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R27699:27700 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R27696:27697 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R27729:27739 compcert.common.Values Val lessdef ind
R27743:27743 compcert.ia32.SelectOpproof <> v var
R27741:27741 compcert.ia32.SelectOpproof <> y var
R27661:27663 Coq.Init.Logic <> :type_scope:x_'='_x not
R27645:27658 compcert.common.Values Val intoffloat def
R27660:27660 compcert.ia32.SelectOpproof <> x var
R27664:27667 Coq.Init.Datatypes <> Some constr
R27669:27669 compcert.ia32.SelectOpproof <> y var
R27613:27621 compcert.backend.CminorSel <> eval_expr ind
R27638:27638 compcert.ia32.SelectOpproof <> x var
R27636:27636 compcert.ia32.SelectOpproof <> a var
R27633:27634 compcert.ia32.SelectOpproof <> le var
R27631:27631 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R27629:27629 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R27626:27627 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R27623:27624 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R27770:27779 compcert.ia32.SelectOp <> intoffloat def
prf 27812:27826 <> eval_floatofint
R27913:27919 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27921:27922 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27962:27965 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27923:27931 compcert.backend.CminorSel <> eval_expr ind
R27961:27961 compcert.ia32.SelectOpproof <> v var
R27947:27956 compcert.ia32.SelectOp <> floatofint def
R27958:27958 compcert.ia32.SelectOpproof <> a var
R27943:27944 compcert.ia32.SelectOpproof <> le var
R27941:27941 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R27939:27939 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R27936:27937 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R27933:27934 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R27966:27976 compcert.common.Values Val lessdef ind
R27980:27980 compcert.ia32.SelectOpproof <> v var
R27978:27978 compcert.ia32.SelectOpproof <> y var
R27898:27900 Coq.Init.Logic <> :type_scope:x_'='_x not
R27882:27895 compcert.common.Values Val floatofint def
R27897:27897 compcert.ia32.SelectOpproof <> x var
R27901:27904 Coq.Init.Datatypes <> Some constr
R27906:27906 compcert.ia32.SelectOpproof <> y var
R27850:27858 compcert.backend.CminorSel <> eval_expr ind
R27875:27875 compcert.ia32.SelectOpproof <> x var
R27873:27873 compcert.ia32.SelectOpproof <> a var
R27870:27871 compcert.ia32.SelectOpproof <> le var
R27868:27868 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R27866:27866 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R27863:27864 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R27860:27861 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R28015:28024 compcert.ia32.SelectOp <> floatofint def
R28033:28048 compcert.ia32.SelectOp <> floatofint_match def
R28033:28048 compcert.ia32.SelectOp <> floatofint_match def
prf 28120:28135 <> eval_intuoffloat
R28223:28229 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28231:28232 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28273:28276 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R28233:28241 compcert.backend.CminorSel <> eval_expr ind
R28272:28272 compcert.ia32.SelectOpproof <> v var
R28257:28267 compcert.ia32.SelectOp <> intuoffloat def
R28269:28269 compcert.ia32.SelectOpproof <> a var
R28253:28254 compcert.ia32.SelectOpproof <> le var
R28251:28251 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R28249:28249 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R28246:28247 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R28243:28244 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R28277:28287 compcert.common.Values Val lessdef ind
R28291:28291 compcert.ia32.SelectOpproof <> v var
R28289:28289 compcert.ia32.SelectOpproof <> y var
R28208:28210 Coq.Init.Logic <> :type_scope:x_'='_x not
R28191:28205 compcert.common.Values Val intuoffloat def
R28207:28207 compcert.ia32.SelectOpproof <> x var
R28211:28214 Coq.Init.Datatypes <> Some constr
R28216:28216 compcert.ia32.SelectOpproof <> y var
R28159:28167 compcert.backend.CminorSel <> eval_expr ind
R28184:28184 compcert.ia32.SelectOpproof <> x var
R28182:28182 compcert.ia32.SelectOpproof <> a var
R28179:28180 compcert.ia32.SelectOpproof <> le var
R28177:28177 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R28175:28175 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R28172:28173 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R28169:28170 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R28366:28378 compcert.lib.Floats Float to_intu def
R28366:28378 compcert.lib.Floats Float to_intu def
R28429:28432 compcert.common.Values <> Vint constr
R28429:28432 compcert.common.Values <> Vint constr
R28458:28468 compcert.ia32.SelectOp <> intuoffloat def
R28484:28491 compcert.lib.Integers Int repr def
R28493:28508 compcert.lib.Integers Int half_modulus def
R28484:28491 compcert.lib.Integers Int repr def
R28493:28508 compcert.lib.Integers Int half_modulus def
R28525:28537 compcert.lib.Floats Float of_intu def
R28525:28537 compcert.lib.Floats Float of_intu def
R28554:28562 compcert.backend.CminorSel <> eval_expr ind
R28621:28626 compcert.common.Values <> Vfloat constr
R28605:28611 compcert.backend.CminorSel <> Eletvar constr
R28614:28614 Coq.Init.Datatypes <> S constr
R28616:28616 Coq.Init.Datatypes <> O constr
R28584:28587 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28575:28580 compcert.common.Values <> Vfloat constr
R28596:28599 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28588:28593 compcert.common.Values <> Vfloat constr
R28572:28572 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R28570:28570 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R28567:28568 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R28564:28565 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R28554:28562 compcert.backend.CminorSel <> eval_expr ind
R28621:28626 compcert.common.Values <> Vfloat constr
R28605:28611 compcert.backend.CminorSel <> Eletvar constr
R28614:28614 Coq.Init.Datatypes <> S constr
R28616:28616 Coq.Init.Datatypes <> O constr
R28584:28587 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28575:28580 compcert.common.Values <> Vfloat constr
R28596:28599 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28588:28593 compcert.common.Values <> Vfloat constr
R28572:28572 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R28570:28570 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R28567:28568 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R28564:28565 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R28666:28674 compcert.backend.CminorSel <> eval_expr ind
R28729:28734 compcert.common.Values <> Vfloat constr
R28717:28723 compcert.backend.CminorSel <> Eletvar constr
R28725:28725 Coq.Init.Datatypes <> O constr
R28696:28699 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28687:28692 compcert.common.Values <> Vfloat constr
R28708:28711 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28700:28705 compcert.common.Values <> Vfloat constr
R28684:28684 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R28682:28682 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R28679:28680 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R28676:28677 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R28666:28674 compcert.backend.CminorSel <> eval_expr ind
R28729:28734 compcert.common.Values <> Vfloat constr
R28717:28723 compcert.backend.CminorSel <> Eletvar constr
R28725:28725 Coq.Init.Datatypes <> O constr
R28696:28699 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28687:28692 compcert.common.Values <> Vfloat constr
R28708:28711 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28700:28705 compcert.common.Values <> Vfloat constr
R28684:28684 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R28682:28682 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R28679:28680 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R28676:28677 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R28822:28827 compcert.common.Values <> Vfloat constr
R28880:28888 compcert.lib.Floats Float cmp def
R28890:28892 compcert.lib.Integers <> Clt constr
R28852:28866 compcert.backend.CminorSel <> eval_Econdition constr
R28880:28888 compcert.lib.Floats Float cmp def
R28890:28892 compcert.lib.Integers <> Clt constr
R28852:28866 compcert.backend.CminorSel <> eval_Econdition constr
R28936:28944 compcert.lib.Floats Float cmp def
R28946:28948 compcert.lib.Integers <> Clt constr
R28936:28944 compcert.lib.Floats Float cmp def
R28946:28948 compcert.lib.Integers <> Clt constr
R28973:28994 compcert.lib.Floats Float to_intu_to_int_1 thm
R29059:29080 compcert.lib.Floats Float to_intu_to_int_2 thm
R29100:29116 compcert.lib.Floats Float ox8000_0000 def
R29100:29116 compcert.lib.Floats Float ox8000_0000 def
R29159:29162 compcert.ia32.SelectOp <> subf def
R29181:29187 compcert.backend.CminorSel <> Eletvar constr
R29189:29189 Coq.Init.Datatypes <> O constr
R29165:29171 compcert.backend.CminorSel <> Eletvar constr
R29174:29174 Coq.Init.Datatypes <> S constr
R29176:29176 Coq.Init.Datatypes <> O constr
R29159:29162 compcert.ia32.SelectOp <> subf def
R29181:29187 compcert.backend.CminorSel <> Eletvar constr
R29189:29189 Coq.Init.Datatypes <> O constr
R29165:29171 compcert.backend.CminorSel <> Eletvar constr
R29174:29174 Coq.Init.Datatypes <> S constr
R29176:29176 Coq.Init.Datatypes <> O constr
R29207:29216 compcert.ia32.SelectOp <> intoffloat def
R29207:29216 compcert.ia32.SelectOp <> intoffloat def
R29234:29242 compcert.ia32.SelectOpproof <> eval_subf thm
R29302:29308 compcert.backend.CminorSel <> Eletvar constr
R29310:29310 Coq.Init.Datatypes <> O constr
R29291:29296 compcert.common.Values <> Vfloat constr
R29275:29281 compcert.backend.CminorSel <> Eletvar constr
R29284:29284 Coq.Init.Datatypes <> S constr
R29286:29286 Coq.Init.Datatypes <> O constr
R29254:29257 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29245:29250 compcert.common.Values <> Vfloat constr
R29266:29269 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29258:29263 compcert.common.Values <> Vfloat constr
R29234:29242 compcert.ia32.SelectOpproof <> eval_subf thm
R29302:29308 compcert.backend.CminorSel <> Eletvar constr
R29310:29310 Coq.Init.Datatypes <> O constr
R29291:29296 compcert.common.Values <> Vfloat constr
R29275:29281 compcert.backend.CminorSel <> Eletvar constr
R29284:29284 Coq.Init.Datatypes <> S constr
R29286:29286 Coq.Init.Datatypes <> O constr
R29254:29257 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29245:29250 compcert.common.Values <> Vfloat constr
R29266:29269 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29258:29263 compcert.common.Values <> Vfloat constr
R29387:29397 compcert.ia32.SelectOpproof <> eval_addimm thm
R29427:29430 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29418:29423 compcert.common.Values <> Vfloat constr
R29439:29442 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29431:29436 compcert.common.Values <> Vfloat constr
R29399:29415 compcert.lib.Floats Float ox8000_0000 def
R29387:29397 compcert.ia32.SelectOpproof <> eval_addimm thm
R29427:29430 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29418:29423 compcert.common.Values <> Vfloat constr
R29439:29442 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29431:29436 compcert.common.Values <> Vfloat constr
R29399:29415 compcert.lib.Floats Float ox8000_0000 def
R29474:29483 compcert.ia32.SelectOp <> intoffloat def
R29583:29597 compcert.lib.Integers Int sub_add_opp thm
R29583:29597 compcert.lib.Integers Int sub_add_opp thm
R29614:29626 compcert.lib.Integers Int add_assoc thm
R29614:29626 compcert.lib.Integers Int add_assoc thm
R29647:29660 compcert.lib.Integers Int add_commut thm
R29663:29669 compcert.lib.Integers Int neg def
R29647:29660 compcert.lib.Integers Int add_commut thm
R29663:29669 compcert.lib.Integers Int neg def
R29694:29709 compcert.lib.Integers Int add_neg_zero thm
R29694:29709 compcert.lib.Integers Int add_neg_zero thm
R29729:29740 compcert.lib.Integers Int add_zero thm
R29729:29740 compcert.lib.Integers Int add_zero thm
prf 29771:29786 <> eval_floatofintu
R29874:29880 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29882:29883 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29924:29927 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29884:29892 compcert.backend.CminorSel <> eval_expr ind
R29923:29923 compcert.ia32.SelectOpproof <> v var
R29908:29918 compcert.ia32.SelectOp <> floatofintu def
R29920:29920 compcert.ia32.SelectOpproof <> a var
R29904:29905 compcert.ia32.SelectOpproof <> le var
R29902:29902 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R29900:29900 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R29897:29898 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R29894:29895 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R29928:29938 compcert.common.Values Val lessdef ind
R29942:29942 compcert.ia32.SelectOpproof <> v var
R29940:29940 compcert.ia32.SelectOpproof <> y var
R29859:29861 Coq.Init.Logic <> :type_scope:x_'='_x not
R29842:29856 compcert.common.Values Val floatofintu def
R29858:29858 compcert.ia32.SelectOpproof <> x var
R29862:29865 Coq.Init.Datatypes <> Some constr
R29867:29867 compcert.ia32.SelectOpproof <> y var
R29810:29818 compcert.backend.CminorSel <> eval_expr ind
R29835:29835 compcert.ia32.SelectOpproof <> x var
R29833:29833 compcert.ia32.SelectOpproof <> a var
R29830:29831 compcert.ia32.SelectOpproof <> le var
R29828:29828 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R29826:29826 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R29823:29824 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R29820:29821 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R29977:29987 compcert.ia32.SelectOp <> floatofintu def
R29996:30012 compcert.ia32.SelectOp <> floatofintu_match def
R29996:30012 compcert.ia32.SelectOp <> floatofintu_match def
R30115:30120 compcert.common.Values <> Vfloat constr
R30123:30135 compcert.lib.Floats Float of_intu def
R30115:30120 compcert.common.Values <> Vfloat constr
R30123:30135 compcert.lib.Floats Float of_intu def
R30192:30204 compcert.lib.Floats Float of_intu def
R30206:30222 compcert.lib.Floats Float ox8000_0000 def
R30192:30204 compcert.lib.Floats Float of_intu def
R30206:30222 compcert.lib.Floats Float ox8000_0000 def
R30236:30244 compcert.backend.CminorSel <> eval_expr ind
R30284:30287 compcert.common.Values <> Vint constr
R30272:30278 compcert.backend.CminorSel <> Eletvar constr
R30280:30280 Coq.Init.Datatypes <> O constr
R30263:30266 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30257:30260 compcert.common.Values <> Vint constr
R30254:30254 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R30252:30252 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R30249:30250 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R30246:30247 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R30236:30244 compcert.backend.CminorSel <> eval_expr ind
R30284:30287 compcert.common.Values <> Vint constr
R30272:30278 compcert.backend.CminorSel <> Eletvar constr
R30280:30280 Coq.Init.Datatypes <> O constr
R30263:30266 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30257:30260 compcert.common.Values <> Vint constr
R30254:30254 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R30252:30252 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R30249:30250 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R30246:30247 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R30355:30361 compcert.lib.Integers Int ltu def
R30365:30381 compcert.lib.Floats Float ox8000_0000 def
R30327:30341 compcert.backend.CminorSel <> eval_Econdition constr
R30355:30361 compcert.lib.Integers Int ltu def
R30365:30381 compcert.lib.Floats Float ox8000_0000 def
R30327:30341 compcert.backend.CminorSel <> eval_Econdition constr
R30420:30426 compcert.lib.Integers Int ltu def
R30430:30446 compcert.lib.Floats Float ox8000_0000 def
R30420:30426 compcert.lib.Integers Int ltu def
R30430:30446 compcert.lib.Floats Float ox8000_0000 def
R30466:30487 compcert.lib.Floats Float of_intu_of_int_1 thm
R30466:30487 compcert.lib.Floats Float of_intu_of_int_1 thm
R30505:30514 compcert.ia32.SelectOp <> floatofint def
R30537:30547 compcert.ia32.SelectOpproof <> eval_addimm thm
R30593:30599 compcert.backend.CminorSel <> Eletvar constr
R30584:30587 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30578:30581 compcert.common.Values <> Vint constr
R30550:30556 compcert.lib.Integers Int neg def
R30558:30574 compcert.lib.Floats Float ox8000_0000 def
R30537:30547 compcert.ia32.SelectOpproof <> eval_addimm thm
R30593:30599 compcert.backend.CminorSel <> Eletvar constr
R30584:30587 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30578:30581 compcert.common.Values <> Vint constr
R30550:30556 compcert.lib.Integers Int neg def
R30558:30574 compcert.lib.Floats Float ox8000_0000 def
R30657:30660 compcert.ia32.SelectOp <> addf def
R30694:30703 compcert.ia32.SelectOp <> floatofint def
R30813:30834 compcert.lib.Floats Float of_intu_of_int_2 thm
R30813:30834 compcert.lib.Floats Float of_intu_of_int_2 thm
R30853:30867 compcert.lib.Integers Int sub_add_opp thm
R30853:30867 compcert.lib.Integers Int sub_add_opp thm
prf 30890:30905 <> eval_intofsingle
R30993:30999 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31001:31002 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31043:31046 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31003:31011 compcert.backend.CminorSel <> eval_expr ind
R31042:31042 compcert.ia32.SelectOpproof <> v var
R31027:31037 compcert.ia32.SelectOp <> intofsingle def
R31039:31039 compcert.ia32.SelectOpproof <> a var
R31023:31024 compcert.ia32.SelectOpproof <> le var
R31021:31021 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R31019:31019 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R31016:31017 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R31013:31014 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R31047:31057 compcert.common.Values Val lessdef ind
R31061:31061 compcert.ia32.SelectOpproof <> v var
R31059:31059 compcert.ia32.SelectOpproof <> y var
R30978:30980 Coq.Init.Logic <> :type_scope:x_'='_x not
R30961:30975 compcert.common.Values Val intofsingle def
R30977:30977 compcert.ia32.SelectOpproof <> x var
R30981:30984 Coq.Init.Datatypes <> Some constr
R30986:30986 compcert.ia32.SelectOpproof <> y var
R30929:30937 compcert.backend.CminorSel <> eval_expr ind
R30954:30954 compcert.ia32.SelectOpproof <> x var
R30952:30952 compcert.ia32.SelectOpproof <> a var
R30949:30950 compcert.ia32.SelectOpproof <> le var
R30947:30947 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R30945:30945 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R30942:30943 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R30939:30940 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R31088:31098 compcert.ia32.SelectOp <> intofsingle def
prf 31131:31146 <> eval_singleofint
R31234:31240 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31242:31243 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31284:31287 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31244:31252 compcert.backend.CminorSel <> eval_expr ind
R31283:31283 compcert.ia32.SelectOpproof <> v var
R31268:31278 compcert.ia32.SelectOp <> singleofint def
R31280:31280 compcert.ia32.SelectOpproof <> a var
R31264:31265 compcert.ia32.SelectOpproof <> le var
R31262:31262 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R31260:31260 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R31257:31258 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R31254:31255 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R31288:31298 compcert.common.Values Val lessdef ind
R31302:31302 compcert.ia32.SelectOpproof <> v var
R31300:31300 compcert.ia32.SelectOpproof <> y var
R31219:31221 Coq.Init.Logic <> :type_scope:x_'='_x not
R31202:31216 compcert.common.Values Val singleofint def
R31218:31218 compcert.ia32.SelectOpproof <> x var
R31222:31225 Coq.Init.Datatypes <> Some constr
R31227:31227 compcert.ia32.SelectOpproof <> y var
R31170:31178 compcert.backend.CminorSel <> eval_expr ind
R31195:31195 compcert.ia32.SelectOpproof <> x var
R31193:31193 compcert.ia32.SelectOpproof <> a var
R31190:31191 compcert.ia32.SelectOpproof <> le var
R31188:31188 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R31186:31186 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R31183:31184 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R31180:31181 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R31337:31347 compcert.ia32.SelectOp <> singleofint def
R31356:31372 compcert.ia32.SelectOp <> singleofint_match def
R31356:31372 compcert.ia32.SelectOp <> singleofint_match def
prf 31444:31460 <> eval_intuofsingle
R31549:31555 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31557:31558 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31600:31603 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31559:31567 compcert.backend.CminorSel <> eval_expr ind
R31599:31599 compcert.ia32.SelectOpproof <> v var
R31583:31594 compcert.ia32.SelectOp <> intuofsingle def
R31596:31596 compcert.ia32.SelectOpproof <> a var
R31579:31580 compcert.ia32.SelectOpproof <> le var
R31577:31577 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R31575:31575 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R31572:31573 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R31569:31570 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R31604:31614 compcert.common.Values Val lessdef ind
R31618:31618 compcert.ia32.SelectOpproof <> v var
R31616:31616 compcert.ia32.SelectOpproof <> y var
R31534:31536 Coq.Init.Logic <> :type_scope:x_'='_x not
R31516:31531 compcert.common.Values Val intuofsingle def
R31533:31533 compcert.ia32.SelectOpproof <> x var
R31537:31540 Coq.Init.Datatypes <> Some constr
R31542:31542 compcert.ia32.SelectOpproof <> y var
R31484:31492 compcert.backend.CminorSel <> eval_expr ind
R31509:31509 compcert.ia32.SelectOpproof <> x var
R31507:31507 compcert.ia32.SelectOpproof <> a var
R31504:31505 compcert.ia32.SelectOpproof <> le var
R31502:31502 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R31500:31500 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R31497:31498 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R31494:31495 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R31693:31707 compcert.lib.Floats Float32 to_intu def
R31693:31707 compcert.lib.Floats Float32 to_intu def
R31757:31768 compcert.ia32.SelectOp <> intuofsingle def
R31800:31805 compcert.common.Values <> Vfloat constr
R31808:31822 compcert.lib.Floats Float of_single def
R31777:31792 compcert.ia32.SelectOpproof <> eval_intuoffloat thm
R31800:31805 compcert.common.Values <> Vfloat constr
R31808:31822 compcert.lib.Floats Float of_single def
R31777:31792 compcert.ia32.SelectOpproof <> eval_intuoffloat thm
R31838:31850 compcert.ia32.SelectOp <> floatofsingle def
R31904:31920 compcert.lib.Floats Float32 to_double def
R31879:31893 compcert.lib.Floats Float of_single def
R31879:31893 compcert.lib.Floats Float of_single def
R31904:31920 compcert.lib.Floats Float32 to_double def
R31938:31959 compcert.lib.Floats Float32 to_intu_double thm
R31938:31959 compcert.lib.Floats Float32 to_intu_double thm
prf 31990:32006 <> eval_singleofintu
R32095:32101 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32103:32104 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32146:32149 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R32105:32113 compcert.backend.CminorSel <> eval_expr ind
R32145:32145 compcert.ia32.SelectOpproof <> v var
R32129:32140 compcert.ia32.SelectOp <> singleofintu def
R32142:32142 compcert.ia32.SelectOpproof <> a var
R32125:32126 compcert.ia32.SelectOpproof <> le var
R32123:32123 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R32121:32121 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R32118:32119 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R32115:32116 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R32150:32160 compcert.common.Values Val lessdef ind
R32164:32164 compcert.ia32.SelectOpproof <> v var
R32162:32162 compcert.ia32.SelectOpproof <> y var
R32080:32082 Coq.Init.Logic <> :type_scope:x_'='_x not
R32062:32077 compcert.common.Values Val singleofintu def
R32079:32079 compcert.ia32.SelectOpproof <> x var
R32083:32086 Coq.Init.Datatypes <> Some constr
R32088:32088 compcert.ia32.SelectOpproof <> y var
R32030:32038 compcert.backend.CminorSel <> eval_expr ind
R32055:32055 compcert.ia32.SelectOpproof <> x var
R32053:32053 compcert.ia32.SelectOpproof <> a var
R32050:32051 compcert.ia32.SelectOpproof <> le var
R32048:32048 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R32046:32046 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R32043:32044 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R32040:32041 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R32199:32210 compcert.ia32.SelectOp <> singleofintu def
R32219:32236 compcert.ia32.SelectOp <> singleofintu_match def
R32219:32236 compcert.ia32.SelectOp <> singleofintu_match def
R32339:32354 compcert.ia32.SelectOpproof <> eval_floatofintu thm
R32417:32433 compcert.common.Values Val singleoffloat def
R32417:32433 compcert.common.Values Val singleoffloat def
R32455:32467 compcert.ia32.SelectOp <> singleoffloat def
R32502:32523 compcert.lib.Floats Float32 of_intu_double thm
R32502:32523 compcert.lib.Floats Float32 of_intu_double thm
prf 32547:32561 <> eval_addressing
R32653:32662 compcert.ia32.SelectOp <> addressing def
R32670:32670 compcert.ia32.SelectOpproof <> a var
R32664:32668 compcert.ia32.SelectOpproof <> chunk var
R32677:32677 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32682:32683 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32688:32688 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32697:32703 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32706:32711 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32746:32754 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R32712:32724 compcert.backend.CminorSel <> eval_exprlist ind
R32744:32745 compcert.ia32.SelectOpproof <> vl var
R32736:32737 compcert.ia32.SelectOpproof <> le var
R32734:32734 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R32732:32732 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R32729:32730 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R32726:32727 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R32784:32786 Coq.Init.Logic <> :type_scope:x_'='_x not
R32755:32769 compcert.ia32.Op <> eval_addressing def
R32782:32783 compcert.ia32.SelectOpproof <> vl var
R32774:32775 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R32771:32772 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R32787:32790 Coq.Init.Datatypes <> Some constr
R32792:32792 compcert.ia32.SelectOpproof <> v var
R32628:32630 Coq.Init.Logic <> :type_scope:x_'='_x not
R32627:32627 compcert.ia32.SelectOpproof <> v var
R32631:32634 compcert.common.Values <> Vptr constr
R32638:32640 compcert.ia32.SelectOpproof <> ofs var
R32636:32636 compcert.ia32.SelectOpproof <> b var
R32595:32603 compcert.backend.CminorSel <> eval_expr ind
R32620:32620 compcert.ia32.SelectOpproof <> v var
R32618:32618 compcert.ia32.SelectOpproof <> a var
R32615:32616 compcert.ia32.SelectOpproof <> le var
R32613:32613 compcert.ia32.SelectOpproof <> CMCONSTR.m var
R32611:32611 compcert.ia32.SelectOpproof <> CMCONSTR.e var
R32608:32609 compcert.ia32.SelectOpproof <> CMCONSTR.sp var
R32605:32606 compcert.ia32.SelectOpproof <> CMCONSTR.ge var
R32833:32842 compcert.ia32.SelectOp <> addressing def
R32851:32866 compcert.ia32.SelectOp <> addressing_match def
R32851:32866 compcert.ia32.SelectOp <> addressing_match def
R32926:32929 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32930:32932 Coq.Init.Datatypes <> nil constr
R32926:32929 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32930:32932 Coq.Init.Datatypes <> nil constr
R32997:33008 compcert.lib.Integers Int add_zero thm
R32997:33008 compcert.lib.Integers Int add_zero thm
R33028:33035 compcert.ia32.SelectOpproof CMCONSTR <> sec
