DIGEST NO
Fcompcert.ia32.ConstpropOpproof
R889:894 compcert.lib.Coqlib <> <> lib
R912:919 compcert.driver.Compopts <> <> lib
R937:944 compcert.lib.Integers <> <> lib
R962:967 compcert.lib.Floats <> <> lib
R985:990 compcert.common.Values <> <> lib
R1008:1013 compcert.common.Memory <> <> lib
R1031:1040 compcert.common.Globalenvs <> <> lib
R1058:1063 compcert.common.Events <> <> lib
R1081:1082 compcert.ia32.Op <> <> lib
R1100:1108 compcert.backend.Registers <> <> lib
R1126:1128 compcert.backend.RTL <> <> lib
R1146:1156 compcert.backend.ValueDomain <> <> lib
R1174:1184 compcert.ia32.ConstpropOp <> <> lib
sec 1486:1503 <> STRENGTH_REDUCTION
var 1516:1517 STRENGTH_REDUCTION bc
R1520:1539 compcert.backend.ValueDomain <> block_classification rec
var 1551:1552 STRENGTH_REDUCTION ge
R1555:1558 compcert.backend.RTL <> genv def
var 1572:1575 STRENGTH_REDUCTION GENV
R1578:1587 compcert.backend.ValueDomain <> genv_match def
R1592:1593 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R1589:1590 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
var 1605:1606 STRENGTH_REDUCTION sp
R1609:1613 compcert.common.Values <> block def
var 1627:1631 STRENGTH_REDUCTION STACK
R1639:1641 Coq.Init.Logic <> :type_scope:x_'='_x not
R1634:1635 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R1637:1638 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R1642:1648 compcert.backend.ValueDomain <> BCstack constr
var 1660:1661 STRENGTH_REDUCTION ae
R1664:1667 compcert.backend.ValueDomain AE t def
var 1679:1679 STRENGTH_REDUCTION e
R1682:1687 compcert.backend.RTL <> regset def
var 1699:1699 STRENGTH_REDUCTION m
R1702:1704 compcert.common.Memory <> mem syndef
var 1718:1722 STRENGTH_REDUCTION MATCH
R1725:1730 compcert.backend.ValueDomain <> ematch def
R1737:1738 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R1735:1735 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R1732:1733 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
prf 1748:1754 <> match_G
R1810:1820 compcert.common.Values Val lessdef ind
R1827:1845 compcert.common.Globalenvs Genv symbol_address def
R1853:1855 compcert.ia32.ConstpropOpproof <> ofs var
R1850:1851 compcert.ia32.ConstpropOpproof <> id var
R1847:1848 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R1823:1823 compcert.backend.Registers <> ::x_'#'_x not
R1824:1824 compcert.ia32.ConstpropOpproof <> r var
R1822:1822 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R1789:1791 Coq.Init.Logic <> :type_scope:x_'='_x not
R1778:1783 compcert.backend.ValueDomain AE get def
R1787:1788 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R1785:1785 compcert.ia32.ConstpropOpproof <> r var
R1792:1794 compcert.backend.ValueDomain <> Ptr constr
R1796:1797 compcert.backend.ValueDomain <> Gl constr
R1802:1804 compcert.ia32.ConstpropOpproof <> ofs var
R1799:1800 compcert.ia32.ConstpropOpproof <> id var
R1901:1902 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R1882:1894 compcert.backend.ValueDomain <> vmatch_ptr_gl thm
R1901:1902 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R1882:1894 compcert.backend.ValueDomain <> vmatch_ptr_gl thm
R1931:1935 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.MATCH var
R1931:1935 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.MATCH var
prf 1951:1957 <> match_S
R2008:2018 compcert.common.Values Val lessdef ind
R2025:2028 compcert.common.Values <> Vptr constr
R2033:2035 compcert.ia32.ConstpropOpproof <> ofs var
R2030:2031 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R2021:2021 compcert.backend.Registers <> ::x_'#'_x not
R2022:2022 compcert.ia32.ConstpropOpproof <> r var
R2020:2020 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R1989:1991 Coq.Init.Logic <> :type_scope:x_'='_x not
R1978:1983 compcert.backend.ValueDomain AE get def
R1987:1988 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R1985:1985 compcert.ia32.ConstpropOpproof <> r var
R1992:1994 compcert.backend.ValueDomain <> Ptr constr
R1996:1998 compcert.backend.ValueDomain <> Stk constr
R2000:2002 compcert.ia32.ConstpropOpproof <> ofs var
R2082:2083 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R2062:2075 compcert.backend.ValueDomain <> vmatch_ptr_stk thm
R2082:2083 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R2062:2075 compcert.backend.ValueDomain <> vmatch_ptr_stk thm
R2112:2116 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.MATCH var
R2112:2116 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.MATCH var
R2180:2182 Coq.Init.Logic <> :type_scope:x_'='_x not
R2175:2178 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2184:2187 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2180:2182 Coq.Init.Logic <> :type_scope:x_'='_x not
R2175:2178 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2184:2187 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2264:2266 Coq.Init.Logic <> :type_scope:x_'='_x not
R2267:2272 compcert.backend.ValueDomain AE get def
R2277:2278 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R2264:2266 Coq.Init.Logic <> :type_scope:x_'='_x not
R2267:2272 compcert.backend.ValueDomain AE get def
R2277:2278 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R2311:2315 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.MATCH var
R2431:2436 compcert.backend.ValueDomain <> vmatch ind
R2444:2444 compcert.backend.ValueDomain <> I constr
R2431:2436 compcert.backend.ValueDomain <> vmatch ind
R2444:2444 compcert.backend.ValueDomain <> I constr
R2585:2590 compcert.backend.ValueDomain <> vmatch ind
R2598:2598 compcert.backend.ValueDomain <> F constr
R2585:2590 compcert.backend.ValueDomain <> vmatch ind
R2598:2598 compcert.backend.ValueDomain <> F constr
R2741:2746 compcert.backend.ValueDomain <> vmatch ind
R2754:2755 compcert.backend.ValueDomain <> FS constr
R2741:2746 compcert.backend.ValueDomain <> vmatch ind
R2754:2755 compcert.backend.ValueDomain <> FS constr
R2899:2904 compcert.backend.ValueDomain <> vmatch ind
R2912:2914 compcert.backend.ValueDomain <> Ptr constr
R2916:2917 compcert.backend.ValueDomain <> Gl constr
R2899:2904 compcert.backend.ValueDomain <> vmatch ind
R2912:2914 compcert.backend.ValueDomain <> Ptr constr
R2916:2917 compcert.backend.ValueDomain <> Gl constr
R3095:3100 compcert.backend.ValueDomain <> vmatch ind
R3108:3110 compcert.backend.ValueDomain <> Ptr constr
R3112:3114 compcert.backend.ValueDomain <> Stk constr
R3095:3100 compcert.backend.ValueDomain <> vmatch ind
R3108:3110 compcert.backend.ValueDomain <> Ptr constr
R3112:3114 compcert.backend.ValueDomain <> Stk constr
R3174:3184 compcert.common.Values Val lessdef ind
R3189:3192 compcert.common.Values <> Vptr constr
R3194:3195 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R3214:3227 compcert.backend.ValueDomain <> vmatch_ptr_stk thm
R2981:2991 compcert.common.Values Val lessdef ind
R2996:3014 compcert.common.Globalenvs Genv symbol_address def
R3016:3017 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R3039:3051 compcert.backend.ValueDomain <> vmatch_ptr_gl thm
R2813:2815 Coq.Init.Logic <> :type_scope:x_'='_x not
R2816:2822 compcert.common.Values <> Vsingle constr
R2656:2658 Coq.Init.Logic <> :type_scope:x_'='_x not
R2659:2664 compcert.common.Values <> Vfloat constr
R2502:2504 Coq.Init.Logic <> :type_scope:x_'='_x not
R2505:2508 compcert.common.Values <> Vint constr
prf 3291:3321 <> cond_strength_reduction_correct
R3413:3435 compcert.ia32.ConstpropOp <> cond_strength_reduction def
R3447:3448 compcert.ia32.ConstpropOpproof <> vl var
R3442:3445 compcert.ia32.ConstpropOpproof <> args var
R3437:3440 compcert.ia32.ConstpropOpproof <> cond var
R3486:3488 Coq.Init.Logic <> :type_scope:x_'='_x not
R3455:3468 compcert.ia32.Op <> eval_condition def
R3485:3485 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R3477:3478 compcert.backend.Registers <> ::x_'##'_x not
R3476:3476 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R3479:3483 compcert.ia32.ConstpropOpproof <> args' var
R3470:3474 compcert.ia32.ConstpropOpproof <> cond' var
R3489:3502 compcert.ia32.Op <> eval_condition def
R3517:3517 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R3510:3511 compcert.backend.Registers <> ::x_'##'_x not
R3509:3509 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R3512:3515 compcert.ia32.ConstpropOpproof <> args var
R3504:3507 compcert.ia32.ConstpropOpproof <> cond var
R3351:3353 Coq.Init.Logic <> :type_scope:x_'='_x not
R3349:3350 compcert.ia32.ConstpropOpproof <> vl var
R3354:3356 Coq.Lists.List <> map def
R3381:3384 compcert.ia32.ConstpropOpproof <> args var
R3368:3373 compcert.backend.ValueDomain AE get def
R3377:3378 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R3375:3375 compcert.ia32.ConstpropOpproof <> r var
R3553:3575 compcert.ia32.ConstpropOp <> cond_strength_reduction def
R3586:3614 compcert.ia32.ConstpropOp <> cond_strength_reduction_match def
R3586:3614 compcert.ia32.ConstpropOp <> cond_strength_reduction_match def
R3678:3694 compcert.common.Values Val swap_cmp_bool thm
R3678:3694 compcert.common.Values Val swap_cmp_bool thm
R3713:3730 compcert.common.Values Val swap_cmpu_bool thm
R3713:3730 compcert.common.Values Val swap_cmpu_bool thm
prf 3761:3791 <> addr_strength_reduction_correct
R3954:3976 compcert.ia32.ConstpropOp <> addr_strength_reduction def
R3988:3989 compcert.ia32.ConstpropOpproof <> vl var
R3983:3986 compcert.ia32.ConstpropOpproof <> args var
R3978:3981 compcert.ia32.ConstpropOpproof <> addr var
R3996:4002 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4007:4008 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4073:4076 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4061:4063 Coq.Init.Logic <> :type_scope:x_'='_x not
R4009:4023 compcert.ia32.Op <> eval_addressing def
R4054:4055 compcert.backend.Registers <> ::x_'##'_x not
R4053:4053 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R4056:4060 compcert.ia32.ConstpropOpproof <> args' var
R4047:4051 compcert.ia32.ConstpropOpproof <> addr' var
R4029:4032 compcert.common.Values <> Vptr constr
R4037:4044 compcert.lib.Integers Int zero def
R4034:4035 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R4025:4026 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R4064:4067 Coq.Init.Datatypes <> Some constr
R4069:4072 compcert.ia32.ConstpropOpproof <> res' var
R4077:4087 compcert.common.Values Val lessdef ind
R4093:4096 compcert.ia32.ConstpropOpproof <> res' var
R4089:4091 compcert.ia32.ConstpropOpproof <> res var
R3915:3917 Coq.Init.Logic <> :type_scope:x_'='_x not
R3865:3879 compcert.ia32.Op <> eval_addressing def
R3909:3910 compcert.backend.Registers <> ::x_'##'_x not
R3908:3908 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R3911:3914 compcert.ia32.ConstpropOpproof <> args var
R3903:3906 compcert.ia32.ConstpropOpproof <> addr var
R3885:3888 compcert.common.Values <> Vptr constr
R3893:3900 compcert.lib.Integers Int zero def
R3890:3891 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R3881:3882 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R3918:3921 Coq.Init.Datatypes <> Some constr
R3923:3925 compcert.ia32.ConstpropOpproof <> res var
R3825:3827 Coq.Init.Logic <> :type_scope:x_'='_x not
R3823:3824 compcert.ia32.ConstpropOpproof <> vl var
R3828:3830 Coq.Lists.List <> map def
R3855:3858 compcert.ia32.ConstpropOpproof <> args var
R3842:3847 compcert.backend.ValueDomain AE get def
R3851:3852 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R3849:3849 compcert.ia32.ConstpropOpproof <> r var
R4133:4155 compcert.ia32.ConstpropOp <> addr_strength_reduction def
R4170:4198 compcert.ia32.ConstpropOp <> addr_strength_reduction_match def
R4170:4198 compcert.ia32.ConstpropOp <> addr_strength_reduction_match def
R4286:4310 compcert.common.Globalenvs Genv shift_symbol_address thm
R4286:4310 compcert.common.Globalenvs Genv shift_symbol_address thm
R4347:4361 compcert.common.Values Val add_lessdef thm
R4347:4361 compcert.common.Values Val add_lessdef thm
R4408:4421 compcert.lib.Integers Int add_zero_l thm
R4408:4421 compcert.lib.Integers Int add_zero_l thm
R4465:4471 compcert.common.Values Val add def
R4486:4489 compcert.common.Values <> Vint constr
R4474:4477 compcert.common.Values <> Vptr constr
R4479:4480 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R4434:4437 compcert.common.Values <> Vptr constr
R4443:4449 compcert.lib.Integers Int add def
R4439:4440 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R4434:4437 compcert.common.Values <> Vptr constr
R4443:4449 compcert.lib.Integers Int add def
R4439:4440 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R4465:4471 compcert.common.Values Val add def
R4486:4489 compcert.common.Values <> Vint constr
R4474:4477 compcert.common.Values <> Vptr constr
R4479:4480 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R4504:4518 compcert.common.Values Val add_lessdef thm
R4504:4518 compcert.common.Values Val add_lessdef thm
R4565:4577 compcert.lib.Integers Int add_assoc thm
R4565:4577 compcert.lib.Integers Int add_assoc thm
R4588:4612 compcert.common.Globalenvs Genv shift_symbol_address thm
R4588:4612 compcert.common.Globalenvs Genv shift_symbol_address thm
R4626:4638 compcert.common.Values Val add_assoc thm
R4626:4638 compcert.common.Values Val add_assoc thm
R4647:4661 compcert.common.Values Val add_lessdef thm
R4647:4661 compcert.common.Values Val add_lessdef thm
R4708:4714 compcert.common.Values Val add def
R4727:4727 compcert.backend.Registers <> ::x_'#'_x not
R4726:4726 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R4717:4720 compcert.common.Values <> Vint constr
R4708:4714 compcert.common.Values Val add def
R4727:4727 compcert.backend.Registers <> ::x_'#'_x not
R4726:4726 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R4717:4720 compcert.common.Values <> Vint constr
R4742:4755 compcert.common.Values Val add_commut thm
R4758:4761 compcert.common.Values <> Vint constr
R4742:4755 compcert.common.Values Val add_commut thm
R4758:4761 compcert.common.Values <> Vint constr
R4779:4803 compcert.common.Globalenvs Genv shift_symbol_address thm
R4779:4803 compcert.common.Globalenvs Genv shift_symbol_address thm
R4812:4826 compcert.common.Values Val add_lessdef thm
R4812:4826 compcert.common.Values Val add_lessdef thm
R4845:4858 compcert.lib.Integers Int add_commut thm
R4845:4858 compcert.lib.Integers Int add_commut thm
R4869:4893 compcert.common.Globalenvs Genv shift_symbol_address thm
R4869:4893 compcert.common.Globalenvs Genv shift_symbol_address thm
R4902:4916 compcert.common.Values Val add_lessdef thm
R4902:4916 compcert.common.Values Val add_lessdef thm
R4964:4977 compcert.lib.Integers Int add_zero_l thm
R4964:4977 compcert.lib.Integers Int add_zero_l thm
R4988:5000 compcert.lib.Integers Int add_assoc thm
R4988:5000 compcert.lib.Integers Int add_assoc thm
R5063:5069 compcert.common.Values Val add def
R5085:5088 compcert.common.Values <> Vint constr
R5091:5097 compcert.lib.Integers Int add def
R5072:5075 compcert.common.Values <> Vptr constr
R5077:5078 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R5014:5017 compcert.common.Values <> Vptr constr
R5023:5029 compcert.lib.Integers Int add def
R5035:5041 compcert.lib.Integers Int add def
R5019:5020 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R5014:5017 compcert.common.Values <> Vptr constr
R5023:5029 compcert.lib.Integers Int add def
R5035:5041 compcert.lib.Integers Int add def
R5019:5020 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R5063:5069 compcert.common.Values Val add def
R5085:5088 compcert.common.Values <> Vint constr
R5091:5097 compcert.lib.Integers Int add def
R5072:5075 compcert.common.Values <> Vptr constr
R5077:5078 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R5120:5132 compcert.common.Values Val add_assoc thm
R5120:5132 compcert.common.Values Val add_assoc thm
R5141:5155 compcert.common.Values Val add_lessdef thm
R5141:5155 compcert.common.Values Val add_lessdef thm
R5203:5216 compcert.lib.Integers Int add_zero_l thm
R5203:5216 compcert.lib.Integers Int add_zero_l thm
R5228:5234 compcert.common.Values Val add def
R5247:5247 compcert.backend.Registers <> ::x_'#'_x not
R5246:5246 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R5237:5240 compcert.common.Values <> Vint constr
R5228:5234 compcert.common.Values Val add def
R5247:5247 compcert.backend.Registers <> ::x_'#'_x not
R5246:5246 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R5237:5240 compcert.common.Values <> Vint constr
R5262:5275 compcert.lib.Integers Int add_commut thm
R5262:5275 compcert.lib.Integers Int add_commut thm
R5342:5348 compcert.common.Values Val add def
R5384:5387 compcert.common.Values <> Vint constr
R5351:5357 compcert.common.Values Val add def
R5370:5373 compcert.common.Values <> Vptr constr
R5375:5376 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R5360:5363 compcert.common.Values <> Vint constr
R5293:5296 compcert.common.Values <> Vptr constr
R5302:5308 compcert.lib.Integers Int add def
R5311:5317 compcert.lib.Integers Int add def
R5298:5299 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R5293:5296 compcert.common.Values <> Vptr constr
R5302:5308 compcert.lib.Integers Int add def
R5311:5317 compcert.lib.Integers Int add def
R5298:5299 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R5342:5348 compcert.common.Values Val add def
R5384:5387 compcert.common.Values <> Vint constr
R5351:5357 compcert.common.Values Val add def
R5370:5373 compcert.common.Values <> Vptr constr
R5375:5376 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R5360:5363 compcert.common.Values <> Vint constr
R5404:5418 compcert.common.Values Val add_lessdef thm
R5404:5418 compcert.common.Values Val add_lessdef thm
R5433:5447 compcert.common.Values Val add_lessdef thm
R5433:5447 compcert.common.Values Val add_lessdef thm
R5495:5519 compcert.common.Globalenvs Genv shift_symbol_address thm
R5495:5519 compcert.common.Globalenvs Genv shift_symbol_address thm
R5535:5547 compcert.common.Values Val add_assoc thm
R5535:5547 compcert.common.Values Val add_assoc thm
R5535:5547 compcert.common.Values Val add_assoc thm
R5535:5547 compcert.common.Values Val add_assoc thm
R5556:5570 compcert.common.Values Val add_lessdef thm
R5556:5570 compcert.common.Values Val add_lessdef thm
R5590:5603 compcert.common.Values Val add_commut thm
R5590:5603 compcert.common.Values Val add_commut thm
R5612:5626 compcert.common.Values Val add_lessdef thm
R5612:5626 compcert.common.Values Val add_lessdef thm
R5674:5698 compcert.common.Globalenvs Genv shift_symbol_address thm
R5674:5698 compcert.common.Globalenvs Genv shift_symbol_address thm
R5712:5725 compcert.common.Values Val add_commut thm
R5728:5728 compcert.backend.Registers <> ::x_'#'_x not
R5727:5727 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R5712:5725 compcert.common.Values Val add_commut thm
R5728:5728 compcert.backend.Registers <> ::x_'#'_x not
R5727:5727 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R5744:5756 compcert.common.Values Val add_assoc thm
R5744:5756 compcert.common.Values Val add_assoc thm
R5744:5756 compcert.common.Values Val add_assoc thm
R5744:5756 compcert.common.Values Val add_assoc thm
R5767:5781 compcert.common.Values Val add_lessdef thm
R5767:5781 compcert.common.Values Val add_lessdef thm
R5798:5811 compcert.common.Values Val add_commut thm
R5798:5811 compcert.common.Values Val add_commut thm
R5820:5834 compcert.common.Values Val add_lessdef thm
R5820:5834 compcert.common.Values Val add_lessdef thm
R5851:5857 compcert.common.Values Val add def
R5870:5870 compcert.backend.Registers <> ::x_'#'_x not
R5869:5869 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R5860:5863 compcert.common.Values <> Vint constr
R5851:5857 compcert.common.Values Val add def
R5870:5870 compcert.backend.Registers <> ::x_'#'_x not
R5869:5869 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R5860:5863 compcert.common.Values <> Vint constr
R5916:5929 compcert.common.Values Val add_commut thm
R5932:5935 compcert.common.Values <> Vint constr
R5916:5929 compcert.common.Values Val add_commut thm
R5932:5935 compcert.common.Values <> Vint constr
R5951:5963 compcert.common.Values Val add_assoc thm
R5951:5963 compcert.common.Values Val add_assoc thm
R5975:5989 compcert.common.Values Val add_lessdef thm
R5975:5989 compcert.common.Values Val add_lessdef thm
R6041:6053 compcert.common.Values Val add_assoc thm
R6041:6053 compcert.common.Values Val add_assoc thm
R6041:6053 compcert.common.Values Val add_assoc thm
R6064:6078 compcert.common.Values Val add_lessdef thm
R6064:6078 compcert.common.Values Val add_lessdef thm
R6127:6139 compcert.lib.Integers Int add_assoc thm
R6127:6139 compcert.lib.Integers Int add_assoc thm
R6153:6177 compcert.common.Globalenvs Genv shift_symbol_address thm
R6153:6177 compcert.common.Globalenvs Genv shift_symbol_address thm
R6186:6200 compcert.common.Values Val add_lessdef thm
R6186:6200 compcert.common.Values Val add_lessdef thm
R6251:6275 compcert.common.Globalenvs Genv shift_symbol_address thm
R6251:6275 compcert.common.Globalenvs Genv shift_symbol_address thm
R6288:6300 compcert.common.Values Val add_assoc thm
R6288:6300 compcert.common.Values Val add_assoc thm
R6288:6300 compcert.common.Values Val add_assoc thm
R6309:6323 compcert.common.Values Val add_lessdef thm
R6309:6323 compcert.common.Values Val add_lessdef thm
R6342:6355 compcert.common.Values Val add_commut thm
R6342:6355 compcert.common.Values Val add_commut thm
R6432:6456 compcert.common.Globalenvs Genv shift_symbol_address thm
R6432:6456 compcert.common.Globalenvs Genv shift_symbol_address thm
R6503:6527 compcert.common.Globalenvs Genv shift_symbol_address thm
R6503:6527 compcert.common.Globalenvs Genv shift_symbol_address thm
R6538:6551 compcert.lib.Integers Int mul_commut thm
R6538:6551 compcert.lib.Integers Int mul_commut thm
prf 6595:6615 <> make_cmp_base_correct
R6702:6714 compcert.ia32.ConstpropOp <> make_cmp_base def
R6723:6724 compcert.ia32.ConstpropOpproof <> vl var
R6718:6721 compcert.ia32.ConstpropOpproof <> args var
R6716:6716 compcert.ia32.ConstpropOpproof <> c var
R6731:6737 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6739:6740 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6801:6814 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6792:6794 Coq.Init.Logic <> :type_scope:x_'='_x not
R6741:6754 compcert.ia32.Op <> eval_operation def
R6791:6791 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R6783:6784 compcert.backend.Registers <> ::x_'##'_x not
R6782:6782 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R6785:6789 compcert.ia32.ConstpropOpproof <> args' var
R6778:6780 compcert.ia32.ConstpropOpproof <> op' var
R6760:6763 compcert.common.Values <> Vptr constr
R6768:6775 compcert.lib.Integers Int zero def
R6765:6766 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R6756:6757 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R6795:6798 Coq.Init.Datatypes <> Some constr
R6800:6800 compcert.ia32.ConstpropOpproof <> v var
R6815:6825 compcert.common.Values Val lessdef ind
R6873:6873 compcert.ia32.ConstpropOpproof <> v var
R6828:6841 compcert.common.Values Val of_optbool def
R6844:6857 compcert.ia32.Op <> eval_condition def
R6869:6869 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R6862:6863 compcert.backend.Registers <> ::x_'##'_x not
R6861:6861 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R6864:6867 compcert.ia32.ConstpropOpproof <> args var
R6859:6859 compcert.ia32.ConstpropOpproof <> c var
R6642:6644 Coq.Init.Logic <> :type_scope:x_'='_x not
R6640:6641 compcert.ia32.ConstpropOpproof <> vl var
R6645:6647 Coq.Lists.List <> map def
R6672:6675 compcert.ia32.ConstpropOpproof <> args var
R6659:6664 compcert.backend.ValueDomain AE get def
R6668:6669 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R6666:6666 compcert.ia32.ConstpropOpproof <> r var
R6900:6912 compcert.ia32.ConstpropOp <> make_cmp_base def
R6930:6960 compcert.ia32.ConstpropOpproof <> cond_strength_reduction_correct thm
R6930:6960 compcert.ia32.ConstpropOpproof <> cond_strength_reduction_correct thm
R6989:7011 compcert.ia32.ConstpropOp <> cond_strength_reduction def
R6989:7011 compcert.ia32.ConstpropOp <> cond_strength_reduction def
prf 7118:7133 <> make_cmp_correct
R7220:7227 compcert.ia32.ConstpropOp <> make_cmp def
R7236:7237 compcert.ia32.ConstpropOpproof <> vl var
R7231:7234 compcert.ia32.ConstpropOpproof <> args var
R7229:7229 compcert.ia32.ConstpropOpproof <> c var
R7244:7250 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7252:7253 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7314:7327 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7305:7307 Coq.Init.Logic <> :type_scope:x_'='_x not
R7254:7267 compcert.ia32.Op <> eval_operation def
R7304:7304 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R7296:7297 compcert.backend.Registers <> ::x_'##'_x not
R7295:7295 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R7298:7302 compcert.ia32.ConstpropOpproof <> args' var
R7291:7293 compcert.ia32.ConstpropOpproof <> op' var
R7273:7276 compcert.common.Values <> Vptr constr
R7281:7288 compcert.lib.Integers Int zero def
R7278:7279 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R7269:7270 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R7308:7311 Coq.Init.Datatypes <> Some constr
R7313:7313 compcert.ia32.ConstpropOpproof <> v var
R7328:7338 compcert.common.Values Val lessdef ind
R7386:7386 compcert.ia32.ConstpropOpproof <> v var
R7341:7354 compcert.common.Values Val of_optbool def
R7357:7370 compcert.ia32.Op <> eval_condition def
R7382:7382 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R7375:7376 compcert.backend.Registers <> ::x_'##'_x not
R7374:7374 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R7377:7380 compcert.ia32.ConstpropOpproof <> args var
R7372:7372 compcert.ia32.ConstpropOpproof <> c var
R7160:7162 Coq.Init.Logic <> :type_scope:x_'='_x not
R7158:7159 compcert.ia32.ConstpropOpproof <> vl var
R7163:7165 Coq.Lists.List <> map def
R7190:7193 compcert.ia32.ConstpropOpproof <> args var
R7177:7182 compcert.backend.ValueDomain AE get def
R7186:7187 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R7184:7184 compcert.ia32.ConstpropOpproof <> r var
R7502:7505 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7493:7495 Coq.Init.Logic <> :type_scope:x_'='_x not
R7491:7491 compcert.backend.Registers <> ::x_'#'_x not
R7492:7492 compcert.ia32.ConstpropOpproof <> r var
R7490:7490 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R7496:7501 compcert.common.Values <> Vundef constr
R7525:7528 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7509:7511 Coq.Init.Logic <> :type_scope:x_'='_x not
R7507:7507 compcert.backend.Registers <> ::x_'#'_x not
R7508:7508 compcert.ia32.ConstpropOpproof <> r var
R7506:7506 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R7512:7515 compcert.common.Values <> Vint constr
R7517:7524 compcert.lib.Integers Int zero def
R7532:7534 Coq.Init.Logic <> :type_scope:x_'='_x not
R7530:7530 compcert.backend.Registers <> ::x_'#'_x not
R7531:7531 compcert.ia32.ConstpropOpproof <> r var
R7529:7529 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R7535:7538 compcert.common.Values <> Vint constr
R7540:7546 compcert.lib.Integers Int one def
R7466:7468 Coq.Init.Logic <> :type_scope:x_'='_x not
R7439:7443 compcert.backend.ValueDomain <> vincl def
R7460:7462 compcert.backend.ValueDomain <> Uns constr
R7446:7451 compcert.backend.ValueDomain AE get def
R7455:7456 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R7453:7453 compcert.ia32.ConstpropOpproof <> r var
R7469:7472 Coq.Init.Datatypes <> true constr
R7502:7505 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7493:7495 Coq.Init.Logic <> :type_scope:x_'='_x not
R7491:7491 compcert.backend.Registers <> ::x_'#'_x not
R7492:7492 compcert.ia32.ConstpropOpproof <> r var
R7490:7490 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R7496:7501 compcert.common.Values <> Vundef constr
R7525:7528 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7509:7511 Coq.Init.Logic <> :type_scope:x_'='_x not
R7507:7507 compcert.backend.Registers <> ::x_'#'_x not
R7508:7508 compcert.ia32.ConstpropOpproof <> r var
R7506:7506 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R7512:7515 compcert.common.Values <> Vint constr
R7517:7524 compcert.lib.Integers Int zero def
R7532:7534 Coq.Init.Logic <> :type_scope:x_'='_x not
R7530:7530 compcert.backend.Registers <> ::x_'#'_x not
R7531:7531 compcert.ia32.ConstpropOpproof <> r var
R7529:7529 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R7535:7538 compcert.common.Values <> Vint constr
R7540:7546 compcert.lib.Integers Int one def
R7466:7468 Coq.Init.Logic <> :type_scope:x_'='_x not
R7439:7443 compcert.backend.ValueDomain <> vincl def
R7460:7462 compcert.backend.ValueDomain <> Uns constr
R7446:7451 compcert.backend.ValueDomain AE get def
R7455:7456 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R7453:7453 compcert.ia32.ConstpropOpproof <> r var
R7469:7472 Coq.Init.Datatypes <> true constr
R7586:7587 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R7568:7579 compcert.backend.ValueDomain <> vmatch_Uns_1 thm
R7586:7587 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R7568:7579 compcert.backend.ValueDomain <> vmatch_Uns_1 thm
R7597:7605 compcert.backend.ValueDomain <> vmatch_ge thm
R7597:7605 compcert.backend.ValueDomain <> vmatch_ge thm
R7615:7622 compcert.backend.ValueDomain <> vincl_ge thm
R7615:7622 compcert.backend.ValueDomain <> vincl_ge thm
R7638:7642 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.MATCH var
R7638:7642 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.MATCH var
R7656:7663 compcert.ia32.ConstpropOp <> make_cmp def
R7672:7685 compcert.ia32.ConstpropOp <> make_cmp_match def
R7672:7685 compcert.ia32.ConstpropOp <> make_cmp_match def
R7739:7742 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R7719:7728 compcert.lib.Integers Int eq_dec thm
R7732:7738 compcert.lib.Integers Int one def
R7743:7747 compcert.backend.ValueDomain <> vincl def
R7753:7755 compcert.backend.ValueDomain <> Uns constr
R7739:7742 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R7719:7728 compcert.lib.Integers Int eq_dec thm
R7732:7738 compcert.lib.Integers Int one def
R7743:7747 compcert.backend.ValueDomain <> vincl def
R7753:7755 compcert.backend.ValueDomain <> Uns constr
R7824:7824 compcert.backend.Registers <> ::x_'#'_x not
R7823:7823 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R7824:7824 compcert.backend.Registers <> ::x_'#'_x not
R7823:7823 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R7949:7952 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R7928:7937 compcert.lib.Integers Int eq_dec thm
R7941:7948 compcert.lib.Integers Int zero def
R7953:7957 compcert.backend.ValueDomain <> vincl def
R7963:7965 compcert.backend.ValueDomain <> Uns constr
R7949:7952 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R7928:7937 compcert.lib.Integers Int eq_dec thm
R7941:7948 compcert.lib.Integers Int zero def
R7953:7957 compcert.backend.ValueDomain <> vincl def
R7963:7965 compcert.backend.ValueDomain <> Uns constr
R8033:8039 compcert.common.Values Val xor def
R8047:8050 compcert.common.Values <> Vint constr
R8052:8058 compcert.lib.Integers Int one def
R8042:8042 compcert.backend.Registers <> ::x_'#'_x not
R8041:8041 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R8033:8039 compcert.common.Values Val xor def
R8047:8050 compcert.common.Values <> Vint constr
R8052:8058 compcert.lib.Integers Int one def
R8042:8042 compcert.backend.Registers <> ::x_'#'_x not
R8041:8041 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R8157:8177 compcert.ia32.ConstpropOpproof <> make_cmp_base_correct thm
R8157:8177 compcert.ia32.ConstpropOpproof <> make_cmp_base_correct thm
R8219:8222 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R8198:8207 compcert.lib.Integers Int eq_dec thm
R8211:8218 compcert.lib.Integers Int zero def
R8223:8227 compcert.backend.ValueDomain <> vincl def
R8233:8235 compcert.backend.ValueDomain <> Uns constr
R8219:8222 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R8198:8207 compcert.lib.Integers Int eq_dec thm
R8211:8218 compcert.lib.Integers Int zero def
R8223:8227 compcert.backend.ValueDomain <> vincl def
R8233:8235 compcert.backend.ValueDomain <> Uns constr
R8304:8304 compcert.backend.Registers <> ::x_'#'_x not
R8303:8303 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R8304:8304 compcert.backend.Registers <> ::x_'#'_x not
R8303:8303 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R8428:8431 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R8408:8417 compcert.lib.Integers Int eq_dec thm
R8421:8427 compcert.lib.Integers Int one def
R8432:8436 compcert.backend.ValueDomain <> vincl def
R8442:8444 compcert.backend.ValueDomain <> Uns constr
R8428:8431 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R8408:8417 compcert.lib.Integers Int eq_dec thm
R8421:8427 compcert.lib.Integers Int one def
R8432:8436 compcert.backend.ValueDomain <> vincl def
R8442:8444 compcert.backend.ValueDomain <> Uns constr
R8512:8518 compcert.common.Values Val xor def
R8526:8529 compcert.common.Values <> Vint constr
R8531:8537 compcert.lib.Integers Int one def
R8521:8521 compcert.backend.Registers <> ::x_'#'_x not
R8520:8520 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R8512:8518 compcert.common.Values Val xor def
R8526:8529 compcert.common.Values <> Vint constr
R8531:8537 compcert.lib.Integers Int one def
R8521:8521 compcert.backend.Registers <> ::x_'#'_x not
R8520:8520 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R8636:8656 compcert.ia32.ConstpropOpproof <> make_cmp_base_correct thm
R8636:8656 compcert.ia32.ConstpropOpproof <> make_cmp_base_correct thm
R8673:8693 compcert.ia32.ConstpropOpproof <> make_cmp_base_correct thm
R8673:8693 compcert.ia32.ConstpropOpproof <> make_cmp_base_correct thm
prf 8714:8732 <> make_addimm_correct
R8769:8779 compcert.ia32.ConstpropOp <> make_addimm def
R8783:8783 compcert.ia32.ConstpropOpproof <> r var
R8781:8781 compcert.ia32.ConstpropOpproof <> n var
R8790:8796 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8798:8799 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8858:8861 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8849:8851 Coq.Init.Logic <> :type_scope:x_'='_x not
R8800:8813 compcert.ia32.Op <> eval_operation def
R8848:8848 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R8841:8842 compcert.backend.Registers <> ::x_'##'_x not
R8840:8840 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R8843:8846 compcert.ia32.ConstpropOpproof <> args var
R8837:8838 compcert.ia32.ConstpropOpproof <> op var
R8819:8822 compcert.common.Values <> Vptr constr
R8827:8834 compcert.lib.Integers Int zero def
R8824:8825 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R8815:8816 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R8852:8855 Coq.Init.Datatypes <> Some constr
R8857:8857 compcert.ia32.ConstpropOpproof <> v var
R8862:8872 compcert.common.Values Val lessdef ind
R8897:8897 compcert.ia32.ConstpropOpproof <> v var
R8875:8881 compcert.common.Values Val add def
R8888:8891 compcert.common.Values <> Vint constr
R8893:8893 compcert.ia32.ConstpropOpproof <> n var
R8884:8884 compcert.backend.Registers <> ::x_'#'_x not
R8885:8885 compcert.ia32.ConstpropOpproof <> r var
R8883:8883 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R8924:8934 compcert.ia32.ConstpropOp <> make_addimm def
R8969:8976 compcert.lib.Integers Int zero def
R8955:8965 compcert.lib.Integers Int eq_spec thm
R8948:8953 compcert.lib.Integers Int eq def
R9006:9006 compcert.backend.Registers <> ::x_'#'_x not
R9005:9005 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9006:9006 compcert.backend.Registers <> ::x_'#'_x not
R9005:9005 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9035:9035 compcert.backend.Registers <> ::x_'#'_x not
R9034:9034 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9061:9072 compcert.lib.Integers Int add_zero thm
R9035:9035 compcert.backend.Registers <> ::x_'#'_x not
R9034:9034 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9061:9072 compcert.lib.Integers Int add_zero thm
R9061:9072 compcert.lib.Integers Int add_zero thm
R9091:9097 compcert.common.Values Val add def
R9104:9107 compcert.common.Values <> Vint constr
R9100:9100 compcert.backend.Registers <> ::x_'#'_x not
R9099:9099 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9091:9097 compcert.common.Values Val add def
R9104:9107 compcert.common.Values <> Vint constr
R9100:9100 compcert.backend.Registers <> ::x_'#'_x not
R9099:9099 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
prf 9134:9152 <> make_shlimm_correct
R9212:9222 compcert.ia32.ConstpropOp <> make_shlimm def
R9229:9230 compcert.ia32.ConstpropOpproof <> r2 var
R9226:9227 compcert.ia32.ConstpropOpproof <> r1 var
R9224:9224 compcert.ia32.ConstpropOpproof <> n var
R9237:9243 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9245:9246 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9305:9308 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9296:9298 Coq.Init.Logic <> :type_scope:x_'='_x not
R9247:9260 compcert.ia32.Op <> eval_operation def
R9295:9295 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R9288:9289 compcert.backend.Registers <> ::x_'##'_x not
R9287:9287 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9290:9293 compcert.ia32.ConstpropOpproof <> args var
R9284:9285 compcert.ia32.ConstpropOpproof <> op var
R9266:9269 compcert.common.Values <> Vptr constr
R9274:9281 compcert.lib.Integers Int zero def
R9271:9272 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R9262:9263 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R9299:9302 Coq.Init.Datatypes <> Some constr
R9304:9304 compcert.ia32.ConstpropOpproof <> v var
R9309:9319 compcert.common.Values Val lessdef ind
R9345:9345 compcert.ia32.ConstpropOpproof <> v var
R9322:9328 compcert.common.Values Val shl def
R9336:9339 compcert.common.Values <> Vint constr
R9341:9341 compcert.ia32.ConstpropOpproof <> n var
R9331:9331 compcert.backend.Registers <> ::x_'#'_x not
R9332:9333 compcert.ia32.ConstpropOpproof <> r1 var
R9330:9330 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9179:9181 Coq.Init.Logic <> :type_scope:x_'='_x not
R9176:9176 compcert.backend.Registers <> ::x_'#'_x not
R9177:9178 compcert.ia32.ConstpropOpproof <> r2 var
R9175:9175 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9182:9185 compcert.common.Values <> Vint constr
R9187:9187 compcert.ia32.ConstpropOpproof <> n var
R9372:9382 compcert.ia32.ConstpropOp <> make_shlimm def
R9417:9424 compcert.lib.Integers Int zero def
R9403:9413 compcert.lib.Integers Int eq_spec thm
R9396:9401 compcert.lib.Integers Int eq def
R9453:9453 compcert.backend.Registers <> ::x_'#'_x not
R9452:9452 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9453:9453 compcert.backend.Registers <> ::x_'#'_x not
R9452:9452 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9483:9483 compcert.backend.Registers <> ::x_'#'_x not
R9482:9482 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9483:9483 compcert.backend.Registers <> ::x_'#'_x not
R9482:9482 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9510:9521 compcert.lib.Integers Int shl_zero thm
R9510:9521 compcert.lib.Integers Int shl_zero thm
R9542:9548 compcert.lib.Integers Int ltu def
R9552:9564 compcert.lib.Integers Int iwordsize def
R9542:9548 compcert.lib.Integers Int ltu def
R9552:9564 compcert.lib.Integers Int iwordsize def
prf 9678:9696 <> make_shrimm_correct
R9756:9766 compcert.ia32.ConstpropOp <> make_shrimm def
R9773:9774 compcert.ia32.ConstpropOpproof <> r2 var
R9770:9771 compcert.ia32.ConstpropOpproof <> r1 var
R9768:9768 compcert.ia32.ConstpropOpproof <> n var
R9781:9787 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9789:9790 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9849:9852 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9840:9842 Coq.Init.Logic <> :type_scope:x_'='_x not
R9791:9804 compcert.ia32.Op <> eval_operation def
R9839:9839 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R9832:9833 compcert.backend.Registers <> ::x_'##'_x not
R9831:9831 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9834:9837 compcert.ia32.ConstpropOpproof <> args var
R9828:9829 compcert.ia32.ConstpropOpproof <> op var
R9810:9813 compcert.common.Values <> Vptr constr
R9818:9825 compcert.lib.Integers Int zero def
R9815:9816 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R9806:9807 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R9843:9846 Coq.Init.Datatypes <> Some constr
R9848:9848 compcert.ia32.ConstpropOpproof <> v var
R9853:9863 compcert.common.Values Val lessdef ind
R9889:9889 compcert.ia32.ConstpropOpproof <> v var
R9866:9872 compcert.common.Values Val shr def
R9880:9883 compcert.common.Values <> Vint constr
R9885:9885 compcert.ia32.ConstpropOpproof <> n var
R9875:9875 compcert.backend.Registers <> ::x_'#'_x not
R9876:9877 compcert.ia32.ConstpropOpproof <> r1 var
R9874:9874 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9723:9725 Coq.Init.Logic <> :type_scope:x_'='_x not
R9720:9720 compcert.backend.Registers <> ::x_'#'_x not
R9721:9722 compcert.ia32.ConstpropOpproof <> r2 var
R9719:9719 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9726:9729 compcert.common.Values <> Vint constr
R9731:9731 compcert.ia32.ConstpropOpproof <> n var
R9916:9926 compcert.ia32.ConstpropOp <> make_shrimm def
R9961:9968 compcert.lib.Integers Int zero def
R9947:9957 compcert.lib.Integers Int eq_spec thm
R9940:9945 compcert.lib.Integers Int eq def
R9997:9997 compcert.backend.Registers <> ::x_'#'_x not
R9996:9996 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R9997:9997 compcert.backend.Registers <> ::x_'#'_x not
R9996:9996 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10027:10027 compcert.backend.Registers <> ::x_'#'_x not
R10026:10026 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10027:10027 compcert.backend.Registers <> ::x_'#'_x not
R10026:10026 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10054:10065 compcert.lib.Integers Int shr_zero thm
R10054:10065 compcert.lib.Integers Int shr_zero thm
R10086:10092 compcert.lib.Integers Int ltu def
R10096:10108 compcert.lib.Integers Int iwordsize def
R10086:10092 compcert.lib.Integers Int ltu def
R10096:10108 compcert.lib.Integers Int iwordsize def
prf 10222:10241 <> make_shruimm_correct
R10301:10312 compcert.ia32.ConstpropOp <> make_shruimm def
R10319:10320 compcert.ia32.ConstpropOpproof <> r2 var
R10316:10317 compcert.ia32.ConstpropOpproof <> r1 var
R10314:10314 compcert.ia32.ConstpropOpproof <> n var
R10327:10333 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10335:10336 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10395:10398 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10386:10388 Coq.Init.Logic <> :type_scope:x_'='_x not
R10337:10350 compcert.ia32.Op <> eval_operation def
R10385:10385 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R10378:10379 compcert.backend.Registers <> ::x_'##'_x not
R10377:10377 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10380:10383 compcert.ia32.ConstpropOpproof <> args var
R10374:10375 compcert.ia32.ConstpropOpproof <> op var
R10356:10359 compcert.common.Values <> Vptr constr
R10364:10371 compcert.lib.Integers Int zero def
R10361:10362 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R10352:10353 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R10389:10392 Coq.Init.Datatypes <> Some constr
R10394:10394 compcert.ia32.ConstpropOpproof <> v var
R10399:10409 compcert.common.Values Val lessdef ind
R10436:10436 compcert.ia32.ConstpropOpproof <> v var
R10412:10419 compcert.common.Values Val shru def
R10427:10430 compcert.common.Values <> Vint constr
R10432:10432 compcert.ia32.ConstpropOpproof <> n var
R10422:10422 compcert.backend.Registers <> ::x_'#'_x not
R10423:10424 compcert.ia32.ConstpropOpproof <> r1 var
R10421:10421 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10268:10270 Coq.Init.Logic <> :type_scope:x_'='_x not
R10265:10265 compcert.backend.Registers <> ::x_'#'_x not
R10266:10267 compcert.ia32.ConstpropOpproof <> r2 var
R10264:10264 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10271:10274 compcert.common.Values <> Vint constr
R10276:10276 compcert.ia32.ConstpropOpproof <> n var
R10463:10474 compcert.ia32.ConstpropOp <> make_shruimm def
R10509:10516 compcert.lib.Integers Int zero def
R10495:10505 compcert.lib.Integers Int eq_spec thm
R10488:10493 compcert.lib.Integers Int eq def
R10545:10545 compcert.backend.Registers <> ::x_'#'_x not
R10544:10544 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10545:10545 compcert.backend.Registers <> ::x_'#'_x not
R10544:10544 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10575:10575 compcert.backend.Registers <> ::x_'#'_x not
R10574:10574 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10575:10575 compcert.backend.Registers <> ::x_'#'_x not
R10574:10574 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10602:10614 compcert.lib.Integers Int shru_zero thm
R10602:10614 compcert.lib.Integers Int shru_zero thm
R10635:10641 compcert.lib.Integers Int ltu def
R10645:10657 compcert.lib.Integers Int iwordsize def
R10635:10641 compcert.lib.Integers Int ltu def
R10645:10657 compcert.lib.Integers Int iwordsize def
prf 10771:10789 <> make_mulimm_correct
R10827:10837 compcert.ia32.ConstpropOp <> make_mulimm def
R10841:10842 compcert.ia32.ConstpropOpproof <> r1 var
R10839:10839 compcert.ia32.ConstpropOpproof <> n var
R10849:10855 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10857:10858 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10917:10920 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10908:10910 Coq.Init.Logic <> :type_scope:x_'='_x not
R10859:10872 compcert.ia32.Op <> eval_operation def
R10907:10907 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R10900:10901 compcert.backend.Registers <> ::x_'##'_x not
R10899:10899 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10902:10905 compcert.ia32.ConstpropOpproof <> args var
R10896:10897 compcert.ia32.ConstpropOpproof <> op var
R10878:10881 compcert.common.Values <> Vptr constr
R10886:10893 compcert.lib.Integers Int zero def
R10883:10884 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R10874:10875 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R10911:10914 Coq.Init.Datatypes <> Some constr
R10916:10916 compcert.ia32.ConstpropOpproof <> v var
R10921:10931 compcert.common.Values Val lessdef ind
R10957:10957 compcert.ia32.ConstpropOpproof <> v var
R10934:10940 compcert.common.Values Val mul def
R10948:10951 compcert.common.Values <> Vint constr
R10953:10953 compcert.ia32.ConstpropOpproof <> n var
R10943:10943 compcert.backend.Registers <> ::x_'#'_x not
R10944:10945 compcert.ia32.ConstpropOpproof <> r1 var
R10942:10942 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R10984:10994 compcert.ia32.ConstpropOp <> make_mulimm def
R11029:11036 compcert.lib.Integers Int zero def
R11015:11025 compcert.lib.Integers Int eq_spec thm
R11008:11013 compcert.lib.Integers Int eq def
R11064:11067 compcert.common.Values <> Vint constr
R11069:11076 compcert.lib.Integers Int zero def
R11064:11067 compcert.common.Values <> Vint constr
R11069:11076 compcert.lib.Integers Int zero def
R11104:11104 compcert.backend.Registers <> ::x_'#'_x not
R11103:11103 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11104:11104 compcert.backend.Registers <> ::x_'#'_x not
R11103:11103 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11131:11142 compcert.lib.Integers Int mul_zero thm
R11131:11142 compcert.lib.Integers Int mul_zero thm
R11183:11189 compcert.lib.Integers Int one def
R11169:11179 compcert.lib.Integers Int eq_spec thm
R11162:11167 compcert.lib.Integers Int eq def
R11218:11218 compcert.backend.Registers <> ::x_'#'_x not
R11217:11217 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11218:11218 compcert.backend.Registers <> ::x_'#'_x not
R11217:11217 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11248:11248 compcert.backend.Registers <> ::x_'#'_x not
R11247:11247 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11248:11248 compcert.backend.Registers <> ::x_'#'_x not
R11247:11247 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11275:11285 compcert.lib.Integers Int mul_one thm
R11275:11285 compcert.lib.Integers Int mul_one thm
R11306:11318 compcert.lib.Integers Int is_power2 def
R11306:11318 compcert.lib.Integers Int is_power2 def
R11349:11360 compcert.common.Values Val mul_pow2 thm
R11363:11363 compcert.backend.Registers <> ::x_'#'_x not
R11362:11362 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11349:11360 compcert.common.Values Val mul_pow2 thm
R11363:11363 compcert.backend.Registers <> ::x_'#'_x not
R11362:11362 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
prf 11468:11486 <> make_divimm_correct
R11581:11591 compcert.ia32.ConstpropOp <> make_divimm def
R11598:11599 compcert.ia32.ConstpropOpproof <> r2 var
R11595:11596 compcert.ia32.ConstpropOpproof <> r1 var
R11593:11593 compcert.ia32.ConstpropOpproof <> n var
R11606:11612 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11614:11615 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11674:11677 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11665:11667 Coq.Init.Logic <> :type_scope:x_'='_x not
R11616:11629 compcert.ia32.Op <> eval_operation def
R11664:11664 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R11657:11658 compcert.backend.Registers <> ::x_'##'_x not
R11656:11656 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11659:11662 compcert.ia32.ConstpropOpproof <> args var
R11653:11654 compcert.ia32.ConstpropOpproof <> op var
R11635:11638 compcert.common.Values <> Vptr constr
R11643:11650 compcert.lib.Integers Int zero def
R11640:11641 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R11631:11632 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R11668:11671 Coq.Init.Datatypes <> Some constr
R11673:11673 compcert.ia32.ConstpropOpproof <> w var
R11678:11688 compcert.common.Values Val lessdef ind
R11692:11692 compcert.ia32.ConstpropOpproof <> w var
R11690:11690 compcert.ia32.ConstpropOpproof <> v var
R11548:11550 Coq.Init.Logic <> :type_scope:x_'='_x not
R11545:11545 compcert.backend.Registers <> ::x_'#'_x not
R11546:11547 compcert.ia32.ConstpropOpproof <> r2 var
R11544:11544 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11551:11554 compcert.common.Values <> Vint constr
R11556:11556 compcert.ia32.ConstpropOpproof <> n var
R11529:11531 Coq.Init.Logic <> :type_scope:x_'='_x not
R11511:11518 compcert.common.Values Val divs def
R11526:11526 compcert.backend.Registers <> ::x_'#'_x not
R11527:11528 compcert.ia32.ConstpropOpproof <> r2 var
R11525:11525 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11521:11521 compcert.backend.Registers <> ::x_'#'_x not
R11522:11523 compcert.ia32.ConstpropOpproof <> r1 var
R11520:11520 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11532:11535 Coq.Init.Datatypes <> Some constr
R11537:11537 compcert.ia32.ConstpropOpproof <> v var
R11719:11729 compcert.ia32.ConstpropOp <> make_divimm def
R11744:11756 compcert.lib.Integers Int is_power2 def
R11744:11756 compcert.lib.Integers Int is_power2 def
R11780:11786 compcert.lib.Integers Int ltu def
R11791:11798 compcert.lib.Integers Int repr def
R11780:11786 compcert.lib.Integers Int ltu def
R11791:11798 compcert.lib.Integers Int repr def
R11851:11863 compcert.common.Values Val divs_pow2 thm
R11851:11863 compcert.common.Values Val divs_pow2 thm
prf 11934:11953 <> make_divuimm_correct
R12048:12059 compcert.ia32.ConstpropOp <> make_divuimm def
R12066:12067 compcert.ia32.ConstpropOpproof <> r2 var
R12063:12064 compcert.ia32.ConstpropOpproof <> r1 var
R12061:12061 compcert.ia32.ConstpropOpproof <> n var
R12074:12080 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12082:12083 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12142:12145 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12133:12135 Coq.Init.Logic <> :type_scope:x_'='_x not
R12084:12097 compcert.ia32.Op <> eval_operation def
R12132:12132 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R12125:12126 compcert.backend.Registers <> ::x_'##'_x not
R12124:12124 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R12127:12130 compcert.ia32.ConstpropOpproof <> args var
R12121:12122 compcert.ia32.ConstpropOpproof <> op var
R12103:12106 compcert.common.Values <> Vptr constr
R12111:12118 compcert.lib.Integers Int zero def
R12108:12109 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R12099:12100 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R12136:12139 Coq.Init.Datatypes <> Some constr
R12141:12141 compcert.ia32.ConstpropOpproof <> w var
R12146:12156 compcert.common.Values Val lessdef ind
R12160:12160 compcert.ia32.ConstpropOpproof <> w var
R12158:12158 compcert.ia32.ConstpropOpproof <> v var
R12015:12017 Coq.Init.Logic <> :type_scope:x_'='_x not
R12012:12012 compcert.backend.Registers <> ::x_'#'_x not
R12013:12014 compcert.ia32.ConstpropOpproof <> r2 var
R12011:12011 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R12018:12021 compcert.common.Values <> Vint constr
R12023:12023 compcert.ia32.ConstpropOpproof <> n var
R11996:11998 Coq.Init.Logic <> :type_scope:x_'='_x not
R11978:11985 compcert.common.Values Val divu def
R11993:11993 compcert.backend.Registers <> ::x_'#'_x not
R11994:11995 compcert.ia32.ConstpropOpproof <> r2 var
R11992:11992 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11988:11988 compcert.backend.Registers <> ::x_'#'_x not
R11989:11990 compcert.ia32.ConstpropOpproof <> r1 var
R11987:11987 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R11999:12002 Coq.Init.Datatypes <> Some constr
R12004:12004 compcert.ia32.ConstpropOpproof <> v var
R12187:12198 compcert.ia32.ConstpropOp <> make_divuimm def
R12213:12225 compcert.lib.Integers Int is_power2 def
R12213:12225 compcert.lib.Integers Int is_power2 def
R12303:12315 compcert.common.Values Val divu_pow2 thm
R12303:12315 compcert.common.Values Val divu_pow2 thm
prf 12363:12382 <> make_moduimm_correct
R12477:12488 compcert.ia32.ConstpropOp <> make_moduimm def
R12495:12496 compcert.ia32.ConstpropOpproof <> r2 var
R12492:12493 compcert.ia32.ConstpropOpproof <> r1 var
R12490:12490 compcert.ia32.ConstpropOpproof <> n var
R12503:12509 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12511:12512 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12571:12574 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12562:12564 Coq.Init.Logic <> :type_scope:x_'='_x not
R12513:12526 compcert.ia32.Op <> eval_operation def
R12561:12561 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R12554:12555 compcert.backend.Registers <> ::x_'##'_x not
R12553:12553 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R12556:12559 compcert.ia32.ConstpropOpproof <> args var
R12550:12551 compcert.ia32.ConstpropOpproof <> op var
R12532:12535 compcert.common.Values <> Vptr constr
R12540:12547 compcert.lib.Integers Int zero def
R12537:12538 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R12528:12529 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R12565:12568 Coq.Init.Datatypes <> Some constr
R12570:12570 compcert.ia32.ConstpropOpproof <> w var
R12575:12585 compcert.common.Values Val lessdef ind
R12589:12589 compcert.ia32.ConstpropOpproof <> w var
R12587:12587 compcert.ia32.ConstpropOpproof <> v var
R12444:12446 Coq.Init.Logic <> :type_scope:x_'='_x not
R12441:12441 compcert.backend.Registers <> ::x_'#'_x not
R12442:12443 compcert.ia32.ConstpropOpproof <> r2 var
R12440:12440 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R12447:12450 compcert.common.Values <> Vint constr
R12452:12452 compcert.ia32.ConstpropOpproof <> n var
R12425:12427 Coq.Init.Logic <> :type_scope:x_'='_x not
R12407:12414 compcert.common.Values Val modu def
R12422:12422 compcert.backend.Registers <> ::x_'#'_x not
R12423:12424 compcert.ia32.ConstpropOpproof <> r2 var
R12421:12421 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R12417:12417 compcert.backend.Registers <> ::x_'#'_x not
R12418:12419 compcert.ia32.ConstpropOpproof <> r1 var
R12416:12416 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R12428:12431 Coq.Init.Datatypes <> Some constr
R12433:12433 compcert.ia32.ConstpropOpproof <> v var
R12616:12627 compcert.ia32.ConstpropOp <> make_moduimm def
R12642:12654 compcert.lib.Integers Int is_power2 def
R12642:12654 compcert.lib.Integers Int is_power2 def
R12712:12724 compcert.common.Values Val modu_pow2 thm
R12712:12724 compcert.common.Values Val modu_pow2 thm
prf 12776:12794 <> make_andimm_correct
R12854:12864 compcert.ia32.ConstpropOp <> make_andimm def
R12870:12870 compcert.ia32.ConstpropOpproof <> x var
R12868:12868 compcert.ia32.ConstpropOpproof <> r var
R12866:12866 compcert.ia32.ConstpropOpproof <> n var
R12877:12883 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12885:12886 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12945:12948 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12936:12938 Coq.Init.Logic <> :type_scope:x_'='_x not
R12887:12900 compcert.ia32.Op <> eval_operation def
R12935:12935 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R12928:12929 compcert.backend.Registers <> ::x_'##'_x not
R12927:12927 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R12930:12933 compcert.ia32.ConstpropOpproof <> args var
R12924:12925 compcert.ia32.ConstpropOpproof <> op var
R12906:12909 compcert.common.Values <> Vptr constr
R12914:12921 compcert.lib.Integers Int zero def
R12911:12912 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R12902:12903 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R12939:12942 Coq.Init.Datatypes <> Some constr
R12944:12944 compcert.ia32.ConstpropOpproof <> v var
R12949:12959 compcert.common.Values Val lessdef ind
R12984:12984 compcert.ia32.ConstpropOpproof <> v var
R12962:12968 compcert.common.Values Val and def
R12975:12978 compcert.common.Values <> Vint constr
R12980:12980 compcert.ia32.ConstpropOpproof <> n var
R12971:12971 compcert.backend.Registers <> ::x_'#'_x not
R12972:12972 compcert.ia32.ConstpropOpproof <> r var
R12970:12970 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R12815:12820 compcert.backend.ValueDomain <> vmatch ind
R12829:12829 compcert.ia32.ConstpropOpproof <> x var
R12826:12826 compcert.backend.Registers <> ::x_'#'_x not
R12827:12827 compcert.ia32.ConstpropOpproof <> r var
R12825:12825 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R12822:12823 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R13011:13021 compcert.ia32.ConstpropOp <> make_andimm def
R13056:13063 compcert.lib.Integers Int zero def
R13042:13052 compcert.lib.Integers Int eq_spec thm
R13035:13040 compcert.lib.Integers Int eq def
R13093:13096 compcert.common.Values <> Vint constr
R13098:13105 compcert.lib.Integers Int zero def
R13093:13096 compcert.common.Values <> Vint constr
R13098:13105 compcert.lib.Integers Int zero def
R13133:13133 compcert.backend.Registers <> ::x_'#'_x not
R13132:13132 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R13133:13133 compcert.backend.Registers <> ::x_'#'_x not
R13132:13132 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R13159:13170 compcert.lib.Integers Int and_zero thm
R13159:13170 compcert.lib.Integers Int and_zero thm
R13211:13218 compcert.lib.Integers Int mone def
R13197:13207 compcert.lib.Integers Int eq_spec thm
R13190:13195 compcert.lib.Integers Int eq def
R13249:13249 compcert.backend.Registers <> ::x_'#'_x not
R13248:13248 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R13249:13249 compcert.backend.Registers <> ::x_'#'_x not
R13248:13248 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R13278:13278 compcert.backend.Registers <> ::x_'#'_x not
R13277:13277 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R13278:13278 compcert.backend.Registers <> ::x_'#'_x not
R13277:13277 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R13304:13315 compcert.lib.Integers Int and_mone thm
R13304:13315 compcert.lib.Integers Int and_mone thm
R13349:13351 compcert.backend.ValueDomain <> Uns constr
R13358:13363 compcert.lib.Integers Int eq def
R13394:13401 compcert.lib.Integers Int zero def
R13366:13377 compcert.lib.Integers Int zero_ext def
R13382:13388 compcert.lib.Integers Int not def
R13433:13437 Coq.Init.Datatypes <> false constr
R13349:13351 compcert.backend.ValueDomain <> Uns constr
R13358:13363 compcert.lib.Integers Int eq def
R13394:13401 compcert.lib.Integers Int zero def
R13366:13377 compcert.lib.Integers Int zero_ext def
R13382:13388 compcert.lib.Integers Int not def
R13433:13437 Coq.Init.Datatypes <> false constr
R13495:13495 compcert.backend.Registers <> ::x_'#'_x not
R13494:13494 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R13495:13495 compcert.backend.Registers <> ::x_'#'_x not
R13494:13494 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R13544:13550 compcert.lib.Integers Int and def
R13544:13550 compcert.lib.Integers Int and def
R13585:13595 compcert.lib.Integers Int eq_spec thm
R13627:13634 compcert.lib.Integers Int zero def
R13598:13609 compcert.lib.Integers Int zero_ext def
R13615:13621 compcert.lib.Integers Int not def
R13585:13595 compcert.lib.Integers Int eq_spec thm
R13627:13634 compcert.lib.Integers Int zero def
R13598:13609 compcert.lib.Integers Int zero_ext def
R13615:13621 compcert.lib.Integers Int not def
R13688:13690 compcert.lib.Coqlib <> zlt def
R13688:13690 compcert.lib.Coqlib <> zlt def
R13711:13721 compcert.lib.Integers Int testbit def
R13735:13738 Coq.Init.Datatypes <> negb def
R13741:13751 compcert.lib.Integers Int testbit def
R13753:13760 compcert.lib.Integers Int zero def
R13735:13738 Coq.Init.Datatypes <> negb def
R13741:13751 compcert.lib.Integers Int testbit def
R13753:13760 compcert.lib.Integers Int zero def
R13711:13721 compcert.lib.Integers Int testbit def
R13778:13790 compcert.lib.Integers Int bits_zero thm
R13778:13790 compcert.lib.Integers Int bits_zero thm
R13808:13818 Coq.Bool.Bool <> andb_true_r thm
R13808:13818 Coq.Bool.Bool <> andb_true_r thm
R13853:13869 compcert.lib.Integers Int bits_zero_ext thm
R13853:13869 compcert.lib.Integers Int bits_zero_ext thm
R13889:13896 compcert.lib.Coqlib <> zlt_true thm
R13889:13896 compcert.lib.Coqlib <> zlt_true thm
R13918:13929 compcert.lib.Integers Int bits_not thm
R13918:13929 compcert.lib.Integers Int bits_not thm
R13946:13960 Coq.Bool.Bool <> negb_involutive thm
R13946:13960 Coq.Bool.Bool <> negb_involutive thm
prf 14042:14059 <> make_orimm_correct
R14096:14105 compcert.ia32.ConstpropOp <> make_orimm def
R14109:14109 compcert.ia32.ConstpropOpproof <> r var
R14107:14107 compcert.ia32.ConstpropOpproof <> n var
R14116:14122 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14124:14125 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14184:14187 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14175:14177 Coq.Init.Logic <> :type_scope:x_'='_x not
R14126:14139 compcert.ia32.Op <> eval_operation def
R14174:14174 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R14167:14168 compcert.backend.Registers <> ::x_'##'_x not
R14166:14166 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14169:14172 compcert.ia32.ConstpropOpproof <> args var
R14163:14164 compcert.ia32.ConstpropOpproof <> op var
R14145:14148 compcert.common.Values <> Vptr constr
R14153:14160 compcert.lib.Integers Int zero def
R14150:14151 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R14141:14142 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R14178:14181 Coq.Init.Datatypes <> Some constr
R14183:14183 compcert.ia32.ConstpropOpproof <> v var
R14188:14198 compcert.common.Values Val lessdef ind
R14222:14222 compcert.ia32.ConstpropOpproof <> v var
R14201:14206 compcert.common.Values Val or def
R14213:14216 compcert.common.Values <> Vint constr
R14218:14218 compcert.ia32.ConstpropOpproof <> n var
R14209:14209 compcert.backend.Registers <> ::x_'#'_x not
R14210:14210 compcert.ia32.ConstpropOpproof <> r var
R14208:14208 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14249:14258 compcert.ia32.ConstpropOp <> make_orimm def
R14293:14300 compcert.lib.Integers Int zero def
R14279:14289 compcert.lib.Integers Int eq_spec thm
R14272:14277 compcert.lib.Integers Int eq def
R14331:14331 compcert.backend.Registers <> ::x_'#'_x not
R14330:14330 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14331:14331 compcert.backend.Registers <> ::x_'#'_x not
R14330:14330 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14360:14360 compcert.backend.Registers <> ::x_'#'_x not
R14359:14359 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14360:14360 compcert.backend.Registers <> ::x_'#'_x not
R14359:14359 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14386:14396 compcert.lib.Integers Int or_zero thm
R14386:14396 compcert.lib.Integers Int or_zero thm
R14437:14444 compcert.lib.Integers Int mone def
R14423:14433 compcert.lib.Integers Int eq_spec thm
R14416:14421 compcert.lib.Integers Int eq def
R14474:14477 compcert.common.Values <> Vint constr
R14479:14486 compcert.lib.Integers Int mone def
R14474:14477 compcert.common.Values <> Vint constr
R14479:14486 compcert.lib.Integers Int mone def
R14514:14514 compcert.backend.Registers <> ::x_'#'_x not
R14513:14513 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14514:14514 compcert.backend.Registers <> ::x_'#'_x not
R14513:14513 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14540:14550 compcert.lib.Integers Int or_mone thm
R14540:14550 compcert.lib.Integers Int or_mone thm
prf 14608:14626 <> make_xorimm_correct
R14663:14673 compcert.ia32.ConstpropOp <> make_xorimm def
R14677:14677 compcert.ia32.ConstpropOpproof <> r var
R14675:14675 compcert.ia32.ConstpropOpproof <> n var
R14684:14690 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14692:14693 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14752:14755 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14743:14745 Coq.Init.Logic <> :type_scope:x_'='_x not
R14694:14707 compcert.ia32.Op <> eval_operation def
R14742:14742 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R14735:14736 compcert.backend.Registers <> ::x_'##'_x not
R14734:14734 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14737:14740 compcert.ia32.ConstpropOpproof <> args var
R14731:14732 compcert.ia32.ConstpropOpproof <> op var
R14713:14716 compcert.common.Values <> Vptr constr
R14721:14728 compcert.lib.Integers Int zero def
R14718:14719 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R14709:14710 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R14746:14749 Coq.Init.Datatypes <> Some constr
R14751:14751 compcert.ia32.ConstpropOpproof <> v var
R14756:14766 compcert.common.Values Val lessdef ind
R14791:14791 compcert.ia32.ConstpropOpproof <> v var
R14769:14775 compcert.common.Values Val xor def
R14782:14785 compcert.common.Values <> Vint constr
R14787:14787 compcert.ia32.ConstpropOpproof <> n var
R14778:14778 compcert.backend.Registers <> ::x_'#'_x not
R14779:14779 compcert.ia32.ConstpropOpproof <> r var
R14777:14777 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14818:14828 compcert.ia32.ConstpropOp <> make_xorimm def
R14863:14870 compcert.lib.Integers Int zero def
R14849:14859 compcert.lib.Integers Int eq_spec thm
R14842:14847 compcert.lib.Integers Int eq def
R14901:14901 compcert.backend.Registers <> ::x_'#'_x not
R14900:14900 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14901:14901 compcert.backend.Registers <> ::x_'#'_x not
R14900:14900 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14930:14930 compcert.backend.Registers <> ::x_'#'_x not
R14929:14929 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14930:14930 compcert.backend.Registers <> ::x_'#'_x not
R14929:14929 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R14956:14967 compcert.lib.Integers Int xor_zero thm
R14956:14967 compcert.lib.Integers Int xor_zero thm
R15008:15015 compcert.lib.Integers Int mone def
R14994:15004 compcert.lib.Integers Int eq_spec thm
R14987:14992 compcert.lib.Integers Int eq def
R15045:15054 compcert.common.Values Val notint def
R15057:15057 compcert.backend.Registers <> ::x_'#'_x not
R15056:15056 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R15045:15054 compcert.common.Values Val notint def
R15057:15057 compcert.backend.Registers <> ::x_'#'_x not
R15056:15056 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
prf 15125:15144 <> make_mulfimm_correct
R15206:15217 compcert.ia32.ConstpropOp <> make_mulfimm def
R15227:15228 compcert.ia32.ConstpropOpproof <> r2 var
R15224:15225 compcert.ia32.ConstpropOpproof <> r1 var
R15221:15222 compcert.ia32.ConstpropOpproof <> r1 var
R15219:15219 compcert.ia32.ConstpropOpproof <> n var
R15235:15241 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15243:15244 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15303:15306 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15294:15296 Coq.Init.Logic <> :type_scope:x_'='_x not
R15245:15258 compcert.ia32.Op <> eval_operation def
R15293:15293 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R15286:15287 compcert.backend.Registers <> ::x_'##'_x not
R15285:15285 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R15288:15291 compcert.ia32.ConstpropOpproof <> args var
R15282:15283 compcert.ia32.ConstpropOpproof <> op var
R15264:15267 compcert.common.Values <> Vptr constr
R15272:15279 compcert.lib.Integers Int zero def
R15269:15270 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R15260:15261 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R15297:15300 Coq.Init.Datatypes <> Some constr
R15302:15302 compcert.ia32.ConstpropOpproof <> v var
R15307:15317 compcert.common.Values Val lessdef ind
R15340:15340 compcert.ia32.ConstpropOpproof <> v var
R15320:15327 compcert.common.Values Val mulf def
R15335:15335 compcert.backend.Registers <> ::x_'#'_x not
R15336:15337 compcert.ia32.ConstpropOpproof <> r2 var
R15334:15334 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R15330:15330 compcert.backend.Registers <> ::x_'#'_x not
R15331:15332 compcert.ia32.ConstpropOpproof <> r1 var
R15329:15329 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R15171:15173 Coq.Init.Logic <> :type_scope:x_'='_x not
R15168:15168 compcert.backend.Registers <> ::x_'#'_x not
R15169:15170 compcert.ia32.ConstpropOpproof <> r2 var
R15167:15167 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R15174:15179 compcert.common.Values <> Vfloat constr
R15181:15181 compcert.ia32.ConstpropOpproof <> n var
R15367:15378 compcert.ia32.ConstpropOp <> make_mulfimm def
R15394:15405 compcert.lib.Floats Float eq_dec def
R15410:15421 compcert.lib.Floats Float of_int def
R15424:15431 compcert.lib.Integers Int repr def
R15394:15405 compcert.lib.Floats Float eq_dec def
R15410:15421 compcert.lib.Floats Float of_int def
R15424:15431 compcert.lib.Integers Int repr def
R15518:15518 compcert.backend.Registers <> ::x_'#'_x not
R15517:15517 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R15518:15518 compcert.backend.Registers <> ::x_'#'_x not
R15517:15517 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R15545:15558 compcert.lib.Floats Float mul2_add thm
R15545:15558 compcert.lib.Floats Float mul2_add thm
prf 15618:15639 <> make_mulfimm_correct_2
R15701:15712 compcert.ia32.ConstpropOp <> make_mulfimm def
R15722:15723 compcert.ia32.ConstpropOpproof <> r2 var
R15719:15720 compcert.ia32.ConstpropOpproof <> r1 var
R15716:15717 compcert.ia32.ConstpropOpproof <> r2 var
R15714:15714 compcert.ia32.ConstpropOpproof <> n var
R15730:15736 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15738:15739 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15798:15801 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15789:15791 Coq.Init.Logic <> :type_scope:x_'='_x not
R15740:15753 compcert.ia32.Op <> eval_operation def
R15788:15788 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R15781:15782 compcert.backend.Registers <> ::x_'##'_x not
R15780:15780 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R15783:15786 compcert.ia32.ConstpropOpproof <> args var
R15777:15778 compcert.ia32.ConstpropOpproof <> op var
R15759:15762 compcert.common.Values <> Vptr constr
R15767:15774 compcert.lib.Integers Int zero def
R15764:15765 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R15755:15756 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R15792:15795 Coq.Init.Datatypes <> Some constr
R15797:15797 compcert.ia32.ConstpropOpproof <> v var
R15802:15812 compcert.common.Values Val lessdef ind
R15835:15835 compcert.ia32.ConstpropOpproof <> v var
R15815:15822 compcert.common.Values Val mulf def
R15830:15830 compcert.backend.Registers <> ::x_'#'_x not
R15831:15832 compcert.ia32.ConstpropOpproof <> r2 var
R15829:15829 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R15825:15825 compcert.backend.Registers <> ::x_'#'_x not
R15826:15827 compcert.ia32.ConstpropOpproof <> r1 var
R15824:15824 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R15666:15668 Coq.Init.Logic <> :type_scope:x_'='_x not
R15663:15663 compcert.backend.Registers <> ::x_'#'_x not
R15664:15665 compcert.ia32.ConstpropOpproof <> r1 var
R15662:15662 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R15669:15674 compcert.common.Values <> Vfloat constr
R15676:15676 compcert.ia32.ConstpropOpproof <> n var
R15862:15873 compcert.ia32.ConstpropOp <> make_mulfimm def
R15889:15900 compcert.lib.Floats Float eq_dec def
R15905:15916 compcert.lib.Floats Float of_int def
R15919:15926 compcert.lib.Integers Int repr def
R15889:15900 compcert.lib.Floats Float eq_dec def
R15905:15916 compcert.lib.Floats Float of_int def
R15919:15926 compcert.lib.Integers Int repr def
R16013:16013 compcert.backend.Registers <> ::x_'#'_x not
R16012:16012 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16013:16013 compcert.backend.Registers <> ::x_'#'_x not
R16012:16012 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16040:16053 compcert.lib.Floats Float mul2_add thm
R16040:16053 compcert.lib.Floats Float mul2_add thm
R16073:16088 compcert.lib.Floats Float mul_commut thm
R16073:16088 compcert.lib.Floats Float mul_commut thm
prf 16148:16168 <> make_mulfsimm_correct
R16231:16243 compcert.ia32.ConstpropOp <> make_mulfsimm def
R16253:16254 compcert.ia32.ConstpropOpproof <> r2 var
R16250:16251 compcert.ia32.ConstpropOpproof <> r1 var
R16247:16248 compcert.ia32.ConstpropOpproof <> r1 var
R16245:16245 compcert.ia32.ConstpropOpproof <> n var
R16261:16267 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16269:16270 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16329:16332 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16320:16322 Coq.Init.Logic <> :type_scope:x_'='_x not
R16271:16284 compcert.ia32.Op <> eval_operation def
R16319:16319 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R16312:16313 compcert.backend.Registers <> ::x_'##'_x not
R16311:16311 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16314:16317 compcert.ia32.ConstpropOpproof <> args var
R16308:16309 compcert.ia32.ConstpropOpproof <> op var
R16290:16293 compcert.common.Values <> Vptr constr
R16298:16305 compcert.lib.Integers Int zero def
R16295:16296 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R16286:16287 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R16323:16326 Coq.Init.Datatypes <> Some constr
R16328:16328 compcert.ia32.ConstpropOpproof <> v var
R16333:16343 compcert.common.Values Val lessdef ind
R16367:16367 compcert.ia32.ConstpropOpproof <> v var
R16346:16354 compcert.common.Values Val mulfs def
R16362:16362 compcert.backend.Registers <> ::x_'#'_x not
R16363:16364 compcert.ia32.ConstpropOpproof <> r2 var
R16361:16361 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16357:16357 compcert.backend.Registers <> ::x_'#'_x not
R16358:16359 compcert.ia32.ConstpropOpproof <> r1 var
R16356:16356 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16195:16197 Coq.Init.Logic <> :type_scope:x_'='_x not
R16192:16192 compcert.backend.Registers <> ::x_'#'_x not
R16193:16194 compcert.ia32.ConstpropOpproof <> r2 var
R16191:16191 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16198:16204 compcert.common.Values <> Vsingle constr
R16206:16206 compcert.ia32.ConstpropOpproof <> n var
R16394:16406 compcert.ia32.ConstpropOp <> make_mulfsimm def
R16422:16435 compcert.lib.Floats Float32 eq_dec def
R16440:16453 compcert.lib.Floats Float32 of_int def
R16456:16463 compcert.lib.Integers Int repr def
R16422:16435 compcert.lib.Floats Float32 eq_dec def
R16440:16453 compcert.lib.Floats Float32 of_int def
R16456:16463 compcert.lib.Integers Int repr def
R16550:16550 compcert.backend.Registers <> ::x_'#'_x not
R16549:16549 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16550:16550 compcert.backend.Registers <> ::x_'#'_x not
R16549:16549 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16577:16592 compcert.lib.Floats Float32 mul2_add thm
R16577:16592 compcert.lib.Floats Float32 mul2_add thm
prf 16652:16674 <> make_mulfsimm_correct_2
R16737:16749 compcert.ia32.ConstpropOp <> make_mulfsimm def
R16759:16760 compcert.ia32.ConstpropOpproof <> r2 var
R16756:16757 compcert.ia32.ConstpropOpproof <> r1 var
R16753:16754 compcert.ia32.ConstpropOpproof <> r2 var
R16751:16751 compcert.ia32.ConstpropOpproof <> n var
R16767:16773 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16775:16776 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16835:16838 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16826:16828 Coq.Init.Logic <> :type_scope:x_'='_x not
R16777:16790 compcert.ia32.Op <> eval_operation def
R16825:16825 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R16818:16819 compcert.backend.Registers <> ::x_'##'_x not
R16817:16817 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16820:16823 compcert.ia32.ConstpropOpproof <> args var
R16814:16815 compcert.ia32.ConstpropOpproof <> op var
R16796:16799 compcert.common.Values <> Vptr constr
R16804:16811 compcert.lib.Integers Int zero def
R16801:16802 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R16792:16793 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R16829:16832 Coq.Init.Datatypes <> Some constr
R16834:16834 compcert.ia32.ConstpropOpproof <> v var
R16839:16849 compcert.common.Values Val lessdef ind
R16873:16873 compcert.ia32.ConstpropOpproof <> v var
R16852:16860 compcert.common.Values Val mulfs def
R16868:16868 compcert.backend.Registers <> ::x_'#'_x not
R16869:16870 compcert.ia32.ConstpropOpproof <> r2 var
R16867:16867 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16863:16863 compcert.backend.Registers <> ::x_'#'_x not
R16864:16865 compcert.ia32.ConstpropOpproof <> r1 var
R16862:16862 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16701:16703 Coq.Init.Logic <> :type_scope:x_'='_x not
R16698:16698 compcert.backend.Registers <> ::x_'#'_x not
R16699:16700 compcert.ia32.ConstpropOpproof <> r1 var
R16697:16697 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R16704:16710 compcert.common.Values <> Vsingle constr
R16712:16712 compcert.ia32.ConstpropOpproof <> n var
R16900:16912 compcert.ia32.ConstpropOp <> make_mulfsimm def
R16928:16941 compcert.lib.Floats Float32 eq_dec def
R16946:16959 compcert.lib.Floats Float32 of_int def
R16962:16969 compcert.lib.Integers Int repr def
R16928:16941 compcert.lib.Floats Float32 eq_dec def
R16946:16959 compcert.lib.Floats Float32 of_int def
R16962:16969 compcert.lib.Integers Int repr def
R17056:17056 compcert.backend.Registers <> ::x_'#'_x not
R17055:17055 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17056:17056 compcert.backend.Registers <> ::x_'#'_x not
R17055:17055 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17083:17098 compcert.lib.Floats Float32 mul2_add thm
R17083:17098 compcert.lib.Floats Float32 mul2_add thm
R17118:17135 compcert.lib.Floats Float32 mul_commut thm
R17118:17135 compcert.lib.Floats Float32 mul_commut thm
prf 17195:17218 <> make_cast8signed_correct
R17276:17291 compcert.ia32.ConstpropOp <> make_cast8signed def
R17295:17295 compcert.ia32.ConstpropOpproof <> x var
R17293:17293 compcert.ia32.ConstpropOpproof <> r var
R17302:17308 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17310:17311 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17370:17373 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17361:17363 Coq.Init.Logic <> :type_scope:x_'='_x not
R17312:17325 compcert.ia32.Op <> eval_operation def
R17360:17360 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R17353:17354 compcert.backend.Registers <> ::x_'##'_x not
R17352:17352 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17355:17358 compcert.ia32.ConstpropOpproof <> args var
R17349:17350 compcert.ia32.ConstpropOpproof <> op var
R17331:17334 compcert.common.Values <> Vptr constr
R17339:17346 compcert.lib.Integers Int zero def
R17336:17337 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R17327:17328 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R17364:17367 Coq.Init.Datatypes <> Some constr
R17369:17369 compcert.ia32.ConstpropOpproof <> v var
R17374:17384 compcert.common.Values Val lessdef ind
R17407:17407 compcert.ia32.ConstpropOpproof <> v var
R17387:17398 compcert.common.Values Val sign_ext def
R17403:17403 compcert.backend.Registers <> ::x_'#'_x not
R17404:17404 compcert.ia32.ConstpropOpproof <> r var
R17402:17402 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17237:17242 compcert.backend.ValueDomain <> vmatch ind
R17251:17251 compcert.ia32.ConstpropOpproof <> x var
R17248:17248 compcert.backend.Registers <> ::x_'#'_x not
R17249:17249 compcert.ia32.ConstpropOpproof <> r var
R17247:17247 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17244:17245 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R17434:17449 compcert.ia32.ConstpropOp <> make_cast8signed def
R17462:17466 compcert.backend.ValueDomain <> vincl def
R17471:17473 compcert.backend.ValueDomain <> Sgn constr
R17462:17466 compcert.backend.ValueDomain <> vincl def
R17471:17473 compcert.backend.ValueDomain <> Sgn constr
R17500:17500 compcert.backend.Registers <> ::x_'#'_x not
R17499:17499 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17500:17500 compcert.backend.Registers <> ::x_'#'_x not
R17499:17499 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17531:17536 compcert.backend.ValueDomain <> vmatch ind
R17546:17548 compcert.backend.ValueDomain <> Sgn constr
R17542:17542 compcert.backend.Registers <> ::x_'#'_x not
R17541:17541 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17538:17539 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R17531:17536 compcert.backend.ValueDomain <> vmatch ind
R17546:17548 compcert.backend.ValueDomain <> Sgn constr
R17542:17542 compcert.backend.Registers <> ::x_'#'_x not
R17541:17541 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17538:17539 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R17566:17574 compcert.backend.ValueDomain <> vmatch_ge thm
R17566:17574 compcert.backend.ValueDomain <> vmatch_ge thm
R17590:17597 compcert.backend.ValueDomain <> vincl_ge thm
R17590:17597 compcert.backend.ValueDomain <> vincl_ge thm
R17638:17652 compcert.backend.ValueDomain <> is_sgn_sign_ext thm
R17638:17652 compcert.backend.ValueDomain <> is_sgn_sign_ext thm
prf 17736:17761 <> make_cast8unsigned_correct
R17819:17836 compcert.ia32.ConstpropOp <> make_cast8unsigned def
R17840:17840 compcert.ia32.ConstpropOpproof <> x var
R17838:17838 compcert.ia32.ConstpropOpproof <> r var
R17847:17853 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17855:17856 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17915:17918 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17906:17908 Coq.Init.Logic <> :type_scope:x_'='_x not
R17857:17870 compcert.ia32.Op <> eval_operation def
R17905:17905 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R17898:17899 compcert.backend.Registers <> ::x_'##'_x not
R17897:17897 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17900:17903 compcert.ia32.ConstpropOpproof <> args var
R17894:17895 compcert.ia32.ConstpropOpproof <> op var
R17876:17879 compcert.common.Values <> Vptr constr
R17884:17891 compcert.lib.Integers Int zero def
R17881:17882 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R17872:17873 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R17909:17912 Coq.Init.Datatypes <> Some constr
R17914:17914 compcert.ia32.ConstpropOpproof <> v var
R17919:17929 compcert.common.Values Val lessdef ind
R17952:17952 compcert.ia32.ConstpropOpproof <> v var
R17932:17943 compcert.common.Values Val zero_ext def
R17948:17948 compcert.backend.Registers <> ::x_'#'_x not
R17949:17949 compcert.ia32.ConstpropOpproof <> r var
R17947:17947 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17780:17785 compcert.backend.ValueDomain <> vmatch ind
R17794:17794 compcert.ia32.ConstpropOpproof <> x var
R17791:17791 compcert.backend.Registers <> ::x_'#'_x not
R17792:17792 compcert.ia32.ConstpropOpproof <> r var
R17790:17790 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R17787:17788 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R17979:17996 compcert.ia32.ConstpropOp <> make_cast8unsigned def
R18009:18013 compcert.backend.ValueDomain <> vincl def
R18018:18020 compcert.backend.ValueDomain <> Uns constr
R18009:18013 compcert.backend.ValueDomain <> vincl def
R18018:18020 compcert.backend.ValueDomain <> Uns constr
R18047:18047 compcert.backend.Registers <> ::x_'#'_x not
R18046:18046 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18047:18047 compcert.backend.Registers <> ::x_'#'_x not
R18046:18046 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18078:18083 compcert.backend.ValueDomain <> vmatch ind
R18093:18095 compcert.backend.ValueDomain <> Uns constr
R18089:18089 compcert.backend.Registers <> ::x_'#'_x not
R18088:18088 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18085:18086 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R18078:18083 compcert.backend.ValueDomain <> vmatch ind
R18093:18095 compcert.backend.ValueDomain <> Uns constr
R18089:18089 compcert.backend.Registers <> ::x_'#'_x not
R18088:18088 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18085:18086 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R18113:18121 compcert.backend.ValueDomain <> vmatch_ge thm
R18113:18121 compcert.backend.ValueDomain <> vmatch_ge thm
R18137:18144 compcert.backend.ValueDomain <> vincl_ge thm
R18137:18144 compcert.backend.ValueDomain <> vincl_ge thm
R18185:18199 compcert.backend.ValueDomain <> is_uns_zero_ext thm
R18185:18199 compcert.backend.ValueDomain <> is_uns_zero_ext thm
prf 18283:18307 <> make_cast16signed_correct
R18365:18381 compcert.ia32.ConstpropOp <> make_cast16signed def
R18385:18385 compcert.ia32.ConstpropOpproof <> x var
R18383:18383 compcert.ia32.ConstpropOpproof <> r var
R18392:18398 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18400:18401 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18460:18463 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18451:18453 Coq.Init.Logic <> :type_scope:x_'='_x not
R18402:18415 compcert.ia32.Op <> eval_operation def
R18450:18450 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R18443:18444 compcert.backend.Registers <> ::x_'##'_x not
R18442:18442 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18445:18448 compcert.ia32.ConstpropOpproof <> args var
R18439:18440 compcert.ia32.ConstpropOpproof <> op var
R18421:18424 compcert.common.Values <> Vptr constr
R18429:18436 compcert.lib.Integers Int zero def
R18426:18427 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R18417:18418 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R18454:18457 Coq.Init.Datatypes <> Some constr
R18459:18459 compcert.ia32.ConstpropOpproof <> v var
R18464:18474 compcert.common.Values Val lessdef ind
R18498:18498 compcert.ia32.ConstpropOpproof <> v var
R18477:18488 compcert.common.Values Val sign_ext def
R18494:18494 compcert.backend.Registers <> ::x_'#'_x not
R18495:18495 compcert.ia32.ConstpropOpproof <> r var
R18493:18493 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18326:18331 compcert.backend.ValueDomain <> vmatch ind
R18340:18340 compcert.ia32.ConstpropOpproof <> x var
R18337:18337 compcert.backend.Registers <> ::x_'#'_x not
R18338:18338 compcert.ia32.ConstpropOpproof <> r var
R18336:18336 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18333:18334 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R18525:18541 compcert.ia32.ConstpropOp <> make_cast16signed def
R18554:18558 compcert.backend.ValueDomain <> vincl def
R18563:18565 compcert.backend.ValueDomain <> Sgn constr
R18554:18558 compcert.backend.ValueDomain <> vincl def
R18563:18565 compcert.backend.ValueDomain <> Sgn constr
R18593:18593 compcert.backend.Registers <> ::x_'#'_x not
R18592:18592 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18593:18593 compcert.backend.Registers <> ::x_'#'_x not
R18592:18592 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18624:18629 compcert.backend.ValueDomain <> vmatch ind
R18639:18641 compcert.backend.ValueDomain <> Sgn constr
R18635:18635 compcert.backend.Registers <> ::x_'#'_x not
R18634:18634 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18631:18632 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R18624:18629 compcert.backend.ValueDomain <> vmatch ind
R18639:18641 compcert.backend.ValueDomain <> Sgn constr
R18635:18635 compcert.backend.Registers <> ::x_'#'_x not
R18634:18634 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18631:18632 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R18660:18668 compcert.backend.ValueDomain <> vmatch_ge thm
R18660:18668 compcert.backend.ValueDomain <> vmatch_ge thm
R18684:18691 compcert.backend.ValueDomain <> vincl_ge thm
R18684:18691 compcert.backend.ValueDomain <> vincl_ge thm
R18732:18746 compcert.backend.ValueDomain <> is_sgn_sign_ext thm
R18732:18746 compcert.backend.ValueDomain <> is_sgn_sign_ext thm
prf 18830:18856 <> make_cast16unsigned_correct
R18914:18932 compcert.ia32.ConstpropOp <> make_cast16unsigned def
R18936:18936 compcert.ia32.ConstpropOpproof <> x var
R18934:18934 compcert.ia32.ConstpropOpproof <> r var
R18943:18949 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18951:18952 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19011:19014 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19002:19004 Coq.Init.Logic <> :type_scope:x_'='_x not
R18953:18966 compcert.ia32.Op <> eval_operation def
R19001:19001 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R18994:18995 compcert.backend.Registers <> ::x_'##'_x not
R18993:18993 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18996:18999 compcert.ia32.ConstpropOpproof <> args var
R18990:18991 compcert.ia32.ConstpropOpproof <> op var
R18972:18975 compcert.common.Values <> Vptr constr
R18980:18987 compcert.lib.Integers Int zero def
R18977:18978 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R18968:18969 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R19005:19008 Coq.Init.Datatypes <> Some constr
R19010:19010 compcert.ia32.ConstpropOpproof <> v var
R19015:19025 compcert.common.Values Val lessdef ind
R19049:19049 compcert.ia32.ConstpropOpproof <> v var
R19028:19039 compcert.common.Values Val zero_ext def
R19045:19045 compcert.backend.Registers <> ::x_'#'_x not
R19046:19046 compcert.ia32.ConstpropOpproof <> r var
R19044:19044 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18875:18880 compcert.backend.ValueDomain <> vmatch ind
R18889:18889 compcert.ia32.ConstpropOpproof <> x var
R18886:18886 compcert.backend.Registers <> ::x_'#'_x not
R18887:18887 compcert.ia32.ConstpropOpproof <> r var
R18885:18885 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R18882:18883 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R19076:19094 compcert.ia32.ConstpropOp <> make_cast16unsigned def
R19107:19111 compcert.backend.ValueDomain <> vincl def
R19116:19118 compcert.backend.ValueDomain <> Uns constr
R19107:19111 compcert.backend.ValueDomain <> vincl def
R19116:19118 compcert.backend.ValueDomain <> Uns constr
R19146:19146 compcert.backend.Registers <> ::x_'#'_x not
R19145:19145 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R19146:19146 compcert.backend.Registers <> ::x_'#'_x not
R19145:19145 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R19177:19182 compcert.backend.ValueDomain <> vmatch ind
R19192:19194 compcert.backend.ValueDomain <> Uns constr
R19188:19188 compcert.backend.Registers <> ::x_'#'_x not
R19187:19187 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R19184:19185 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R19177:19182 compcert.backend.ValueDomain <> vmatch ind
R19192:19194 compcert.backend.ValueDomain <> Uns constr
R19188:19188 compcert.backend.Registers <> ::x_'#'_x not
R19187:19187 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R19184:19185 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.bc var
R19213:19221 compcert.backend.ValueDomain <> vmatch_ge thm
R19213:19221 compcert.backend.ValueDomain <> vmatch_ge thm
R19237:19244 compcert.backend.ValueDomain <> vincl_ge thm
R19237:19244 compcert.backend.ValueDomain <> vincl_ge thm
R19285:19299 compcert.backend.ValueDomain <> is_uns_zero_ext thm
R19285:19299 compcert.backend.ValueDomain <> is_uns_zero_ext thm
prf 19383:19411 <> op_strength_reduction_correct
R19565:19585 compcert.ia32.ConstpropOp <> op_strength_reduction def
R19595:19596 compcert.ia32.ConstpropOpproof <> vl var
R19590:19593 compcert.ia32.ConstpropOpproof <> args var
R19587:19588 compcert.ia32.ConstpropOpproof <> op var
R19603:19609 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19611:19612 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19673:19676 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19664:19666 Coq.Init.Logic <> :type_scope:x_'='_x not
R19613:19626 compcert.ia32.Op <> eval_operation def
R19663:19663 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R19655:19656 compcert.backend.Registers <> ::x_'##'_x not
R19654:19654 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R19657:19661 compcert.ia32.ConstpropOpproof <> args' var
R19650:19652 compcert.ia32.ConstpropOpproof <> op' var
R19632:19635 compcert.common.Values <> Vptr constr
R19640:19647 compcert.lib.Integers Int zero def
R19637:19638 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R19628:19629 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R19667:19670 Coq.Init.Datatypes <> Some constr
R19672:19672 compcert.ia32.ConstpropOpproof <> w var
R19677:19687 compcert.common.Values Val lessdef ind
R19691:19691 compcert.ia32.ConstpropOpproof <> w var
R19689:19689 compcert.ia32.ConstpropOpproof <> v var
R19530:19532 Coq.Init.Logic <> :type_scope:x_'='_x not
R19481:19494 compcert.ia32.Op <> eval_operation def
R19529:19529 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.m var
R19522:19523 compcert.backend.Registers <> ::x_'##'_x not
R19521:19521 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R19524:19527 compcert.ia32.ConstpropOpproof <> args var
R19518:19519 compcert.ia32.ConstpropOpproof <> op var
R19500:19503 compcert.common.Values <> Vptr constr
R19508:19515 compcert.lib.Integers Int zero def
R19505:19506 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.sp var
R19496:19497 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ge var
R19533:19536 Coq.Init.Datatypes <> Some constr
R19538:19538 compcert.ia32.ConstpropOpproof <> v var
R19441:19443 Coq.Init.Logic <> :type_scope:x_'='_x not
R19439:19440 compcert.ia32.ConstpropOpproof <> vl var
R19444:19446 Coq.Lists.List <> map def
R19471:19474 compcert.ia32.ConstpropOpproof <> args var
R19458:19463 compcert.backend.ValueDomain AE get def
R19467:19468 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.ae var
R19465:19465 compcert.ia32.ConstpropOpproof <> r var
R19726:19746 compcert.ia32.ConstpropOp <> op_strength_reduction def
R19757:19783 compcert.ia32.ConstpropOp <> op_strength_reduction_match def
R19757:19783 compcert.ia32.ConstpropOp <> op_strength_reduction_match def
R19871:19894 compcert.ia32.ConstpropOpproof <> make_cast8signed_correct thm
R19871:19894 compcert.ia32.ConstpropOpproof <> make_cast8signed_correct thm
R19963:19988 compcert.ia32.ConstpropOpproof <> make_cast8unsigned_correct thm
R19963:19988 compcert.ia32.ConstpropOpproof <> make_cast8unsigned_correct thm
R20056:20080 compcert.ia32.ConstpropOpproof <> make_cast16signed_correct thm
R20056:20080 compcert.ia32.ConstpropOpproof <> make_cast16signed_correct thm
R20150:20176 compcert.ia32.ConstpropOpproof <> make_cast16unsigned_correct thm
R20150:20176 compcert.ia32.ConstpropOpproof <> make_cast16unsigned_correct thm
R20237:20251 compcert.common.Values Val sub_add_opp thm
R20237:20251 compcert.common.Values Val sub_add_opp thm
R20260:20278 compcert.ia32.ConstpropOpproof <> make_addimm_correct thm
R20260:20278 compcert.ia32.ConstpropOpproof <> make_addimm_correct thm
R20308:20321 compcert.common.Values Val mul_commut thm
R20308:20321 compcert.common.Values Val mul_commut thm
R20368:20386 compcert.ia32.ConstpropOpproof <> make_mulimm_correct thm
R20368:20386 compcert.ia32.ConstpropOpproof <> make_mulimm_correct thm
R20435:20453 compcert.ia32.ConstpropOpproof <> make_mulimm_correct thm
R20435:20453 compcert.ia32.ConstpropOpproof <> make_mulimm_correct thm
R20488:20490 Coq.Init.Logic <> :type_scope:x_'='_x not
R20485:20485 compcert.backend.Registers <> ::x_'#'_x not
R20484:20484 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R20491:20494 compcert.common.Values <> Vint constr
R20488:20490 Coq.Init.Logic <> :type_scope:x_'='_x not
R20485:20485 compcert.backend.Registers <> ::x_'#'_x not
R20484:20484 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R20491:20494 compcert.common.Values <> Vint constr
R20549:20567 compcert.ia32.ConstpropOpproof <> make_divimm_correct thm
R20549:20567 compcert.ia32.ConstpropOpproof <> make_divimm_correct thm
R20602:20604 Coq.Init.Logic <> :type_scope:x_'='_x not
R20599:20599 compcert.backend.Registers <> ::x_'#'_x not
R20598:20598 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R20605:20608 compcert.common.Values <> Vint constr
R20602:20604 Coq.Init.Logic <> :type_scope:x_'='_x not
R20599:20599 compcert.backend.Registers <> ::x_'#'_x not
R20598:20598 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R20605:20608 compcert.common.Values <> Vint constr
R20663:20682 compcert.ia32.ConstpropOpproof <> make_divuimm_correct thm
R20663:20682 compcert.ia32.ConstpropOpproof <> make_divuimm_correct thm
R20717:20719 Coq.Init.Logic <> :type_scope:x_'='_x not
R20714:20714 compcert.backend.Registers <> ::x_'#'_x not
R20713:20713 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R20720:20723 compcert.common.Values <> Vint constr
R20717:20719 Coq.Init.Logic <> :type_scope:x_'='_x not
R20714:20714 compcert.backend.Registers <> ::x_'#'_x not
R20713:20713 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R20720:20723 compcert.common.Values <> Vint constr
R20778:20797 compcert.ia32.ConstpropOpproof <> make_moduimm_correct thm
R20778:20797 compcert.ia32.ConstpropOpproof <> make_moduimm_correct thm
R20826:20839 compcert.common.Values Val and_commut thm
R20826:20839 compcert.common.Values Val and_commut thm
R20886:20904 compcert.ia32.ConstpropOpproof <> make_andimm_correct thm
R20886:20904 compcert.ia32.ConstpropOpproof <> make_andimm_correct thm
R20953:20971 compcert.ia32.ConstpropOpproof <> make_andimm_correct thm
R20953:20971 compcert.ia32.ConstpropOpproof <> make_andimm_correct thm
R21003:21021 compcert.ia32.ConstpropOpproof <> make_andimm_correct thm
R21003:21021 compcert.ia32.ConstpropOpproof <> make_andimm_correct thm
R21049:21061 compcert.common.Values Val or_commut thm
R21049:21061 compcert.common.Values Val or_commut thm
R21108:21125 compcert.ia32.ConstpropOpproof <> make_orimm_correct thm
R21108:21125 compcert.ia32.ConstpropOpproof <> make_orimm_correct thm
R21174:21191 compcert.ia32.ConstpropOpproof <> make_orimm_correct thm
R21174:21191 compcert.ia32.ConstpropOpproof <> make_orimm_correct thm
R21220:21233 compcert.common.Values Val xor_commut thm
R21220:21233 compcert.common.Values Val xor_commut thm
R21280:21298 compcert.ia32.ConstpropOpproof <> make_xorimm_correct thm
R21280:21298 compcert.ia32.ConstpropOpproof <> make_xorimm_correct thm
R21347:21365 compcert.ia32.ConstpropOpproof <> make_xorimm_correct thm
R21347:21365 compcert.ia32.ConstpropOpproof <> make_xorimm_correct thm
R21424:21442 compcert.ia32.ConstpropOpproof <> make_shlimm_correct thm
R21424:21442 compcert.ia32.ConstpropOpproof <> make_shlimm_correct thm
R21501:21519 compcert.ia32.ConstpropOpproof <> make_shrimm_correct thm
R21501:21519 compcert.ia32.ConstpropOpproof <> make_shrimm_correct thm
R21579:21598 compcert.ia32.ConstpropOpproof <> make_shruimm_correct thm
R21579:21598 compcert.ia32.ConstpropOpproof <> make_shruimm_correct thm
R21627:21657 compcert.ia32.ConstpropOpproof <> addr_strength_reduction_correct thm
R21680:21702 compcert.ia32.ConstpropOp <> addr_strength_reduction def
R21680:21702 compcert.ia32.ConstpropOp <> addr_strength_reduction def
R21773:21788 compcert.ia32.ConstpropOpproof <> make_cmp_correct thm
R21773:21788 compcert.ia32.ConstpropOpproof <> make_cmp_correct thm
R21863:21882 compcert.ia32.ConstpropOpproof <> make_mulfimm_correct thm
R21863:21882 compcert.ia32.ConstpropOpproof <> make_mulfimm_correct thm
R21931:21938 compcert.common.Values Val mulf def
R21953:21953 compcert.backend.Registers <> ::x_'#'_x not
R21952:21952 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R21941:21946 compcert.common.Values <> Vfloat constr
R21931:21938 compcert.common.Values Val mulf def
R21953:21953 compcert.backend.Registers <> ::x_'#'_x not
R21952:21952 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R21941:21946 compcert.common.Values <> Vfloat constr
R21982:22003 compcert.ia32.ConstpropOpproof <> make_mulfimm_correct_2 thm
R21982:22003 compcert.ia32.ConstpropOpproof <> make_mulfimm_correct_2 thm
R22079:22099 compcert.ia32.ConstpropOpproof <> make_mulfsimm_correct thm
R22079:22099 compcert.ia32.ConstpropOpproof <> make_mulfsimm_correct thm
R22148:22156 compcert.common.Values Val mulfs def
R22172:22172 compcert.backend.Registers <> ::x_'#'_x not
R22171:22171 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R22159:22165 compcert.common.Values <> Vsingle constr
R22148:22156 compcert.common.Values Val mulfs def
R22172:22172 compcert.backend.Registers <> ::x_'#'_x not
R22171:22171 compcert.ia32.ConstpropOpproof <> STRENGTH_REDUCTION.e var
R22159:22165 compcert.common.Values <> Vsingle constr
R22201:22223 compcert.ia32.ConstpropOpproof <> make_mulfsimm_correct_2 thm
R22201:22223 compcert.ia32.ConstpropOpproof <> make_mulfsimm_correct_2 thm
R22274:22291 compcert.ia32.ConstpropOpproof STRENGTH_REDUCTION <> sec
