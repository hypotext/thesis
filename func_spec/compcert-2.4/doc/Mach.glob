DIGEST NO
Fcompcert.backend.Mach
R969:974 compcert.lib.Coqlib <> <> lib
R992:995 compcert.lib.Maps <> <> lib
R1013:1015 compcert.common.AST <> <> lib
R1033:1040 compcert.lib.Integers <> <> lib
R1058:1063 compcert.common.Values <> <> lib
R1081:1086 compcert.common.Memory <> <> lib
R1104:1113 compcert.common.Globalenvs <> <> lib
R1131:1136 compcert.common.Events <> <> lib
R1154:1162 compcert.common.Smallstep <> <> lib
R1180:1181 compcert.ia32.Op <> <> lib
R1199:1207 compcert.backend.Locations <> <> lib
R1225:1235 compcert.backend.Conventions <> <> lib
R1246:1256 compcert.ia32.Stacklayout <> <> lib
def 2151:2155 <> label
R2160:2167 Coq.Numbers.BinNums <> positive ind
ind 2181:2191 <> instruction
constr 2206:2214 <> Mgetstack
constr 2255:2263 <> Msetstack
constr 2304:2312 <> Mgetparam
constr 2353:2355 <> Mop
constr 2408:2412 <> Mload
constr 2482:2487 <> Mstore
constr 2557:2561 <> Mcall
constr 2609:2617 <> Mtailcall
constr 2665:2672 <> Mbuiltin
constr 2738:2743 <> Mannot
constr 2803:2808 <> Mlabel
constr 2836:2840 <> Mgoto
constr 2868:2872 <> Mcond
constr 2926:2935 <> Mjumptable
constr 2976:2982 <> Mreturn
ind 3003:3013 <> annot_param
constr 3028:3032 <> APreg
constr 3059:3065 <> APstack
R2239:2249 compcert.backend.Mach <> instruction ind
R2231:2234 compcert.ia32.Machregs <> mreg ind
R2224:2226 compcert.common.AST <> typ ind
R2217:2219 compcert.lib.Integers <> int syndef
R2288:2298 compcert.backend.Mach <> instruction ind
R2281:2283 compcert.common.AST <> typ ind
R2274:2276 compcert.lib.Integers <> int syndef
R2266:2269 compcert.ia32.Machregs <> mreg ind
R2337:2347 compcert.backend.Mach <> instruction ind
R2329:2332 compcert.ia32.Machregs <> mreg ind
R2322:2324 compcert.common.AST <> typ ind
R2315:2317 compcert.lib.Integers <> int syndef
R2392:2402 compcert.backend.Mach <> instruction ind
R2384:2387 compcert.ia32.Machregs <> mreg ind
R2371:2374 Coq.Init.Datatypes <> list ind
R2376:2379 compcert.ia32.Machregs <> mreg ind
R2358:2366 compcert.ia32.Op <> operation ind
R2466:2476 compcert.backend.Mach <> instruction ind
R2458:2461 compcert.ia32.Machregs <> mreg ind
R2445:2448 Coq.Init.Datatypes <> list ind
R2450:2453 compcert.ia32.Machregs <> mreg ind
R2431:2440 compcert.ia32.Op <> addressing ind
R2415:2426 compcert.common.AST <> memory_chunk ind
R2541:2551 compcert.backend.Mach <> instruction ind
R2533:2536 compcert.ia32.Machregs <> mreg ind
R2520:2523 Coq.Init.Datatypes <> list ind
R2525:2528 compcert.ia32.Machregs <> mreg ind
R2506:2515 compcert.ia32.Op <> addressing ind
R2490:2501 compcert.common.AST <> memory_chunk ind
R2593:2603 compcert.backend.Mach <> instruction ind
R2581:2583 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R2577:2580 compcert.ia32.Machregs <> mreg ind
R2584:2588 compcert.common.AST <> ident def
R2564:2572 compcert.common.AST <> signature rec
R2649:2659 compcert.backend.Mach <> instruction ind
R2637:2639 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R2633:2636 compcert.ia32.Machregs <> mreg ind
R2640:2644 compcert.common.AST <> ident def
R2620:2628 compcert.common.AST <> signature rec
R2722:2732 compcert.backend.Mach <> instruction ind
R2709:2712 Coq.Init.Datatypes <> list ind
R2714:2717 compcert.ia32.Machregs <> mreg ind
R2696:2699 Coq.Init.Datatypes <> list ind
R2701:2704 compcert.ia32.Machregs <> mreg ind
R2675:2691 compcert.common.AST <> external_function ind
R2787:2797 compcert.backend.Mach <> instruction ind
R2767:2770 Coq.Init.Datatypes <> list ind
R2772:2782 compcert.backend.Mach <> annot_param ind
R2746:2762 compcert.common.AST <> external_function ind
R2820:2830 compcert.backend.Mach <> instruction ind
R2811:2815 compcert.backend.Mach <> label def
R2852:2862 compcert.backend.Mach <> instruction ind
R2843:2847 compcert.backend.Mach <> label def
R2910:2920 compcert.backend.Mach <> instruction ind
R2901:2905 compcert.backend.Mach <> label def
R2888:2891 Coq.Init.Datatypes <> list ind
R2893:2896 compcert.ia32.Machregs <> mreg ind
R2875:2883 compcert.ia32.Op <> condition ind
R2960:2970 compcert.backend.Mach <> instruction ind
R2946:2949 Coq.Init.Datatypes <> list ind
R2951:2955 compcert.backend.Mach <> label def
R2938:2941 compcert.ia32.Machregs <> mreg ind
R2985:2995 compcert.backend.Mach <> instruction ind
R3043:3053 compcert.backend.Mach <> annot_param ind
R3035:3038 compcert.ia32.Machregs <> mreg ind
R3089:3099 compcert.backend.Mach <> annot_param ind
R3084:3084 Coq.Numbers.BinNums <> Z ind
R3068:3079 compcert.common.AST <> memory_chunk ind
def 3114:3117 <> code
R3122:3125 Coq.Init.Datatypes <> list ind
R3127:3137 compcert.backend.Mach <> instruction ind
constr 3166:3175 <> mkfunction
rec 3148:3155 <> function
proj 3181:3186 <> fn_sig
proj 3204:3210 <> fn_code
proj 3223:3234 <> fn_stacksize
proj 3244:3254 <> fn_link_ofs
proj 3266:3279 <> fn_retaddr_ofs
R3189:3197 compcert.common.AST <> signature rec
R3213:3216 compcert.backend.Mach <> code def
R3237:3237 Coq.Numbers.BinNums <> Z ind
R3257:3259 compcert.lib.Integers <> int syndef
R3282:3284 compcert.lib.Integers <> int syndef
def 3301:3306 <> fundef
R3311:3320 compcert.common.AST <> fundef ind
R3322:3329 compcert.backend.Mach <> function rec
def 3344:3350 <> program
R3355:3365 compcert.common.AST <> program rec
R3374:3377 Coq.Init.Datatypes <> unit ind
R3367:3372 compcert.backend.Mach <> fundef def
def 3392:3397 <> funsig
R3404:3409 compcert.backend.Mach <> fundef def
R3423:3424 compcert.backend.Mach <> fd var
R3435:3442 compcert.common.AST <> Internal constr
R3449:3454 compcert.backend.Mach <> fn_sig proj
R3462:3469 compcert.common.AST <> External constr
R3477:3482 compcert.common.AST <> ef_sig def
def 3506:3509 <> genv
R3514:3519 compcert.common.Globalenvs Genv t rec
R3528:3531 Coq.Init.Datatypes <> unit ind
R3521:3526 compcert.backend.Mach <> fundef def
def 5067:5076 <> load_stack
R5082:5084 compcert.common.Memory <> mem syndef
R5092:5094 compcert.common.Values <> val ind
R5102:5104 compcert.common.AST <> typ ind
R5113:5115 compcert.lib.Integers <> int syndef
R5123:5131 compcert.common.Memory Mem loadv def
R5155:5161 compcert.common.Values Val add def
R5167:5170 compcert.common.Values <> Vint constr
R5172:5174 compcert.backend.Mach <> ofs var
R5163:5164 compcert.backend.Mach <> sp var
R5152:5152 compcert.backend.Mach <> m var
R5134:5146 compcert.common.AST <> chunk_of_type def
R5148:5149 compcert.backend.Mach <> ty var
def 5191:5201 <> store_stack
R5207:5209 compcert.common.Memory <> mem syndef
R5217:5219 compcert.common.Values <> val ind
R5227:5229 compcert.common.AST <> typ ind
R5238:5240 compcert.lib.Integers <> int syndef
R5247:5249 compcert.common.Values <> val ind
R5257:5266 compcert.common.Memory Mem storev def
R5313:5313 compcert.backend.Mach <> v var
R5290:5296 compcert.common.Values Val add def
R5302:5305 compcert.common.Values <> Vint constr
R5307:5309 compcert.backend.Mach <> ofs var
R5298:5299 compcert.backend.Mach <> sp var
R5287:5287 compcert.backend.Mach <> m var
R5269:5281 compcert.common.AST <> chunk_of_type def
R5283:5284 compcert.backend.Mach <> ty var
mod 5324:5328 <> RegEq
def 5344:5344 RegEq t
R5349:5352 compcert.ia32.Machregs <> mreg ind
def 5368:5369 RegEq eq
R5374:5380 compcert.ia32.Machregs <> mreg_eq thm
R5387:5391 compcert.backend.Mach RegEq <> mod
R5412:5415 compcert.lib.Maps EMap <> modtype
R5417:5421 compcert.backend.Mach RegEq <> modtype
mod 5402:5407 <> Regmap
def 5437:5442 <> regset
R5447:5454 compcert.backend.Mach Regmap t def
R5456:5458 compcert.common.Values <> val ind
R5484:5491 Coq.Lists.List <> map def
not 5471 <> ::x_'##'_x
R5538:5547 compcert.backend.Mach Regmap set def
not 5521 <> ::x_'#'_x_'<-'_x
def 5597:5606 <> undef_regs
R5613:5616 Coq.Init.Datatypes <> list ind
R5618:5621 compcert.ia32.Machregs <> mreg ind
R5629:5634 compcert.backend.Mach <> regset def
R5651:5656 compcert.backend.Mach <> regset def
R5669:5670 compcert.backend.Mach <> rl var
R5681:5683 Coq.Init.Datatypes <> nil constr
R5688:5689 compcert.backend.Mach <> rs var
R5697:5700 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5708:5717 compcert.backend.Mach Regmap set def
R5730:5739 compcert.backend.Mach <> undef_regs def
R5745:5746 compcert.backend.Mach <> rs var
R5722:5727 compcert.common.Values <> Vundef constr
prf 5763:5778 <> undef_regs_other
R5829:5831 Coq.Init.Logic <> :type_scope:x_'='_x not
R5811:5820 compcert.backend.Mach <> undef_regs def
R5828:5828 compcert.backend.Mach <> r var
R5825:5826 compcert.backend.Mach <> rs var
R5822:5823 compcert.backend.Mach <> rl var
R5832:5833 compcert.backend.Mach <> rs var
R5835:5835 compcert.backend.Mach <> r var
R5799:5799 Coq.Init.Logic <> :type_scope:'~'_x not
R5800:5801 Coq.Lists.List <> In def
R5805:5806 compcert.backend.Mach <> rl var
R5803:5803 compcert.backend.Mach <> r var
R5890:5899 compcert.backend.Mach Regmap gso thm
R5890:5899 compcert.backend.Mach Regmap gso thm
R0:-1 compcert.backend.Mach <> y var
R0:-1 compcert.backend.Mach <> y var
prf 5948:5962 <> undef_regs_same
R6012:6014 Coq.Init.Logic <> :type_scope:x_'='_x not
R5994:6003 compcert.backend.Mach <> undef_regs def
R6011:6011 compcert.backend.Mach <> r var
R6008:6009 compcert.backend.Mach <> rs var
R6005:6006 compcert.backend.Mach <> rl var
R6015:6020 compcert.common.Values <> Vundef constr
R5983:5984 Coq.Lists.List <> In def
R5988:5989 compcert.backend.Mach <> rl var
R5986:5986 compcert.backend.Mach <> r var
R0:-1 compcert.backend.Mach <> y var
R6097:6106 compcert.backend.Mach Regmap gss thm
R6097:6106 compcert.backend.Mach Regmap gss thm
R6118:6127 compcert.backend.Mach Regmap set def
R6140:6147 compcert.backend.Mach RegEq eq def
R6140:6147 compcert.backend.Mach RegEq eq def
def 6177:6184 <> set_regs
R6191:6194 Coq.Init.Datatypes <> list ind
R6196:6199 compcert.ia32.Machregs <> mreg ind
R6207:6210 Coq.Init.Datatypes <> list ind
R6212:6214 compcert.common.Values <> val ind
R6222:6227 compcert.backend.Mach <> regset def
R6232:6237 compcert.backend.Mach <> regset def
R6254:6255 compcert.backend.Mach <> vl var
R6250:6251 compcert.backend.Mach <> rl var
R6268:6271 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6279:6282 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6290:6297 compcert.backend.Mach <> set_regs def
R6308:6317 compcert.backend.Mach Regmap set def
R6325:6326 compcert.backend.Mach <> rs var
R6341:6342 compcert.backend.Mach <> rs var
def 6363:6370 <> is_label
R6378:6382 compcert.backend.Mach <> label def
R6393:6403 compcert.backend.Mach <> instruction ind
R6408:6411 Coq.Init.Datatypes <> bool ind
R6424:6428 compcert.backend.Mach <> instr var
R6439:6444 compcert.backend.Mach <> Mlabel constr
R6457:6459 compcert.lib.Coqlib <> peq def
R6461:6463 compcert.backend.Mach <> lbl var
R6485:6489 Coq.Init.Datatypes <> false constr
R6475:6478 Coq.Init.Datatypes <> true constr
R6500:6504 Coq.Init.Datatypes <> false constr
prf 6520:6535 <> is_label_correct
R6563:6570 compcert.backend.Mach <> is_label def
R6576:6580 compcert.backend.Mach <> instr var
R6572:6574 compcert.backend.Mach <> lbl var
R6616:6619 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R6611:6615 compcert.backend.Mach <> instr var
R6620:6625 compcert.backend.Mach <> Mlabel constr
R6627:6629 compcert.backend.Mach <> lbl var
R6592:6594 Coq.Init.Logic <> :type_scope:x_'='_x not
R6587:6591 compcert.backend.Mach <> instr var
R6595:6600 compcert.backend.Mach <> Mlabel constr
R6602:6604 compcert.backend.Mach <> lbl var
R6699:6701 compcert.lib.Coqlib <> peq def
R6699:6701 compcert.lib.Coqlib <> peq def
def 6745:6754 <> find_label
R6762:6766 compcert.backend.Mach <> label def
R6773:6776 compcert.backend.Mach <> code def
R6792:6797 Coq.Init.Datatypes <> option ind
R6799:6802 compcert.backend.Mach <> code def
R6815:6815 compcert.backend.Mach <> c var
R6826:6828 Coq.Init.Datatypes <> nil constr
R6833:6836 Coq.Init.Datatypes <> None constr
R6844:6847 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6857:6864 compcert.backend.Mach <> is_label def
R6866:6868 compcert.backend.Mach <> lbl var
R6891:6900 compcert.backend.Mach <> find_label def
R6902:6904 compcert.backend.Mach <> lbl var
R6878:6881 Coq.Init.Datatypes <> Some constr
prf 6923:6937 <> find_label_incl
R6989:6992 Coq.Lists.List <> incl def
R6997:6997 compcert.backend.Mach <> c var
R6994:6995 compcert.backend.Mach <> c' var
R6975:6977 Coq.Init.Logic <> :type_scope:x_'='_x not
R6959:6968 compcert.backend.Mach <> find_label def
R6974:6974 compcert.backend.Mach <> c var
R6970:6972 compcert.backend.Mach <> lbl var
R6978:6981 Coq.Init.Datatypes <> Some constr
R6983:6984 compcert.backend.Mach <> c' var
R7063:7070 compcert.backend.Mach <> is_label def
R7063:7070 compcert.backend.Mach <> is_label def
sec 7139:7144 <> RELSEM
var 7157:7177 RELSEM return_address_offset
R7200:7202 compcert.lib.Integers <> int syndef
R7192:7195 compcert.backend.Mach <> code def
R7180:7187 compcert.backend.Mach <> function rec
var 7223:7224 RELSEM ge
R7227:7230 compcert.backend.Mach <> genv def
def 7245:7261 <> find_function_ptr
R7276:7279 compcert.backend.Mach <> genv def
R7292:7294 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R7288:7291 compcert.ia32.Machregs <> mreg ind
R7295:7299 compcert.common.AST <> ident def
R7307:7312 compcert.backend.Mach <> regset def
R7317:7322 Coq.Init.Datatypes <> option ind
R7324:7328 compcert.common.Values <> block def
R7341:7343 compcert.backend.Mach <> ros var
R7354:7356 Coq.Init.Datatypes <> inl constr
R7375:7376 compcert.backend.Mach <> rs var
R7393:7396 compcert.common.Values <> Vptr constr
R7410:7415 compcert.lib.Integers Int eq def
R7421:7428 compcert.lib.Integers Int zero def
R7447:7450 Coq.Init.Datatypes <> None constr
R7435:7438 Coq.Init.Datatypes <> Some constr
R7465:7468 Coq.Init.Datatypes <> None constr
R7484:7486 Coq.Init.Datatypes <> inr constr
R7502:7517 compcert.common.Globalenvs Genv find_symbol def
R7519:7520 compcert.backend.Mach <> ge var
ind 7610:7620 <> extcall_arg
constr 7673:7687 <> extcall_arg_reg
constr 7751:7767 <> extcall_arg_stack
R7654:7656 compcert.common.Values <> val ind
R7647:7649 compcert.backend.Locations <> loc ind
R7640:7642 compcert.common.Values <> val ind
R7633:7635 compcert.common.Memory <> mem syndef
R7623:7628 compcert.backend.Mach <> regset def
R7714:7724 compcert.backend.Mach <> extcall_arg ind
R7741:7742 compcert.backend.Mach <> rs var
R7744:7744 compcert.backend.Mach <> r var
R7735:7735 compcert.backend.Locations <> R constr
R7737:7737 compcert.backend.Mach <> r var
R7731:7732 compcert.backend.Mach <> sp var
R7729:7729 compcert.backend.Mach <> m var
R7726:7727 compcert.backend.Mach <> rs var
R7884:7894 compcert.backend.Mach <> extcall_arg ind
R7924:7924 compcert.backend.Mach <> v var
R7905:7905 compcert.backend.Locations <> S constr
R7920:7921 compcert.backend.Mach <> ty var
R7916:7918 compcert.backend.Mach <> ofs var
R7907:7914 compcert.backend.Locations <> Outgoing constr
R7901:7902 compcert.backend.Mach <> sp var
R7899:7899 compcert.backend.Mach <> m var
R7896:7897 compcert.backend.Mach <> rs var
R7865:7867 Coq.Init.Logic <> :type_scope:x_'='_x not
R7801:7810 compcert.backend.Mach <> load_stack def
R7821:7828 compcert.lib.Integers Int repr def
R7853:7855 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R7831:7852 compcert.ia32.Stacklayout <> fe_ofs_arg def
R7857:7859 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R7860:7862 compcert.backend.Mach <> ofs var
R7817:7818 compcert.backend.Mach <> ty var
R7814:7815 compcert.backend.Mach <> sp var
R7812:7812 compcert.backend.Mach <> m var
R7868:7871 Coq.Init.Datatypes <> Some constr
R7873:7873 compcert.backend.Mach <> v var
def 7939:7955 <> extcall_arguments
R7966:7971 compcert.backend.Mach <> regset def
R7978:7980 compcert.common.Memory <> mem syndef
R7988:7990 compcert.common.Values <> val ind
R7998:8006 compcert.common.AST <> signature rec
R8016:8019 Coq.Init.Datatypes <> list ind
R8021:8023 compcert.common.Values <> val ind
R8038:8049 compcert.lib.Coqlib <> list_forall2 ind
R8092:8095 compcert.backend.Mach <> args var
R8074:8086 compcert.ia32.Conventions1 <> loc_arguments def
R8088:8089 compcert.backend.Mach <> sg var
R8052:8062 compcert.backend.Mach <> extcall_arg ind
R8069:8070 compcert.backend.Mach <> sp var
R8067:8067 compcert.backend.Mach <> m var
R8064:8065 compcert.backend.Mach <> rs var
ind 8171:8179 <> annot_arg
constr 8240:8252 <> annot_arg_reg
constr 8318:8332 <> annot_arg_stack
R8221:8223 compcert.common.Values <> val ind
R8206:8216 compcert.backend.Mach <> annot_param ind
R8199:8201 compcert.common.Values <> val ind
R8192:8194 compcert.common.Memory <> mem syndef
R8182:8187 compcert.backend.Mach <> regset def
R8279:8287 compcert.backend.Mach <> annot_arg ind
R8308:8309 compcert.backend.Mach <> rs var
R8311:8311 compcert.backend.Mach <> r var
R8298:8302 compcert.backend.Mach <> APreg constr
R8304:8304 compcert.backend.Mach <> r var
R8294:8295 compcert.backend.Mach <> sp var
R8292:8292 compcert.backend.Mach <> m var
R8289:8290 compcert.backend.Mach <> rs var
R8440:8448 compcert.backend.Mach <> annot_arg ind
R8491:8491 compcert.backend.Mach <> v var
R8472:8478 compcert.backend.Mach <> APstack constr
R8486:8488 compcert.backend.Mach <> ofs var
R8480:8484 compcert.backend.Mach <> chunk var
R8456:8459 compcert.common.Values <> Vptr constr
R8465:8468 compcert.backend.Mach <> base var
R8461:8463 compcert.backend.Mach <> stk var
R8453:8453 compcert.backend.Mach <> m var
R8450:8451 compcert.backend.Mach <> rs var
R8421:8423 Coq.Init.Logic <> :type_scope:x_'='_x not
R8375:8382 compcert.common.Memory Mem load def
R8414:8416 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R8397:8408 compcert.lib.Integers Int unsigned def
R8410:8413 compcert.backend.Mach <> base var
R8417:8419 compcert.backend.Mach <> ofs var
R8392:8394 compcert.backend.Mach <> stk var
R8390:8390 compcert.backend.Mach <> m var
R8384:8388 compcert.backend.Mach <> chunk var
R8424:8427 Coq.Init.Datatypes <> Some constr
R8429:8429 compcert.backend.Mach <> v var
def 8506:8520 <> annot_arguments
R8530:8535 compcert.backend.Mach <> regset def
R8542:8544 compcert.common.Memory <> mem syndef
R8552:8554 compcert.common.Values <> val ind
R8566:8569 Coq.Init.Datatypes <> list ind
R8571:8581 compcert.backend.Mach <> annot_param ind
R8591:8594 Coq.Init.Datatypes <> list ind
R8596:8598 compcert.common.Values <> val ind
R8613:8624 compcert.lib.Coqlib <> list_forall2 ind
R8653:8656 compcert.backend.Mach <> args var
R8646:8651 compcert.backend.Mach <> params var
R8627:8635 compcert.backend.Mach <> annot_arg ind
R8642:8643 compcert.backend.Mach <> sp var
R8640:8640 compcert.backend.Mach <> m var
R8637:8638 compcert.backend.Mach <> rs var
ind 8732:8741 <> stackframe
constr 8756:8765 <> Stackframe
R8785:8789 compcert.common.Values <> block def
R8852:8854 compcert.common.Values <> val ind
R8929:8931 compcert.common.Values <> val ind
R9000:9003 compcert.backend.Mach <> code def
R9061:9070 compcert.backend.Mach <> stackframe ind
ind 9084:9088 <> state
constr 9103:9107 <> State
constr 9511:9519 <> Callstate
constr 9793:9803 <> Returnstate
R9131:9134 Coq.Init.Datatypes <> list ind
R9136:9145 compcert.backend.Mach <> stackframe ind
R9185:9189 compcert.common.Values <> block def
R9261:9263 compcert.common.Values <> val ind
R9321:9324 compcert.backend.Mach <> code def
R9391:9396 compcert.backend.Mach <> regset def
R9452:9454 compcert.common.Memory <> mem syndef
R9501:9505 compcert.backend.Mach <> state ind
R9543:9546 Coq.Init.Datatypes <> list ind
R9548:9557 compcert.backend.Mach <> stackframe ind
R9597:9601 compcert.common.Values <> block def
R9673:9678 compcert.backend.Mach <> regset def
R9734:9736 compcert.common.Memory <> mem syndef
R9783:9787 compcert.backend.Mach <> state ind
R9827:9830 Coq.Init.Datatypes <> list ind
R9832:9841 compcert.backend.Mach <> stackframe ind
R9882:9887 compcert.backend.Mach <> regset def
R9943:9945 compcert.common.Memory <> mem syndef
R9992:9996 compcert.backend.Mach <> state ind
def 10011:10019 <> parent_sp
R10025:10028 Coq.Init.Datatypes <> list ind
R10030:10039 compcert.backend.Mach <> stackframe ind
R10044:10046 compcert.common.Values <> val ind
R10059:10059 compcert.backend.Mach <> s var
R10070:10072 Coq.Init.Datatypes <> nil constr
R10077:10081 compcert.common.Values <> Vzero def
R10107:10110 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10087:10096 compcert.backend.Mach <> Stackframe constr
def 10139:10147 <> parent_ra
R10153:10156 Coq.Init.Datatypes <> list ind
R10158:10167 compcert.backend.Mach <> stackframe ind
R10172:10174 compcert.common.Values <> val ind
R10187:10187 compcert.backend.Mach <> s var
R10198:10200 Coq.Init.Datatypes <> nil constr
R10205:10209 compcert.common.Values <> Vzero def
R10235:10238 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10215:10224 compcert.backend.Mach <> Stackframe constr
ind 10266:10269 <> step
constr 10311:10321 <> exec_Mlabel
constr 10442:10455 <> exec_Mgetstack
constr 10647:10660 <> exec_Msetstack
constr 10915:10928 <> exec_Mgetparam
constr 11317:11324 <> exec_Mop
constr 11581:11590 <> exec_Mload
constr 11916:11926 <> exec_Mstore
constr 12254:12263 <> exec_Mcall
constr 12601:12614 <> exec_Mtailcall
constr 13094:13106 <> exec_Mbuiltin
constr 13381:13391 <> exec_Mannot
constr 13623:13632 <> exec_Mgoto
constr 13862:13876 <> exec_Mcond_true
constr 14237:14252 <> exec_Mcond_false
constr 14504:14518 <> exec_Mjumptable
constr 14901:14912 <> exec_Mreturn
constr 15323:15344 <> exec_function_internal
constr 15821:15842 <> exec_function_external
constr 16182:16192 <> exec_return
R10290:10294 compcert.backend.Mach <> state ind
R10281:10285 compcert.common.Events <> trace def
R10272:10276 compcert.backend.Mach <> state ind
R10362:10365 compcert.backend.Mach <> step ind
R10417:10421 compcert.backend.Mach <> State constr
R10435:10435 compcert.backend.Mach <> m var
R10432:10433 compcert.backend.Mach <> rs var
R10430:10430 compcert.backend.Mach <> c var
R10427:10428 compcert.backend.Mach <> sp var
R10425:10425 compcert.backend.Mach <> f var
R10423:10423 compcert.backend.Mach <> s var
R10413:10414 compcert.common.Events <> E0 def
R10368:10372 compcert.backend.Mach <> State constr
R10402:10402 compcert.backend.Mach <> m var
R10399:10400 compcert.backend.Mach <> rs var
R10392:10395 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10382:10387 compcert.backend.Mach <> Mlabel constr
R10389:10391 compcert.backend.Mach <> lbl var
R10396:10396 compcert.backend.Mach <> c var
R10378:10379 compcert.backend.Mach <> sp var
R10376:10376 compcert.backend.Mach <> f var
R10374:10374 compcert.backend.Mach <> s var
R10546:10549 compcert.backend.Mach <> step ind
R10611:10615 compcert.backend.Mach <> State constr
R10640:10640 compcert.backend.Mach <> m var
R10629:10629 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R10633:10636 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R10630:10632 compcert.backend.Mach <> dst var
R10637:10637 compcert.backend.Mach <> v var
R10627:10628 compcert.backend.Mach <> rs var
R10624:10624 compcert.backend.Mach <> c var
R10621:10622 compcert.backend.Mach <> sp var
R10619:10619 compcert.backend.Mach <> f var
R10617:10617 compcert.backend.Mach <> s var
R10607:10608 compcert.common.Events <> E0 def
R10552:10556 compcert.backend.Mach <> State constr
R10596:10596 compcert.backend.Mach <> m var
R10593:10594 compcert.backend.Mach <> rs var
R10586:10589 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10566:10574 compcert.backend.Mach <> Mgetstack constr
R10583:10585 compcert.backend.Mach <> dst var
R10580:10581 compcert.backend.Mach <> ty var
R10576:10578 compcert.backend.Mach <> ofs var
R10590:10590 compcert.backend.Mach <> c var
R10562:10563 compcert.backend.Mach <> sp var
R10560:10560 compcert.backend.Mach <> f var
R10558:10558 compcert.backend.Mach <> s var
R10527:10529 Coq.Init.Logic <> :type_scope:x_'='_x not
R10505:10514 compcert.backend.Mach <> load_stack def
R10524:10526 compcert.backend.Mach <> ofs var
R10521:10522 compcert.backend.Mach <> ty var
R10518:10519 compcert.backend.Mach <> sp var
R10516:10516 compcert.backend.Mach <> m var
R10530:10533 Coq.Init.Datatypes <> Some constr
R10535:10535 compcert.backend.Mach <> v var
R10823:10826 compcert.backend.Mach <> step ind
R10888:10892 compcert.backend.Mach <> State constr
R10907:10908 compcert.backend.Mach <> m' var
R10903:10905 compcert.backend.Mach <> rs' var
R10901:10901 compcert.backend.Mach <> c var
R10898:10899 compcert.backend.Mach <> sp var
R10896:10896 compcert.backend.Mach <> f var
R10894:10894 compcert.backend.Mach <> s var
R10884:10885 compcert.common.Events <> E0 def
R10829:10833 compcert.backend.Mach <> State constr
R10873:10873 compcert.backend.Mach <> m var
R10870:10871 compcert.backend.Mach <> rs var
R10863:10866 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10843:10851 compcert.backend.Mach <> Msetstack constr
R10861:10862 compcert.backend.Mach <> ty var
R10857:10859 compcert.backend.Mach <> ofs var
R10853:10855 compcert.backend.Mach <> src var
R10867:10867 compcert.backend.Mach <> c var
R10839:10840 compcert.backend.Mach <> sp var
R10837:10837 compcert.backend.Mach <> f var
R10835:10835 compcert.backend.Mach <> s var
R10770:10772 Coq.Init.Logic <> :type_scope:x_'='_x not
R10767:10769 compcert.backend.Mach <> rs' var
R10773:10782 compcert.backend.Mach <> undef_regs def
R10811:10812 compcert.backend.Mach <> rs var
R10785:10805 compcert.ia32.Machregs <> destroyed_by_setstack def
R10807:10808 compcert.backend.Mach <> ty var
R10747:10749 Coq.Init.Logic <> :type_scope:x_'='_x not
R10715:10725 compcert.backend.Mach <> store_stack def
R10740:10741 compcert.backend.Mach <> rs var
R10743:10745 compcert.backend.Mach <> src var
R10735:10737 compcert.backend.Mach <> ofs var
R10732:10733 compcert.backend.Mach <> ty var
R10729:10730 compcert.backend.Mach <> sp var
R10727:10727 compcert.backend.Mach <> m var
R10750:10753 Coq.Init.Datatypes <> Some constr
R10755:10756 compcert.backend.Mach <> m' var
R11224:11227 compcert.backend.Mach <> step ind
R11290:11294 compcert.backend.Mach <> State constr
R11310:11310 compcert.backend.Mach <> m var
R11306:11308 compcert.backend.Mach <> rs' var
R11304:11304 compcert.backend.Mach <> c var
R11301:11302 compcert.backend.Mach <> sp var
R11298:11299 compcert.backend.Mach <> fb var
R11296:11296 compcert.backend.Mach <> s var
R11286:11287 compcert.common.Events <> E0 def
R11230:11234 compcert.backend.Mach <> State constr
R11275:11275 compcert.backend.Mach <> m var
R11272:11273 compcert.backend.Mach <> rs var
R11265:11268 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11245:11253 compcert.backend.Mach <> Mgetparam constr
R11262:11264 compcert.backend.Mach <> dst var
R11259:11260 compcert.backend.Mach <> ty var
R11255:11257 compcert.backend.Mach <> ofs var
R11269:11269 compcert.backend.Mach <> c var
R11241:11242 compcert.backend.Mach <> sp var
R11238:11239 compcert.backend.Mach <> fb var
R11236:11236 compcert.backend.Mach <> s var
R11162:11165 Coq.Init.Logic <> :type_scope:x_'='_x not
R11213:11213 Coq.Init.Logic <> :type_scope:x_'='_x not
R11159:11161 compcert.backend.Mach <> rs' var
R11202:11204 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R11208:11211 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R11205:11207 compcert.backend.Mach <> dst var
R11212:11212 compcert.backend.Mach <> v var
R11168:11170 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R11192:11195 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R11171:11191 compcert.ia32.Machregs <> temp_for_parent_frame def
R11196:11201 compcert.common.Values <> Vundef constr
R11166:11167 compcert.backend.Mach <> rs var
R11140:11142 Coq.Init.Logic <> :type_scope:x_'='_x not
R11107:11116 compcert.backend.Mach <> load_stack def
R11137:11139 compcert.backend.Mach <> ofs var
R11134:11135 compcert.backend.Mach <> ty var
R11121:11129 compcert.backend.Mach <> parent_sp def
R11131:11131 compcert.backend.Mach <> s var
R11118:11118 compcert.backend.Mach <> m var
R11143:11146 Coq.Init.Datatypes <> Some constr
R11148:11148 compcert.backend.Mach <> v var
R11076:11078 Coq.Init.Logic <> :type_scope:x_'='_x not
R11040:11049 compcert.backend.Mach <> load_stack def
R11064:11074 compcert.backend.Mach <> fn_link_ofs proj
R11061:11061 compcert.backend.Mach <> f var
R11056:11059 compcert.common.AST <> Tint constr
R11053:11054 compcert.backend.Mach <> sp var
R11051:11051 compcert.backend.Mach <> m var
R11079:11082 Coq.Init.Datatypes <> Some constr
R11085:11093 compcert.backend.Mach <> parent_sp def
R11095:11095 compcert.backend.Mach <> s var
R11010:11012 Coq.Init.Logic <> :type_scope:x_'='_x not
R10985:11003 compcert.common.Globalenvs Genv find_funct_ptr def
R11008:11009 compcert.backend.Mach <> fb var
R11005:11006 compcert.backend.Mach <> RELSEM.ge var
R11013:11016 Coq.Init.Datatypes <> Some constr
R11019:11026 compcert.common.AST <> Internal constr
R11028:11028 compcert.backend.Mach <> f var
R11495:11498 compcert.backend.Mach <> step ind
R11555:11559 compcert.backend.Mach <> State constr
R11574:11574 compcert.backend.Mach <> m var
R11570:11572 compcert.backend.Mach <> rs' var
R11568:11568 compcert.backend.Mach <> c var
R11565:11566 compcert.backend.Mach <> sp var
R11563:11563 compcert.backend.Mach <> f var
R11561:11561 compcert.backend.Mach <> s var
R11551:11552 compcert.common.Events <> E0 def
R11501:11505 compcert.backend.Mach <> State constr
R11540:11540 compcert.backend.Mach <> m var
R11537:11538 compcert.backend.Mach <> rs var
R11530:11533 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11515:11517 compcert.backend.Mach <> Mop constr
R11527:11529 compcert.backend.Mach <> res var
R11522:11525 compcert.backend.Mach <> args var
R11519:11520 compcert.backend.Mach <> op var
R11534:11534 compcert.backend.Mach <> c var
R11511:11512 compcert.backend.Mach <> sp var
R11509:11509 compcert.backend.Mach <> f var
R11507:11507 compcert.backend.Mach <> s var
R11435:11438 Coq.Init.Logic <> :type_scope:x_'='_x not
R11484:11484 Coq.Init.Logic <> :type_scope:x_'='_x not
R11432:11434 compcert.backend.Mach <> rs' var
R11439:11439 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R11474:11475 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R11479:11482 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R11476:11478 compcert.backend.Mach <> res var
R11483:11483 compcert.backend.Mach <> v var
R11440:11449 compcert.backend.Mach <> undef_regs def
R11472:11473 compcert.backend.Mach <> rs var
R11452:11466 compcert.ia32.Machregs <> destroyed_by_op def
R11468:11469 compcert.backend.Mach <> op var
R11413:11415 Coq.Init.Logic <> :type_scope:x_'='_x not
R11379:11392 compcert.ia32.Op <> eval_operation def
R11412:11412 compcert.backend.Mach <> m var
R11405:11406 compcert.backend.Mach <> ::x_'##'_x not
R11403:11404 compcert.backend.Mach <> rs var
R11407:11410 compcert.backend.Mach <> args var
R11400:11401 compcert.backend.Mach <> op var
R11397:11398 compcert.backend.Mach <> sp var
R11394:11395 compcert.backend.Mach <> RELSEM.ge var
R11416:11419 Coq.Init.Datatypes <> Some constr
R11421:11421 compcert.backend.Mach <> v var
R11820:11823 compcert.backend.Mach <> step ind
R11890:11894 compcert.backend.Mach <> State constr
R11909:11909 compcert.backend.Mach <> m var
R11905:11907 compcert.backend.Mach <> rs' var
R11903:11903 compcert.backend.Mach <> c var
R11900:11901 compcert.backend.Mach <> sp var
R11898:11898 compcert.backend.Mach <> f var
R11896:11896 compcert.backend.Mach <> s var
R11886:11887 compcert.common.Events <> E0 def
R11826:11830 compcert.backend.Mach <> State constr
R11875:11875 compcert.backend.Mach <> m var
R11872:11873 compcert.backend.Mach <> rs var
R11865:11868 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11840:11844 compcert.backend.Mach <> Mload constr
R11862:11864 compcert.backend.Mach <> dst var
R11857:11860 compcert.backend.Mach <> args var
R11852:11855 compcert.backend.Mach <> addr var
R11846:11850 compcert.backend.Mach <> chunk var
R11869:11869 compcert.backend.Mach <> c var
R11836:11837 compcert.backend.Mach <> sp var
R11834:11834 compcert.backend.Mach <> f var
R11832:11832 compcert.backend.Mach <> s var
R11750:11753 Coq.Init.Logic <> :type_scope:x_'='_x not
R11809:11809 Coq.Init.Logic <> :type_scope:x_'='_x not
R11747:11749 compcert.backend.Mach <> rs' var
R11754:11754 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R11799:11800 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R11804:11807 compcert.backend.Mach <> ::x_'#'_x_'<-'_x not
R11801:11803 compcert.backend.Mach <> dst var
R11808:11808 compcert.backend.Mach <> v var
R11755:11764 compcert.backend.Mach <> undef_regs def
R11797:11798 compcert.backend.Mach <> rs var
R11767:11783 compcert.ia32.Machregs <> destroyed_by_load def
R11791:11794 compcert.backend.Mach <> addr var
R11785:11789 compcert.backend.Mach <> chunk var
R11728:11730 Coq.Init.Logic <> :type_scope:x_'='_x not
R11709:11717 compcert.common.Memory Mem loadv def
R11727:11727 compcert.backend.Mach <> a var
R11725:11725 compcert.backend.Mach <> m var
R11719:11723 compcert.backend.Mach <> chunk var
R11731:11734 Coq.Init.Datatypes <> Some constr
R11736:11736 compcert.backend.Mach <> v var
R11690:11692 Coq.Init.Logic <> :type_scope:x_'='_x not
R11655:11669 compcert.ia32.Op <> eval_addressing def
R11684:11685 compcert.backend.Mach <> ::x_'##'_x not
R11682:11683 compcert.backend.Mach <> rs var
R11686:11689 compcert.backend.Mach <> args var
R11677:11680 compcert.backend.Mach <> addr var
R11674:11675 compcert.backend.Mach <> sp var
R11671:11672 compcert.backend.Mach <> RELSEM.ge var
R11693:11696 Coq.Init.Datatypes <> Some constr
R11698:11698 compcert.backend.Mach <> a var
R12156:12159 compcert.backend.Mach <> step ind
R12227:12231 compcert.backend.Mach <> State constr
R12246:12247 compcert.backend.Mach <> m' var
R12242:12244 compcert.backend.Mach <> rs' var
R12240:12240 compcert.backend.Mach <> c var
R12237:12238 compcert.backend.Mach <> sp var
R12235:12235 compcert.backend.Mach <> f var
R12233:12233 compcert.backend.Mach <> s var
R12223:12224 compcert.common.Events <> E0 def
R12162:12166 compcert.backend.Mach <> State constr
R12212:12212 compcert.backend.Mach <> m var
R12209:12210 compcert.backend.Mach <> rs var
R12202:12205 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12176:12181 compcert.backend.Mach <> Mstore constr
R12199:12201 compcert.backend.Mach <> src var
R12194:12197 compcert.backend.Mach <> args var
R12189:12192 compcert.backend.Mach <> addr var
R12183:12187 compcert.backend.Mach <> chunk var
R12206:12206 compcert.backend.Mach <> c var
R12172:12173 compcert.backend.Mach <> sp var
R12170:12170 compcert.backend.Mach <> f var
R12168:12168 compcert.backend.Mach <> s var
R12098:12100 Coq.Init.Logic <> :type_scope:x_'='_x not
R12095:12097 compcert.backend.Mach <> rs' var
R12101:12110 compcert.backend.Mach <> undef_regs def
R12144:12145 compcert.backend.Mach <> rs var
R12113:12130 compcert.ia32.Machregs <> destroyed_by_store def
R12138:12141 compcert.backend.Mach <> addr var
R12132:12136 compcert.backend.Mach <> chunk var
R12075:12077 Coq.Init.Logic <> :type_scope:x_'='_x not
R12046:12055 compcert.common.Memory Mem storev def
R12068:12069 compcert.backend.Mach <> rs var
R12071:12073 compcert.backend.Mach <> src var
R12065:12065 compcert.backend.Mach <> a var
R12063:12063 compcert.backend.Mach <> m var
R12057:12061 compcert.backend.Mach <> chunk var
R12078:12081 Coq.Init.Datatypes <> Some constr
R12083:12084 compcert.backend.Mach <> m' var
R12027:12029 Coq.Init.Logic <> :type_scope:x_'='_x not
R11992:12006 compcert.ia32.Op <> eval_addressing def
R12021:12022 compcert.backend.Mach <> ::x_'##'_x not
R12019:12020 compcert.backend.Mach <> rs var
R12023:12026 compcert.backend.Mach <> args var
R12014:12017 compcert.backend.Mach <> addr var
R12011:12012 compcert.backend.Mach <> sp var
R12008:12009 compcert.backend.Mach <> RELSEM.ge var
R12030:12033 Coq.Init.Datatypes <> Some constr
R12035:12035 compcert.backend.Mach <> a var
R12457:12460 compcert.backend.Mach <> step ind
R12516:12524 compcert.backend.Mach <> Callstate constr
R12594:12594 compcert.backend.Mach <> m var
R12591:12592 compcert.backend.Mach <> rs var
R12588:12589 compcert.backend.Mach <> f' var
R12558:12561 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12527:12536 compcert.backend.Mach <> Stackframe constr
R12557:12557 compcert.backend.Mach <> c var
R12545:12548 compcert.common.Values <> Vptr constr
R12553:12554 compcert.backend.Mach <> ra var
R12550:12551 compcert.backend.Mach <> fb var
R12541:12542 compcert.backend.Mach <> sp var
R12538:12539 compcert.backend.Mach <> fb var
R12562:12562 compcert.backend.Mach <> s var
R12512:12513 compcert.common.Events <> E0 def
R12463:12467 compcert.backend.Mach <> State constr
R12501:12501 compcert.backend.Mach <> m var
R12498:12499 compcert.backend.Mach <> rs var
R12491:12494 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12478:12482 compcert.backend.Mach <> Mcall constr
R12488:12490 compcert.backend.Mach <> ros var
R12484:12486 compcert.backend.Mach <> sig var
R12495:12495 compcert.backend.Mach <> c var
R12474:12475 compcert.backend.Mach <> sp var
R12471:12472 compcert.backend.Mach <> fb var
R12469:12469 compcert.backend.Mach <> s var
R12419:12439 compcert.backend.Mach <> RELSEM.return_address_offset var
R12445:12446 compcert.backend.Mach <> ra var
R12443:12443 compcert.backend.Mach <> c var
R12441:12441 compcert.backend.Mach <> f var
R12389:12391 Coq.Init.Logic <> :type_scope:x_'='_x not
R12364:12382 compcert.common.Globalenvs Genv find_funct_ptr def
R12387:12388 compcert.backend.Mach <> fb var
R12384:12385 compcert.backend.Mach <> RELSEM.ge var
R12392:12395 Coq.Init.Datatypes <> Some constr
R12398:12405 compcert.common.AST <> Internal constr
R12407:12407 compcert.backend.Mach <> f var
R12344:12346 Coq.Init.Logic <> :type_scope:x_'='_x not
R12317:12333 compcert.backend.Mach <> find_function_ptr def
R12342:12343 compcert.backend.Mach <> rs var
R12338:12340 compcert.backend.Mach <> ros var
R12335:12336 compcert.backend.Mach <> RELSEM.ge var
R12347:12350 Coq.Init.Datatypes <> Some constr
R12352:12353 compcert.backend.Mach <> f' var
R12992:12995 compcert.backend.Mach <> step ind
R13068:13076 compcert.backend.Mach <> Callstate constr
R13086:13087 compcert.backend.Mach <> m' var
R13083:13084 compcert.backend.Mach <> rs var
R13080:13081 compcert.backend.Mach <> f' var
R13078:13078 compcert.backend.Mach <> s var
R13064:13065 compcert.common.Events <> E0 def
R12998:13002 compcert.backend.Mach <> State constr
R13053:13053 compcert.backend.Mach <> m var
R13050:13051 compcert.backend.Mach <> rs var
R13043:13046 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R13026:13034 compcert.backend.Mach <> Mtailcall constr
R13040:13042 compcert.backend.Mach <> ros var
R13036:13038 compcert.backend.Mach <> sig var
R13047:13047 compcert.backend.Mach <> c var
R13010:13013 compcert.common.Values <> Vptr constr
R13019:13022 compcert.backend.Mach <> soff var
R13015:13017 compcert.backend.Mach <> stk var
R13006:13007 compcert.backend.Mach <> fb var
R13004:13004 compcert.backend.Mach <> s var
R12972:12974 Coq.Init.Logic <> :type_scope:x_'='_x not
R12939:12946 compcert.common.Memory Mem free def
R12959:12970 compcert.backend.Mach <> fn_stacksize proj
R12956:12956 compcert.backend.Mach <> f var
R12950:12952 compcert.backend.Mach <> stk var
R12948:12948 compcert.backend.Mach <> m var
R12975:12978 Coq.Init.Datatypes <> Some constr
R12980:12981 compcert.backend.Mach <> m' var
R12908:12910 Coq.Init.Logic <> :type_scope:x_'='_x not
R12856:12865 compcert.backend.Mach <> load_stack def
R12893:12906 compcert.backend.Mach <> fn_retaddr_ofs proj
R12890:12890 compcert.backend.Mach <> f var
R12885:12888 compcert.common.AST <> Tint constr
R12870:12873 compcert.common.Values <> Vptr constr
R12879:12882 compcert.backend.Mach <> soff var
R12875:12877 compcert.backend.Mach <> stk var
R12867:12867 compcert.backend.Mach <> m var
R12911:12914 Coq.Init.Datatypes <> Some constr
R12917:12925 compcert.backend.Mach <> parent_ra def
R12927:12927 compcert.backend.Mach <> s var
R12825:12827 Coq.Init.Logic <> :type_scope:x_'='_x not
R12776:12785 compcert.backend.Mach <> load_stack def
R12813:12823 compcert.backend.Mach <> fn_link_ofs proj
R12810:12810 compcert.backend.Mach <> f var
R12805:12808 compcert.common.AST <> Tint constr
R12790:12793 compcert.common.Values <> Vptr constr
R12799:12802 compcert.backend.Mach <> soff var
R12795:12797 compcert.backend.Mach <> stk var
R12787:12787 compcert.backend.Mach <> m var
R12828:12831 Coq.Init.Datatypes <> Some constr
R12834:12842 compcert.backend.Mach <> parent_sp def
R12844:12844 compcert.backend.Mach <> s var
R12746:12748 Coq.Init.Logic <> :type_scope:x_'='_x not
R12721:12739 compcert.common.Globalenvs Genv find_funct_ptr def
R12744:12745 compcert.backend.Mach <> fb var
R12741:12742 compcert.backend.Mach <> RELSEM.ge var
R12749:12752 Coq.Init.Datatypes <> Some constr
R12755:12762 compcert.common.AST <> Internal constr
R12764:12764 compcert.backend.Mach <> f var
R12701:12703 Coq.Init.Logic <> :type_scope:x_'='_x not
R12674:12690 compcert.backend.Mach <> find_function_ptr def
R12699:12700 compcert.backend.Mach <> rs var
R12695:12697 compcert.backend.Mach <> ros var
R12692:12693 compcert.backend.Mach <> RELSEM.ge var
R12704:12707 Coq.Init.Datatypes <> Some constr
R12709:12710 compcert.backend.Mach <> f' var
R13289:13292 compcert.backend.Mach <> step ind
R13354:13358 compcert.backend.Mach <> State constr
R13373:13374 compcert.backend.Mach <> m' var
R13369:13371 compcert.backend.Mach <> rs' var
R13367:13367 compcert.backend.Mach <> b var
R13364:13365 compcert.backend.Mach <> sp var
R13362:13362 compcert.backend.Mach <> f var
R13360:13360 compcert.backend.Mach <> s var
R13351:13351 compcert.backend.Mach <> t var
R13295:13299 compcert.backend.Mach <> State constr
R13339:13339 compcert.backend.Mach <> m var
R13336:13337 compcert.backend.Mach <> rs var
R13329:13332 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R13309:13316 compcert.backend.Mach <> Mbuiltin constr
R13326:13328 compcert.backend.Mach <> res var
R13321:13324 compcert.backend.Mach <> args var
R13318:13319 compcert.backend.Mach <> ef var
R13333:13333 compcert.backend.Mach <> b var
R13305:13306 compcert.backend.Mach <> sp var
R13303:13303 compcert.backend.Mach <> f var
R13301:13301 compcert.backend.Mach <> s var
R13219:13221 Coq.Init.Logic <> :type_scope:x_'='_x not
R13216:13218 compcert.backend.Mach <> rs' var
R13222:13229 compcert.backend.Mach <> set_regs def
R13239:13248 compcert.backend.Mach <> undef_regs def
R13276:13277 compcert.backend.Mach <> rs var
R13251:13270 compcert.ia32.Machregs <> destroyed_by_builtin def
R13272:13273 compcert.backend.Mach <> ef var
R13235:13236 compcert.backend.Mach <> vl var
R13231:13233 compcert.backend.Mach <> res var
R13167:13180 compcert.common.Events <> external_call' ind
R13204:13205 compcert.backend.Mach <> m' var
R13201:13202 compcert.backend.Mach <> vl var
R13199:13199 compcert.backend.Mach <> t var
R13197:13197 compcert.backend.Mach <> m var
R13190:13191 compcert.backend.Mach <> ::x_'##'_x not
R13188:13189 compcert.backend.Mach <> rs var
R13192:13195 compcert.backend.Mach <> args var
R13185:13186 compcert.backend.Mach <> RELSEM.ge var
R13182:13183 compcert.backend.Mach <> ef var
R13538:13541 compcert.backend.Mach <> step ind
R13597:13601 compcert.backend.Mach <> State constr
R13615:13616 compcert.backend.Mach <> m' var
R13612:13613 compcert.backend.Mach <> rs var
R13610:13610 compcert.backend.Mach <> b var
R13607:13608 compcert.backend.Mach <> sp var
R13605:13605 compcert.backend.Mach <> f var
R13603:13603 compcert.backend.Mach <> s var
R13594:13594 compcert.backend.Mach <> t var
R13544:13548 compcert.backend.Mach <> State constr
R13582:13582 compcert.backend.Mach <> m var
R13579:13580 compcert.backend.Mach <> rs var
R13572:13575 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R13558:13563 compcert.backend.Mach <> Mannot constr
R13568:13571 compcert.backend.Mach <> args var
R13565:13566 compcert.backend.Mach <> ef var
R13576:13576 compcert.backend.Mach <> b var
R13554:13555 compcert.backend.Mach <> sp var
R13552:13552 compcert.backend.Mach <> f var
R13550:13550 compcert.backend.Mach <> s var
R13493:13506 compcert.common.Events <> external_call' ind
R13526:13527 compcert.backend.Mach <> m' var
R13524:13524 compcert.backend.Mach <> v var
R13522:13522 compcert.backend.Mach <> t var
R13520:13520 compcert.backend.Mach <> m var
R13514:13518 compcert.backend.Mach <> vargs var
R13511:13512 compcert.backend.Mach <> RELSEM.ge var
R13508:13509 compcert.backend.Mach <> ef var
R13449:13463 compcert.backend.Mach <> annot_arguments def
R13478:13482 compcert.backend.Mach <> vargs var
R13473:13476 compcert.backend.Mach <> args var
R13470:13471 compcert.backend.Mach <> sp var
R13468:13468 compcert.backend.Mach <> m var
R13465:13466 compcert.backend.Mach <> rs var
R13780:13783 compcert.backend.Mach <> step ind
R13835:13839 compcert.backend.Mach <> State constr
R13855:13855 compcert.backend.Mach <> m var
R13852:13853 compcert.backend.Mach <> rs var
R13849:13850 compcert.backend.Mach <> c' var
R13846:13847 compcert.backend.Mach <> sp var
R13843:13844 compcert.backend.Mach <> fb var
R13841:13841 compcert.backend.Mach <> s var
R13831:13832 compcert.common.Events <> E0 def
R13786:13790 compcert.backend.Mach <> State constr
R13820:13820 compcert.backend.Mach <> m var
R13817:13818 compcert.backend.Mach <> rs var
R13810:13813 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R13801:13805 compcert.backend.Mach <> Mgoto constr
R13807:13809 compcert.backend.Mach <> lbl var
R13814:13814 compcert.backend.Mach <> c var
R13797:13798 compcert.backend.Mach <> sp var
R13794:13795 compcert.backend.Mach <> fb var
R13792:13792 compcert.backend.Mach <> s var
R13760:13762 Coq.Init.Logic <> :type_scope:x_'='_x not
R13734:13743 compcert.backend.Mach <> find_label def
R13752:13758 compcert.backend.Mach <> fn_code proj
R13749:13749 compcert.backend.Mach <> f var
R13745:13747 compcert.backend.Mach <> lbl var
R13763:13766 Coq.Init.Datatypes <> Some constr
R13768:13769 compcert.backend.Mach <> c' var
R13704:13706 Coq.Init.Logic <> :type_scope:x_'='_x not
R13679:13697 compcert.common.Globalenvs Genv find_funct_ptr def
R13702:13703 compcert.backend.Mach <> fb var
R13699:13700 compcert.backend.Mach <> RELSEM.ge var
R13707:13710 Coq.Init.Datatypes <> Some constr
R13713:13720 compcert.common.AST <> Internal constr
R13722:13722 compcert.backend.Mach <> f var
R14144:14147 compcert.backend.Mach <> step ind
R14209:14213 compcert.backend.Mach <> State constr
R14230:14230 compcert.backend.Mach <> m var
R14226:14228 compcert.backend.Mach <> rs' var
R14223:14224 compcert.backend.Mach <> c' var
R14220:14221 compcert.backend.Mach <> sp var
R14217:14218 compcert.backend.Mach <> fb var
R14215:14215 compcert.backend.Mach <> s var
R14205:14206 compcert.common.Events <> E0 def
R14150:14154 compcert.backend.Mach <> State constr
R14194:14194 compcert.backend.Mach <> m var
R14191:14192 compcert.backend.Mach <> rs var
R14184:14187 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14165:14169 compcert.backend.Mach <> Mcond constr
R14181:14183 compcert.backend.Mach <> lbl var
R14176:14179 compcert.backend.Mach <> args var
R14171:14174 compcert.backend.Mach <> cond var
R14188:14188 compcert.backend.Mach <> c var
R14161:14162 compcert.backend.Mach <> sp var
R14158:14159 compcert.backend.Mach <> fb var
R14156:14156 compcert.backend.Mach <> s var
R14093:14095 Coq.Init.Logic <> :type_scope:x_'='_x not
R14090:14092 compcert.backend.Mach <> rs' var
R14096:14105 compcert.backend.Mach <> undef_regs def
R14132:14133 compcert.backend.Mach <> rs var
R14108:14124 compcert.ia32.Machregs <> destroyed_by_cond def
R14126:14129 compcert.backend.Mach <> cond var
R14070:14072 Coq.Init.Logic <> :type_scope:x_'='_x not
R14044:14053 compcert.backend.Mach <> find_label def
R14062:14068 compcert.backend.Mach <> fn_code proj
R14059:14059 compcert.backend.Mach <> f var
R14055:14057 compcert.backend.Mach <> lbl var
R14073:14076 Coq.Init.Datatypes <> Some constr
R14078:14079 compcert.backend.Mach <> c' var
R14014:14016 Coq.Init.Logic <> :type_scope:x_'='_x not
R13989:14007 compcert.common.Globalenvs Genv find_funct_ptr def
R14012:14013 compcert.backend.Mach <> fb var
R14009:14010 compcert.backend.Mach <> RELSEM.ge var
R14017:14020 Coq.Init.Datatypes <> Some constr
R14023:14030 compcert.common.AST <> Internal constr
R14032:14032 compcert.backend.Mach <> f var
R13967:13969 Coq.Init.Logic <> :type_scope:x_'='_x not
R13937:13950 compcert.ia32.Op <> eval_condition def
R13966:13966 compcert.backend.Mach <> m var
R13959:13960 compcert.backend.Mach <> ::x_'##'_x not
R13957:13958 compcert.backend.Mach <> rs var
R13961:13964 compcert.backend.Mach <> args var
R13952:13955 compcert.backend.Mach <> cond var
R13970:13973 Coq.Init.Datatypes <> Some constr
R13975:13978 Coq.Init.Datatypes <> true constr
R14414:14417 compcert.backend.Mach <> step ind
R14478:14482 compcert.backend.Mach <> State constr
R14497:14497 compcert.backend.Mach <> m var
R14493:14495 compcert.backend.Mach <> rs' var
R14491:14491 compcert.backend.Mach <> c var
R14488:14489 compcert.backend.Mach <> sp var
R14486:14486 compcert.backend.Mach <> f var
R14484:14484 compcert.backend.Mach <> s var
R14474:14475 compcert.common.Events <> E0 def
R14420:14424 compcert.backend.Mach <> State constr
R14463:14463 compcert.backend.Mach <> m var
R14460:14461 compcert.backend.Mach <> rs var
R14453:14456 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14434:14438 compcert.backend.Mach <> Mcond constr
R14450:14452 compcert.backend.Mach <> lbl var
R14445:14448 compcert.backend.Mach <> args var
R14440:14443 compcert.backend.Mach <> cond var
R14457:14457 compcert.backend.Mach <> c var
R14430:14431 compcert.backend.Mach <> sp var
R14428:14428 compcert.backend.Mach <> f var
R14426:14426 compcert.backend.Mach <> s var
R14363:14365 Coq.Init.Logic <> :type_scope:x_'='_x not
R14360:14362 compcert.backend.Mach <> rs' var
R14366:14375 compcert.backend.Mach <> undef_regs def
R14402:14403 compcert.backend.Mach <> rs var
R14378:14394 compcert.ia32.Machregs <> destroyed_by_cond def
R14396:14399 compcert.backend.Mach <> cond var
R14337:14339 Coq.Init.Logic <> :type_scope:x_'='_x not
R14307:14320 compcert.ia32.Op <> eval_condition def
R14336:14336 compcert.backend.Mach <> m var
R14329:14330 compcert.backend.Mach <> ::x_'##'_x not
R14327:14328 compcert.backend.Mach <> rs var
R14331:14334 compcert.backend.Mach <> args var
R14322:14325 compcert.backend.Mach <> cond var
R14340:14343 Coq.Init.Datatypes <> Some constr
R14345:14349 Coq.Init.Datatypes <> false constr
R14809:14812 compcert.backend.Mach <> step ind
R14873:14877 compcert.backend.Mach <> State constr
R14894:14894 compcert.backend.Mach <> m var
R14890:14892 compcert.backend.Mach <> rs' var
R14887:14888 compcert.backend.Mach <> c' var
R14884:14885 compcert.backend.Mach <> sp var
R14881:14882 compcert.backend.Mach <> fb var
R14879:14879 compcert.backend.Mach <> s var
R14869:14870 compcert.common.Events <> E0 def
R14815:14819 compcert.backend.Mach <> State constr
R14858:14858 compcert.backend.Mach <> m var
R14855:14856 compcert.backend.Mach <> rs var
R14848:14851 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14830:14839 compcert.backend.Mach <> Mjumptable constr
R14845:14847 compcert.backend.Mach <> tbl var
R14841:14843 compcert.backend.Mach <> arg var
R14852:14852 compcert.backend.Mach <> c var
R14826:14827 compcert.backend.Mach <> sp var
R14823:14824 compcert.backend.Mach <> fb var
R14821:14821 compcert.backend.Mach <> s var
R14760:14762 Coq.Init.Logic <> :type_scope:x_'='_x not
R14757:14759 compcert.backend.Mach <> rs' var
R14763:14772 compcert.backend.Mach <> undef_regs def
R14797:14798 compcert.backend.Mach <> rs var
R14774:14795 compcert.ia32.Machregs <> destroyed_by_jumptable def
R14737:14739 Coq.Init.Logic <> :type_scope:x_'='_x not
R14711:14720 compcert.backend.Mach <> find_label def
R14729:14735 compcert.backend.Mach <> fn_code proj
R14726:14726 compcert.backend.Mach <> f var
R14722:14724 compcert.backend.Mach <> lbl var
R14740:14743 Coq.Init.Datatypes <> Some constr
R14745:14746 compcert.backend.Mach <> c' var
R14681:14683 Coq.Init.Logic <> :type_scope:x_'='_x not
R14656:14674 compcert.common.Globalenvs Genv find_funct_ptr def
R14679:14680 compcert.backend.Mach <> fb var
R14676:14677 compcert.backend.Mach <> RELSEM.ge var
R14684:14687 Coq.Init.Datatypes <> Some constr
R14690:14697 compcert.common.AST <> Internal constr
R14699:14699 compcert.backend.Mach <> f var
R14635:14637 Coq.Init.Logic <> :type_scope:x_'='_x not
R14604:14613 compcert.lib.Coqlib <> list_nth_z def
R14620:14631 compcert.lib.Integers Int unsigned def
R14633:14633 compcert.backend.Mach <> n var
R14615:14617 compcert.backend.Mach <> tbl var
R14638:14641 Coq.Init.Datatypes <> Some constr
R14643:14645 compcert.backend.Mach <> lbl var
R14585:14587 Coq.Init.Logic <> :type_scope:x_'='_x not
R14579:14580 compcert.backend.Mach <> rs var
R14582:14584 compcert.backend.Mach <> arg var
R14588:14591 compcert.common.Values <> Vint constr
R14593:14593 compcert.backend.Mach <> n var
R15232:15235 compcert.backend.Mach <> step ind
R15298:15308 compcert.backend.Mach <> Returnstate constr
R15315:15316 compcert.backend.Mach <> m' var
R15312:15313 compcert.backend.Mach <> rs var
R15310:15310 compcert.backend.Mach <> s var
R15294:15295 compcert.common.Events <> E0 def
R15238:15242 compcert.backend.Mach <> State constr
R15283:15283 compcert.backend.Mach <> m var
R15280:15281 compcert.backend.Mach <> rs var
R15273:15276 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15266:15272 compcert.backend.Mach <> Mreturn constr
R15277:15277 compcert.backend.Mach <> c var
R15250:15253 compcert.common.Values <> Vptr constr
R15259:15262 compcert.backend.Mach <> soff var
R15255:15257 compcert.backend.Mach <> stk var
R15246:15247 compcert.backend.Mach <> fb var
R15244:15244 compcert.backend.Mach <> s var
R15212:15214 Coq.Init.Logic <> :type_scope:x_'='_x not
R15179:15186 compcert.common.Memory Mem free def
R15199:15210 compcert.backend.Mach <> fn_stacksize proj
R15196:15196 compcert.backend.Mach <> f var
R15190:15192 compcert.backend.Mach <> stk var
R15188:15188 compcert.backend.Mach <> m var
R15215:15218 Coq.Init.Datatypes <> Some constr
R15220:15221 compcert.backend.Mach <> m' var
R15148:15150 Coq.Init.Logic <> :type_scope:x_'='_x not
R15096:15105 compcert.backend.Mach <> load_stack def
R15133:15146 compcert.backend.Mach <> fn_retaddr_ofs proj
R15130:15130 compcert.backend.Mach <> f var
R15125:15128 compcert.common.AST <> Tint constr
R15110:15113 compcert.common.Values <> Vptr constr
R15119:15122 compcert.backend.Mach <> soff var
R15115:15117 compcert.backend.Mach <> stk var
R15107:15107 compcert.backend.Mach <> m var
R15151:15154 Coq.Init.Datatypes <> Some constr
R15157:15165 compcert.backend.Mach <> parent_ra def
R15167:15167 compcert.backend.Mach <> s var
R15065:15067 Coq.Init.Logic <> :type_scope:x_'='_x not
R15016:15025 compcert.backend.Mach <> load_stack def
R15053:15063 compcert.backend.Mach <> fn_link_ofs proj
R15050:15050 compcert.backend.Mach <> f var
R15045:15048 compcert.common.AST <> Tint constr
R15030:15033 compcert.common.Values <> Vptr constr
R15039:15042 compcert.backend.Mach <> soff var
R15035:15037 compcert.backend.Mach <> stk var
R15027:15027 compcert.backend.Mach <> m var
R15068:15071 Coq.Init.Datatypes <> Some constr
R15074:15082 compcert.backend.Mach <> parent_sp def
R15084:15084 compcert.backend.Mach <> s var
R14986:14988 Coq.Init.Logic <> :type_scope:x_'='_x not
R14961:14979 compcert.common.Globalenvs Genv find_funct_ptr def
R14984:14985 compcert.backend.Mach <> fb var
R14981:14982 compcert.backend.Mach <> RELSEM.ge var
R14989:14992 Coq.Init.Datatypes <> Some constr
R14995:15002 compcert.common.AST <> Internal constr
R15004:15004 compcert.backend.Mach <> f var
R15513:15516 compcert.common.Values <> Vptr constr
R15522:15529 compcert.lib.Integers Int zero def
R15518:15520 compcert.backend.Mach <> stk var
R15744:15747 compcert.backend.Mach <> step ind
R15783:15787 compcert.backend.Mach <> State constr
R15813:15814 compcert.backend.Mach <> m3 var
R15809:15811 compcert.backend.Mach <> rs' var
R15800:15806 compcert.backend.Mach <> fn_code proj
R15797:15797 compcert.backend.Mach <> f var
R15794:15795 compcert.backend.Mach <> sp var
R15791:15792 compcert.backend.Mach <> fb var
R15789:15789 compcert.backend.Mach <> s var
R15779:15780 compcert.common.Events <> E0 def
R15750:15758 compcert.backend.Mach <> Callstate constr
R15768:15768 compcert.backend.Mach <> m var
R15765:15766 compcert.backend.Mach <> rs var
R15762:15763 compcert.backend.Mach <> fb var
R15760:15760 compcert.backend.Mach <> s var
R15690:15692 Coq.Init.Logic <> :type_scope:x_'='_x not
R15687:15689 compcert.backend.Mach <> rs' var
R15693:15702 compcert.backend.Mach <> undef_regs def
R15732:15733 compcert.backend.Mach <> rs var
R15704:15730 compcert.ia32.Machregs <> destroyed_at_function_entry def
R15667:15669 Coq.Init.Logic <> :type_scope:x_'='_x not
R15612:15622 compcert.backend.Mach <> store_stack def
R15655:15663 compcert.backend.Mach <> parent_ra def
R15665:15665 compcert.backend.Mach <> s var
R15638:15651 compcert.backend.Mach <> fn_retaddr_ofs proj
R15635:15635 compcert.backend.Mach <> f var
R15630:15633 compcert.common.AST <> Tint constr
R15627:15628 compcert.backend.Mach <> sp var
R15624:15625 compcert.backend.Mach <> m2 var
R15670:15673 Coq.Init.Datatypes <> Some constr
R15675:15676 compcert.backend.Mach <> m3 var
R15592:15594 Coq.Init.Logic <> :type_scope:x_'='_x not
R15540:15550 compcert.backend.Mach <> store_stack def
R15580:15588 compcert.backend.Mach <> parent_sp def
R15590:15590 compcert.backend.Mach <> s var
R15566:15576 compcert.backend.Mach <> fn_link_ofs proj
R15563:15563 compcert.backend.Mach <> f var
R15558:15561 compcert.common.AST <> Tint constr
R15555:15556 compcert.backend.Mach <> sp var
R15552:15553 compcert.backend.Mach <> m1 var
R15595:15598 Coq.Init.Datatypes <> Some constr
R15600:15601 compcert.backend.Mach <> m2 var
R15481:15483 Coq.Init.Logic <> :type_scope:x_'='_x not
R15451:15459 compcert.common.Memory Mem alloc def
R15468:15479 compcert.backend.Mach <> fn_stacksize proj
R15465:15465 compcert.backend.Mach <> f var
R15461:15461 compcert.backend.Mach <> m var
R15484:15484 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15487:15488 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15492:15492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15485:15486 compcert.backend.Mach <> m1 var
R15489:15491 compcert.backend.Mach <> stk var
R15421:15423 Coq.Init.Logic <> :type_scope:x_'='_x not
R15396:15414 compcert.common.Globalenvs Genv find_funct_ptr def
R15419:15420 compcert.backend.Mach <> fb var
R15416:15417 compcert.backend.Mach <> RELSEM.ge var
R15424:15427 Coq.Init.Datatypes <> Some constr
R15430:15437 compcert.common.AST <> Internal constr
R15439:15439 compcert.backend.Mach <> f var
R16117:16120 compcert.backend.Mach <> step ind
R16156:16166 compcert.backend.Mach <> Returnstate constr
R16174:16175 compcert.backend.Mach <> m' var
R16170:16172 compcert.backend.Mach <> rs' var
R16168:16168 compcert.backend.Mach <> s var
R16153:16153 compcert.backend.Mach <> t var
R16123:16131 compcert.backend.Mach <> Callstate constr
R16141:16141 compcert.backend.Mach <> m var
R16138:16139 compcert.backend.Mach <> rs var
R16135:16136 compcert.backend.Mach <> fb var
R16133:16133 compcert.backend.Mach <> s var
R16064:16066 Coq.Init.Logic <> :type_scope:x_'='_x not
R16061:16063 compcert.backend.Mach <> rs' var
R16067:16074 compcert.backend.Mach <> set_regs def
R16105:16106 compcert.backend.Mach <> rs var
R16101:16103 compcert.backend.Mach <> res var
R16077:16086 compcert.ia32.Conventions1 <> loc_result def
R16089:16094 compcert.common.AST <> ef_sig def
R16096:16097 compcert.backend.Mach <> ef var
R16015:16028 compcert.common.Events <> external_call' ind
R16049:16050 compcert.backend.Mach <> m' var
R16045:16047 compcert.backend.Mach <> res var
R16043:16043 compcert.backend.Mach <> t var
R16041:16041 compcert.backend.Mach <> m var
R16036:16039 compcert.backend.Mach <> args var
R16033:16034 compcert.backend.Mach <> RELSEM.ge var
R16030:16031 compcert.backend.Mach <> ef var
R15952:15968 compcert.backend.Mach <> extcall_arguments def
R16001:16004 compcert.backend.Mach <> args var
R15990:15995 compcert.common.AST <> ef_sig def
R15997:15998 compcert.backend.Mach <> ef var
R15976:15984 compcert.backend.Mach <> parent_sp def
R15986:15986 compcert.backend.Mach <> s var
R15973:15973 compcert.backend.Mach <> m var
R15970:15971 compcert.backend.Mach <> rs var
R15921:15923 Coq.Init.Logic <> :type_scope:x_'='_x not
R15896:15914 compcert.common.Globalenvs Genv find_funct_ptr def
R15919:15920 compcert.backend.Mach <> fb var
R15916:15917 compcert.backend.Mach <> RELSEM.ge var
R15924:15927 Coq.Init.Datatypes <> Some constr
R15930:15937 compcert.common.AST <> External constr
R15939:15940 compcert.backend.Mach <> ef var
R16232:16235 compcert.backend.Mach <> step ind
R16296:16300 compcert.backend.Mach <> State constr
R16314:16314 compcert.backend.Mach <> m var
R16311:16312 compcert.backend.Mach <> rs var
R16309:16309 compcert.backend.Mach <> c var
R16306:16307 compcert.backend.Mach <> sp var
R16304:16304 compcert.backend.Mach <> f var
R16302:16302 compcert.backend.Mach <> s var
R16292:16293 compcert.common.Events <> E0 def
R16238:16248 compcert.backend.Mach <> Returnstate constr
R16281:16281 compcert.backend.Mach <> m var
R16278:16279 compcert.backend.Mach <> rs var
R16271:16274 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R16251:16260 compcert.backend.Mach <> Stackframe constr
R16270:16270 compcert.backend.Mach <> c var
R16267:16268 compcert.backend.Mach <> ra var
R16264:16265 compcert.backend.Mach <> sp var
R16262:16262 compcert.backend.Mach <> f var
R16275:16275 compcert.backend.Mach <> s var
R16323:16328 compcert.backend.Mach RELSEM <> sec
ind 16342:16354 <> initial_state
constr 16391:16409 <> initial_state_intro
R16360:16366 compcert.backend.Mach <> program def
R16370:16374 compcert.backend.Mach <> state ind
R16442:16455 compcert.common.Globalenvs Genv globalenv def
R16556:16568 compcert.backend.Mach <> initial_state ind
R16573:16581 compcert.backend.Mach <> Callstate constr
R16611:16612 compcert.backend.Mach <> m0 var
R16591:16601 compcert.backend.Mach Regmap init def
R16603:16608 compcert.common.Values <> Vundef constr
R16587:16588 compcert.backend.Mach <> fb var
R16583:16585 Coq.Init.Datatypes <> nil constr
R16536:16538 Coq.Init.Logic <> :type_scope:x_'='_x not
R16503:16518 compcert.common.Globalenvs Genv find_symbol def
R16526:16534 compcert.common.AST <> prog_main proj
R16520:16521 compcert.backend.Mach <> ge var
R16539:16542 Coq.Init.Datatypes <> Some constr
R16544:16545 compcert.backend.Mach <> fb var
R16483:16485 Coq.Init.Logic <> :type_scope:x_'='_x not
R16468:16480 compcert.common.Globalenvs Genv init_mem def
R16486:16489 Coq.Init.Datatypes <> Some constr
R16491:16492 compcert.backend.Mach <> m0 var
ind 16627:16637 <> final_state
constr 16668:16684 <> final_state_intro
R16649:16651 compcert.lib.Integers <> int syndef
R16640:16644 compcert.backend.Mach <> state ind
R16791:16801 compcert.backend.Mach <> final_state ind
R16826:16832 compcert.backend.Mach <> retcode var
R16804:16814 compcert.backend.Mach <> Returnstate constr
R16823:16823 compcert.backend.Mach <> m var
R16820:16821 compcert.backend.Mach <> rs var
R16816:16818 Coq.Init.Datatypes <> nil constr
R16766:16768 Coq.Init.Logic <> :type_scope:x_'='_x not
R16762:16763 compcert.backend.Mach <> rs var
R16765:16765 compcert.backend.Mach <> r var
R16769:16772 compcert.common.Values <> Vint constr
R16774:16780 compcert.backend.Mach <> retcode var
R16741:16743 Coq.Init.Logic <> :type_scope:x_'='_x not
R16716:16725 compcert.ia32.Conventions1 <> loc_result def
R16727:16740 compcert.common.AST <> signature_main def
R16745:16748 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R16744:16744 compcert.backend.Mach <> r var
R16749:16751 Coq.Init.Datatypes <> nil constr
def 16847:16855 <> semantics
R16883:16885 compcert.lib.Integers <> int syndef
R16875:16878 compcert.backend.Mach <> code def
R16863:16870 compcert.backend.Mach <> function rec
R16900:16906 compcert.backend.Mach <> program def
R16914:16922 compcert.common.Smallstep <> Semantics constr
R16966:16979 compcert.common.Globalenvs Genv globalenv def
R16981:16981 compcert.backend.Mach <> p var
R16953:16963 compcert.backend.Mach <> final_state ind
R16936:16948 compcert.backend.Mach <> initial_state ind
R16950:16950 compcert.backend.Mach <> p var
R16925:16928 compcert.backend.Mach <> step ind
R16930:16932 compcert.backend.Mach <> rao var
