DIGEST NO
Fcompcert.ia32.CombineOpproof
R933:938 compcert.lib.Coqlib <> <> lib
R956:963 compcert.lib.Integers <> <> lib
R981:986 compcert.common.Values <> <> lib
R1004:1009 compcert.common.Memory <> <> lib
R1027:1028 compcert.ia32.Op <> <> lib
R1046:1048 compcert.backend.RTL <> <> lib
R1066:1074 compcert.backend.CSEdomain <> <> lib
R1092:1100 compcert.ia32.CombineOp <> <> lib
sec 1112:1118 <> COMBINE
var 1131:1132 COMBINE ge
R1135:1138 compcert.backend.RTL <> genv def
var 1150:1151 COMBINE sp
R1154:1156 compcert.common.Values <> val ind
var 1168:1168 COMBINE m
R1171:1173 compcert.common.Memory <> mem syndef
var 1185:1187 COMBINE get
R1200:1205 Coq.Init.Datatypes <> option ind
R1207:1209 compcert.backend.CSEdomain <> rhs ind
R1190:1195 compcert.ia32.CombineOp <> valnum def
var 1221:1224 COMBINE valu
R1237:1239 compcert.common.Values <> val ind
R1227:1232 compcert.ia32.CombineOp <> valnum def
var 1253:1261 COMBINE get_sound
R1298:1308 compcert.backend.CSEdomain <> rhs_eval_to ind
R1328:1331 compcert.ia32.CombineOpproof <> COMBINE.valu var
R1333:1333 compcert.ia32.CombineOpproof <> v var
R1323:1325 compcert.ia32.CombineOpproof <> rhs var
R1321:1321 compcert.ia32.CombineOpproof <> COMBINE.m var
R1318:1319 compcert.ia32.CombineOpproof <> COMBINE.sp var
R1315:1316 compcert.ia32.CombineOpproof <> COMBINE.ge var
R1310:1313 compcert.ia32.CombineOpproof <> COMBINE.valu var
R1283:1285 Coq.Init.Logic <> :type_scope:x_'='_x not
R1278:1280 compcert.ia32.CombineOpproof <> COMBINE.get var
R1282:1282 compcert.ia32.CombineOpproof <> v var
R1286:1289 Coq.Init.Datatypes <> Some constr
R1291:1293 compcert.ia32.CombineOpproof <> rhs var
prf 1344:1355 <> get_op_sound
R1442:1444 Coq.Init.Logic <> :type_scope:x_'='_x not
R1403:1416 compcert.ia32.Op <> eval_operation def
R1441:1441 compcert.ia32.CombineOpproof <> COMBINE.m var
R1428:1430 Coq.Lists.List <> map def
R1437:1438 compcert.ia32.CombineOpproof <> vl var
R1432:1435 compcert.ia32.CombineOpproof <> COMBINE.valu var
R1424:1425 compcert.ia32.CombineOpproof <> op var
R1421:1422 compcert.ia32.CombineOpproof <> COMBINE.sp var
R1418:1419 compcert.ia32.CombineOpproof <> COMBINE.ge var
R1445:1448 Coq.Init.Datatypes <> Some constr
R1451:1454 compcert.ia32.CombineOpproof <> COMBINE.valu var
R1456:1456 compcert.ia32.CombineOpproof <> v var
R1381:1383 Coq.Init.Logic <> :type_scope:x_'='_x not
R1376:1378 compcert.ia32.CombineOpproof <> COMBINE.get var
R1380:1380 compcert.ia32.CombineOpproof <> v var
R1384:1387 Coq.Init.Datatypes <> Some constr
R1390:1391 compcert.backend.CSEdomain <> Op constr
R1396:1397 compcert.ia32.CombineOpproof <> vl var
R1393:1394 compcert.ia32.CombineOpproof <> op var
R1485:1493 compcert.ia32.CombineOpproof <> COMBINE.get_sound var
R1589:1591 Coq.Init.Logic <> :type_scope:x_'='_x not
R1584:1586 compcert.ia32.CombineOpproof <> COMBINE.get var
R1592:1595 Coq.Init.Datatypes <> Some constr
R1589:1591 Coq.Init.Logic <> :type_scope:x_'='_x not
R1584:1586 compcert.ia32.CombineOpproof <> COMBINE.get var
R1592:1595 Coq.Init.Datatypes <> Some constr
R1651:1662 compcert.ia32.CombineOpproof <> get_op_sound thm
prf 1721:1746 <> combine_compimm_ne_0_sound
R1905:1910 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1861:1863 Coq.Init.Logic <> :type_scope:x_'='_x not
R1824:1837 compcert.ia32.Op <> eval_condition def
R1860:1860 compcert.ia32.CombineOpproof <> COMBINE.m var
R1845:1847 Coq.Lists.List <> map def
R1854:1857 compcert.ia32.CombineOpproof <> args var
R1849:1852 compcert.ia32.CombineOpproof <> COMBINE.valu var
R1839:1842 compcert.ia32.CombineOpproof <> cond var
R1864:1875 compcert.common.Values Val cmp_bool def
R1891:1894 compcert.common.Values <> Vint constr
R1896:1903 compcert.lib.Integers Int zero def
R1882:1885 compcert.ia32.CombineOpproof <> COMBINE.valu var
R1887:1887 compcert.ia32.CombineOpproof <> x var
R1877:1879 compcert.lib.Integers <> Cne constr
R1948:1950 Coq.Init.Logic <> :type_scope:x_'='_x not
R1911:1924 compcert.ia32.Op <> eval_condition def
R1947:1947 compcert.ia32.CombineOpproof <> COMBINE.m var
R1932:1934 Coq.Lists.List <> map def
R1941:1944 compcert.ia32.CombineOpproof <> args var
R1936:1939 compcert.ia32.CombineOpproof <> COMBINE.valu var
R1926:1929 compcert.ia32.CombineOpproof <> cond var
R1951:1963 compcert.common.Values Val cmpu_bool def
R2001:2004 compcert.common.Values <> Vint constr
R2006:2013 compcert.lib.Integers Int zero def
R1992:1995 compcert.ia32.CombineOpproof <> COMBINE.valu var
R1997:1997 compcert.ia32.CombineOpproof <> x var
R1987:1989 compcert.lib.Integers <> Cne constr
R1966:1982 compcert.common.Memory Mem valid_pointer def
R1984:1984 compcert.ia32.CombineOpproof <> COMBINE.m var
R1799:1801 Coq.Init.Logic <> :type_scope:x_'='_x not
R1773:1792 compcert.ia32.CombineOp <> combine_compimm_ne_0 def
R1798:1798 compcert.ia32.CombineOpproof <> x var
R1794:1796 compcert.ia32.CombineOpproof <> COMBINE.get var
R1802:1805 Coq.Init.Datatypes <> Some constr
R1806:1806 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1811:1812 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1817:1817 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1807:1810 compcert.ia32.CombineOpproof <> cond var
R1813:1816 compcert.ia32.CombineOpproof <> args var
R2067:2086 compcert.ia32.CombineOp <> combine_compimm_ne_0 def
R2088:2090 compcert.ia32.CombineOpproof <> COMBINE.get var
R2067:2086 compcert.ia32.CombineOp <> combine_compimm_ne_0 def
R2088:2090 compcert.ia32.CombineOpproof <> COMBINE.get var
R2172:2185 compcert.ia32.Op <> eval_condition def
R2208:2208 compcert.ia32.CombineOpproof <> COMBINE.m var
R2193:2195 Coq.Lists.List <> map def
R2197:2200 compcert.ia32.CombineOpproof <> COMBINE.valu var
R2172:2185 compcert.ia32.Op <> eval_condition def
R2208:2208 compcert.ia32.CombineOpproof <> COMBINE.m var
R2193:2195 Coq.Lists.List <> map def
R2197:2200 compcert.ia32.CombineOpproof <> COMBINE.valu var
prf 2328:2353 <> combine_compimm_eq_0_sound
R2512:2517 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2468:2470 Coq.Init.Logic <> :type_scope:x_'='_x not
R2431:2444 compcert.ia32.Op <> eval_condition def
R2467:2467 compcert.ia32.CombineOpproof <> COMBINE.m var
R2452:2454 Coq.Lists.List <> map def
R2461:2464 compcert.ia32.CombineOpproof <> args var
R2456:2459 compcert.ia32.CombineOpproof <> COMBINE.valu var
R2446:2449 compcert.ia32.CombineOpproof <> cond var
R2471:2482 compcert.common.Values Val cmp_bool def
R2498:2501 compcert.common.Values <> Vint constr
R2503:2510 compcert.lib.Integers Int zero def
R2489:2492 compcert.ia32.CombineOpproof <> COMBINE.valu var
R2494:2494 compcert.ia32.CombineOpproof <> x var
R2484:2486 compcert.lib.Integers <> Ceq constr
R2555:2557 Coq.Init.Logic <> :type_scope:x_'='_x not
R2518:2531 compcert.ia32.Op <> eval_condition def
R2554:2554 compcert.ia32.CombineOpproof <> COMBINE.m var
R2539:2541 Coq.Lists.List <> map def
R2548:2551 compcert.ia32.CombineOpproof <> args var
R2543:2546 compcert.ia32.CombineOpproof <> COMBINE.valu var
R2533:2536 compcert.ia32.CombineOpproof <> cond var
R2558:2570 compcert.common.Values Val cmpu_bool def
R2608:2611 compcert.common.Values <> Vint constr
R2613:2620 compcert.lib.Integers Int zero def
R2599:2602 compcert.ia32.CombineOpproof <> COMBINE.valu var
R2604:2604 compcert.ia32.CombineOpproof <> x var
R2594:2596 compcert.lib.Integers <> Ceq constr
R2573:2589 compcert.common.Memory Mem valid_pointer def
R2591:2591 compcert.ia32.CombineOpproof <> COMBINE.m var
R2406:2408 Coq.Init.Logic <> :type_scope:x_'='_x not
R2380:2399 compcert.ia32.CombineOp <> combine_compimm_eq_0 def
R2405:2405 compcert.ia32.CombineOpproof <> x var
R2401:2403 compcert.ia32.CombineOpproof <> COMBINE.get var
R2409:2412 Coq.Init.Datatypes <> Some constr
R2413:2413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2418:2419 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2424:2424 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2414:2417 compcert.ia32.CombineOpproof <> cond var
R2420:2423 compcert.ia32.CombineOpproof <> args var
R2674:2693 compcert.ia32.CombineOp <> combine_compimm_eq_0 def
R2695:2697 compcert.ia32.CombineOpproof <> COMBINE.get var
R2674:2693 compcert.ia32.CombineOp <> combine_compimm_eq_0 def
R2695:2697 compcert.ia32.CombineOpproof <> COMBINE.get var
R2776:2796 compcert.ia32.Op <> eval_negate_condition thm
R2776:2796 compcert.ia32.Op <> eval_negate_condition thm
R2812:2825 compcert.ia32.Op <> eval_condition def
R2845:2845 compcert.ia32.CombineOpproof <> COMBINE.m var
R2830:2832 Coq.Lists.List <> map def
R2834:2837 compcert.ia32.CombineOpproof <> COMBINE.valu var
R2812:2825 compcert.ia32.Op <> eval_condition def
R2845:2845 compcert.ia32.CombineOpproof <> COMBINE.m var
R2830:2832 Coq.Lists.List <> map def
R2834:2837 compcert.ia32.CombineOpproof <> COMBINE.valu var
prf 2955:2980 <> combine_compimm_eq_1_sound
R3138:3143 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3095:3097 Coq.Init.Logic <> :type_scope:x_'='_x not
R3058:3071 compcert.ia32.Op <> eval_condition def
R3094:3094 compcert.ia32.CombineOpproof <> COMBINE.m var
R3079:3081 Coq.Lists.List <> map def
R3088:3091 compcert.ia32.CombineOpproof <> args var
R3083:3086 compcert.ia32.CombineOpproof <> COMBINE.valu var
R3073:3076 compcert.ia32.CombineOpproof <> cond var
R3098:3109 compcert.common.Values Val cmp_bool def
R3125:3128 compcert.common.Values <> Vint constr
R3130:3136 compcert.lib.Integers Int one def
R3116:3119 compcert.ia32.CombineOpproof <> COMBINE.valu var
R3121:3121 compcert.ia32.CombineOpproof <> x var
R3111:3113 compcert.lib.Integers <> Ceq constr
R3181:3183 Coq.Init.Logic <> :type_scope:x_'='_x not
R3144:3157 compcert.ia32.Op <> eval_condition def
R3180:3180 compcert.ia32.CombineOpproof <> COMBINE.m var
R3165:3167 Coq.Lists.List <> map def
R3174:3177 compcert.ia32.CombineOpproof <> args var
R3169:3172 compcert.ia32.CombineOpproof <> COMBINE.valu var
R3159:3162 compcert.ia32.CombineOpproof <> cond var
R3184:3196 compcert.common.Values Val cmpu_bool def
R3234:3237 compcert.common.Values <> Vint constr
R3239:3245 compcert.lib.Integers Int one def
R3225:3228 compcert.ia32.CombineOpproof <> COMBINE.valu var
R3230:3230 compcert.ia32.CombineOpproof <> x var
R3220:3222 compcert.lib.Integers <> Ceq constr
R3199:3215 compcert.common.Memory Mem valid_pointer def
R3217:3217 compcert.ia32.CombineOpproof <> COMBINE.m var
R3033:3035 Coq.Init.Logic <> :type_scope:x_'='_x not
R3007:3026 compcert.ia32.CombineOp <> combine_compimm_eq_1 def
R3032:3032 compcert.ia32.CombineOpproof <> x var
R3028:3030 compcert.ia32.CombineOpproof <> COMBINE.get var
R3036:3039 Coq.Init.Datatypes <> Some constr
R3040:3040 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3045:3046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3051:3051 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3041:3044 compcert.ia32.CombineOpproof <> cond var
R3047:3050 compcert.ia32.CombineOpproof <> args var
R3299:3318 compcert.ia32.CombineOp <> combine_compimm_eq_1 def
R3320:3322 compcert.ia32.CombineOpproof <> COMBINE.get var
R3299:3318 compcert.ia32.CombineOp <> combine_compimm_eq_1 def
R3320:3322 compcert.ia32.CombineOpproof <> COMBINE.get var
R3404:3417 compcert.ia32.Op <> eval_condition def
R3440:3440 compcert.ia32.CombineOpproof <> COMBINE.m var
R3425:3427 Coq.Lists.List <> map def
R3429:3432 compcert.ia32.CombineOpproof <> COMBINE.valu var
R3404:3417 compcert.ia32.Op <> eval_condition def
R3440:3440 compcert.ia32.CombineOpproof <> COMBINE.m var
R3425:3427 Coq.Lists.List <> map def
R3429:3432 compcert.ia32.CombineOpproof <> COMBINE.valu var
prf 3487:3512 <> combine_compimm_ne_1_sound
R3670:3675 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3627:3629 Coq.Init.Logic <> :type_scope:x_'='_x not
R3590:3603 compcert.ia32.Op <> eval_condition def
R3626:3626 compcert.ia32.CombineOpproof <> COMBINE.m var
R3611:3613 Coq.Lists.List <> map def
R3620:3623 compcert.ia32.CombineOpproof <> args var
R3615:3618 compcert.ia32.CombineOpproof <> COMBINE.valu var
R3605:3608 compcert.ia32.CombineOpproof <> cond var
R3630:3641 compcert.common.Values Val cmp_bool def
R3657:3660 compcert.common.Values <> Vint constr
R3662:3668 compcert.lib.Integers Int one def
R3648:3651 compcert.ia32.CombineOpproof <> COMBINE.valu var
R3653:3653 compcert.ia32.CombineOpproof <> x var
R3643:3645 compcert.lib.Integers <> Cne constr
R3713:3715 Coq.Init.Logic <> :type_scope:x_'='_x not
R3676:3689 compcert.ia32.Op <> eval_condition def
R3712:3712 compcert.ia32.CombineOpproof <> COMBINE.m var
R3697:3699 Coq.Lists.List <> map def
R3706:3709 compcert.ia32.CombineOpproof <> args var
R3701:3704 compcert.ia32.CombineOpproof <> COMBINE.valu var
R3691:3694 compcert.ia32.CombineOpproof <> cond var
R3716:3728 compcert.common.Values Val cmpu_bool def
R3766:3769 compcert.common.Values <> Vint constr
R3771:3777 compcert.lib.Integers Int one def
R3757:3760 compcert.ia32.CombineOpproof <> COMBINE.valu var
R3762:3762 compcert.ia32.CombineOpproof <> x var
R3752:3754 compcert.lib.Integers <> Cne constr
R3731:3747 compcert.common.Memory Mem valid_pointer def
R3749:3749 compcert.ia32.CombineOpproof <> COMBINE.m var
R3565:3567 Coq.Init.Logic <> :type_scope:x_'='_x not
R3539:3558 compcert.ia32.CombineOp <> combine_compimm_ne_1 def
R3564:3564 compcert.ia32.CombineOpproof <> x var
R3560:3562 compcert.ia32.CombineOpproof <> COMBINE.get var
R3568:3571 Coq.Init.Datatypes <> Some constr
R3572:3572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3577:3578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3583:3583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3573:3576 compcert.ia32.CombineOpproof <> cond var
R3579:3582 compcert.ia32.CombineOpproof <> args var
R3831:3850 compcert.ia32.CombineOp <> combine_compimm_ne_1 def
R3852:3854 compcert.ia32.CombineOpproof <> COMBINE.get var
R3831:3850 compcert.ia32.CombineOp <> combine_compimm_ne_1 def
R3852:3854 compcert.ia32.CombineOpproof <> COMBINE.get var
R3934:3954 compcert.ia32.Op <> eval_negate_condition thm
R3934:3954 compcert.ia32.Op <> eval_negate_condition thm
R3969:3982 compcert.ia32.Op <> eval_condition def
R4002:4002 compcert.ia32.CombineOpproof <> COMBINE.m var
R3987:3989 Coq.Lists.List <> map def
R3991:3994 compcert.ia32.CombineOpproof <> COMBINE.valu var
R3969:3982 compcert.ia32.Op <> eval_condition def
R4002:4002 compcert.ia32.CombineOpproof <> COMBINE.m var
R3987:3989 Coq.Lists.List <> map def
R3991:3994 compcert.ia32.CombineOpproof <> COMBINE.valu var
prf 4051:4068 <> combine_cond_sound
R4197:4199 Coq.Init.Logic <> :type_scope:x_'='_x not
R4158:4171 compcert.ia32.Op <> eval_condition def
R4196:4196 compcert.ia32.CombineOpproof <> COMBINE.m var
R4180:4182 Coq.Lists.List <> map def
R4189:4193 compcert.ia32.CombineOpproof <> args' var
R4184:4187 compcert.ia32.CombineOpproof <> COMBINE.valu var
R4173:4177 compcert.ia32.CombineOpproof <> cond' var
R4200:4213 compcert.ia32.Op <> eval_condition def
R4236:4236 compcert.ia32.CombineOpproof <> COMBINE.m var
R4221:4223 Coq.Lists.List <> map def
R4230:4233 compcert.ia32.CombineOpproof <> args var
R4225:4228 compcert.ia32.CombineOpproof <> COMBINE.valu var
R4215:4218 compcert.ia32.CombineOpproof <> cond var
R4131:4133 Coq.Init.Logic <> :type_scope:x_'='_x not
R4105:4116 compcert.ia32.CombineOp <> combine_cond def
R4127:4130 compcert.ia32.CombineOpproof <> args var
R4122:4125 compcert.ia32.CombineOpproof <> cond var
R4118:4120 compcert.ia32.CombineOpproof <> COMBINE.get var
R4134:4137 Coq.Init.Datatypes <> Some constr
R4138:4138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4144:4145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4151:4151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4139:4143 compcert.ia32.CombineOpproof <> cond' var
R4146:4150 compcert.ia32.CombineOpproof <> args' var
R4327:4352 compcert.ia32.CombineOpproof <> combine_compimm_ne_0_sound thm
R4327:4352 compcert.ia32.CombineOpproof <> combine_compimm_ne_0_sound thm
R4401:4426 compcert.ia32.CombineOpproof <> combine_compimm_ne_1_sound thm
R4401:4426 compcert.ia32.CombineOpproof <> combine_compimm_ne_1_sound thm
R4476:4501 compcert.ia32.CombineOpproof <> combine_compimm_eq_0_sound thm
R4476:4501 compcert.ia32.CombineOpproof <> combine_compimm_eq_0_sound thm
R4550:4575 compcert.ia32.CombineOpproof <> combine_compimm_eq_1_sound thm
R4550:4575 compcert.ia32.CombineOpproof <> combine_compimm_eq_1_sound thm
R4626:4651 compcert.ia32.CombineOpproof <> combine_compimm_ne_0_sound thm
R4626:4651 compcert.ia32.CombineOpproof <> combine_compimm_ne_0_sound thm
R4701:4726 compcert.ia32.CombineOpproof <> combine_compimm_ne_1_sound thm
R4701:4726 compcert.ia32.CombineOpproof <> combine_compimm_ne_1_sound thm
R4777:4802 compcert.ia32.CombineOpproof <> combine_compimm_eq_0_sound thm
R4777:4802 compcert.ia32.CombineOpproof <> combine_compimm_eq_0_sound thm
R4852:4877 compcert.ia32.CombineOpproof <> combine_compimm_eq_1_sound thm
R4852:4877 compcert.ia32.CombineOpproof <> combine_compimm_eq_1_sound thm
prf 4901:4918 <> combine_addr_sound
R5052:5054 Coq.Init.Logic <> :type_scope:x_'='_x not
R5008:5022 compcert.ia32.Op <> eval_addressing def
R5037:5039 Coq.Lists.List <> map def
R5046:5050 compcert.ia32.CombineOpproof <> args' var
R5041:5044 compcert.ia32.CombineOpproof <> COMBINE.valu var
R5030:5034 compcert.ia32.CombineOpproof <> addr' var
R5027:5028 compcert.ia32.CombineOpproof <> COMBINE.sp var
R5024:5025 compcert.ia32.CombineOpproof <> COMBINE.ge var
R5055:5069 compcert.ia32.Op <> eval_addressing def
R5083:5085 Coq.Lists.List <> map def
R5092:5095 compcert.ia32.CombineOpproof <> args var
R5087:5090 compcert.ia32.CombineOpproof <> COMBINE.valu var
R5077:5080 compcert.ia32.CombineOpproof <> addr var
R5074:5075 compcert.ia32.CombineOpproof <> COMBINE.sp var
R5071:5072 compcert.ia32.CombineOpproof <> COMBINE.ge var
R4981:4983 Coq.Init.Logic <> :type_scope:x_'='_x not
R4955:4966 compcert.ia32.CombineOp <> combine_addr def
R4977:4980 compcert.ia32.CombineOpproof <> args var
R4972:4975 compcert.ia32.CombineOpproof <> addr var
R4968:4970 compcert.ia32.CombineOpproof <> COMBINE.get var
R4984:4987 Coq.Init.Datatypes <> Some constr
R4988:4988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4994:4995 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5001:5001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4989:4993 compcert.ia32.CombineOpproof <> addr' var
R4996:5000 compcert.ia32.CombineOpproof <> args' var
R5198:5225 compcert.ia32.Op <> eval_offset_addressing_total thm
R5198:5225 compcert.ia32.Op <> eval_offset_addressing_total thm
prf 5250:5265 <> combine_op_sound
R5388:5390 Coq.Init.Logic <> :type_scope:x_'='_x not
R5345:5358 compcert.ia32.Op <> eval_operation def
R5387:5387 compcert.ia32.CombineOpproof <> COMBINE.m var
R5371:5373 Coq.Lists.List <> map def
R5380:5384 compcert.ia32.CombineOpproof <> args' var
R5375:5378 compcert.ia32.CombineOpproof <> COMBINE.valu var
R5366:5368 compcert.ia32.CombineOpproof <> op' var
R5363:5364 compcert.ia32.CombineOpproof <> COMBINE.sp var
R5360:5361 compcert.ia32.CombineOpproof <> COMBINE.ge var
R5391:5404 compcert.ia32.Op <> eval_operation def
R5431:5431 compcert.ia32.CombineOpproof <> COMBINE.m var
R5416:5418 Coq.Lists.List <> map def
R5425:5428 compcert.ia32.CombineOpproof <> args var
R5420:5423 compcert.ia32.CombineOpproof <> COMBINE.valu var
R5412:5413 compcert.ia32.CombineOpproof <> op var
R5409:5410 compcert.ia32.CombineOpproof <> COMBINE.sp var
R5406:5407 compcert.ia32.CombineOpproof <> COMBINE.ge var
R5320:5322 Coq.Init.Logic <> :type_scope:x_'='_x not
R5298:5307 compcert.ia32.CombineOp <> combine_op def
R5316:5319 compcert.ia32.CombineOpproof <> args var
R5313:5314 compcert.ia32.CombineOpproof <> op var
R5309:5311 compcert.ia32.CombineOpproof <> COMBINE.get var
R5323:5326 Coq.Init.Datatypes <> Some constr
R5327:5327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5331:5332 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5338:5338 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5328:5330 compcert.ia32.CombineOpproof <> op' var
R5333:5337 compcert.ia32.CombineOpproof <> args' var
R5512:5529 compcert.ia32.CombineOpproof <> combine_addr_sound thm
R5512:5529 compcert.ia32.CombineOpproof <> combine_addr_sound thm
R5607:5619 compcert.common.Values Val and_assoc thm
R5607:5619 compcert.common.Values Val and_assoc thm
R5693:5704 compcert.common.Values Val or_assoc thm
R5693:5704 compcert.common.Values Val or_assoc thm
R5780:5792 compcert.common.Values Val xor_assoc thm
R5780:5792 compcert.common.Values Val xor_assoc thm
R5841:5858 compcert.ia32.CombineOpproof <> combine_cond_sound thm
R5841:5858 compcert.ia32.CombineOpproof <> combine_cond_sound thm
R5878:5884 compcert.ia32.CombineOpproof COMBINE <> sec
