DIGEST NO
Fcompcert.common.Memtype
R1498:1503 compcert.lib.Coqlib <> <> lib
R1521:1523 compcert.common.AST <> <> lib
R1541:1548 compcert.lib.Integers <> <> lib
R1566:1571 compcert.lib.Floats <> <> lib
R1589:1594 compcert.common.Values <> <> lib
R1612:1618 compcert.common.Memdata <> <> lib
ind 2380:2389 <> permission
constr 2404:2411 <> Freeable
constr 2429:2436 <> Writable
constr 2454:2461 <> Readable
constr 2479:2486 <> Nonempty
R2414:2423 compcert.common.Memtype <> permission ind
R2439:2448 compcert.common.Memtype <> permission ind
R2464:2473 compcert.common.Memtype <> permission ind
R2489:2498 compcert.common.Memtype <> permission ind
ind 2669:2678 <> perm_order
constr 2721:2729 <> perm_refl
constr 2762:2771 <> perm_F_any
constr 2810:2817 <> perm_W_R
constr 2855:2864 <> perm_any_N
R2695:2704 compcert.common.Memtype <> permission ind
R2681:2690 compcert.common.Memtype <> permission ind
R2743:2752 compcert.common.Memtype <> perm_order ind
R2756:2756 compcert.common.Memtype <> p var
R2754:2754 compcert.common.Memtype <> p var
R2784:2793 compcert.common.Memtype <> perm_order ind
R2804:2804 compcert.common.Memtype <> p var
R2795:2802 compcert.common.Memtype <> Freeable constr
R2822:2831 compcert.common.Memtype <> perm_order ind
R2842:2849 compcert.common.Memtype <> Readable constr
R2833:2840 compcert.common.Memtype <> Writable constr
R2877:2886 compcert.common.Memtype <> perm_order ind
R2890:2897 compcert.common.Memtype <> Nonempty constr
R2888:2888 compcert.common.Memtype <> p var
R2919:2928 compcert.common.Memtype <> perm_order ind
prf 2943:2958 <> perm_order_trans
R3020:3029 compcert.common.Memtype <> perm_order ind
R3034:3035 compcert.common.Memtype <> p3 var
R3031:3032 compcert.common.Memtype <> p1 var
R3000:3009 compcert.common.Memtype <> perm_order ind
R3014:3015 compcert.common.Memtype <> p3 var
R3011:3012 compcert.common.Memtype <> p2 var
R2980:2989 compcert.common.Memtype <> perm_order ind
R2994:2995 compcert.common.Memtype <> p2 var
R2991:2992 compcert.common.Memtype <> p1 var
ind 3733:3741 <> perm_kind
constr 3756:3758 <> Max
constr 3775:3777 <> Cur
R3761:3769 compcert.common.Memtype <> perm_kind ind
R3780:3788 compcert.common.Memtype <> perm_kind ind
modtype 3804:3806 <> MEM
ax 3863:3865 MEM mem
ax 3967:3971 MEM empty
R3974:3976 compcert.common.Memtype MEM mem defax
ax 4451:4455 MEM alloc
R4469:4471 compcert.common.Memtype MEM mem defax
R4482:4482 Coq.Numbers.BinNums <> Z ind
R4489:4491 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R4486:4488 compcert.common.Memtype MEM mem defax
R4492:4496 compcert.common.Values <> block def
ax 4715:4718 MEM free
R4732:4734 compcert.common.Memtype MEM mem defax
R4741:4745 compcert.common.Values <> block def
R4756:4756 Coq.Numbers.BinNums <> Z ind
R4760:4765 Coq.Init.Datatypes <> option ind
R4767:4769 compcert.common.Memtype MEM mem defax
ax 5008:5011 MEM load
R5029:5040 compcert.common.AST <> memory_chunk ind
R5047:5049 compcert.common.Memtype MEM mem defax
R5056:5060 compcert.common.Values <> block def
R5069:5069 Coq.Numbers.BinNums <> Z ind
R5073:5078 Coq.Init.Datatypes <> option ind
R5080:5082 compcert.common.Values <> val ind
ax 5346:5350 MEM store
R5368:5379 compcert.common.AST <> memory_chunk ind
R5386:5388 compcert.common.Memtype MEM mem defax
R5395:5399 compcert.common.Values <> block def
R5408:5408 Coq.Numbers.BinNums <> Z ind
R5415:5417 compcert.common.Values <> val ind
R5421:5426 Coq.Init.Datatypes <> option ind
R5428:5430 compcert.common.Memtype MEM mem defax
def 5587:5591 MEM loadv
R5601:5612 compcert.common.AST <> memory_chunk ind
R5619:5621 compcert.common.Memtype MEM mem defax
R5631:5633 compcert.common.Values <> val ind
R5638:5643 Coq.Init.Datatypes <> option ind
R5645:5647 compcert.common.Values <> val ind
R5660:5663 compcert.common.Memtype <> addr var
R5674:5677 compcert.common.Values <> Vptr constr
R5688:5691 compcert.common.Memtype MEM load defax
R5704:5715 compcert.lib.Integers Int unsigned def
R5699:5699 compcert.common.Memtype <> m var
R5693:5697 compcert.common.Memtype <> chunk var
R5731:5734 Coq.Init.Datatypes <> None constr
def 5755:5760 MEM storev
R5770:5781 compcert.common.AST <> memory_chunk ind
R5788:5790 compcert.common.Memtype MEM mem defax
R5802:5804 compcert.common.Values <> val ind
R5809:5814 Coq.Init.Datatypes <> option ind
R5816:5818 compcert.common.Memtype MEM mem defax
R5831:5834 compcert.common.Memtype <> addr var
R5845:5848 compcert.common.Values <> Vptr constr
R5859:5863 compcert.common.Memtype MEM store defax
R5894:5894 compcert.common.Memtype <> v var
R5876:5887 compcert.lib.Integers Int unsigned def
R5871:5871 compcert.common.Memtype <> m var
R5865:5869 compcert.common.Memtype <> chunk var
R5905:5908 Coq.Init.Datatypes <> None constr
ax 6170:6178 MEM loadbytes
R6192:6194 compcert.common.Memtype MEM mem defax
R6201:6205 compcert.common.Values <> block def
R6216:6216 Coq.Numbers.BinNums <> Z ind
R6220:6225 Coq.Init.Datatypes <> option ind
R6228:6231 Coq.Init.Datatypes <> list ind
R6233:6238 compcert.common.Memdata <> memval ind
ax 6447:6456 MEM storebytes
R6470:6472 compcert.common.Memtype MEM mem defax
R6479:6483 compcert.common.Values <> block def
R6492:6492 Coq.Numbers.BinNums <> Z ind
R6503:6506 Coq.Init.Datatypes <> list ind
R6508:6513 compcert.common.Memdata <> memval ind
R6517:6522 Coq.Init.Datatypes <> option ind
R6524:6526 compcert.common.Memtype MEM mem defax
def 6603:6611 MEM free_list
R6617:6619 compcert.common.Memtype MEM mem defax
R6626:6629 Coq.Init.Datatypes <> list ind
R6641:6643 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6637:6639 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6632:6636 compcert.common.Values <> block def
R6640:6640 Coq.Numbers.BinNums <> Z ind
R6644:6644 Coq.Numbers.BinNums <> Z ind
R6660:6665 Coq.Init.Datatypes <> option ind
R6667:6669 compcert.common.Memtype MEM mem defax
R6682:6682 compcert.common.Memtype <> l var
R6693:6695 Coq.Init.Datatypes <> nil constr
R6700:6703 Coq.Init.Datatypes <> Some constr
R6705:6705 compcert.common.Memtype <> m var
R6722:6725 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6711:6711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6713:6714 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6717:6718 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6721:6721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6744:6747 compcert.common.Memtype MEM free defax
R6749:6749 compcert.common.Memtype <> m var
R6772:6775 Coq.Init.Datatypes <> None constr
R6780:6783 Coq.Init.Datatypes <> None constr
R6793:6796 Coq.Init.Datatypes <> Some constr
R6804:6812 compcert.common.Memtype <> free_list def
ax 7113:7121 MEM drop_perm
R7135:7137 compcert.common.Memtype MEM mem defax
R7144:7148 compcert.common.Values <> block def
R7159:7159 Coq.Numbers.BinNums <> Z ind
R7166:7175 compcert.common.Memtype MEM permission ind
R7179:7184 Coq.Init.Datatypes <> option ind
R7186:7188 compcert.common.Memtype MEM mem defax
ax 7689:7697 MEM nextblock
R7707:7711 compcert.common.Values <> block def
R7700:7702 compcert.common.Memtype MEM mem defax
def 7726:7736 MEM valid_block
R7742:7744 compcert.common.Memtype MEM mem defax
R7751:7755 compcert.common.Values <> block def
R7761:7763 compcert.lib.Coqlib <> Plt def
R7768:7776 compcert.common.Memtype MEM nextblock defax
R7778:7778 compcert.common.Memtype <> m var
R7765:7765 compcert.common.Memtype <> b var
ax 7789:7808 MEM valid_not_valid_diff
R7871:7874 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7870:7870 compcert.common.Memtype <> b var
R7875:7876 compcert.common.Memtype <> b' var
R7847:7848 Coq.Init.Logic <> :type_scope:'~'_x not
R7865:7865 Coq.Init.Logic <> :type_scope:'~'_x not
R7849:7859 compcert.common.Memtype MEM valid_block def
R7863:7864 compcert.common.Memtype <> b' var
R7861:7861 compcert.common.Memtype <> m var
R7828:7838 compcert.common.Memtype MEM valid_block def
R7842:7842 compcert.common.Memtype <> b var
R7840:7840 compcert.common.Memtype <> m var
ax 8230:8233 MEM perm
R8247:8249 compcert.common.Memtype MEM mem defax
R8256:8260 compcert.common.Values <> block def
R8269:8269 Coq.Numbers.BinNums <> Z ind
R8276:8284 compcert.common.Memtype MEM perm_kind ind
R8291:8300 compcert.common.Memtype MEM permission ind
ax 8366:8377 MEM perm_implies
R8447:8450 compcert.common.Memtype MEM perm defax
R8462:8463 compcert.common.Memtype <> p2 var
R8460:8460 compcert.common.Memtype <> k var
R8456:8458 compcert.common.Memtype <> ofs var
R8454:8454 compcert.common.Memtype <> b var
R8452:8452 compcert.common.Memtype <> m var
R8427:8436 compcert.common.Memtype MEM perm_order ind
R8441:8442 compcert.common.Memtype <> p2 var
R8438:8439 compcert.common.Memtype <> p1 var
R8406:8409 compcert.common.Memtype MEM perm defax
R8421:8422 compcert.common.Memtype <> p1 var
R8419:8419 compcert.common.Memtype <> k var
R8415:8417 compcert.common.Memtype <> ofs var
R8413:8413 compcert.common.Memtype <> b var
R8411:8411 compcert.common.Memtype <> m var
ax 8560:8571 MEM perm_cur_max
R8616:8619 compcert.common.Memtype MEM perm defax
R8633:8633 compcert.common.Memtype <> p var
R8629:8631 compcert.common.Memtype MEM Max constr
R8625:8627 compcert.common.Memtype <> ofs var
R8623:8623 compcert.common.Memtype <> b var
R8621:8621 compcert.common.Memtype <> m var
R8594:8597 compcert.common.Memtype MEM perm defax
R8611:8611 compcert.common.Memtype <> p var
R8607:8609 compcert.common.Memtype MEM Cur constr
R8603:8605 compcert.common.Memtype <> ofs var
R8601:8601 compcert.common.Memtype <> b var
R8599:8599 compcert.common.Memtype <> m var
ax 8642:8649 MEM perm_cur
R8696:8699 compcert.common.Memtype MEM perm defax
R8711:8711 compcert.common.Memtype <> p var
R8709:8709 compcert.common.Memtype <> k var
R8705:8707 compcert.common.Memtype <> ofs var
R8703:8703 compcert.common.Memtype <> b var
R8701:8701 compcert.common.Memtype <> m var
R8674:8677 compcert.common.Memtype MEM perm defax
R8691:8691 compcert.common.Memtype <> p var
R8687:8689 compcert.common.Memtype MEM Cur constr
R8683:8685 compcert.common.Memtype <> ofs var
R8681:8681 compcert.common.Memtype <> b var
R8679:8679 compcert.common.Memtype <> m var
ax 8720:8727 MEM perm_max
R8772:8775 compcert.common.Memtype MEM perm defax
R8789:8789 compcert.common.Memtype <> p var
R8785:8787 compcert.common.Memtype MEM Max constr
R8781:8783 compcert.common.Memtype <> ofs var
R8779:8779 compcert.common.Memtype <> b var
R8777:8777 compcert.common.Memtype <> m var
R8752:8755 compcert.common.Memtype MEM perm defax
R8767:8767 compcert.common.Memtype <> p var
R8765:8765 compcert.common.Memtype <> k var
R8761:8763 compcert.common.Memtype <> ofs var
R8759:8759 compcert.common.Memtype <> b var
R8757:8757 compcert.common.Memtype <> m var
ax 8938:8953 MEM perm_valid_block
R8998:9008 compcert.common.Memtype MEM valid_block def
R9012:9012 compcert.common.Memtype <> b var
R9010:9010 compcert.common.Memtype <> m var
R8978:8981 compcert.common.Memtype MEM perm defax
R8993:8993 compcert.common.Memtype <> p var
R8991:8991 compcert.common.Memtype <> k var
R8987:8989 compcert.common.Memtype <> ofs var
R8985:8985 compcert.common.Memtype <> b var
R8983:8983 compcert.common.Memtype <> m var
def 9285:9294 MEM range_perm
R9300:9302 compcert.common.Memtype MEM mem defax
R9309:9313 compcert.common.Values <> block def
R9324:9324 Coq.Numbers.BinNums <> Z ind
R9331:9339 compcert.common.Memtype MEM perm_kind ind
R9346:9355 compcert.common.Memtype MEM permission ind
R9400:9403 compcert.common.Memtype MEM perm defax
R9415:9415 compcert.common.Memtype <> p var
R9413:9413 compcert.common.Memtype <> k var
R9409:9411 compcert.common.Memtype <> ofs var
R9407:9407 compcert.common.Memtype <> b var
R9405:9405 compcert.common.Memtype <> m var
R9384:9387 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R9391:9393 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R9382:9383 compcert.common.Memtype <> lo var
R9388:9390 compcert.common.Memtype <> ofs var
R9388:9390 compcert.common.Memtype <> ofs var
R9394:9395 compcert.common.Memtype <> hi var
ax 9425:9442 MEM range_perm_implies
R9524:9533 compcert.common.Memtype MEM range_perm def
R9547:9548 compcert.common.Memtype <> p2 var
R9545:9545 compcert.common.Memtype <> k var
R9542:9543 compcert.common.Memtype <> hi var
R9539:9540 compcert.common.Memtype <> lo var
R9537:9537 compcert.common.Memtype <> b var
R9535:9535 compcert.common.Memtype <> m var
R9504:9513 compcert.common.Memtype MEM perm_order ind
R9518:9519 compcert.common.Memtype <> p2 var
R9515:9516 compcert.common.Memtype <> p1 var
R9475:9484 compcert.common.Memtype MEM range_perm def
R9498:9499 compcert.common.Memtype <> p1 var
R9496:9496 compcert.common.Memtype <> k var
R9493:9494 compcert.common.Memtype <> hi var
R9490:9491 compcert.common.Memtype <> lo var
R9488:9488 compcert.common.Memtype <> b var
R9486:9486 compcert.common.Memtype <> m var
def 9772:9783 MEM valid_access
R9789:9791 compcert.common.Memtype MEM mem defax
R9802:9813 compcert.common.AST <> memory_chunk ind
R9820:9824 compcert.common.Values <> block def
R9833:9833 Coq.Numbers.BinNums <> Z ind
R9840:9849 compcert.common.Memtype MEM permission ind
R9912:9917 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9863:9872 compcert.common.Memtype MEM range_perm def
R9911:9911 compcert.common.Memtype <> p var
R9907:9909 compcert.common.Memtype MEM Cur constr
R9886:9888 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9883:9885 compcert.common.Memtype <> ofs var
R9889:9898 compcert.common.Memdata <> size_chunk def
R9900:9904 compcert.common.Memtype <> chunk var
R9878:9880 compcert.common.Memtype <> ofs var
R9876:9876 compcert.common.Memtype <> b var
R9874:9874 compcert.common.Memtype <> m var
R9918:9918 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R9936:9938 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R9942:9942 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R9919:9929 compcert.common.Memdata <> align_chunk def
R9931:9935 compcert.common.Memtype <> chunk var
R9939:9941 compcert.common.Memtype <> ofs var
ax 9952:9971 MEM valid_access_implies
R10061:10072 compcert.common.Memtype MEM valid_access def
R10088:10089 compcert.common.Memtype <> p2 var
R10084:10086 compcert.common.Memtype <> ofs var
R10082:10082 compcert.common.Memtype <> b var
R10076:10080 compcert.common.Memtype <> chunk var
R10074:10074 compcert.common.Memtype <> m var
R10039:10048 compcert.common.Memtype MEM perm_order ind
R10053:10054 compcert.common.Memtype <> p2 var
R10050:10051 compcert.common.Memtype <> p1 var
R10006:10017 compcert.common.Memtype MEM valid_access def
R10033:10034 compcert.common.Memtype <> p1 var
R10029:10031 compcert.common.Memtype <> ofs var
R10027:10027 compcert.common.Memtype <> b var
R10021:10025 compcert.common.Memtype <> chunk var
R10019:10019 compcert.common.Memtype <> m var
ax 10099:10122 MEM valid_access_valid_block
R10192:10202 compcert.common.Memtype MEM valid_block def
R10206:10206 compcert.common.Memtype <> b var
R10204:10204 compcert.common.Memtype <> m var
R10151:10162 compcert.common.Memtype MEM valid_access def
R10178:10185 compcert.common.Memtype MEM Nonempty constr
R10174:10176 compcert.common.Memtype <> ofs var
R10172:10172 compcert.common.Memtype <> b var
R10166:10170 compcert.common.Memtype <> chunk var
R10164:10164 compcert.common.Memtype <> m var
ax 10216:10232 MEM valid_access_perm
R10299:10302 compcert.common.Memtype MEM perm defax
R10314:10314 compcert.common.Memtype <> p var
R10312:10312 compcert.common.Memtype <> k var
R10308:10310 compcert.common.Memtype <> ofs var
R10306:10306 compcert.common.Memtype <> b var
R10304:10304 compcert.common.Memtype <> m var
R10265:10276 compcert.common.Memtype MEM valid_access def
R10292:10292 compcert.common.Memtype <> p var
R10288:10290 compcert.common.Memtype <> ofs var
R10286:10286 compcert.common.Memtype <> b var
R10280:10284 compcert.common.Memtype <> chunk var
R10278:10278 compcert.common.Memtype <> m var
ax 10448:10460 MEM valid_pointer
R10474:10476 compcert.common.Memtype MEM mem defax
R10483:10487 compcert.common.Values <> block def
R10496:10496 Coq.Numbers.BinNums <> Z ind
R10500:10503 Coq.Init.Datatypes <> bool ind
ax 10513:10539 MEM valid_pointer_nonempty_perm
R10590:10594 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10583:10585 Coq.Init.Logic <> :type_scope:x_'='_x not
R10562:10574 compcert.common.Memtype MEM valid_pointer defax
R10580:10582 compcert.common.Memtype <> ofs var
R10578:10578 compcert.common.Memtype <> b var
R10576:10576 compcert.common.Memtype <> m var
R10586:10589 Coq.Init.Datatypes <> true constr
R10595:10598 compcert.common.Memtype MEM perm defax
R10612:10619 compcert.common.Memtype MEM Nonempty constr
R10608:10610 compcert.common.Memtype MEM Cur constr
R10604:10606 compcert.common.Memtype <> ofs var
R10602:10602 compcert.common.Memtype <> b var
R10600:10600 compcert.common.Memtype <> m var
ax 10628:10653 MEM valid_pointer_valid_access
R10704:10708 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10697:10699 Coq.Init.Logic <> :type_scope:x_'='_x not
R10676:10688 compcert.common.Memtype MEM valid_pointer defax
R10694:10696 compcert.common.Memtype <> ofs var
R10692:10692 compcert.common.Memtype <> b var
R10690:10690 compcert.common.Memtype <> m var
R10700:10703 Coq.Init.Datatypes <> true constr
R10709:10720 compcert.common.Memtype MEM valid_access def
R10744:10751 compcert.common.Memtype MEM Nonempty constr
R10740:10742 compcert.common.Memtype <> ofs var
R10738:10738 compcert.common.Memtype <> b var
R10724:10736 compcert.common.AST <> Mint8unsigned constr
R10722:10722 compcert.common.Memtype <> m var
def 11051:11068 MEM weak_valid_pointer
R11074:11076 compcert.common.Memtype MEM mem defax
R11083:11087 compcert.common.Values <> block def
R11096:11096 Coq.Numbers.BinNums <> Z ind
R11125:11128 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R11104:11116 compcert.common.Memtype MEM valid_pointer defax
R11122:11124 compcert.common.Memtype <> ofs var
R11120:11120 compcert.common.Memtype <> b var
R11118:11118 compcert.common.Memtype <> m var
R11129:11141 compcert.common.Memtype MEM valid_pointer defax
R11151:11153 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R11148:11150 compcert.common.Memtype <> ofs var
R11145:11145 compcert.common.Memtype <> b var
R11143:11143 compcert.common.Memtype <> m var
ax 11165:11187 MEM weak_valid_pointer_spec
R11243:11251 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11236:11238 Coq.Init.Logic <> :type_scope:x_'='_x not
R11210:11227 compcert.common.Memtype MEM weak_valid_pointer def
R11233:11235 compcert.common.Memtype <> ofs var
R11231:11231 compcert.common.Memtype <> b var
R11229:11229 compcert.common.Memtype <> m var
R11239:11242 Coq.Init.Datatypes <> true constr
R11280:11283 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11273:11275 Coq.Init.Logic <> :type_scope:x_'='_x not
R11252:11264 compcert.common.Memtype MEM valid_pointer defax
R11270:11272 compcert.common.Memtype <> ofs var
R11268:11268 compcert.common.Memtype <> b var
R11266:11266 compcert.common.Memtype <> m var
R11276:11279 Coq.Init.Datatypes <> true constr
R11311:11313 Coq.Init.Logic <> :type_scope:x_'='_x not
R11284:11296 compcert.common.Memtype MEM valid_pointer defax
R11306:11308 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R11303:11305 compcert.common.Memtype <> ofs var
R11300:11300 compcert.common.Memtype <> b var
R11298:11298 compcert.common.Memtype <> m var
R11314:11317 Coq.Init.Datatypes <> true constr
ax 11326:11346 MEM valid_pointer_implies
R11427:11429 Coq.Init.Logic <> :type_scope:x_'='_x not
R11401:11418 compcert.common.Memtype MEM weak_valid_pointer def
R11424:11426 compcert.common.Memtype <> ofs var
R11422:11422 compcert.common.Memtype <> b var
R11420:11420 compcert.common.Memtype <> m var
R11430:11433 Coq.Init.Datatypes <> true constr
R11390:11392 Coq.Init.Logic <> :type_scope:x_'='_x not
R11369:11381 compcert.common.Memtype MEM valid_pointer defax
R11387:11389 compcert.common.Memtype <> ofs var
R11385:11385 compcert.common.Memtype <> b var
R11383:11383 compcert.common.Memtype <> m var
R11393:11396 Coq.Init.Datatypes <> true constr
ax 11540:11554 MEM nextblock_empty
R11572:11574 Coq.Init.Logic <> :type_scope:x_'='_x not
R11557:11565 compcert.common.Memtype MEM nextblock defax
R11567:11571 compcert.common.Memtype MEM empty defax
ax 11593:11602 MEM perm_empty
R11623:11623 Coq.Init.Logic <> :type_scope:'~'_x not
R11624:11627 compcert.common.Memtype MEM perm defax
R11643:11643 compcert.common.Memtype <> p var
R11641:11641 compcert.common.Memtype <> k var
R11637:11639 compcert.common.Memtype <> ofs var
R11635:11635 compcert.common.Memtype <> b var
R11629:11633 compcert.common.Memtype MEM empty defax
ax 11652:11669 MEM valid_access_empty
R11696:11696 Coq.Init.Logic <> :type_scope:'~'_x not
R11697:11708 compcert.common.Memtype MEM valid_access def
R11728:11728 compcert.common.Memtype <> p var
R11724:11726 compcert.common.Memtype <> ofs var
R11722:11722 compcert.common.Memtype <> b var
R11716:11720 compcert.common.Memtype <> chunk var
R11710:11714 compcert.common.Memtype MEM empty defax
ax 11841:11857 MEM valid_access_load
R11927:11933 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11935:11936 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11955:11957 Coq.Init.Logic <> :type_scope:x_'='_x not
R11937:11940 compcert.common.Memtype MEM load defax
R11952:11954 compcert.common.Memtype <> ofs var
R11950:11950 compcert.common.Memtype <> b var
R11948:11948 compcert.common.Memtype <> m var
R11942:11946 compcert.common.Memtype <> chunk var
R11958:11961 Coq.Init.Datatypes <> Some constr
R11963:11963 compcert.common.Memtype <> v var
R11886:11897 compcert.common.Memtype MEM valid_access def
R11913:11920 compcert.common.Memtype MEM Readable constr
R11909:11911 compcert.common.Memtype <> ofs var
R11907:11907 compcert.common.Memtype <> b var
R11901:11905 compcert.common.Memtype <> chunk var
R11899:11899 compcert.common.Memtype <> m var
ax 11972:11988 MEM load_valid_access
R12052:12063 compcert.common.Memtype MEM valid_access def
R12079:12086 compcert.common.Memtype MEM Readable constr
R12075:12077 compcert.common.Memtype <> ofs var
R12073:12073 compcert.common.Memtype <> b var
R12067:12071 compcert.common.Memtype <> chunk var
R12065:12065 compcert.common.Memtype <> m var
R12037:12039 Coq.Init.Logic <> :type_scope:x_'='_x not
R12019:12022 compcert.common.Memtype MEM load defax
R12034:12036 compcert.common.Memtype <> ofs var
R12032:12032 compcert.common.Memtype <> b var
R12030:12030 compcert.common.Memtype <> m var
R12024:12028 compcert.common.Memtype <> chunk var
R12040:12043 Coq.Init.Datatypes <> Some constr
R12045:12045 compcert.common.Memtype <> v var
ax 12284:12292 MEM load_type
R12356:12367 compcert.common.Values Val has_type def
R12372:12384 compcert.common.AST <> type_of_chunk def
R12386:12390 compcert.common.Memtype <> chunk var
R12369:12369 compcert.common.Memtype <> v var
R12341:12343 Coq.Init.Logic <> :type_scope:x_'='_x not
R12323:12326 compcert.common.Memtype MEM load defax
R12338:12340 compcert.common.Memtype <> ofs var
R12336:12336 compcert.common.Memtype <> b var
R12334:12334 compcert.common.Memtype <> m var
R12328:12332 compcert.common.Memtype <> chunk var
R12344:12347 Coq.Init.Datatypes <> Some constr
R12349:12349 compcert.common.Memtype <> v var
ax 12517:12525 MEM load_cast
R12595:12599 compcert.common.Memtype <> chunk var
R12610:12620 compcert.common.AST <> Mint8signed constr
R12626:12628 Coq.Init.Logic <> :type_scope:x_'='_x not
R12625:12625 compcert.common.Memtype <> v var
R12629:12640 compcert.common.Values Val sign_ext def
R12644:12644 compcert.common.Memtype <> v var
R12650:12662 compcert.common.AST <> Mint8unsigned constr
R12668:12670 Coq.Init.Logic <> :type_scope:x_'='_x not
R12667:12667 compcert.common.Memtype <> v var
R12671:12682 compcert.common.Values Val zero_ext def
R12686:12686 compcert.common.Memtype <> v var
R12692:12703 compcert.common.AST <> Mint16signed constr
R12709:12711 Coq.Init.Logic <> :type_scope:x_'='_x not
R12708:12708 compcert.common.Memtype <> v var
R12712:12723 compcert.common.Values Val sign_ext def
R12728:12728 compcert.common.Memtype <> v var
R12734:12747 compcert.common.AST <> Mint16unsigned constr
R12753:12755 Coq.Init.Logic <> :type_scope:x_'='_x not
R12752:12752 compcert.common.Memtype <> v var
R12756:12767 compcert.common.Values Val zero_ext def
R12772:12772 compcert.common.Memtype <> v var
R12783:12786 Coq.Init.Logic <> True ind
R12574:12576 Coq.Init.Logic <> :type_scope:x_'='_x not
R12556:12559 compcert.common.Memtype MEM load defax
R12571:12573 compcert.common.Memtype <> ofs var
R12569:12569 compcert.common.Memtype <> b var
R12567:12567 compcert.common.Memtype <> m var
R12561:12565 compcert.common.Memtype <> chunk var
R12577:12580 Coq.Init.Datatypes <> Some constr
R12582:12582 compcert.common.Memtype <> v var
ax 12802:12826 MEM load_int8_signed_unsigned
R12873:12875 Coq.Init.Logic <> :type_scope:x_'='_x not
R12849:12852 compcert.common.Memtype MEM load defax
R12870:12872 compcert.common.Memtype <> ofs var
R12868:12868 compcert.common.Memtype <> b var
R12866:12866 compcert.common.Memtype <> m var
R12854:12864 compcert.common.AST <> Mint8signed constr
R12876:12885 compcert.lib.Coqlib <> option_map def
R12905:12908 compcert.common.Memtype MEM load defax
R12928:12930 compcert.common.Memtype <> ofs var
R12926:12926 compcert.common.Memtype <> b var
R12924:12924 compcert.common.Memtype <> m var
R12910:12922 compcert.common.AST <> Mint8unsigned constr
R12888:12899 compcert.common.Values Val sign_ext def
ax 12941:12966 MEM load_int16_signed_unsigned
R13014:13016 Coq.Init.Logic <> :type_scope:x_'='_x not
R12989:12992 compcert.common.Memtype MEM load defax
R13011:13013 compcert.common.Memtype <> ofs var
R13009:13009 compcert.common.Memtype <> b var
R13007:13007 compcert.common.Memtype <> m var
R12994:13005 compcert.common.AST <> Mint16signed constr
R13017:13026 compcert.lib.Coqlib <> option_map def
R13047:13050 compcert.common.Memtype MEM load defax
R13071:13073 compcert.common.Memtype <> ofs var
R13069:13069 compcert.common.Memtype <> b var
R13067:13067 compcert.common.Memtype <> m var
R13052:13065 compcert.common.AST <> Mint16unsigned constr
R13029:13040 compcert.common.Values Val sign_ext def
ax 13225:13244 MEM range_perm_loadbytes
R13320:13326 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13332:13333 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13355:13357 Coq.Init.Logic <> :type_scope:x_'='_x not
R13334:13342 compcert.common.Memtype MEM loadbytes defax
R13352:13354 compcert.common.Memtype <> len var
R13348:13350 compcert.common.Memtype <> ofs var
R13346:13346 compcert.common.Memtype <> b var
R13344:13344 compcert.common.Memtype <> m var
R13358:13361 Coq.Init.Datatypes <> Some constr
R13363:13367 compcert.common.Memtype <> bytes var
R13271:13280 compcert.common.Memtype MEM range_perm def
R13306:13313 compcert.common.Memtype MEM Readable constr
R13302:13304 compcert.common.Memtype MEM Cur constr
R13294:13296 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13291:13293 compcert.common.Memtype <> ofs var
R13297:13299 compcert.common.Memtype <> len var
R13286:13288 compcert.common.Memtype <> ofs var
R13284:13284 compcert.common.Memtype <> b var
R13282:13282 compcert.common.Memtype <> m var
ax 13376:13395 MEM loadbytes_range_perm
R13468:13477 compcert.common.Memtype MEM range_perm def
R13503:13510 compcert.common.Memtype MEM Readable constr
R13499:13501 compcert.common.Memtype MEM Cur constr
R13491:13493 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13488:13490 compcert.common.Memtype <> ofs var
R13494:13496 compcert.common.Memtype <> len var
R13483:13485 compcert.common.Memtype <> ofs var
R13481:13481 compcert.common.Memtype <> b var
R13479:13479 compcert.common.Memtype <> m var
R13449:13451 Coq.Init.Logic <> :type_scope:x_'='_x not
R13428:13436 compcert.common.Memtype MEM loadbytes defax
R13446:13448 compcert.common.Memtype <> len var
R13442:13444 compcert.common.Memtype <> ofs var
R13440:13440 compcert.common.Memtype <> b var
R13438:13438 compcert.common.Memtype <> m var
R13452:13455 Coq.Init.Datatypes <> Some constr
R13457:13461 compcert.common.Memtype <> bytes var
ax 13663:13676 MEM loadbytes_load
R13815:13817 Coq.Init.Logic <> :type_scope:x_'='_x not
R13797:13800 compcert.common.Memtype MEM load defax
R13812:13814 compcert.common.Memtype <> ofs var
R13810:13810 compcert.common.Memtype <> b var
R13808:13808 compcert.common.Memtype <> m var
R13802:13806 compcert.common.Memtype <> chunk var
R13818:13821 Coq.Init.Datatypes <> Some constr
R13823:13832 compcert.common.Memdata <> decode_val def
R13840:13844 compcert.common.Memtype <> bytes var
R13834:13838 compcert.common.Memtype <> chunk var
R13766:13766 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R13784:13786 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R13790:13790 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R13767:13777 compcert.common.Memdata <> align_chunk def
R13779:13783 compcert.common.Memtype <> chunk var
R13787:13789 compcert.common.Memtype <> ofs var
R13747:13749 Coq.Init.Logic <> :type_scope:x_'='_x not
R13711:13719 compcert.common.Memtype MEM loadbytes defax
R13730:13739 compcert.common.Memdata <> size_chunk def
R13741:13745 compcert.common.Memtype <> chunk var
R13725:13727 compcert.common.Memtype <> ofs var
R13723:13723 compcert.common.Memtype <> b var
R13721:13721 compcert.common.Memtype <> m var
R13750:13753 Coq.Init.Datatypes <> Some constr
R13755:13759 compcert.common.Memtype <> bytes var
ax 14013:14026 MEM load_loadbytes
R14090:14096 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14102:14103 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14153:14169 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14140:14142 Coq.Init.Logic <> :type_scope:x_'='_x not
R14104:14112 compcert.common.Memtype MEM loadbytes defax
R14123:14132 compcert.common.Memdata <> size_chunk def
R14134:14138 compcert.common.Memtype <> chunk var
R14118:14120 compcert.common.Memtype <> ofs var
R14116:14116 compcert.common.Memtype <> b var
R14114:14114 compcert.common.Memtype <> m var
R14143:14146 Coq.Init.Datatypes <> Some constr
R14148:14152 compcert.common.Memtype <> bytes var
R14171:14173 Coq.Init.Logic <> :type_scope:x_'='_x not
R14170:14170 compcert.common.Memtype <> v var
R14174:14183 compcert.common.Memdata <> decode_val def
R14191:14195 compcert.common.Memtype <> bytes var
R14185:14189 compcert.common.Memtype <> chunk var
R14075:14077 Coq.Init.Logic <> :type_scope:x_'='_x not
R14057:14060 compcert.common.Memtype MEM load defax
R14072:14074 compcert.common.Memtype <> ofs var
R14070:14070 compcert.common.Memtype <> b var
R14068:14068 compcert.common.Memtype <> m var
R14062:14066 compcert.common.Memtype <> chunk var
R14078:14081 Coq.Init.Datatypes <> Some constr
R14083:14083 compcert.common.Memtype <> v var
ax 14281:14296 MEM loadbytes_length
R14377:14379 Coq.Init.Logic <> :type_scope:x_'='_x not
R14365:14370 Coq.Init.Datatypes <> length def
R14372:14376 compcert.common.Memtype <> bytes var
R14380:14387 compcert.lib.Coqlib <> nat_of_Z def
R14389:14389 compcert.common.Memtype <> n var
R14346:14348 Coq.Init.Logic <> :type_scope:x_'='_x not
R14327:14335 compcert.common.Memtype MEM loadbytes defax
R14345:14345 compcert.common.Memtype <> n var
R14341:14343 compcert.common.Memtype <> ofs var
R14339:14339 compcert.common.Memtype <> b var
R14337:14337 compcert.common.Memtype <> m var
R14349:14352 Coq.Init.Datatypes <> Some constr
R14354:14358 compcert.common.Memtype <> bytes var
ax 14399:14413 MEM loadbytes_empty
R14467:14469 Coq.Init.Logic <> :type_scope:x_'='_x not
R14448:14456 compcert.common.Memtype MEM loadbytes defax
R14466:14466 compcert.common.Memtype <> n var
R14462:14464 compcert.common.Memtype <> ofs var
R14460:14460 compcert.common.Memtype <> b var
R14458:14458 compcert.common.Memtype <> m var
R14470:14473 Coq.Init.Datatypes <> Some constr
R14475:14477 Coq.Init.Datatypes <> nil constr
R14439:14442 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R14438:14438 compcert.common.Memtype <> n var
ax 14565:14580 MEM loadbytes_concat
R14761:14763 Coq.Init.Logic <> :type_scope:x_'='_x not
R14734:14742 compcert.common.Memtype MEM loadbytes defax
R14755:14757 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14753:14754 compcert.common.Memtype <> n1 var
R14758:14759 compcert.common.Memtype <> n2 var
R14748:14750 compcert.common.Memtype <> ofs var
R14746:14746 compcert.common.Memtype <> b var
R14744:14744 compcert.common.Memtype <> m var
R14764:14767 Coq.Init.Datatypes <> Some constr
R14775:14778 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14769:14774 compcert.common.Memtype <> bytes1 var
R14779:14784 compcert.common.Memtype <> bytes2 var
R14723:14726 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14721:14722 compcert.common.Memtype <> n2 var
R14712:14715 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14710:14711 compcert.common.Memtype <> n1 var
R14690:14692 Coq.Init.Logic <> :type_scope:x_'='_x not
R14663:14671 compcert.common.Memtype MEM loadbytes defax
R14688:14689 compcert.common.Memtype <> n2 var
R14681:14683 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14678:14680 compcert.common.Memtype <> ofs var
R14684:14685 compcert.common.Memtype <> n1 var
R14675:14675 compcert.common.Memtype <> b var
R14673:14673 compcert.common.Memtype <> m var
R14693:14696 Coq.Init.Datatypes <> Some constr
R14698:14703 compcert.common.Memtype <> bytes2 var
R14643:14645 Coq.Init.Logic <> :type_scope:x_'='_x not
R14623:14631 compcert.common.Memtype MEM loadbytes defax
R14641:14642 compcert.common.Memtype <> n1 var
R14637:14639 compcert.common.Memtype <> ofs var
R14635:14635 compcert.common.Memtype <> b var
R14633:14633 compcert.common.Memtype <> m var
R14646:14649 Coq.Init.Datatypes <> Some constr
R14651:14656 compcert.common.Memtype <> bytes1 var
ax 14794:14808 MEM loadbytes_split
R14913:14919 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14926:14927 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14928:14934 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14941:14947 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14982:14988 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14968:14970 Coq.Init.Logic <> :type_scope:x_'='_x not
R14948:14956 compcert.common.Memtype MEM loadbytes defax
R14966:14967 compcert.common.Memtype <> n1 var
R14962:14964 compcert.common.Memtype <> ofs var
R14960:14960 compcert.common.Memtype <> b var
R14958:14958 compcert.common.Memtype <> m var
R14971:14974 Coq.Init.Datatypes <> Some constr
R14976:14981 compcert.common.Memtype <> bytes1 var
R15030:15035 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15016:15018 Coq.Init.Logic <> :type_scope:x_'='_x not
R14989:14997 compcert.common.Memtype MEM loadbytes defax
R15014:15015 compcert.common.Memtype <> n2 var
R15007:15009 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15004:15006 compcert.common.Memtype <> ofs var
R15010:15011 compcert.common.Memtype <> n1 var
R15001:15001 compcert.common.Memtype <> b var
R14999:14999 compcert.common.Memtype <> m var
R15019:15022 Coq.Init.Datatypes <> Some constr
R15024:15029 compcert.common.Memtype <> bytes2 var
R15041:15043 Coq.Init.Logic <> :type_scope:x_'='_x not
R15036:15040 compcert.common.Memtype <> bytes var
R15050:15053 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15044:15049 compcert.common.Memtype <> bytes1 var
R15054:15059 compcert.common.Memtype <> bytes2 var
R14902:14905 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14900:14901 compcert.common.Memtype <> n2 var
R14891:14894 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14889:14890 compcert.common.Memtype <> n1 var
R14870:14872 Coq.Init.Logic <> :type_scope:x_'='_x not
R14843:14851 compcert.common.Memtype MEM loadbytes defax
R14864:14866 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14862:14863 compcert.common.Memtype <> n1 var
R14867:14868 compcert.common.Memtype <> n2 var
R14857:14859 compcert.common.Memtype <> ofs var
R14855:14855 compcert.common.Memtype <> b var
R14853:14853 compcert.common.Memtype <> m var
R14873:14876 Coq.Init.Datatypes <> Some constr
R14878:14882 compcert.common.Memtype <> bytes var
ax 15282:15296 MEM nextblock_store
R15379:15381 Coq.Init.Logic <> :type_scope:x_'='_x not
R15367:15375 compcert.common.Memtype MEM nextblock defax
R15377:15378 compcert.common.Memtype <> m2 var
R15382:15390 compcert.common.Memtype MEM nextblock defax
R15392:15393 compcert.common.Memtype <> m1 var
R15351:15353 Coq.Init.Logic <> :type_scope:x_'='_x not
R15329:15333 compcert.common.Memtype MEM store defax
R15350:15350 compcert.common.Memtype <> v var
R15346:15348 compcert.common.Memtype <> ofs var
R15344:15344 compcert.common.Memtype <> b var
R15341:15342 compcert.common.Memtype <> m1 var
R15335:15339 compcert.common.Memtype <> chunk var
R15354:15357 Coq.Init.Datatypes <> Some constr
R15359:15360 compcert.common.Memtype <> m2 var
ax 15402:15420 MEM store_valid_block_1
R15523:15533 compcert.common.Memtype MEM valid_block def
R15538:15539 compcert.common.Memtype <> b' var
R15535:15536 compcert.common.Memtype <> m2 var
R15502:15512 compcert.common.Memtype MEM valid_block def
R15517:15518 compcert.common.Memtype <> b' var
R15514:15515 compcert.common.Memtype <> m1 var
R15475:15477 Coq.Init.Logic <> :type_scope:x_'='_x not
R15453:15457 compcert.common.Memtype MEM store defax
R15474:15474 compcert.common.Memtype <> v var
R15470:15472 compcert.common.Memtype <> ofs var
R15468:15468 compcert.common.Memtype <> b var
R15465:15466 compcert.common.Memtype <> m1 var
R15459:15463 compcert.common.Memtype <> chunk var
R15478:15481 Coq.Init.Datatypes <> Some constr
R15483:15484 compcert.common.Memtype <> m2 var
ax 15548:15566 MEM store_valid_block_2
R15669:15679 compcert.common.Memtype MEM valid_block def
R15684:15685 compcert.common.Memtype <> b' var
R15681:15682 compcert.common.Memtype <> m1 var
R15648:15658 compcert.common.Memtype MEM valid_block def
R15663:15664 compcert.common.Memtype <> b' var
R15660:15661 compcert.common.Memtype <> m2 var
R15621:15623 Coq.Init.Logic <> :type_scope:x_'='_x not
R15599:15603 compcert.common.Memtype MEM store defax
R15620:15620 compcert.common.Memtype <> v var
R15616:15618 compcert.common.Memtype <> ofs var
R15614:15614 compcert.common.Memtype <> b var
R15611:15612 compcert.common.Memtype <> m1 var
R15605:15609 compcert.common.Memtype <> chunk var
R15624:15627 Coq.Init.Datatypes <> Some constr
R15629:15630 compcert.common.Memtype <> m2 var
ax 15695:15706 MEM perm_store_1
R15820:15823 compcert.common.Memtype MEM perm defax
R15838:15838 compcert.common.Memtype <> p var
R15836:15836 compcert.common.Memtype <> k var
R15831:15834 compcert.common.Memtype <> ofs' var
R15828:15829 compcert.common.Memtype <> b' var
R15825:15826 compcert.common.Memtype <> m2 var
R15797:15800 compcert.common.Memtype MEM perm defax
R15815:15815 compcert.common.Memtype <> p var
R15813:15813 compcert.common.Memtype <> k var
R15808:15811 compcert.common.Memtype <> ofs' var
R15805:15806 compcert.common.Memtype <> b' var
R15802:15803 compcert.common.Memtype <> m1 var
R15761:15763 Coq.Init.Logic <> :type_scope:x_'='_x not
R15739:15743 compcert.common.Memtype MEM store defax
R15760:15760 compcert.common.Memtype <> v var
R15756:15758 compcert.common.Memtype <> ofs var
R15754:15754 compcert.common.Memtype <> b var
R15751:15752 compcert.common.Memtype <> m1 var
R15745:15749 compcert.common.Memtype <> chunk var
R15764:15767 Coq.Init.Datatypes <> Some constr
R15769:15770 compcert.common.Memtype <> m2 var
ax 15847:15858 MEM perm_store_2
R15972:15975 compcert.common.Memtype MEM perm defax
R15990:15990 compcert.common.Memtype <> p var
R15988:15988 compcert.common.Memtype <> k var
R15983:15986 compcert.common.Memtype <> ofs' var
R15980:15981 compcert.common.Memtype <> b' var
R15977:15978 compcert.common.Memtype <> m1 var
R15949:15952 compcert.common.Memtype MEM perm defax
R15967:15967 compcert.common.Memtype <> p var
R15965:15965 compcert.common.Memtype <> k var
R15960:15963 compcert.common.Memtype <> ofs' var
R15957:15958 compcert.common.Memtype <> b' var
R15954:15955 compcert.common.Memtype <> m2 var
R15913:15915 Coq.Init.Logic <> :type_scope:x_'='_x not
R15891:15895 compcert.common.Memtype MEM store defax
R15912:15912 compcert.common.Memtype <> v var
R15908:15910 compcert.common.Memtype <> ofs var
R15906:15906 compcert.common.Memtype <> b var
R15903:15904 compcert.common.Memtype <> m1 var
R15897:15901 compcert.common.Memtype <> chunk var
R15916:15919 Coq.Init.Datatypes <> Some constr
R15921:15922 compcert.common.Memtype <> m2 var
ax 16000:16017 MEM valid_access_store
R16091:16092 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16095:16096 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16100:16102 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16135:16136 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16125:16127 Coq.Init.Logic <> :type_scope:x_'='_x not
R16103:16107 compcert.common.Memtype MEM store defax
R16124:16124 compcert.common.Memtype <> v var
R16120:16122 compcert.common.Memtype <> ofs var
R16118:16118 compcert.common.Memtype <> b var
R16115:16116 compcert.common.Memtype <> m1 var
R16109:16113 compcert.common.Memtype <> chunk var
R16128:16131 Coq.Init.Datatypes <> Some constr
R16097:16099 compcert.common.Memtype MEM mem defax
R16049:16060 compcert.common.Memtype MEM valid_access def
R16077:16084 compcert.common.Memtype MEM Writable constr
R16073:16075 compcert.common.Memtype <> ofs var
R16071:16071 compcert.common.Memtype <> b var
R16065:16069 compcert.common.Memtype <> chunk var
R16062:16063 compcert.common.Memtype <> m1 var
ax 16145:16164 MEM store_valid_access_1
R16298:16309 compcert.common.Memtype MEM valid_access def
R16329:16329 compcert.common.Memtype <> p var
R16324:16327 compcert.common.Memtype <> ofs' var
R16321:16322 compcert.common.Memtype <> b' var
R16314:16319 compcert.common.Memtype <> chunk' var
R16311:16312 compcert.common.Memtype <> m2 var
R16262:16273 compcert.common.Memtype MEM valid_access def
R16293:16293 compcert.common.Memtype <> p var
R16288:16291 compcert.common.Memtype <> ofs' var
R16285:16286 compcert.common.Memtype <> b' var
R16278:16283 compcert.common.Memtype <> chunk' var
R16275:16276 compcert.common.Memtype <> m1 var
R16219:16221 Coq.Init.Logic <> :type_scope:x_'='_x not
R16197:16201 compcert.common.Memtype MEM store defax
R16218:16218 compcert.common.Memtype <> v var
R16214:16216 compcert.common.Memtype <> ofs var
R16212:16212 compcert.common.Memtype <> b var
R16209:16210 compcert.common.Memtype <> m1 var
R16203:16207 compcert.common.Memtype <> chunk var
R16222:16225 Coq.Init.Datatypes <> Some constr
R16227:16228 compcert.common.Memtype <> m2 var
ax 16338:16357 MEM store_valid_access_2
R16491:16502 compcert.common.Memtype MEM valid_access def
R16522:16522 compcert.common.Memtype <> p var
R16517:16520 compcert.common.Memtype <> ofs' var
R16514:16515 compcert.common.Memtype <> b' var
R16507:16512 compcert.common.Memtype <> chunk' var
R16504:16505 compcert.common.Memtype <> m1 var
R16455:16466 compcert.common.Memtype MEM valid_access def
R16486:16486 compcert.common.Memtype <> p var
R16481:16484 compcert.common.Memtype <> ofs' var
R16478:16479 compcert.common.Memtype <> b' var
R16471:16476 compcert.common.Memtype <> chunk' var
R16468:16469 compcert.common.Memtype <> m2 var
R16412:16414 Coq.Init.Logic <> :type_scope:x_'='_x not
R16390:16394 compcert.common.Memtype MEM store defax
R16411:16411 compcert.common.Memtype <> v var
R16407:16409 compcert.common.Memtype <> ofs var
R16405:16405 compcert.common.Memtype <> b var
R16402:16403 compcert.common.Memtype <> m1 var
R16396:16400 compcert.common.Memtype <> chunk var
R16415:16418 Coq.Init.Datatypes <> Some constr
R16420:16421 compcert.common.Memtype <> m2 var
ax 16531:16550 MEM store_valid_access_3
R16621:16632 compcert.common.Memtype MEM valid_access def
R16649:16656 compcert.common.Memtype MEM Writable constr
R16645:16647 compcert.common.Memtype <> ofs var
R16643:16643 compcert.common.Memtype <> b var
R16637:16641 compcert.common.Memtype <> chunk var
R16634:16635 compcert.common.Memtype <> m1 var
R16605:16607 Coq.Init.Logic <> :type_scope:x_'='_x not
R16583:16587 compcert.common.Memtype MEM store defax
R16604:16604 compcert.common.Memtype <> v var
R16600:16602 compcert.common.Memtype <> ofs var
R16598:16598 compcert.common.Memtype <> b var
R16595:16596 compcert.common.Memtype <> m1 var
R16589:16593 compcert.common.Memtype <> chunk var
R16608:16611 Coq.Init.Datatypes <> Some constr
R16613:16614 compcert.common.Memtype <> m2 var
ax 16697:16714 MEM load_store_similar
R16889:16895 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16898:16899 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16930:16933 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16920:16922 Coq.Init.Logic <> :type_scope:x_'='_x not
R16900:16903 compcert.common.Memtype MEM load defax
R16917:16919 compcert.common.Memtype <> ofs var
R16915:16915 compcert.common.Memtype <> b var
R16912:16913 compcert.common.Memtype <> m2 var
R16905:16910 compcert.common.Memtype <> chunk' var
R16923:16926 Coq.Init.Datatypes <> Some constr
R16928:16929 compcert.common.Memtype <> v' var
R16934:16950 compcert.common.Memdata <> decode_encode_val def
R16967:16968 compcert.common.Memtype <> v' var
R16960:16965 compcert.common.Memtype <> chunk' var
R16954:16958 compcert.common.Memtype <> chunk var
R16952:16952 compcert.common.Memtype <> v var
R16862:16865 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16844:16854 compcert.common.Memdata <> align_chunk def
R16856:16861 compcert.common.Memtype <> chunk' var
R16866:16876 compcert.common.Memdata <> align_chunk def
R16878:16882 compcert.common.Memtype <> chunk var
R16819:16821 Coq.Init.Logic <> :type_scope:x_'='_x not
R16802:16811 compcert.common.Memdata <> size_chunk def
R16813:16818 compcert.common.Memtype <> chunk' var
R16822:16831 compcert.common.Memdata <> size_chunk def
R16833:16837 compcert.common.Memtype <> chunk var
R16769:16771 Coq.Init.Logic <> :type_scope:x_'='_x not
R16747:16751 compcert.common.Memtype MEM store defax
R16768:16768 compcert.common.Memtype <> v var
R16764:16766 compcert.common.Memtype <> ofs var
R16762:16762 compcert.common.Memtype <> b var
R16759:16760 compcert.common.Memtype <> m1 var
R16753:16757 compcert.common.Memtype <> chunk var
R16772:16775 Coq.Init.Datatypes <> Some constr
R16777:16778 compcert.common.Memtype <> m2 var
ax 16978:16992 MEM load_store_same
R17082:17084 Coq.Init.Logic <> :type_scope:x_'='_x not
R17063:17066 compcert.common.Memtype MEM load defax
R17079:17081 compcert.common.Memtype <> ofs var
R17077:17077 compcert.common.Memtype <> b var
R17074:17075 compcert.common.Memtype <> m2 var
R17068:17072 compcert.common.Memtype <> chunk var
R17085:17088 Coq.Init.Datatypes <> Some constr
R17091:17105 compcert.common.Values Val load_result def
R17113:17113 compcert.common.Memtype <> v var
R17107:17111 compcert.common.Memtype <> chunk var
R17047:17049 Coq.Init.Logic <> :type_scope:x_'='_x not
R17025:17029 compcert.common.Memtype MEM store defax
R17046:17046 compcert.common.Memtype <> v var
R17042:17044 compcert.common.Memtype <> ofs var
R17040:17040 compcert.common.Memtype <> b var
R17037:17038 compcert.common.Memtype <> m1 var
R17031:17035 compcert.common.Memtype <> chunk var
R17050:17053 Coq.Init.Datatypes <> Some constr
R17055:17056 compcert.common.Memtype <> m2 var
ax 17124:17139 MEM load_store_other
R17343:17345 Coq.Init.Logic <> :type_scope:x_'='_x not
R17321:17324 compcert.common.Memtype MEM load defax
R17339:17342 compcert.common.Memtype <> ofs' var
R17336:17337 compcert.common.Memtype <> b' var
R17333:17334 compcert.common.Memtype <> m2 var
R17326:17331 compcert.common.Memtype <> chunk' var
R17346:17349 compcert.common.Memtype MEM load defax
R17364:17367 compcert.common.Memtype <> ofs' var
R17361:17362 compcert.common.Memtype <> b' var
R17358:17359 compcert.common.Memtype <> m1 var
R17351:17356 compcert.common.Memtype <> chunk' var
R17242:17247 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17237:17240 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17235:17236 compcert.common.Memtype <> b' var
R17241:17241 compcert.common.Memtype <> b var
R17279:17284 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17272:17275 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R17252:17254 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17248:17251 compcert.common.Memtype <> ofs' var
R17255:17264 compcert.common.Memdata <> size_chunk def
R17266:17271 compcert.common.Memtype <> chunk' var
R17276:17278 compcert.common.Memtype <> ofs var
R17307:17310 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R17288:17290 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17285:17287 compcert.common.Memtype <> ofs var
R17291:17300 compcert.common.Memdata <> size_chunk def
R17302:17306 compcert.common.Memtype <> chunk var
R17311:17314 compcert.common.Memtype <> ofs' var
R17194:17196 Coq.Init.Logic <> :type_scope:x_'='_x not
R17172:17176 compcert.common.Memtype MEM store defax
R17193:17193 compcert.common.Memtype <> v var
R17189:17191 compcert.common.Memtype <> ofs var
R17187:17187 compcert.common.Memtype <> b var
R17184:17185 compcert.common.Memtype <> m1 var
R17178:17182 compcert.common.Memtype <> chunk var
R17197:17200 Coq.Init.Datatypes <> Some constr
R17202:17203 compcert.common.Memtype <> m2 var
def 17419:17439 MEM compat_pointer_chunks
R17457:17468 compcert.common.AST <> memory_chunk ind
R17497:17502 compcert.common.Memtype <> chunk2 var
R17489:17494 compcert.common.Memtype <> chunk1 var
R17514:17519 compcert.common.AST <> Mint32 constr
R17523:17528 compcert.common.AST <> Many32 constr
R17533:17538 compcert.common.AST <> Mint32 constr
R17542:17547 compcert.common.AST <> Many32 constr
R17553:17556 Coq.Init.Logic <> True ind
R17553:17556 Coq.Init.Logic <> True ind
R17553:17556 Coq.Init.Logic <> True ind
R17553:17556 Coq.Init.Logic <> True ind
R17562:17567 compcert.common.AST <> Many64 constr
R17570:17575 compcert.common.AST <> Many64 constr
R17580:17583 Coq.Init.Logic <> True ind
R17597:17601 Coq.Init.Logic <> False ind
ax 17617:17642 MEM load_store_pointer_overlap
R17873:17875 Coq.Init.Logic <> :type_scope:x_'='_x not
R17872:17872 compcert.common.Memtype <> v var
R17876:17881 compcert.common.Values <> Vundef constr
R17859:17861 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R17840:17842 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17837:17839 compcert.common.Memtype <> ofs var
R17843:17852 compcert.common.Memdata <> size_chunk def
R17854:17858 compcert.common.Memtype <> chunk var
R17862:17865 compcert.common.Memtype <> ofs' var
R17825:17827 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R17805:17807 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17801:17804 compcert.common.Memtype <> ofs' var
R17808:17817 compcert.common.Memdata <> size_chunk def
R17819:17824 compcert.common.Memtype <> chunk' var
R17828:17830 compcert.common.Memtype <> ofs var
R17788:17791 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17784:17787 compcert.common.Memtype <> ofs' var
R17792:17794 compcert.common.Memtype <> ofs var
R17769:17771 Coq.Init.Logic <> :type_scope:x_'='_x not
R17748:17751 compcert.common.Memtype MEM load defax
R17765:17768 compcert.common.Memtype <> ofs' var
R17763:17763 compcert.common.Memtype <> b var
R17760:17761 compcert.common.Memtype <> m2 var
R17753:17758 compcert.common.Memtype <> chunk' var
R17772:17775 Coq.Init.Datatypes <> Some constr
R17777:17777 compcert.common.Memtype <> v var
R17732:17734 Coq.Init.Logic <> :type_scope:x_'='_x not
R17697:17701 compcert.common.Memtype MEM store defax
R17719:17722 compcert.common.Values <> Vptr constr
R17728:17730 compcert.common.Memtype <> v_o var
R17724:17726 compcert.common.Memtype <> v_b var
R17714:17716 compcert.common.Memtype <> ofs var
R17712:17712 compcert.common.Memtype <> b var
R17709:17710 compcert.common.Memtype <> m1 var
R17703:17707 compcert.common.Memtype <> chunk var
R17735:17738 Coq.Init.Datatypes <> Some constr
R17740:17741 compcert.common.Memtype <> m2 var
ax 17890:17916 MEM load_store_pointer_mismatch
R18094:18096 Coq.Init.Logic <> :type_scope:x_'='_x not
R18093:18093 compcert.common.Memtype <> v var
R18097:18102 compcert.common.Values <> Vundef constr
R18052:18052 Coq.Init.Logic <> :type_scope:'~'_x not
R18053:18073 compcert.common.Memtype MEM compat_pointer_chunks def
R18081:18086 compcert.common.Memtype <> chunk' var
R18075:18079 compcert.common.Memtype <> chunk var
R18037:18039 Coq.Init.Logic <> :type_scope:x_'='_x not
R18017:18020 compcert.common.Memtype MEM load defax
R18034:18036 compcert.common.Memtype <> ofs var
R18032:18032 compcert.common.Memtype <> b var
R18029:18030 compcert.common.Memtype <> m2 var
R18022:18027 compcert.common.Memtype <> chunk' var
R18040:18043 Coq.Init.Datatypes <> Some constr
R18045:18045 compcert.common.Memtype <> v var
R18001:18003 Coq.Init.Logic <> :type_scope:x_'='_x not
R17966:17970 compcert.common.Memtype MEM store defax
R17988:17991 compcert.common.Values <> Vptr constr
R17997:17999 compcert.common.Memtype <> v_o var
R17993:17995 compcert.common.Memtype <> v_b var
R17983:17985 compcert.common.Memtype <> ofs var
R17981:17981 compcert.common.Memtype <> b var
R17978:17979 compcert.common.Memtype <> m1 var
R17972:17976 compcert.common.Memtype <> chunk var
R18004:18007 Coq.Init.Datatypes <> Some constr
R18009:18010 compcert.common.Memtype <> m2 var
ax 18111:18128 MEM load_pointer_store
R18273:18273 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18352:18359 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18436:18436 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18290:18293 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18275:18277 Coq.Init.Logic <> :type_scope:x_'='_x not
R18274:18274 compcert.common.Memtype <> v var
R18278:18281 compcert.common.Values <> Vptr constr
R18287:18289 compcert.common.Memtype <> v_o var
R18283:18285 compcert.common.Memtype <> v_b var
R18328:18331 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18294:18314 compcert.common.Memtype MEM compat_pointer_chunks def
R18322:18327 compcert.common.Memtype <> chunk' var
R18316:18320 compcert.common.Memtype <> chunk var
R18338:18341 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18334:18336 Coq.Init.Logic <> :type_scope:x_'='_x not
R18332:18333 compcert.common.Memtype <> b' var
R18337:18337 compcert.common.Memtype <> b var
R18346:18348 Coq.Init.Logic <> :type_scope:x_'='_x not
R18342:18345 compcert.common.Memtype <> ofs' var
R18349:18351 compcert.common.Memtype <> ofs var
R18367:18370 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18362:18365 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18360:18361 compcert.common.Memtype <> b' var
R18366:18366 compcert.common.Memtype <> b var
R18402:18405 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18395:18398 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18375:18377 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18371:18374 compcert.common.Memtype <> ofs' var
R18378:18387 compcert.common.Memdata <> size_chunk def
R18389:18394 compcert.common.Memtype <> chunk' var
R18399:18401 compcert.common.Memtype <> ofs var
R18428:18431 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18409:18411 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18406:18408 compcert.common.Memtype <> ofs var
R18412:18421 compcert.common.Memdata <> size_chunk def
R18423:18427 compcert.common.Memtype <> chunk var
R18432:18435 compcert.common.Memtype <> ofs' var
R18246:18248 Coq.Init.Logic <> :type_scope:x_'='_x not
R18224:18227 compcert.common.Memtype MEM load defax
R18242:18245 compcert.common.Memtype <> ofs' var
R18239:18240 compcert.common.Memtype <> b' var
R18236:18237 compcert.common.Memtype <> m2 var
R18229:18234 compcert.common.Memtype <> chunk' var
R18249:18252 Coq.Init.Datatypes <> Some constr
R18254:18257 compcert.common.Values <> Vptr constr
R18263:18265 compcert.common.Memtype <> v_o var
R18259:18261 compcert.common.Memtype <> v_b var
R18208:18210 Coq.Init.Logic <> :type_scope:x_'='_x not
R18186:18190 compcert.common.Memtype MEM store defax
R18207:18207 compcert.common.Memtype <> v var
R18203:18205 compcert.common.Memtype <> ofs var
R18201:18201 compcert.common.Memtype <> b var
R18198:18199 compcert.common.Memtype <> m1 var
R18192:18196 compcert.common.Memtype <> chunk var
R18211:18214 Coq.Init.Datatypes <> Some constr
R18216:18217 compcert.common.Memtype <> m2 var
ax 18493:18512 MEM loadbytes_store_same
R18620:18622 Coq.Init.Logic <> :type_scope:x_'='_x not
R18583:18591 compcert.common.Memtype MEM loadbytes defax
R18603:18612 compcert.common.Memdata <> size_chunk def
R18614:18618 compcert.common.Memtype <> chunk var
R18598:18600 compcert.common.Memtype <> ofs var
R18596:18596 compcert.common.Memtype <> b var
R18593:18594 compcert.common.Memtype <> m2 var
R18623:18626 Coq.Init.Datatypes <> Some constr
R18628:18637 compcert.common.Memdata <> encode_val def
R18645:18645 compcert.common.Memtype <> v var
R18639:18643 compcert.common.Memtype <> chunk var
R18567:18569 Coq.Init.Logic <> :type_scope:x_'='_x not
R18545:18549 compcert.common.Memtype MEM store defax
R18566:18566 compcert.common.Memtype <> v var
R18562:18564 compcert.common.Memtype <> ofs var
R18560:18560 compcert.common.Memtype <> b var
R18557:18558 compcert.common.Memtype <> m1 var
R18551:18555 compcert.common.Memtype <> chunk var
R18570:18573 Coq.Init.Datatypes <> Some constr
R18575:18576 compcert.common.Memtype <> m2 var
ax 18655:18675 MEM loadbytes_store_other
R18864:18866 Coq.Init.Logic <> :type_scope:x_'='_x not
R18842:18850 compcert.common.Memtype MEM loadbytes defax
R18863:18863 compcert.common.Memtype <> n var
R18858:18861 compcert.common.Memtype <> ofs' var
R18855:18856 compcert.common.Memtype <> b' var
R18852:18853 compcert.common.Memtype <> m2 var
R18867:18875 compcert.common.Memtype MEM loadbytes defax
R18888:18888 compcert.common.Memtype <> n var
R18883:18886 compcert.common.Memtype <> ofs' var
R18880:18881 compcert.common.Memtype <> b' var
R18877:18878 compcert.common.Memtype <> m1 var
R18773:18776 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18768:18771 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18766:18767 compcert.common.Memtype <> b' var
R18772:18772 compcert.common.Memtype <> b var
R18783:18786 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18778:18781 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18777:18777 compcert.common.Memtype <> n var
R18802:18805 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18795:18798 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18791:18793 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18787:18790 compcert.common.Memtype <> ofs' var
R18794:18794 compcert.common.Memtype <> n var
R18799:18801 compcert.common.Memtype <> ofs var
R18828:18831 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18809:18811 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18806:18808 compcert.common.Memtype <> ofs var
R18812:18821 compcert.common.Memdata <> size_chunk def
R18823:18827 compcert.common.Memtype <> chunk var
R18832:18835 compcert.common.Memtype <> ofs' var
R18730:18732 Coq.Init.Logic <> :type_scope:x_'='_x not
R18708:18712 compcert.common.Memtype MEM store defax
R18729:18729 compcert.common.Memtype <> v var
R18725:18727 compcert.common.Memtype <> ofs var
R18723:18723 compcert.common.Memtype <> b var
R18720:18721 compcert.common.Memtype <> m1 var
R18714:18718 compcert.common.Memtype <> chunk var
R18733:18736 Coq.Init.Datatypes <> Some constr
R18738:18739 compcert.common.Memtype <> m2 var
ax 18995:19017 MEM store_signed_unsigned_8
R19069:19071 Coq.Init.Logic <> :type_scope:x_'='_x not
R19042:19046 compcert.common.Memtype MEM store defax
R19068:19068 compcert.common.Memtype <> v var
R19064:19066 compcert.common.Memtype <> ofs var
R19062:19062 compcert.common.Memtype <> b var
R19060:19060 compcert.common.Memtype <> m var
R19048:19058 compcert.common.AST <> Mint8signed constr
R19072:19076 compcert.common.Memtype MEM store defax
R19100:19100 compcert.common.Memtype <> v var
R19096:19098 compcert.common.Memtype <> ofs var
R19094:19094 compcert.common.Memtype <> b var
R19092:19092 compcert.common.Memtype <> m var
R19078:19090 compcert.common.AST <> Mint8unsigned constr
ax 19109:19132 MEM store_signed_unsigned_16
R19185:19187 Coq.Init.Logic <> :type_scope:x_'='_x not
R19157:19161 compcert.common.Memtype MEM store defax
R19184:19184 compcert.common.Memtype <> v var
R19180:19182 compcert.common.Memtype <> ofs var
R19178:19178 compcert.common.Memtype <> b var
R19176:19176 compcert.common.Memtype <> m var
R19163:19174 compcert.common.AST <> Mint16signed constr
R19188:19192 compcert.common.Memtype MEM store defax
R19217:19217 compcert.common.Memtype <> v var
R19213:19215 compcert.common.Memtype <> ofs var
R19211:19211 compcert.common.Memtype <> b var
R19209:19209 compcert.common.Memtype <> m var
R19194:19207 compcert.common.AST <> Mint16unsigned constr
ax 19226:19244 MEM store_int8_zero_ext
R19322:19326 Coq.Init.Logic <> :type_scope:x_'='_x not
R19269:19273 compcert.common.Memtype MEM store defax
R19298:19301 compcert.common.Values <> Vint constr
R19304:19315 compcert.lib.Integers Int zero_ext def
R19319:19319 compcert.common.Memtype <> n var
R19293:19295 compcert.common.Memtype <> ofs var
R19291:19291 compcert.common.Memtype <> b var
R19289:19289 compcert.common.Memtype <> m var
R19275:19287 compcert.common.AST <> Mint8unsigned constr
R19327:19331 compcert.common.Memtype MEM store defax
R19356:19359 compcert.common.Values <> Vint constr
R19361:19361 compcert.common.Memtype <> n var
R19351:19353 compcert.common.Memtype <> ofs var
R19349:19349 compcert.common.Memtype <> b var
R19347:19347 compcert.common.Memtype <> m var
R19333:19345 compcert.common.AST <> Mint8unsigned constr
ax 19371:19389 MEM store_int8_sign_ext
R19465:19469 Coq.Init.Logic <> :type_scope:x_'='_x not
R19414:19418 compcert.common.Memtype MEM store defax
R19441:19444 compcert.common.Values <> Vint constr
R19447:19458 compcert.lib.Integers Int sign_ext def
R19462:19462 compcert.common.Memtype <> n var
R19436:19438 compcert.common.Memtype <> ofs var
R19434:19434 compcert.common.Memtype <> b var
R19432:19432 compcert.common.Memtype <> m var
R19420:19430 compcert.common.AST <> Mint8signed constr
R19470:19474 compcert.common.Memtype MEM store defax
R19497:19500 compcert.common.Values <> Vint constr
R19502:19502 compcert.common.Memtype <> n var
R19492:19494 compcert.common.Memtype <> ofs var
R19490:19490 compcert.common.Memtype <> b var
R19488:19488 compcert.common.Memtype <> m var
R19476:19486 compcert.common.AST <> Mint8signed constr
ax 19512:19531 MEM store_int16_zero_ext
R19611:19615 Coq.Init.Logic <> :type_scope:x_'='_x not
R19556:19560 compcert.common.Memtype MEM store defax
R19586:19589 compcert.common.Values <> Vint constr
R19592:19603 compcert.lib.Integers Int zero_ext def
R19608:19608 compcert.common.Memtype <> n var
R19581:19583 compcert.common.Memtype <> ofs var
R19579:19579 compcert.common.Memtype <> b var
R19577:19577 compcert.common.Memtype <> m var
R19562:19575 compcert.common.AST <> Mint16unsigned constr
R19616:19620 compcert.common.Memtype MEM store defax
R19646:19649 compcert.common.Values <> Vint constr
R19651:19651 compcert.common.Memtype <> n var
R19641:19643 compcert.common.Memtype <> ofs var
R19639:19639 compcert.common.Memtype <> b var
R19637:19637 compcert.common.Memtype <> m var
R19622:19635 compcert.common.AST <> Mint16unsigned constr
ax 19661:19680 MEM store_int16_sign_ext
R19758:19762 Coq.Init.Logic <> :type_scope:x_'='_x not
R19705:19709 compcert.common.Memtype MEM store defax
R19733:19736 compcert.common.Values <> Vint constr
R19739:19750 compcert.lib.Integers Int sign_ext def
R19755:19755 compcert.common.Memtype <> n var
R19728:19730 compcert.common.Memtype <> ofs var
R19726:19726 compcert.common.Memtype <> b var
R19724:19724 compcert.common.Memtype <> m var
R19711:19722 compcert.common.AST <> Mint16signed constr
R19763:19767 compcert.common.Memtype MEM store defax
R19791:19794 compcert.common.Values <> Vint constr
R19796:19796 compcert.common.Memtype <> n var
R19786:19788 compcert.common.Memtype <> ofs var
R19784:19784 compcert.common.Memtype <> b var
R19782:19782 compcert.common.Memtype <> m var
R19769:19780 compcert.common.AST <> Mint16signed constr
ax 20044:20064 MEM range_perm_storebytes
R20164:20165 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20168:20170 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20174:20176 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20212:20213 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20202:20204 Coq.Init.Logic <> :type_scope:x_'='_x not
R20177:20186 compcert.common.Memtype MEM storebytes defax
R20197:20201 compcert.common.Memtype <> bytes var
R20193:20195 compcert.common.Memtype <> ofs var
R20191:20191 compcert.common.Memtype <> b var
R20188:20189 compcert.common.Memtype <> m1 var
R20205:20208 Coq.Init.Datatypes <> Some constr
R20171:20173 compcert.common.Memtype MEM mem defax
R20094:20103 compcert.common.Memtype MEM range_perm def
R20150:20157 compcert.common.Memtype MEM Writable constr
R20146:20148 compcert.common.Memtype MEM Cur constr
R20118:20120 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20115:20117 compcert.common.Memtype <> ofs var
R20121:20128 Coq.ZArith.BinInt <> Z_of_nat syndef
R20131:20136 Coq.Init.Datatypes <> length def
R20138:20142 compcert.common.Memtype <> bytes var
R20110:20112 compcert.common.Memtype <> ofs var
R20108:20108 compcert.common.Memtype <> b var
R20105:20106 compcert.common.Memtype <> m1 var
ax 20222:20242 MEM storebytes_range_perm
R20314:20323 compcert.common.Memtype MEM range_perm def
R20370:20377 compcert.common.Memtype MEM Writable constr
R20366:20368 compcert.common.Memtype MEM Cur constr
R20338:20340 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20335:20337 compcert.common.Memtype <> ofs var
R20341:20348 Coq.ZArith.BinInt <> Z_of_nat syndef
R20351:20356 Coq.Init.Datatypes <> length def
R20358:20362 compcert.common.Memtype <> bytes var
R20330:20332 compcert.common.Memtype <> ofs var
R20328:20328 compcert.common.Memtype <> b var
R20325:20326 compcert.common.Memtype <> m1 var
R20298:20300 Coq.Init.Logic <> :type_scope:x_'='_x not
R20273:20282 compcert.common.Memtype MEM storebytes defax
R20293:20297 compcert.common.Memtype <> bytes var
R20289:20291 compcert.common.Memtype <> ofs var
R20287:20287 compcert.common.Memtype <> b var
R20284:20285 compcert.common.Memtype <> m1 var
R20301:20304 Coq.Init.Datatypes <> Some constr
R20306:20307 compcert.common.Memtype <> m2 var
ax 20386:20402 MEM perm_storebytes_1
R20517:20520 compcert.common.Memtype MEM perm defax
R20535:20535 compcert.common.Memtype <> p var
R20533:20533 compcert.common.Memtype <> k var
R20528:20531 compcert.common.Memtype <> ofs' var
R20525:20526 compcert.common.Memtype <> b' var
R20522:20523 compcert.common.Memtype <> m2 var
R20494:20497 compcert.common.Memtype MEM perm defax
R20512:20512 compcert.common.Memtype <> p var
R20510:20510 compcert.common.Memtype <> k var
R20505:20508 compcert.common.Memtype <> ofs' var
R20502:20503 compcert.common.Memtype <> b' var
R20499:20500 compcert.common.Memtype <> m1 var
R20458:20460 Coq.Init.Logic <> :type_scope:x_'='_x not
R20433:20442 compcert.common.Memtype MEM storebytes defax
R20453:20457 compcert.common.Memtype <> bytes var
R20449:20451 compcert.common.Memtype <> ofs var
R20447:20447 compcert.common.Memtype <> b var
R20444:20445 compcert.common.Memtype <> m1 var
R20461:20464 Coq.Init.Datatypes <> Some constr
R20466:20467 compcert.common.Memtype <> m2 var
ax 20544:20560 MEM perm_storebytes_2
R20675:20678 compcert.common.Memtype MEM perm defax
R20693:20693 compcert.common.Memtype <> p var
R20691:20691 compcert.common.Memtype <> k var
R20686:20689 compcert.common.Memtype <> ofs' var
R20683:20684 compcert.common.Memtype <> b' var
R20680:20681 compcert.common.Memtype <> m1 var
R20652:20655 compcert.common.Memtype MEM perm defax
R20670:20670 compcert.common.Memtype <> p var
R20668:20668 compcert.common.Memtype <> k var
R20663:20666 compcert.common.Memtype <> ofs' var
R20660:20661 compcert.common.Memtype <> b' var
R20657:20658 compcert.common.Memtype <> m2 var
R20616:20618 Coq.Init.Logic <> :type_scope:x_'='_x not
R20591:20600 compcert.common.Memtype MEM storebytes defax
R20611:20615 compcert.common.Memtype <> bytes var
R20607:20609 compcert.common.Memtype <> ofs var
R20605:20605 compcert.common.Memtype <> b var
R20602:20603 compcert.common.Memtype <> m1 var
R20619:20622 Coq.Init.Datatypes <> Some constr
R20624:20625 compcert.common.Memtype <> m2 var
ax 20702:20726 MEM storebytes_valid_access_1
R20861:20872 compcert.common.Memtype MEM valid_access def
R20892:20892 compcert.common.Memtype <> p var
R20887:20890 compcert.common.Memtype <> ofs' var
R20884:20885 compcert.common.Memtype <> b' var
R20877:20882 compcert.common.Memtype <> chunk' var
R20874:20875 compcert.common.Memtype <> m2 var
R20825:20836 compcert.common.Memtype MEM valid_access def
R20856:20856 compcert.common.Memtype <> p var
R20851:20854 compcert.common.Memtype <> ofs' var
R20848:20849 compcert.common.Memtype <> b' var
R20841:20846 compcert.common.Memtype <> chunk' var
R20838:20839 compcert.common.Memtype <> m1 var
R20782:20784 Coq.Init.Logic <> :type_scope:x_'='_x not
R20757:20766 compcert.common.Memtype MEM storebytes defax
R20777:20781 compcert.common.Memtype <> bytes var
R20773:20775 compcert.common.Memtype <> ofs var
R20771:20771 compcert.common.Memtype <> b var
R20768:20769 compcert.common.Memtype <> m1 var
R20785:20788 Coq.Init.Datatypes <> Some constr
R20790:20791 compcert.common.Memtype <> m2 var
ax 20901:20925 MEM storebytes_valid_access_2
R21060:21071 compcert.common.Memtype MEM valid_access def
R21091:21091 compcert.common.Memtype <> p var
R21086:21089 compcert.common.Memtype <> ofs' var
R21083:21084 compcert.common.Memtype <> b' var
R21076:21081 compcert.common.Memtype <> chunk' var
R21073:21074 compcert.common.Memtype <> m1 var
R21024:21035 compcert.common.Memtype MEM valid_access def
R21055:21055 compcert.common.Memtype <> p var
R21050:21053 compcert.common.Memtype <> ofs' var
R21047:21048 compcert.common.Memtype <> b' var
R21040:21045 compcert.common.Memtype <> chunk' var
R21037:21038 compcert.common.Memtype <> m2 var
R20981:20983 Coq.Init.Logic <> :type_scope:x_'='_x not
R20956:20965 compcert.common.Memtype MEM storebytes defax
R20976:20980 compcert.common.Memtype <> bytes var
R20972:20974 compcert.common.Memtype <> ofs var
R20970:20970 compcert.common.Memtype <> b var
R20967:20968 compcert.common.Memtype <> m1 var
R20984:20987 Coq.Init.Datatypes <> Some constr
R20989:20990 compcert.common.Memtype <> m2 var
ax 21100:21119 MEM nextblock_storebytes
R21203:21205 Coq.Init.Logic <> :type_scope:x_'='_x not
R21191:21199 compcert.common.Memtype MEM nextblock defax
R21201:21202 compcert.common.Memtype <> m2 var
R21206:21214 compcert.common.Memtype MEM nextblock defax
R21216:21217 compcert.common.Memtype <> m1 var
R21175:21177 Coq.Init.Logic <> :type_scope:x_'='_x not
R21150:21159 compcert.common.Memtype MEM storebytes defax
R21170:21174 compcert.common.Memtype <> bytes var
R21166:21168 compcert.common.Memtype <> ofs var
R21164:21164 compcert.common.Memtype <> b var
R21161:21162 compcert.common.Memtype <> m1 var
R21178:21181 Coq.Init.Datatypes <> Some constr
R21183:21184 compcert.common.Memtype <> m2 var
ax 21226:21249 MEM storebytes_valid_block_1
R21353:21363 compcert.common.Memtype MEM valid_block def
R21368:21369 compcert.common.Memtype <> b' var
R21365:21366 compcert.common.Memtype <> m2 var
R21332:21342 compcert.common.Memtype MEM valid_block def
R21347:21348 compcert.common.Memtype <> b' var
R21344:21345 compcert.common.Memtype <> m1 var
R21305:21307 Coq.Init.Logic <> :type_scope:x_'='_x not
R21280:21289 compcert.common.Memtype MEM storebytes defax
R21300:21304 compcert.common.Memtype <> bytes var
R21296:21298 compcert.common.Memtype <> ofs var
R21294:21294 compcert.common.Memtype <> b var
R21291:21292 compcert.common.Memtype <> m1 var
R21308:21311 Coq.Init.Datatypes <> Some constr
R21313:21314 compcert.common.Memtype <> m2 var
ax 21378:21401 MEM storebytes_valid_block_2
R21505:21515 compcert.common.Memtype MEM valid_block def
R21520:21521 compcert.common.Memtype <> b' var
R21517:21518 compcert.common.Memtype <> m1 var
R21484:21494 compcert.common.Memtype MEM valid_block def
R21499:21500 compcert.common.Memtype <> b' var
R21496:21497 compcert.common.Memtype <> m2 var
R21457:21459 Coq.Init.Logic <> :type_scope:x_'='_x not
R21432:21441 compcert.common.Memtype MEM storebytes defax
R21452:21456 compcert.common.Memtype <> bytes var
R21448:21450 compcert.common.Memtype <> ofs var
R21446:21446 compcert.common.Memtype <> b var
R21443:21444 compcert.common.Memtype <> m1 var
R21460:21463 Coq.Init.Datatypes <> Some constr
R21465:21466 compcert.common.Memtype <> m2 var
ax 21585:21600 MEM storebytes_store
R21744:21746 Coq.Init.Logic <> :type_scope:x_'='_x not
R21722:21726 compcert.common.Memtype MEM store defax
R21743:21743 compcert.common.Memtype <> v var
R21739:21741 compcert.common.Memtype <> ofs var
R21737:21737 compcert.common.Memtype <> b var
R21734:21735 compcert.common.Memtype <> m1 var
R21728:21732 compcert.common.Memtype <> chunk var
R21747:21750 Coq.Init.Datatypes <> Some constr
R21752:21753 compcert.common.Memtype <> m2 var
R21691:21691 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R21709:21711 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R21715:21715 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R21692:21702 compcert.common.Memdata <> align_chunk def
R21704:21708 compcert.common.Memtype <> chunk var
R21712:21714 compcert.common.Memtype <> ofs var
R21675:21677 Coq.Init.Logic <> :type_scope:x_'='_x not
R21635:21644 compcert.common.Memtype MEM storebytes defax
R21656:21665 compcert.common.Memdata <> encode_val def
R21673:21673 compcert.common.Memtype <> v var
R21667:21671 compcert.common.Memtype <> chunk var
R21651:21653 compcert.common.Memtype <> ofs var
R21649:21649 compcert.common.Memtype <> b var
R21646:21647 compcert.common.Memtype <> m1 var
R21678:21681 Coq.Init.Datatypes <> Some constr
R21683:21684 compcert.common.Memtype <> m2 var
ax 21763:21778 MEM store_storebytes
R21891:21893 Coq.Init.Logic <> :type_scope:x_'='_x not
R21851:21860 compcert.common.Memtype MEM storebytes defax
R21872:21881 compcert.common.Memdata <> encode_val def
R21889:21889 compcert.common.Memtype <> v var
R21883:21887 compcert.common.Memtype <> chunk var
R21867:21869 compcert.common.Memtype <> ofs var
R21865:21865 compcert.common.Memtype <> b var
R21862:21863 compcert.common.Memtype <> m1 var
R21894:21897 Coq.Init.Datatypes <> Some constr
R21899:21900 compcert.common.Memtype <> m2 var
R21835:21837 Coq.Init.Logic <> :type_scope:x_'='_x not
R21813:21817 compcert.common.Memtype MEM store defax
R21834:21834 compcert.common.Memtype <> v var
R21830:21832 compcert.common.Memtype <> ofs var
R21828:21828 compcert.common.Memtype <> b var
R21825:21826 compcert.common.Memtype <> m1 var
R21819:21823 compcert.common.Memtype <> chunk var
R21838:21841 Coq.Init.Datatypes <> Some constr
R21843:21844 compcert.common.Memtype <> m2 var
ax 21941:21965 MEM loadbytes_storebytes_same
R22081:22083 Coq.Init.Logic <> :type_scope:x_'='_x not
R22037:22045 compcert.common.Memtype MEM loadbytes defax
R22057:22064 Coq.ZArith.BinInt <> Z_of_nat syndef
R22067:22072 Coq.Init.Datatypes <> length def
R22074:22078 compcert.common.Memtype <> bytes var
R22052:22054 compcert.common.Memtype <> ofs var
R22050:22050 compcert.common.Memtype <> b var
R22047:22048 compcert.common.Memtype <> m2 var
R22084:22087 Coq.Init.Datatypes <> Some constr
R22089:22093 compcert.common.Memtype <> bytes var
R22021:22023 Coq.Init.Logic <> :type_scope:x_'='_x not
R21996:22005 compcert.common.Memtype MEM storebytes defax
R22016:22020 compcert.common.Memtype <> bytes var
R22012:22014 compcert.common.Memtype <> ofs var
R22010:22010 compcert.common.Memtype <> b var
R22007:22008 compcert.common.Memtype <> m1 var
R22024:22027 Coq.Init.Datatypes <> Some constr
R22029:22030 compcert.common.Memtype <> m2 var
ax 22102:22127 MEM loadbytes_storebytes_other
R22338:22340 Coq.Init.Logic <> :type_scope:x_'='_x not
R22314:22322 compcert.common.Memtype MEM loadbytes defax
R22335:22337 compcert.common.Memtype <> len var
R22330:22333 compcert.common.Memtype <> ofs' var
R22327:22328 compcert.common.Memtype <> b' var
R22324:22325 compcert.common.Memtype <> m2 var
R22341:22349 compcert.common.Memtype MEM loadbytes defax
R22362:22364 compcert.common.Memtype <> len var
R22357:22360 compcert.common.Memtype <> ofs' var
R22354:22355 compcert.common.Memtype <> b' var
R22351:22352 compcert.common.Memtype <> m1 var
R22242:22247 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22237:22240 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R22235:22236 compcert.common.Memtype <> b' var
R22241:22241 compcert.common.Memtype <> b var
R22265:22270 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22258:22261 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22252:22254 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22248:22251 compcert.common.Memtype <> ofs' var
R22255:22257 compcert.common.Memtype <> len var
R22262:22264 compcert.common.Memtype <> ofs var
R22300:22303 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22274:22276 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22271:22273 compcert.common.Memtype <> ofs var
R22277:22284 Coq.ZArith.BinInt <> Z_of_nat syndef
R22287:22292 Coq.Init.Datatypes <> length def
R22294:22298 compcert.common.Memtype <> bytes var
R22304:22307 compcert.common.Memtype <> ofs' var
R22224:22227 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R22221:22223 compcert.common.Memtype <> len var
R22183:22185 Coq.Init.Logic <> :type_scope:x_'='_x not
R22158:22167 compcert.common.Memtype MEM storebytes defax
R22178:22182 compcert.common.Memtype <> bytes var
R22174:22176 compcert.common.Memtype <> ofs var
R22172:22172 compcert.common.Memtype <> b var
R22169:22170 compcert.common.Memtype <> m1 var
R22186:22189 Coq.Init.Datatypes <> Some constr
R22191:22192 compcert.common.Memtype <> m2 var
ax 22373:22393 MEM load_storebytes_other
R22602:22604 Coq.Init.Logic <> :type_scope:x_'='_x not
R22581:22584 compcert.common.Memtype MEM load defax
R22598:22601 compcert.common.Memtype <> ofs' var
R22595:22596 compcert.common.Memtype <> b' var
R22592:22593 compcert.common.Memtype <> m2 var
R22586:22590 compcert.common.Memtype <> chunk var
R22605:22608 compcert.common.Memtype MEM load defax
R22622:22625 compcert.common.Memtype <> ofs' var
R22619:22620 compcert.common.Memtype <> b' var
R22616:22617 compcert.common.Memtype <> m1 var
R22610:22614 compcert.common.Memtype <> chunk var
R22496:22501 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22491:22494 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R22489:22490 compcert.common.Memtype <> b' var
R22495:22495 compcert.common.Memtype <> b var
R22532:22537 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22525:22528 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22506:22508 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22502:22505 compcert.common.Memtype <> ofs' var
R22509:22518 compcert.common.Memdata <> size_chunk def
R22520:22524 compcert.common.Memtype <> chunk var
R22529:22531 compcert.common.Memtype <> ofs var
R22567:22570 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22541:22543 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22538:22540 compcert.common.Memtype <> ofs var
R22544:22551 Coq.ZArith.BinInt <> Z_of_nat syndef
R22554:22559 Coq.Init.Datatypes <> length def
R22561:22565 compcert.common.Memtype <> bytes var
R22571:22574 compcert.common.Memtype <> ofs' var
R22449:22451 Coq.Init.Logic <> :type_scope:x_'='_x not
R22424:22433 compcert.common.Memtype MEM storebytes defax
R22444:22448 compcert.common.Memtype <> bytes var
R22440:22442 compcert.common.Memtype <> ofs var
R22438:22438 compcert.common.Memtype <> b var
R22435:22436 compcert.common.Memtype <> m1 var
R22452:22455 Coq.Init.Datatypes <> Some constr
R22457:22458 compcert.common.Memtype <> m2 var
ax 22715:22731 MEM storebytes_concat
R22922:22924 Coq.Init.Logic <> :type_scope:x_'='_x not
R22885:22894 compcert.common.Memtype MEM storebytes defax
R22911:22914 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R22905:22910 compcert.common.Memtype <> bytes1 var
R22915:22920 compcert.common.Memtype <> bytes2 var
R22900:22902 compcert.common.Memtype <> ofs var
R22898:22898 compcert.common.Memtype <> b var
R22896:22896 compcert.common.Memtype <> m var
R22925:22928 Coq.Init.Datatypes <> Some constr
R22930:22931 compcert.common.Memtype <> m2 var
R22869:22871 Coq.Init.Logic <> :type_scope:x_'='_x not
R22815:22824 compcert.common.Memtype MEM storebytes defax
R22863:22868 compcert.common.Memtype <> bytes2 var
R22835:22837 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22832:22834 compcert.common.Memtype <> ofs var
R22838:22845 Coq.ZArith.BinInt <> Z_of_nat syndef
R22847:22852 Coq.Init.Datatypes <> length def
R22854:22859 compcert.common.Memtype <> bytes1 var
R22829:22829 compcert.common.Memtype <> b var
R22826:22827 compcert.common.Memtype <> m1 var
R22872:22875 Coq.Init.Datatypes <> Some constr
R22877:22878 compcert.common.Memtype <> m2 var
R22799:22801 Coq.Init.Logic <> :type_scope:x_'='_x not
R22774:22783 compcert.common.Memtype MEM storebytes defax
R22793:22798 compcert.common.Memtype <> bytes1 var
R22789:22791 compcert.common.Memtype <> ofs var
R22787:22787 compcert.common.Memtype <> b var
R22785:22785 compcert.common.Memtype <> m var
R22802:22805 Coq.Init.Datatypes <> Some constr
R22807:22808 compcert.common.Memtype <> m1 var
ax 22940:22955 MEM storebytes_split
R23048:23054 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23057:23063 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23099:23104 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23089:23091 Coq.Init.Logic <> :type_scope:x_'='_x not
R23064:23073 compcert.common.Memtype MEM storebytes defax
R23083:23088 compcert.common.Memtype <> bytes1 var
R23079:23081 compcert.common.Memtype <> ofs var
R23077:23077 compcert.common.Memtype <> b var
R23075:23075 compcert.common.Memtype <> m var
R23092:23095 Coq.Init.Datatypes <> Some constr
R23097:23098 compcert.common.Memtype <> m1 var
R23159:23161 Coq.Init.Logic <> :type_scope:x_'='_x not
R23105:23114 compcert.common.Memtype MEM storebytes defax
R23153:23158 compcert.common.Memtype <> bytes2 var
R23125:23127 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R23122:23124 compcert.common.Memtype <> ofs var
R23128:23135 Coq.ZArith.BinInt <> Z_of_nat syndef
R23137:23142 Coq.Init.Datatypes <> length def
R23144:23149 compcert.common.Memtype <> bytes1 var
R23119:23119 compcert.common.Memtype <> b var
R23116:23117 compcert.common.Memtype <> m1 var
R23162:23165 Coq.Init.Datatypes <> Some constr
R23167:23168 compcert.common.Memtype <> m2 var
R23032:23034 Coq.Init.Logic <> :type_scope:x_'='_x not
R22995:23004 compcert.common.Memtype MEM storebytes defax
R23021:23024 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23015:23020 compcert.common.Memtype <> bytes1 var
R23025:23030 compcert.common.Memtype <> bytes2 var
R23010:23012 compcert.common.Memtype <> ofs var
R23008:23008 compcert.common.Memtype <> b var
R23006:23006 compcert.common.Memtype <> m var
R23035:23038 Coq.Init.Datatypes <> Some constr
R23040:23041 compcert.common.Memtype <> m2 var
ax 23315:23326 MEM alloc_result
R23384:23386 Coq.Init.Logic <> :type_scope:x_'='_x not
R23383:23383 compcert.common.Memtype <> b var
R23387:23395 compcert.common.Memtype MEM nextblock defax
R23397:23398 compcert.common.Memtype <> m1 var
R23367:23369 Coq.Init.Logic <> :type_scope:x_'='_x not
R23353:23357 compcert.common.Memtype MEM alloc defax
R23365:23366 compcert.common.Memtype <> hi var
R23362:23363 compcert.common.Memtype <> lo var
R23359:23360 compcert.common.Memtype <> m1 var
R23370:23370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23373:23374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23376:23376 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23371:23372 compcert.common.Memtype <> m2 var
R23375:23375 compcert.common.Memtype <> b var
ax 23453:23467 MEM nextblock_alloc
R23536:23538 Coq.Init.Logic <> :type_scope:x_'='_x not
R23524:23532 compcert.common.Memtype MEM nextblock defax
R23534:23535 compcert.common.Memtype <> m2 var
R23539:23543 Coq.PArith.BinPos <> Psucc syndef
R23546:23554 compcert.common.Memtype MEM nextblock defax
R23556:23557 compcert.common.Memtype <> m1 var
R23508:23510 Coq.Init.Logic <> :type_scope:x_'='_x not
R23494:23498 compcert.common.Memtype MEM alloc defax
R23506:23507 compcert.common.Memtype <> hi var
R23503:23504 compcert.common.Memtype <> lo var
R23500:23501 compcert.common.Memtype <> m1 var
R23511:23511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23514:23515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23517:23517 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23512:23513 compcert.common.Memtype <> m2 var
R23516:23516 compcert.common.Memtype <> b var
ax 23568:23584 MEM valid_block_alloc
R23673:23683 compcert.common.Memtype MEM valid_block def
R23688:23689 compcert.common.Memtype <> b' var
R23685:23686 compcert.common.Memtype <> m2 var
R23652:23662 compcert.common.Memtype MEM valid_block def
R23667:23668 compcert.common.Memtype <> b' var
R23664:23665 compcert.common.Memtype <> m1 var
R23625:23627 Coq.Init.Logic <> :type_scope:x_'='_x not
R23611:23615 compcert.common.Memtype MEM alloc defax
R23623:23624 compcert.common.Memtype <> hi var
R23620:23621 compcert.common.Memtype <> lo var
R23617:23618 compcert.common.Memtype <> m1 var
R23628:23628 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23631:23632 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23634:23634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23629:23630 compcert.common.Memtype <> m2 var
R23633:23633 compcert.common.Memtype <> b var
ax 23698:23714 MEM fresh_block_alloc
R23771:23772 Coq.Init.Logic <> :type_scope:'~'_x not
R23789:23789 Coq.Init.Logic <> :type_scope:'~'_x not
R23773:23783 compcert.common.Memtype MEM valid_block def
R23788:23788 compcert.common.Memtype <> b var
R23785:23786 compcert.common.Memtype <> m1 var
R23755:23757 Coq.Init.Logic <> :type_scope:x_'='_x not
R23741:23745 compcert.common.Memtype MEM alloc defax
R23753:23754 compcert.common.Memtype <> hi var
R23750:23751 compcert.common.Memtype <> lo var
R23747:23748 compcert.common.Memtype <> m1 var
R23758:23758 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23761:23762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23764:23764 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23759:23760 compcert.common.Memtype <> m2 var
R23763:23763 compcert.common.Memtype <> b var
ax 23798:23812 MEM valid_new_block
R23869:23879 compcert.common.Memtype MEM valid_block def
R23884:23884 compcert.common.Memtype <> b var
R23881:23882 compcert.common.Memtype <> m2 var
R23853:23855 Coq.Init.Logic <> :type_scope:x_'='_x not
R23839:23843 compcert.common.Memtype MEM alloc defax
R23851:23852 compcert.common.Memtype <> hi var
R23848:23849 compcert.common.Memtype <> lo var
R23845:23846 compcert.common.Memtype <> m1 var
R23856:23856 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23859:23860 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23862:23862 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23857:23858 compcert.common.Memtype <> m2 var
R23861:23861 compcert.common.Memtype <> b var
ax 23893:23913 MEM valid_block_alloc_inv
R24008:24011 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24004:24006 Coq.Init.Logic <> :type_scope:x_'='_x not
R24002:24003 compcert.common.Memtype <> b' var
R24007:24007 compcert.common.Memtype <> b var
R24012:24022 compcert.common.Memtype MEM valid_block def
R24027:24028 compcert.common.Memtype <> b' var
R24024:24025 compcert.common.Memtype <> m1 var
R23981:23991 compcert.common.Memtype MEM valid_block def
R23996:23997 compcert.common.Memtype <> b' var
R23993:23994 compcert.common.Memtype <> m2 var
R23954:23956 Coq.Init.Logic <> :type_scope:x_'='_x not
R23940:23944 compcert.common.Memtype MEM alloc defax
R23952:23953 compcert.common.Memtype <> hi var
R23949:23950 compcert.common.Memtype <> lo var
R23946:23947 compcert.common.Memtype <> m1 var
R23957:23957 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23960:23961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23963:23963 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23958:23959 compcert.common.Memtype <> m2 var
R23962:23962 compcert.common.Memtype <> b var
ax 24080:24091 MEM perm_alloc_1
R24189:24192 compcert.common.Memtype MEM perm defax
R24206:24206 compcert.common.Memtype <> p var
R24204:24204 compcert.common.Memtype <> k var
R24200:24202 compcert.common.Memtype <> ofs var
R24197:24198 compcert.common.Memtype <> b' var
R24194:24195 compcert.common.Memtype <> m2 var
R24167:24170 compcert.common.Memtype MEM perm defax
R24184:24184 compcert.common.Memtype <> p var
R24182:24182 compcert.common.Memtype <> k var
R24178:24180 compcert.common.Memtype <> ofs var
R24175:24176 compcert.common.Memtype <> b' var
R24172:24173 compcert.common.Memtype <> m1 var
R24132:24134 Coq.Init.Logic <> :type_scope:x_'='_x not
R24118:24122 compcert.common.Memtype MEM alloc defax
R24130:24131 compcert.common.Memtype <> hi var
R24127:24128 compcert.common.Memtype <> lo var
R24124:24125 compcert.common.Memtype <> m1 var
R24135:24135 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24138:24139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24141:24141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24136:24137 compcert.common.Memtype <> m2 var
R24140:24140 compcert.common.Memtype <> b var
ax 24215:24226 MEM perm_alloc_2
R24315:24318 compcert.common.Memtype MEM perm defax
R24331:24338 compcert.common.Memtype MEM Freeable constr
R24329:24329 compcert.common.Memtype <> k var
R24325:24327 compcert.common.Memtype <> ofs var
R24323:24323 compcert.common.Memtype <> b var
R24320:24321 compcert.common.Memtype <> m2 var
R24299:24302 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24306:24308 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24297:24298 compcert.common.Memtype <> lo var
R24303:24305 compcert.common.Memtype <> ofs var
R24303:24305 compcert.common.Memtype <> ofs var
R24309:24310 compcert.common.Memtype <> hi var
R24267:24269 Coq.Init.Logic <> :type_scope:x_'='_x not
R24253:24257 compcert.common.Memtype MEM alloc defax
R24265:24266 compcert.common.Memtype <> hi var
R24262:24263 compcert.common.Memtype <> lo var
R24259:24260 compcert.common.Memtype <> m1 var
R24270:24270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24273:24274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24276:24276 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24271:24272 compcert.common.Memtype <> m2 var
R24275:24275 compcert.common.Memtype <> b var
ax 24347:24358 MEM perm_alloc_3
R24454:24457 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24461:24463 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24452:24453 compcert.common.Memtype <> lo var
R24458:24460 compcert.common.Memtype <> ofs var
R24458:24460 compcert.common.Memtype <> ofs var
R24464:24465 compcert.common.Memtype <> hi var
R24431:24434 compcert.common.Memtype MEM perm defax
R24447:24447 compcert.common.Memtype <> p var
R24445:24445 compcert.common.Memtype <> k var
R24441:24443 compcert.common.Memtype <> ofs var
R24439:24439 compcert.common.Memtype <> b var
R24436:24437 compcert.common.Memtype <> m2 var
R24399:24401 Coq.Init.Logic <> :type_scope:x_'='_x not
R24385:24389 compcert.common.Memtype MEM alloc defax
R24397:24398 compcert.common.Memtype <> hi var
R24394:24395 compcert.common.Memtype <> lo var
R24391:24392 compcert.common.Memtype <> m1 var
R24402:24402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24405:24406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24408:24408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24403:24404 compcert.common.Memtype <> m2 var
R24407:24407 compcert.common.Memtype <> b var
ax 24474:24485 MEM perm_alloc_4
R24594:24597 compcert.common.Memtype MEM perm defax
R24611:24611 compcert.common.Memtype <> p var
R24609:24609 compcert.common.Memtype <> k var
R24605:24607 compcert.common.Memtype <> ofs var
R24602:24603 compcert.common.Memtype <> b' var
R24599:24600 compcert.common.Memtype <> m1 var
R24585:24588 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R24583:24584 compcert.common.Memtype <> b' var
R24589:24589 compcert.common.Memtype <> b var
R24561:24564 compcert.common.Memtype MEM perm defax
R24578:24578 compcert.common.Memtype <> p var
R24576:24576 compcert.common.Memtype <> k var
R24572:24574 compcert.common.Memtype <> ofs var
R24569:24570 compcert.common.Memtype <> b' var
R24566:24567 compcert.common.Memtype <> m2 var
R24526:24528 Coq.Init.Logic <> :type_scope:x_'='_x not
R24512:24516 compcert.common.Memtype MEM alloc defax
R24524:24525 compcert.common.Memtype <> hi var
R24521:24522 compcert.common.Memtype <> lo var
R24518:24519 compcert.common.Memtype <> m1 var
R24529:24529 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24532:24533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24535:24535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24530:24531 compcert.common.Memtype <> m2 var
R24534:24534 compcert.common.Memtype <> b var
ax 24620:24633 MEM perm_alloc_inv
R24739:24746 compcert.common.Values <> eq_block def
R24751:24751 compcert.common.Memtype <> b var
R24748:24749 compcert.common.Memtype <> b' var
R24778:24781 compcert.common.Memtype MEM perm defax
R24795:24795 compcert.common.Memtype <> p var
R24793:24793 compcert.common.Memtype <> k var
R24789:24791 compcert.common.Memtype <> ofs var
R24786:24787 compcert.common.Memtype <> b' var
R24783:24784 compcert.common.Memtype <> m1 var
R24760:24763 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24767:24769 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24758:24759 compcert.common.Memtype <> lo var
R24764:24766 compcert.common.Memtype <> ofs var
R24764:24766 compcert.common.Memtype <> ofs var
R24770:24771 compcert.common.Memtype <> hi var
R24712:24715 compcert.common.Memtype MEM perm defax
R24729:24729 compcert.common.Memtype <> p var
R24727:24727 compcert.common.Memtype <> k var
R24723:24725 compcert.common.Memtype <> ofs var
R24720:24721 compcert.common.Memtype <> b' var
R24717:24718 compcert.common.Memtype <> m2 var
R24674:24676 Coq.Init.Logic <> :type_scope:x_'='_x not
R24660:24664 compcert.common.Memtype MEM alloc defax
R24672:24673 compcert.common.Memtype <> hi var
R24669:24670 compcert.common.Memtype <> lo var
R24666:24667 compcert.common.Memtype <> m1 var
R24677:24677 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24680:24681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24683:24683 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24678:24679 compcert.common.Memtype <> m2 var
R24682:24682 compcert.common.Memtype <> b var
ax 24851:24874 MEM valid_access_alloc_other
R24992:25003 compcert.common.Memtype MEM valid_access def
R25021:25021 compcert.common.Memtype <> p var
R25017:25019 compcert.common.Memtype <> ofs var
R25014:25015 compcert.common.Memtype <> b' var
R25008:25012 compcert.common.Memtype <> chunk var
R25005:25006 compcert.common.Memtype <> m2 var
R24956:24967 compcert.common.Memtype MEM valid_access def
R24985:24985 compcert.common.Memtype <> p var
R24981:24983 compcert.common.Memtype <> ofs var
R24978:24979 compcert.common.Memtype <> b' var
R24972:24976 compcert.common.Memtype <> chunk var
R24969:24970 compcert.common.Memtype <> m1 var
R24915:24917 Coq.Init.Logic <> :type_scope:x_'='_x not
R24901:24905 compcert.common.Memtype MEM alloc defax
R24913:24914 compcert.common.Memtype <> hi var
R24910:24911 compcert.common.Memtype <> lo var
R24907:24908 compcert.common.Memtype <> m1 var
R24918:24918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24921:24922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24924:24924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24919:24920 compcert.common.Memtype <> m2 var
R24923:24923 compcert.common.Memtype <> b var
ax 25030:25052 MEM valid_access_alloc_same
R25205:25216 compcert.common.Memtype MEM valid_access def
R25233:25240 compcert.common.Memtype MEM Freeable constr
R25229:25231 compcert.common.Memtype <> ofs var
R25227:25227 compcert.common.Memtype <> b var
R25221:25225 compcert.common.Memtype <> chunk var
R25218:25219 compcert.common.Memtype <> m2 var
R25174:25174 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25192:25194 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25198:25198 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25175:25185 compcert.common.Memdata <> align_chunk def
R25187:25191 compcert.common.Memtype <> chunk var
R25195:25197 compcert.common.Memtype <> ofs var
R25164:25167 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25145:25147 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25142:25144 compcert.common.Memtype <> ofs var
R25148:25157 compcert.common.Memdata <> size_chunk def
R25159:25163 compcert.common.Memtype <> chunk var
R25168:25169 compcert.common.Memtype <> hi var
R25131:25134 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25129:25130 compcert.common.Memtype <> lo var
R25135:25137 compcert.common.Memtype <> ofs var
R25093:25095 Coq.Init.Logic <> :type_scope:x_'='_x not
R25079:25083 compcert.common.Memtype MEM alloc defax
R25091:25092 compcert.common.Memtype <> hi var
R25088:25089 compcert.common.Memtype <> lo var
R25085:25086 compcert.common.Memtype <> m1 var
R25096:25096 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25099:25100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25102:25102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25097:25098 compcert.common.Memtype <> m2 var
R25101:25101 compcert.common.Memtype <> b var
ax 25249:25270 MEM valid_access_alloc_inv
R25391:25398 compcert.common.Values <> eq_block def
R25403:25403 compcert.common.Memtype <> b var
R25400:25401 compcert.common.Memtype <> b' var
R25490:25501 compcert.common.Memtype MEM valid_access def
R25519:25519 compcert.common.Memtype <> p var
R25515:25517 compcert.common.Memtype <> ofs var
R25512:25513 compcert.common.Memtype <> b' var
R25506:25510 compcert.common.Memtype <> chunk var
R25503:25504 compcert.common.Memtype <> m1 var
R25421:25424 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25414:25417 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25412:25413 compcert.common.Memtype <> lo var
R25418:25420 compcert.common.Memtype <> ofs var
R25453:25456 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25447:25450 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25428:25430 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25425:25427 compcert.common.Memtype <> ofs var
R25431:25440 compcert.common.Memdata <> size_chunk def
R25442:25446 compcert.common.Memtype <> chunk var
R25451:25452 compcert.common.Memtype <> hi var
R25457:25457 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25475:25477 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25481:25481 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25458:25468 compcert.common.Memdata <> align_chunk def
R25470:25474 compcert.common.Memtype <> chunk var
R25478:25480 compcert.common.Memtype <> ofs var
R25352:25363 compcert.common.Memtype MEM valid_access def
R25381:25381 compcert.common.Memtype <> p var
R25377:25379 compcert.common.Memtype <> ofs var
R25374:25375 compcert.common.Memtype <> b' var
R25368:25372 compcert.common.Memtype <> chunk var
R25365:25366 compcert.common.Memtype <> m2 var
R25311:25313 Coq.Init.Logic <> :type_scope:x_'='_x not
R25297:25301 compcert.common.Memtype MEM alloc defax
R25309:25310 compcert.common.Memtype <> hi var
R25306:25307 compcert.common.Memtype <> lo var
R25303:25304 compcert.common.Memtype <> m1 var
R25314:25314 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25317:25318 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25320:25320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25315:25316 compcert.common.Memtype <> m2 var
R25319:25319 compcert.common.Memtype <> b var
ax 25560:25579 MEM load_alloc_unchanged
R25702:25704 Coq.Init.Logic <> :type_scope:x_'='_x not
R25682:25685 compcert.common.Memtype MEM load defax
R25699:25701 compcert.common.Memtype <> ofs var
R25696:25697 compcert.common.Memtype <> b' var
R25693:25694 compcert.common.Memtype <> m2 var
R25687:25691 compcert.common.Memtype <> chunk var
R25705:25708 compcert.common.Memtype MEM load defax
R25722:25724 compcert.common.Memtype <> ofs var
R25719:25720 compcert.common.Memtype <> b' var
R25716:25717 compcert.common.Memtype <> m1 var
R25710:25714 compcert.common.Memtype <> chunk var
R25659:25669 compcert.common.Memtype MEM valid_block def
R25674:25675 compcert.common.Memtype <> b' var
R25671:25672 compcert.common.Memtype <> m1 var
R25620:25622 Coq.Init.Logic <> :type_scope:x_'='_x not
R25606:25610 compcert.common.Memtype MEM alloc defax
R25618:25619 compcert.common.Memtype <> hi var
R25615:25616 compcert.common.Memtype <> lo var
R25612:25613 compcert.common.Memtype <> m1 var
R25623:25623 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25626:25627 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25629:25629 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25624:25625 compcert.common.Memtype <> m2 var
R25628:25628 compcert.common.Memtype <> b var
ax 25733:25748 MEM load_alloc_other
R25885:25887 Coq.Init.Logic <> :type_scope:x_'='_x not
R25865:25868 compcert.common.Memtype MEM load defax
R25882:25884 compcert.common.Memtype <> ofs var
R25879:25880 compcert.common.Memtype <> b' var
R25876:25877 compcert.common.Memtype <> m2 var
R25870:25874 compcert.common.Memtype <> chunk var
R25888:25891 Coq.Init.Datatypes <> Some constr
R25893:25893 compcert.common.Memtype <> v var
R25850:25852 Coq.Init.Logic <> :type_scope:x_'='_x not
R25830:25833 compcert.common.Memtype MEM load defax
R25847:25849 compcert.common.Memtype <> ofs var
R25844:25845 compcert.common.Memtype <> b' var
R25841:25842 compcert.common.Memtype <> m1 var
R25835:25839 compcert.common.Memtype <> chunk var
R25853:25856 Coq.Init.Datatypes <> Some constr
R25858:25858 compcert.common.Memtype <> v var
R25789:25791 Coq.Init.Logic <> :type_scope:x_'='_x not
R25775:25779 compcert.common.Memtype MEM alloc defax
R25787:25788 compcert.common.Memtype <> hi var
R25784:25785 compcert.common.Memtype <> lo var
R25781:25782 compcert.common.Memtype <> m1 var
R25792:25792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25795:25796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25798:25798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25793:25794 compcert.common.Memtype <> m2 var
R25797:25797 compcert.common.Memtype <> b var
ax 25902:25916 MEM load_alloc_same
R26030:26032 Coq.Init.Logic <> :type_scope:x_'='_x not
R26029:26029 compcert.common.Memtype <> v var
R26033:26038 compcert.common.Values <> Vundef constr
R26014:26016 Coq.Init.Logic <> :type_scope:x_'='_x not
R25995:25998 compcert.common.Memtype MEM load defax
R26011:26013 compcert.common.Memtype <> ofs var
R26009:26009 compcert.common.Memtype <> b var
R26006:26007 compcert.common.Memtype <> m2 var
R26000:26004 compcert.common.Memtype <> chunk var
R26017:26020 Coq.Init.Datatypes <> Some constr
R26022:26022 compcert.common.Memtype <> v var
R25957:25959 Coq.Init.Logic <> :type_scope:x_'='_x not
R25943:25947 compcert.common.Memtype MEM alloc defax
R25955:25956 compcert.common.Memtype <> hi var
R25952:25953 compcert.common.Memtype <> lo var
R25949:25950 compcert.common.Memtype <> m1 var
R25960:25960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25963:25964 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25966:25966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25961:25962 compcert.common.Memtype <> m2 var
R25965:25965 compcert.common.Memtype <> b var
ax 26047:26062 MEM load_alloc_same'
R26234:26236 Coq.Init.Logic <> :type_scope:x_'='_x not
R26215:26218 compcert.common.Memtype MEM load defax
R26231:26233 compcert.common.Memtype <> ofs var
R26229:26229 compcert.common.Memtype <> b var
R26226:26227 compcert.common.Memtype <> m2 var
R26220:26224 compcert.common.Memtype <> chunk var
R26237:26240 Coq.Init.Datatypes <> Some constr
R26242:26247 compcert.common.Values <> Vundef constr
R26184:26184 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R26202:26204 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R26208:26208 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R26185:26195 compcert.common.Memdata <> align_chunk def
R26197:26201 compcert.common.Memtype <> chunk var
R26205:26207 compcert.common.Memtype <> ofs var
R26174:26177 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R26155:26157 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26152:26154 compcert.common.Memtype <> ofs var
R26158:26167 compcert.common.Memdata <> size_chunk def
R26169:26173 compcert.common.Memtype <> chunk var
R26178:26179 compcert.common.Memtype <> hi var
R26141:26144 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R26139:26140 compcert.common.Memtype <> lo var
R26145:26147 compcert.common.Memtype <> ofs var
R26103:26105 Coq.Init.Logic <> :type_scope:x_'='_x not
R26089:26093 compcert.common.Memtype MEM alloc defax
R26101:26102 compcert.common.Memtype <> hi var
R26098:26099 compcert.common.Memtype <> lo var
R26095:26096 compcert.common.Memtype <> m1 var
R26106:26106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26109:26110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26112:26112 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26107:26108 compcert.common.Memtype <> m2 var
R26111:26111 compcert.common.Memtype <> b var
ax 26400:26414 MEM range_perm_free
R26480:26481 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26484:26485 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26489:26491 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26517:26518 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26507:26509 Coq.Init.Logic <> :type_scope:x_'='_x not
R26492:26495 compcert.common.Memtype MEM free defax
R26505:26506 compcert.common.Memtype <> hi var
R26502:26503 compcert.common.Memtype <> lo var
R26500:26500 compcert.common.Memtype <> b var
R26497:26498 compcert.common.Memtype <> m1 var
R26510:26513 Coq.Init.Datatypes <> Some constr
R26486:26488 compcert.common.Memtype MEM mem defax
R26440:26449 compcert.common.Memtype MEM range_perm def
R26466:26473 compcert.common.Memtype MEM Freeable constr
R26462:26464 compcert.common.Memtype MEM Cur constr
R26459:26460 compcert.common.Memtype <> hi var
R26456:26457 compcert.common.Memtype <> lo var
R26454:26454 compcert.common.Memtype <> b var
R26451:26452 compcert.common.Memtype <> m1 var
ax 26527:26541 MEM free_range_perm
R26601:26610 compcert.common.Memtype MEM range_perm def
R26628:26635 compcert.common.Memtype MEM Freeable constr
R26624:26626 compcert.common.Memtype MEM Cur constr
R26621:26622 compcert.common.Memtype <> hi var
R26618:26619 compcert.common.Memtype <> lo var
R26615:26616 compcert.common.Memtype <> bf var
R26612:26613 compcert.common.Memtype <> m1 var
R26585:26587 Coq.Init.Logic <> :type_scope:x_'='_x not
R26569:26572 compcert.common.Memtype MEM free defax
R26583:26584 compcert.common.Memtype <> hi var
R26580:26581 compcert.common.Memtype <> lo var
R26577:26578 compcert.common.Memtype <> bf var
R26574:26575 compcert.common.Memtype <> m1 var
R26588:26591 Coq.Init.Datatypes <> Some constr
R26593:26594 compcert.common.Memtype <> m2 var
ax 26692:26705 MEM nextblock_free
R26777:26779 Coq.Init.Logic <> :type_scope:x_'='_x not
R26765:26773 compcert.common.Memtype MEM nextblock defax
R26775:26776 compcert.common.Memtype <> m2 var
R26780:26788 compcert.common.Memtype MEM nextblock defax
R26790:26791 compcert.common.Memtype <> m1 var
R26749:26751 Coq.Init.Logic <> :type_scope:x_'='_x not
R26733:26736 compcert.common.Memtype MEM free defax
R26747:26748 compcert.common.Memtype <> hi var
R26744:26745 compcert.common.Memtype <> lo var
R26741:26742 compcert.common.Memtype <> bf var
R26738:26739 compcert.common.Memtype <> m1 var
R26752:26755 Coq.Init.Datatypes <> Some constr
R26757:26758 compcert.common.Memtype <> m2 var
ax 26800:26817 MEM valid_block_free_1
R26907:26917 compcert.common.Memtype MEM valid_block def
R26922:26922 compcert.common.Memtype <> b var
R26919:26920 compcert.common.Memtype <> m2 var
R26887:26897 compcert.common.Memtype MEM valid_block def
R26902:26902 compcert.common.Memtype <> b var
R26899:26900 compcert.common.Memtype <> m1 var
R26861:26863 Coq.Init.Logic <> :type_scope:x_'='_x not
R26845:26848 compcert.common.Memtype MEM free defax
R26859:26860 compcert.common.Memtype <> hi var
R26856:26857 compcert.common.Memtype <> lo var
R26853:26854 compcert.common.Memtype <> bf var
R26850:26851 compcert.common.Memtype <> m1 var
R26864:26867 Coq.Init.Datatypes <> Some constr
R26869:26870 compcert.common.Memtype <> m2 var
ax 26931:26948 MEM valid_block_free_2
R27038:27048 compcert.common.Memtype MEM valid_block def
R27053:27053 compcert.common.Memtype <> b var
R27050:27051 compcert.common.Memtype <> m1 var
R27018:27028 compcert.common.Memtype MEM valid_block def
R27033:27033 compcert.common.Memtype <> b var
R27030:27031 compcert.common.Memtype <> m2 var
R26992:26994 Coq.Init.Logic <> :type_scope:x_'='_x not
R26976:26979 compcert.common.Memtype MEM free defax
R26990:26991 compcert.common.Memtype <> hi var
R26987:26988 compcert.common.Memtype <> lo var
R26984:26985 compcert.common.Memtype <> bf var
R26981:26982 compcert.common.Memtype <> m1 var
R26995:26998 Coq.Init.Datatypes <> Some constr
R27000:27001 compcert.common.Memtype <> m2 var
ax 27104:27114 MEM perm_free_1
R27255:27258 compcert.common.Memtype MEM perm defax
R27271:27271 compcert.common.Memtype <> p var
R27269:27269 compcert.common.Memtype <> k var
R27265:27267 compcert.common.Memtype <> ofs var
R27263:27263 compcert.common.Memtype <> b var
R27260:27261 compcert.common.Memtype <> m2 var
R27232:27235 compcert.common.Memtype MEM perm defax
R27248:27248 compcert.common.Memtype <> p var
R27246:27246 compcert.common.Memtype <> k var
R27242:27244 compcert.common.Memtype <> ofs var
R27240:27240 compcert.common.Memtype <> b var
R27237:27238 compcert.common.Memtype <> m1 var
R27201:27204 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27195:27198 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R27194:27194 compcert.common.Memtype <> b var
R27199:27200 compcert.common.Memtype <> bf var
R27213:27216 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27208:27210 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R27205:27207 compcert.common.Memtype <> ofs var
R27211:27212 compcert.common.Memtype <> lo var
R27219:27222 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27217:27218 compcert.common.Memtype <> hi var
R27223:27225 compcert.common.Memtype <> ofs var
R27158:27160 Coq.Init.Logic <> :type_scope:x_'='_x not
R27142:27145 compcert.common.Memtype MEM free defax
R27156:27157 compcert.common.Memtype <> hi var
R27153:27154 compcert.common.Memtype <> lo var
R27150:27151 compcert.common.Memtype <> bf var
R27147:27148 compcert.common.Memtype <> m1 var
R27161:27164 Coq.Init.Datatypes <> Some constr
R27166:27167 compcert.common.Memtype <> m2 var
ax 27280:27290 MEM perm_free_2
R27384:27385 Coq.Init.Logic <> :type_scope:'~'_x not
R27386:27389 compcert.common.Memtype MEM perm defax
R27403:27403 compcert.common.Memtype <> p var
R27401:27401 compcert.common.Memtype <> k var
R27397:27399 compcert.common.Memtype <> ofs var
R27394:27395 compcert.common.Memtype <> bf var
R27391:27392 compcert.common.Memtype <> m2 var
R27368:27371 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R27375:27377 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R27366:27367 compcert.common.Memtype <> lo var
R27372:27374 compcert.common.Memtype <> ofs var
R27372:27374 compcert.common.Memtype <> ofs var
R27378:27379 compcert.common.Memtype <> hi var
R27334:27336 Coq.Init.Logic <> :type_scope:x_'='_x not
R27318:27321 compcert.common.Memtype MEM free defax
R27332:27333 compcert.common.Memtype <> hi var
R27329:27330 compcert.common.Memtype <> lo var
R27326:27327 compcert.common.Memtype <> bf var
R27323:27324 compcert.common.Memtype <> m1 var
R27337:27340 Coq.Init.Datatypes <> Some constr
R27342:27343 compcert.common.Memtype <> m2 var
ax 27412:27422 MEM perm_free_3
R27523:27526 compcert.common.Memtype MEM perm defax
R27539:27539 compcert.common.Memtype <> p var
R27537:27537 compcert.common.Memtype <> k var
R27533:27535 compcert.common.Memtype <> ofs var
R27531:27531 compcert.common.Memtype <> b var
R27528:27529 compcert.common.Memtype <> m1 var
R27502:27505 compcert.common.Memtype MEM perm defax
R27518:27518 compcert.common.Memtype <> p var
R27516:27516 compcert.common.Memtype <> k var
R27512:27514 compcert.common.Memtype <> ofs var
R27510:27510 compcert.common.Memtype <> b var
R27507:27508 compcert.common.Memtype <> m2 var
R27466:27468 Coq.Init.Logic <> :type_scope:x_'='_x not
R27450:27453 compcert.common.Memtype MEM free defax
R27464:27465 compcert.common.Memtype <> hi var
R27461:27462 compcert.common.Memtype <> lo var
R27458:27459 compcert.common.Memtype <> bf var
R27455:27456 compcert.common.Memtype <> m1 var
R27469:27472 Coq.Init.Datatypes <> Some constr
R27474:27475 compcert.common.Memtype <> m2 var
ax 27594:27612 MEM valid_access_free_1
R27802:27813 compcert.common.Memtype MEM valid_access def
R27830:27830 compcert.common.Memtype <> p var
R27826:27828 compcert.common.Memtype <> ofs var
R27824:27824 compcert.common.Memtype <> b var
R27818:27822 compcert.common.Memtype <> chunk var
R27815:27816 compcert.common.Memtype <> m2 var
R27739:27742 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27733:27736 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R27732:27732 compcert.common.Memtype <> b var
R27737:27738 compcert.common.Memtype <> bf var
R27751:27754 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27745:27748 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R27743:27744 compcert.common.Memtype <> lo var
R27749:27750 compcert.common.Memtype <> hi var
R27783:27786 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27777:27780 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27758:27760 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27755:27757 compcert.common.Memtype <> ofs var
R27761:27770 compcert.common.Memdata <> size_chunk def
R27772:27776 compcert.common.Memtype <> chunk var
R27781:27782 compcert.common.Memtype <> lo var
R27789:27792 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27787:27788 compcert.common.Memtype <> hi var
R27793:27795 compcert.common.Memtype <> ofs var
R27696:27707 compcert.common.Memtype MEM valid_access def
R27724:27724 compcert.common.Memtype <> p var
R27720:27722 compcert.common.Memtype <> ofs var
R27718:27718 compcert.common.Memtype <> b var
R27712:27716 compcert.common.Memtype <> chunk var
R27709:27710 compcert.common.Memtype <> m1 var
R27656:27658 Coq.Init.Logic <> :type_scope:x_'='_x not
R27640:27643 compcert.common.Memtype MEM free defax
R27654:27655 compcert.common.Memtype <> hi var
R27651:27652 compcert.common.Memtype <> lo var
R27648:27649 compcert.common.Memtype <> bf var
R27645:27646 compcert.common.Memtype <> m1 var
R27659:27662 Coq.Init.Datatypes <> Some constr
R27664:27665 compcert.common.Memtype <> m2 var
ax 27839:27857 MEM valid_access_free_2
R27995:27996 Coq.Init.Logic <> :type_scope:'~'_x not
R28027:28027 Coq.Init.Logic <> :type_scope:'~'_x not
R27997:28008 compcert.common.Memtype MEM valid_access def
R28026:28026 compcert.common.Memtype <> p var
R28022:28024 compcert.common.Memtype <> ofs var
R28019:28020 compcert.common.Memtype <> bf var
R28013:28017 compcert.common.Memtype <> chunk var
R28010:28011 compcert.common.Memtype <> m2 var
R27984:27986 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R27981:27983 compcert.common.Memtype <> ofs var
R27987:27988 compcert.common.Memtype <> hi var
R27972:27974 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R27953:27955 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27950:27952 compcert.common.Memtype <> ofs var
R27956:27965 compcert.common.Memdata <> size_chunk def
R27967:27971 compcert.common.Memtype <> chunk var
R27975:27976 compcert.common.Memtype <> lo var
R27941:27943 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R27939:27940 compcert.common.Memtype <> lo var
R27944:27945 compcert.common.Memtype <> hi var
R27901:27903 Coq.Init.Logic <> :type_scope:x_'='_x not
R27885:27888 compcert.common.Memtype MEM free defax
R27899:27900 compcert.common.Memtype <> hi var
R27896:27897 compcert.common.Memtype <> lo var
R27893:27894 compcert.common.Memtype <> bf var
R27890:27891 compcert.common.Memtype <> m1 var
R27904:27907 Coq.Init.Datatypes <> Some constr
R27909:27910 compcert.common.Memtype <> m2 var
ax 28036:28058 MEM valid_access_free_inv_1
R28177:28188 compcert.common.Memtype MEM valid_access def
R28205:28205 compcert.common.Memtype <> p var
R28201:28203 compcert.common.Memtype <> ofs var
R28199:28199 compcert.common.Memtype <> b var
R28193:28197 compcert.common.Memtype <> chunk var
R28190:28191 compcert.common.Memtype <> m1 var
R28142:28153 compcert.common.Memtype MEM valid_access def
R28170:28170 compcert.common.Memtype <> p var
R28166:28168 compcert.common.Memtype <> ofs var
R28164:28164 compcert.common.Memtype <> b var
R28158:28162 compcert.common.Memtype <> chunk var
R28155:28156 compcert.common.Memtype <> m2 var
R28102:28104 Coq.Init.Logic <> :type_scope:x_'='_x not
R28086:28089 compcert.common.Memtype MEM free defax
R28100:28101 compcert.common.Memtype <> hi var
R28097:28098 compcert.common.Memtype <> lo var
R28094:28095 compcert.common.Memtype <> bf var
R28091:28092 compcert.common.Memtype <> m1 var
R28105:28108 Coq.Init.Datatypes <> Some constr
R28110:28111 compcert.common.Memtype <> m2 var
ax 28214:28236 MEM valid_access_free_inv_2
R28362:28365 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28356:28359 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R28354:28355 compcert.common.Memtype <> lo var
R28360:28361 compcert.common.Memtype <> hi var
R28394:28397 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28388:28391 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28369:28371 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28366:28368 compcert.common.Memtype <> ofs var
R28372:28381 compcert.common.Memdata <> size_chunk def
R28383:28387 compcert.common.Memtype <> chunk var
R28392:28393 compcert.common.Memtype <> lo var
R28400:28403 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28398:28399 compcert.common.Memtype <> hi var
R28404:28406 compcert.common.Memtype <> ofs var
R28318:28329 compcert.common.Memtype MEM valid_access def
R28347:28347 compcert.common.Memtype <> p var
R28343:28345 compcert.common.Memtype <> ofs var
R28340:28341 compcert.common.Memtype <> bf var
R28334:28338 compcert.common.Memtype <> chunk var
R28331:28332 compcert.common.Memtype <> m2 var
R28280:28282 Coq.Init.Logic <> :type_scope:x_'='_x not
R28264:28267 compcert.common.Memtype MEM free defax
R28278:28279 compcert.common.Memtype <> hi var
R28275:28276 compcert.common.Memtype <> lo var
R28272:28273 compcert.common.Memtype <> bf var
R28269:28270 compcert.common.Memtype <> m1 var
R28283:28286 Coq.Init.Datatypes <> Some constr
R28288:28289 compcert.common.Memtype <> m2 var
ax 28445:28453 MEM load_free
R28624:28626 Coq.Init.Logic <> :type_scope:x_'='_x not
R28605:28608 compcert.common.Memtype MEM load defax
R28621:28623 compcert.common.Memtype <> ofs var
R28619:28619 compcert.common.Memtype <> b var
R28616:28617 compcert.common.Memtype <> m2 var
R28610:28614 compcert.common.Memtype <> chunk var
R28627:28630 compcert.common.Memtype MEM load defax
R28643:28645 compcert.common.Memtype <> ofs var
R28641:28641 compcert.common.Memtype <> b var
R28638:28639 compcert.common.Memtype <> m1 var
R28632:28636 compcert.common.Memtype <> chunk var
R28542:28545 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28536:28539 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R28535:28535 compcert.common.Memtype <> b var
R28540:28541 compcert.common.Memtype <> bf var
R28554:28557 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28548:28551 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R28546:28547 compcert.common.Memtype <> lo var
R28552:28553 compcert.common.Memtype <> hi var
R28586:28589 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28580:28583 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28561:28563 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28558:28560 compcert.common.Memtype <> ofs var
R28564:28573 compcert.common.Memdata <> size_chunk def
R28575:28579 compcert.common.Memtype <> chunk var
R28584:28585 compcert.common.Memtype <> lo var
R28592:28595 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28590:28591 compcert.common.Memtype <> hi var
R28596:28598 compcert.common.Memtype <> ofs var
R28497:28499 Coq.Init.Logic <> :type_scope:x_'='_x not
R28481:28484 compcert.common.Memtype MEM free defax
R28495:28496 compcert.common.Memtype <> hi var
R28492:28493 compcert.common.Memtype <> lo var
R28489:28490 compcert.common.Memtype <> bf var
R28486:28487 compcert.common.Memtype <> m1 var
R28500:28503 Coq.Init.Datatypes <> Some constr
R28505:28506 compcert.common.Memtype <> m2 var
ax 28693:28706 MEM nextblock_drop
R28783:28785 Coq.Init.Logic <> :type_scope:x_'='_x not
R28771:28779 compcert.common.Memtype MEM nextblock defax
R28781:28782 compcert.common.Memtype <> m' var
R28786:28794 compcert.common.Memtype MEM nextblock defax
R28796:28796 compcert.common.Memtype <> m var
R28755:28757 Coq.Init.Logic <> :type_scope:x_'='_x not
R28734:28742 compcert.common.Memtype MEM drop_perm defax
R28754:28754 compcert.common.Memtype <> p var
R28751:28752 compcert.common.Memtype <> hi var
R28748:28749 compcert.common.Memtype <> lo var
R28746:28746 compcert.common.Memtype <> b var
R28744:28744 compcert.common.Memtype <> m var
R28758:28761 Coq.Init.Datatypes <> Some constr
R28763:28764 compcert.common.Memtype <> m' var
ax 28805:28827 MEM drop_perm_valid_block_1
R28923:28933 compcert.common.Memtype MEM valid_block def
R28938:28939 compcert.common.Memtype <> b' var
R28935:28936 compcert.common.Memtype <> m' var
R28903:28913 compcert.common.Memtype MEM valid_block def
R28917:28918 compcert.common.Memtype <> b' var
R28915:28915 compcert.common.Memtype <> m var
R28876:28878 Coq.Init.Logic <> :type_scope:x_'='_x not
R28855:28863 compcert.common.Memtype MEM drop_perm defax
R28875:28875 compcert.common.Memtype <> p var
R28872:28873 compcert.common.Memtype <> hi var
R28869:28870 compcert.common.Memtype <> lo var
R28867:28867 compcert.common.Memtype <> b var
R28865:28865 compcert.common.Memtype <> m var
R28879:28882 Coq.Init.Datatypes <> Some constr
R28884:28885 compcert.common.Memtype <> m' var
ax 28948:28970 MEM drop_perm_valid_block_2
R29067:29077 compcert.common.Memtype MEM valid_block def
R29081:29082 compcert.common.Memtype <> b' var
R29079:29079 compcert.common.Memtype <> m var
R29046:29056 compcert.common.Memtype MEM valid_block def
R29061:29062 compcert.common.Memtype <> b' var
R29058:29059 compcert.common.Memtype <> m' var
R29019:29021 Coq.Init.Logic <> :type_scope:x_'='_x not
R28998:29006 compcert.common.Memtype MEM drop_perm defax
R29018:29018 compcert.common.Memtype <> p var
R29015:29016 compcert.common.Memtype <> hi var
R29012:29013 compcert.common.Memtype <> lo var
R29010:29010 compcert.common.Memtype <> b var
R29008:29008 compcert.common.Memtype <> m var
R29022:29025 Coq.Init.Datatypes <> Some constr
R29027:29028 compcert.common.Memtype <> m' var
ax 29092:29108 MEM range_perm_drop_1
R29173:29182 compcert.common.Memtype MEM range_perm def
R29198:29205 compcert.common.Memtype MEM Freeable constr
R29194:29196 compcert.common.Memtype MEM Cur constr
R29191:29192 compcert.common.Memtype <> hi var
R29188:29189 compcert.common.Memtype <> lo var
R29186:29186 compcert.common.Memtype <> b var
R29184:29184 compcert.common.Memtype <> m var
R29157:29159 Coq.Init.Logic <> :type_scope:x_'='_x not
R29136:29144 compcert.common.Memtype MEM drop_perm defax
R29156:29156 compcert.common.Memtype <> p var
R29153:29154 compcert.common.Memtype <> hi var
R29150:29151 compcert.common.Memtype <> lo var
R29148:29148 compcert.common.Memtype <> b var
R29146:29146 compcert.common.Memtype <> m var
R29160:29163 Coq.Init.Datatypes <> Some constr
R29165:29166 compcert.common.Memtype <> m' var
ax 29214:29230 MEM range_perm_drop_2
R29294:29295 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R29298:29300 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R29332:29333 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R29322:29324 Coq.Init.Logic <> :type_scope:x_'='_x not
R29301:29309 compcert.common.Memtype MEM drop_perm defax
R29321:29321 compcert.common.Memtype <> p var
R29318:29319 compcert.common.Memtype <> hi var
R29315:29316 compcert.common.Memtype <> lo var
R29313:29313 compcert.common.Memtype <> b var
R29311:29311 compcert.common.Memtype <> m var
R29325:29328 Coq.Init.Datatypes <> Some constr
R29257:29266 compcert.common.Memtype MEM range_perm def
R29282:29289 compcert.common.Memtype MEM Freeable constr
R29278:29280 compcert.common.Memtype MEM Cur constr
R29275:29276 compcert.common.Memtype <> hi var
R29272:29273 compcert.common.Memtype <> lo var
R29270:29270 compcert.common.Memtype <> b var
R29268:29268 compcert.common.Memtype <> m var
ax 29343:29353 MEM perm_drop_1
R29450:29453 compcert.common.Memtype MEM perm defax
R29466:29466 compcert.common.Memtype <> p var
R29464:29464 compcert.common.Memtype <> k var
R29460:29462 compcert.common.Memtype <> ofs var
R29458:29458 compcert.common.Memtype <> b var
R29455:29456 compcert.common.Memtype <> m' var
R29434:29437 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29441:29443 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29432:29433 compcert.common.Memtype <> lo var
R29438:29440 compcert.common.Memtype <> ofs var
R29438:29440 compcert.common.Memtype <> ofs var
R29444:29445 compcert.common.Memtype <> hi var
R29402:29404 Coq.Init.Logic <> :type_scope:x_'='_x not
R29381:29389 compcert.common.Memtype MEM drop_perm defax
R29401:29401 compcert.common.Memtype <> p var
R29398:29399 compcert.common.Memtype <> hi var
R29395:29396 compcert.common.Memtype <> lo var
R29393:29393 compcert.common.Memtype <> b var
R29391:29391 compcert.common.Memtype <> m var
R29405:29408 Coq.Init.Datatypes <> Some constr
R29410:29411 compcert.common.Memtype <> m' var
ax 29475:29485 MEM perm_drop_2
R29607:29616 compcert.common.Memtype MEM perm_order ind
R29620:29621 compcert.common.Memtype <> p' var
R29618:29618 compcert.common.Memtype <> p var
R29585:29588 compcert.common.Memtype MEM perm defax
R29601:29602 compcert.common.Memtype <> p' var
R29599:29599 compcert.common.Memtype <> k var
R29595:29597 compcert.common.Memtype <> ofs var
R29593:29593 compcert.common.Memtype <> b var
R29590:29591 compcert.common.Memtype <> m' var
R29569:29572 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29576:29578 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29567:29568 compcert.common.Memtype <> lo var
R29573:29575 compcert.common.Memtype <> ofs var
R29573:29575 compcert.common.Memtype <> ofs var
R29579:29580 compcert.common.Memtype <> hi var
R29534:29536 Coq.Init.Logic <> :type_scope:x_'='_x not
R29513:29521 compcert.common.Memtype MEM drop_perm defax
R29533:29533 compcert.common.Memtype <> p var
R29530:29531 compcert.common.Memtype <> hi var
R29527:29528 compcert.common.Memtype <> lo var
R29525:29525 compcert.common.Memtype <> b var
R29523:29523 compcert.common.Memtype <> m var
R29537:29540 Coq.Init.Datatypes <> Some constr
R29542:29543 compcert.common.Memtype <> m' var
ax 29630:29640 MEM perm_drop_3
R29783:29786 compcert.common.Memtype MEM perm defax
R29800:29801 compcert.common.Memtype <> p' var
R29798:29798 compcert.common.Memtype <> k var
R29794:29796 compcert.common.Memtype <> ofs var
R29791:29792 compcert.common.Memtype <> b' var
R29788:29789 compcert.common.Memtype <> m' var
R29761:29764 compcert.common.Memtype MEM perm defax
R29777:29778 compcert.common.Memtype <> p' var
R29775:29775 compcert.common.Memtype <> k var
R29771:29773 compcert.common.Memtype <> ofs var
R29768:29769 compcert.common.Memtype <> b' var
R29766:29766 compcert.common.Memtype <> m var
R29732:29735 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29727:29730 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R29725:29726 compcert.common.Memtype <> b' var
R29731:29731 compcert.common.Memtype <> b var
R29744:29747 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29739:29741 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R29736:29738 compcert.common.Memtype <> ofs var
R29742:29743 compcert.common.Memtype <> lo var
R29750:29753 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R29748:29749 compcert.common.Memtype <> hi var
R29754:29756 compcert.common.Memtype <> ofs var
R29689:29691 Coq.Init.Logic <> :type_scope:x_'='_x not
R29668:29676 compcert.common.Memtype MEM drop_perm defax
R29688:29688 compcert.common.Memtype <> p var
R29685:29686 compcert.common.Memtype <> hi var
R29682:29683 compcert.common.Memtype <> lo var
R29680:29680 compcert.common.Memtype <> b var
R29678:29678 compcert.common.Memtype <> m var
R29692:29695 Coq.Init.Datatypes <> Some constr
R29697:29698 compcert.common.Memtype <> m' var
ax 29810:29820 MEM perm_drop_4
R29928:29931 compcert.common.Memtype MEM perm defax
R29944:29945 compcert.common.Memtype <> p' var
R29942:29942 compcert.common.Memtype <> k var
R29938:29940 compcert.common.Memtype <> ofs var
R29935:29936 compcert.common.Memtype <> b' var
R29933:29933 compcert.common.Memtype <> m var
R29905:29908 compcert.common.Memtype MEM perm defax
R29922:29923 compcert.common.Memtype <> p' var
R29920:29920 compcert.common.Memtype <> k var
R29916:29918 compcert.common.Memtype <> ofs var
R29913:29914 compcert.common.Memtype <> b' var
R29910:29911 compcert.common.Memtype <> m' var
R29869:29871 Coq.Init.Logic <> :type_scope:x_'='_x not
R29848:29856 compcert.common.Memtype MEM drop_perm defax
R29868:29868 compcert.common.Memtype <> p var
R29865:29866 compcert.common.Memtype <> hi var
R29862:29863 compcert.common.Memtype <> lo var
R29860:29860 compcert.common.Memtype <> b var
R29858:29858 compcert.common.Memtype <> m var
R29872:29875 Coq.Init.Datatypes <> Some constr
R29877:29878 compcert.common.Memtype <> m' var
ax 29955:29963 MEM load_drop
R30155:30157 Coq.Init.Logic <> :type_scope:x_'='_x not
R30135:30138 compcert.common.Memtype MEM load defax
R30152:30154 compcert.common.Memtype <> ofs var
R30149:30150 compcert.common.Memtype <> b' var
R30146:30147 compcert.common.Memtype <> m' var
R30140:30144 compcert.common.Memtype <> chunk var
R30158:30161 compcert.common.Memtype MEM load defax
R30174:30176 compcert.common.Memtype <> ofs var
R30171:30172 compcert.common.Memtype <> b' var
R30169:30169 compcert.common.Memtype <> m var
R30163:30167 compcert.common.Memtype <> chunk var
R30059:30062 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30054:30057 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R30052:30053 compcert.common.Memtype <> b' var
R30058:30058 compcert.common.Memtype <> b var
R30091:30094 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30085:30088 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R30066:30068 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30063:30065 compcert.common.Memtype <> ofs var
R30069:30078 compcert.common.Memdata <> size_chunk def
R30080:30084 compcert.common.Memtype <> chunk var
R30089:30090 compcert.common.Memtype <> lo var
R30104:30107 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30097:30100 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R30095:30096 compcert.common.Memtype <> hi var
R30101:30103 compcert.common.Memtype <> ofs var
R30108:30117 compcert.common.Memtype MEM perm_order ind
R30121:30128 compcert.common.Memtype MEM Readable constr
R30119:30119 compcert.common.Memtype <> p var
R30012:30014 Coq.Init.Logic <> :type_scope:x_'='_x not
R29991:29999 compcert.common.Memtype MEM drop_perm defax
R30011:30011 compcert.common.Memtype <> p var
R30008:30009 compcert.common.Memtype <> hi var
R30005:30006 compcert.common.Memtype <> lo var
R30003:30003 compcert.common.Memtype <> b var
R30001:30001 compcert.common.Memtype <> m var
R30015:30018 Coq.Init.Datatypes <> Some constr
R30020:30021 compcert.common.Memtype <> m' var
ax 30535:30541 MEM extends
R30551:30553 compcert.common.Memtype MEM mem defax
R30544:30546 compcert.common.Memtype MEM mem defax
ax 30571:30582 MEM extends_refl
R30597:30603 compcert.common.Memtype MEM extends defax
R30607:30607 compcert.common.Memtype <> m var
R30605:30605 compcert.common.Memtype <> m var
ax 30617:30628 MEM load_extends
R30718:30724 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30727:30728 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30758:30761 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30748:30750 Coq.Init.Logic <> :type_scope:x_'='_x not
R30729:30732 compcert.common.Memtype MEM load defax
R30745:30747 compcert.common.Memtype <> ofs var
R30743:30743 compcert.common.Memtype <> b var
R30740:30741 compcert.common.Memtype <> m2 var
R30734:30738 compcert.common.Memtype <> chunk var
R30751:30754 Coq.Init.Datatypes <> Some constr
R30756:30757 compcert.common.Memtype <> v2 var
R30762:30772 compcert.common.Values Val lessdef ind
R30777:30778 compcert.common.Memtype <> v2 var
R30774:30775 compcert.common.Memtype <> v1 var
R30702:30704 Coq.Init.Logic <> :type_scope:x_'='_x not
R30683:30686 compcert.common.Memtype MEM load defax
R30699:30701 compcert.common.Memtype <> ofs var
R30697:30697 compcert.common.Memtype <> b var
R30694:30695 compcert.common.Memtype <> m1 var
R30688:30692 compcert.common.Memtype <> chunk var
R30705:30708 Coq.Init.Datatypes <> Some constr
R30710:30711 compcert.common.Memtype <> v1 var
R30664:30670 compcert.common.Memtype MEM extends defax
R30675:30676 compcert.common.Memtype <> m2 var
R30672:30673 compcert.common.Memtype <> m1 var
ax 30788:30800 MEM loadv_extends
R30926:30932 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30935:30936 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30967:30970 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30957:30959 Coq.Init.Logic <> :type_scope:x_'='_x not
R30937:30941 compcert.common.Memtype MEM loadv def
R30952:30956 compcert.common.Memtype <> addr2 var
R30949:30950 compcert.common.Memtype <> m2 var
R30943:30947 compcert.common.Memtype <> chunk var
R30960:30963 Coq.Init.Datatypes <> Some constr
R30965:30966 compcert.common.Memtype <> v2 var
R30971:30981 compcert.common.Values Val lessdef ind
R30986:30987 compcert.common.Memtype <> v2 var
R30983:30984 compcert.common.Memtype <> v1 var
R30897:30907 compcert.common.Values Val lessdef ind
R30915:30919 compcert.common.Memtype <> addr2 var
R30909:30913 compcert.common.Memtype <> addr1 var
R30881:30883 Coq.Init.Logic <> :type_scope:x_'='_x not
R30861:30865 compcert.common.Memtype MEM loadv def
R30876:30880 compcert.common.Memtype <> addr1 var
R30873:30874 compcert.common.Memtype <> m1 var
R30867:30871 compcert.common.Memtype <> chunk var
R30884:30887 Coq.Init.Datatypes <> Some constr
R30889:30890 compcert.common.Memtype <> v1 var
R30842:30848 compcert.common.Memtype MEM extends defax
R30853:30854 compcert.common.Memtype <> m2 var
R30850:30851 compcert.common.Memtype <> m1 var
ax 30997:31013 MEM loadbytes_extends
R31112:31118 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31125:31126 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31163:31180 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31149:31151 Coq.Init.Logic <> :type_scope:x_'='_x not
R31127:31135 compcert.common.Memtype MEM loadbytes defax
R31146:31148 compcert.common.Memtype <> len var
R31142:31144 compcert.common.Memtype <> ofs var
R31140:31140 compcert.common.Memtype <> b var
R31137:31138 compcert.common.Memtype <> m2 var
R31152:31155 Coq.Init.Datatypes <> Some constr
R31157:31162 compcert.common.Memtype <> bytes2 var
R31181:31192 compcert.lib.Coqlib <> list_forall2 ind
R31216:31221 compcert.common.Memtype <> bytes2 var
R31209:31214 compcert.common.Memtype <> bytes1 var
R31194:31207 compcert.common.Memdata <> memval_lessdef def
R31092:31094 Coq.Init.Logic <> :type_scope:x_'='_x not
R31070:31078 compcert.common.Memtype MEM loadbytes defax
R31089:31091 compcert.common.Memtype <> len var
R31085:31087 compcert.common.Memtype <> ofs var
R31083:31083 compcert.common.Memtype <> b var
R31080:31081 compcert.common.Memtype <> m1 var
R31095:31098 Coq.Init.Datatypes <> Some constr
R31100:31105 compcert.common.Memtype <> bytes1 var
R31051:31057 compcert.common.Memtype MEM extends defax
R31062:31063 compcert.common.Memtype <> m2 var
R31059:31060 compcert.common.Memtype <> m1 var
ax 31231:31250 MEM store_within_extends
R31375:31381 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31385:31391 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31426:31431 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31415:31417 Coq.Init.Logic <> :type_scope:x_'='_x not
R31392:31396 compcert.common.Memtype MEM store defax
R31413:31414 compcert.common.Memtype <> v2 var
R31409:31411 compcert.common.Memtype <> ofs var
R31407:31407 compcert.common.Memtype <> b var
R31404:31405 compcert.common.Memtype <> m2 var
R31398:31402 compcert.common.Memtype <> chunk var
R31418:31421 Coq.Init.Datatypes <> Some constr
R31423:31425 compcert.common.Memtype <> m2' var
R31432:31438 compcert.common.Memtype MEM extends defax
R31444:31446 compcert.common.Memtype <> m2' var
R31440:31442 compcert.common.Memtype <> m1' var
R31352:31362 compcert.common.Values Val lessdef ind
R31367:31368 compcert.common.Memtype <> v2 var
R31364:31365 compcert.common.Memtype <> v1 var
R31335:31337 Coq.Init.Logic <> :type_scope:x_'='_x not
R31312:31316 compcert.common.Memtype MEM store defax
R31333:31334 compcert.common.Memtype <> v1 var
R31329:31331 compcert.common.Memtype <> ofs var
R31327:31327 compcert.common.Memtype <> b var
R31324:31325 compcert.common.Memtype <> m1 var
R31318:31322 compcert.common.Memtype <> chunk var
R31338:31341 Coq.Init.Datatypes <> Some constr
R31343:31345 compcert.common.Memtype <> m1' var
R31293:31299 compcert.common.Memtype MEM extends defax
R31304:31305 compcert.common.Memtype <> m2 var
R31301:31302 compcert.common.Memtype <> m1 var
ax 31456:31476 MEM store_outside_extends
R31670:31676 compcert.common.Memtype MEM extends defax
R31681:31683 compcert.common.Memtype <> m2' var
R31678:31679 compcert.common.Memtype <> m1 var
R31658:31662 Coq.Init.Logic <> False ind
R31621:31624 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R31629:31631 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R31618:31620 compcert.common.Memtype <> ofs var
R31625:31628 compcert.common.Memtype <> ofs' var
R31625:31628 compcert.common.Memtype <> ofs' var
R31635:31637 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31632:31634 compcert.common.Memtype <> ofs var
R31638:31647 compcert.common.Memdata <> size_chunk def
R31649:31653 compcert.common.Memtype <> chunk var
R31587:31590 compcert.common.Memtype MEM perm defax
R31606:31613 compcert.common.Memtype MEM Readable constr
R31602:31604 compcert.common.Memtype MEM Cur constr
R31597:31600 compcert.common.Memtype <> ofs' var
R31595:31595 compcert.common.Memtype <> b var
R31592:31593 compcert.common.Memtype <> m1 var
R31556:31558 Coq.Init.Logic <> :type_scope:x_'='_x not
R31534:31538 compcert.common.Memtype MEM store defax
R31555:31555 compcert.common.Memtype <> v var
R31551:31553 compcert.common.Memtype <> ofs var
R31549:31549 compcert.common.Memtype <> b var
R31546:31547 compcert.common.Memtype <> m2 var
R31540:31544 compcert.common.Memtype <> chunk var
R31559:31562 Coq.Init.Datatypes <> Some constr
R31564:31566 compcert.common.Memtype <> m2' var
R31515:31521 compcert.common.Memtype MEM extends defax
R31526:31527 compcert.common.Memtype <> m2 var
R31523:31524 compcert.common.Memtype <> m1 var
ax 31693:31706 MEM storev_extends
R31867:31873 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31877:31883 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31919:31924 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31908:31910 Coq.Init.Logic <> :type_scope:x_'='_x not
R31884:31889 compcert.common.Memtype MEM storev def
R31906:31907 compcert.common.Memtype <> v2 var
R31900:31904 compcert.common.Memtype <> addr2 var
R31897:31898 compcert.common.Memtype <> m2 var
R31891:31895 compcert.common.Memtype <> chunk var
R31911:31914 Coq.Init.Datatypes <> Some constr
R31916:31918 compcert.common.Memtype <> m2' var
R31925:31931 compcert.common.Memtype MEM extends defax
R31937:31939 compcert.common.Memtype <> m2' var
R31933:31935 compcert.common.Memtype <> m1' var
R31844:31854 compcert.common.Values Val lessdef ind
R31859:31860 compcert.common.Memtype <> v2 var
R31856:31857 compcert.common.Memtype <> v1 var
R31815:31825 compcert.common.Values Val lessdef ind
R31833:31837 compcert.common.Memtype <> addr2 var
R31827:31831 compcert.common.Memtype <> addr1 var
R31798:31800 Coq.Init.Logic <> :type_scope:x_'='_x not
R31774:31779 compcert.common.Memtype MEM storev def
R31796:31797 compcert.common.Memtype <> v1 var
R31790:31794 compcert.common.Memtype <> addr1 var
R31787:31788 compcert.common.Memtype <> m1 var
R31781:31785 compcert.common.Memtype <> chunk var
R31801:31804 Coq.Init.Datatypes <> Some constr
R31806:31808 compcert.common.Memtype <> m1' var
R31755:31761 compcert.common.Memtype MEM extends defax
R31766:31767 compcert.common.Memtype <> m2 var
R31763:31764 compcert.common.Memtype <> m1 var
ax 31949:31973 MEM storebytes_within_extends
R32127:32133 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32137:32143 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32181:32186 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R32170:32172 Coq.Init.Logic <> :type_scope:x_'='_x not
R32144:32153 compcert.common.Memtype MEM storebytes defax
R32164:32169 compcert.common.Memtype <> bytes2 var
R32160:32162 compcert.common.Memtype <> ofs var
R32158:32158 compcert.common.Memtype <> b var
R32155:32156 compcert.common.Memtype <> m2 var
R32173:32176 Coq.Init.Datatypes <> Some constr
R32178:32180 compcert.common.Memtype <> m2' var
R32187:32193 compcert.common.Memtype MEM extends defax
R32199:32201 compcert.common.Memtype <> m2' var
R32195:32197 compcert.common.Memtype <> m1' var
R32080:32091 compcert.lib.Coqlib <> list_forall2 ind
R32115:32120 compcert.common.Memtype <> bytes2 var
R32108:32113 compcert.common.Memtype <> bytes1 var
R32093:32106 compcert.common.Memdata <> memval_lessdef def
R32063:32065 Coq.Init.Logic <> :type_scope:x_'='_x not
R32037:32046 compcert.common.Memtype MEM storebytes defax
R32057:32062 compcert.common.Memtype <> bytes1 var
R32053:32055 compcert.common.Memtype <> ofs var
R32051:32051 compcert.common.Memtype <> b var
R32048:32049 compcert.common.Memtype <> m1 var
R32066:32069 Coq.Init.Datatypes <> Some constr
R32071:32073 compcert.common.Memtype <> m1' var
R32018:32024 compcert.common.Memtype MEM extends defax
R32029:32030 compcert.common.Memtype <> m2 var
R32026:32027 compcert.common.Memtype <> m1 var
ax 32211:32236 MEM storebytes_outside_extends
R32441:32447 compcert.common.Memtype MEM extends defax
R32452:32454 compcert.common.Memtype <> m2' var
R32449:32450 compcert.common.Memtype <> m1 var
R32429:32433 Coq.Init.Logic <> False ind
R32384:32387 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32392:32394 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32381:32383 compcert.common.Memtype <> ofs var
R32388:32391 compcert.common.Memtype <> ofs' var
R32388:32391 compcert.common.Memtype <> ofs' var
R32398:32400 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32395:32397 compcert.common.Memtype <> ofs var
R32401:32408 Coq.ZArith.BinInt <> Z_of_nat syndef
R32411:32416 Coq.Init.Datatypes <> length def
R32418:32423 compcert.common.Memtype <> bytes2 var
R32350:32353 compcert.common.Memtype MEM perm defax
R32369:32376 compcert.common.Memtype MEM Readable constr
R32365:32367 compcert.common.Memtype MEM Cur constr
R32360:32363 compcert.common.Memtype <> ofs' var
R32358:32358 compcert.common.Memtype <> b var
R32355:32356 compcert.common.Memtype <> m1 var
R32319:32321 Coq.Init.Logic <> :type_scope:x_'='_x not
R32293:32302 compcert.common.Memtype MEM storebytes defax
R32313:32318 compcert.common.Memtype <> bytes2 var
R32309:32311 compcert.common.Memtype <> ofs var
R32307:32307 compcert.common.Memtype <> b var
R32304:32305 compcert.common.Memtype <> m2 var
R32322:32325 Coq.Init.Datatypes <> Some constr
R32327:32329 compcert.common.Memtype <> m2' var
R32274:32280 compcert.common.Memtype MEM extends defax
R32285:32286 compcert.common.Memtype <> m2 var
R32282:32283 compcert.common.Memtype <> m1 var
ax 32464:32476 MEM alloc_extends
R32601:32607 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32611:32617 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32645:32650 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R32634:32636 Coq.Init.Logic <> :type_scope:x_'='_x not
R32618:32622 compcert.common.Memtype MEM alloc defax
R32631:32633 compcert.common.Memtype <> hi2 var
R32627:32629 compcert.common.Memtype <> lo2 var
R32624:32625 compcert.common.Memtype <> m2 var
R32637:32637 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32641:32642 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32644:32644 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32638:32640 compcert.common.Memtype <> m2' var
R32643:32643 compcert.common.Memtype <> b var
R32651:32657 compcert.common.Memtype MEM extends defax
R32663:32665 compcert.common.Memtype <> m2' var
R32659:32661 compcert.common.Memtype <> m1' var
R32588:32591 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R32585:32587 compcert.common.Memtype <> hi1 var
R32592:32594 compcert.common.Memtype <> hi2 var
R32574:32577 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R32571:32573 compcert.common.Memtype <> lo2 var
R32578:32580 compcert.common.Memtype <> lo1 var
R32554:32556 Coq.Init.Logic <> :type_scope:x_'='_x not
R32538:32542 compcert.common.Memtype MEM alloc defax
R32551:32553 compcert.common.Memtype <> hi1 var
R32547:32549 compcert.common.Memtype <> lo1 var
R32544:32545 compcert.common.Memtype <> m1 var
R32557:32557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32561:32562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32564:32564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32558:32560 compcert.common.Memtype <> m1' var
R32563:32563 compcert.common.Memtype <> b var
R32519:32525 compcert.common.Memtype MEM extends defax
R32530:32531 compcert.common.Memtype <> m2 var
R32527:32528 compcert.common.Memtype <> m1 var
ax 32675:32691 MEM free_left_extends
R32775:32781 compcert.common.Memtype MEM extends defax
R32787:32788 compcert.common.Memtype <> m2 var
R32783:32785 compcert.common.Memtype <> m1' var
R32758:32760 Coq.Init.Logic <> :type_scope:x_'='_x not
R32743:32746 compcert.common.Memtype MEM free defax
R32756:32757 compcert.common.Memtype <> hi var
R32753:32754 compcert.common.Memtype <> lo var
R32751:32751 compcert.common.Memtype <> b var
R32748:32749 compcert.common.Memtype <> m1 var
R32761:32764 Coq.Init.Datatypes <> Some constr
R32766:32768 compcert.common.Memtype <> m1' var
R32724:32730 compcert.common.Memtype MEM extends defax
R32735:32736 compcert.common.Memtype <> m2 var
R32732:32733 compcert.common.Memtype <> m1 var
ax 32798:32815 MEM free_right_extends
R32967:32973 compcert.common.Memtype MEM extends defax
R32978:32980 compcert.common.Memtype <> m2' var
R32975:32976 compcert.common.Memtype <> m1 var
R32955:32959 Coq.Init.Logic <> False ind
R32939:32942 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32946:32948 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32937:32938 compcert.common.Memtype <> lo var
R32943:32945 compcert.common.Memtype <> ofs var
R32943:32945 compcert.common.Memtype <> ofs var
R32949:32950 compcert.common.Memtype <> hi var
R32916:32919 compcert.common.Memtype MEM perm defax
R32932:32932 compcert.common.Memtype <> p var
R32930:32930 compcert.common.Memtype <> k var
R32926:32928 compcert.common.Memtype <> ofs var
R32924:32924 compcert.common.Memtype <> b var
R32921:32922 compcert.common.Memtype <> m1 var
R32882:32884 Coq.Init.Logic <> :type_scope:x_'='_x not
R32867:32870 compcert.common.Memtype MEM free defax
R32880:32881 compcert.common.Memtype <> hi var
R32877:32878 compcert.common.Memtype <> lo var
R32875:32875 compcert.common.Memtype <> b var
R32872:32873 compcert.common.Memtype <> m2 var
R32885:32888 Coq.Init.Datatypes <> Some constr
R32890:32892 compcert.common.Memtype <> m2' var
R32848:32854 compcert.common.Memtype MEM extends defax
R32859:32860 compcert.common.Memtype <> m2 var
R32856:32857 compcert.common.Memtype <> m1 var
ax 32990:33010 MEM free_parallel_extends
R33094:33100 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R33104:33110 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R33137:33142 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R33126:33128 Coq.Init.Logic <> :type_scope:x_'='_x not
R33111:33114 compcert.common.Memtype MEM free defax
R33124:33125 compcert.common.Memtype <> hi var
R33121:33122 compcert.common.Memtype <> lo var
R33119:33119 compcert.common.Memtype <> b var
R33116:33117 compcert.common.Memtype <> m2 var
R33129:33132 Coq.Init.Datatypes <> Some constr
R33134:33136 compcert.common.Memtype <> m2' var
R33143:33149 compcert.common.Memtype MEM extends defax
R33155:33157 compcert.common.Memtype <> m2' var
R33151:33153 compcert.common.Memtype <> m1' var
R33077:33079 Coq.Init.Logic <> :type_scope:x_'='_x not
R33062:33065 compcert.common.Memtype MEM free defax
R33075:33076 compcert.common.Memtype <> hi var
R33072:33073 compcert.common.Memtype <> lo var
R33070:33070 compcert.common.Memtype <> b var
R33067:33068 compcert.common.Memtype <> m1 var
R33080:33083 Coq.Init.Datatypes <> Some constr
R33085:33087 compcert.common.Memtype <> m1' var
R33043:33049 compcert.common.Memtype MEM extends defax
R33054:33055 compcert.common.Memtype <> m2 var
R33051:33052 compcert.common.Memtype <> m1 var
ax 33167:33185 MEM valid_block_extends
R33244:33248 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R33228:33238 compcert.common.Memtype MEM valid_block def
R33243:33243 compcert.common.Memtype <> b var
R33240:33241 compcert.common.Memtype <> m1 var
R33249:33259 compcert.common.Memtype MEM valid_block def
R33264:33264 compcert.common.Memtype <> b var
R33261:33262 compcert.common.Memtype <> m2 var
R33208:33214 compcert.common.Memtype MEM extends defax
R33219:33220 compcert.common.Memtype <> m2 var
R33216:33217 compcert.common.Memtype <> m1 var
ax 33274:33285 MEM perm_extends
R33354:33357 compcert.common.Memtype MEM perm defax
R33370:33370 compcert.common.Memtype <> p var
R33368:33368 compcert.common.Memtype <> k var
R33364:33366 compcert.common.Memtype <> ofs var
R33362:33362 compcert.common.Memtype <> b var
R33359:33360 compcert.common.Memtype <> m2 var
R33333:33336 compcert.common.Memtype MEM perm defax
R33349:33349 compcert.common.Memtype <> p var
R33347:33347 compcert.common.Memtype <> k var
R33343:33345 compcert.common.Memtype <> ofs var
R33341:33341 compcert.common.Memtype <> b var
R33338:33339 compcert.common.Memtype <> m1 var
R33316:33322 compcert.common.Memtype MEM extends defax
R33327:33328 compcert.common.Memtype <> m2 var
R33324:33325 compcert.common.Memtype <> m1 var
ax 33379:33398 MEM valid_access_extends
R33483:33494 compcert.common.Memtype MEM valid_access def
R33511:33511 compcert.common.Memtype <> p var
R33507:33509 compcert.common.Memtype <> ofs var
R33505:33505 compcert.common.Memtype <> b var
R33499:33503 compcert.common.Memtype <> chunk var
R33496:33497 compcert.common.Memtype <> m2 var
R33450:33461 compcert.common.Memtype MEM valid_access def
R33478:33478 compcert.common.Memtype <> p var
R33474:33476 compcert.common.Memtype <> ofs var
R33472:33472 compcert.common.Memtype <> b var
R33466:33470 compcert.common.Memtype <> chunk var
R33463:33464 compcert.common.Memtype <> m1 var
R33433:33439 compcert.common.Memtype MEM extends defax
R33444:33445 compcert.common.Memtype <> m2 var
R33441:33442 compcert.common.Memtype <> m1 var
ax 33520:33540 MEM valid_pointer_extends
R33639:33641 Coq.Init.Logic <> :type_scope:x_'='_x not
R33617:33629 compcert.common.Memtype MEM valid_pointer defax
R33636:33638 compcert.common.Memtype <> ofs var
R33634:33634 compcert.common.Memtype <> b var
R33631:33632 compcert.common.Memtype <> m2 var
R33642:33645 Coq.Init.Datatypes <> true constr
R33606:33608 Coq.Init.Logic <> :type_scope:x_'='_x not
R33584:33596 compcert.common.Memtype MEM valid_pointer defax
R33603:33605 compcert.common.Memtype <> ofs var
R33601:33601 compcert.common.Memtype <> b var
R33598:33599 compcert.common.Memtype <> m1 var
R33609:33612 Coq.Init.Datatypes <> true constr
R33567:33573 compcert.common.Memtype MEM extends defax
R33578:33579 compcert.common.Memtype <> m2 var
R33575:33576 compcert.common.Memtype <> m1 var
ax 33654:33679 MEM weak_valid_pointer_extends
R33790:33792 Coq.Init.Logic <> :type_scope:x_'='_x not
R33763:33780 compcert.common.Memtype MEM weak_valid_pointer def
R33787:33789 compcert.common.Memtype <> ofs var
R33785:33785 compcert.common.Memtype <> b var
R33782:33783 compcert.common.Memtype <> m2 var
R33793:33796 Coq.Init.Datatypes <> true constr
R33752:33754 Coq.Init.Logic <> :type_scope:x_'='_x not
R33725:33742 compcert.common.Memtype MEM weak_valid_pointer def
R33749:33751 compcert.common.Memtype <> ofs var
R33747:33747 compcert.common.Memtype <> b var
R33744:33745 compcert.common.Memtype <> m1 var
R33755:33758 Coq.Init.Datatypes <> true constr
R33706:33712 compcert.common.Memtype MEM extends defax
R33717:33718 compcert.common.Memtype <> m2 var
R33714:33715 compcert.common.Memtype <> m1 var
ax 34530:34535 MEM inject
R34555:34557 compcert.common.Memtype MEM mem defax
R34548:34550 compcert.common.Memtype MEM mem defax
R34538:34543 compcert.common.Values <> meminj def
ax 34575:34594 MEM valid_block_inject_1
R34677:34687 compcert.common.Memtype MEM valid_block def
R34692:34693 compcert.common.Memtype <> b1 var
R34689:34690 compcert.common.Memtype <> m1 var
R34657:34662 compcert.common.Memtype MEM inject defax
R34669:34670 compcert.common.Memtype <> m2 var
R34666:34667 compcert.common.Memtype <> m1 var
R34664:34664 compcert.common.Memtype <> f var
R34633:34635 Coq.Init.Logic <> :type_scope:x_'='_x not
R34629:34629 compcert.common.Memtype <> f var
R34631:34632 compcert.common.Memtype <> b1 var
R34636:34639 Coq.Init.Datatypes <> Some constr
R34640:34640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34643:34644 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34650:34650 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34641:34642 compcert.common.Memtype <> b2 var
R34645:34649 compcert.common.Memtype <> delta var
ax 34703:34722 MEM valid_block_inject_2
R34805:34815 compcert.common.Memtype MEM valid_block def
R34820:34821 compcert.common.Memtype <> b2 var
R34817:34818 compcert.common.Memtype <> m2 var
R34785:34790 compcert.common.Memtype MEM inject defax
R34797:34798 compcert.common.Memtype <> m2 var
R34794:34795 compcert.common.Memtype <> m1 var
R34792:34792 compcert.common.Memtype <> f var
R34761:34763 Coq.Init.Logic <> :type_scope:x_'='_x not
R34757:34757 compcert.common.Memtype <> f var
R34759:34760 compcert.common.Memtype <> b1 var
R34764:34767 Coq.Init.Datatypes <> Some constr
R34768:34768 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34771:34772 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34778:34778 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34769:34770 compcert.common.Memtype <> b2 var
R34773:34777 compcert.common.Memtype <> delta var
ax 34831:34841 MEM perm_inject
R34954:34957 compcert.common.Memtype MEM perm defax
R34981:34981 compcert.common.Memtype <> p var
R34979:34979 compcert.common.Memtype <> k var
R34969:34971 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R34966:34968 compcert.common.Memtype <> ofs var
R34972:34976 compcert.common.Memtype <> delta var
R34962:34963 compcert.common.Memtype <> b2 var
R34959:34960 compcert.common.Memtype <> m2 var
R34932:34935 compcert.common.Memtype MEM perm defax
R34949:34949 compcert.common.Memtype <> p var
R34947:34947 compcert.common.Memtype <> k var
R34943:34945 compcert.common.Memtype <> ofs var
R34940:34941 compcert.common.Memtype <> b1 var
R34937:34938 compcert.common.Memtype <> m1 var
R34912:34917 compcert.common.Memtype MEM inject defax
R34924:34925 compcert.common.Memtype <> m2 var
R34921:34922 compcert.common.Memtype <> m1 var
R34919:34919 compcert.common.Memtype <> f var
R34888:34890 Coq.Init.Logic <> :type_scope:x_'='_x not
R34884:34884 compcert.common.Memtype <> f var
R34886:34887 compcert.common.Memtype <> b1 var
R34891:34894 Coq.Init.Datatypes <> Some constr
R34895:34895 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34898:34899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34905:34905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34896:34897 compcert.common.Memtype <> b2 var
R34900:34904 compcert.common.Memtype <> delta var
ax 34991:35009 MEM valid_access_inject
R35140:35151 compcert.common.Memtype MEM valid_access def
R35179:35179 compcert.common.Memtype <> p var
R35169:35171 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35166:35168 compcert.common.Memtype <> ofs var
R35172:35176 compcert.common.Memtype <> delta var
R35162:35163 compcert.common.Memtype <> b2 var
R35156:35160 compcert.common.Memtype <> chunk var
R35153:35154 compcert.common.Memtype <> m2 var
R35104:35115 compcert.common.Memtype MEM valid_access def
R35133:35133 compcert.common.Memtype <> p var
R35129:35131 compcert.common.Memtype <> ofs var
R35126:35127 compcert.common.Memtype <> b1 var
R35120:35124 compcert.common.Memtype <> chunk var
R35117:35118 compcert.common.Memtype <> m1 var
R35084:35089 compcert.common.Memtype MEM inject defax
R35096:35097 compcert.common.Memtype <> m2 var
R35093:35094 compcert.common.Memtype <> m1 var
R35091:35091 compcert.common.Memtype <> f var
R35060:35062 Coq.Init.Logic <> :type_scope:x_'='_x not
R35056:35056 compcert.common.Memtype <> f var
R35058:35059 compcert.common.Memtype <> b1 var
R35063:35066 Coq.Init.Datatypes <> Some constr
R35067:35067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35070:35071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35077:35077 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35068:35069 compcert.common.Memtype <> b2 var
R35072:35076 compcert.common.Memtype <> delta var
ax 35189:35208 MEM valid_pointer_inject
R35364:35366 Coq.Init.Logic <> :type_scope:x_'='_x not
R35331:35343 compcert.common.Memtype MEM valid_pointer defax
R35355:35357 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35352:35354 compcert.common.Memtype <> ofs var
R35358:35362 compcert.common.Memtype <> delta var
R35348:35349 compcert.common.Memtype <> b2 var
R35345:35346 compcert.common.Memtype <> m2 var
R35367:35370 Coq.Init.Datatypes <> true constr
R35318:35320 Coq.Init.Logic <> :type_scope:x_'='_x not
R35295:35307 compcert.common.Memtype MEM valid_pointer defax
R35315:35317 compcert.common.Memtype <> ofs var
R35312:35313 compcert.common.Memtype <> b1 var
R35309:35310 compcert.common.Memtype <> m1 var
R35321:35324 Coq.Init.Datatypes <> true constr
R35275:35280 compcert.common.Memtype MEM inject defax
R35287:35288 compcert.common.Memtype <> m2 var
R35284:35285 compcert.common.Memtype <> m1 var
R35282:35282 compcert.common.Memtype <> f var
R35251:35253 Coq.Init.Logic <> :type_scope:x_'='_x not
R35247:35247 compcert.common.Memtype <> f var
R35249:35250 compcert.common.Memtype <> b1 var
R35254:35257 Coq.Init.Datatypes <> Some constr
R35258:35258 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35261:35262 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35268:35268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35259:35260 compcert.common.Memtype <> b2 var
R35263:35267 compcert.common.Memtype <> delta var
ax 35380:35404 MEM weak_valid_pointer_inject
R35570:35572 Coq.Init.Logic <> :type_scope:x_'='_x not
R35532:35549 compcert.common.Memtype MEM weak_valid_pointer def
R35561:35563 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35558:35560 compcert.common.Memtype <> ofs var
R35564:35568 compcert.common.Memtype <> delta var
R35554:35555 compcert.common.Memtype <> b2 var
R35551:35552 compcert.common.Memtype <> m2 var
R35573:35576 Coq.Init.Datatypes <> true constr
R35519:35521 Coq.Init.Logic <> :type_scope:x_'='_x not
R35491:35508 compcert.common.Memtype MEM weak_valid_pointer def
R35516:35518 compcert.common.Memtype <> ofs var
R35513:35514 compcert.common.Memtype <> b1 var
R35510:35511 compcert.common.Memtype <> m1 var
R35522:35525 Coq.Init.Datatypes <> true constr
R35471:35476 compcert.common.Memtype MEM inject defax
R35483:35484 compcert.common.Memtype <> m2 var
R35480:35481 compcert.common.Memtype <> m1 var
R35478:35478 compcert.common.Memtype <> f var
R35447:35449 Coq.Init.Logic <> :type_scope:x_'='_x not
R35443:35443 compcert.common.Memtype <> f var
R35445:35446 compcert.common.Memtype <> b1 var
R35450:35453 Coq.Init.Datatypes <> Some constr
R35454:35454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35457:35458 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35464:35464 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35455:35456 compcert.common.Memtype <> b2 var
R35459:35463 compcert.common.Memtype <> delta var
ax 35586:35599 MEM address_inject
R35776:35778 Coq.Init.Logic <> :type_scope:x_'='_x not
R35732:35743 compcert.lib.Integers Int unsigned def
R35746:35752 compcert.lib.Integers Int add def
R35760:35767 compcert.lib.Integers Int repr def
R35769:35773 compcert.common.Memtype <> delta var
R35754:35757 compcert.common.Memtype <> ofs1 var
R35796:35798 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35779:35790 compcert.lib.Integers Int unsigned def
R35792:35795 compcert.common.Memtype <> ofs1 var
R35799:35803 compcert.common.Memtype <> delta var
R35707:35709 Coq.Init.Logic <> :type_scope:x_'='_x not
R35703:35703 compcert.common.Memtype <> f var
R35705:35706 compcert.common.Memtype <> b1 var
R35710:35713 Coq.Init.Datatypes <> Some constr
R35715:35715 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35718:35719 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35725:35725 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35716:35717 compcert.common.Memtype <> b2 var
R35720:35724 compcert.common.Memtype <> delta var
R35661:35664 compcert.common.Memtype MEM perm defax
R35696:35696 compcert.common.Memtype <> p var
R35692:35694 compcert.common.Memtype MEM Cur constr
R35673:35684 compcert.lib.Integers Int unsigned def
R35686:35689 compcert.common.Memtype <> ofs1 var
R35669:35670 compcert.common.Memtype <> b1 var
R35666:35667 compcert.common.Memtype <> m1 var
R35641:35646 compcert.common.Memtype MEM inject defax
R35653:35654 compcert.common.Memtype <> m2 var
R35650:35651 compcert.common.Memtype <> m1 var
R35648:35648 compcert.common.Memtype <> f var
ax 35813:35844 MEM valid_pointer_inject_no_overflow
R35980:35983 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36032:36035 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36000:36002 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35984:35995 compcert.lib.Integers Int unsigned def
R35997:35999 compcert.common.Memtype <> ofs var
R36003:36014 compcert.lib.Integers Int unsigned def
R36017:36024 compcert.lib.Integers Int repr def
R36026:36030 compcert.common.Memtype <> delta var
R36000:36002 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35984:35995 compcert.lib.Integers Int unsigned def
R35997:35999 compcert.common.Memtype <> ofs var
R36003:36014 compcert.lib.Integers Int unsigned def
R36017:36024 compcert.lib.Integers Int repr def
R36026:36030 compcert.common.Memtype <> delta var
R36036:36051 compcert.lib.Integers Int max_unsigned def
R35955:35957 Coq.Init.Logic <> :type_scope:x_'='_x not
R35952:35952 compcert.common.Memtype <> f var
R35954:35954 compcert.common.Memtype <> b var
R35958:35961 Coq.Init.Datatypes <> Some constr
R35962:35962 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35965:35966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35972:35972 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35963:35964 compcert.common.Memtype <> b' var
R35967:35971 compcert.common.Memtype <> delta var
R35939:35941 Coq.Init.Logic <> :type_scope:x_'='_x not
R35902:35914 compcert.common.Memtype MEM valid_pointer defax
R35922:35933 compcert.lib.Integers Int unsigned def
R35935:35937 compcert.common.Memtype <> ofs var
R35919:35919 compcert.common.Memtype <> b var
R35916:35917 compcert.common.Memtype <> m1 var
R35942:35945 Coq.Init.Datatypes <> true constr
R35882:35887 compcert.common.Memtype MEM inject defax
R35894:35895 compcert.common.Memtype <> m2 var
R35891:35892 compcert.common.Memtype <> m1 var
R35889:35889 compcert.common.Memtype <> f var
ax 36061:36097 MEM weak_valid_pointer_inject_no_overflow
R36238:36241 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36290:36293 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36258:36260 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R36242:36253 compcert.lib.Integers Int unsigned def
R36255:36257 compcert.common.Memtype <> ofs var
R36261:36272 compcert.lib.Integers Int unsigned def
R36275:36282 compcert.lib.Integers Int repr def
R36284:36288 compcert.common.Memtype <> delta var
R36258:36260 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R36242:36253 compcert.lib.Integers Int unsigned def
R36255:36257 compcert.common.Memtype <> ofs var
R36261:36272 compcert.lib.Integers Int unsigned def
R36275:36282 compcert.lib.Integers Int repr def
R36284:36288 compcert.common.Memtype <> delta var
R36294:36309 compcert.lib.Integers Int max_unsigned def
R36213:36215 Coq.Init.Logic <> :type_scope:x_'='_x not
R36210:36210 compcert.common.Memtype <> f var
R36212:36212 compcert.common.Memtype <> b var
R36216:36219 Coq.Init.Datatypes <> Some constr
R36220:36220 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36223:36224 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36230:36230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36221:36222 compcert.common.Memtype <> b' var
R36225:36229 compcert.common.Memtype <> delta var
R36197:36199 Coq.Init.Logic <> :type_scope:x_'='_x not
R36155:36172 compcert.common.Memtype MEM weak_valid_pointer def
R36180:36191 compcert.lib.Integers Int unsigned def
R36193:36195 compcert.common.Memtype <> ofs var
R36177:36177 compcert.common.Memtype <> b var
R36174:36175 compcert.common.Memtype <> m1 var
R36200:36203 Coq.Init.Datatypes <> true constr
R36135:36140 compcert.common.Memtype MEM inject defax
R36147:36148 compcert.common.Memtype <> m2 var
R36144:36145 compcert.common.Memtype <> m1 var
R36142:36142 compcert.common.Memtype <> f var
ax 36319:36342 MEM valid_pointer_inject_val
R36534:36536 Coq.Init.Logic <> :type_scope:x_'='_x not
R36495:36507 compcert.common.Memtype MEM valid_pointer defax
R36516:36527 compcert.lib.Integers Int unsigned def
R36529:36532 compcert.common.Memtype <> ofs' var
R36512:36513 compcert.common.Memtype <> b' var
R36509:36510 compcert.common.Memtype <> m2 var
R36537:36540 Coq.Init.Datatypes <> true constr
R36449:36458 compcert.common.Values <> val_inject ind
R36476:36479 compcert.common.Values <> Vptr constr
R36484:36487 compcert.common.Memtype <> ofs' var
R36481:36482 compcert.common.Memtype <> b' var
R36463:36466 compcert.common.Values <> Vptr constr
R36470:36472 compcert.common.Memtype <> ofs var
R36468:36468 compcert.common.Memtype <> b var
R36460:36460 compcert.common.Memtype <> f var
R36436:36438 Coq.Init.Logic <> :type_scope:x_'='_x not
R36399:36411 compcert.common.Memtype MEM valid_pointer defax
R36419:36430 compcert.lib.Integers Int unsigned def
R36432:36434 compcert.common.Memtype <> ofs var
R36416:36416 compcert.common.Memtype <> b var
R36413:36414 compcert.common.Memtype <> m1 var
R36439:36442 Coq.Init.Datatypes <> true constr
R36379:36384 compcert.common.Memtype MEM inject defax
R36391:36392 compcert.common.Memtype <> m2 var
R36388:36389 compcert.common.Memtype <> m1 var
R36386:36386 compcert.common.Memtype <> f var
ax 36550:36578 MEM weak_valid_pointer_inject_val
R36780:36782 Coq.Init.Logic <> :type_scope:x_'='_x not
R36736:36753 compcert.common.Memtype MEM weak_valid_pointer def
R36762:36773 compcert.lib.Integers Int unsigned def
R36775:36778 compcert.common.Memtype <> ofs' var
R36758:36759 compcert.common.Memtype <> b' var
R36755:36756 compcert.common.Memtype <> m2 var
R36783:36786 Coq.Init.Datatypes <> true constr
R36690:36699 compcert.common.Values <> val_inject ind
R36717:36720 compcert.common.Values <> Vptr constr
R36725:36728 compcert.common.Memtype <> ofs' var
R36722:36723 compcert.common.Memtype <> b' var
R36704:36707 compcert.common.Values <> Vptr constr
R36711:36713 compcert.common.Memtype <> ofs var
R36709:36709 compcert.common.Memtype <> b var
R36701:36701 compcert.common.Memtype <> f var
R36677:36679 Coq.Init.Logic <> :type_scope:x_'='_x not
R36635:36652 compcert.common.Memtype MEM weak_valid_pointer def
R36660:36671 compcert.lib.Integers Int unsigned def
R36673:36675 compcert.common.Memtype <> ofs var
R36657:36657 compcert.common.Memtype <> b var
R36654:36655 compcert.common.Memtype <> m1 var
R36680:36683 Coq.Init.Datatypes <> true constr
R36615:36620 compcert.common.Memtype MEM inject defax
R36627:36628 compcert.common.Memtype <> m2 var
R36624:36625 compcert.common.Memtype <> m1 var
R36622:36622 compcert.common.Memtype <> f var
ax 36796:36812 MEM inject_no_overlap
R37047:37050 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37040:37043 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37037:37039 compcert.common.Memtype <> b1' var
R37044:37046 compcert.common.Memtype <> b2' var
R37064:37067 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37055:37057 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R37051:37054 compcert.common.Memtype <> ofs1 var
R37058:37063 compcert.common.Memtype <> delta1 var
R37072:37074 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R37068:37071 compcert.common.Memtype <> ofs2 var
R37075:37080 compcert.common.Memtype <> delta2 var
R37003:37006 compcert.common.Memtype MEM perm defax
R37023:37030 compcert.common.Memtype MEM Nonempty constr
R37019:37021 compcert.common.Memtype MEM Max constr
R37014:37017 compcert.common.Memtype <> ofs2 var
R37011:37012 compcert.common.Memtype <> b2 var
R37008:37009 compcert.common.Memtype <> m1 var
R36969:36972 compcert.common.Memtype MEM perm defax
R36989:36996 compcert.common.Memtype MEM Nonempty constr
R36985:36987 compcert.common.Memtype MEM Max constr
R36980:36983 compcert.common.Memtype <> ofs1 var
R36977:36978 compcert.common.Memtype <> b1 var
R36974:36975 compcert.common.Memtype <> m1 var
R36942:36944 Coq.Init.Logic <> :type_scope:x_'='_x not
R36938:36938 compcert.common.Memtype <> f var
R36940:36941 compcert.common.Memtype <> b2 var
R36945:36948 Coq.Init.Datatypes <> Some constr
R36950:36950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36954:36955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36962:36962 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36951:36953 compcert.common.Memtype <> b2' var
R36956:36961 compcert.common.Memtype <> delta2 var
R36911:36913 Coq.Init.Logic <> :type_scope:x_'='_x not
R36907:36907 compcert.common.Memtype <> f var
R36909:36910 compcert.common.Memtype <> b1 var
R36914:36917 Coq.Init.Datatypes <> Some constr
R36919:36919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36923:36924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36931:36931 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36920:36922 compcert.common.Memtype <> b1' var
R36925:36930 compcert.common.Memtype <> delta1 var
R36895:36898 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36893:36894 compcert.common.Memtype <> b1 var
R36899:36900 compcert.common.Memtype <> b2 var
R36873:36878 compcert.common.Memtype MEM inject defax
R36885:36886 compcert.common.Memtype <> m2 var
R36882:36883 compcert.common.Memtype <> m1 var
R36880:36880 compcert.common.Memtype <> f var
ax 37090:37114 MEM different_pointers_inject
R37381:37386 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37374:37377 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37371:37373 compcert.common.Memtype <> b1' var
R37378:37380 compcert.common.Memtype <> b2' var
R37432:37437 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37387:37398 compcert.lib.Integers Int unsigned def
R37401:37407 compcert.lib.Integers Int add def
R37415:37422 compcert.lib.Integers Int repr def
R37424:37429 compcert.common.Memtype <> delta1 var
R37409:37412 compcert.common.Memtype <> ofs1 var
R37438:37449 compcert.lib.Integers Int unsigned def
R37452:37458 compcert.lib.Integers Int add def
R37466:37473 compcert.lib.Integers Int repr def
R37475:37480 compcert.common.Memtype <> delta2 var
R37460:37463 compcert.common.Memtype <> ofs2 var
R37344:37346 Coq.Init.Logic <> :type_scope:x_'='_x not
R37340:37340 compcert.common.Memtype <> f var
R37342:37343 compcert.common.Memtype <> b2 var
R37347:37350 Coq.Init.Datatypes <> Some constr
R37352:37352 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37356:37357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37364:37364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37353:37355 compcert.common.Memtype <> b2' var
R37358:37363 compcert.common.Memtype <> delta2 var
R37313:37315 Coq.Init.Logic <> :type_scope:x_'='_x not
R37309:37309 compcert.common.Memtype <> f var
R37311:37312 compcert.common.Memtype <> b1 var
R37316:37319 Coq.Init.Datatypes <> Some constr
R37321:37321 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37325:37326 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37333:37333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37322:37324 compcert.common.Memtype <> b1' var
R37327:37332 compcert.common.Memtype <> delta1 var
R37296:37298 Coq.Init.Logic <> :type_scope:x_'='_x not
R37258:37270 compcert.common.Memtype MEM valid_pointer defax
R37278:37289 compcert.lib.Integers Int unsigned def
R37291:37294 compcert.common.Memtype <> ofs2 var
R37274:37275 compcert.common.Memtype <> b2 var
R37272:37272 compcert.common.Memtype <> m var
R37299:37302 Coq.Init.Datatypes <> true constr
R37245:37247 Coq.Init.Logic <> :type_scope:x_'='_x not
R37207:37219 compcert.common.Memtype MEM valid_pointer defax
R37227:37238 compcert.lib.Integers Int unsigned def
R37240:37243 compcert.common.Memtype <> ofs1 var
R37223:37224 compcert.common.Memtype <> b1 var
R37221:37221 compcert.common.Memtype <> m var
R37248:37251 Coq.Init.Datatypes <> true constr
R37195:37198 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37193:37194 compcert.common.Memtype <> b1 var
R37199:37200 compcert.common.Memtype <> b2 var
R37174:37179 compcert.common.Memtype MEM inject defax
R37185:37186 compcert.common.Memtype <> m' var
R37183:37183 compcert.common.Memtype <> m var
R37181:37181 compcert.common.Memtype <> f var
ax 37492:37502 MEM load_inject
R37635:37641 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37644:37645 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37686:37689 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R37676:37678 Coq.Init.Logic <> :type_scope:x_'='_x not
R37646:37649 compcert.common.Memtype MEM load defax
R37667:37669 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R37664:37666 compcert.common.Memtype <> ofs var
R37670:37674 compcert.common.Memtype <> delta var
R37660:37661 compcert.common.Memtype <> b2 var
R37657:37658 compcert.common.Memtype <> m2 var
R37651:37655 compcert.common.Memtype <> chunk var
R37679:37682 Coq.Init.Datatypes <> Some constr
R37684:37685 compcert.common.Memtype <> v2 var
R37690:37699 compcert.common.Values <> val_inject ind
R37706:37707 compcert.common.Memtype <> v2 var
R37703:37704 compcert.common.Memtype <> v1 var
R37701:37701 compcert.common.Memtype <> f var
R37610:37612 Coq.Init.Logic <> :type_scope:x_'='_x not
R37606:37606 compcert.common.Memtype <> f var
R37608:37609 compcert.common.Memtype <> b1 var
R37613:37616 Coq.Init.Datatypes <> Some constr
R37618:37618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37621:37622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37628:37628 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37619:37620 compcert.common.Memtype <> b2 var
R37623:37627 compcert.common.Memtype <> delta var
R37590:37592 Coq.Init.Logic <> :type_scope:x_'='_x not
R37570:37573 compcert.common.Memtype MEM load defax
R37587:37589 compcert.common.Memtype <> ofs var
R37584:37585 compcert.common.Memtype <> b1 var
R37581:37582 compcert.common.Memtype <> m1 var
R37575:37579 compcert.common.Memtype <> chunk var
R37593:37596 Coq.Init.Datatypes <> Some constr
R37598:37599 compcert.common.Memtype <> v1 var
R37550:37555 compcert.common.Memtype MEM inject defax
R37562:37563 compcert.common.Memtype <> m2 var
R37559:37560 compcert.common.Memtype <> m1 var
R37557:37557 compcert.common.Memtype <> f var
ax 37717:37728 MEM loadv_inject
R37843:37849 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37852:37853 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37881:37884 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R37871:37873 Coq.Init.Logic <> :type_scope:x_'='_x not
R37854:37858 compcert.common.Memtype MEM loadv def
R37869:37870 compcert.common.Memtype <> a2 var
R37866:37867 compcert.common.Memtype <> m2 var
R37860:37864 compcert.common.Memtype <> chunk var
R37874:37877 Coq.Init.Datatypes <> Some constr
R37879:37880 compcert.common.Memtype <> v2 var
R37885:37894 compcert.common.Values <> val_inject ind
R37901:37902 compcert.common.Memtype <> v2 var
R37898:37899 compcert.common.Memtype <> v1 var
R37896:37896 compcert.common.Memtype <> f var
R37819:37828 compcert.common.Values <> val_inject ind
R37835:37836 compcert.common.Memtype <> a2 var
R37832:37833 compcert.common.Memtype <> a1 var
R37830:37830 compcert.common.Memtype <> f var
R37803:37805 Coq.Init.Logic <> :type_scope:x_'='_x not
R37786:37790 compcert.common.Memtype MEM loadv def
R37801:37802 compcert.common.Memtype <> a1 var
R37798:37799 compcert.common.Memtype <> m1 var
R37792:37796 compcert.common.Memtype <> chunk var
R37806:37809 Coq.Init.Datatypes <> Some constr
R37811:37812 compcert.common.Memtype <> v1 var
R37766:37771 compcert.common.Memtype MEM inject defax
R37778:37779 compcert.common.Memtype <> m2 var
R37775:37776 compcert.common.Memtype <> m1 var
R37773:37773 compcert.common.Memtype <> f var
ax 37912:37927 MEM loadbytes_inject
R38069:38075 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38082:38083 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38131:38148 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38117:38119 Coq.Init.Logic <> :type_scope:x_'='_x not
R38084:38092 compcert.common.Memtype MEM loadbytes defax
R38114:38116 compcert.common.Memtype <> len var
R38104:38106 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38101:38103 compcert.common.Memtype <> ofs var
R38107:38111 compcert.common.Memtype <> delta var
R38097:38098 compcert.common.Memtype <> b2 var
R38094:38095 compcert.common.Memtype <> m2 var
R38120:38123 Coq.Init.Datatypes <> Some constr
R38125:38130 compcert.common.Memtype <> bytes2 var
R38149:38160 compcert.lib.Coqlib <> list_forall2 ind
R38187:38192 compcert.common.Memtype <> bytes2 var
R38180:38185 compcert.common.Memtype <> bytes1 var
R38163:38175 compcert.common.Memdata <> memval_inject ind
R38177:38177 compcert.common.Memtype <> f var
R38044:38046 Coq.Init.Logic <> :type_scope:x_'='_x not
R38040:38040 compcert.common.Memtype <> f var
R38042:38043 compcert.common.Memtype <> b1 var
R38047:38050 Coq.Init.Datatypes <> Some constr
R38052:38052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38055:38056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38062:38062 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38053:38054 compcert.common.Memtype <> b2 var
R38057:38061 compcert.common.Memtype <> delta var
R38020:38022 Coq.Init.Logic <> :type_scope:x_'='_x not
R37997:38005 compcert.common.Memtype MEM loadbytes defax
R38017:38019 compcert.common.Memtype <> len var
R38013:38015 compcert.common.Memtype <> ofs var
R38010:38011 compcert.common.Memtype <> b1 var
R38007:38008 compcert.common.Memtype <> m1 var
R38023:38026 Coq.Init.Datatypes <> Some constr
R38028:38033 compcert.common.Memtype <> bytes1 var
R37977:37982 compcert.common.Memtype MEM inject defax
R37989:37990 compcert.common.Memtype <> m2 var
R37986:37987 compcert.common.Memtype <> m1 var
R37984:37984 compcert.common.Memtype <> f var
ax 38202:38220 MEM store_mapped_inject
R38387:38393 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38396:38401 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38446:38453 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38436:38438 Coq.Init.Logic <> :type_scope:x_'='_x not
R38402:38406 compcert.common.Memtype MEM store defax
R38434:38435 compcert.common.Memtype <> v2 var
R38424:38426 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38421:38423 compcert.common.Memtype <> ofs var
R38427:38431 compcert.common.Memtype <> delta var
R38417:38418 compcert.common.Memtype <> b2 var
R38414:38415 compcert.common.Memtype <> m2 var
R38408:38412 compcert.common.Memtype <> chunk var
R38439:38442 Coq.Init.Datatypes <> Some constr
R38444:38445 compcert.common.Memtype <> n2 var
R38454:38459 compcert.common.Memtype MEM inject defax
R38466:38467 compcert.common.Memtype <> n2 var
R38463:38464 compcert.common.Memtype <> n1 var
R38461:38461 compcert.common.Memtype <> f var
R38363:38372 compcert.common.Values <> val_inject ind
R38379:38380 compcert.common.Memtype <> v2 var
R38376:38377 compcert.common.Memtype <> v1 var
R38374:38374 compcert.common.Memtype <> f var
R38338:38340 Coq.Init.Logic <> :type_scope:x_'='_x not
R38334:38334 compcert.common.Memtype <> f var
R38336:38337 compcert.common.Memtype <> b1 var
R38341:38344 Coq.Init.Datatypes <> Some constr
R38346:38346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38349:38350 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38356:38356 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38347:38348 compcert.common.Memtype <> b2 var
R38351:38355 compcert.common.Memtype <> delta var
R38318:38320 Coq.Init.Logic <> :type_scope:x_'='_x not
R38294:38298 compcert.common.Memtype MEM store defax
R38316:38317 compcert.common.Memtype <> v1 var
R38312:38314 compcert.common.Memtype <> ofs var
R38309:38310 compcert.common.Memtype <> b1 var
R38306:38307 compcert.common.Memtype <> m1 var
R38300:38304 compcert.common.Memtype <> chunk var
R38321:38324 Coq.Init.Datatypes <> Some constr
R38326:38327 compcert.common.Memtype <> n1 var
R38274:38279 compcert.common.Memtype MEM inject defax
R38286:38287 compcert.common.Memtype <> m2 var
R38283:38284 compcert.common.Memtype <> m1 var
R38281:38281 compcert.common.Memtype <> f var
ax 38477:38497 MEM store_unmapped_inject
R38616:38621 compcert.common.Memtype MEM inject defax
R38628:38629 compcert.common.Memtype <> m2 var
R38625:38626 compcert.common.Memtype <> n1 var
R38623:38623 compcert.common.Memtype <> f var
R38603:38605 Coq.Init.Logic <> :type_scope:x_'='_x not
R38599:38599 compcert.common.Memtype <> f var
R38601:38602 compcert.common.Memtype <> b1 var
R38606:38609 Coq.Init.Datatypes <> None constr
R38583:38585 Coq.Init.Logic <> :type_scope:x_'='_x not
R38559:38563 compcert.common.Memtype MEM store defax
R38581:38582 compcert.common.Memtype <> v1 var
R38577:38579 compcert.common.Memtype <> ofs var
R38574:38575 compcert.common.Memtype <> b1 var
R38571:38572 compcert.common.Memtype <> m1 var
R38565:38569 compcert.common.Memtype <> chunk var
R38586:38589 Coq.Init.Datatypes <> Some constr
R38591:38592 compcert.common.Memtype <> n1 var
R38539:38544 compcert.common.Memtype MEM inject defax
R38551:38552 compcert.common.Memtype <> m2 var
R38548:38549 compcert.common.Memtype <> m1 var
R38546:38546 compcert.common.Memtype <> f var
ax 38639:38658 MEM store_outside_inject
R38910:38915 compcert.common.Memtype MEM inject defax
R38922:38924 compcert.common.Memtype <> m2' var
R38919:38920 compcert.common.Memtype <> m1 var
R38917:38917 compcert.common.Memtype <> f var
R38893:38895 Coq.Init.Logic <> :type_scope:x_'='_x not
R38871:38875 compcert.common.Memtype MEM store defax
R38892:38892 compcert.common.Memtype <> v var
R38888:38890 compcert.common.Memtype <> ofs var
R38886:38886 compcert.common.Memtype <> b var
R38883:38884 compcert.common.Memtype <> m2 var
R38877:38881 compcert.common.Memtype <> chunk var
R38896:38899 Coq.Init.Datatypes <> Some constr
R38901:38903 compcert.common.Memtype <> m2' var
R38859:38863 Coq.Init.Logic <> False ind
R38814:38817 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38830:38832 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38811:38813 compcert.common.Memtype <> ofs var
R38822:38824 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38818:38821 compcert.common.Memtype <> ofs' var
R38825:38829 compcert.common.Memtype <> delta var
R38822:38824 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38818:38821 compcert.common.Memtype <> ofs' var
R38825:38829 compcert.common.Memtype <> delta var
R38836:38838 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38833:38835 compcert.common.Memtype <> ofs var
R38839:38848 compcert.common.Memdata <> size_chunk def
R38850:38854 compcert.common.Memtype <> chunk var
R38775:38778 compcert.common.Memtype MEM perm defax
R38795:38802 compcert.common.Memtype MEM Readable constr
R38791:38793 compcert.common.Memtype MEM Cur constr
R38786:38789 compcert.common.Memtype <> ofs' var
R38783:38784 compcert.common.Memtype <> b' var
R38780:38781 compcert.common.Memtype <> m1 var
R38750:38752 Coq.Init.Logic <> :type_scope:x_'='_x not
R38746:38746 compcert.common.Memtype <> f var
R38748:38749 compcert.common.Memtype <> b' var
R38753:38756 Coq.Init.Datatypes <> Some constr
R38757:38757 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38759:38760 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38766:38766 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38758:38758 compcert.common.Memtype <> b var
R38761:38765 compcert.common.Memtype <> delta var
R38699:38704 compcert.common.Memtype MEM inject defax
R38711:38712 compcert.common.Memtype <> m2 var
R38708:38709 compcert.common.Memtype <> m1 var
R38706:38706 compcert.common.Memtype <> f var
ax 38934:38953 MEM storev_mapped_inject
R39102:39108 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39111:39116 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39148:39151 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39138:39140 Coq.Init.Logic <> :type_scope:x_'='_x not
R39117:39122 compcert.common.Memtype MEM storev def
R39136:39137 compcert.common.Memtype <> v2 var
R39133:39134 compcert.common.Memtype <> a2 var
R39130:39131 compcert.common.Memtype <> m2 var
R39124:39128 compcert.common.Memtype <> chunk var
R39141:39144 Coq.Init.Datatypes <> Some constr
R39146:39147 compcert.common.Memtype <> n2 var
R39152:39157 compcert.common.Memtype MEM inject defax
R39164:39165 compcert.common.Memtype <> n2 var
R39161:39162 compcert.common.Memtype <> n1 var
R39159:39159 compcert.common.Memtype <> f var
R39078:39087 compcert.common.Values <> val_inject ind
R39094:39095 compcert.common.Memtype <> v2 var
R39091:39092 compcert.common.Memtype <> v1 var
R39089:39089 compcert.common.Memtype <> f var
R39054:39063 compcert.common.Values <> val_inject ind
R39070:39071 compcert.common.Memtype <> a2 var
R39067:39068 compcert.common.Memtype <> a1 var
R39065:39065 compcert.common.Memtype <> f var
R39038:39040 Coq.Init.Logic <> :type_scope:x_'='_x not
R39017:39022 compcert.common.Memtype MEM storev def
R39036:39037 compcert.common.Memtype <> v1 var
R39033:39034 compcert.common.Memtype <> a1 var
R39030:39031 compcert.common.Memtype <> m1 var
R39024:39028 compcert.common.Memtype <> chunk var
R39041:39044 Coq.Init.Datatypes <> Some constr
R39046:39047 compcert.common.Memtype <> n1 var
R38997:39002 compcert.common.Memtype MEM inject defax
R39009:39010 compcert.common.Memtype <> m2 var
R39006:39007 compcert.common.Memtype <> m1 var
R39004:39004 compcert.common.Memtype <> f var
ax 39175:39198 MEM storebytes_mapped_inject
R39396:39402 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39405:39410 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39458:39465 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39448:39450 Coq.Init.Logic <> :type_scope:x_'='_x not
R39411:39420 compcert.common.Memtype MEM storebytes defax
R39442:39447 compcert.common.Memtype <> bytes2 var
R39432:39434 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39429:39431 compcert.common.Memtype <> ofs var
R39435:39439 compcert.common.Memtype <> delta var
R39425:39426 compcert.common.Memtype <> b2 var
R39422:39423 compcert.common.Memtype <> m2 var
R39451:39454 Coq.Init.Datatypes <> Some constr
R39456:39457 compcert.common.Memtype <> n2 var
R39466:39471 compcert.common.Memtype MEM inject defax
R39478:39479 compcert.common.Memtype <> n2 var
R39475:39476 compcert.common.Memtype <> n1 var
R39473:39473 compcert.common.Memtype <> f var
R39346:39357 compcert.lib.Coqlib <> list_forall2 ind
R39384:39389 compcert.common.Memtype <> bytes2 var
R39377:39382 compcert.common.Memtype <> bytes1 var
R39360:39372 compcert.common.Memdata <> memval_inject ind
R39374:39374 compcert.common.Memtype <> f var
R39321:39323 Coq.Init.Logic <> :type_scope:x_'='_x not
R39317:39317 compcert.common.Memtype <> f var
R39319:39320 compcert.common.Memtype <> b1 var
R39324:39327 Coq.Init.Datatypes <> Some constr
R39329:39329 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39332:39333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39339:39339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39330:39331 compcert.common.Memtype <> b2 var
R39334:39338 compcert.common.Memtype <> delta var
R39301:39303 Coq.Init.Logic <> :type_scope:x_'='_x not
R39274:39283 compcert.common.Memtype MEM storebytes defax
R39295:39300 compcert.common.Memtype <> bytes1 var
R39291:39293 compcert.common.Memtype <> ofs var
R39288:39289 compcert.common.Memtype <> b1 var
R39285:39286 compcert.common.Memtype <> m1 var
R39304:39307 Coq.Init.Datatypes <> Some constr
R39309:39310 compcert.common.Memtype <> n1 var
R39254:39259 compcert.common.Memtype MEM inject defax
R39266:39267 compcert.common.Memtype <> m2 var
R39263:39264 compcert.common.Memtype <> m1 var
R39261:39261 compcert.common.Memtype <> f var
ax 39489:39514 MEM storebytes_unmapped_inject
R39634:39639 compcert.common.Memtype MEM inject defax
R39646:39647 compcert.common.Memtype <> m2 var
R39643:39644 compcert.common.Memtype <> n1 var
R39641:39641 compcert.common.Memtype <> f var
R39621:39623 Coq.Init.Logic <> :type_scope:x_'='_x not
R39617:39617 compcert.common.Memtype <> f var
R39619:39620 compcert.common.Memtype <> b1 var
R39624:39627 Coq.Init.Datatypes <> None constr
R39601:39603 Coq.Init.Logic <> :type_scope:x_'='_x not
R39574:39583 compcert.common.Memtype MEM storebytes defax
R39595:39600 compcert.common.Memtype <> bytes1 var
R39591:39593 compcert.common.Memtype <> ofs var
R39588:39589 compcert.common.Memtype <> b1 var
R39585:39586 compcert.common.Memtype <> m1 var
R39604:39607 Coq.Init.Datatypes <> Some constr
R39609:39610 compcert.common.Memtype <> n1 var
R39554:39559 compcert.common.Memtype MEM inject defax
R39566:39567 compcert.common.Memtype <> m2 var
R39563:39564 compcert.common.Memtype <> m1 var
R39561:39561 compcert.common.Memtype <> f var
ax 39657:39681 MEM storebytes_outside_inject
R39944:39949 compcert.common.Memtype MEM inject defax
R39956:39958 compcert.common.Memtype <> m2' var
R39953:39954 compcert.common.Memtype <> m1 var
R39951:39951 compcert.common.Memtype <> f var
R39927:39929 Coq.Init.Logic <> :type_scope:x_'='_x not
R39901:39910 compcert.common.Memtype MEM storebytes defax
R39921:39926 compcert.common.Memtype <> bytes2 var
R39917:39919 compcert.common.Memtype <> ofs var
R39915:39915 compcert.common.Memtype <> b var
R39912:39913 compcert.common.Memtype <> m2 var
R39930:39933 Coq.Init.Datatypes <> Some constr
R39935:39937 compcert.common.Memtype <> m2' var
R39889:39893 Coq.Init.Logic <> False ind
R39836:39839 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R39852:39854 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R39833:39835 compcert.common.Memtype <> ofs var
R39844:39846 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39840:39843 compcert.common.Memtype <> ofs' var
R39847:39851 compcert.common.Memtype <> delta var
R39844:39846 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39840:39843 compcert.common.Memtype <> ofs' var
R39847:39851 compcert.common.Memtype <> delta var
R39858:39860 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39855:39857 compcert.common.Memtype <> ofs var
R39861:39868 Coq.ZArith.BinInt <> Z_of_nat syndef
R39871:39876 Coq.Init.Datatypes <> length def
R39878:39883 compcert.common.Memtype <> bytes2 var
R39797:39800 compcert.common.Memtype MEM perm defax
R39817:39824 compcert.common.Memtype MEM Readable constr
R39813:39815 compcert.common.Memtype MEM Cur constr
R39808:39811 compcert.common.Memtype <> ofs' var
R39805:39806 compcert.common.Memtype <> b' var
R39802:39803 compcert.common.Memtype <> m1 var
R39772:39774 Coq.Init.Logic <> :type_scope:x_'='_x not
R39768:39768 compcert.common.Memtype <> f var
R39770:39771 compcert.common.Memtype <> b' var
R39775:39778 Coq.Init.Datatypes <> Some constr
R39779:39779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39781:39782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39788:39788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39780:39780 compcert.common.Memtype <> b var
R39783:39787 compcert.common.Memtype <> delta var
R39721:39726 compcert.common.Memtype MEM inject defax
R39733:39734 compcert.common.Memtype <> m2 var
R39730:39731 compcert.common.Memtype <> m1 var
R39728:39728 compcert.common.Memtype <> f var
ax 39968:39985 MEM alloc_right_inject
R40073:40078 compcert.common.Memtype MEM inject defax
R40085:40087 compcert.common.Memtype <> m2' var
R40082:40083 compcert.common.Memtype <> m1 var
R40080:40080 compcert.common.Memtype <> f var
R40055:40057 Coq.Init.Logic <> :type_scope:x_'='_x not
R40041:40045 compcert.common.Memtype MEM alloc defax
R40053:40054 compcert.common.Memtype <> hi var
R40050:40051 compcert.common.Memtype <> lo var
R40047:40048 compcert.common.Memtype <> m2 var
R40058:40058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40062:40063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40066:40066 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40059:40061 compcert.common.Memtype <> m2' var
R40064:40065 compcert.common.Memtype <> b2 var
R40021:40026 compcert.common.Memtype MEM inject defax
R40033:40034 compcert.common.Memtype <> m2 var
R40030:40031 compcert.common.Memtype <> m1 var
R40028:40028 compcert.common.Memtype <> f var
ax 40097:40122 MEM alloc_left_unmapped_inject
R40210:40216 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40219:40225 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40242:40247 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40226:40231 compcert.common.Memtype MEM inject defax
R40240:40241 compcert.common.Memtype <> m2 var
R40236:40238 compcert.common.Memtype <> m1' var
R40233:40234 compcert.common.Memtype <> f' var
R40264:40269 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40248:40258 compcert.common.Values <> inject_incr def
R40262:40263 compcert.common.Memtype <> f' var
R40260:40260 compcert.common.Memtype <> f var
R40282:40288 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40320:40320 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40275:40277 Coq.Init.Logic <> :type_scope:x_'='_x not
R40270:40271 compcert.common.Memtype <> f' var
R40273:40274 compcert.common.Memtype <> b1 var
R40278:40281 Coq.Init.Datatypes <> None constr
R40314:40316 Coq.Init.Logic <> :type_scope:x_'='_x not
R40310:40311 compcert.common.Memtype <> f' var
R40313:40313 compcert.common.Memtype <> b var
R40317:40317 compcert.common.Memtype <> f var
R40319:40319 compcert.common.Memtype <> b var
R40300:40303 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40299:40299 compcert.common.Memtype <> b var
R40304:40305 compcert.common.Memtype <> b1 var
R40192:40194 Coq.Init.Logic <> :type_scope:x_'='_x not
R40178:40182 compcert.common.Memtype MEM alloc defax
R40190:40191 compcert.common.Memtype <> hi var
R40187:40188 compcert.common.Memtype <> lo var
R40184:40185 compcert.common.Memtype <> m1 var
R40195:40195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40199:40200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40203:40203 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40196:40198 compcert.common.Memtype <> m1' var
R40201:40202 compcert.common.Memtype <> b1 var
R40158:40163 compcert.common.Memtype MEM inject defax
R40170:40171 compcert.common.Memtype <> m2 var
R40167:40168 compcert.common.Memtype <> m1 var
R40165:40165 compcert.common.Memtype <> f var
def 40335:40352 MEM inj_offset_aligned
R40362:40362 Coq.Numbers.BinNums <> Z ind
R40372:40372 Coq.Numbers.BinNums <> Z ind
R40429:40429 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R40447:40449 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R40455:40455 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R40430:40440 compcert.common.Memdata <> align_chunk def
R40442:40446 compcert.common.Memtype <> chunk var
R40450:40454 compcert.common.Memtype <> delta var
R40417:40420 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R40401:40410 compcert.common.Memdata <> size_chunk def
R40412:40416 compcert.common.Memtype <> chunk var
R40421:40424 compcert.common.Memtype <> size var
ax 40465:40488 MEM alloc_left_mapped_inject
R40977:40983 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40986:40992 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41009:41014 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40993:40998 compcert.common.Memtype MEM inject defax
R41007:41008 compcert.common.Memtype <> m2 var
R41003:41005 compcert.common.Memtype <> m1' var
R41000:41001 compcert.common.Memtype <> f' var
R41031:41036 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41015:41025 compcert.common.Values <> inject_incr def
R41029:41030 compcert.common.Memtype <> f' var
R41027:41027 compcert.common.Memtype <> f var
R41060:41066 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41098:41098 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41042:41044 Coq.Init.Logic <> :type_scope:x_'='_x not
R41037:41038 compcert.common.Memtype <> f' var
R41040:41041 compcert.common.Memtype <> b1 var
R41045:41048 Coq.Init.Datatypes <> Some constr
R41049:41049 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41052:41053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41059:41059 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41050:41051 compcert.common.Memtype <> b2 var
R41054:41058 compcert.common.Memtype <> delta var
R41092:41094 Coq.Init.Logic <> :type_scope:x_'='_x not
R41088:41089 compcert.common.Memtype <> f' var
R41091:41091 compcert.common.Memtype <> b var
R41095:41095 compcert.common.Memtype <> f var
R41097:41097 compcert.common.Memtype <> b var
R41078:41081 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41077:41077 compcert.common.Memtype <> b var
R41082:41083 compcert.common.Memtype <> b1 var
R40965:40969 Coq.Init.Logic <> False ind
R40932:40935 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40948:40950 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40924:40926 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40922:40923 compcert.common.Memtype <> lo var
R40927:40931 compcert.common.Memtype <> delta var
R40939:40941 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40936:40938 compcert.common.Memtype <> ofs var
R40942:40947 compcert.common.Memtype <> delta' var
R40939:40941 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40936:40938 compcert.common.Memtype <> ofs var
R40942:40947 compcert.common.Memtype <> delta' var
R40953:40955 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40951:40952 compcert.common.Memtype <> hi var
R40956:40960 compcert.common.Memtype <> delta var
R40898:40901 compcert.common.Memtype MEM perm defax
R40914:40914 compcert.common.Memtype <> p var
R40912:40912 compcert.common.Memtype <> k var
R40908:40910 compcert.common.Memtype <> ofs var
R40906:40906 compcert.common.Memtype <> b var
R40903:40904 compcert.common.Memtype <> m1 var
R40870:40872 Coq.Init.Logic <> :type_scope:x_'='_x not
R40867:40867 compcert.common.Memtype <> f var
R40869:40869 compcert.common.Memtype <> b var
R40873:40876 Coq.Init.Datatypes <> Some constr
R40878:40878 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40881:40882 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40889:40889 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40879:40880 compcert.common.Memtype <> b2 var
R40883:40888 compcert.common.Memtype <> delta' var
R40800:40817 compcert.common.Memtype MEM inj_offset_aligned def
R40828:40828 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40826:40827 compcert.common.Memtype <> hi var
R40829:40830 compcert.common.Memtype <> lo var
R40819:40823 compcert.common.Memtype <> delta var
R40765:40768 compcert.common.Memtype MEM perm defax
R40792:40792 compcert.common.Memtype <> p var
R40790:40790 compcert.common.Memtype <> k var
R40780:40782 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40777:40779 compcert.common.Memtype <> ofs var
R40783:40787 compcert.common.Memtype <> delta var
R40773:40774 compcert.common.Memtype <> b2 var
R40770:40771 compcert.common.Memtype <> m2 var
R40749:40752 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40756:40758 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40747:40748 compcert.common.Memtype <> lo var
R40753:40755 compcert.common.Memtype <> ofs var
R40753:40755 compcert.common.Memtype <> ofs var
R40759:40760 compcert.common.Memtype <> hi var
R40692:40695 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R40688:40690 Coq.Init.Logic <> :type_scope:x_'='_x not
R40683:40687 compcert.common.Memtype <> delta var
R40697:40700 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40704:40706 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40701:40703 compcert.common.Memtype <> ofs var
R40701:40703 compcert.common.Memtype <> ofs var
R40707:40722 compcert.lib.Integers Int max_unsigned def
R40661:40664 compcert.common.Memtype MEM perm defax
R40678:40678 compcert.common.Memtype <> p var
R40676:40676 compcert.common.Memtype <> k var
R40672:40674 compcert.common.Memtype <> ofs var
R40669:40670 compcert.common.Memtype <> b2 var
R40666:40667 compcert.common.Memtype <> m2 var
R40609:40612 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R40618:40621 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R40613:40617 compcert.common.Memtype <> delta var
R40613:40617 compcert.common.Memtype <> delta var
R40622:40637 compcert.lib.Integers Int max_unsigned def
R40585:40595 compcert.common.Memtype MEM valid_block def
R40600:40601 compcert.common.Memtype <> b2 var
R40597:40598 compcert.common.Memtype <> m2 var
R40567:40569 Coq.Init.Logic <> :type_scope:x_'='_x not
R40553:40557 compcert.common.Memtype MEM alloc defax
R40565:40566 compcert.common.Memtype <> hi var
R40562:40563 compcert.common.Memtype <> lo var
R40559:40560 compcert.common.Memtype <> m1 var
R40570:40570 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40574:40575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40578:40578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40571:40573 compcert.common.Memtype <> m1' var
R40576:40577 compcert.common.Memtype <> b1 var
R40533:40538 compcert.common.Memtype MEM inject defax
R40545:40546 compcert.common.Memtype <> m2 var
R40542:40543 compcert.common.Memtype <> m1 var
R40540:40540 compcert.common.Memtype <> f var
ax 41108:41128 MEM alloc_parallel_inject
R41258:41264 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41267:41268 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41269:41275 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41279:41280 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41281:41287 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41290:41293 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41322:41327 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41310:41312 Coq.Init.Logic <> :type_scope:x_'='_x not
R41294:41298 compcert.common.Memtype MEM alloc defax
R41307:41309 compcert.common.Memtype <> hi2 var
R41303:41305 compcert.common.Memtype <> lo2 var
R41300:41301 compcert.common.Memtype <> m2 var
R41313:41313 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41317:41318 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41321:41321 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41314:41316 compcert.common.Memtype <> m2' var
R41319:41320 compcert.common.Memtype <> b2 var
R41345:41350 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41328:41333 compcert.common.Memtype MEM inject defax
R41342:41344 compcert.common.Memtype <> m2' var
R41338:41340 compcert.common.Memtype <> m1' var
R41335:41336 compcert.common.Memtype <> f' var
R41367:41372 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41351:41361 compcert.common.Values <> inject_incr def
R41365:41366 compcert.common.Memtype <> f' var
R41363:41363 compcert.common.Memtype <> f var
R41392:41398 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41430:41430 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41378:41380 Coq.Init.Logic <> :type_scope:x_'='_x not
R41373:41374 compcert.common.Memtype <> f' var
R41376:41377 compcert.common.Memtype <> b1 var
R41381:41384 Coq.Init.Datatypes <> Some constr
R41385:41385 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41388:41389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41391:41391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41386:41387 compcert.common.Memtype <> b2 var
R41424:41426 Coq.Init.Logic <> :type_scope:x_'='_x not
R41420:41421 compcert.common.Memtype <> f' var
R41423:41423 compcert.common.Memtype <> b var
R41427:41427 compcert.common.Memtype <> f var
R41429:41429 compcert.common.Memtype <> b var
R41410:41413 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41409:41409 compcert.common.Memtype <> b var
R41414:41415 compcert.common.Memtype <> b1 var
R41245:41248 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R41242:41244 compcert.common.Memtype <> hi1 var
R41249:41251 compcert.common.Memtype <> hi2 var
R41231:41234 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R41228:41230 compcert.common.Memtype <> lo2 var
R41235:41237 compcert.common.Memtype <> lo1 var
R41210:41212 Coq.Init.Logic <> :type_scope:x_'='_x not
R41194:41198 compcert.common.Memtype MEM alloc defax
R41207:41209 compcert.common.Memtype <> hi1 var
R41203:41205 compcert.common.Memtype <> lo1 var
R41200:41201 compcert.common.Memtype <> m1 var
R41213:41213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41217:41218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41221:41221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41214:41216 compcert.common.Memtype <> m1' var
R41219:41220 compcert.common.Memtype <> b1 var
R41174:41179 compcert.common.Memtype MEM inject defax
R41186:41187 compcert.common.Memtype <> m2 var
R41183:41184 compcert.common.Memtype <> m1 var
R41181:41181 compcert.common.Memtype <> f var
ax 41440:41450 MEM free_inject
R41751:41756 compcert.common.Memtype MEM inject defax
R41764:41766 compcert.common.Memtype <> m2' var
R41760:41762 compcert.common.Memtype <> m1' var
R41758:41758 compcert.common.Memtype <> f var
R41681:41687 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41691:41692 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41693:41699 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41703:41704 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41724:41727 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41705:41706 Coq.Lists.List <> In def
R41723:41723 compcert.common.Memtype <> l var
R41708:41708 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41711:41712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41716:41717 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41721:41721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41709:41710 compcert.common.Memtype <> b1 var
R41713:41715 compcert.common.Memtype <> lo1 var
R41718:41720 compcert.common.Memtype <> hi1 var
R41731:41734 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41738:41740 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41728:41730 compcert.common.Memtype <> lo1 var
R41735:41737 compcert.common.Memtype <> ofs var
R41735:41737 compcert.common.Memtype <> ofs var
R41741:41743 compcert.common.Memtype <> hi1 var
R41653:41656 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41668:41670 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41651:41652 compcert.common.Memtype <> lo var
R41660:41662 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41657:41659 compcert.common.Memtype <> ofs var
R41663:41667 compcert.common.Memtype <> delta var
R41660:41662 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41657:41659 compcert.common.Memtype <> ofs var
R41663:41667 compcert.common.Memtype <> delta var
R41671:41672 compcert.common.Memtype <> hi var
R41629:41632 compcert.common.Memtype MEM perm defax
R41646:41646 compcert.common.Memtype <> p var
R41644:41644 compcert.common.Memtype <> k var
R41640:41642 compcert.common.Memtype <> ofs var
R41637:41638 compcert.common.Memtype <> b1 var
R41634:41635 compcert.common.Memtype <> m1 var
R41608:41610 Coq.Init.Logic <> :type_scope:x_'='_x not
R41604:41604 compcert.common.Memtype <> f var
R41606:41607 compcert.common.Memtype <> b1 var
R41611:41614 Coq.Init.Datatypes <> Some constr
R41615:41615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41617:41618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41624:41624 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41616:41616 compcert.common.Memtype <> b var
R41619:41623 compcert.common.Memtype <> delta var
R41557:41559 Coq.Init.Logic <> :type_scope:x_'='_x not
R41542:41545 compcert.common.Memtype MEM free defax
R41555:41556 compcert.common.Memtype <> hi var
R41552:41553 compcert.common.Memtype <> lo var
R41550:41550 compcert.common.Memtype <> b var
R41547:41548 compcert.common.Memtype <> m2 var
R41560:41563 Coq.Init.Datatypes <> Some constr
R41565:41567 compcert.common.Memtype <> m2' var
R41525:41527 Coq.Init.Logic <> :type_scope:x_'='_x not
R41511:41519 compcert.common.Memtype MEM free_list def
R41524:41524 compcert.common.Memtype <> l var
R41521:41522 compcert.common.Memtype <> m1 var
R41528:41531 Coq.Init.Datatypes <> Some constr
R41533:41535 compcert.common.Memtype <> m1' var
R41491:41496 compcert.common.Memtype MEM inject defax
R41503:41504 compcert.common.Memtype <> m2 var
R41500:41501 compcert.common.Memtype <> m1 var
R41498:41498 compcert.common.Memtype <> f var
ax 41776:41795 MEM free_parallel_inject
R41918:41924 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41928:41934 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41982:41987 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41971:41973 Coq.Init.Logic <> :type_scope:x_'='_x not
R41935:41938 compcert.common.Memtype MEM free defax
R41962:41964 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41960:41961 compcert.common.Memtype <> hi var
R41965:41969 compcert.common.Memtype <> delta var
R41949:41951 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41947:41948 compcert.common.Memtype <> lo var
R41952:41956 compcert.common.Memtype <> delta var
R41943:41944 compcert.common.Memtype <> b' var
R41940:41941 compcert.common.Memtype <> m2 var
R41974:41977 Coq.Init.Datatypes <> Some constr
R41979:41981 compcert.common.Memtype <> m2' var
R41988:41993 compcert.common.Memtype MEM inject defax
R42001:42003 compcert.common.Memtype <> m2' var
R41997:41999 compcert.common.Memtype <> m1' var
R41995:41995 compcert.common.Memtype <> f var
R41894:41896 Coq.Init.Logic <> :type_scope:x_'='_x not
R41891:41891 compcert.common.Memtype <> f var
R41893:41893 compcert.common.Memtype <> b var
R41897:41900 Coq.Init.Datatypes <> Some constr
R41901:41901 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41904:41905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41911:41911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41902:41903 compcert.common.Memtype <> b' var
R41906:41910 compcert.common.Memtype <> delta var
R41874:41876 Coq.Init.Logic <> :type_scope:x_'='_x not
R41859:41862 compcert.common.Memtype MEM free defax
R41872:41873 compcert.common.Memtype <> hi var
R41869:41870 compcert.common.Memtype <> lo var
R41867:41867 compcert.common.Memtype <> b var
R41864:41865 compcert.common.Memtype <> m1 var
R41877:41880 Coq.Init.Datatypes <> Some constr
R41882:41884 compcert.common.Memtype <> m1' var
R41839:41844 compcert.common.Memtype MEM inject defax
R41851:41852 compcert.common.Memtype <> m2 var
R41848:41849 compcert.common.Memtype <> m1 var
R41846:41846 compcert.common.Memtype <> f var
ax 42013:42031 MEM drop_outside_inject
R42248:42253 compcert.common.Memtype MEM inject defax
R42260:42262 compcert.common.Memtype <> m2' var
R42257:42258 compcert.common.Memtype <> m1 var
R42255:42255 compcert.common.Memtype <> f var
R42236:42240 Coq.Init.Logic <> False ind
R42212:42215 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R42227:42229 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R42210:42211 compcert.common.Memtype <> lo var
R42219:42221 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R42216:42218 compcert.common.Memtype <> ofs var
R42222:42226 compcert.common.Memtype <> delta var
R42219:42221 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R42216:42218 compcert.common.Memtype <> ofs var
R42222:42226 compcert.common.Memtype <> delta var
R42230:42231 compcert.common.Memtype <> hi var
R42188:42191 compcert.common.Memtype MEM perm defax
R42205:42205 compcert.common.Memtype <> p var
R42203:42203 compcert.common.Memtype <> k var
R42199:42201 compcert.common.Memtype <> ofs var
R42196:42197 compcert.common.Memtype <> b' var
R42193:42194 compcert.common.Memtype <> m1 var
R42163:42165 Coq.Init.Logic <> :type_scope:x_'='_x not
R42159:42159 compcert.common.Memtype <> f var
R42161:42162 compcert.common.Memtype <> b' var
R42166:42169 Coq.Init.Datatypes <> Some constr
R42170:42170 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42172:42173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42179:42179 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42171:42171 compcert.common.Memtype <> b var
R42174:42178 compcert.common.Memtype <> delta var
R42111:42113 Coq.Init.Logic <> :type_scope:x_'='_x not
R42089:42097 compcert.common.Memtype MEM drop_perm defax
R42110:42110 compcert.common.Memtype <> p var
R42107:42108 compcert.common.Memtype <> hi var
R42104:42105 compcert.common.Memtype <> lo var
R42102:42102 compcert.common.Memtype <> b var
R42099:42100 compcert.common.Memtype <> m2 var
R42114:42117 Coq.Init.Datatypes <> Some constr
R42119:42121 compcert.common.Memtype <> m2' var
R42068:42073 compcert.common.Memtype MEM inject defax
R42080:42081 compcert.common.Memtype <> m2 var
R42077:42078 compcert.common.Memtype <> m1 var
R42075:42075 compcert.common.Memtype <> f var
def 42328:42335 MEM flat_inj
R42343:42347 compcert.common.Values <> block def
R42352:42357 compcert.common.Values <> meminj def
R42372:42376 compcert.common.Values <> block def
R42385:42387 compcert.lib.Coqlib <> plt def
R42391:42393 compcert.common.Memtype <> thr var
R42389:42389 compcert.common.Memtype <> b var
R42416:42419 Coq.Init.Datatypes <> None constr
R42400:42403 Coq.Init.Datatypes <> Some constr
R42404:42404 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42406:42407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42409:42409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42405:42405 compcert.common.Memtype <> b var
ax 42433:42446 MEM inject_neutral
R42462:42466 compcert.common.Values <> block def
R42473:42475 compcert.common.Memtype MEM mem defax
ax 42492:42505 MEM neutral_inject
R42556:42561 compcert.common.Memtype MEM inject defax
R42590:42590 compcert.common.Memtype <> m var
R42588:42588 compcert.common.Memtype <> m var
R42564:42571 compcert.common.Memtype MEM flat_inj def
R42574:42582 compcert.common.Memtype MEM nextblock defax
R42584:42584 compcert.common.Memtype <> m var
R42520:42533 compcert.common.Memtype MEM inject_neutral defax
R42549:42549 compcert.common.Memtype <> m var
R42536:42544 compcert.common.Memtype MEM nextblock defax
R42546:42546 compcert.common.Memtype <> m var
ax 42600:42619 MEM empty_inject_neutral
R42636:42649 compcert.common.Memtype MEM inject_neutral defax
R42655:42659 compcert.common.Memtype MEM empty defax
R42651:42653 compcert.common.Memtype <> thr var
ax 42669:42688 MEM alloc_inject_neutral
R42802:42815 compcert.common.Memtype MEM inject_neutral defax
R42821:42822 compcert.common.Memtype <> m' var
R42817:42819 compcert.common.Memtype <> thr var
R42775:42777 compcert.lib.Coqlib <> Plt def
R42793:42795 compcert.common.Memtype <> thr var
R42780:42788 compcert.common.Memtype MEM nextblock defax
R42790:42790 compcert.common.Memtype <> m var
R42749:42762 compcert.common.Memtype MEM inject_neutral defax
R42768:42768 compcert.common.Memtype <> m var
R42764:42766 compcert.common.Memtype <> thr var
R42733:42735 Coq.Init.Logic <> :type_scope:x_'='_x not
R42720:42724 compcert.common.Memtype MEM alloc defax
R42731:42732 compcert.common.Memtype <> hi var
R42728:42729 compcert.common.Memtype <> lo var
R42726:42726 compcert.common.Memtype <> m var
R42736:42736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42739:42740 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42742:42742 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42737:42738 compcert.common.Memtype <> m' var
R42741:42741 compcert.common.Memtype <> b var
ax 42832:42851 MEM store_inject_neutral
R43002:43015 compcert.common.Memtype MEM inject_neutral defax
R43021:43022 compcert.common.Memtype <> m' var
R43017:43019 compcert.common.Memtype <> thr var
R42967:42976 compcert.common.Values <> val_inject ind
R42995:42995 compcert.common.Memtype <> v var
R42993:42993 compcert.common.Memtype <> v var
R42979:42986 compcert.common.Memtype MEM flat_inj def
R42988:42990 compcert.common.Memtype <> thr var
R42952:42954 compcert.lib.Coqlib <> Plt def
R42958:42960 compcert.common.Memtype <> thr var
R42956:42956 compcert.common.Memtype <> b var
R42926:42939 compcert.common.Memtype MEM inject_neutral defax
R42945:42945 compcert.common.Memtype <> m var
R42941:42943 compcert.common.Memtype <> thr var
R42910:42912 Coq.Init.Logic <> :type_scope:x_'='_x not
R42889:42893 compcert.common.Memtype MEM store defax
R42909:42909 compcert.common.Memtype <> v var
R42905:42907 compcert.common.Memtype <> ofs var
R42903:42903 compcert.common.Memtype <> b var
R42901:42901 compcert.common.Memtype <> m var
R42895:42899 compcert.common.Memtype <> chunk var
R42913:42916 Coq.Init.Datatypes <> Some constr
R42918:42919 compcert.common.Memtype <> m' var
ax 43032:43050 MEM drop_inject_neutral
R43162:43175 compcert.common.Memtype MEM inject_neutral defax
R43181:43182 compcert.common.Memtype <> m' var
R43177:43179 compcert.common.Memtype <> thr var
R43147:43149 compcert.lib.Coqlib <> Plt def
R43153:43155 compcert.common.Memtype <> thr var
R43151:43151 compcert.common.Memtype <> b var
R43121:43134 compcert.common.Memtype MEM inject_neutral defax
R43140:43140 compcert.common.Memtype <> m var
R43136:43138 compcert.common.Memtype <> thr var
R43105:43107 Coq.Init.Logic <> :type_scope:x_'='_x not
R43084:43092 compcert.common.Memtype MEM drop_perm defax
R43104:43104 compcert.common.Memtype <> p var
R43101:43102 compcert.common.Memtype <> hi var
R43098:43099 compcert.common.Memtype <> lo var
R43096:43096 compcert.common.Memtype <> b var
R43094:43094 compcert.common.Memtype <> m var
R43108:43111 Coq.Init.Datatypes <> Some constr
R43113:43114 compcert.common.Memtype <> m' var
R43190:43192 compcert.common.Memtype MEM <> modtype
