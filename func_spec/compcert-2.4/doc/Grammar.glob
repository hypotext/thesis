DIGEST NO
Fcompcert.cparser.validator.Grammar
R1052:1055 Coq.Lists.List <> <> lib
R1073:1078 Coq.Program.Syntax <> <> lib
R1096:1103 compcert.cparser.validator.Alphabet <> <> lib
R1121:1126 Coq.Structures.Orders <> <> lib
modtype 1202:1206 <> Alphs
ax 1222:1229 Alphs terminal
ax 1231:1241 Alphs nonterminal
inst 1270:1281 Alphs TerminalAlph
R1284:1291 compcert.cparser.validator.Alphabet <> Alphabet class
R1293:1300 compcert.cparser.validator.Grammar Alphs terminal defax
inst 1322:1336 Alphs NonTerminalAlph
R1339:1346 compcert.cparser.validator.Alphabet <> Alphabet class
R1348:1358 compcert.cparser.validator.Grammar Alphs nonterminal defax
R1365:1369 compcert.cparser.validator.Grammar Alphs <> modtype
R1513:1517 compcert.cparser.validator.Grammar Alphs <> mod
mod 1497:1502 <> Symbol
ind 1534:1539 Symbol symbol
constr 1550:1550 Symbol T
constr 1578:1579 Symbol NT
R1565:1570 compcert.cparser.validator.Grammar <> symbol ind
R1553:1560 compcert.cparser.validator.Grammar A terminal defax
R1597:1602 compcert.cparser.validator.Grammar <> symbol ind
R1582:1592 compcert.cparser.validator.Grammar A nonterminal defax
inst 1625:1634 Symbol SymbolAlph
R1638:1645 compcert.cparser.validator.Alphabet <> Alphabet class
R1647:1652 compcert.cparser.validator.Grammar Symbol symbol ind
R1904:1917 compcert.cparser.validator.Alphabet <> AlphabetFinite meth
R1663:1680 compcert.cparser.validator.Alphabet <> AlphabetComparable meth
R1688:1892 compcert.cparser.validator.Alphabet <> Build_Comparable constr
R1727:1727 compcert.cparser.validator.Grammar <> y var
R1724:1724 compcert.cparser.validator.Grammar <> x var
R1736:1745 Coq.Init.Datatypes <> comparison ind
R1764:1764 compcert.cparser.validator.Grammar Symbol T constr
R1769:1770 compcert.cparser.validator.Grammar Symbol NT constr
R1777:1778 Coq.Init.Datatypes <> Gt constr
R1792:1793 compcert.cparser.validator.Grammar Symbol NT constr
R1798:1798 compcert.cparser.validator.Grammar Symbol T constr
R1805:1806 Coq.Init.Datatypes <> Lt constr
R1820:1820 compcert.cparser.validator.Grammar Symbol T constr
R1825:1825 compcert.cparser.validator.Grammar Symbol T constr
R1832:1838 compcert.cparser.validator.Alphabet <> compare meth
R1842:1842 compcert.cparser.validator.Grammar <> y var
R1840:1840 compcert.cparser.validator.Grammar <> x var
R1856:1857 compcert.cparser.validator.Grammar Symbol NT constr
R1862:1863 compcert.cparser.validator.Grammar Symbol NT constr
R1870:1876 compcert.cparser.validator.Alphabet <> compare meth
R1880:1880 compcert.cparser.validator.Grammar <> y var
R1878:1878 compcert.cparser.validator.Grammar <> x var
R1925:1975 compcert.cparser.validator.Alphabet <> Build_Finite constr
R1959:1960 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1945:1947 Coq.Lists.List <> map def
R1951:1958 compcert.cparser.validator.Alphabet <> all_list meth
R1949:1949 compcert.cparser.validator.Grammar Symbol T constr
R1961:1963 Coq.Lists.List <> map def
R1968:1975 compcert.cparser.validator.Alphabet <> all_list meth
R1965:1966 compcert.cparser.validator.Grammar Symbol NT constr
R2045:2059 compcert.cparser.validator.Alphabet <> compare_antisym meth
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R2045:2059 compcert.cparser.validator.Alphabet <> compare_antisym meth
R2045:2059 compcert.cparser.validator.Alphabet <> compare_antisym meth
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R2164:2176 compcert.cparser.validator.Alphabet <> compare_trans meth
R2164:2176 compcert.cparser.validator.Alphabet <> compare_trans meth
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R2205:2217 compcert.cparser.validator.Alphabet <> compare_trans meth
R2205:2217 compcert.cparser.validator.Alphabet <> compare_trans meth
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R2340:2349 compcert.cparser.validator.Alphabet <> compare_eq def
R2340:2349 compcert.cparser.validator.Alphabet <> compare_eq def
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R2380:2389 compcert.cparser.validator.Alphabet <> compare_eq def
R2380:2389 compcert.cparser.validator.Alphabet <> compare_eq def
R0:-1 compcert.cparser.validator.Grammar <> y var
R0:-1 compcert.cparser.validator.Grammar <> y var
R2445:2454 Coq.Lists.List <> in_app_iff thm
R2445:2454 Coq.Lists.List <> in_app_iff thm
R2493:2498 Coq.Lists.List <> in_map thm
R2507:2521 compcert.cparser.validator.Alphabet <> all_list_forall meth
R2493:2498 Coq.Lists.List <> in_map thm
R2493:2498 Coq.Lists.List <> in_map thm
R2507:2521 compcert.cparser.validator.Alphabet <> all_list_forall meth
R2507:2521 compcert.cparser.validator.Alphabet <> all_list_forall meth
R2536:2541 compcert.cparser.validator.Grammar Symbol <> mod
modtype 2557:2557 <> T
R2577:2582 compcert.cparser.validator.Tuples <> <> lib
R2596:2600 compcert.cparser.validator.Grammar Alphs <> mod
R2605:2610 compcert.cparser.validator.Grammar Symbol <> modtype
ax 2715:2734 T symbol_semantic_type
R2737:2742 compcert.cparser.validator.Grammar T symbol ind
ax 2812:2821 T production
inst 2850:2863 T ProductionAlph
R2867:2874 compcert.cparser.validator.Alphabet <> Alphabet class
R2876:2885 compcert.cparser.validator.Grammar T production defax
ax 3111:3118 T prod_lhs
R3135:3145 compcert.cparser.validator.Grammar T nonterminal defax
R3121:3130 compcert.cparser.validator.Grammar T production defax
ax 3160:3171 T prod_rhs_rev
R3188:3191 Coq.Init.Datatypes <> list ind
R3193:3198 compcert.cparser.validator.Grammar T symbol ind
R3174:3183 compcert.cparser.validator.Grammar T production defax
ax 3213:3223 T prod_action
R3239:3248 compcert.cparser.validator.Grammar T production defax
R3257:3267 compcert.cparser.validator.Tuples <> arrows_left def
R3336:3355 compcert.cparser.validator.Grammar T symbol_semantic_type defax
R3358:3359 compcert.cparser.validator.Grammar T NT constr
R3362:3369 compcert.cparser.validator.Grammar T prod_lhs defax
R3371:3371 compcert.cparser.validator.Grammar <> p var
R3278:3280 Coq.Lists.List <> map def
R3304:3306 Coq.Lists.List <> rev def
R3309:3320 compcert.cparser.validator.Grammar T prod_rhs_rev defax
R3322:3322 compcert.cparser.validator.Grammar <> p var
R3282:3301 compcert.cparser.validator.Grammar T symbol_semantic_type defax
R3382:3382 compcert.cparser.validator.Grammar T <> modtype
R3407:3407 compcert.cparser.validator.Grammar T <> mod
mod 3393:3396 <> Defs
def 3497:3501 Defs token
R3506:3506 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'&'_x_'}' not
R3508:3508 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'&'_x_'}' not
R3517:3519 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'&'_x_'}' not
R3546:3546 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'&'_x_'}' not
R3520:3539 compcert.cparser.validator.Grammar G symbol_semantic_type defax
R3542:3542 compcert.cparser.validator.Grammar G T constr
R3509:3516 compcert.cparser.validator.Grammar G terminal defax
ind 3807:3816 Defs parse_tree
constr 4058:4068 Defs Terminal_pt
constr 4472:4486 Defs Non_terminal_pt
ind 4960:4974 Defs parse_tree_list
constr 5199:5205 Defs Nil_ptl
constr 5335:5342 Defs Cons_ptl
R3843:3848 compcert.cparser.validator.Grammar G symbol ind
R3857:3860 Coq.Init.Datatypes <> list ind
R3862:3866 compcert.cparser.validator.Grammar Defs token def
R3891:3910 compcert.cparser.validator.Grammar G symbol_semantic_type defax
R3912:3922 compcert.cparser.validator.Grammar <> head_symbol var
R5002:5005 Coq.Init.Datatypes <> list ind
R5007:5012 compcert.cparser.validator.Grammar G symbol ind
R5021:5024 Coq.Init.Datatypes <> list ind
R5026:5030 compcert.cparser.validator.Grammar Defs token def
R5056:5060 compcert.cparser.validator.Tuples <> tuple def
R5063:5065 Coq.Lists.List <> map def
R5088:5099 compcert.cparser.validator.Grammar <> head_symbols var
R5067:5086 compcert.cparser.validator.Grammar G symbol_semantic_type defax
R4085:4092 compcert.cparser.validator.Grammar G terminal defax
R4100:4119 compcert.cparser.validator.Grammar G symbol_semantic_type defax
R4122:4122 compcert.cparser.validator.Grammar G T constr
R4124:4124 compcert.cparser.validator.Grammar <> t var
R4135:4144 compcert.cparser.validator.Grammar <> parse_tree ind
R4211:4213 compcert.cparser.validator.Grammar <> sem var
R4158:4158 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R4209:4209 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R4159:4164 Coq.Init.Specif <> existT constr
R4206:4208 compcert.cparser.validator.Grammar <> sem var
R4204:4204 compcert.cparser.validator.Grammar <> t var
R4176:4195 compcert.cparser.validator.Grammar G symbol_semantic_type defax
R4198:4198 compcert.cparser.validator.Grammar G T constr
R4200:4200 compcert.cparser.validator.Grammar <> t var
R4147:4147 compcert.cparser.validator.Grammar G T constr
R4149:4149 compcert.cparser.validator.Grammar <> t var
R4503:4512 compcert.cparser.validator.Grammar G production defax
R4521:4524 Coq.Init.Datatypes <> list ind
R4526:4530 compcert.cparser.validator.Grammar Defs token def
R4556:4560 compcert.cparser.validator.Tuples <> tuple def
R4563:4565 Coq.Lists.List <> map def
R4589:4591 Coq.Lists.List <> rev def
R4594:4605 compcert.cparser.validator.Grammar G prod_rhs_rev defax
R4607:4607 compcert.cparser.validator.Grammar <> p var
R4567:4586 compcert.cparser.validator.Grammar G symbol_semantic_type defax
R4689:4698 compcert.cparser.validator.Grammar <> parse_tree ind
R4724:4730 compcert.cparser.validator.Tuples <> uncurry def
R4748:4762 compcert.cparser.validator.Grammar <> semantic_values var
R4733:4743 compcert.cparser.validator.Grammar G prod_action defax
R4745:4745 compcert.cparser.validator.Grammar <> p var
R4718:4721 compcert.cparser.validator.Grammar <> word var
R4701:4702 compcert.cparser.validator.Grammar G NT constr
R4705:4712 compcert.cparser.validator.Grammar G prod_lhs defax
R4714:4714 compcert.cparser.validator.Grammar <> p var
R4620:4634 compcert.cparser.validator.Grammar <> parse_tree_list ind
R4664:4678 compcert.cparser.validator.Grammar <> semantic_values var
R4659:4662 compcert.cparser.validator.Grammar <> word var
R4637:4639 Coq.Lists.List <> rev def
R4642:4653 compcert.cparser.validator.Grammar G prod_rhs_rev defax
R4655:4655 compcert.cparser.validator.Grammar <> p var
R5208:5222 compcert.cparser.validator.Grammar <> parse_tree_list ind
R5230:5231 Coq.Program.Syntax <> ::'()' not
R5227:5228 Coq.Lists.List ListNotations :list_scope:'['_']' not
R5224:5225 Coq.Lists.List ListNotations :list_scope:'['_']' not
R5406:5411 compcert.cparser.validator.Grammar G symbol ind
R5421:5424 Coq.Init.Datatypes <> list ind
R5426:5430 compcert.cparser.validator.Grammar Defs token def
R5456:5475 compcert.cparser.validator.Grammar G symbol_semantic_type defax
R5477:5488 compcert.cparser.validator.Grammar <> head_symbolt var
R5614:5617 Coq.Init.Datatypes <> list ind
R5619:5624 compcert.cparser.validator.Grammar G symbol ind
R5634:5637 Coq.Init.Datatypes <> list ind
R5639:5643 compcert.cparser.validator.Grammar Defs token def
R5670:5674 compcert.cparser.validator.Tuples <> tuple def
R5677:5679 Coq.Lists.List <> map def
R5702:5714 compcert.cparser.validator.Grammar <> head_symbolsq var
R5681:5700 compcert.cparser.validator.Grammar G symbol_semantic_type defax
R5828:5842 compcert.cparser.validator.Grammar <> parse_tree_list ind
R5913:5913 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5929:5930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5947:5947 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5914:5928 compcert.cparser.validator.Grammar <> semantic_valuet var
R5931:5946 compcert.cparser.validator.Grammar <> semantic_valuesq var
R5896:5897 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R5891:5895 compcert.cparser.validator.Grammar <> wordt var
R5898:5902 compcert.cparser.validator.Grammar <> wordq var
R5865:5866 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5853:5864 compcert.cparser.validator.Grammar <> head_symbolt var
R5867:5879 compcert.cparser.validator.Grammar <> head_symbolsq var
R5725:5739 compcert.cparser.validator.Grammar <> parse_tree_list ind
R5761:5776 compcert.cparser.validator.Grammar <> semantic_valuesq var
R5755:5759 compcert.cparser.validator.Grammar <> wordq var
R5741:5753 compcert.cparser.validator.Grammar <> head_symbolsq var
R5498:5507 compcert.cparser.validator.Grammar <> parse_tree ind
R5528:5542 compcert.cparser.validator.Grammar <> semantic_valuet var
R5522:5526 compcert.cparser.validator.Grammar <> wordt var
R5509:5520 compcert.cparser.validator.Grammar <> head_symbolt var
def 5963:5969 Defs pt_size
def 6151:6158 Defs ptl_size
R6000:6009 compcert.cparser.validator.Grammar Defs parse_tree ind
R6028:6030 compcert.cparser.validator.Grammar <> sem var
R6023:6026 compcert.cparser.validator.Grammar <> word var
R6011:6021 compcert.cparser.validator.Grammar <> head_symbol var
R6191:6205 compcert.cparser.validator.Grammar Defs parse_tree_list ind
R6225:6228 compcert.cparser.validator.Grammar <> sems var
R6220:6223 compcert.cparser.validator.Grammar <> word var
R6207:6218 compcert.cparser.validator.Grammar <> head_symbols var
R6046:6049 compcert.cparser.validator.Grammar <> tree var
R6065:6075 compcert.cparser.validator.Grammar Defs Terminal_pt constr
R6094:6108 compcert.cparser.validator.Grammar Defs Non_terminal_pt constr
R6121:6121 Coq.Init.Datatypes <> S constr
R6124:6131 compcert.cparser.validator.Grammar <> ptl_size def
R6244:6247 compcert.cparser.validator.Grammar <> tree var
R6262:6268 compcert.cparser.validator.Grammar Defs Nil_ptl constr
R6283:6290 compcert.cparser.validator.Grammar Defs Cons_ptl constr
R6329:6331 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6320:6326 compcert.cparser.validator.Grammar <> pt_size def
R6332:6339 compcert.cparser.validator.Grammar <> ptl_size def
R6356:6359 compcert.cparser.validator.Grammar Defs <> mod
