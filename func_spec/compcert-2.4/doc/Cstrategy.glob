DIGEST NO
Fcompcert.cfrontend.Cstrategy
R1103:1108 compcert.lib.Axioms <> <> lib
R1126:1131 compcert.lib.Coqlib <> <> lib
R1149:1154 compcert.common.Errors <> <> lib
R1172:1175 compcert.lib.Maps <> <> lib
R1193:1200 compcert.lib.Integers <> <> lib
R1218:1223 compcert.lib.Floats <> <> lib
R1241:1246 compcert.common.Values <> <> lib
R1264:1266 compcert.common.AST <> <> lib
R1284:1289 compcert.common.Memory <> <> lib
R1307:1312 compcert.common.Events <> <> lib
R1330:1339 compcert.common.Globalenvs <> <> lib
R1357:1365 compcert.common.Smallstep <> <> lib
R1383:1388 compcert.cfrontend.Ctypes <> <> lib
R1406:1408 compcert.cfrontend.Cop <> <> lib
R1426:1432 compcert.cfrontend.Csyntax <> <> lib
R1450:1453 compcert.cfrontend.Csem <> <> lib
sec 1465:1472 <> STRATEGY
var 1485:1486 STRATEGY ge
R1489:1492 compcert.cfrontend.Csem <> genv def
def 1872:1877 <> simple
R1883:1886 compcert.cfrontend.Csyntax <> expr ind
R1891:1894 Coq.Init.Datatypes <> bool ind
R1907:1907 compcert.cfrontend.Cstrategy <> a var
R1918:1921 compcert.cfrontend.Csyntax <> Eloc constr
R1932:1935 Coq.Init.Datatypes <> true constr
R1941:1944 compcert.cfrontend.Csyntax <> Evar constr
R1953:1956 Coq.Init.Datatypes <> true constr
R1962:1967 compcert.cfrontend.Csyntax <> Ederef constr
R1976:1981 compcert.cfrontend.Cstrategy <> simple def
R1989:1994 compcert.cfrontend.Csyntax <> Efield constr
R2005:2010 compcert.cfrontend.Cstrategy <> simple def
R2018:2021 compcert.cfrontend.Csyntax <> Eval constr
R2030:2033 Coq.Init.Datatypes <> true constr
R2039:2044 compcert.cfrontend.Csyntax <> Evalof constr
R2061:2064 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R2053:2058 compcert.cfrontend.Cstrategy <> simple def
R2065:2068 Coq.Init.Datatypes <> negb def
R2070:2085 compcert.cfrontend.Ctypes <> type_is_volatile def
R2088:2093 compcert.cfrontend.Csyntax <> typeof def
R2103:2109 compcert.cfrontend.Csyntax <> Eaddrof constr
R2118:2123 compcert.cfrontend.Cstrategy <> simple def
R2131:2135 compcert.cfrontend.Csyntax <> Eunop constr
R2147:2152 compcert.cfrontend.Cstrategy <> simple def
R2161:2166 compcert.cfrontend.Csyntax <> Ebinop constr
R2190:2193 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R2181:2186 compcert.cfrontend.Cstrategy <> simple def
R2194:2199 compcert.cfrontend.Cstrategy <> simple def
R2208:2212 compcert.cfrontend.Csyntax <> Ecast constr
R2222:2227 compcert.cfrontend.Cstrategy <> simple def
R2236:2242 compcert.cfrontend.Csyntax <> Eseqand constr
R2253:2257 Coq.Init.Datatypes <> false constr
R2263:2268 compcert.cfrontend.Csyntax <> Eseqor constr
R2279:2283 Coq.Init.Datatypes <> false constr
R2289:2298 compcert.cfrontend.Csyntax <> Econdition constr
R2311:2315 Coq.Init.Datatypes <> false constr
R2321:2327 compcert.cfrontend.Csyntax <> Esizeof constr
R2336:2339 Coq.Init.Datatypes <> true constr
R2345:2352 compcert.cfrontend.Csyntax <> Ealignof constr
R2361:2364 Coq.Init.Datatypes <> true constr
R2370:2376 compcert.cfrontend.Csyntax <> Eassign constr
R2387:2391 Coq.Init.Datatypes <> false constr
R2397:2405 compcert.cfrontend.Csyntax <> Eassignop constr
R2420:2424 Coq.Init.Datatypes <> false constr
R2430:2438 compcert.cfrontend.Csyntax <> Epostincr constr
R2449:2453 Coq.Init.Datatypes <> false constr
R2459:2464 compcert.cfrontend.Csyntax <> Ecomma constr
R2475:2479 Coq.Init.Datatypes <> false constr
R2485:2489 compcert.cfrontend.Csyntax <> Ecall constr
R2500:2504 Coq.Init.Datatypes <> false constr
R2510:2517 compcert.cfrontend.Csyntax <> Ebuiltin constr
R2530:2534 Coq.Init.Datatypes <> false constr
R2540:2545 compcert.cfrontend.Csyntax <> Eparen constr
R2554:2558 Coq.Init.Datatypes <> false constr
def 2577:2586 <> simplelist
R2593:2600 compcert.cfrontend.Csyntax <> exprlist ind
R2605:2608 Coq.Init.Datatypes <> bool ind
R2621:2622 compcert.cfrontend.Cstrategy <> rl var
R2629:2632 compcert.cfrontend.Csyntax <> Enil constr
R2637:2640 Coq.Init.Datatypes <> true constr
R2644:2648 compcert.cfrontend.Csyntax <> Econs constr
R2667:2670 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R2659:2664 compcert.cfrontend.Cstrategy <> simple def
R2671:2680 compcert.cfrontend.Cstrategy <> simplelist def
sec 2929:2940 STRATEGY SIMPLE_EXPRS
var 2953:2953 STRATEGY.SIMPLE_EXPRS e
R2956:2958 compcert.cfrontend.Csem <> env def
var 2970:2970 STRATEGY.SIMPLE_EXPRS m
R2973:2975 compcert.common.Memory <> mem syndef
ind 2989:3006 <> eval_simple_lvalue
constr 3045:3051 <> esl_loc
constr 3122:3134 <> esl_var_local
constr 3231:3244 <> esl_var_global
constr 3374:3382 <> esl_deref
constr 3496:3511 <> esl_field_struct
constr 3747:3761 <> esl_field_union
ind 3930:3947 <> eval_simple_rvalue
constr 3977:3983 <> esr_val
constr 4042:4051 <> esr_rvalof
constr 4248:4257 <> esr_addrof
constr 4372:4379 <> esr_unop
constr 4542:4550 <> esr_binop
constr 4769:4776 <> esr_cast
constr 4922:4931 <> esr_sizeof
constr 5026:5036 <> esr_alignof
R3026:3028 compcert.lib.Integers <> int syndef
R3017:3021 compcert.common.Values <> block def
R3009:3012 compcert.cfrontend.Csyntax <> expr ind
R3958:3960 compcert.common.Values <> val ind
R3950:3953 compcert.cfrontend.Csyntax <> expr ind
R3077:3094 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R3114:3116 compcert.cfrontend.Cstrategy <> ofs var
R3112:3112 compcert.cfrontend.Cstrategy <> b var
R3097:3100 compcert.cfrontend.Csyntax <> Eloc constr
R3108:3109 compcert.cfrontend.Cstrategy <> ty var
R3104:3106 compcert.cfrontend.Cstrategy <> ofs var
R3102:3102 compcert.cfrontend.Cstrategy <> b var
R3185:3202 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R3218:3225 compcert.lib.Integers Int zero def
R3216:3216 compcert.cfrontend.Cstrategy <> b var
R3205:3208 compcert.cfrontend.Csyntax <> Evar constr
R3212:3213 compcert.cfrontend.Cstrategy <> ty var
R3210:3210 compcert.cfrontend.Cstrategy <> x var
R3161:3163 Coq.Init.Logic <> :type_scope:x_'='_x not
R3159:3159 compcert.lib.Maps <> ::x_'!'_x not
R3160:3160 compcert.cfrontend.Cstrategy <> x var
R3158:3158 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EXPRS.e var
R3164:3167 Coq.Init.Datatypes <> Some constr
R3168:3168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3170:3171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3174:3174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3169:3169 compcert.cfrontend.Cstrategy <> b var
R3172:3173 compcert.cfrontend.Cstrategy <> ty var
R3328:3345 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R3361:3368 compcert.lib.Integers Int zero def
R3359:3359 compcert.cfrontend.Cstrategy <> b var
R3348:3351 compcert.cfrontend.Csyntax <> Evar constr
R3355:3356 compcert.cfrontend.Cstrategy <> ty var
R3353:3353 compcert.cfrontend.Cstrategy <> x var
R3309:3311 Coq.Init.Logic <> :type_scope:x_'='_x not
R3288:3303 compcert.common.Globalenvs Genv find_symbol def
R3308:3308 compcert.cfrontend.Cstrategy <> x var
R3305:3306 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R3312:3315 Coq.Init.Datatypes <> Some constr
R3317:3317 compcert.cfrontend.Cstrategy <> b var
R3271:3273 Coq.Init.Logic <> :type_scope:x_'='_x not
R3269:3269 compcert.lib.Maps <> ::x_'!'_x not
R3270:3270 compcert.cfrontend.Cstrategy <> x var
R3268:3268 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EXPRS.e var
R3274:3277 Coq.Init.Datatypes <> None constr
R3453:3470 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R3488:3490 compcert.cfrontend.Cstrategy <> ofs var
R3486:3486 compcert.cfrontend.Cstrategy <> b var
R3473:3478 compcert.cfrontend.Csyntax <> Ederef constr
R3482:3483 compcert.cfrontend.Cstrategy <> ty var
R3480:3480 compcert.cfrontend.Cstrategy <> r var
R3410:3427 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R3432:3435 compcert.common.Values <> Vptr constr
R3439:3441 compcert.cfrontend.Cstrategy <> ofs var
R3437:3437 compcert.cfrontend.Cstrategy <> b var
R3429:3429 compcert.cfrontend.Cstrategy <> r var
R3675:3692 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R3713:3719 compcert.lib.Integers Int add def
R3726:3733 compcert.lib.Integers Int repr def
R3735:3739 compcert.cfrontend.Cstrategy <> delta var
R3721:3723 compcert.cfrontend.Cstrategy <> ofs var
R3710:3710 compcert.cfrontend.Cstrategy <> b var
R3695:3700 compcert.cfrontend.Csyntax <> Efield constr
R3706:3707 compcert.cfrontend.Cstrategy <> ty var
R3704:3704 compcert.cfrontend.Cstrategy <> f var
R3702:3702 compcert.cfrontend.Cstrategy <> r var
R3654:3656 Coq.Init.Logic <> :type_scope:x_'='_x not
R3634:3645 compcert.cfrontend.Ctypes <> field_offset def
R3649:3653 compcert.cfrontend.Cstrategy <> fList var
R3647:3647 compcert.cfrontend.Cstrategy <> f var
R3657:3658 compcert.common.Errors <> OK constr
R3660:3664 compcert.cfrontend.Cstrategy <> delta var
R3609:3611 Coq.Init.Logic <> :type_scope:x_'='_x not
R3601:3606 compcert.cfrontend.Csyntax <> typeof def
R3608:3608 compcert.cfrontend.Cstrategy <> r var
R3612:3618 compcert.cfrontend.Ctypes <> Tstruct constr
R3629:3629 compcert.cfrontend.Cstrategy <> a var
R3623:3627 compcert.cfrontend.Cstrategy <> fList var
R3620:3621 compcert.cfrontend.Cstrategy <> id var
R3558:3575 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R3580:3583 compcert.common.Values <> Vptr constr
R3587:3589 compcert.cfrontend.Cstrategy <> ofs var
R3585:3585 compcert.cfrontend.Cstrategy <> b var
R3577:3577 compcert.cfrontend.Cstrategy <> r var
R3883:3900 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R3920:3922 compcert.cfrontend.Cstrategy <> ofs var
R3918:3918 compcert.cfrontend.Cstrategy <> b var
R3903:3908 compcert.cfrontend.Csyntax <> Efield constr
R3914:3915 compcert.cfrontend.Cstrategy <> ty var
R3912:3912 compcert.cfrontend.Cstrategy <> f var
R3910:3910 compcert.cfrontend.Cstrategy <> r var
R3853:3855 Coq.Init.Logic <> :type_scope:x_'='_x not
R3845:3850 compcert.cfrontend.Csyntax <> typeof def
R3852:3852 compcert.cfrontend.Cstrategy <> r var
R3856:3861 compcert.cfrontend.Ctypes <> Tunion constr
R3872:3872 compcert.cfrontend.Cstrategy <> a var
R3866:3870 compcert.cfrontend.Cstrategy <> fList var
R3863:3864 compcert.cfrontend.Cstrategy <> id var
R3802:3819 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R3824:3827 compcert.common.Values <> Vptr constr
R3831:3833 compcert.cfrontend.Cstrategy <> ofs var
R3829:3829 compcert.cfrontend.Cstrategy <> b var
R3821:3821 compcert.cfrontend.Cstrategy <> r var
R4005:4022 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R4036:4036 compcert.cfrontend.Cstrategy <> v var
R4025:4028 compcert.cfrontend.Csyntax <> Eval constr
R4032:4033 compcert.cfrontend.Cstrategy <> ty var
R4030:4030 compcert.cfrontend.Cstrategy <> v var
R4209:4226 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R4242:4242 compcert.cfrontend.Cstrategy <> v var
R4229:4234 compcert.cfrontend.Csyntax <> Evalof constr
R4238:4239 compcert.cfrontend.Cstrategy <> ty var
R4236:4236 compcert.cfrontend.Cstrategy <> l var
R4171:4179 compcert.cfrontend.Csem <> deref_loc ind
R4198:4198 compcert.cfrontend.Cstrategy <> v var
R4195:4196 compcert.common.Events <> E0 def
R4191:4193 compcert.cfrontend.Cstrategy <> ofs var
R4189:4189 compcert.cfrontend.Cstrategy <> b var
R4187:4187 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EXPRS.m var
R4184:4185 compcert.cfrontend.Cstrategy <> ty var
R4181:4182 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R4153:4155 Coq.Init.Logic <> :type_scope:x_'='_x not
R4134:4149 compcert.cfrontend.Ctypes <> type_is_volatile def
R4151:4152 compcert.cfrontend.Cstrategy <> ty var
R4156:4160 Coq.Init.Datatypes <> false constr
R4119:4121 Coq.Init.Logic <> :type_scope:x_'='_x not
R4117:4118 compcert.cfrontend.Cstrategy <> ty var
R4122:4127 compcert.cfrontend.Csyntax <> typeof def
R4129:4129 compcert.cfrontend.Cstrategy <> l var
R4081:4098 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R4104:4106 compcert.cfrontend.Cstrategy <> ofs var
R4102:4102 compcert.cfrontend.Cstrategy <> b var
R4100:4100 compcert.cfrontend.Cstrategy <> l var
R4321:4338 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R4356:4359 compcert.common.Values <> Vptr constr
R4363:4365 compcert.cfrontend.Cstrategy <> ofs var
R4361:4361 compcert.cfrontend.Cstrategy <> b var
R4341:4347 compcert.cfrontend.Csyntax <> Eaddrof constr
R4351:4352 compcert.cfrontend.Cstrategy <> ty var
R4349:4349 compcert.cfrontend.Cstrategy <> l var
R4285:4302 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R4308:4310 compcert.cfrontend.Cstrategy <> ofs var
R4306:4306 compcert.cfrontend.Cstrategy <> b var
R4304:4304 compcert.cfrontend.Cstrategy <> l var
R4500:4517 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R4536:4536 compcert.cfrontend.Cstrategy <> v var
R4520:4524 compcert.cfrontend.Csyntax <> Eunop constr
R4532:4533 compcert.cfrontend.Cstrategy <> ty var
R4529:4530 compcert.cfrontend.Cstrategy <> r1 var
R4526:4527 compcert.cfrontend.Cstrategy <> op var
R4481:4483 Coq.Init.Logic <> :type_scope:x_'='_x not
R4444:4462 compcert.cfrontend.Cop <> sem_unary_operation def
R4471:4476 compcert.cfrontend.Csyntax <> typeof def
R4478:4479 compcert.cfrontend.Cstrategy <> r1 var
R4467:4468 compcert.cfrontend.Cstrategy <> v1 var
R4464:4465 compcert.cfrontend.Cstrategy <> op var
R4484:4487 Coq.Init.Datatypes <> Some constr
R4489:4489 compcert.cfrontend.Cstrategy <> v var
R4410:4427 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R4432:4433 compcert.cfrontend.Cstrategy <> v1 var
R4429:4430 compcert.cfrontend.Cstrategy <> r1 var
R4723:4740 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R4763:4763 compcert.cfrontend.Cstrategy <> v var
R4743:4748 compcert.cfrontend.Csyntax <> Ebinop constr
R4759:4760 compcert.cfrontend.Cstrategy <> ty var
R4756:4757 compcert.cfrontend.Cstrategy <> r2 var
R4753:4754 compcert.cfrontend.Cstrategy <> r1 var
R4750:4751 compcert.cfrontend.Cstrategy <> op var
R4704:4706 Coq.Init.Logic <> :type_scope:x_'='_x not
R4649:4668 compcert.cfrontend.Cop <> sem_binary_operation def
R4703:4703 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EXPRS.m var
R4692:4697 compcert.cfrontend.Csyntax <> typeof def
R4699:4700 compcert.cfrontend.Cstrategy <> r2 var
R4688:4689 compcert.cfrontend.Cstrategy <> v2 var
R4677:4682 compcert.cfrontend.Csyntax <> typeof def
R4684:4685 compcert.cfrontend.Cstrategy <> r1 var
R4673:4674 compcert.cfrontend.Cstrategy <> v1 var
R4670:4671 compcert.cfrontend.Cstrategy <> op var
R4707:4710 Coq.Init.Datatypes <> Some constr
R4712:4712 compcert.cfrontend.Cstrategy <> v var
R4615:4632 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R4637:4638 compcert.cfrontend.Cstrategy <> v2 var
R4634:4635 compcert.cfrontend.Cstrategy <> r2 var
R4587:4604 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R4609:4610 compcert.cfrontend.Cstrategy <> v1 var
R4606:4607 compcert.cfrontend.Cstrategy <> r1 var
R4883:4900 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R4916:4916 compcert.cfrontend.Cstrategy <> v var
R4903:4907 compcert.cfrontend.Csyntax <> Ecast constr
R4912:4913 compcert.cfrontend.Cstrategy <> ty var
R4909:4910 compcert.cfrontend.Cstrategy <> r1 var
R4864:4866 Coq.Init.Logic <> :type_scope:x_'='_x not
R4838:4845 compcert.cfrontend.Cop <> sem_cast def
R4862:4863 compcert.cfrontend.Cstrategy <> ty var
R4851:4856 compcert.cfrontend.Csyntax <> typeof def
R4858:4859 compcert.cfrontend.Cstrategy <> r1 var
R4847:4848 compcert.cfrontend.Cstrategy <> v1 var
R4867:4870 Coq.Init.Datatypes <> Some constr
R4872:4872 compcert.cfrontend.Cstrategy <> v var
R4804:4821 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R4826:4827 compcert.cfrontend.Cstrategy <> v1 var
R4823:4824 compcert.cfrontend.Cstrategy <> r1 var
R4955:4972 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R4992:4995 compcert.common.Values <> Vint constr
R4998:5005 compcert.lib.Integers Int repr def
R5008:5013 compcert.cfrontend.Ctypes <> sizeof def
R5015:5017 compcert.cfrontend.Cstrategy <> ty1 var
R4975:4981 compcert.cfrontend.Csyntax <> Esizeof constr
R4987:4988 compcert.cfrontend.Cstrategy <> ty var
R4983:4985 compcert.cfrontend.Cstrategy <> ty1 var
R5060:5077 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R5098:5101 compcert.common.Values <> Vint constr
R5104:5111 compcert.lib.Integers Int repr def
R5114:5120 compcert.cfrontend.Ctypes <> alignof def
R5122:5124 compcert.cfrontend.Cstrategy <> ty1 var
R5080:5087 compcert.cfrontend.Csyntax <> Ealignof constr
R5093:5094 compcert.cfrontend.Cstrategy <> ty var
R5089:5091 compcert.cfrontend.Cstrategy <> ty1 var
ind 5141:5156 <> eval_simple_list
constr 5207:5214 <> esrl_nil
constr 5258:5266 <> esrl_cons
R5183:5186 Coq.Init.Datatypes <> list ind
R5188:5190 compcert.common.Values <> val ind
R5171:5178 compcert.cfrontend.Ctypes <> typelist ind
R5159:5166 compcert.cfrontend.Csyntax <> exprlist ind
R5223:5238 compcert.cfrontend.Cstrategy <> eval_simple_list ind
R5250:5252 Coq.Init.Datatypes <> nil constr
R5245:5248 compcert.cfrontend.Ctypes <> Tnil constr
R5240:5243 compcert.cfrontend.Csyntax <> Enil constr
R5410:5425 compcert.cfrontend.Cstrategy <> eval_simple_list ind
R5457:5460 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5456:5456 compcert.cfrontend.Cstrategy <> v var
R5461:5462 compcert.cfrontend.Cstrategy <> vl var
R5441:5445 compcert.cfrontend.Ctypes <> Tcons constr
R5450:5452 compcert.cfrontend.Cstrategy <> tyl var
R5447:5448 compcert.cfrontend.Cstrategy <> ty var
R5428:5432 compcert.cfrontend.Csyntax <> Econs constr
R5436:5437 compcert.cfrontend.Cstrategy <> rl var
R5434:5434 compcert.cfrontend.Cstrategy <> r var
R5374:5389 compcert.cfrontend.Cstrategy <> eval_simple_list ind
R5398:5399 compcert.cfrontend.Cstrategy <> vl var
R5394:5396 compcert.cfrontend.Cstrategy <> tyl var
R5391:5392 compcert.cfrontend.Cstrategy <> rl var
R5355:5357 Coq.Init.Logic <> :type_scope:x_'='_x not
R5330:5337 compcert.cfrontend.Cop <> sem_cast def
R5353:5354 compcert.cfrontend.Cstrategy <> ty var
R5343:5348 compcert.cfrontend.Csyntax <> typeof def
R5350:5350 compcert.cfrontend.Cstrategy <> r var
R5339:5340 compcert.cfrontend.Cstrategy <> v' var
R5358:5361 Coq.Init.Datatypes <> Some constr
R5363:5363 compcert.cfrontend.Cstrategy <> v var
R5303:5320 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R5324:5325 compcert.cfrontend.Cstrategy <> v' var
R5322:5322 compcert.cfrontend.Cstrategy <> r var
def 5474:5496 <> eval_simple_rvalue_ind2
R5516:5533 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
def 5552:5574 <> eval_simple_lvalue_ind2
R5594:5611 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
def 5640:5668 <> eval_simple_rvalue_lvalue_ind
R5675:5697 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_ind2 scheme
R5700:5722 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_ind2 scheme
R5730:5741 compcert.cfrontend.Cstrategy STRATEGY.SIMPLE_EXPRS <> sec
ind 5896:5906 <> leftcontext
constr 5955:5962 <> lctx_top
constr 6014:6023 <> lctx_deref
constr 6117:6126 <> lctx_field
constr 6224:6234 <> lctx_rvalof
constr 6328:6338 <> lctx_addrof
constr 6433:6441 <> lctx_unop
constr 6540:6554 <> lctx_binop_left
constr 6660:6675 <> lctx_binop_right
constr 6807:6815 <> lctx_cast
constr 6908:6918 <> lctx_seqand
constr 7019:7028 <> lctx_seqor
constr 7128:7141 <> lctx_condition
constr 7251:7266 <> lctx_assign_left
constr 7367:7383 <> lctx_assign_right
constr 7510:7527 <> lctx_assignop_left
constr 7648:7666 <> lctx_assignop_right
constr 7813:7825 <> lctx_postincr
constr 7928:7941 <> lctx_call_left
constr 8040:8054 <> lctx_call_right
constr 8180:8191 <> lctx_builtin
constr 8314:8323 <> lctx_comma
constr 8423:8432 <> lctx_paren
ind 8528:8542 <> leftcontextlist
constr 8587:8600 <> lctx_list_head
constr 8694:8707 <> lctx_list_tail
R5934:5937 compcert.cfrontend.Csyntax <> expr ind
R5926:5929 compcert.cfrontend.Csyntax <> expr ind
R5917:5920 compcert.cfrontend.Csem <> kind ind
R5909:5912 compcert.cfrontend.Csem <> kind ind
R8562:8569 compcert.cfrontend.Csyntax <> exprlist ind
R8554:8557 compcert.cfrontend.Csyntax <> expr ind
R8545:8548 compcert.cfrontend.Csem <> kind ind
R5981:5991 compcert.cfrontend.Cstrategy <> leftcontext ind
R6007:6007 compcert.cfrontend.Cstrategy <> x var
R5995:5995 compcert.cfrontend.Cstrategy <> k var
R5993:5993 compcert.cfrontend.Cstrategy <> k var
R6069:6079 compcert.cfrontend.Cstrategy <> leftcontext ind
R6096:6101 compcert.cfrontend.Csyntax <> Ederef constr
R6109:6110 compcert.cfrontend.Cstrategy <> ty var
R6104:6104 compcert.cfrontend.Cstrategy <> C var
R6106:6106 compcert.cfrontend.Cstrategy <> x var
R6083:6084 compcert.cfrontend.Csem <> LV constr
R6081:6081 compcert.cfrontend.Cstrategy <> k var
R6047:6057 compcert.cfrontend.Cstrategy <> leftcontext ind
R6064:6064 compcert.cfrontend.Cstrategy <> C var
R6061:6062 compcert.cfrontend.Csem <> RV constr
R6059:6059 compcert.cfrontend.Cstrategy <> k var
R6174:6184 compcert.cfrontend.Cstrategy <> leftcontext ind
R6201:6206 compcert.cfrontend.Csyntax <> Efield constr
R6216:6217 compcert.cfrontend.Cstrategy <> ty var
R6214:6214 compcert.cfrontend.Cstrategy <> f var
R6209:6209 compcert.cfrontend.Cstrategy <> C var
R6211:6211 compcert.cfrontend.Cstrategy <> x var
R6188:6189 compcert.cfrontend.Csem <> LV constr
R6186:6186 compcert.cfrontend.Cstrategy <> k var
R6152:6162 compcert.cfrontend.Cstrategy <> leftcontext ind
R6169:6169 compcert.cfrontend.Cstrategy <> C var
R6166:6167 compcert.cfrontend.Csem <> RV constr
R6164:6164 compcert.cfrontend.Cstrategy <> k var
R6280:6290 compcert.cfrontend.Cstrategy <> leftcontext ind
R6307:6312 compcert.cfrontend.Csyntax <> Evalof constr
R6320:6321 compcert.cfrontend.Cstrategy <> ty var
R6315:6315 compcert.cfrontend.Cstrategy <> C var
R6317:6317 compcert.cfrontend.Cstrategy <> x var
R6294:6295 compcert.cfrontend.Csem <> RV constr
R6292:6292 compcert.cfrontend.Cstrategy <> k var
R6258:6268 compcert.cfrontend.Cstrategy <> leftcontext ind
R6275:6275 compcert.cfrontend.Cstrategy <> C var
R6272:6273 compcert.cfrontend.Csem <> LV constr
R6270:6270 compcert.cfrontend.Cstrategy <> k var
R6384:6394 compcert.cfrontend.Cstrategy <> leftcontext ind
R6411:6417 compcert.cfrontend.Csyntax <> Eaddrof constr
R6425:6426 compcert.cfrontend.Cstrategy <> ty var
R6420:6420 compcert.cfrontend.Cstrategy <> C var
R6422:6422 compcert.cfrontend.Cstrategy <> x var
R6398:6399 compcert.cfrontend.Csem <> RV constr
R6396:6396 compcert.cfrontend.Cstrategy <> k var
R6362:6372 compcert.cfrontend.Cstrategy <> leftcontext ind
R6379:6379 compcert.cfrontend.Cstrategy <> C var
R6376:6377 compcert.cfrontend.Csem <> LV constr
R6374:6374 compcert.cfrontend.Cstrategy <> k var
R6490:6500 compcert.cfrontend.Cstrategy <> leftcontext ind
R6517:6521 compcert.cfrontend.Csyntax <> Eunop constr
R6532:6533 compcert.cfrontend.Cstrategy <> ty var
R6527:6527 compcert.cfrontend.Cstrategy <> C var
R6529:6529 compcert.cfrontend.Cstrategy <> x var
R6523:6524 compcert.cfrontend.Cstrategy <> op var
R6504:6505 compcert.cfrontend.Csem <> RV constr
R6502:6502 compcert.cfrontend.Cstrategy <> k var
R6468:6478 compcert.cfrontend.Cstrategy <> leftcontext ind
R6485:6485 compcert.cfrontend.Cstrategy <> C var
R6482:6483 compcert.cfrontend.Csem <> RV constr
R6480:6480 compcert.cfrontend.Cstrategy <> k var
R6606:6616 compcert.cfrontend.Cstrategy <> leftcontext ind
R6633:6638 compcert.cfrontend.Csyntax <> Ebinop constr
R6652:6653 compcert.cfrontend.Cstrategy <> ty var
R6649:6650 compcert.cfrontend.Cstrategy <> e2 var
R6644:6644 compcert.cfrontend.Cstrategy <> C var
R6646:6646 compcert.cfrontend.Cstrategy <> x var
R6640:6641 compcert.cfrontend.Cstrategy <> op var
R6620:6621 compcert.cfrontend.Csem <> RV constr
R6618:6618 compcert.cfrontend.Cstrategy <> k var
R6584:6594 compcert.cfrontend.Cstrategy <> leftcontext ind
R6601:6601 compcert.cfrontend.Cstrategy <> C var
R6598:6599 compcert.cfrontend.Csem <> RV constr
R6596:6596 compcert.cfrontend.Cstrategy <> k var
R6753:6763 compcert.cfrontend.Cstrategy <> leftcontext ind
R6780:6785 compcert.cfrontend.Csyntax <> Ebinop constr
R6799:6800 compcert.cfrontend.Cstrategy <> ty var
R6794:6794 compcert.cfrontend.Cstrategy <> C var
R6796:6796 compcert.cfrontend.Cstrategy <> x var
R6790:6791 compcert.cfrontend.Cstrategy <> e1 var
R6787:6788 compcert.cfrontend.Cstrategy <> op var
R6767:6768 compcert.cfrontend.Csem <> RV constr
R6765:6765 compcert.cfrontend.Cstrategy <> k var
R6725:6735 compcert.cfrontend.Cstrategy <> leftcontext ind
R6742:6742 compcert.cfrontend.Cstrategy <> C var
R6739:6740 compcert.cfrontend.Csem <> RV constr
R6737:6737 compcert.cfrontend.Cstrategy <> k var
R6714:6716 Coq.Init.Logic <> :type_scope:x_'='_x not
R6705:6710 compcert.cfrontend.Cstrategy <> simple def
R6712:6713 compcert.cfrontend.Cstrategy <> e1 var
R6717:6720 Coq.Init.Datatypes <> true constr
R6861:6871 compcert.cfrontend.Cstrategy <> leftcontext ind
R6888:6892 compcert.cfrontend.Csyntax <> Ecast constr
R6900:6901 compcert.cfrontend.Cstrategy <> ty var
R6895:6895 compcert.cfrontend.Cstrategy <> C var
R6897:6897 compcert.cfrontend.Cstrategy <> x var
R6875:6876 compcert.cfrontend.Csem <> RV constr
R6873:6873 compcert.cfrontend.Cstrategy <> k var
R6839:6849 compcert.cfrontend.Cstrategy <> leftcontext ind
R6856:6856 compcert.cfrontend.Cstrategy <> C var
R6853:6854 compcert.cfrontend.Csem <> RV constr
R6851:6851 compcert.cfrontend.Cstrategy <> k var
R6967:6977 compcert.cfrontend.Cstrategy <> leftcontext ind
R6994:7000 compcert.cfrontend.Csyntax <> Eseqand constr
R7011:7012 compcert.cfrontend.Cstrategy <> ty var
R7008:7009 compcert.cfrontend.Cstrategy <> r2 var
R7003:7003 compcert.cfrontend.Cstrategy <> C var
R7005:7005 compcert.cfrontend.Cstrategy <> x var
R6981:6982 compcert.cfrontend.Csem <> RV constr
R6979:6979 compcert.cfrontend.Cstrategy <> k var
R6945:6955 compcert.cfrontend.Cstrategy <> leftcontext ind
R6962:6962 compcert.cfrontend.Cstrategy <> C var
R6959:6960 compcert.cfrontend.Csem <> RV constr
R6957:6957 compcert.cfrontend.Cstrategy <> k var
R7077:7087 compcert.cfrontend.Cstrategy <> leftcontext ind
R7104:7109 compcert.cfrontend.Csyntax <> Eseqor constr
R7120:7121 compcert.cfrontend.Cstrategy <> ty var
R7117:7118 compcert.cfrontend.Cstrategy <> r2 var
R7112:7112 compcert.cfrontend.Cstrategy <> C var
R7114:7114 compcert.cfrontend.Cstrategy <> x var
R7091:7092 compcert.cfrontend.Csem <> RV constr
R7089:7089 compcert.cfrontend.Cstrategy <> k var
R7055:7065 compcert.cfrontend.Cstrategy <> leftcontext ind
R7072:7072 compcert.cfrontend.Cstrategy <> C var
R7069:7070 compcert.cfrontend.Csem <> RV constr
R7067:7067 compcert.cfrontend.Cstrategy <> k var
R7193:7203 compcert.cfrontend.Cstrategy <> leftcontext ind
R7220:7229 compcert.cfrontend.Csyntax <> Econdition constr
R7243:7244 compcert.cfrontend.Cstrategy <> ty var
R7240:7241 compcert.cfrontend.Cstrategy <> r3 var
R7237:7238 compcert.cfrontend.Cstrategy <> r2 var
R7232:7232 compcert.cfrontend.Cstrategy <> C var
R7234:7234 compcert.cfrontend.Cstrategy <> x var
R7207:7208 compcert.cfrontend.Csem <> RV constr
R7205:7205 compcert.cfrontend.Cstrategy <> k var
R7171:7181 compcert.cfrontend.Cstrategy <> leftcontext ind
R7188:7188 compcert.cfrontend.Cstrategy <> C var
R7185:7186 compcert.cfrontend.Csem <> RV constr
R7183:7183 compcert.cfrontend.Cstrategy <> k var
R7315:7325 compcert.cfrontend.Cstrategy <> leftcontext ind
R7342:7348 compcert.cfrontend.Csyntax <> Eassign constr
R7359:7360 compcert.cfrontend.Cstrategy <> ty var
R7356:7357 compcert.cfrontend.Cstrategy <> e2 var
R7351:7351 compcert.cfrontend.Cstrategy <> C var
R7353:7353 compcert.cfrontend.Cstrategy <> x var
R7329:7330 compcert.cfrontend.Csem <> RV constr
R7327:7327 compcert.cfrontend.Cstrategy <> k var
R7293:7303 compcert.cfrontend.Cstrategy <> leftcontext ind
R7310:7310 compcert.cfrontend.Cstrategy <> C var
R7307:7308 compcert.cfrontend.Csem <> LV constr
R7305:7305 compcert.cfrontend.Cstrategy <> k var
R7458:7468 compcert.cfrontend.Cstrategy <> leftcontext ind
R7485:7491 compcert.cfrontend.Csyntax <> Eassign constr
R7502:7503 compcert.cfrontend.Cstrategy <> ty var
R7497:7497 compcert.cfrontend.Cstrategy <> C var
R7499:7499 compcert.cfrontend.Cstrategy <> x var
R7493:7494 compcert.cfrontend.Cstrategy <> e1 var
R7472:7473 compcert.cfrontend.Csem <> RV constr
R7470:7470 compcert.cfrontend.Cstrategy <> k var
R7430:7440 compcert.cfrontend.Cstrategy <> leftcontext ind
R7447:7447 compcert.cfrontend.Cstrategy <> C var
R7444:7445 compcert.cfrontend.Csem <> RV constr
R7442:7442 compcert.cfrontend.Cstrategy <> k var
R7419:7421 Coq.Init.Logic <> :type_scope:x_'='_x not
R7410:7415 compcert.cfrontend.Cstrategy <> simple def
R7417:7418 compcert.cfrontend.Cstrategy <> e1 var
R7422:7425 Coq.Init.Datatypes <> true constr
R7585:7595 compcert.cfrontend.Cstrategy <> leftcontext ind
R7612:7620 compcert.cfrontend.Csyntax <> Eassignop constr
R7640:7641 compcert.cfrontend.Cstrategy <> ty var
R7634:7638 compcert.cfrontend.Cstrategy <> tyres var
R7631:7632 compcert.cfrontend.Cstrategy <> e2 var
R7626:7626 compcert.cfrontend.Cstrategy <> C var
R7628:7628 compcert.cfrontend.Cstrategy <> x var
R7622:7623 compcert.cfrontend.Cstrategy <> op var
R7599:7600 compcert.cfrontend.Csem <> RV constr
R7597:7597 compcert.cfrontend.Cstrategy <> k var
R7563:7573 compcert.cfrontend.Cstrategy <> leftcontext ind
R7580:7580 compcert.cfrontend.Cstrategy <> C var
R7577:7578 compcert.cfrontend.Csem <> LV constr
R7575:7575 compcert.cfrontend.Cstrategy <> k var
R7750:7760 compcert.cfrontend.Cstrategy <> leftcontext ind
R7777:7785 compcert.cfrontend.Csyntax <> Eassignop constr
R7805:7806 compcert.cfrontend.Cstrategy <> ty var
R7799:7803 compcert.cfrontend.Cstrategy <> tyres var
R7794:7794 compcert.cfrontend.Cstrategy <> C var
R7796:7796 compcert.cfrontend.Cstrategy <> x var
R7790:7791 compcert.cfrontend.Cstrategy <> e1 var
R7787:7788 compcert.cfrontend.Cstrategy <> op var
R7764:7765 compcert.cfrontend.Csem <> RV constr
R7762:7762 compcert.cfrontend.Cstrategy <> k var
R7722:7732 compcert.cfrontend.Cstrategy <> leftcontext ind
R7739:7739 compcert.cfrontend.Cstrategy <> C var
R7736:7737 compcert.cfrontend.Csem <> RV constr
R7734:7734 compcert.cfrontend.Cstrategy <> k var
R7711:7713 Coq.Init.Logic <> :type_scope:x_'='_x not
R7702:7707 compcert.cfrontend.Cstrategy <> simple def
R7709:7710 compcert.cfrontend.Cstrategy <> e1 var
R7714:7717 Coq.Init.Datatypes <> true constr
R7874:7884 compcert.cfrontend.Cstrategy <> leftcontext ind
R7901:7909 compcert.cfrontend.Csyntax <> Epostincr constr
R7920:7921 compcert.cfrontend.Cstrategy <> ty var
R7915:7915 compcert.cfrontend.Cstrategy <> C var
R7917:7917 compcert.cfrontend.Cstrategy <> x var
R7911:7912 compcert.cfrontend.Cstrategy <> id var
R7888:7889 compcert.cfrontend.Csem <> RV constr
R7886:7886 compcert.cfrontend.Cstrategy <> k var
R7852:7862 compcert.cfrontend.Cstrategy <> leftcontext ind
R7869:7869 compcert.cfrontend.Cstrategy <> C var
R7866:7867 compcert.cfrontend.Csem <> LV constr
R7864:7864 compcert.cfrontend.Cstrategy <> k var
R7990:8000 compcert.cfrontend.Cstrategy <> leftcontext ind
R8017:8021 compcert.cfrontend.Csyntax <> Ecall constr
R8032:8033 compcert.cfrontend.Cstrategy <> ty var
R8029:8030 compcert.cfrontend.Cstrategy <> el var
R8024:8024 compcert.cfrontend.Cstrategy <> C var
R8026:8026 compcert.cfrontend.Cstrategy <> x var
R8004:8005 compcert.cfrontend.Csem <> RV constr
R8002:8002 compcert.cfrontend.Cstrategy <> k var
R7968:7978 compcert.cfrontend.Cstrategy <> leftcontext ind
R7985:7985 compcert.cfrontend.Cstrategy <> C var
R7982:7983 compcert.cfrontend.Csem <> RV constr
R7980:7980 compcert.cfrontend.Cstrategy <> k var
R8130:8140 compcert.cfrontend.Cstrategy <> leftcontext ind
R8157:8161 compcert.cfrontend.Csyntax <> Ecall constr
R8172:8173 compcert.cfrontend.Cstrategy <> ty var
R8167:8167 compcert.cfrontend.Cstrategy <> C var
R8169:8169 compcert.cfrontend.Cstrategy <> x var
R8163:8164 compcert.cfrontend.Cstrategy <> e1 var
R8144:8145 compcert.cfrontend.Csem <> RV constr
R8142:8142 compcert.cfrontend.Cstrategy <> k var
R8101:8115 compcert.cfrontend.Cstrategy <> leftcontextlist ind
R8119:8119 compcert.cfrontend.Cstrategy <> C var
R8117:8117 compcert.cfrontend.Cstrategy <> k var
R8090:8092 Coq.Init.Logic <> :type_scope:x_'='_x not
R8081:8086 compcert.cfrontend.Cstrategy <> simple def
R8088:8089 compcert.cfrontend.Cstrategy <> e1 var
R8093:8096 Coq.Init.Datatypes <> true constr
R8254:8264 compcert.cfrontend.Cstrategy <> leftcontext ind
R8281:8288 compcert.cfrontend.Csyntax <> Ebuiltin constr
R8306:8307 compcert.cfrontend.Cstrategy <> ty var
R8301:8301 compcert.cfrontend.Cstrategy <> C var
R8303:8303 compcert.cfrontend.Cstrategy <> x var
R8293:8298 compcert.cfrontend.Cstrategy <> tyargs var
R8290:8291 compcert.cfrontend.Cstrategy <> ef var
R8268:8269 compcert.cfrontend.Csem <> RV constr
R8266:8266 compcert.cfrontend.Cstrategy <> k var
R8225:8239 compcert.cfrontend.Cstrategy <> leftcontextlist ind
R8243:8243 compcert.cfrontend.Cstrategy <> C var
R8241:8241 compcert.cfrontend.Cstrategy <> k var
R8372:8382 compcert.cfrontend.Cstrategy <> leftcontext ind
R8399:8404 compcert.cfrontend.Csyntax <> Ecomma constr
R8415:8416 compcert.cfrontend.Cstrategy <> ty var
R8412:8413 compcert.cfrontend.Cstrategy <> e2 var
R8407:8407 compcert.cfrontend.Cstrategy <> C var
R8409:8409 compcert.cfrontend.Cstrategy <> x var
R8386:8387 compcert.cfrontend.Csem <> RV constr
R8384:8384 compcert.cfrontend.Cstrategy <> k var
R8350:8360 compcert.cfrontend.Cstrategy <> leftcontext ind
R8367:8367 compcert.cfrontend.Cstrategy <> C var
R8364:8365 compcert.cfrontend.Csem <> RV constr
R8362:8362 compcert.cfrontend.Cstrategy <> k var
R8478:8488 compcert.cfrontend.Cstrategy <> leftcontext ind
R8505:8510 compcert.cfrontend.Csyntax <> Eparen constr
R8518:8519 compcert.cfrontend.Cstrategy <> ty var
R8513:8513 compcert.cfrontend.Cstrategy <> C var
R8515:8515 compcert.cfrontend.Cstrategy <> x var
R8492:8493 compcert.cfrontend.Csem <> RV constr
R8490:8490 compcert.cfrontend.Cstrategy <> k var
R8456:8466 compcert.cfrontend.Cstrategy <> leftcontext ind
R8473:8473 compcert.cfrontend.Cstrategy <> C var
R8470:8471 compcert.cfrontend.Csem <> RV constr
R8468:8468 compcert.cfrontend.Cstrategy <> k var
R8646:8660 compcert.cfrontend.Cstrategy <> leftcontextlist ind
R8674:8678 compcert.cfrontend.Csyntax <> Econs constr
R8686:8687 compcert.cfrontend.Cstrategy <> el var
R8681:8681 compcert.cfrontend.Cstrategy <> C var
R8683:8683 compcert.cfrontend.Cstrategy <> x var
R8662:8662 compcert.cfrontend.Cstrategy <> k var
R8624:8634 compcert.cfrontend.Cstrategy <> leftcontext ind
R8641:8641 compcert.cfrontend.Cstrategy <> C var
R8638:8639 compcert.cfrontend.Csem <> RV constr
R8636:8636 compcert.cfrontend.Cstrategy <> k var
R8780:8794 compcert.cfrontend.Cstrategy <> leftcontextlist ind
R8808:8812 compcert.cfrontend.Csyntax <> Econs constr
R8818:8818 compcert.cfrontend.Cstrategy <> C var
R8820:8820 compcert.cfrontend.Cstrategy <> x var
R8814:8815 compcert.cfrontend.Cstrategy <> e1 var
R8796:8796 compcert.cfrontend.Cstrategy <> k var
R8751:8765 compcert.cfrontend.Cstrategy <> leftcontextlist ind
R8769:8769 compcert.cfrontend.Cstrategy <> C var
R8767:8767 compcert.cfrontend.Cstrategy <> k var
R8740:8742 Coq.Init.Logic <> :type_scope:x_'='_x not
R8731:8736 compcert.cfrontend.Cstrategy <> simple def
R8738:8739 compcert.cfrontend.Cstrategy <> e1 var
R8743:8746 Coq.Init.Datatypes <> true constr
prf 8832:8850 <> leftcontext_context
prf 8915:8941 <> leftcontextlist_contextlist
R8894:8900 compcert.cfrontend.Csem <> context ind
R8908:8908 compcert.cfrontend.Cstrategy <> C var
R8905:8906 compcert.cfrontend.Cstrategy <> k2 var
R8902:8903 compcert.cfrontend.Cstrategy <> k1 var
R8871:8881 compcert.cfrontend.Cstrategy <> leftcontext ind
R8889:8889 compcert.cfrontend.Cstrategy <> C var
R8886:8887 compcert.cfrontend.Cstrategy <> k2 var
R8883:8884 compcert.cfrontend.Cstrategy <> k1 var
R8981:8991 compcert.cfrontend.Csem <> contextlist ind
R8995:8995 compcert.cfrontend.Cstrategy <> C var
R8993:8993 compcert.cfrontend.Cstrategy <> k var
R8958:8972 compcert.cfrontend.Cstrategy <> leftcontextlist ind
R8976:8976 compcert.cfrontend.Cstrategy <> C var
R8974:8974 compcert.cfrontend.Cstrategy <> k var
R9092:9110 compcert.cfrontend.Cstrategy <> leftcontext_context thm
ind 9415:9419 <> estep
constr 9462:9470 <> step_expr
constr 9694:9713 <> step_rvalof_volatile
constr 10011:10026 <> step_seqand_true
constr 10297:10313 <> step_seqand_false
constr 10578:10592 <> step_seqor_true
constr 10853:10868 <> step_seqor_false
constr 11140:11153 <> step_condition
constr 11434:11444 <> step_assign
constr 11826:11838 <> step_assignop
constr 12393:12411 <> step_assignop_stuck
constr 13024:13036 <> step_postincr
constr 13492:13510 <> step_postincr_stuck
constr 14032:14041 <> step_comma
constr 14261:14270 <> step_paren
constr 14514:14522 <> step_call
constr 14975:14986 <> step_builtin
R9440:9444 compcert.cfrontend.Csem <> state ind
R9431:9435 compcert.common.Events <> trace def
R9422:9426 compcert.cfrontend.Csem <> state ind
R9617:9621 compcert.cfrontend.Cstrategy <> estep ind
R9658:9666 compcert.cfrontend.Csem <> ExprState constr
R9686:9686 compcert.cfrontend.Cstrategy <> m var
R9684:9684 compcert.cfrontend.Cstrategy <> e var
R9682:9682 compcert.cfrontend.Cstrategy <> k var
R9671:9674 compcert.cfrontend.Csyntax <> Eval constr
R9678:9679 compcert.cfrontend.Cstrategy <> ty var
R9676:9676 compcert.cfrontend.Cstrategy <> v var
R9668:9668 compcert.cfrontend.Cstrategy <> f var
R9654:9655 compcert.common.Events <> E0 def
R9624:9632 compcert.cfrontend.Csem <> ExprState constr
R9642:9642 compcert.cfrontend.Cstrategy <> m var
R9640:9640 compcert.cfrontend.Cstrategy <> e var
R9638:9638 compcert.cfrontend.Cstrategy <> k var
R9636:9636 compcert.cfrontend.Cstrategy <> r var
R9634:9634 compcert.cfrontend.Cstrategy <> f var
R9596:9598 Coq.Init.Logic <> :type_scope:x_'='_x not
R9594:9595 compcert.cfrontend.Cstrategy <> ty var
R9599:9604 compcert.cfrontend.Csyntax <> typeof def
R9606:9606 compcert.cfrontend.Cstrategy <> r var
R9544:9544 compcert.cfrontend.Cstrategy <> r var
R9551:9554 compcert.cfrontend.Csyntax <> Eval constr
R9563:9567 Coq.Init.Logic <> False ind
R9576:9579 Coq.Init.Logic <> True ind
R9502:9519 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R9527:9527 compcert.cfrontend.Cstrategy <> v var
R9525:9525 compcert.cfrontend.Cstrategy <> r var
R9523:9523 compcert.cfrontend.Cstrategy <> m var
R9521:9521 compcert.cfrontend.Cstrategy <> e var
R9914:9918 compcert.cfrontend.Cstrategy <> estep ind
R9971:9979 compcert.cfrontend.Csem <> ExprState constr
R10003:10003 compcert.cfrontend.Cstrategy <> m var
R10001:10001 compcert.cfrontend.Cstrategy <> e var
R9999:9999 compcert.cfrontend.Cstrategy <> k var
R9984:9984 compcert.cfrontend.Cstrategy <> C var
R9987:9990 compcert.cfrontend.Csyntax <> Eval constr
R9994:9995 compcert.cfrontend.Cstrategy <> ty var
R9992:9992 compcert.cfrontend.Cstrategy <> v var
R9981:9981 compcert.cfrontend.Cstrategy <> f var
R9968:9968 compcert.cfrontend.Cstrategy <> t var
R9921:9929 compcert.cfrontend.Csem <> ExprState constr
R9955:9955 compcert.cfrontend.Cstrategy <> m var
R9953:9953 compcert.cfrontend.Cstrategy <> e var
R9951:9951 compcert.cfrontend.Cstrategy <> k var
R9934:9934 compcert.cfrontend.Cstrategy <> C var
R9937:9942 compcert.cfrontend.Csyntax <> Evalof constr
R9946:9947 compcert.cfrontend.Cstrategy <> ty var
R9944:9944 compcert.cfrontend.Cstrategy <> l var
R9931:9931 compcert.cfrontend.Cstrategy <> f var
R9897:9899 Coq.Init.Logic <> :type_scope:x_'='_x not
R9878:9893 compcert.cfrontend.Ctypes <> type_is_volatile def
R9895:9896 compcert.cfrontend.Cstrategy <> ty var
R9900:9903 Coq.Init.Datatypes <> true constr
R9863:9865 Coq.Init.Logic <> :type_scope:x_'='_x not
R9861:9862 compcert.cfrontend.Cstrategy <> ty var
R9866:9871 compcert.cfrontend.Csyntax <> typeof def
R9873:9873 compcert.cfrontend.Cstrategy <> l var
R9824:9832 compcert.cfrontend.Csem <> deref_loc ind
R9850:9850 compcert.cfrontend.Cstrategy <> v var
R9848:9848 compcert.cfrontend.Cstrategy <> t var
R9844:9846 compcert.cfrontend.Cstrategy <> ofs var
R9842:9842 compcert.cfrontend.Cstrategy <> b var
R9840:9840 compcert.cfrontend.Cstrategy <> m var
R9837:9838 compcert.cfrontend.Cstrategy <> ty var
R9834:9835 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R9784:9801 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R9811:9813 compcert.cfrontend.Cstrategy <> ofs var
R9809:9809 compcert.cfrontend.Cstrategy <> b var
R9807:9807 compcert.cfrontend.Cstrategy <> l var
R9805:9805 compcert.cfrontend.Cstrategy <> m var
R9803:9803 compcert.cfrontend.Cstrategy <> e var
R9755:9765 compcert.cfrontend.Cstrategy <> leftcontext ind
R9773:9773 compcert.cfrontend.Cstrategy <> C var
R9770:9771 compcert.cfrontend.Csem <> RV constr
R9767:9768 compcert.cfrontend.Csem <> RV constr
R10174:10178 compcert.cfrontend.Cstrategy <> estep ind
R10236:10244 compcert.cfrontend.Csem <> ExprState constr
R10290:10290 compcert.cfrontend.Cstrategy <> m var
R10288:10288 compcert.cfrontend.Cstrategy <> e var
R10286:10286 compcert.cfrontend.Cstrategy <> k var
R10249:10249 compcert.cfrontend.Cstrategy <> C var
R10252:10257 compcert.cfrontend.Csyntax <> Eparen constr
R10281:10282 compcert.cfrontend.Cstrategy <> ty var
R10260:10265 compcert.cfrontend.Csyntax <> Eparen constr
R10270:10278 compcert.cfrontend.Ctypes <> type_bool def
R10267:10268 compcert.cfrontend.Cstrategy <> r2 var
R10246:10246 compcert.cfrontend.Cstrategy <> f var
R10232:10233 compcert.common.Events <> E0 def
R10181:10189 compcert.cfrontend.Csem <> ExprState constr
R10220:10220 compcert.cfrontend.Cstrategy <> m var
R10218:10218 compcert.cfrontend.Cstrategy <> e var
R10216:10216 compcert.cfrontend.Cstrategy <> k var
R10194:10194 compcert.cfrontend.Cstrategy <> C var
R10197:10203 compcert.cfrontend.Csyntax <> Eseqand constr
R10211:10212 compcert.cfrontend.Cstrategy <> ty var
R10208:10209 compcert.cfrontend.Cstrategy <> r2 var
R10205:10206 compcert.cfrontend.Cstrategy <> r1 var
R10191:10191 compcert.cfrontend.Cstrategy <> f var
R10152:10154 Coq.Init.Logic <> :type_scope:x_'='_x not
R10130:10137 compcert.cfrontend.Cop <> bool_val def
R10142:10147 compcert.cfrontend.Csyntax <> typeof def
R10149:10150 compcert.cfrontend.Cstrategy <> r1 var
R10139:10139 compcert.cfrontend.Cstrategy <> v var
R10155:10158 Coq.Init.Datatypes <> Some constr
R10160:10163 Coq.Init.Datatypes <> true constr
R10093:10110 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R10119:10119 compcert.cfrontend.Cstrategy <> v var
R10116:10117 compcert.cfrontend.Cstrategy <> r1 var
R10114:10114 compcert.cfrontend.Cstrategy <> m var
R10112:10112 compcert.cfrontend.Cstrategy <> e var
R10064:10074 compcert.cfrontend.Cstrategy <> leftcontext ind
R10082:10082 compcert.cfrontend.Cstrategy <> C var
R10079:10080 compcert.cfrontend.Csem <> RV constr
R10076:10077 compcert.cfrontend.Csem <> RV constr
R10462:10466 compcert.cfrontend.Cstrategy <> estep ind
R10524:10532 compcert.cfrontend.Csem <> ExprState constr
R10570:10570 compcert.cfrontend.Cstrategy <> m var
R10568:10568 compcert.cfrontend.Cstrategy <> e var
R10566:10566 compcert.cfrontend.Cstrategy <> k var
R10537:10537 compcert.cfrontend.Cstrategy <> C var
R10540:10543 compcert.cfrontend.Csyntax <> Eval constr
R10561:10562 compcert.cfrontend.Cstrategy <> ty var
R10546:10549 compcert.common.Values <> Vint constr
R10551:10558 compcert.lib.Integers Int zero def
R10534:10534 compcert.cfrontend.Cstrategy <> f var
R10520:10521 compcert.common.Events <> E0 def
R10469:10477 compcert.cfrontend.Csem <> ExprState constr
R10508:10508 compcert.cfrontend.Cstrategy <> m var
R10506:10506 compcert.cfrontend.Cstrategy <> e var
R10504:10504 compcert.cfrontend.Cstrategy <> k var
R10482:10482 compcert.cfrontend.Cstrategy <> C var
R10485:10491 compcert.cfrontend.Csyntax <> Eseqand constr
R10499:10500 compcert.cfrontend.Cstrategy <> ty var
R10496:10497 compcert.cfrontend.Cstrategy <> r2 var
R10493:10494 compcert.cfrontend.Cstrategy <> r1 var
R10479:10479 compcert.cfrontend.Cstrategy <> f var
R10439:10441 Coq.Init.Logic <> :type_scope:x_'='_x not
R10417:10424 compcert.cfrontend.Cop <> bool_val def
R10429:10434 compcert.cfrontend.Csyntax <> typeof def
R10436:10437 compcert.cfrontend.Cstrategy <> r1 var
R10426:10426 compcert.cfrontend.Cstrategy <> v var
R10442:10445 Coq.Init.Datatypes <> Some constr
R10447:10451 Coq.Init.Datatypes <> false constr
R10380:10397 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R10406:10406 compcert.cfrontend.Cstrategy <> v var
R10403:10404 compcert.cfrontend.Cstrategy <> r1 var
R10401:10401 compcert.cfrontend.Cstrategy <> m var
R10399:10399 compcert.cfrontend.Cstrategy <> e var
R10351:10361 compcert.cfrontend.Cstrategy <> leftcontext ind
R10369:10369 compcert.cfrontend.Cstrategy <> C var
R10366:10367 compcert.cfrontend.Csem <> RV constr
R10363:10364 compcert.cfrontend.Csem <> RV constr
R10740:10744 compcert.cfrontend.Cstrategy <> estep ind
R10801:10809 compcert.cfrontend.Csem <> ExprState constr
R10846:10846 compcert.cfrontend.Cstrategy <> m var
R10844:10844 compcert.cfrontend.Cstrategy <> e var
R10842:10842 compcert.cfrontend.Cstrategy <> k var
R10814:10814 compcert.cfrontend.Cstrategy <> C var
R10817:10820 compcert.cfrontend.Csyntax <> Eval constr
R10837:10838 compcert.cfrontend.Cstrategy <> ty var
R10823:10826 compcert.common.Values <> Vint constr
R10828:10834 compcert.lib.Integers Int one def
R10811:10811 compcert.cfrontend.Cstrategy <> f var
R10797:10798 compcert.common.Events <> E0 def
R10747:10755 compcert.cfrontend.Csem <> ExprState constr
R10785:10785 compcert.cfrontend.Cstrategy <> m var
R10783:10783 compcert.cfrontend.Cstrategy <> e var
R10781:10781 compcert.cfrontend.Cstrategy <> k var
R10760:10760 compcert.cfrontend.Cstrategy <> C var
R10763:10768 compcert.cfrontend.Csyntax <> Eseqor constr
R10776:10777 compcert.cfrontend.Cstrategy <> ty var
R10773:10774 compcert.cfrontend.Cstrategy <> r2 var
R10770:10771 compcert.cfrontend.Cstrategy <> r1 var
R10757:10757 compcert.cfrontend.Cstrategy <> f var
R10718:10720 Coq.Init.Logic <> :type_scope:x_'='_x not
R10696:10703 compcert.cfrontend.Cop <> bool_val def
R10708:10713 compcert.cfrontend.Csyntax <> typeof def
R10715:10716 compcert.cfrontend.Cstrategy <> r1 var
R10705:10705 compcert.cfrontend.Cstrategy <> v var
R10721:10724 Coq.Init.Datatypes <> Some constr
R10726:10729 Coq.Init.Datatypes <> true constr
R10659:10676 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R10685:10685 compcert.cfrontend.Cstrategy <> v var
R10682:10683 compcert.cfrontend.Cstrategy <> r1 var
R10680:10680 compcert.cfrontend.Cstrategy <> m var
R10678:10678 compcert.cfrontend.Cstrategy <> e var
R10630:10640 compcert.cfrontend.Cstrategy <> leftcontext ind
R10648:10648 compcert.cfrontend.Cstrategy <> C var
R10645:10646 compcert.cfrontend.Csem <> RV constr
R10642:10643 compcert.cfrontend.Csem <> RV constr
R11017:11021 compcert.cfrontend.Cstrategy <> estep ind
R11078:11086 compcert.cfrontend.Csem <> ExprState constr
R11132:11132 compcert.cfrontend.Cstrategy <> m var
R11130:11130 compcert.cfrontend.Cstrategy <> e var
R11128:11128 compcert.cfrontend.Cstrategy <> k var
R11091:11091 compcert.cfrontend.Cstrategy <> C var
R11094:11099 compcert.cfrontend.Csyntax <> Eparen constr
R11123:11124 compcert.cfrontend.Cstrategy <> ty var
R11102:11107 compcert.cfrontend.Csyntax <> Eparen constr
R11112:11120 compcert.cfrontend.Ctypes <> type_bool def
R11109:11110 compcert.cfrontend.Cstrategy <> r2 var
R11088:11088 compcert.cfrontend.Cstrategy <> f var
R11074:11075 compcert.common.Events <> E0 def
R11024:11032 compcert.cfrontend.Csem <> ExprState constr
R11062:11062 compcert.cfrontend.Cstrategy <> m var
R11060:11060 compcert.cfrontend.Cstrategy <> e var
R11058:11058 compcert.cfrontend.Cstrategy <> k var
R11037:11037 compcert.cfrontend.Cstrategy <> C var
R11040:11045 compcert.cfrontend.Csyntax <> Eseqor constr
R11053:11054 compcert.cfrontend.Cstrategy <> ty var
R11050:11051 compcert.cfrontend.Cstrategy <> r2 var
R11047:11048 compcert.cfrontend.Cstrategy <> r1 var
R11034:11034 compcert.cfrontend.Cstrategy <> f var
R10994:10996 Coq.Init.Logic <> :type_scope:x_'='_x not
R10972:10979 compcert.cfrontend.Cop <> bool_val def
R10984:10989 compcert.cfrontend.Csyntax <> typeof def
R10991:10992 compcert.cfrontend.Cstrategy <> r1 var
R10981:10981 compcert.cfrontend.Cstrategy <> v var
R10997:11000 Coq.Init.Datatypes <> Some constr
R11002:11006 Coq.Init.Datatypes <> false constr
R10935:10952 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R10961:10961 compcert.cfrontend.Cstrategy <> v var
R10958:10959 compcert.cfrontend.Cstrategy <> r1 var
R10956:10956 compcert.cfrontend.Cstrategy <> m var
R10954:10954 compcert.cfrontend.Cstrategy <> e var
R10906:10916 compcert.cfrontend.Cstrategy <> leftcontext ind
R10924:10924 compcert.cfrontend.Cstrategy <> C var
R10921:10922 compcert.cfrontend.Csem <> RV constr
R10918:10919 compcert.cfrontend.Csem <> RV constr
R11303:11307 compcert.cfrontend.Cstrategy <> estep ind
R11371:11379 compcert.cfrontend.Csem <> ExprState constr
R11426:11426 compcert.cfrontend.Cstrategy <> m var
R11424:11424 compcert.cfrontend.Cstrategy <> e var
R11422:11422 compcert.cfrontend.Cstrategy <> k var
R11384:11384 compcert.cfrontend.Cstrategy <> C var
R11387:11392 compcert.cfrontend.Csyntax <> Eparen constr
R11417:11418 compcert.cfrontend.Cstrategy <> ty var
R11398:11398 compcert.cfrontend.Cstrategy <> b var
R11413:11414 compcert.cfrontend.Cstrategy <> r3 var
R11405:11406 compcert.cfrontend.Cstrategy <> r2 var
R11381:11381 compcert.cfrontend.Cstrategy <> f var
R11367:11368 compcert.common.Events <> E0 def
R11310:11318 compcert.cfrontend.Csem <> ExprState constr
R11355:11355 compcert.cfrontend.Cstrategy <> m var
R11353:11353 compcert.cfrontend.Cstrategy <> e var
R11351:11351 compcert.cfrontend.Cstrategy <> k var
R11323:11323 compcert.cfrontend.Cstrategy <> C var
R11326:11335 compcert.cfrontend.Csyntax <> Econdition constr
R11346:11347 compcert.cfrontend.Cstrategy <> ty var
R11343:11344 compcert.cfrontend.Cstrategy <> r3 var
R11340:11341 compcert.cfrontend.Cstrategy <> r2 var
R11337:11338 compcert.cfrontend.Cstrategy <> r1 var
R11320:11320 compcert.cfrontend.Cstrategy <> f var
R11284:11286 Coq.Init.Logic <> :type_scope:x_'='_x not
R11262:11269 compcert.cfrontend.Cop <> bool_val def
R11274:11279 compcert.cfrontend.Csyntax <> typeof def
R11281:11282 compcert.cfrontend.Cstrategy <> r1 var
R11271:11271 compcert.cfrontend.Cstrategy <> v var
R11287:11290 Coq.Init.Datatypes <> Some constr
R11292:11292 compcert.cfrontend.Cstrategy <> b var
R11225:11242 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R11251:11251 compcert.cfrontend.Cstrategy <> v var
R11248:11249 compcert.cfrontend.Cstrategy <> r1 var
R11246:11246 compcert.cfrontend.Cstrategy <> m var
R11244:11244 compcert.cfrontend.Cstrategy <> e var
R11196:11206 compcert.cfrontend.Cstrategy <> leftcontext ind
R11214:11214 compcert.cfrontend.Cstrategy <> C var
R11211:11212 compcert.cfrontend.Csem <> RV constr
R11208:11209 compcert.cfrontend.Csem <> RV constr
R11724:11728 compcert.cfrontend.Cstrategy <> estep ind
R11784:11792 compcert.cfrontend.Csem <> ExprState constr
R11817:11818 compcert.cfrontend.Cstrategy <> m' var
R11815:11815 compcert.cfrontend.Cstrategy <> e var
R11813:11813 compcert.cfrontend.Cstrategy <> k var
R11797:11797 compcert.cfrontend.Cstrategy <> C var
R11800:11803 compcert.cfrontend.Csyntax <> Eval constr
R11808:11809 compcert.cfrontend.Cstrategy <> ty var
R11805:11806 compcert.cfrontend.Cstrategy <> v' var
R11794:11794 compcert.cfrontend.Cstrategy <> f var
R11781:11781 compcert.cfrontend.Cstrategy <> t var
R11731:11739 compcert.cfrontend.Csem <> ExprState constr
R11768:11768 compcert.cfrontend.Cstrategy <> m var
R11766:11766 compcert.cfrontend.Cstrategy <> e var
R11764:11764 compcert.cfrontend.Cstrategy <> k var
R11744:11744 compcert.cfrontend.Cstrategy <> C var
R11747:11753 compcert.cfrontend.Csyntax <> Eassign constr
R11759:11760 compcert.cfrontend.Cstrategy <> ty var
R11757:11757 compcert.cfrontend.Cstrategy <> r var
R11755:11755 compcert.cfrontend.Cstrategy <> l var
R11741:11741 compcert.cfrontend.Cstrategy <> f var
R11703:11705 Coq.Init.Logic <> :type_scope:x_'='_x not
R11701:11702 compcert.cfrontend.Cstrategy <> ty var
R11706:11711 compcert.cfrontend.Csyntax <> typeof def
R11713:11713 compcert.cfrontend.Cstrategy <> l var
R11651:11660 compcert.cfrontend.Csem <> assign_loc ind
R11689:11690 compcert.cfrontend.Cstrategy <> m' var
R11687:11687 compcert.cfrontend.Cstrategy <> t var
R11684:11685 compcert.cfrontend.Cstrategy <> v' var
R11680:11682 compcert.cfrontend.Cstrategy <> ofs var
R11678:11678 compcert.cfrontend.Cstrategy <> b var
R11676:11676 compcert.cfrontend.Cstrategy <> m var
R11666:11671 compcert.cfrontend.Csyntax <> typeof def
R11673:11673 compcert.cfrontend.Cstrategy <> l var
R11662:11663 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R11631:11633 Coq.Init.Logic <> :type_scope:x_'='_x not
R11599:11606 compcert.cfrontend.Cop <> sem_cast def
R11622:11627 compcert.cfrontend.Csyntax <> typeof def
R11629:11629 compcert.cfrontend.Cstrategy <> l var
R11611:11616 compcert.cfrontend.Csyntax <> typeof def
R11618:11618 compcert.cfrontend.Cstrategy <> r var
R11608:11608 compcert.cfrontend.Cstrategy <> v var
R11634:11637 Coq.Init.Datatypes <> Some constr
R11639:11640 compcert.cfrontend.Cstrategy <> v' var
R11563:11580 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R11588:11588 compcert.cfrontend.Cstrategy <> v var
R11586:11586 compcert.cfrontend.Cstrategy <> r var
R11584:11584 compcert.cfrontend.Cstrategy <> m var
R11582:11582 compcert.cfrontend.Cstrategy <> e var
R11523:11540 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R11550:11552 compcert.cfrontend.Cstrategy <> ofs var
R11548:11548 compcert.cfrontend.Cstrategy <> b var
R11546:11546 compcert.cfrontend.Cstrategy <> l var
R11544:11544 compcert.cfrontend.Cstrategy <> m var
R11542:11542 compcert.cfrontend.Cstrategy <> e var
R11494:11504 compcert.cfrontend.Cstrategy <> leftcontext ind
R11512:11512 compcert.cfrontend.Cstrategy <> C var
R11509:11510 compcert.cfrontend.Csem <> RV constr
R11506:11507 compcert.cfrontend.Csem <> RV constr
R12280:12284 compcert.cfrontend.Cstrategy <> estep ind
R12351:12359 compcert.cfrontend.Csem <> ExprState constr
R12384:12385 compcert.cfrontend.Cstrategy <> m' var
R12382:12382 compcert.cfrontend.Cstrategy <> e var
R12380:12380 compcert.cfrontend.Cstrategy <> k var
R12364:12364 compcert.cfrontend.Cstrategy <> C var
R12367:12370 compcert.cfrontend.Csyntax <> Eval constr
R12375:12376 compcert.cfrontend.Cstrategy <> ty var
R12372:12373 compcert.cfrontend.Cstrategy <> v4 var
R12361:12361 compcert.cfrontend.Cstrategy <> f var
R12348:12348 compcert.cfrontend.Cstrategy <> t var
R12287:12295 compcert.cfrontend.Csem <> ExprState constr
R12335:12335 compcert.cfrontend.Cstrategy <> m var
R12333:12333 compcert.cfrontend.Cstrategy <> e var
R12331:12331 compcert.cfrontend.Cstrategy <> k var
R12300:12300 compcert.cfrontend.Cstrategy <> C var
R12303:12311 compcert.cfrontend.Csyntax <> Eassignop constr
R12326:12327 compcert.cfrontend.Cstrategy <> ty var
R12320:12324 compcert.cfrontend.Cstrategy <> tyres var
R12318:12318 compcert.cfrontend.Cstrategy <> r var
R12316:12316 compcert.cfrontend.Cstrategy <> l var
R12313:12314 compcert.cfrontend.Cstrategy <> op var
R12297:12297 compcert.cfrontend.Cstrategy <> f var
R12259:12261 Coq.Init.Logic <> :type_scope:x_'='_x not
R12258:12258 compcert.cfrontend.Cstrategy <> t var
R12264:12267 compcert.common.Events <> ::x_'**'_x not
R12262:12263 compcert.cfrontend.Cstrategy <> t1 var
R12268:12269 compcert.cfrontend.Cstrategy <> t2 var
R12237:12239 Coq.Init.Logic <> :type_scope:x_'='_x not
R12235:12236 compcert.cfrontend.Cstrategy <> ty var
R12240:12245 compcert.cfrontend.Csyntax <> typeof def
R12247:12247 compcert.cfrontend.Cstrategy <> l var
R12184:12193 compcert.cfrontend.Csem <> assign_loc ind
R12223:12224 compcert.cfrontend.Cstrategy <> m' var
R12220:12221 compcert.cfrontend.Cstrategy <> t2 var
R12217:12218 compcert.cfrontend.Cstrategy <> v4 var
R12213:12215 compcert.cfrontend.Cstrategy <> ofs var
R12211:12211 compcert.cfrontend.Cstrategy <> b var
R12209:12209 compcert.cfrontend.Cstrategy <> m var
R12199:12204 compcert.cfrontend.Csyntax <> typeof def
R12206:12206 compcert.cfrontend.Cstrategy <> l var
R12195:12196 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R12164:12166 Coq.Init.Logic <> :type_scope:x_'='_x not
R12136:12143 compcert.cfrontend.Cop <> sem_cast def
R12155:12160 compcert.cfrontend.Csyntax <> typeof def
R12162:12162 compcert.cfrontend.Cstrategy <> l var
R12148:12152 compcert.cfrontend.Cstrategy <> tyres var
R12145:12146 compcert.cfrontend.Cstrategy <> v3 var
R12167:12170 Coq.Init.Datatypes <> Some constr
R12172:12173 compcert.cfrontend.Cstrategy <> v4 var
R12116:12118 Coq.Init.Logic <> :type_scope:x_'='_x not
R12063:12082 compcert.cfrontend.Cop <> sem_binary_operation def
R12115:12115 compcert.cfrontend.Cstrategy <> m var
R12105:12110 compcert.cfrontend.Csyntax <> typeof def
R12112:12112 compcert.cfrontend.Cstrategy <> r var
R12101:12102 compcert.cfrontend.Cstrategy <> v2 var
R12091:12096 compcert.cfrontend.Csyntax <> typeof def
R12098:12098 compcert.cfrontend.Cstrategy <> l var
R12087:12088 compcert.cfrontend.Cstrategy <> v1 var
R12084:12085 compcert.cfrontend.Cstrategy <> op var
R12119:12122 Coq.Init.Datatypes <> Some constr
R12124:12125 compcert.cfrontend.Cstrategy <> v3 var
R12026:12043 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R12051:12052 compcert.cfrontend.Cstrategy <> v2 var
R12049:12049 compcert.cfrontend.Cstrategy <> r var
R12047:12047 compcert.cfrontend.Cstrategy <> m var
R12045:12045 compcert.cfrontend.Cstrategy <> e var
R11979:11987 compcert.cfrontend.Csem <> deref_loc ind
R12014:12015 compcert.cfrontend.Cstrategy <> v1 var
R12011:12012 compcert.cfrontend.Cstrategy <> t1 var
R12007:12009 compcert.cfrontend.Cstrategy <> ofs var
R12005:12005 compcert.cfrontend.Cstrategy <> b var
R12003:12003 compcert.cfrontend.Cstrategy <> m var
R11993:11998 compcert.cfrontend.Csyntax <> typeof def
R12000:12000 compcert.cfrontend.Cstrategy <> l var
R11989:11990 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R11939:11956 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R11966:11968 compcert.cfrontend.Cstrategy <> ofs var
R11964:11964 compcert.cfrontend.Cstrategy <> b var
R11962:11962 compcert.cfrontend.Cstrategy <> l var
R11960:11960 compcert.cfrontend.Cstrategy <> m var
R11958:11958 compcert.cfrontend.Cstrategy <> e var
R11910:11920 compcert.cfrontend.Cstrategy <> leftcontext ind
R11928:11928 compcert.cfrontend.Cstrategy <> C var
R11925:11926 compcert.cfrontend.Csem <> RV constr
R11922:11923 compcert.cfrontend.Csem <> RV constr
R12938:12942 compcert.cfrontend.Cstrategy <> estep ind
R13008:13017 compcert.cfrontend.Csem <> Stuckstate constr
R13006:13006 compcert.cfrontend.Cstrategy <> t var
R12945:12953 compcert.cfrontend.Csem <> ExprState constr
R12993:12993 compcert.cfrontend.Cstrategy <> m var
R12991:12991 compcert.cfrontend.Cstrategy <> e var
R12989:12989 compcert.cfrontend.Cstrategy <> k var
R12958:12958 compcert.cfrontend.Cstrategy <> C var
R12961:12969 compcert.cfrontend.Csyntax <> Eassignop constr
R12984:12985 compcert.cfrontend.Cstrategy <> ty var
R12978:12982 compcert.cfrontend.Cstrategy <> tyres var
R12976:12976 compcert.cfrontend.Cstrategy <> r var
R12974:12974 compcert.cfrontend.Cstrategy <> l var
R12971:12972 compcert.cfrontend.Cstrategy <> op var
R12955:12955 compcert.cfrontend.Cstrategy <> f var
R12917:12919 Coq.Init.Logic <> :type_scope:x_'='_x not
R12915:12916 compcert.cfrontend.Cstrategy <> ty var
R12920:12925 compcert.cfrontend.Csyntax <> typeof def
R12927:12927 compcert.cfrontend.Cstrategy <> l var
R12626:12645 compcert.cfrontend.Cop <> sem_binary_operation def
R12678:12678 compcert.cfrontend.Cstrategy <> m var
R12668:12673 compcert.cfrontend.Csyntax <> typeof def
R12675:12675 compcert.cfrontend.Cstrategy <> r var
R12664:12665 compcert.cfrontend.Cstrategy <> v2 var
R12654:12659 compcert.cfrontend.Csyntax <> typeof def
R12661:12661 compcert.cfrontend.Cstrategy <> l var
R12650:12651 compcert.cfrontend.Cstrategy <> v1 var
R12647:12648 compcert.cfrontend.Cstrategy <> op var
R12693:12696 Coq.Init.Datatypes <> None constr
R12701:12704 Coq.Init.Logic <> True ind
R12714:12717 Coq.Init.Datatypes <> Some constr
R12741:12748 compcert.cfrontend.Cop <> sem_cast def
R12760:12765 compcert.cfrontend.Csyntax <> typeof def
R12767:12767 compcert.cfrontend.Cstrategy <> l var
R12753:12757 compcert.cfrontend.Cstrategy <> tyres var
R12787:12790 Coq.Init.Datatypes <> None constr
R12795:12798 Coq.Init.Logic <> True ind
R12812:12815 Coq.Init.Datatypes <> Some constr
R12837:12838 Coq.Init.Logic <> :type_scope:'~'_x not
R12880:12880 Coq.Init.Logic <> :type_scope:'~'_x not
R12839:12848 compcert.cfrontend.Csem <> assign_loc ind
R12878:12879 compcert.cfrontend.Cstrategy <> m' var
R12875:12876 compcert.cfrontend.Cstrategy <> t2 var
R12868:12870 compcert.cfrontend.Cstrategy <> ofs var
R12866:12866 compcert.cfrontend.Cstrategy <> b var
R12864:12864 compcert.cfrontend.Cstrategy <> m var
R12854:12859 compcert.cfrontend.Csyntax <> typeof def
R12861:12861 compcert.cfrontend.Cstrategy <> l var
R12850:12851 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R12583:12600 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R12608:12609 compcert.cfrontend.Cstrategy <> v2 var
R12606:12606 compcert.cfrontend.Cstrategy <> r var
R12604:12604 compcert.cfrontend.Cstrategy <> m var
R12602:12602 compcert.cfrontend.Cstrategy <> e var
R12537:12545 compcert.cfrontend.Csem <> deref_loc ind
R12571:12572 compcert.cfrontend.Cstrategy <> v1 var
R12569:12569 compcert.cfrontend.Cstrategy <> t var
R12565:12567 compcert.cfrontend.Cstrategy <> ofs var
R12563:12563 compcert.cfrontend.Cstrategy <> b var
R12561:12561 compcert.cfrontend.Cstrategy <> m var
R12551:12556 compcert.cfrontend.Csyntax <> typeof def
R12558:12558 compcert.cfrontend.Cstrategy <> l var
R12547:12548 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R12497:12514 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R12524:12526 compcert.cfrontend.Cstrategy <> ofs var
R12522:12522 compcert.cfrontend.Cstrategy <> b var
R12520:12520 compcert.cfrontend.Cstrategy <> l var
R12518:12518 compcert.cfrontend.Cstrategy <> m var
R12516:12516 compcert.cfrontend.Cstrategy <> e var
R12468:12478 compcert.cfrontend.Cstrategy <> leftcontext ind
R12486:12486 compcert.cfrontend.Cstrategy <> C var
R12483:12484 compcert.cfrontend.Csem <> RV constr
R12480:12481 compcert.cfrontend.Csem <> RV constr
R13387:13391 compcert.cfrontend.Cstrategy <> estep ind
R13450:13458 compcert.cfrontend.Csem <> ExprState constr
R13483:13484 compcert.cfrontend.Cstrategy <> m' var
R13481:13481 compcert.cfrontend.Cstrategy <> e var
R13479:13479 compcert.cfrontend.Cstrategy <> k var
R13463:13463 compcert.cfrontend.Cstrategy <> C var
R13466:13469 compcert.cfrontend.Csyntax <> Eval constr
R13474:13475 compcert.cfrontend.Cstrategy <> ty var
R13471:13472 compcert.cfrontend.Cstrategy <> v1 var
R13460:13460 compcert.cfrontend.Cstrategy <> f var
R13447:13447 compcert.cfrontend.Cstrategy <> t var
R13394:13402 compcert.cfrontend.Csem <> ExprState constr
R13434:13434 compcert.cfrontend.Cstrategy <> m var
R13432:13432 compcert.cfrontend.Cstrategy <> e var
R13430:13430 compcert.cfrontend.Cstrategy <> k var
R13407:13407 compcert.cfrontend.Cstrategy <> C var
R13410:13418 compcert.cfrontend.Csyntax <> Epostincr constr
R13425:13426 compcert.cfrontend.Cstrategy <> ty var
R13423:13423 compcert.cfrontend.Cstrategy <> l var
R13420:13421 compcert.cfrontend.Cstrategy <> id var
R13404:13404 compcert.cfrontend.Cstrategy <> f var
R13366:13368 Coq.Init.Logic <> :type_scope:x_'='_x not
R13365:13365 compcert.cfrontend.Cstrategy <> t var
R13371:13374 compcert.common.Events <> ::x_'**'_x not
R13369:13370 compcert.cfrontend.Cstrategy <> t1 var
R13375:13376 compcert.cfrontend.Cstrategy <> t2 var
R13344:13346 Coq.Init.Logic <> :type_scope:x_'='_x not
R13342:13343 compcert.cfrontend.Cstrategy <> ty var
R13347:13352 compcert.cfrontend.Csyntax <> typeof def
R13354:13354 compcert.cfrontend.Cstrategy <> l var
R13299:13308 compcert.cfrontend.Csem <> assign_loc ind
R13330:13331 compcert.cfrontend.Cstrategy <> m' var
R13327:13328 compcert.cfrontend.Cstrategy <> t2 var
R13324:13325 compcert.cfrontend.Cstrategy <> v3 var
R13320:13322 compcert.cfrontend.Cstrategy <> ofs var
R13318:13318 compcert.cfrontend.Cstrategy <> b var
R13316:13316 compcert.cfrontend.Cstrategy <> m var
R13313:13314 compcert.cfrontend.Cstrategy <> ty var
R13310:13311 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R13279:13281 Coq.Init.Logic <> :type_scope:x_'='_x not
R13246:13253 compcert.cfrontend.Cop <> sem_cast def
R13277:13278 compcert.cfrontend.Cstrategy <> ty var
R13259:13271 compcert.cfrontend.Cop <> incrdecr_type def
R13273:13274 compcert.cfrontend.Cstrategy <> ty var
R13255:13256 compcert.cfrontend.Cstrategy <> v2 var
R13282:13285 Coq.Init.Datatypes <> Some constr
R13287:13288 compcert.cfrontend.Cstrategy <> v3 var
R13226:13228 Coq.Init.Logic <> :type_scope:x_'='_x not
R13205:13216 compcert.cfrontend.Cop <> sem_incrdecr def
R13224:13225 compcert.cfrontend.Cstrategy <> ty var
R13221:13222 compcert.cfrontend.Cstrategy <> v1 var
R13218:13219 compcert.cfrontend.Cstrategy <> id var
R13229:13232 Coq.Init.Datatypes <> Some constr
R13234:13235 compcert.cfrontend.Cstrategy <> v2 var
R13166:13174 compcert.cfrontend.Csem <> deref_loc ind
R13193:13194 compcert.cfrontend.Cstrategy <> v1 var
R13190:13191 compcert.cfrontend.Cstrategy <> t1 var
R13186:13188 compcert.cfrontend.Cstrategy <> ofs var
R13184:13184 compcert.cfrontend.Cstrategy <> b var
R13182:13182 compcert.cfrontend.Cstrategy <> m var
R13179:13180 compcert.cfrontend.Cstrategy <> ty var
R13176:13177 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R13126:13143 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R13153:13155 compcert.cfrontend.Cstrategy <> ofs var
R13151:13151 compcert.cfrontend.Cstrategy <> b var
R13149:13149 compcert.cfrontend.Cstrategy <> l var
R13147:13147 compcert.cfrontend.Cstrategy <> m var
R13145:13145 compcert.cfrontend.Cstrategy <> e var
R13097:13107 compcert.cfrontend.Cstrategy <> leftcontext ind
R13115:13115 compcert.cfrontend.Cstrategy <> C var
R13112:13113 compcert.cfrontend.Csem <> RV constr
R13109:13110 compcert.cfrontend.Csem <> RV constr
R13954:13958 compcert.cfrontend.Cstrategy <> estep ind
R14016:14025 compcert.cfrontend.Csem <> Stuckstate constr
R14014:14014 compcert.cfrontend.Cstrategy <> t var
R13961:13969 compcert.cfrontend.Csem <> ExprState constr
R14001:14001 compcert.cfrontend.Cstrategy <> m var
R13999:13999 compcert.cfrontend.Cstrategy <> e var
R13997:13997 compcert.cfrontend.Cstrategy <> k var
R13974:13974 compcert.cfrontend.Cstrategy <> C var
R13977:13985 compcert.cfrontend.Csyntax <> Epostincr constr
R13992:13993 compcert.cfrontend.Cstrategy <> ty var
R13990:13990 compcert.cfrontend.Cstrategy <> l var
R13987:13988 compcert.cfrontend.Cstrategy <> id var
R13971:13971 compcert.cfrontend.Cstrategy <> f var
R13933:13935 Coq.Init.Logic <> :type_scope:x_'='_x not
R13931:13932 compcert.cfrontend.Cstrategy <> ty var
R13936:13941 compcert.cfrontend.Csyntax <> typeof def
R13943:13943 compcert.cfrontend.Cstrategy <> l var
R13669:13680 compcert.cfrontend.Cop <> sem_incrdecr def
R13688:13689 compcert.cfrontend.Cstrategy <> ty var
R13685:13686 compcert.cfrontend.Cstrategy <> v1 var
R13682:13683 compcert.cfrontend.Cstrategy <> id var
R13704:13707 Coq.Init.Datatypes <> None constr
R13712:13715 Coq.Init.Logic <> True ind
R13725:13728 Coq.Init.Datatypes <> Some constr
R13752:13759 compcert.cfrontend.Cop <> sem_cast def
R13783:13784 compcert.cfrontend.Cstrategy <> ty var
R13765:13777 compcert.cfrontend.Cop <> incrdecr_type def
R13779:13780 compcert.cfrontend.Cstrategy <> ty var
R13803:13806 Coq.Init.Datatypes <> None constr
R13811:13814 Coq.Init.Logic <> True ind
R13828:13831 Coq.Init.Datatypes <> Some constr
R13853:13854 Coq.Init.Logic <> :type_scope:'~'_x not
R13896:13896 Coq.Init.Logic <> :type_scope:'~'_x not
R13855:13864 compcert.cfrontend.Csem <> assign_loc ind
R13894:13895 compcert.cfrontend.Cstrategy <> m' var
R13891:13892 compcert.cfrontend.Cstrategy <> t2 var
R13884:13886 compcert.cfrontend.Cstrategy <> ofs var
R13882:13882 compcert.cfrontend.Cstrategy <> b var
R13880:13880 compcert.cfrontend.Cstrategy <> m var
R13870:13875 compcert.cfrontend.Csyntax <> typeof def
R13877:13877 compcert.cfrontend.Cstrategy <> l var
R13866:13867 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R13625:13633 compcert.cfrontend.Csem <> deref_loc ind
R13651:13652 compcert.cfrontend.Cstrategy <> v1 var
R13649:13649 compcert.cfrontend.Cstrategy <> t var
R13645:13647 compcert.cfrontend.Cstrategy <> ofs var
R13643:13643 compcert.cfrontend.Cstrategy <> b var
R13641:13641 compcert.cfrontend.Cstrategy <> m var
R13638:13639 compcert.cfrontend.Cstrategy <> ty var
R13635:13636 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R13585:13602 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R13612:13614 compcert.cfrontend.Cstrategy <> ofs var
R13610:13610 compcert.cfrontend.Cstrategy <> b var
R13608:13608 compcert.cfrontend.Cstrategy <> l var
R13606:13606 compcert.cfrontend.Cstrategy <> m var
R13604:13604 compcert.cfrontend.Cstrategy <> e var
R13556:13566 compcert.cfrontend.Cstrategy <> leftcontext ind
R13574:13574 compcert.cfrontend.Cstrategy <> C var
R13571:13572 compcert.cfrontend.Csem <> RV constr
R13568:13569 compcert.cfrontend.Csem <> RV constr
R14169:14173 compcert.cfrontend.Cstrategy <> estep ind
R14230:14238 compcert.cfrontend.Csem <> ExprState constr
R14253:14253 compcert.cfrontend.Cstrategy <> m var
R14251:14251 compcert.cfrontend.Cstrategy <> e var
R14249:14249 compcert.cfrontend.Cstrategy <> k var
R14243:14243 compcert.cfrontend.Cstrategy <> C var
R14245:14246 compcert.cfrontend.Cstrategy <> r2 var
R14240:14240 compcert.cfrontend.Cstrategy <> f var
R14226:14227 compcert.common.Events <> E0 def
R14176:14184 compcert.cfrontend.Csem <> ExprState constr
R14214:14214 compcert.cfrontend.Cstrategy <> m var
R14212:14212 compcert.cfrontend.Cstrategy <> e var
R14210:14210 compcert.cfrontend.Cstrategy <> k var
R14189:14189 compcert.cfrontend.Cstrategy <> C var
R14192:14197 compcert.cfrontend.Csyntax <> Ecomma constr
R14205:14206 compcert.cfrontend.Cstrategy <> ty var
R14202:14203 compcert.cfrontend.Cstrategy <> r2 var
R14199:14200 compcert.cfrontend.Cstrategy <> r1 var
R14186:14186 compcert.cfrontend.Cstrategy <> f var
R14147:14149 Coq.Init.Logic <> :type_scope:x_'='_x not
R14145:14146 compcert.cfrontend.Cstrategy <> ty var
R14150:14155 compcert.cfrontend.Csyntax <> typeof def
R14157:14158 compcert.cfrontend.Cstrategy <> r2 var
R14108:14125 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R14134:14134 compcert.cfrontend.Cstrategy <> v var
R14131:14132 compcert.cfrontend.Cstrategy <> r1 var
R14129:14129 compcert.cfrontend.Cstrategy <> m var
R14127:14127 compcert.cfrontend.Cstrategy <> e var
R14079:14089 compcert.cfrontend.Cstrategy <> leftcontext ind
R14097:14097 compcert.cfrontend.Cstrategy <> C var
R14094:14095 compcert.cfrontend.Csem <> RV constr
R14091:14092 compcert.cfrontend.Csem <> RV constr
R14417:14421 compcert.cfrontend.Cstrategy <> estep ind
R14474:14482 compcert.cfrontend.Csem <> ExprState constr
R14506:14506 compcert.cfrontend.Cstrategy <> m var
R14504:14504 compcert.cfrontend.Cstrategy <> e var
R14502:14502 compcert.cfrontend.Cstrategy <> k var
R14487:14487 compcert.cfrontend.Cstrategy <> C var
R14490:14493 compcert.cfrontend.Csyntax <> Eval constr
R14497:14498 compcert.cfrontend.Cstrategy <> ty var
R14495:14495 compcert.cfrontend.Cstrategy <> v var
R14484:14484 compcert.cfrontend.Cstrategy <> f var
R14470:14471 compcert.common.Events <> E0 def
R14424:14432 compcert.cfrontend.Csem <> ExprState constr
R14458:14458 compcert.cfrontend.Cstrategy <> m var
R14456:14456 compcert.cfrontend.Cstrategy <> e var
R14454:14454 compcert.cfrontend.Cstrategy <> k var
R14437:14437 compcert.cfrontend.Cstrategy <> C var
R14440:14445 compcert.cfrontend.Csyntax <> Eparen constr
R14449:14450 compcert.cfrontend.Cstrategy <> ty var
R14447:14447 compcert.cfrontend.Cstrategy <> r var
R14434:14434 compcert.cfrontend.Cstrategy <> f var
R14398:14400 Coq.Init.Logic <> :type_scope:x_'='_x not
R14373:14380 compcert.cfrontend.Cop <> sem_cast def
R14396:14397 compcert.cfrontend.Cstrategy <> ty var
R14386:14391 compcert.cfrontend.Csyntax <> typeof def
R14393:14393 compcert.cfrontend.Cstrategy <> r var
R14382:14383 compcert.cfrontend.Cstrategy <> v1 var
R14401:14404 Coq.Init.Datatypes <> Some constr
R14406:14406 compcert.cfrontend.Cstrategy <> v var
R14336:14353 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R14361:14362 compcert.cfrontend.Cstrategy <> v1 var
R14359:14359 compcert.cfrontend.Cstrategy <> r var
R14357:14357 compcert.cfrontend.Cstrategy <> m var
R14355:14355 compcert.cfrontend.Cstrategy <> e var
R14307:14317 compcert.cfrontend.Cstrategy <> leftcontext ind
R14325:14325 compcert.cfrontend.Cstrategy <> C var
R14322:14323 compcert.cfrontend.Csem <> RV constr
R14319:14320 compcert.cfrontend.Csem <> RV constr
R14866:14870 compcert.cfrontend.Cstrategy <> estep ind
R14929:14937 compcert.cfrontend.Csem <> Callstate constr
R14967:14967 compcert.cfrontend.Cstrategy <> m var
R14949:14953 compcert.cfrontend.Csem <> Kcall constr
R14964:14964 compcert.cfrontend.Cstrategy <> k var
R14961:14962 compcert.cfrontend.Cstrategy <> ty var
R14959:14959 compcert.cfrontend.Cstrategy <> C var
R14957:14957 compcert.cfrontend.Cstrategy <> e var
R14955:14955 compcert.cfrontend.Cstrategy <> f var
R14942:14946 compcert.cfrontend.Cstrategy <> vargs var
R14939:14940 compcert.cfrontend.Cstrategy <> fd var
R14925:14926 compcert.common.Events <> E0 def
R14873:14881 compcert.cfrontend.Csem <> ExprState constr
R14913:14913 compcert.cfrontend.Cstrategy <> m var
R14911:14911 compcert.cfrontend.Cstrategy <> e var
R14909:14909 compcert.cfrontend.Cstrategy <> k var
R14886:14886 compcert.cfrontend.Cstrategy <> C var
R14889:14893 compcert.cfrontend.Csyntax <> Ecall constr
R14904:14905 compcert.cfrontend.Cstrategy <> ty var
R14898:14902 compcert.cfrontend.Cstrategy <> rargs var
R14895:14896 compcert.cfrontend.Cstrategy <> rf var
R14883:14883 compcert.cfrontend.Cstrategy <> f var
R14827:14829 Coq.Init.Logic <> :type_scope:x_'='_x not
R14810:14823 compcert.cfrontend.Csyntax <> type_of_fundef def
R14825:14826 compcert.cfrontend.Cstrategy <> fd var
R14830:14838 compcert.cfrontend.Ctypes <> Tfunction constr
R14851:14855 compcert.cfrontend.Cstrategy <> cconv var
R14846:14849 compcert.cfrontend.Cstrategy <> tres var
R14840:14844 compcert.cfrontend.Cstrategy <> targs var
R14790:14792 Coq.Init.Logic <> :type_scope:x_'='_x not
R14769:14783 compcert.common.Globalenvs Genv find_funct def
R14788:14789 compcert.cfrontend.Cstrategy <> vf var
R14785:14786 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R14793:14796 Coq.Init.Datatypes <> Some constr
R14798:14799 compcert.cfrontend.Cstrategy <> fd var
R14721:14736 compcert.cfrontend.Cstrategy <> eval_simple_list ind
R14754:14758 compcert.cfrontend.Cstrategy <> vargs var
R14748:14752 compcert.cfrontend.Cstrategy <> targs var
R14742:14746 compcert.cfrontend.Cstrategy <> rargs var
R14740:14740 compcert.cfrontend.Cstrategy <> m var
R14738:14738 compcert.cfrontend.Cstrategy <> e var
R14683:14700 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R14709:14710 compcert.cfrontend.Cstrategy <> vf var
R14706:14707 compcert.cfrontend.Cstrategy <> rf var
R14704:14704 compcert.cfrontend.Cstrategy <> m var
R14702:14702 compcert.cfrontend.Cstrategy <> e var
R14643:14645 Coq.Init.Logic <> :type_scope:x_'='_x not
R14619:14630 compcert.cfrontend.Cop <> classify_fun def
R14633:14638 compcert.cfrontend.Csyntax <> typeof def
R14640:14641 compcert.cfrontend.Cstrategy <> rf var
R14646:14655 compcert.cfrontend.Cop <> fun_case_f constr
R14668:14672 compcert.cfrontend.Cstrategy <> cconv var
R14663:14666 compcert.cfrontend.Cstrategy <> tres var
R14657:14661 compcert.cfrontend.Cstrategy <> targs var
R14590:14600 compcert.cfrontend.Cstrategy <> leftcontext ind
R14608:14608 compcert.cfrontend.Cstrategy <> C var
R14605:14606 compcert.cfrontend.Csem <> RV constr
R14602:14603 compcert.cfrontend.Csem <> RV constr
R15173:15177 compcert.cfrontend.Cstrategy <> estep ind
R15246:15254 compcert.cfrontend.Csem <> ExprState constr
R15281:15282 compcert.cfrontend.Cstrategy <> m' var
R15279:15279 compcert.cfrontend.Cstrategy <> e var
R15277:15277 compcert.cfrontend.Cstrategy <> k var
R15259:15259 compcert.cfrontend.Cstrategy <> C var
R15262:15265 compcert.cfrontend.Csyntax <> Eval constr
R15272:15273 compcert.cfrontend.Cstrategy <> ty var
R15267:15270 compcert.cfrontend.Cstrategy <> vres var
R15256:15256 compcert.cfrontend.Cstrategy <> f var
R15243:15243 compcert.cfrontend.Cstrategy <> t var
R15180:15188 compcert.cfrontend.Csem <> ExprState constr
R15230:15230 compcert.cfrontend.Cstrategy <> m var
R15228:15228 compcert.cfrontend.Cstrategy <> e var
R15226:15226 compcert.cfrontend.Cstrategy <> k var
R15193:15193 compcert.cfrontend.Cstrategy <> C var
R15196:15203 compcert.cfrontend.Csyntax <> Ebuiltin constr
R15221:15222 compcert.cfrontend.Cstrategy <> ty var
R15215:15219 compcert.cfrontend.Cstrategy <> rargs var
R15208:15213 compcert.cfrontend.Cstrategy <> tyargs var
R15205:15206 compcert.cfrontend.Cstrategy <> ef var
R15190:15190 compcert.cfrontend.Cstrategy <> f var
R15126:15138 compcert.common.Events <> external_call def
R15161:15162 compcert.cfrontend.Cstrategy <> m' var
R15156:15159 compcert.cfrontend.Cstrategy <> vres var
R15154:15154 compcert.cfrontend.Cstrategy <> t var
R15152:15152 compcert.cfrontend.Cstrategy <> m var
R15146:15150 compcert.cfrontend.Cstrategy <> vargs var
R15143:15144 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R15140:15141 compcert.cfrontend.Cstrategy <> ef var
R15077:15092 compcert.cfrontend.Cstrategy <> eval_simple_list ind
R15111:15115 compcert.cfrontend.Cstrategy <> vargs var
R15104:15109 compcert.cfrontend.Cstrategy <> tyargs var
R15098:15102 compcert.cfrontend.Cstrategy <> rargs var
R15096:15096 compcert.cfrontend.Cstrategy <> m var
R15094:15094 compcert.cfrontend.Cstrategy <> e var
R15048:15058 compcert.cfrontend.Cstrategy <> leftcontext ind
R15066:15066 compcert.cfrontend.Cstrategy <> C var
R15063:15064 compcert.cfrontend.Csem <> RV constr
R15060:15061 compcert.cfrontend.Csem <> RV constr
def 15298:15301 <> step
R15307:15311 compcert.cfrontend.Csem <> state ind
R15318:15322 compcert.common.Events <> trace def
R15330:15334 compcert.cfrontend.Csem <> state ind
R15361:15364 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15349:15353 compcert.cfrontend.Cstrategy <> estep ind
R15359:15360 compcert.cfrontend.Cstrategy <> S' var
R15357:15357 compcert.cfrontend.Cstrategy <> t var
R15355:15355 compcert.cfrontend.Cstrategy <> S var
R15365:15369 compcert.cfrontend.Csem <> sstep ind
R15378:15379 compcert.cfrontend.Cstrategy <> S' var
R15376:15376 compcert.cfrontend.Cstrategy <> t var
R15374:15374 compcert.cfrontend.Cstrategy <> S var
R15371:15372 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
prf 15420:15434 <> context_compose
prf 15553:15571 <> contextlist_compose
R15514:15520 compcert.cfrontend.Csem <> context ind
R15538:15539 compcert.cfrontend.Cstrategy <> C2 var
R15541:15542 compcert.cfrontend.Cstrategy <> C1 var
R15544:15544 compcert.cfrontend.Cstrategy <> x var
R15525:15526 compcert.cfrontend.Cstrategy <> k3 var
R15522:15523 compcert.cfrontend.Cstrategy <> k1 var
R15492:15498 compcert.cfrontend.Csem <> context ind
R15506:15507 compcert.cfrontend.Cstrategy <> C1 var
R15503:15504 compcert.cfrontend.Cstrategy <> k2 var
R15500:15501 compcert.cfrontend.Cstrategy <> k1 var
R15456:15462 compcert.cfrontend.Csem <> context ind
R15470:15471 compcert.cfrontend.Cstrategy <> C2 var
R15467:15468 compcert.cfrontend.Cstrategy <> k3 var
R15464:15465 compcert.cfrontend.Cstrategy <> k2 var
R15649:15659 compcert.cfrontend.Csem <> contextlist ind
R15674:15675 compcert.cfrontend.Cstrategy <> C2 var
R15677:15678 compcert.cfrontend.Cstrategy <> C1 var
R15680:15680 compcert.cfrontend.Cstrategy <> x var
R15661:15662 compcert.cfrontend.Cstrategy <> k1 var
R15627:15633 compcert.cfrontend.Csem <> context ind
R15641:15642 compcert.cfrontend.Cstrategy <> C1 var
R15638:15639 compcert.cfrontend.Cstrategy <> k2 var
R15635:15636 compcert.cfrontend.Cstrategy <> k1 var
R15590:15600 compcert.cfrontend.Csem <> contextlist ind
R15605:15606 compcert.cfrontend.Cstrategy <> C2 var
R15602:15603 compcert.cfrontend.Cstrategy <> k2 var
R15764:15764 compcert.cfrontend.Cstrategy <> x var
R15764:15764 compcert.cfrontend.Cstrategy <> x var
R15788:15801 compcert.lib.Axioms <> extensionality thm
R15788:15801 compcert.lib.Axioms <> extensionality thm
R15877:15883 compcert.cfrontend.Cstrategy <> context ind
R15885:15895 compcert.cfrontend.Cstrategy <> contextlist ind
R15911:15925 compcert.cfrontend.Cstrategy <> context_compose thm
R15927:15945 compcert.cfrontend.Cstrategy <> contextlist_compose thm
def 16115:16118 <> safe
R16124:16133 compcert.cfrontend.Csem <> state ind
R16190:16190 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16217:16222 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16266:16266 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16191:16197 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16199:16200 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16201:16211 compcert.cfrontend.Csem <> final_state ind
R16216:16216 compcert.cfrontend.Cstrategy <> r var
R16213:16214 compcert.cfrontend.Cstrategy <> s' var
R16223:16229 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16231:16232 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16233:16239 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16243:16244 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16245:16253 compcert.cfrontend.Csem <> step def
R16263:16265 compcert.cfrontend.Cstrategy <> s'' var
R16261:16261 compcert.cfrontend.Cstrategy <> t var
R16258:16259 compcert.cfrontend.Cstrategy <> s' var
R16255:16256 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R16159:16162 compcert.common.Smallstep <> star ind
R16182:16183 compcert.cfrontend.Cstrategy <> s' var
R16179:16180 compcert.common.Events <> E0 def
R16177:16177 compcert.cfrontend.Cstrategy <> s var
R16174:16175 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R16164:16172 compcert.cfrontend.Csem <> step def
prf 16276:16285 <> safe_steps
R16344:16347 compcert.cfrontend.Cstrategy <> safe def
R16349:16350 compcert.cfrontend.Cstrategy <> s' var
R16315:16318 compcert.common.Smallstep <> star ind
R16338:16339 compcert.cfrontend.Cstrategy <> s' var
R16335:16336 compcert.common.Events <> E0 def
R16333:16333 compcert.cfrontend.Cstrategy <> s var
R16330:16331 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R16320:16328 compcert.cfrontend.Csem <> step def
R16305:16308 compcert.cfrontend.Cstrategy <> safe def
R16310:16310 compcert.cfrontend.Cstrategy <> s var
R16403:16412 compcert.common.Smallstep <> star_trans thm
R16403:16412 compcert.common.Smallstep <> star_trans thm
prf 16435:16443 <> star_safe
R16554:16557 compcert.common.Smallstep <> star ind
R16577:16578 compcert.cfrontend.Cstrategy <> s3 var
R16575:16575 compcert.cfrontend.Cstrategy <> t var
R16572:16573 compcert.cfrontend.Cstrategy <> s1 var
R16569:16570 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R16559:16567 compcert.cfrontend.Csem <> step def
R16522:16525 compcert.common.Smallstep <> star ind
R16545:16546 compcert.cfrontend.Cstrategy <> s3 var
R16543:16543 compcert.cfrontend.Cstrategy <> t var
R16540:16541 compcert.cfrontend.Cstrategy <> s2 var
R16537:16538 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R16527:16535 compcert.cfrontend.Csem <> step def
R16511:16514 compcert.cfrontend.Cstrategy <> safe def
R16516:16517 compcert.cfrontend.Cstrategy <> s2 var
R16480:16483 compcert.common.Smallstep <> star ind
R16504:16505 compcert.cfrontend.Cstrategy <> s2 var
R16501:16502 compcert.common.Events <> E0 def
R16498:16499 compcert.cfrontend.Cstrategy <> s1 var
R16495:16496 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R16485:16493 compcert.cfrontend.Csem <> step def
R16469:16472 compcert.cfrontend.Cstrategy <> safe def
R16474:16475 compcert.cfrontend.Cstrategy <> s1 var
R16605:16614 compcert.common.Smallstep <> star_trans thm
R16605:16614 compcert.common.Smallstep <> star_trans thm
R16641:16650 compcert.cfrontend.Cstrategy <> safe_steps thm
R16641:16650 compcert.cfrontend.Cstrategy <> safe_steps thm
prf 16678:16686 <> plus_safe
R16797:16800 compcert.common.Smallstep <> plus ind
R16820:16821 compcert.cfrontend.Cstrategy <> s3 var
R16818:16818 compcert.cfrontend.Cstrategy <> t var
R16815:16816 compcert.cfrontend.Cstrategy <> s1 var
R16812:16813 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R16802:16810 compcert.cfrontend.Csem <> step def
R16765:16768 compcert.common.Smallstep <> plus ind
R16788:16789 compcert.cfrontend.Cstrategy <> s3 var
R16786:16786 compcert.cfrontend.Cstrategy <> t var
R16783:16784 compcert.cfrontend.Cstrategy <> s2 var
R16780:16781 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R16770:16778 compcert.cfrontend.Csem <> step def
R16754:16757 compcert.cfrontend.Cstrategy <> safe def
R16759:16760 compcert.cfrontend.Cstrategy <> s2 var
R16723:16726 compcert.common.Smallstep <> star ind
R16747:16748 compcert.cfrontend.Cstrategy <> s2 var
R16744:16745 compcert.common.Events <> E0 def
R16741:16742 compcert.cfrontend.Cstrategy <> s1 var
R16738:16739 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R16728:16736 compcert.cfrontend.Csem <> step def
R16712:16715 compcert.cfrontend.Cstrategy <> safe def
R16717:16718 compcert.cfrontend.Cstrategy <> s1 var
R16848:16862 compcert.common.Smallstep <> star_plus_trans thm
R16848:16862 compcert.common.Smallstep <> star_plus_trans thm
R16889:16898 compcert.cfrontend.Cstrategy <> safe_steps thm
R16889:16898 compcert.cfrontend.Cstrategy <> safe_steps thm
R16935:16943 Coq.Logic.Classical <> <> lib
prf 16954:16966 <> safe_imm_safe
R17051:17058 compcert.cfrontend.Csem <> imm_safe ind
R17069:17069 compcert.cfrontend.Cstrategy <> m var
R17067:17067 compcert.cfrontend.Cstrategy <> a var
R17065:17065 compcert.cfrontend.Cstrategy <> K var
R17063:17063 compcert.cfrontend.Cstrategy <> e var
R17060:17061 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R17031:17037 compcert.cfrontend.Csem <> context ind
R17044:17044 compcert.cfrontend.Cstrategy <> C var
R17041:17042 compcert.cfrontend.Csem <> RV constr
R17039:17039 compcert.cfrontend.Cstrategy <> K var
R16995:16998 compcert.cfrontend.Cstrategy <> safe def
R17001:17009 compcert.cfrontend.Csem <> ExprState constr
R17023:17023 compcert.cfrontend.Cstrategy <> m var
R17021:17021 compcert.cfrontend.Cstrategy <> e var
R17019:17019 compcert.cfrontend.Cstrategy <> k var
R17014:17014 compcert.cfrontend.Cstrategy <> C var
R17016:17016 compcert.cfrontend.Cstrategy <> a var
R17011:17011 compcert.cfrontend.Cstrategy <> f var
R17099:17105 Coq.Logic.Classical_Prop <> classic prfax
R17108:17115 compcert.cfrontend.Csem <> imm_safe ind
R17117:17118 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R17099:17105 Coq.Logic.Classical_Prop <> classic prfax
R17108:17115 compcert.cfrontend.Csem <> imm_safe ind
R17117:17118 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R17151:17160 compcert.cfrontend.Csem <> Stuckstate constr
R17151:17160 compcert.cfrontend.Csem <> Stuckstate constr
R17173:17180 compcert.common.Smallstep <> star_one thm
R17173:17180 compcert.common.Smallstep <> star_one thm
def 17392:17400 <> expr_kind
R17406:17409 compcert.cfrontend.Csyntax <> expr ind
R17414:17417 compcert.cfrontend.Csem <> kind ind
R17430:17430 compcert.cfrontend.Cstrategy <> a var
R17441:17444 compcert.cfrontend.Csyntax <> Eloc constr
R17455:17456 compcert.cfrontend.Csem <> LV constr
R17462:17465 compcert.cfrontend.Csyntax <> Evar constr
R17474:17475 compcert.cfrontend.Csem <> LV constr
R17481:17486 compcert.cfrontend.Csyntax <> Ederef constr
R17495:17496 compcert.cfrontend.Csem <> LV constr
R17502:17507 compcert.cfrontend.Csyntax <> Efield constr
R17518:17519 compcert.cfrontend.Csem <> LV constr
R17530:17531 compcert.cfrontend.Csem <> RV constr
prf 17547:17555 <> lred_kind
R17614:17616 Coq.Init.Logic <> :type_scope:x_'='_x not
R17603:17611 compcert.cfrontend.Cstrategy <> expr_kind def
R17613:17613 compcert.cfrontend.Cstrategy <> a var
R17617:17618 compcert.cfrontend.Csem <> LV constr
R17580:17583 compcert.cfrontend.Csem <> lred ind
R17597:17598 compcert.cfrontend.Cstrategy <> m' var
R17594:17595 compcert.cfrontend.Cstrategy <> a' var
R17592:17592 compcert.cfrontend.Cstrategy <> m var
R17590:17590 compcert.cfrontend.Cstrategy <> a var
R17588:17588 compcert.cfrontend.Cstrategy <> e var
R17585:17586 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
prf 17661:17669 <> rred_kind
R17728:17730 Coq.Init.Logic <> :type_scope:x_'='_x not
R17717:17725 compcert.cfrontend.Cstrategy <> expr_kind def
R17727:17727 compcert.cfrontend.Cstrategy <> a var
R17731:17732 compcert.cfrontend.Csem <> RV constr
R17694:17697 compcert.cfrontend.Csem <> rred ind
R17711:17712 compcert.cfrontend.Cstrategy <> m' var
R17708:17709 compcert.cfrontend.Cstrategy <> a' var
R17706:17706 compcert.cfrontend.Cstrategy <> t var
R17704:17704 compcert.cfrontend.Cstrategy <> m var
R17702:17702 compcert.cfrontend.Cstrategy <> a var
R17699:17700 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
prf 17775:17786 <> callred_kind
R17850:17852 Coq.Init.Logic <> :type_scope:x_'='_x not
R17839:17847 compcert.cfrontend.Cstrategy <> expr_kind def
R17849:17849 compcert.cfrontend.Cstrategy <> a var
R17853:17854 compcert.cfrontend.Csem <> RV constr
R17812:17818 compcert.cfrontend.Csem <> callred ind
R17833:17834 compcert.cfrontend.Cstrategy <> ty var
R17828:17831 compcert.cfrontend.Cstrategy <> args var
R17825:17826 compcert.cfrontend.Cstrategy <> fd var
R17823:17823 compcert.cfrontend.Cstrategy <> a var
R17820:17821 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
prf 17897:17908 <> context_kind
R17991:17993 Coq.Init.Logic <> :type_scope:x_'='_x not
R17976:17984 compcert.cfrontend.Cstrategy <> expr_kind def
R17987:17987 compcert.cfrontend.Cstrategy <> C var
R17989:17989 compcert.cfrontend.Cstrategy <> a var
R17994:17995 compcert.cfrontend.Cstrategy <> to var
R17965:17967 Coq.Init.Logic <> :type_scope:x_'='_x not
R17954:17962 compcert.cfrontend.Cstrategy <> expr_kind def
R17964:17964 compcert.cfrontend.Cstrategy <> a var
R17968:17971 compcert.cfrontend.Cstrategy <> from var
R17933:17939 compcert.cfrontend.Csem <> context ind
R17949:17949 compcert.cfrontend.Cstrategy <> C var
R17946:17947 compcert.cfrontend.Cstrategy <> to var
R17941:17944 compcert.cfrontend.Cstrategy <> from var
prf 18053:18065 <> imm_safe_kind
R18120:18122 Coq.Init.Logic <> :type_scope:x_'='_x not
R18109:18117 compcert.cfrontend.Cstrategy <> expr_kind def
R18119:18119 compcert.cfrontend.Cstrategy <> a var
R18123:18123 compcert.cfrontend.Cstrategy <> k var
R18086:18093 compcert.cfrontend.Csem <> imm_safe ind
R18104:18104 compcert.cfrontend.Cstrategy <> m var
R18102:18102 compcert.cfrontend.Cstrategy <> a var
R18100:18100 compcert.cfrontend.Cstrategy <> k var
R18098:18098 compcert.cfrontend.Cstrategy <> e var
R18095:18096 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R18173:18184 compcert.cfrontend.Cstrategy <> context_kind thm
R18173:18184 compcert.cfrontend.Cstrategy <> context_kind thm
R18201:18209 compcert.cfrontend.Cstrategy <> lred_kind thm
R18201:18209 compcert.cfrontend.Cstrategy <> lred_kind thm
R18228:18239 compcert.cfrontend.Cstrategy <> context_kind thm
R18228:18239 compcert.cfrontend.Cstrategy <> context_kind thm
R18256:18264 compcert.cfrontend.Cstrategy <> rred_kind thm
R18256:18264 compcert.cfrontend.Cstrategy <> rred_kind thm
R18283:18294 compcert.cfrontend.Cstrategy <> context_kind thm
R18283:18294 compcert.cfrontend.Cstrategy <> context_kind thm
R18311:18322 compcert.cfrontend.Cstrategy <> callred_kind thm
R18311:18322 compcert.cfrontend.Cstrategy <> callred_kind thm
prf 18344:18357 <> safe_expr_kind
R18459:18461 Coq.Init.Logic <> :type_scope:x_'='_x not
R18448:18456 compcert.cfrontend.Cstrategy <> expr_kind def
R18458:18458 compcert.cfrontend.Cstrategy <> a var
R18462:18465 compcert.cfrontend.Cstrategy <> from var
R18412:18415 compcert.cfrontend.Cstrategy <> safe def
R18418:18426 compcert.cfrontend.Csem <> ExprState constr
R18440:18440 compcert.cfrontend.Cstrategy <> m var
R18438:18438 compcert.cfrontend.Cstrategy <> e var
R18436:18436 compcert.cfrontend.Cstrategy <> k var
R18431:18431 compcert.cfrontend.Cstrategy <> C var
R18433:18433 compcert.cfrontend.Cstrategy <> a var
R18428:18428 compcert.cfrontend.Cstrategy <> f var
R18389:18395 compcert.cfrontend.Csem <> context ind
R18405:18405 compcert.cfrontend.Cstrategy <> C var
R18402:18403 compcert.cfrontend.Csem <> RV constr
R18397:18400 compcert.cfrontend.Cstrategy <> from var
R18492:18504 compcert.cfrontend.Cstrategy <> imm_safe_kind thm
R18492:18504 compcert.cfrontend.Cstrategy <> imm_safe_kind thm
R18514:18526 compcert.cfrontend.Cstrategy <> safe_imm_safe thm
R18514:18526 compcert.cfrontend.Cstrategy <> safe_imm_safe thm
sec 18619:18634 STRATEGY INVERSION_LEMMAS
var 18647:18647 STRATEGY.INVERSION_LEMMAS e
R18650:18652 compcert.cfrontend.Csem <> env def
def 18665:18683 <> exprlist_all_values
R18690:18697 compcert.cfrontend.Csyntax <> exprlist ind
R18718:18719 compcert.cfrontend.Cstrategy <> rl var
R18730:18733 compcert.cfrontend.Csyntax <> Enil constr
R18738:18741 Coq.Init.Logic <> True ind
R18747:18751 compcert.cfrontend.Csyntax <> Econs constr
R18754:18757 compcert.cfrontend.Csyntax <> Eval constr
R18772:18790 compcert.cfrontend.Cstrategy <> exprlist_all_values def
R18800:18804 compcert.cfrontend.Csyntax <> Econs constr
R18813:18817 Coq.Init.Logic <> False ind
def 18838:18853 <> invert_expr_prop
R18859:18862 compcert.cfrontend.Csyntax <> expr ind
R18869:18871 compcert.common.Memory <> mem syndef
R18892:18892 compcert.cfrontend.Cstrategy <> a var
R18903:18906 compcert.cfrontend.Csyntax <> Eloc constr
R18920:18924 Coq.Init.Logic <> False ind
R18930:18933 compcert.cfrontend.Csyntax <> Evar constr
R18949:18955 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18957:18964 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18982:18992 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19037:19037 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18968:18970 Coq.Init.Logic <> :type_scope:x_'='_x not
R18966:18966 compcert.lib.Maps <> ::x_'!'_x not
R18965:18965 compcert.cfrontend.Cstrategy <> STRATEGY.INVERSION_LEMMAS.e var
R18971:18974 Coq.Init.Datatypes <> Some constr
R18975:18975 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18977:18978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18981:18981 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18976:18976 compcert.cfrontend.Cstrategy <> b var
R19003:19006 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18996:18998 Coq.Init.Logic <> :type_scope:x_'='_x not
R18994:18994 compcert.lib.Maps <> ::x_'!'_x not
R18993:18993 compcert.cfrontend.Cstrategy <> STRATEGY.INVERSION_LEMMAS.e var
R18999:19002 Coq.Init.Datatypes <> None constr
R19028:19030 Coq.Init.Logic <> :type_scope:x_'='_x not
R19007:19022 compcert.common.Globalenvs Genv find_symbol def
R19024:19025 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R19031:19034 Coq.Init.Datatypes <> Some constr
R19036:19036 compcert.cfrontend.Cstrategy <> b var
R19043:19048 compcert.cfrontend.Csyntax <> Ederef constr
R19051:19054 compcert.cfrontend.Csyntax <> Eval constr
R19075:19081 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19083:19084 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19085:19091 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19095:19096 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19098:19100 Coq.Init.Logic <> :type_scope:x_'='_x not
R19101:19104 compcert.common.Values <> Vptr constr
R19108:19110 compcert.cfrontend.Cstrategy <> ofs var
R19106:19106 compcert.cfrontend.Cstrategy <> b var
R19116:19121 compcert.cfrontend.Csyntax <> Efield constr
R19124:19127 compcert.cfrontend.Csyntax <> Eval constr
R19150:19156 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19158:19159 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19160:19166 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19170:19171 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19186:19195 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19173:19175 Coq.Init.Logic <> :type_scope:x_'='_x not
R19176:19179 compcert.common.Values <> Vptr constr
R19183:19185 compcert.cfrontend.Cstrategy <> ofs var
R19181:19181 compcert.cfrontend.Cstrategy <> b var
R19219:19225 compcert.cfrontend.Ctypes <> Tstruct constr
R19240:19246 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19252:19253 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19274:19276 Coq.Init.Logic <> :type_scope:x_'='_x not
R19254:19265 compcert.cfrontend.Ctypes <> field_offset def
R19277:19285 compcert.common.Errors <> OK constr
R19287:19291 compcert.cfrontend.Cstrategy <> delta var
R19301:19306 compcert.cfrontend.Ctypes <> Tunion constr
R19317:19320 Coq.Init.Logic <> True ind
R19335:19339 Coq.Init.Logic <> False ind
R19355:19358 compcert.cfrontend.Csyntax <> Eval constr
R19368:19372 Coq.Init.Logic <> False ind
R19378:19383 compcert.cfrontend.Csyntax <> Evalof constr
R19386:19389 compcert.cfrontend.Csyntax <> Eloc constr
R19422:19425 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19417:19419 Coq.Init.Logic <> :type_scope:x_'='_x not
R19426:19432 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19434:19435 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19436:19442 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19444:19445 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19446:19454 compcert.cfrontend.Csem <> deref_loc ind
R19472:19472 compcert.cfrontend.Cstrategy <> v var
R19470:19470 compcert.cfrontend.Cstrategy <> t var
R19462:19462 compcert.cfrontend.Cstrategy <> m var
R19456:19457 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R19478:19482 compcert.cfrontend.Csyntax <> Eunop constr
R19488:19491 compcert.cfrontend.Csyntax <> Eval constr
R19513:19519 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19521:19522 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19552:19554 Coq.Init.Logic <> :type_scope:x_'='_x not
R19523:19541 compcert.cfrontend.Cop <> sem_unary_operation def
R19555:19558 Coq.Init.Datatypes <> Some constr
R19560:19560 compcert.cfrontend.Cstrategy <> v var
R19566:19571 compcert.cfrontend.Csyntax <> Ebinop constr
R19577:19580 compcert.cfrontend.Csyntax <> Eval constr
R19591:19594 compcert.cfrontend.Csyntax <> Eval constr
R19616:19622 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19624:19625 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19665:19667 Coq.Init.Logic <> :type_scope:x_'='_x not
R19626:19645 compcert.cfrontend.Cop <> sem_binary_operation def
R19664:19664 compcert.cfrontend.Cstrategy <> m var
R19668:19671 Coq.Init.Datatypes <> Some constr
R19673:19673 compcert.cfrontend.Cstrategy <> v var
R19679:19683 compcert.cfrontend.Csyntax <> Ecast constr
R19686:19689 compcert.cfrontend.Csyntax <> Eval constr
R19711:19717 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19719:19720 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19739:19741 Coq.Init.Logic <> :type_scope:x_'='_x not
R19721:19728 compcert.cfrontend.Cop <> sem_cast def
R19742:19745 Coq.Init.Datatypes <> Some constr
R19747:19747 compcert.cfrontend.Cstrategy <> v var
R19753:19759 compcert.cfrontend.Csyntax <> Eseqand constr
R19762:19765 compcert.cfrontend.Csyntax <> Eval constr
R19790:19796 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19798:19799 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19815:19817 Coq.Init.Logic <> :type_scope:x_'='_x not
R19800:19807 compcert.cfrontend.Cop <> bool_val def
R19818:19821 Coq.Init.Datatypes <> Some constr
R19823:19823 compcert.cfrontend.Cstrategy <> b var
R19829:19834 compcert.cfrontend.Csyntax <> Eseqor constr
R19837:19840 compcert.cfrontend.Csyntax <> Eval constr
R19865:19871 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19873:19874 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19890:19892 Coq.Init.Logic <> :type_scope:x_'='_x not
R19875:19882 compcert.cfrontend.Cop <> bool_val def
R19893:19896 Coq.Init.Datatypes <> Some constr
R19898:19898 compcert.cfrontend.Cstrategy <> b var
R19904:19913 compcert.cfrontend.Csyntax <> Econdition constr
R19916:19919 compcert.cfrontend.Csyntax <> Eval constr
R19947:19953 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19955:19956 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19972:19974 Coq.Init.Logic <> :type_scope:x_'='_x not
R19957:19964 compcert.cfrontend.Cop <> bool_val def
R19975:19978 Coq.Init.Datatypes <> Some constr
R19980:19980 compcert.cfrontend.Cstrategy <> b var
R19986:19992 compcert.cfrontend.Csyntax <> Eassign constr
R19995:19998 compcert.cfrontend.Csyntax <> Eloc constr
R20012:20015 compcert.cfrontend.Csyntax <> Eval constr
R20037:20043 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20045:20046 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20047:20053 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20056:20057 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20058:20064 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20066:20073 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20082:20085 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20076:20078 Coq.Init.Logic <> :type_scope:x_'='_x not
R20114:20117 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20105:20107 Coq.Init.Logic <> :type_scope:x_'='_x not
R20086:20093 compcert.cfrontend.Cop <> sem_cast def
R20108:20111 Coq.Init.Datatypes <> Some constr
R20113:20113 compcert.cfrontend.Cstrategy <> v var
R20118:20127 compcert.cfrontend.Csem <> assign_loc ind
R20148:20149 compcert.cfrontend.Cstrategy <> m' var
R20146:20146 compcert.cfrontend.Cstrategy <> t var
R20144:20144 compcert.cfrontend.Cstrategy <> v var
R20136:20136 compcert.cfrontend.Cstrategy <> m var
R20129:20130 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R20155:20163 compcert.cfrontend.Csyntax <> Eassignop constr
R20169:20172 compcert.cfrontend.Csyntax <> Eloc constr
R20186:20189 compcert.cfrontend.Csyntax <> Eval constr
R20217:20223 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20225:20226 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20227:20233 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20236:20243 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20252:20261 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20246:20248 Coq.Init.Logic <> :type_scope:x_'='_x not
R20262:20270 compcert.cfrontend.Csem <> deref_loc ind
R20289:20290 compcert.cfrontend.Cstrategy <> v1 var
R20287:20287 compcert.cfrontend.Cstrategy <> t var
R20279:20279 compcert.cfrontend.Cstrategy <> m var
R20272:20273 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R20296:20304 compcert.cfrontend.Csyntax <> Epostincr constr
R20310:20313 compcert.cfrontend.Csyntax <> Eloc constr
R20338:20344 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20346:20347 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20348:20354 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20357:20364 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20373:20382 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20367:20369 Coq.Init.Logic <> :type_scope:x_'='_x not
R20383:20391 compcert.cfrontend.Csem <> deref_loc ind
R20409:20410 compcert.cfrontend.Cstrategy <> v1 var
R20407:20407 compcert.cfrontend.Cstrategy <> t var
R20399:20399 compcert.cfrontend.Cstrategy <> m var
R20393:20394 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R20416:20421 compcert.cfrontend.Csyntax <> Ecomma constr
R20424:20427 compcert.cfrontend.Csyntax <> Eval constr
R20460:20462 Coq.Init.Logic <> :type_scope:x_'='_x not
R20451:20456 compcert.cfrontend.Csyntax <> typeof def
R20470:20475 compcert.cfrontend.Csyntax <> Eparen constr
R20478:20481 compcert.cfrontend.Csyntax <> Eval constr
R20503:20509 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20511:20512 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20531:20533 Coq.Init.Logic <> :type_scope:x_'='_x not
R20513:20520 compcert.cfrontend.Cop <> sem_cast def
R20534:20537 Coq.Init.Datatypes <> Some constr
R20539:20539 compcert.cfrontend.Cstrategy <> v var
R20545:20549 compcert.cfrontend.Csyntax <> Ecall constr
R20552:20555 compcert.cfrontend.Csyntax <> Eval constr
R20618:20624 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20649:20659 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20708:20717 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20676:20678 Coq.Init.Logic <> :type_scope:x_'='_x not
R20660:20671 compcert.cfrontend.Cop <> classify_fun def
R20679:20688 compcert.cfrontend.Cop <> fun_case_f constr
R20703:20707 compcert.cfrontend.Cstrategy <> cconv var
R20697:20701 compcert.cfrontend.Cstrategy <> tyres var
R20690:20695 compcert.cfrontend.Cstrategy <> tyargs var
R20749:20758 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20739:20741 Coq.Init.Logic <> :type_scope:x_'='_x not
R20718:20732 compcert.common.Globalenvs Genv find_funct def
R20734:20735 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R20742:20745 Coq.Init.Datatypes <> Some constr
R20747:20748 compcert.cfrontend.Cstrategy <> fd var
R20789:20798 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20759:20772 compcert.cfrontend.Csem <> cast_arguments ind
R20787:20788 compcert.cfrontend.Cstrategy <> vl var
R20780:20785 compcert.cfrontend.Cstrategy <> tyargs var
R20816:20818 Coq.Init.Logic <> :type_scope:x_'='_x not
R20799:20812 compcert.cfrontend.Csyntax <> type_of_fundef def
R20814:20815 compcert.cfrontend.Cstrategy <> fd var
R20819:20827 compcert.cfrontend.Ctypes <> Tfunction constr
R20842:20846 compcert.cfrontend.Cstrategy <> cconv var
R20836:20840 compcert.cfrontend.Cstrategy <> tyres var
R20829:20834 compcert.cfrontend.Cstrategy <> tyargs var
R20583:20601 compcert.cfrontend.Cstrategy <> exprlist_all_values def
R20852:20859 compcert.cfrontend.Csyntax <> Ebuiltin constr
R20924:20930 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20936:20937 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20938:20944 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20946:20947 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20948:20954 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20959:20960 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20961:20967 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20970:20980 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21014:21023 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20981:20994 compcert.cfrontend.Csem <> cast_arguments ind
R21009:21013 compcert.cfrontend.Cstrategy <> vargs var
R21024:21036 compcert.common.Events <> external_call def
R21059:21060 compcert.cfrontend.Cstrategy <> m' var
R21054:21057 compcert.cfrontend.Cstrategy <> vres var
R21052:21052 compcert.cfrontend.Cstrategy <> t var
R21050:21050 compcert.cfrontend.Cstrategy <> m var
R21044:21048 compcert.cfrontend.Cstrategy <> vargs var
R21041:21042 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R20889:20907 compcert.cfrontend.Cstrategy <> exprlist_all_values def
R21071:21074 Coq.Init.Logic <> True ind
prf 21090:21100 <> lred_invert
R21146:21161 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R21165:21165 compcert.cfrontend.Cstrategy <> m var
R21163:21163 compcert.cfrontend.Cstrategy <> l var
R21123:21126 compcert.cfrontend.Csem <> lred ind
R21140:21141 compcert.cfrontend.Cstrategy <> m' var
R21137:21138 compcert.cfrontend.Cstrategy <> l' var
R21135:21135 compcert.cfrontend.Cstrategy <> m var
R21133:21133 compcert.cfrontend.Cstrategy <> l var
R21131:21131 compcert.cfrontend.Cstrategy <> STRATEGY.INVERSION_LEMMAS.e var
R21128:21129 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
prf 21366:21376 <> rred_invert
R21424:21439 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R21443:21443 compcert.cfrontend.Cstrategy <> m var
R21441:21441 compcert.cfrontend.Cstrategy <> r var
R21401:21404 compcert.cfrontend.Csem <> rred ind
R21418:21419 compcert.cfrontend.Cstrategy <> m' var
R21415:21416 compcert.cfrontend.Cstrategy <> r' var
R21413:21413 compcert.cfrontend.Cstrategy <> t var
R21411:21411 compcert.cfrontend.Cstrategy <> m var
R21409:21409 compcert.cfrontend.Cstrategy <> r var
R21406:21407 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R21583:21586 Coq.Init.Datatypes <> true constr
R21583:21586 Coq.Init.Datatypes <> true constr
R21602:21606 Coq.Init.Datatypes <> false constr
R21602:21606 Coq.Init.Datatypes <> false constr
R21624:21627 Coq.Init.Datatypes <> true constr
R21624:21627 Coq.Init.Datatypes <> true constr
R21643:21647 Coq.Init.Datatypes <> false constr
R21643:21647 Coq.Init.Datatypes <> false constr
prf 21865:21878 <> callred_invert
R21937:21952 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R21956:21956 compcert.cfrontend.Cstrategy <> m var
R21954:21954 compcert.cfrontend.Cstrategy <> r var
R21908:21914 compcert.cfrontend.Csem <> callred ind
R21929:21930 compcert.cfrontend.Cstrategy <> ty var
R21924:21927 compcert.cfrontend.Cstrategy <> args var
R21921:21922 compcert.cfrontend.Cstrategy <> fd var
R21919:21919 compcert.cfrontend.Cstrategy <> r var
R21916:21917 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
def 22058:22069 <> context_ind2
R22089:22095 compcert.cfrontend.Csem <> context ind
def 22114:22129 <> contextlist_ind2
R22149:22159 compcert.cfrontend.Csem <> contextlist ind
def 22188:22210 <> context_contextlist_ind
R22217:22228 compcert.cfrontend.Cstrategy <> context_ind2 scheme
R22231:22246 compcert.cfrontend.Cstrategy <> contextlist_ind2 scheme
prf 22256:22274 <> invert_expr_context
R22279:22279 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22388:22392 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22498:22498 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22364:22379 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R22387:22387 compcert.cfrontend.Cstrategy <> m var
R22382:22382 compcert.cfrontend.Cstrategy <> C var
R22384:22384 compcert.cfrontend.Cstrategy <> a var
R22337:22352 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R22356:22356 compcert.cfrontend.Cstrategy <> m var
R22354:22354 compcert.cfrontend.Cstrategy <> a var
R22298:22304 compcert.cfrontend.Csem <> context ind
R22314:22314 compcert.cfrontend.Cstrategy <> C var
R22311:22312 compcert.cfrontend.Cstrategy <> to var
R22306:22309 compcert.cfrontend.Cstrategy <> from var
R22472:22472 Coq.Init.Logic <> :type_scope:'~'_x not
R22473:22491 compcert.cfrontend.Cstrategy <> exprlist_all_values def
R22494:22494 compcert.cfrontend.Cstrategy <> C var
R22496:22496 compcert.cfrontend.Cstrategy <> a var
R22446:22461 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R22465:22465 compcert.cfrontend.Cstrategy <> m var
R22463:22463 compcert.cfrontend.Cstrategy <> a var
R22408:22418 compcert.cfrontend.Csem <> contextlist ind
R22425:22425 compcert.cfrontend.Cstrategy <> C var
R22420:22423 compcert.cfrontend.Cstrategy <> from var
R22516:22538 compcert.cfrontend.Cstrategy <> context_contextlist_ind scheme
R22516:22538 compcert.cfrontend.Cstrategy <> context_contextlist_ind scheme
prf 23553:23564 <> imm_safe_inv
R23616:23616 compcert.cfrontend.Cstrategy <> a var
R23627:23630 compcert.cfrontend.Csyntax <> Eloc constr
R23641:23644 Coq.Init.Logic <> True ind
R23650:23653 compcert.cfrontend.Csyntax <> Eval constr
R23662:23665 Coq.Init.Logic <> True ind
R23676:23691 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R23695:23695 compcert.cfrontend.Cstrategy <> m var
R23693:23693 compcert.cfrontend.Cstrategy <> a var
R23585:23592 compcert.cfrontend.Csem <> imm_safe ind
R23603:23603 compcert.cfrontend.Cstrategy <> m var
R23601:23601 compcert.cfrontend.Cstrategy <> a var
R23599:23599 compcert.cfrontend.Cstrategy <> k var
R23597:23597 compcert.cfrontend.Cstrategy <> STRATEGY.INVERSION_LEMMAS.e var
R23594:23595 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R23722:23740 compcert.cfrontend.Cstrategy <> invert_expr_context thm
R23796:23811 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R23796:23811 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R23852:23862 compcert.cfrontend.Cstrategy <> lred_invert thm
R23852:23862 compcert.cfrontend.Cstrategy <> lred_invert thm
R23932:23947 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R23932:23947 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R23988:23998 compcert.cfrontend.Cstrategy <> rred_invert thm
R23988:23998 compcert.cfrontend.Cstrategy <> rred_invert thm
R24068:24083 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R24068:24083 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R24124:24137 compcert.cfrontend.Cstrategy <> callred_invert thm
R24124:24137 compcert.cfrontend.Cstrategy <> callred_invert thm
prf 24209:24216 <> safe_inv
R24305:24305 compcert.cfrontend.Cstrategy <> a var
R24316:24319 compcert.cfrontend.Csyntax <> Eloc constr
R24330:24333 Coq.Init.Logic <> True ind
R24339:24342 compcert.cfrontend.Csyntax <> Eval constr
R24351:24354 Coq.Init.Logic <> True ind
R24365:24380 compcert.cfrontend.Cstrategy <> invert_expr_prop def
R24384:24384 compcert.cfrontend.Cstrategy <> m var
R24382:24382 compcert.cfrontend.Cstrategy <> a var
R24279:24285 compcert.cfrontend.Csem <> context ind
R24292:24292 compcert.cfrontend.Cstrategy <> C var
R24289:24290 compcert.cfrontend.Csem <> RV constr
R24287:24287 compcert.cfrontend.Cstrategy <> k var
R24243:24246 compcert.cfrontend.Cstrategy <> safe def
R24249:24257 compcert.cfrontend.Csem <> ExprState constr
R24271:24271 compcert.cfrontend.Cstrategy <> m var
R24269:24269 compcert.cfrontend.Cstrategy <> STRATEGY.INVERSION_LEMMAS.e var
R24267:24267 compcert.cfrontend.Cstrategy <> K var
R24262:24262 compcert.cfrontend.Cstrategy <> C var
R24264:24264 compcert.cfrontend.Cstrategy <> a var
R24259:24259 compcert.cfrontend.Cstrategy <> f var
R24417:24428 compcert.cfrontend.Cstrategy <> imm_safe_inv thm
R24417:24428 compcert.cfrontend.Cstrategy <> imm_safe_inv thm
R24445:24457 compcert.cfrontend.Cstrategy <> safe_imm_safe thm
R24445:24457 compcert.cfrontend.Cstrategy <> safe_imm_safe thm
R24477:24492 compcert.cfrontend.Cstrategy STRATEGY.INVERSION_LEMMAS <> sec
sec 24543:24553 STRATEGY SIMPLE_EVAL
var 24566:24566 STRATEGY.SIMPLE_EVAL f
R24569:24576 compcert.cfrontend.Csyntax <> function rec
var 24588:24588 STRATEGY.SIMPLE_EVAL k
R24591:24594 compcert.cfrontend.Csem <> cont ind
var 24606:24606 STRATEGY.SIMPLE_EVAL e
R24609:24611 compcert.cfrontend.Csem <> env def
var 24623:24623 STRATEGY.SIMPLE_EVAL m
R24626:24628 compcert.common.Memory <> mem syndef
prf 24638:24654 <> eval_simple_steps
R24660:24660 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24848:24853 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25053:25053 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24740:24743 compcert.common.Smallstep <> star ind
R24806:24814 compcert.cfrontend.Csem <> ExprState constr
R24846:24846 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R24844:24844 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R24842:24842 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R24819:24819 compcert.cfrontend.Cstrategy <> C var
R24822:24825 compcert.cfrontend.Csyntax <> Eval constr
R24830:24835 compcert.cfrontend.Csyntax <> typeof def
R24837:24837 compcert.cfrontend.Cstrategy <> a var
R24827:24827 compcert.cfrontend.Cstrategy <> v var
R24816:24816 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R24802:24803 compcert.common.Events <> E0 def
R24759:24767 compcert.cfrontend.Csem <> ExprState constr
R24781:24781 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R24779:24779 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R24777:24777 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R24772:24772 compcert.cfrontend.Cstrategy <> C var
R24774:24774 compcert.cfrontend.Cstrategy <> a var
R24769:24769 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R24755:24756 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R24745:24753 compcert.cfrontend.Csem <> step def
R24717:24723 compcert.cfrontend.Csem <> context ind
R24731:24731 compcert.cfrontend.Cstrategy <> C var
R24728:24729 compcert.cfrontend.Csem <> RV constr
R24725:24726 compcert.cfrontend.Csem <> RV constr
R24673:24690 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R24698:24698 compcert.cfrontend.Cstrategy <> v var
R24696:24696 compcert.cfrontend.Cstrategy <> a var
R24694:24694 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R24692:24692 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R24941:24944 compcert.common.Smallstep <> star ind
R25007:25015 compcert.cfrontend.Csem <> ExprState constr
R25051:25051 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R25049:25049 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R25047:25047 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R25020:25020 compcert.cfrontend.Cstrategy <> C var
R25023:25026 compcert.cfrontend.Csyntax <> Eloc constr
R25035:25040 compcert.cfrontend.Csyntax <> typeof def
R25042:25042 compcert.cfrontend.Cstrategy <> a var
R25030:25032 compcert.cfrontend.Cstrategy <> ofs var
R25028:25028 compcert.cfrontend.Cstrategy <> b var
R25017:25017 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R25003:25004 compcert.common.Events <> E0 def
R24960:24968 compcert.cfrontend.Csem <> ExprState constr
R24982:24982 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R24980:24980 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R24978:24978 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R24973:24973 compcert.cfrontend.Cstrategy <> C var
R24975:24975 compcert.cfrontend.Cstrategy <> a var
R24970:24970 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R24956:24957 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R24946:24954 compcert.cfrontend.Csem <> step def
R24918:24924 compcert.cfrontend.Csem <> context ind
R24932:24932 compcert.cfrontend.Cstrategy <> C var
R24929:24930 compcert.cfrontend.Csem <> RV constr
R24926:24927 compcert.cfrontend.Csem <> LV constr
R24870:24887 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R24897:24899 compcert.cfrontend.Cstrategy <> ofs var
R24895:24895 compcert.cfrontend.Cstrategy <> b var
R24893:24893 compcert.cfrontend.Cstrategy <> a var
R24891:24891 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R24889:24889 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R25092:25101 compcert.common.Smallstep <> star_trans thm
R25180:25187 compcert.common.Smallstep <> star_one thm
R25202:25210 compcert.cfrontend.Csem <> step_rred constr
R25282:25289 compcert.common.Smallstep <> star_one thm
R25304:25312 compcert.cfrontend.Csem <> step_lred constr
R25371:25399 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_lvalue_ind scheme
R25371:25399 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_lvalue_ind scheme
R25428:25436 compcert.common.Smallstep <> star_refl constr
R25428:25436 compcert.common.Smallstep <> star_refl constr
R25474:25479 compcert.cfrontend.Csyntax <> Evalof constr
R25481:25481 compcert.cfrontend.Cstrategy <> x var
R25474:25479 compcert.cfrontend.Csyntax <> Evalof constr
R25481:25481 compcert.cfrontend.Cstrategy <> x var
R25554:25560 compcert.cfrontend.Csyntax <> Eaddrof constr
R25562:25562 compcert.cfrontend.Cstrategy <> x var
R25554:25560 compcert.cfrontend.Csyntax <> Eaddrof constr
R25562:25562 compcert.cfrontend.Cstrategy <> x var
R25613:25617 compcert.cfrontend.Csyntax <> Eunop constr
R25622:25622 compcert.cfrontend.Cstrategy <> x var
R25613:25617 compcert.cfrontend.Csyntax <> Eunop constr
R25622:25622 compcert.cfrontend.Cstrategy <> x var
R25674:25679 compcert.cfrontend.Csyntax <> Ebinop constr
R25684:25684 compcert.cfrontend.Cstrategy <> x var
R25674:25679 compcert.cfrontend.Csyntax <> Ebinop constr
R25684:25684 compcert.cfrontend.Cstrategy <> x var
R25718:25723 compcert.cfrontend.Csyntax <> Ebinop constr
R25750:25750 compcert.cfrontend.Cstrategy <> x var
R25729:25732 compcert.cfrontend.Csyntax <> Eval constr
R25738:25743 compcert.cfrontend.Csyntax <> typeof def
R25718:25723 compcert.cfrontend.Csyntax <> Ebinop constr
R25750:25750 compcert.cfrontend.Cstrategy <> x var
R25729:25732 compcert.cfrontend.Csyntax <> Eval constr
R25738:25743 compcert.cfrontend.Csyntax <> typeof def
R25803:25807 compcert.cfrontend.Csyntax <> Ecast constr
R25809:25809 compcert.cfrontend.Cstrategy <> x var
R25803:25807 compcert.cfrontend.Csyntax <> Ecast constr
R25809:25809 compcert.cfrontend.Cstrategy <> x var
R25894:25902 compcert.common.Smallstep <> star_refl constr
R25894:25902 compcert.common.Smallstep <> star_refl constr
R25967:25980 compcert.cfrontend.Csem <> red_var_global constr
R25967:25980 compcert.cfrontend.Csem <> red_var_global constr
R26024:26029 compcert.cfrontend.Csyntax <> Ederef constr
R26031:26031 compcert.cfrontend.Cstrategy <> x var
R26024:26029 compcert.cfrontend.Csyntax <> Ederef constr
R26031:26031 compcert.cfrontend.Cstrategy <> x var
R26091:26096 compcert.cfrontend.Csyntax <> Efield constr
R26098:26098 compcert.cfrontend.Cstrategy <> x var
R26091:26096 compcert.cfrontend.Csyntax <> Efield constr
R26098:26098 compcert.cfrontend.Cstrategy <> x var
R26176:26181 compcert.cfrontend.Csyntax <> Efield constr
R26183:26183 compcert.cfrontend.Cstrategy <> x var
R26176:26181 compcert.cfrontend.Csyntax <> Efield constr
R26183:26183 compcert.cfrontend.Cstrategy <> x var
prf 26232:26255 <> eval_simple_rvalue_steps
R26335:26338 compcert.common.Smallstep <> star ind
R26399:26407 compcert.cfrontend.Csem <> ExprState constr
R26439:26439 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R26437:26437 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R26435:26435 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R26412:26412 compcert.cfrontend.Cstrategy <> C var
R26415:26418 compcert.cfrontend.Csyntax <> Eval constr
R26423:26428 compcert.cfrontend.Csyntax <> typeof def
R26430:26430 compcert.cfrontend.Cstrategy <> a var
R26420:26420 compcert.cfrontend.Cstrategy <> v var
R26409:26409 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R26395:26396 compcert.common.Events <> E0 def
R26354:26362 compcert.cfrontend.Csem <> ExprState constr
R26376:26376 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R26374:26374 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R26372:26372 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R26367:26367 compcert.cfrontend.Cstrategy <> C var
R26369:26369 compcert.cfrontend.Cstrategy <> a var
R26364:26364 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R26350:26351 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R26340:26348 compcert.cfrontend.Csem <> step def
R26314:26320 compcert.cfrontend.Csem <> context ind
R26328:26328 compcert.cfrontend.Cstrategy <> C var
R26325:26326 compcert.cfrontend.Csem <> RV constr
R26322:26323 compcert.cfrontend.Csem <> RV constr
R26272:26289 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R26297:26297 compcert.cfrontend.Cstrategy <> v var
R26295:26295 compcert.cfrontend.Cstrategy <> a var
R26293:26293 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R26291:26291 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R26450:26454 Coq.Init.Logic <> proj1 thm
R26456:26472 compcert.cfrontend.Cstrategy <> eval_simple_steps thm
prf 26483:26506 <> eval_simple_lvalue_steps
R26594:26597 compcert.common.Smallstep <> star ind
R26658:26666 compcert.cfrontend.Csem <> ExprState constr
R26702:26702 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R26700:26700 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R26698:26698 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R26671:26671 compcert.cfrontend.Cstrategy <> C var
R26674:26677 compcert.cfrontend.Csyntax <> Eloc constr
R26686:26691 compcert.cfrontend.Csyntax <> typeof def
R26693:26693 compcert.cfrontend.Cstrategy <> a var
R26681:26683 compcert.cfrontend.Cstrategy <> ofs var
R26679:26679 compcert.cfrontend.Cstrategy <> b var
R26668:26668 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R26654:26655 compcert.common.Events <> E0 def
R26613:26621 compcert.cfrontend.Csem <> ExprState constr
R26635:26635 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R26633:26633 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R26631:26631 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R26626:26626 compcert.cfrontend.Cstrategy <> C var
R26628:26628 compcert.cfrontend.Cstrategy <> a var
R26623:26623 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R26609:26610 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R26599:26607 compcert.cfrontend.Csem <> step def
R26573:26579 compcert.cfrontend.Csem <> context ind
R26587:26587 compcert.cfrontend.Cstrategy <> C var
R26584:26585 compcert.cfrontend.Csem <> RV constr
R26581:26582 compcert.cfrontend.Csem <> LV constr
R26527:26544 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R26554:26556 compcert.cfrontend.Cstrategy <> ofs var
R26552:26552 compcert.cfrontend.Cstrategy <> b var
R26550:26550 compcert.cfrontend.Cstrategy <> a var
R26548:26548 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R26546:26546 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R26713:26717 Coq.Init.Logic <> proj2 thm
R26719:26735 compcert.cfrontend.Cstrategy <> eval_simple_steps thm
prf 26750:26772 <> eval_simple_rvalue_safe
R26880:26883 compcert.cfrontend.Cstrategy <> safe def
R26886:26894 compcert.cfrontend.Csem <> ExprState constr
R26926:26926 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R26924:26924 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R26922:26922 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R26899:26899 compcert.cfrontend.Cstrategy <> C var
R26902:26905 compcert.cfrontend.Csyntax <> Eval constr
R26910:26915 compcert.cfrontend.Csyntax <> typeof def
R26917:26917 compcert.cfrontend.Cstrategy <> a var
R26907:26907 compcert.cfrontend.Cstrategy <> v var
R26896:26896 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R26844:26847 compcert.cfrontend.Cstrategy <> safe def
R26850:26858 compcert.cfrontend.Csem <> ExprState constr
R26872:26872 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R26870:26870 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R26868:26868 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R26863:26863 compcert.cfrontend.Cstrategy <> C var
R26865:26865 compcert.cfrontend.Cstrategy <> a var
R26860:26860 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R26825:26831 compcert.cfrontend.Csem <> context ind
R26839:26839 compcert.cfrontend.Cstrategy <> C var
R26836:26837 compcert.cfrontend.Csem <> RV constr
R26833:26834 compcert.cfrontend.Csem <> RV constr
R26793:26810 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R26818:26818 compcert.cfrontend.Cstrategy <> v var
R26816:26816 compcert.cfrontend.Cstrategy <> a var
R26814:26814 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R26812:26812 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R26954:26963 compcert.cfrontend.Cstrategy <> safe_steps thm
R26954:26963 compcert.cfrontend.Cstrategy <> safe_steps thm
R26980:27003 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R26980:27003 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
prf 27029:27051 <> eval_simple_lvalue_safe
R27167:27170 compcert.cfrontend.Cstrategy <> safe def
R27173:27181 compcert.cfrontend.Csem <> ExprState constr
R27217:27217 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R27215:27215 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R27213:27213 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R27186:27186 compcert.cfrontend.Cstrategy <> C var
R27189:27192 compcert.cfrontend.Csyntax <> Eloc constr
R27201:27206 compcert.cfrontend.Csyntax <> typeof def
R27208:27208 compcert.cfrontend.Cstrategy <> a var
R27196:27198 compcert.cfrontend.Cstrategy <> ofs var
R27194:27194 compcert.cfrontend.Cstrategy <> b var
R27183:27183 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R27131:27134 compcert.cfrontend.Cstrategy <> safe def
R27137:27145 compcert.cfrontend.Csem <> ExprState constr
R27159:27159 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R27157:27157 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R27155:27155 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R27150:27150 compcert.cfrontend.Cstrategy <> C var
R27152:27152 compcert.cfrontend.Cstrategy <> a var
R27147:27147 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R27112:27118 compcert.cfrontend.Csem <> context ind
R27126:27126 compcert.cfrontend.Cstrategy <> C var
R27123:27124 compcert.cfrontend.Csem <> RV constr
R27120:27121 compcert.cfrontend.Csem <> LV constr
R27076:27093 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R27103:27105 compcert.cfrontend.Cstrategy <> ofs var
R27101:27101 compcert.cfrontend.Cstrategy <> b var
R27099:27099 compcert.cfrontend.Cstrategy <> a var
R27097:27097 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R27095:27095 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R27245:27254 compcert.cfrontend.Cstrategy <> safe_steps thm
R27245:27254 compcert.cfrontend.Cstrategy <> safe_steps thm
R27271:27294 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R27271:27294 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
prf 27316:27330 <> simple_can_eval
R27436:27439 compcert.cfrontend.Cstrategy <> from var
R27450:27451 compcert.cfrontend.Csem <> LV constr
R27456:27462 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27464:27465 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27466:27472 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27476:27477 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27478:27495 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R27505:27507 compcert.cfrontend.Cstrategy <> ofs var
R27503:27503 compcert.cfrontend.Cstrategy <> b var
R27501:27501 compcert.cfrontend.Cstrategy <> a var
R27499:27499 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R27497:27497 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R27513:27514 compcert.cfrontend.Csem <> RV constr
R27519:27525 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27527:27528 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27529:27546 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R27554:27554 compcert.cfrontend.Cstrategy <> v var
R27552:27552 compcert.cfrontend.Cstrategy <> a var
R27550:27550 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R27548:27548 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R27394:27397 compcert.cfrontend.Cstrategy <> safe def
R27400:27408 compcert.cfrontend.Csem <> ExprState constr
R27422:27422 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R27420:27420 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R27418:27418 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R27413:27413 compcert.cfrontend.Cstrategy <> C var
R27415:27415 compcert.cfrontend.Cstrategy <> a var
R27410:27410 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R27373:27379 compcert.cfrontend.Csem <> context ind
R27389:27389 compcert.cfrontend.Cstrategy <> C var
R27386:27387 compcert.cfrontend.Csem <> RV constr
R27381:27384 compcert.cfrontend.Cstrategy <> from var
R27362:27364 Coq.Init.Logic <> :type_scope:x_'='_x not
R27354:27359 compcert.cfrontend.Cstrategy <> simple def
R27361:27361 compcert.cfrontend.Cstrategy <> a var
R27365:27368 Coq.Init.Datatypes <> true constr
R27707:27708 compcert.cfrontend.Csem <> LV constr
R27755:27758 compcert.cfrontend.Cstrategy <> safe def
R27761:27769 compcert.cfrontend.Csem <> ExprState constr
R27806:27806 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R27804:27804 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R27802:27802 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R27778:27781 compcert.cfrontend.Csyntax <> Eloc constr
R27790:27795 compcert.cfrontend.Csyntax <> typeof def
R27771:27771 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R27827:27849 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_safe thm
R27987:27988 compcert.cfrontend.Csem <> RV constr
R28029:28032 compcert.cfrontend.Cstrategy <> safe def
R28035:28043 compcert.cfrontend.Csem <> ExprState constr
R28076:28076 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R28074:28074 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R28072:28072 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R28052:28055 compcert.cfrontend.Csyntax <> Eval constr
R28060:28065 compcert.cfrontend.Csyntax <> typeof def
R28045:28045 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R28097:28119 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_safe thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28204:28217 compcert.cfrontend.Cstrategy <> safe_expr_kind thm
R28354:28361 compcert.cfrontend.Cstrategy <> safe_inv thm
R28411:28418 compcert.lib.Integers Int zero def
R28411:28418 compcert.lib.Integers Int zero def
R0:-1 compcert.cfrontend.Cstrategy <> y var
R28440:28452 compcert.cfrontend.Cstrategy <> esl_var_local constr
R28440:28452 compcert.cfrontend.Cstrategy <> esl_var_local constr
R28467:28480 compcert.cfrontend.Cstrategy <> esl_var_global constr
R28467:28480 compcert.cfrontend.Cstrategy <> esl_var_global constr
R28525:28530 compcert.cfrontend.Csyntax <> Efield constr
R28532:28532 compcert.cfrontend.Cstrategy <> x var
R28525:28530 compcert.cfrontend.Csyntax <> Efield constr
R28532:28532 compcert.cfrontend.Cstrategy <> x var
R28555:28562 compcert.cfrontend.Cstrategy <> safe_inv thm
R28640:28645 compcert.cfrontend.Csyntax <> typeof def
R28640:28645 compcert.cfrontend.Csyntax <> typeof def
R28724:28730 compcert.lib.Integers Int add def
R28737:28744 compcert.lib.Integers Int repr def
R28724:28730 compcert.lib.Integers Int add def
R28737:28744 compcert.lib.Integers Int repr def
R28845:28853 Coq.Init.Datatypes <> andb_prop thm
R28845:28853 Coq.Init.Datatypes <> andb_prop thm
R28891:28903 Coq.Bool.Bool <> negb_true_iff thm
R28891:28903 Coq.Bool.Bool <> negb_true_iff thm
R28936:28941 compcert.cfrontend.Csyntax <> Evalof constr
R28943:28943 compcert.cfrontend.Cstrategy <> x var
R28936:28941 compcert.cfrontend.Csyntax <> Evalof constr
R28943:28943 compcert.cfrontend.Cstrategy <> x var
R28963:28970 compcert.cfrontend.Cstrategy <> safe_inv thm
R29038:29040 Coq.Init.Logic <> :type_scope:x_'='_x not
R29041:29042 compcert.common.Events <> E0 def
R29038:29040 Coq.Init.Logic <> :type_scope:x_'='_x not
R29041:29042 compcert.common.Events <> E0 def
R29164:29169 compcert.cfrontend.Csyntax <> Ederef constr
R29171:29171 compcert.cfrontend.Cstrategy <> x var
R29164:29169 compcert.cfrontend.Csyntax <> Ederef constr
R29171:29171 compcert.cfrontend.Cstrategy <> x var
R29191:29198 compcert.cfrontend.Cstrategy <> safe_inv thm
R29341:29347 compcert.cfrontend.Csyntax <> Eaddrof constr
R29349:29349 compcert.cfrontend.Cstrategy <> x var
R29341:29347 compcert.cfrontend.Csyntax <> Eaddrof constr
R29349:29349 compcert.cfrontend.Cstrategy <> x var
R29369:29372 compcert.common.Values <> Vptr constr
R29369:29372 compcert.common.Values <> Vptr constr
R29438:29442 compcert.cfrontend.Csyntax <> Eunop constr
R29447:29447 compcert.cfrontend.Cstrategy <> x var
R29438:29442 compcert.cfrontend.Csyntax <> Eunop constr
R29447:29447 compcert.cfrontend.Cstrategy <> x var
R29467:29474 compcert.cfrontend.Cstrategy <> safe_inv thm
R29579:29587 Coq.Init.Datatypes <> andb_prop thm
R29579:29587 Coq.Init.Datatypes <> andb_prop thm
R29642:29647 compcert.cfrontend.Csyntax <> Ebinop constr
R29652:29652 compcert.cfrontend.Cstrategy <> x var
R29642:29647 compcert.cfrontend.Csyntax <> Ebinop constr
R29652:29652 compcert.cfrontend.Cstrategy <> x var
R29691:29696 compcert.cfrontend.Csyntax <> Ebinop constr
R29722:29722 compcert.cfrontend.Cstrategy <> x var
R29702:29705 compcert.cfrontend.Csyntax <> Eval constr
R29710:29715 compcert.cfrontend.Csyntax <> typeof def
R29691:29696 compcert.cfrontend.Csyntax <> Ebinop constr
R29722:29722 compcert.cfrontend.Cstrategy <> x var
R29702:29705 compcert.cfrontend.Csyntax <> Eval constr
R29710:29715 compcert.cfrontend.Csyntax <> typeof def
R29743:29750 compcert.cfrontend.Cstrategy <> safe_inv thm
R29866:29870 compcert.cfrontend.Csyntax <> Ecast constr
R29872:29872 compcert.cfrontend.Cstrategy <> x var
R29866:29870 compcert.cfrontend.Csyntax <> Ecast constr
R29872:29872 compcert.cfrontend.Cstrategy <> x var
R29892:29899 compcert.cfrontend.Cstrategy <> safe_inv thm
prf 30128:30147 <> simple_can_eval_rval
R30241:30247 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30249:30250 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30277:30288 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30251:30268 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R30276:30276 compcert.cfrontend.Cstrategy <> v var
R30274:30274 compcert.cfrontend.Cstrategy <> r var
R30272:30272 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R30270:30270 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R30289:30292 compcert.cfrontend.Cstrategy <> safe def
R30295:30303 compcert.cfrontend.Csem <> ExprState constr
R30335:30335 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R30333:30333 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R30331:30331 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R30308:30308 compcert.cfrontend.Cstrategy <> C var
R30311:30314 compcert.cfrontend.Csyntax <> Eval constr
R30319:30324 compcert.cfrontend.Csyntax <> typeof def
R30326:30326 compcert.cfrontend.Cstrategy <> r var
R30316:30316 compcert.cfrontend.Cstrategy <> v var
R30305:30305 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R30205:30208 compcert.cfrontend.Cstrategy <> safe def
R30211:30219 compcert.cfrontend.Csem <> ExprState constr
R30233:30233 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R30231:30231 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R30229:30229 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R30224:30224 compcert.cfrontend.Cstrategy <> C var
R30226:30226 compcert.cfrontend.Cstrategy <> r var
R30221:30221 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R30186:30192 compcert.cfrontend.Csem <> context ind
R30200:30200 compcert.cfrontend.Cstrategy <> C var
R30197:30198 compcert.cfrontend.Csem <> RV constr
R30194:30195 compcert.cfrontend.Csem <> RV constr
R30175:30177 Coq.Init.Logic <> :type_scope:x_'='_x not
R30167:30172 compcert.cfrontend.Cstrategy <> simple def
R30174:30174 compcert.cfrontend.Cstrategy <> r var
R30178:30181 Coq.Init.Datatypes <> true constr
R30365:30379 compcert.cfrontend.Cstrategy <> simple_can_eval thm
R30383:30384 compcert.cfrontend.Csem <> RV constr
R30365:30379 compcert.cfrontend.Cstrategy <> simple_can_eval thm
R30383:30384 compcert.cfrontend.Csem <> RV constr
R30442:30464 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_safe thm
R30442:30464 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_safe thm
prf 30486:30505 <> simple_can_eval_lval
R30599:30605 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30607:30608 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30609:30615 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30619:30620 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30651:30663 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30621:30638 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R30648:30650 compcert.cfrontend.Cstrategy <> ofs var
R30646:30646 compcert.cfrontend.Cstrategy <> b var
R30644:30644 compcert.cfrontend.Cstrategy <> l var
R30642:30642 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R30640:30640 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R30664:30667 compcert.cfrontend.Cstrategy <> safe def
R30670:30678 compcert.cfrontend.Csem <> ExprState constr
R30714:30714 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R30712:30712 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R30710:30710 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R30683:30683 compcert.cfrontend.Cstrategy <> C var
R30686:30689 compcert.cfrontend.Csyntax <> Eloc constr
R30698:30703 compcert.cfrontend.Csyntax <> typeof def
R30705:30705 compcert.cfrontend.Cstrategy <> l var
R30693:30695 compcert.cfrontend.Cstrategy <> ofs var
R30691:30691 compcert.cfrontend.Cstrategy <> b var
R30680:30680 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R30563:30566 compcert.cfrontend.Cstrategy <> safe def
R30569:30577 compcert.cfrontend.Csem <> ExprState constr
R30591:30591 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R30589:30589 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R30587:30587 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R30582:30582 compcert.cfrontend.Cstrategy <> C var
R30584:30584 compcert.cfrontend.Cstrategy <> l var
R30579:30579 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R30544:30550 compcert.cfrontend.Csem <> context ind
R30558:30558 compcert.cfrontend.Cstrategy <> C var
R30555:30556 compcert.cfrontend.Csem <> RV constr
R30552:30553 compcert.cfrontend.Csem <> LV constr
R30533:30535 Coq.Init.Logic <> :type_scope:x_'='_x not
R30525:30530 compcert.cfrontend.Cstrategy <> simple def
R30532:30532 compcert.cfrontend.Cstrategy <> l var
R30536:30539 Coq.Init.Datatypes <> true constr
R30744:30758 compcert.cfrontend.Cstrategy <> simple_can_eval thm
R30762:30763 compcert.cfrontend.Csem <> LV constr
R30744:30758 compcert.cfrontend.Cstrategy <> simple_can_eval thm
R30762:30763 compcert.cfrontend.Csem <> LV constr
R30839:30861 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_safe thm
R30839:30861 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_safe thm
def 30886:30894 <> rval_list
R30901:30904 Coq.Init.Datatypes <> list ind
R30906:30908 compcert.common.Values <> val ind
R30916:30923 compcert.cfrontend.Csyntax <> exprlist ind
R30928:30935 compcert.cfrontend.Csyntax <> exprlist ind
R30952:30953 compcert.cfrontend.Cstrategy <> rl var
R30948:30949 compcert.cfrontend.Cstrategy <> vl var
R30966:30969 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R30975:30979 compcert.cfrontend.Csyntax <> Econs constr
R30991:30995 compcert.cfrontend.Csyntax <> Econs constr
R31020:31028 compcert.cfrontend.Cstrategy <> rval_list def
R30998:31001 compcert.cfrontend.Csyntax <> Eval constr
R31007:31012 compcert.cfrontend.Csyntax <> typeof def
R31051:31054 compcert.cfrontend.Csyntax <> Enil constr
ind 31074:31090 <> eval_simple_list'
constr 31129:31137 <> esrl'_nil
constr 31177:31186 <> esrl'_cons
R31105:31108 Coq.Init.Datatypes <> list ind
R31110:31112 compcert.common.Values <> val ind
R31093:31100 compcert.cfrontend.Csyntax <> exprlist ind
R31146:31162 compcert.cfrontend.Cstrategy <> eval_simple_list' ind
R31169:31171 Coq.Init.Datatypes <> nil constr
R31164:31167 compcert.cfrontend.Csyntax <> Enil constr
R31282:31298 compcert.cfrontend.Cstrategy <> eval_simple_list' ind
R31315:31318 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R31314:31314 compcert.cfrontend.Cstrategy <> v var
R31319:31320 compcert.cfrontend.Cstrategy <> vl var
R31301:31305 compcert.cfrontend.Csyntax <> Econs constr
R31309:31310 compcert.cfrontend.Cstrategy <> rl var
R31307:31307 compcert.cfrontend.Cstrategy <> r var
R31249:31265 compcert.cfrontend.Cstrategy <> eval_simple_list' ind
R31270:31271 compcert.cfrontend.Cstrategy <> vl var
R31267:31268 compcert.cfrontend.Cstrategy <> rl var
R31213:31230 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R31238:31238 compcert.cfrontend.Cstrategy <> v var
R31236:31236 compcert.cfrontend.Cstrategy <> r var
R31234:31234 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R31232:31232 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
prf 31331:31354 <> eval_simple_list_implies
R31416:31422 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31426:31427 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31468:31471 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31428:31441 compcert.cfrontend.Csem <> cast_arguments ind
R31466:31467 compcert.cfrontend.Cstrategy <> vl var
R31462:31464 compcert.cfrontend.Cstrategy <> tyl var
R31444:31452 compcert.cfrontend.Cstrategy <> rval_list def
R31458:31459 compcert.cfrontend.Cstrategy <> rl var
R31454:31456 compcert.cfrontend.Cstrategy <> vl' var
R31472:31488 compcert.cfrontend.Cstrategy <> eval_simple_list' ind
R31493:31495 compcert.cfrontend.Cstrategy <> vl' var
R31490:31491 compcert.cfrontend.Cstrategy <> rl var
R31379:31394 compcert.cfrontend.Cstrategy <> eval_simple_list ind
R31407:31408 compcert.cfrontend.Cstrategy <> vl var
R31403:31405 compcert.cfrontend.Cstrategy <> tyl var
R31400:31401 compcert.cfrontend.Cstrategy <> rl var
R31398:31398 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R31396:31396 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R31531:31533 Coq.Init.Datatypes <> nil constr
R31535:31537 compcert.common.Values <> val ind
R31531:31533 Coq.Init.Datatypes <> nil constr
R31535:31537 compcert.common.Values <> val ind
R31632:31635 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R31632:31635 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
prf 31699:31718 <> can_eval_simple_list
R31832:31847 compcert.cfrontend.Cstrategy <> eval_simple_list ind
R31860:31862 compcert.cfrontend.Cstrategy <> vl' var
R31856:31858 compcert.cfrontend.Cstrategy <> tyl var
R31853:31854 compcert.cfrontend.Cstrategy <> rl var
R31851:31851 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R31849:31849 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R31786:31799 compcert.cfrontend.Csem <> cast_arguments ind
R31823:31825 compcert.cfrontend.Cstrategy <> vl' var
R31819:31821 compcert.cfrontend.Cstrategy <> tyl var
R31802:31810 compcert.cfrontend.Cstrategy <> rval_list def
R31815:31816 compcert.cfrontend.Cstrategy <> rl var
R31812:31813 compcert.cfrontend.Cstrategy <> vl var
R31739:31755 compcert.cfrontend.Cstrategy <> eval_simple_list' ind
R31760:31761 compcert.cfrontend.Cstrategy <> vl var
R31757:31758 compcert.cfrontend.Cstrategy <> rl var
def 31972:31983 <> exprlist_app
R31995:32002 compcert.cfrontend.Csyntax <> exprlist ind
R32007:32014 compcert.cfrontend.Csyntax <> exprlist ind
R32027:32029 compcert.cfrontend.Cstrategy <> rl1 var
R32040:32043 compcert.cfrontend.Csyntax <> Enil constr
R32048:32050 compcert.cfrontend.Cstrategy <> rl2 var
R32056:32060 compcert.cfrontend.Csyntax <> Econs constr
R32073:32077 compcert.cfrontend.Csyntax <> Econs constr
R32083:32094 compcert.cfrontend.Cstrategy <> exprlist_app def
R32101:32103 compcert.cfrontend.Cstrategy <> rl2 var
prf 32120:32137 <> exprlist_app_assoc
R32203:32207 Coq.Init.Logic <> :type_scope:x_'='_x not
R32164:32175 compcert.cfrontend.Cstrategy <> exprlist_app def
R32200:32202 compcert.cfrontend.Cstrategy <> rl3 var
R32178:32189 compcert.cfrontend.Cstrategy <> exprlist_app def
R32195:32197 compcert.cfrontend.Cstrategy <> rl2 var
R32191:32193 compcert.cfrontend.Cstrategy <> rl1 var
R32208:32219 compcert.cfrontend.Cstrategy <> exprlist_app def
R32226:32237 compcert.cfrontend.Cstrategy <> exprlist_app def
R32243:32245 compcert.cfrontend.Cstrategy <> rl3 var
R32239:32241 compcert.cfrontend.Cstrategy <> rl2 var
R32221:32223 compcert.cfrontend.Cstrategy <> rl1 var
ind 32315:32326 <> contextlist'
constr 32364:32380 <> contextlist'_call
constr 32501:32520 <> contextlist'_builtin
R32343:32346 compcert.cfrontend.Csyntax <> expr ind
R32331:32338 compcert.cfrontend.Csyntax <> exprlist ind
R32434:32445 compcert.cfrontend.Cstrategy <> contextlist' ind
R32458:32458 compcert.cfrontend.Cstrategy <> C var
R32461:32465 compcert.cfrontend.Csyntax <> Ecall constr
R32492:32493 compcert.cfrontend.Cstrategy <> ty var
R32471:32482 compcert.cfrontend.Cstrategy <> exprlist_app def
R32488:32489 compcert.cfrontend.Cstrategy <> rl var
R32484:32486 compcert.cfrontend.Cstrategy <> rl0 var
R32467:32468 compcert.cfrontend.Cstrategy <> r1 var
R32409:32415 compcert.cfrontend.Csem <> context ind
R32423:32423 compcert.cfrontend.Cstrategy <> C var
R32420:32421 compcert.cfrontend.Csem <> RV constr
R32417:32418 compcert.cfrontend.Csem <> RV constr
R32581:32592 compcert.cfrontend.Cstrategy <> contextlist' ind
R32605:32605 compcert.cfrontend.Cstrategy <> C var
R32608:32615 compcert.cfrontend.Csyntax <> Ebuiltin constr
R32649:32650 compcert.cfrontend.Cstrategy <> ty var
R32628:32639 compcert.cfrontend.Cstrategy <> exprlist_app def
R32645:32646 compcert.cfrontend.Cstrategy <> rl var
R32641:32643 compcert.cfrontend.Cstrategy <> rl0 var
R32620:32625 compcert.cfrontend.Cstrategy <> tyargs var
R32617:32618 compcert.cfrontend.Cstrategy <> ef var
R32556:32562 compcert.cfrontend.Csem <> context ind
R32570:32570 compcert.cfrontend.Cstrategy <> C var
R32567:32568 compcert.cfrontend.Csem <> RV constr
R32564:32565 compcert.cfrontend.Csem <> RV constr
prf 32662:32681 <> exprlist_app_context
R32704:32714 compcert.cfrontend.Csem <> contextlist ind
R32729:32740 compcert.cfrontend.Cstrategy <> exprlist_app def
R32747:32751 compcert.cfrontend.Csyntax <> Econs constr
R32755:32757 compcert.cfrontend.Cstrategy <> rl2 var
R32753:32753 compcert.cfrontend.Cstrategy <> x var
R32742:32744 compcert.cfrontend.Cstrategy <> rl1 var
R32716:32717 compcert.cfrontend.Csem <> RV constr
R32810:32822 compcert.cfrontend.Csem <> ctx_list_head constr
R32810:32822 compcert.cfrontend.Csem <> ctx_list_head constr
R32846:32858 compcert.cfrontend.Csem <> ctx_list_tail constr
R32846:32858 compcert.cfrontend.Csem <> ctx_list_tail constr
prf 32880:32896 <> contextlist'_head
R32936:32942 compcert.cfrontend.Csem <> context ind
R32960:32960 compcert.cfrontend.Cstrategy <> C var
R32963:32967 compcert.cfrontend.Csyntax <> Econs constr
R32971:32972 compcert.cfrontend.Cstrategy <> rl var
R32969:32969 compcert.cfrontend.Cstrategy <> x var
R32947:32948 compcert.cfrontend.Csem <> RV constr
R32944:32945 compcert.cfrontend.Csem <> RV constr
R32916:32927 compcert.cfrontend.Cstrategy <> contextlist' ind
R32929:32929 compcert.cfrontend.Cstrategy <> C var
R33024:33028 compcert.cfrontend.Csyntax <> Ecall constr
R33034:33045 compcert.cfrontend.Cstrategy <> exprlist_app def
R33052:33056 compcert.cfrontend.Csyntax <> Econs constr
R33058:33058 compcert.cfrontend.Cstrategy <> x var
R33024:33028 compcert.cfrontend.Csyntax <> Ecall constr
R33034:33045 compcert.cfrontend.Cstrategy <> exprlist_app def
R33052:33056 compcert.cfrontend.Csyntax <> Econs constr
R33058:33058 compcert.cfrontend.Cstrategy <> x var
R33080:33086 compcert.cfrontend.Csem <> context ind
R33091:33092 compcert.cfrontend.Csem <> RV constr
R33088:33089 compcert.cfrontend.Csem <> RV constr
R33080:33086 compcert.cfrontend.Csem <> context ind
R33091:33092 compcert.cfrontend.Csem <> RV constr
R33088:33089 compcert.cfrontend.Csem <> RV constr
R33118:33137 compcert.cfrontend.Cstrategy <> exprlist_app_context thm
R33118:33137 compcert.cfrontend.Cstrategy <> exprlist_app_context thm
R33150:33156 compcert.cfrontend.Csem <> context ind
R33181:33181 compcert.cfrontend.Cstrategy <> x var
R33161:33162 compcert.cfrontend.Csem <> RV constr
R33158:33159 compcert.cfrontend.Csem <> RV constr
R33150:33156 compcert.cfrontend.Csem <> context ind
R33181:33181 compcert.cfrontend.Cstrategy <> x var
R33161:33162 compcert.cfrontend.Csem <> RV constr
R33158:33159 compcert.cfrontend.Csem <> RV constr
R33197:33211 compcert.cfrontend.Cstrategy <> context_compose thm
R33197:33211 compcert.cfrontend.Cstrategy <> context_compose thm
R33243:33250 compcert.cfrontend.Csyntax <> Ebuiltin constr
R33263:33274 compcert.cfrontend.Cstrategy <> exprlist_app def
R33281:33285 compcert.cfrontend.Csyntax <> Econs constr
R33287:33287 compcert.cfrontend.Cstrategy <> x var
R33243:33250 compcert.cfrontend.Csyntax <> Ebuiltin constr
R33263:33274 compcert.cfrontend.Cstrategy <> exprlist_app def
R33281:33285 compcert.cfrontend.Csyntax <> Econs constr
R33287:33287 compcert.cfrontend.Cstrategy <> x var
R33309:33315 compcert.cfrontend.Csem <> context ind
R33320:33321 compcert.cfrontend.Csem <> RV constr
R33317:33318 compcert.cfrontend.Csem <> RV constr
R33309:33315 compcert.cfrontend.Csem <> context ind
R33320:33321 compcert.cfrontend.Csem <> RV constr
R33317:33318 compcert.cfrontend.Csem <> RV constr
R33347:33366 compcert.cfrontend.Cstrategy <> exprlist_app_context thm
R33347:33366 compcert.cfrontend.Cstrategy <> exprlist_app_context thm
R33379:33385 compcert.cfrontend.Csem <> context ind
R33410:33410 compcert.cfrontend.Cstrategy <> x var
R33390:33391 compcert.cfrontend.Csem <> RV constr
R33387:33388 compcert.cfrontend.Csem <> RV constr
R33379:33385 compcert.cfrontend.Csem <> context ind
R33410:33410 compcert.cfrontend.Cstrategy <> x var
R33390:33391 compcert.cfrontend.Csem <> RV constr
R33387:33388 compcert.cfrontend.Csem <> RV constr
R33426:33440 compcert.cfrontend.Cstrategy <> context_compose thm
R33426:33440 compcert.cfrontend.Cstrategy <> context_compose thm
prf 33462:33478 <> contextlist'_tail
R33518:33529 compcert.cfrontend.Cstrategy <> contextlist' ind
R33541:33541 compcert.cfrontend.Cstrategy <> C var
R33544:33548 compcert.cfrontend.Csyntax <> Econs constr
R33553:33553 compcert.cfrontend.Cstrategy <> x var
R33550:33551 compcert.cfrontend.Cstrategy <> r1 var
R33498:33509 compcert.cfrontend.Cstrategy <> contextlist' ind
R33511:33511 compcert.cfrontend.Cstrategy <> C var
R33607:33611 compcert.cfrontend.Csyntax <> Ecall constr
R33617:33628 compcert.cfrontend.Cstrategy <> exprlist_app def
R33635:33639 compcert.cfrontend.Csyntax <> Econs constr
R33644:33644 compcert.cfrontend.Cstrategy <> x var
R33677:33681 compcert.cfrontend.Csyntax <> Ecall constr
R33687:33698 compcert.cfrontend.Cstrategy <> exprlist_app def
R33735:33735 compcert.cfrontend.Cstrategy <> x var
R33701:33712 compcert.cfrontend.Cstrategy <> exprlist_app def
R33719:33723 compcert.cfrontend.Csyntax <> Econs constr
R33728:33731 compcert.cfrontend.Csyntax <> Enil constr
R33677:33681 compcert.cfrontend.Csyntax <> Ecall constr
R33687:33698 compcert.cfrontend.Cstrategy <> exprlist_app def
R33735:33735 compcert.cfrontend.Cstrategy <> x var
R33701:33712 compcert.cfrontend.Cstrategy <> exprlist_app def
R33719:33723 compcert.cfrontend.Csyntax <> Econs constr
R33728:33731 compcert.cfrontend.Csyntax <> Enil constr
R33607:33611 compcert.cfrontend.Csyntax <> Ecall constr
R33617:33628 compcert.cfrontend.Cstrategy <> exprlist_app def
R33635:33639 compcert.cfrontend.Csyntax <> Econs constr
R33644:33644 compcert.cfrontend.Cstrategy <> x var
R33774:33787 compcert.lib.Axioms <> extensionality thm
R33774:33787 compcert.lib.Axioms <> extensionality thm
R33822:33839 compcert.cfrontend.Cstrategy <> exprlist_app_assoc thm
R33822:33839 compcert.cfrontend.Cstrategy <> exprlist_app_assoc thm
R33866:33873 compcert.cfrontend.Csyntax <> Ebuiltin constr
R33886:33897 compcert.cfrontend.Cstrategy <> exprlist_app def
R33904:33908 compcert.cfrontend.Csyntax <> Econs constr
R33913:33913 compcert.cfrontend.Cstrategy <> x var
R33946:33953 compcert.cfrontend.Csyntax <> Ebuiltin constr
R33966:33977 compcert.cfrontend.Cstrategy <> exprlist_app def
R34014:34014 compcert.cfrontend.Cstrategy <> x var
R33980:33991 compcert.cfrontend.Cstrategy <> exprlist_app def
R33998:34002 compcert.cfrontend.Csyntax <> Econs constr
R34007:34010 compcert.cfrontend.Csyntax <> Enil constr
R33946:33953 compcert.cfrontend.Csyntax <> Ebuiltin constr
R33966:33977 compcert.cfrontend.Cstrategy <> exprlist_app def
R34014:34014 compcert.cfrontend.Cstrategy <> x var
R33980:33991 compcert.cfrontend.Cstrategy <> exprlist_app def
R33998:34002 compcert.cfrontend.Csyntax <> Econs constr
R34007:34010 compcert.cfrontend.Csyntax <> Enil constr
R33866:33873 compcert.cfrontend.Csyntax <> Ebuiltin constr
R33886:33897 compcert.cfrontend.Cstrategy <> exprlist_app def
R33904:33908 compcert.cfrontend.Csyntax <> Econs constr
R33913:33913 compcert.cfrontend.Cstrategy <> x var
R34053:34066 compcert.lib.Axioms <> extensionality thm
R34053:34066 compcert.lib.Axioms <> extensionality thm
R34101:34118 compcert.cfrontend.Cstrategy <> exprlist_app_assoc thm
R34101:34118 compcert.cfrontend.Cstrategy <> exprlist_app_assoc thm
R34140:34156 compcert.cfrontend.Cstrategy <> contextlist'_head thm
R34158:34174 compcert.cfrontend.Cstrategy <> contextlist'_tail thm
prf 34184:34205 <> eval_simple_list_steps
R34283:34286 compcert.common.Smallstep <> star ind
R34348:34356 compcert.cfrontend.Csem <> ExprState constr
R34386:34386 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R34384:34384 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R34382:34382 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R34361:34361 compcert.cfrontend.Cstrategy <> C var
R34364:34372 compcert.cfrontend.Cstrategy <> rval_list def
R34377:34378 compcert.cfrontend.Cstrategy <> rl var
R34374:34375 compcert.cfrontend.Cstrategy <> vl var
R34358:34358 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R34344:34345 compcert.common.Events <> E0 def
R34302:34310 compcert.cfrontend.Csem <> ExprState constr
R34325:34325 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R34323:34323 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R34321:34321 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R34315:34315 compcert.cfrontend.Cstrategy <> C var
R34317:34318 compcert.cfrontend.Cstrategy <> rl var
R34312:34312 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R34298:34299 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R34288:34296 compcert.cfrontend.Csem <> step def
R34263:34274 compcert.cfrontend.Cstrategy <> contextlist' ind
R34276:34276 compcert.cfrontend.Cstrategy <> C var
R34224:34240 compcert.cfrontend.Cstrategy <> eval_simple_list' ind
R34245:34246 compcert.cfrontend.Cstrategy <> vl var
R34242:34243 compcert.cfrontend.Cstrategy <> rl var
R34439:34447 compcert.common.Smallstep <> star_refl constr
R34439:34447 compcert.common.Smallstep <> star_refl constr
R34470:34479 compcert.common.Smallstep <> star_trans thm
R34470:34479 compcert.common.Smallstep <> star_trans thm
R34538:34542 compcert.cfrontend.Csyntax <> Econs constr
R34544:34544 compcert.cfrontend.Cstrategy <> x var
R34491:34514 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R34538:34542 compcert.cfrontend.Csyntax <> Econs constr
R34544:34544 compcert.cfrontend.Cstrategy <> x var
R34491:34514 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R34609:34613 compcert.cfrontend.Csyntax <> Econs constr
R34635:34635 compcert.cfrontend.Cstrategy <> x var
R34616:34619 compcert.cfrontend.Csyntax <> Eval constr
R34624:34629 compcert.cfrontend.Csyntax <> typeof def
R34609:34613 compcert.cfrontend.Csyntax <> Econs constr
R34635:34635 compcert.cfrontend.Cstrategy <> x var
R34616:34619 compcert.cfrontend.Csyntax <> Eval constr
R34624:34629 compcert.cfrontend.Csyntax <> typeof def
prf 34666:34685 <> simple_list_can_eval
R34788:34794 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34797:34798 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34799:34815 compcert.cfrontend.Cstrategy <> eval_simple_list' ind
R34820:34821 compcert.cfrontend.Cstrategy <> vl var
R34817:34818 compcert.cfrontend.Cstrategy <> rl var
R34751:34754 compcert.cfrontend.Cstrategy <> safe def
R34757:34765 compcert.cfrontend.Csem <> ExprState constr
R34780:34780 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.m var
R34778:34778 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.e var
R34776:34776 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.k var
R34770:34770 compcert.cfrontend.Cstrategy <> C var
R34772:34773 compcert.cfrontend.Cstrategy <> rl var
R34767:34767 compcert.cfrontend.Cstrategy <> STRATEGY.SIMPLE_EVAL.f var
R34731:34742 compcert.cfrontend.Cstrategy <> contextlist' ind
R34744:34744 compcert.cfrontend.Cstrategy <> C var
R34718:34720 Coq.Init.Logic <> :type_scope:x_'='_x not
R34705:34714 compcert.cfrontend.Cstrategy <> simplelist def
R34716:34717 compcert.cfrontend.Cstrategy <> rl var
R34721:34724 Coq.Init.Datatypes <> true constr
R34908:34916 Coq.Init.Datatypes <> andb_prop thm
R34908:34916 Coq.Init.Datatypes <> andb_prop thm
R34938:34952 compcert.cfrontend.Cstrategy <> simple_can_eval thm
R34972:34976 compcert.cfrontend.Csyntax <> Econs constr
R34978:34978 compcert.cfrontend.Cstrategy <> x var
R34957:34958 compcert.cfrontend.Csem <> RV constr
R34938:34952 compcert.cfrontend.Cstrategy <> simple_can_eval thm
R34972:34976 compcert.cfrontend.Csyntax <> Econs constr
R34978:34978 compcert.cfrontend.Cstrategy <> x var
R34957:34958 compcert.cfrontend.Csem <> RV constr
R35041:35045 compcert.cfrontend.Csyntax <> Econs constr
R35069:35069 compcert.cfrontend.Cstrategy <> x var
R35048:35051 compcert.cfrontend.Csyntax <> Eval constr
R35057:35062 compcert.cfrontend.Csyntax <> typeof def
R35041:35045 compcert.cfrontend.Csyntax <> Econs constr
R35069:35069 compcert.cfrontend.Cstrategy <> x var
R35048:35051 compcert.cfrontend.Csyntax <> Eval constr
R35057:35062 compcert.cfrontend.Csyntax <> typeof def
R35091:35113 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_safe thm
R35127:35131 compcert.cfrontend.Csyntax <> Econs constr
R35133:35133 compcert.cfrontend.Cstrategy <> x var
R35091:35113 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_safe thm
R35127:35131 compcert.cfrontend.Csyntax <> Econs constr
R35133:35133 compcert.cfrontend.Cstrategy <> x var
R35180:35183 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R35180:35183 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
prf 35220:35239 <> rval_list_all_values
R35258:35276 compcert.cfrontend.Cstrategy <> exprlist_all_values def
R35279:35287 compcert.cfrontend.Cstrategy <> rval_list def
R35292:35293 compcert.cfrontend.Cstrategy <> rl var
R35289:35290 compcert.cfrontend.Cstrategy <> vl var
R35380:35390 compcert.cfrontend.Cstrategy STRATEGY.SIMPLE_EVAL <> sec
sec 35424:35436 STRATEGY DECOMPOSITION
var 35449:35449 STRATEGY.DECOMPOSITION f
R35452:35459 compcert.cfrontend.Csyntax <> function rec
var 35471:35471 STRATEGY.DECOMPOSITION k
R35474:35477 compcert.cfrontend.Csem <> cont ind
var 35489:35489 STRATEGY.DECOMPOSITION e
R35492:35494 compcert.cfrontend.Csem <> env def
var 35506:35506 STRATEGY.DECOMPOSITION m
R35509:35511 compcert.common.Memory <> mem syndef
def 35526:35543 <> simple_side_effect
R35549:35552 compcert.cfrontend.Csyntax <> expr ind
R35573:35573 compcert.cfrontend.Cstrategy <> r var
R35584:35589 compcert.cfrontend.Csyntax <> Evalof constr
R35613:35616 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R35606:35608 Coq.Init.Logic <> :type_scope:x_'='_x not
R35598:35603 compcert.cfrontend.Cstrategy <> simple def
R35609:35612 Coq.Init.Datatypes <> true constr
R35644:35646 Coq.Init.Logic <> :type_scope:x_'='_x not
R35617:35632 compcert.cfrontend.Ctypes <> type_is_volatile def
R35635:35640 compcert.cfrontend.Csyntax <> typeof def
R35647:35650 Coq.Init.Datatypes <> true constr
R35656:35662 compcert.cfrontend.Csyntax <> Eseqand constr
R35684:35686 Coq.Init.Logic <> :type_scope:x_'='_x not
R35675:35680 compcert.cfrontend.Cstrategy <> simple def
R35687:35690 Coq.Init.Datatypes <> true constr
R35696:35701 compcert.cfrontend.Csyntax <> Eseqor constr
R35723:35725 Coq.Init.Logic <> :type_scope:x_'='_x not
R35714:35719 compcert.cfrontend.Cstrategy <> simple def
R35726:35729 Coq.Init.Datatypes <> true constr
R35735:35744 compcert.cfrontend.Csyntax <> Econdition constr
R35769:35771 Coq.Init.Logic <> :type_scope:x_'='_x not
R35760:35765 compcert.cfrontend.Cstrategy <> simple def
R35772:35775 Coq.Init.Datatypes <> true constr
R35781:35787 compcert.cfrontend.Csyntax <> Eassign constr
R35816:35819 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R35809:35811 Coq.Init.Logic <> :type_scope:x_'='_x not
R35800:35805 compcert.cfrontend.Cstrategy <> simple def
R35812:35815 Coq.Init.Datatypes <> true constr
R35829:35831 Coq.Init.Logic <> :type_scope:x_'='_x not
R35820:35825 compcert.cfrontend.Cstrategy <> simple def
R35832:35835 Coq.Init.Datatypes <> true constr
R35841:35849 compcert.cfrontend.Csyntax <> Eassignop constr
R35882:35885 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R35875:35877 Coq.Init.Logic <> :type_scope:x_'='_x not
R35866:35871 compcert.cfrontend.Cstrategy <> simple def
R35878:35881 Coq.Init.Datatypes <> true constr
R35895:35897 Coq.Init.Logic <> :type_scope:x_'='_x not
R35886:35891 compcert.cfrontend.Cstrategy <> simple def
R35898:35901 Coq.Init.Datatypes <> true constr
R35907:35915 compcert.cfrontend.Csyntax <> Epostincr constr
R35936:35938 Coq.Init.Logic <> :type_scope:x_'='_x not
R35927:35932 compcert.cfrontend.Cstrategy <> simple def
R35939:35942 Coq.Init.Datatypes <> true constr
R35948:35953 compcert.cfrontend.Csyntax <> Ecomma constr
R35975:35977 Coq.Init.Logic <> :type_scope:x_'='_x not
R35966:35971 compcert.cfrontend.Cstrategy <> simple def
R35978:35981 Coq.Init.Datatypes <> true constr
R35987:35991 compcert.cfrontend.Csyntax <> Ecall constr
R36020:36023 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36013:36015 Coq.Init.Logic <> :type_scope:x_'='_x not
R36004:36009 compcert.cfrontend.Cstrategy <> simple def
R36016:36019 Coq.Init.Datatypes <> true constr
R36037:36039 Coq.Init.Logic <> :type_scope:x_'='_x not
R36024:36033 compcert.cfrontend.Cstrategy <> simplelist def
R36040:36043 Coq.Init.Datatypes <> true constr
R36049:36056 compcert.cfrontend.Csyntax <> Ebuiltin constr
R36089:36091 Coq.Init.Logic <> :type_scope:x_'='_x not
R36076:36085 compcert.cfrontend.Cstrategy <> simplelist def
R36092:36095 Coq.Init.Datatypes <> true constr
R36101:36106 compcert.cfrontend.Csyntax <> Eparen constr
R36125:36127 Coq.Init.Logic <> :type_scope:x_'='_x not
R36116:36121 compcert.cfrontend.Cstrategy <> simple def
R36128:36131 Coq.Init.Datatypes <> true constr
R36142:36146 Coq.Init.Logic <> False ind
def 36163:36171 <> expr_ind2
R36190:36193 compcert.cfrontend.Csyntax <> expr ind
def 36212:36224 <> exprlist_ind2
R36243:36250 compcert.cfrontend.Csyntax <> exprlist ind
def 36279:36296 <> expr_expr_list_ind
R36303:36311 compcert.cfrontend.Cstrategy <> expr_ind2 scheme
R36314:36326 compcert.cfrontend.Cstrategy <> exprlist_ind2 scheme
R36348:36358 compcert.cfrontend.Cstrategy <> leftcontext ind
R36360:36374 compcert.cfrontend.Cstrategy <> leftcontextlist ind
prf 36384:36397 <> decompose_expr
R36402:36402 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36590:36594 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36781:36781 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36500:36507 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R36493:36495 Coq.Init.Logic <> :type_scope:x_'='_x not
R36485:36490 compcert.cfrontend.Cstrategy <> simple def
R36492:36492 compcert.cfrontend.Cstrategy <> a var
R36496:36499 Coq.Init.Datatypes <> true constr
R36508:36514 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36517:36518 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36519:36525 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36528:36529 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36539:36542 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36531:36533 Coq.Init.Logic <> :type_scope:x_'='_x not
R36530:36530 compcert.cfrontend.Cstrategy <> a var
R36534:36535 compcert.cfrontend.Cstrategy <> C' var
R36537:36538 compcert.cfrontend.Cstrategy <> a' var
R36564:36567 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36543:36560 compcert.cfrontend.Cstrategy <> simple_side_effect def
R36562:36563 compcert.cfrontend.Cstrategy <> a' var
R36568:36578 compcert.cfrontend.Cstrategy <> leftcontext ind
R36588:36589 compcert.cfrontend.Cstrategy <> C' var
R36583:36586 compcert.cfrontend.Cstrategy <> from var
R36580:36581 compcert.cfrontend.Csem <> RV constr
R36444:36447 compcert.cfrontend.Cstrategy <> safe def
R36450:36458 compcert.cfrontend.Csem <> ExprState constr
R36472:36472 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.m var
R36470:36470 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.e var
R36468:36468 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.k var
R36463:36463 compcert.cfrontend.Cstrategy <> C var
R36465:36465 compcert.cfrontend.Cstrategy <> a var
R36460:36460 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.f var
R36423:36429 compcert.cfrontend.Csem <> context ind
R36439:36439 compcert.cfrontend.Cstrategy <> C var
R36436:36437 compcert.cfrontend.Csem <> RV constr
R36431:36434 compcert.cfrontend.Cstrategy <> from var
R36691:36698 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R36684:36686 Coq.Init.Logic <> :type_scope:x_'='_x not
R36671:36680 compcert.cfrontend.Cstrategy <> simplelist def
R36682:36683 compcert.cfrontend.Cstrategy <> rl var
R36687:36690 Coq.Init.Datatypes <> true constr
R36699:36705 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36708:36709 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36710:36716 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36719:36720 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36731:36734 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36723:36725 Coq.Init.Logic <> :type_scope:x_'='_x not
R36721:36722 compcert.cfrontend.Cstrategy <> rl var
R36726:36727 compcert.cfrontend.Cstrategy <> C' var
R36729:36730 compcert.cfrontend.Cstrategy <> a' var
R36756:36759 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36735:36752 compcert.cfrontend.Cstrategy <> simple_side_effect def
R36754:36755 compcert.cfrontend.Cstrategy <> a' var
R36760:36774 compcert.cfrontend.Cstrategy <> leftcontextlist ind
R36779:36780 compcert.cfrontend.Cstrategy <> C' var
R36776:36777 compcert.cfrontend.Csem <> RV constr
R36629:36632 compcert.cfrontend.Cstrategy <> safe def
R36635:36643 compcert.cfrontend.Csem <> ExprState constr
R36658:36658 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.m var
R36656:36656 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.e var
R36654:36654 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.k var
R36648:36648 compcert.cfrontend.Cstrategy <> C var
R36650:36651 compcert.cfrontend.Cstrategy <> rl var
R36645:36645 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.f var
R36611:36622 compcert.cfrontend.Cstrategy <> contextlist' ind
R36624:36624 compcert.cfrontend.Cstrategy <> C var
R36799:36816 compcert.cfrontend.Cstrategy <> expr_expr_list_ind scheme
R36799:36816 compcert.cfrontend.Cstrategy <> expr_expr_list_ind scheme
R36992:36992 compcert.cfrontend.Cstrategy <> x var
R37088:37088 compcert.cfrontend.Cstrategy <> x var
R37161:37161 compcert.cfrontend.Cstrategy <> x var
R37251:37256 compcert.cfrontend.Csyntax <> Efield constr
R37258:37258 compcert.cfrontend.Cstrategy <> x var
R37251:37256 compcert.cfrontend.Csyntax <> Efield constr
R37258:37258 compcert.cfrontend.Cstrategy <> x var
R37236:37237 compcert.cfrontend.Csem <> RV constr
R37310:37315 compcert.cfrontend.Csyntax <> Evalof constr
R37317:37317 compcert.cfrontend.Cstrategy <> x var
R37310:37315 compcert.cfrontend.Csyntax <> Evalof constr
R37317:37317 compcert.cfrontend.Cstrategy <> x var
R37295:37296 compcert.cfrontend.Csem <> LV constr
R37336:37351 compcert.cfrontend.Ctypes <> type_is_volatile def
R37354:37359 compcert.cfrontend.Csyntax <> typeof def
R37336:37351 compcert.cfrontend.Ctypes <> type_is_volatile def
R37354:37359 compcert.cfrontend.Csyntax <> typeof def
R37439:37444 compcert.cfrontend.Csyntax <> Ederef constr
R37446:37446 compcert.cfrontend.Cstrategy <> x var
R37439:37444 compcert.cfrontend.Csyntax <> Ederef constr
R37446:37446 compcert.cfrontend.Cstrategy <> x var
R37424:37425 compcert.cfrontend.Csem <> RV constr
R37495:37501 compcert.cfrontend.Csyntax <> Eaddrof constr
R37503:37503 compcert.cfrontend.Cstrategy <> x var
R37495:37501 compcert.cfrontend.Csyntax <> Eaddrof constr
R37503:37503 compcert.cfrontend.Cstrategy <> x var
R37480:37481 compcert.cfrontend.Csem <> LV constr
R37550:37554 compcert.cfrontend.Csyntax <> Eunop constr
R37559:37559 compcert.cfrontend.Cstrategy <> x var
R37550:37554 compcert.cfrontend.Csyntax <> Eunop constr
R37559:37559 compcert.cfrontend.Cstrategy <> x var
R37535:37536 compcert.cfrontend.Csem <> RV constr
R37607:37612 compcert.cfrontend.Csyntax <> Ebinop constr
R37617:37617 compcert.cfrontend.Cstrategy <> x var
R37607:37612 compcert.cfrontend.Csyntax <> Ebinop constr
R37617:37617 compcert.cfrontend.Cstrategy <> x var
R37592:37593 compcert.cfrontend.Csem <> RV constr
R37663:37668 compcert.cfrontend.Csyntax <> Ebinop constr
R37676:37676 compcert.cfrontend.Cstrategy <> x var
R37663:37668 compcert.cfrontend.Csyntax <> Ebinop constr
R37676:37676 compcert.cfrontend.Cstrategy <> x var
R37648:37649 compcert.cfrontend.Csem <> RV constr
R37723:37727 compcert.cfrontend.Csyntax <> Ecast constr
R37729:37729 compcert.cfrontend.Cstrategy <> x var
R37723:37727 compcert.cfrontend.Csyntax <> Ecast constr
R37729:37729 compcert.cfrontend.Cstrategy <> x var
R37708:37709 compcert.cfrontend.Csem <> RV constr
R37778:37784 compcert.cfrontend.Csyntax <> Eseqand constr
R37786:37786 compcert.cfrontend.Cstrategy <> x var
R37778:37784 compcert.cfrontend.Csyntax <> Eseqand constr
R37786:37786 compcert.cfrontend.Cstrategy <> x var
R37763:37764 compcert.cfrontend.Csem <> RV constr
R37843:37848 compcert.cfrontend.Csyntax <> Eseqor constr
R37850:37850 compcert.cfrontend.Cstrategy <> x var
R37843:37848 compcert.cfrontend.Csyntax <> Eseqor constr
R37850:37850 compcert.cfrontend.Cstrategy <> x var
R37828:37829 compcert.cfrontend.Csem <> RV constr
R37911:37920 compcert.cfrontend.Csyntax <> Econdition constr
R37922:37922 compcert.cfrontend.Cstrategy <> x var
R37911:37920 compcert.cfrontend.Csyntax <> Econdition constr
R37922:37922 compcert.cfrontend.Cstrategy <> x var
R37896:37897 compcert.cfrontend.Csem <> RV constr
R37983:37989 compcert.cfrontend.Csyntax <> Eassign constr
R37991:37991 compcert.cfrontend.Cstrategy <> x var
R37983:37989 compcert.cfrontend.Csyntax <> Eassign constr
R37991:37991 compcert.cfrontend.Cstrategy <> x var
R37968:37969 compcert.cfrontend.Csem <> LV constr
R38022:38028 compcert.cfrontend.Csyntax <> Eassign constr
R38032:38032 compcert.cfrontend.Cstrategy <> x var
R38022:38028 compcert.cfrontend.Csyntax <> Eassign constr
R38032:38032 compcert.cfrontend.Cstrategy <> x var
R38007:38008 compcert.cfrontend.Csem <> RV constr
R38089:38097 compcert.cfrontend.Csyntax <> Eassignop constr
R38102:38102 compcert.cfrontend.Cstrategy <> x var
R38089:38097 compcert.cfrontend.Csyntax <> Eassignop constr
R38102:38102 compcert.cfrontend.Cstrategy <> x var
R38074:38075 compcert.cfrontend.Csem <> LV constr
R38139:38147 compcert.cfrontend.Csyntax <> Eassignop constr
R38154:38154 compcert.cfrontend.Cstrategy <> x var
R38139:38147 compcert.cfrontend.Csyntax <> Eassignop constr
R38154:38154 compcert.cfrontend.Cstrategy <> x var
R38124:38125 compcert.cfrontend.Csem <> RV constr
R38217:38225 compcert.cfrontend.Csyntax <> Epostincr constr
R38230:38230 compcert.cfrontend.Cstrategy <> x var
R38217:38225 compcert.cfrontend.Csyntax <> Epostincr constr
R38230:38230 compcert.cfrontend.Cstrategy <> x var
R38202:38203 compcert.cfrontend.Csem <> LV constr
R38284:38289 compcert.cfrontend.Csyntax <> Ecomma constr
R38291:38291 compcert.cfrontend.Cstrategy <> x var
R38284:38289 compcert.cfrontend.Csyntax <> Ecomma constr
R38291:38291 compcert.cfrontend.Cstrategy <> x var
R38269:38270 compcert.cfrontend.Csem <> RV constr
R38347:38351 compcert.cfrontend.Csyntax <> Ecall constr
R38353:38353 compcert.cfrontend.Cstrategy <> x var
R38347:38351 compcert.cfrontend.Csyntax <> Ecall constr
R38353:38353 compcert.cfrontend.Cstrategy <> x var
R38332:38333 compcert.cfrontend.Csem <> RV constr
R38395:38399 compcert.cfrontend.Csyntax <> Ecall constr
R38404:38404 compcert.cfrontend.Cstrategy <> x var
R38395:38399 compcert.cfrontend.Csyntax <> Ecall constr
R38404:38404 compcert.cfrontend.Cstrategy <> x var
R38493:38496 compcert.cfrontend.Csyntax <> Enil constr
R38453:38469 compcert.cfrontend.Cstrategy <> contextlist'_call constr
R38493:38496 compcert.cfrontend.Csyntax <> Enil constr
R38453:38469 compcert.cfrontend.Cstrategy <> contextlist'_call constr
R38546:38550 compcert.cfrontend.Csyntax <> Ecall constr
R38559:38559 compcert.cfrontend.Cstrategy <> x var
R38546:38550 compcert.cfrontend.Csyntax <> Ecall constr
R38559:38559 compcert.cfrontend.Cstrategy <> x var
R38652:38659 compcert.cfrontend.Csyntax <> Ebuiltin constr
R38671:38671 compcert.cfrontend.Cstrategy <> x var
R38652:38659 compcert.cfrontend.Csyntax <> Ebuiltin constr
R38671:38671 compcert.cfrontend.Cstrategy <> x var
R38763:38766 compcert.cfrontend.Csyntax <> Enil constr
R38720:38739 compcert.cfrontend.Cstrategy <> contextlist'_builtin constr
R38763:38766 compcert.cfrontend.Csyntax <> Enil constr
R38720:38739 compcert.cfrontend.Cstrategy <> contextlist'_builtin constr
R38816:38823 compcert.cfrontend.Csyntax <> Ebuiltin constr
R38839:38839 compcert.cfrontend.Cstrategy <> x var
R38816:38823 compcert.cfrontend.Csyntax <> Ebuiltin constr
R38839:38839 compcert.cfrontend.Cstrategy <> x var
R38925:38930 compcert.cfrontend.Csyntax <> Eparen constr
R38932:38932 compcert.cfrontend.Cstrategy <> x var
R38925:38930 compcert.cfrontend.Csyntax <> Eparen constr
R38932:38932 compcert.cfrontend.Cstrategy <> x var
R38909:38910 compcert.cfrontend.Csem <> RV constr
R38987:38991 compcert.cfrontend.Csyntax <> Econs constr
R38993:38993 compcert.cfrontend.Cstrategy <> x var
R38971:38972 compcert.cfrontend.Csem <> RV constr
R38987:38991 compcert.cfrontend.Csyntax <> Econs constr
R38993:38993 compcert.cfrontend.Cstrategy <> x var
R38971:38972 compcert.cfrontend.Csem <> RV constr
R39042:39058 compcert.cfrontend.Cstrategy <> contextlist'_head thm
R39042:39058 compcert.cfrontend.Cstrategy <> contextlist'_head thm
R39102:39106 compcert.cfrontend.Csyntax <> Econs constr
R39111:39111 compcert.cfrontend.Cstrategy <> x var
R39102:39106 compcert.cfrontend.Csyntax <> Econs constr
R39111:39111 compcert.cfrontend.Cstrategy <> x var
R39159:39175 compcert.cfrontend.Cstrategy <> contextlist'_tail thm
R39159:39175 compcert.cfrontend.Cstrategy <> contextlist'_tail thm
R39249:39253 compcert.cfrontend.Csyntax <> Econs constr
R39262:39262 compcert.cfrontend.Cstrategy <> x var
R39249:39253 compcert.cfrontend.Csyntax <> Econs constr
R39262:39262 compcert.cfrontend.Cstrategy <> x var
R39323:39327 compcert.cfrontend.Csyntax <> Econs constr
R39333:39333 compcert.cfrontend.Cstrategy <> x var
R39323:39327 compcert.cfrontend.Csyntax <> Econs constr
R39333:39333 compcert.cfrontend.Cstrategy <> x var
prf 39382:39398 <> decompose_topexpr
R39467:39474 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R39460:39462 Coq.Init.Logic <> :type_scope:x_'='_x not
R39452:39457 compcert.cfrontend.Cstrategy <> simple def
R39459:39459 compcert.cfrontend.Cstrategy <> a var
R39463:39466 Coq.Init.Datatypes <> true constr
R39475:39481 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39483:39484 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39485:39491 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39494:39495 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39504:39507 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39497:39499 Coq.Init.Logic <> :type_scope:x_'='_x not
R39496:39496 compcert.cfrontend.Cstrategy <> a var
R39500:39500 compcert.cfrontend.Cstrategy <> C var
R39502:39503 compcert.cfrontend.Cstrategy <> a' var
R39529:39532 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39508:39525 compcert.cfrontend.Cstrategy <> simple_side_effect def
R39527:39528 compcert.cfrontend.Cstrategy <> a' var
R39533:39543 compcert.cfrontend.Cstrategy <> leftcontext ind
R39551:39551 compcert.cfrontend.Cstrategy <> C var
R39548:39549 compcert.cfrontend.Csem <> RV constr
R39545:39546 compcert.cfrontend.Csem <> RV constr
R39415:39418 compcert.cfrontend.Cstrategy <> safe def
R39421:39429 compcert.cfrontend.Csem <> ExprState constr
R39439:39439 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.m var
R39437:39437 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.e var
R39435:39435 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.k var
R39433:39433 compcert.cfrontend.Cstrategy <> a var
R39431:39431 compcert.cfrontend.Cstrategy <> STRATEGY.DECOMPOSITION.f var
R39579:39583 Coq.Init.Logic <> proj1 thm
R39585:39598 compcert.cfrontend.Cstrategy <> decompose_expr thm
R39579:39583 Coq.Init.Logic <> proj1 thm
R39585:39598 compcert.cfrontend.Cstrategy <> decompose_expr thm
R39608:39614 compcert.cfrontend.Csem <> ctx_top constr
R39608:39614 compcert.cfrontend.Csem <> ctx_top constr
R39633:39645 compcert.cfrontend.Cstrategy STRATEGY.DECOMPOSITION <> sec
prf 39691:39706 <> estep_simulation
R39744:39747 compcert.common.Smallstep <> plus ind
R39766:39767 compcert.cfrontend.Cstrategy <> S' var
R39764:39764 compcert.cfrontend.Cstrategy <> t var
R39762:39762 compcert.cfrontend.Cstrategy <> S var
R39759:39760 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R39749:39757 compcert.cfrontend.Csem <> step def
R39728:39732 compcert.cfrontend.Cstrategy <> estep ind
R39738:39739 compcert.cfrontend.Cstrategy <> S' var
R39736:39736 compcert.cfrontend.Cstrategy <> t var
R39734:39734 compcert.cfrontend.Cstrategy <> S var
R39818:39841 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R39882:39889 compcert.common.Smallstep <> star_inv thm
R40014:40023 compcert.common.Smallstep <> plus_right thm
R40014:40023 compcert.common.Smallstep <> plus_right thm
R40083:40088 compcert.cfrontend.Csyntax <> Evalof constr
R40093:40098 compcert.cfrontend.Csyntax <> typeof def
R40090:40090 compcert.cfrontend.Cstrategy <> x var
R40036:40059 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R40083:40088 compcert.cfrontend.Csyntax <> Evalof constr
R40093:40098 compcert.cfrontend.Csyntax <> typeof def
R40090:40090 compcert.cfrontend.Cstrategy <> x var
R40036:40059 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R40127:40135 compcert.cfrontend.Csem <> step_rred constr
R40127:40135 compcert.cfrontend.Csem <> step_rred constr
R40199:40208 compcert.common.Smallstep <> plus_right thm
R40199:40208 compcert.common.Smallstep <> plus_right thm
R40267:40273 compcert.cfrontend.Csyntax <> Eseqand constr
R40275:40275 compcert.cfrontend.Cstrategy <> x var
R40220:40243 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R40267:40273 compcert.cfrontend.Csyntax <> Eseqand constr
R40275:40275 compcert.cfrontend.Cstrategy <> x var
R40220:40243 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R40308:40316 compcert.cfrontend.Csem <> step_rred constr
R40308:40316 compcert.cfrontend.Csem <> step_rred constr
R40332:40346 compcert.cfrontend.Csem <> red_seqand_true constr
R40332:40346 compcert.cfrontend.Csem <> red_seqand_true constr
R40392:40401 compcert.common.Smallstep <> plus_right thm
R40392:40401 compcert.common.Smallstep <> plus_right thm
R40460:40466 compcert.cfrontend.Csyntax <> Eseqand constr
R40468:40468 compcert.cfrontend.Cstrategy <> x var
R40413:40436 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R40460:40466 compcert.cfrontend.Csyntax <> Eseqand constr
R40468:40468 compcert.cfrontend.Cstrategy <> x var
R40413:40436 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R40501:40509 compcert.cfrontend.Csem <> step_rred constr
R40501:40509 compcert.cfrontend.Csem <> step_rred constr
R40525:40540 compcert.cfrontend.Csem <> red_seqand_false constr
R40525:40540 compcert.cfrontend.Csem <> red_seqand_false constr
R40584:40593 compcert.common.Smallstep <> plus_right thm
R40584:40593 compcert.common.Smallstep <> plus_right thm
R40652:40657 compcert.cfrontend.Csyntax <> Eseqor constr
R40659:40659 compcert.cfrontend.Cstrategy <> x var
R40605:40628 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R40652:40657 compcert.cfrontend.Csyntax <> Eseqor constr
R40659:40659 compcert.cfrontend.Cstrategy <> x var
R40605:40628 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R40692:40700 compcert.cfrontend.Csem <> step_rred constr
R40692:40700 compcert.cfrontend.Csem <> step_rred constr
R40716:40729 compcert.cfrontend.Csem <> red_seqor_true constr
R40716:40729 compcert.cfrontend.Csem <> red_seqor_true constr
R40774:40783 compcert.common.Smallstep <> plus_right thm
R40774:40783 compcert.common.Smallstep <> plus_right thm
R40842:40847 compcert.cfrontend.Csyntax <> Eseqor constr
R40849:40849 compcert.cfrontend.Cstrategy <> x var
R40795:40818 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R40842:40847 compcert.cfrontend.Csyntax <> Eseqor constr
R40849:40849 compcert.cfrontend.Cstrategy <> x var
R40795:40818 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R40882:40890 compcert.cfrontend.Csem <> step_rred constr
R40882:40890 compcert.cfrontend.Csem <> step_rred constr
R40906:40920 compcert.cfrontend.Csem <> red_seqor_false constr
R40906:40920 compcert.cfrontend.Csem <> red_seqor_false constr
R40963:40972 compcert.common.Smallstep <> plus_right thm
R40963:40972 compcert.common.Smallstep <> plus_right thm
R41031:41040 compcert.cfrontend.Csyntax <> Econdition constr
R41042:41042 compcert.cfrontend.Cstrategy <> x var
R40984:41007 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R41031:41040 compcert.cfrontend.Csyntax <> Econdition constr
R41042:41042 compcert.cfrontend.Cstrategy <> x var
R40984:41007 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R41077:41085 compcert.cfrontend.Csem <> step_rred constr
R41077:41085 compcert.cfrontend.Csem <> step_rred constr
R41143:41157 compcert.common.Smallstep <> star_plus_trans thm
R41143:41157 compcert.common.Smallstep <> star_plus_trans thm
R41216:41222 compcert.cfrontend.Csyntax <> Eassign constr
R41229:41234 compcert.cfrontend.Csyntax <> typeof def
R41224:41224 compcert.cfrontend.Cstrategy <> x var
R41169:41192 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R41216:41222 compcert.cfrontend.Csyntax <> Eassign constr
R41229:41234 compcert.cfrontend.Csyntax <> typeof def
R41224:41224 compcert.cfrontend.Cstrategy <> x var
R41169:41192 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R41258:41267 compcert.common.Smallstep <> plus_right thm
R41258:41267 compcert.common.Smallstep <> plus_right thm
R41326:41332 compcert.cfrontend.Csyntax <> Eassign constr
R41361:41366 compcert.cfrontend.Csyntax <> typeof def
R41358:41358 compcert.cfrontend.Cstrategy <> x var
R41335:41338 compcert.cfrontend.Csyntax <> Eloc constr
R41347:41352 compcert.cfrontend.Csyntax <> typeof def
R41279:41302 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R41326:41332 compcert.cfrontend.Csyntax <> Eassign constr
R41361:41366 compcert.cfrontend.Csyntax <> typeof def
R41358:41358 compcert.cfrontend.Cstrategy <> x var
R41335:41338 compcert.cfrontend.Csyntax <> Eloc constr
R41347:41352 compcert.cfrontend.Csyntax <> typeof def
R41279:41302 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R41395:41403 compcert.cfrontend.Csem <> step_rred constr
R41395:41403 compcert.cfrontend.Csem <> step_rred constr
R41481:41495 compcert.common.Smallstep <> star_plus_trans thm
R41481:41495 compcert.common.Smallstep <> star_plus_trans thm
R41554:41562 compcert.cfrontend.Csyntax <> Eassignop constr
R41578:41583 compcert.cfrontend.Csyntax <> typeof def
R41567:41567 compcert.cfrontend.Cstrategy <> x var
R41507:41530 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R41554:41562 compcert.cfrontend.Csyntax <> Eassignop constr
R41578:41583 compcert.cfrontend.Csyntax <> typeof def
R41567:41567 compcert.cfrontend.Cstrategy <> x var
R41507:41530 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R41607:41621 compcert.common.Smallstep <> star_plus_trans thm
R41607:41621 compcert.common.Smallstep <> star_plus_trans thm
R41680:41688 compcert.cfrontend.Csyntax <> Eassignop constr
R41726:41731 compcert.cfrontend.Csyntax <> typeof def
R41717:41717 compcert.cfrontend.Cstrategy <> x var
R41694:41697 compcert.cfrontend.Csyntax <> Eloc constr
R41706:41711 compcert.cfrontend.Csyntax <> typeof def
R41633:41656 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R41680:41688 compcert.cfrontend.Csyntax <> Eassignop constr
R41726:41731 compcert.cfrontend.Csyntax <> typeof def
R41717:41717 compcert.cfrontend.Cstrategy <> x var
R41694:41697 compcert.cfrontend.Csyntax <> Eloc constr
R41706:41711 compcert.cfrontend.Csyntax <> typeof def
R41633:41656 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R41755:41763 compcert.common.Smallstep <> plus_left constr
R41755:41763 compcert.common.Smallstep <> plus_left constr
R41780:41788 compcert.cfrontend.Csem <> step_rred constr
R41780:41788 compcert.cfrontend.Csem <> step_rred constr
R41827:41835 compcert.common.Smallstep <> star_left thm
R41827:41835 compcert.common.Smallstep <> star_left thm
R41884:41890 compcert.cfrontend.Csyntax <> Eassign constr
R41919:41924 compcert.cfrontend.Csyntax <> typeof def
R41916:41916 compcert.cfrontend.Cstrategy <> x var
R41893:41896 compcert.cfrontend.Csyntax <> Eloc constr
R41905:41910 compcert.cfrontend.Csyntax <> typeof def
R41852:41860 compcert.cfrontend.Csem <> step_rred constr
R41884:41890 compcert.cfrontend.Csyntax <> Eassign constr
R41919:41924 compcert.cfrontend.Csyntax <> typeof def
R41916:41916 compcert.cfrontend.Cstrategy <> x var
R41893:41896 compcert.cfrontend.Csyntax <> Eloc constr
R41905:41910 compcert.cfrontend.Csyntax <> typeof def
R41852:41860 compcert.cfrontend.Csem <> step_rred constr
R41970:41977 compcert.common.Smallstep <> star_one thm
R41970:41977 compcert.common.Smallstep <> star_one thm
R41995:42003 compcert.cfrontend.Csem <> step_rred constr
R41995:42003 compcert.cfrontend.Csem <> step_rred constr
R42114:42128 compcert.common.Smallstep <> star_plus_trans thm
R42114:42128 compcert.common.Smallstep <> star_plus_trans thm
R42187:42195 compcert.cfrontend.Csyntax <> Eassignop constr
R42211:42216 compcert.cfrontend.Csyntax <> typeof def
R42200:42200 compcert.cfrontend.Cstrategy <> x var
R42140:42163 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R42187:42195 compcert.cfrontend.Csyntax <> Eassignop constr
R42211:42216 compcert.cfrontend.Csyntax <> typeof def
R42200:42200 compcert.cfrontend.Cstrategy <> x var
R42140:42163 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R42240:42254 compcert.common.Smallstep <> star_plus_trans thm
R42240:42254 compcert.common.Smallstep <> star_plus_trans thm
R42313:42321 compcert.cfrontend.Csyntax <> Eassignop constr
R42359:42364 compcert.cfrontend.Csyntax <> typeof def
R42350:42350 compcert.cfrontend.Cstrategy <> x var
R42327:42330 compcert.cfrontend.Csyntax <> Eloc constr
R42339:42344 compcert.cfrontend.Csyntax <> typeof def
R42266:42289 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R42313:42321 compcert.cfrontend.Csyntax <> Eassignop constr
R42359:42364 compcert.cfrontend.Csyntax <> typeof def
R42350:42350 compcert.cfrontend.Cstrategy <> x var
R42327:42330 compcert.cfrontend.Csyntax <> Eloc constr
R42339:42344 compcert.cfrontend.Csyntax <> typeof def
R42266:42289 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R42388:42396 compcert.common.Smallstep <> plus_left constr
R42388:42396 compcert.common.Smallstep <> plus_left constr
R42413:42421 compcert.cfrontend.Csem <> step_rred constr
R42413:42421 compcert.cfrontend.Csem <> step_rred constr
R42463:42482 compcert.cfrontend.Cop <> sem_binary_operation def
R42505:42510 compcert.cfrontend.Csyntax <> typeof def
R42491:42496 compcert.cfrontend.Csyntax <> typeof def
R42463:42482 compcert.cfrontend.Cop <> sem_binary_operation def
R42505:42510 compcert.cfrontend.Csyntax <> typeof def
R42491:42496 compcert.cfrontend.Csyntax <> typeof def
R42543:42551 compcert.common.Smallstep <> star_left thm
R42543:42551 compcert.common.Smallstep <> star_left thm
R42600:42606 compcert.cfrontend.Csyntax <> Eassign constr
R42635:42640 compcert.cfrontend.Csyntax <> typeof def
R42632:42632 compcert.cfrontend.Cstrategy <> x var
R42609:42612 compcert.cfrontend.Csyntax <> Eloc constr
R42621:42626 compcert.cfrontend.Csyntax <> typeof def
R42568:42576 compcert.cfrontend.Csem <> step_rred constr
R42600:42606 compcert.cfrontend.Csyntax <> Eassign constr
R42635:42640 compcert.cfrontend.Csyntax <> typeof def
R42632:42632 compcert.cfrontend.Cstrategy <> x var
R42609:42612 compcert.cfrontend.Csyntax <> Eloc constr
R42621:42626 compcert.cfrontend.Csyntax <> typeof def
R42568:42576 compcert.cfrontend.Csem <> step_rred constr
R42686:42693 compcert.common.Smallstep <> star_one thm
R42686:42693 compcert.common.Smallstep <> star_one thm
R42712:42721 compcert.cfrontend.Csem <> step_stuck constr
R42712:42721 compcert.cfrontend.Csem <> step_stuck constr
R42754:42765 compcert.cfrontend.Cstrategy <> imm_safe_inv thm
R42875:42882 compcert.common.Smallstep <> star_one thm
R42875:42882 compcert.common.Smallstep <> star_one thm
R42933:42939 compcert.cfrontend.Csyntax <> Eassign constr
R42968:42973 compcert.cfrontend.Csyntax <> typeof def
R42965:42965 compcert.cfrontend.Cstrategy <> x var
R42942:42945 compcert.cfrontend.Csyntax <> Eloc constr
R42954:42959 compcert.cfrontend.Csyntax <> typeof def
R42900:42909 compcert.cfrontend.Csem <> step_stuck constr
R42933:42939 compcert.cfrontend.Csyntax <> Eassign constr
R42968:42973 compcert.cfrontend.Csyntax <> typeof def
R42965:42965 compcert.cfrontend.Cstrategy <> x var
R42942:42945 compcert.cfrontend.Csyntax <> Eloc constr
R42954:42959 compcert.cfrontend.Csyntax <> typeof def
R42900:42909 compcert.cfrontend.Csem <> step_stuck constr
R43011:43022 compcert.cfrontend.Cstrategy <> imm_safe_inv thm
R43129:43143 compcert.common.Smallstep <> star_plus_trans thm
R43129:43143 compcert.common.Smallstep <> star_plus_trans thm
R43202:43210 compcert.cfrontend.Csyntax <> Epostincr constr
R43218:43223 compcert.cfrontend.Csyntax <> typeof def
R43215:43215 compcert.cfrontend.Cstrategy <> x var
R43155:43178 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R43202:43210 compcert.cfrontend.Csyntax <> Epostincr constr
R43218:43223 compcert.cfrontend.Csyntax <> typeof def
R43215:43215 compcert.cfrontend.Cstrategy <> x var
R43155:43178 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R43247:43255 compcert.common.Smallstep <> plus_left constr
R43247:43255 compcert.common.Smallstep <> plus_left constr
R43272:43280 compcert.cfrontend.Csem <> step_rred constr
R43272:43280 compcert.cfrontend.Csem <> step_rred constr
R43319:43327 compcert.common.Smallstep <> star_left thm
R43319:43327 compcert.common.Smallstep <> star_left thm
R43377:43382 compcert.cfrontend.Csyntax <> Ecomma constr
R43453:43458 compcert.cfrontend.Csyntax <> typeof def
R43432:43435 compcert.cfrontend.Csyntax <> Eval constr
R43441:43446 compcert.cfrontend.Csyntax <> typeof def
R43385:43391 compcert.cfrontend.Csyntax <> Eassign constr
R43420:43425 compcert.cfrontend.Csyntax <> typeof def
R43417:43417 compcert.cfrontend.Cstrategy <> x var
R43394:43397 compcert.cfrontend.Csyntax <> Eloc constr
R43406:43411 compcert.cfrontend.Csyntax <> typeof def
R43344:43352 compcert.cfrontend.Csem <> step_rred constr
R43377:43382 compcert.cfrontend.Csyntax <> Ecomma constr
R43453:43458 compcert.cfrontend.Csyntax <> typeof def
R43432:43435 compcert.cfrontend.Csyntax <> Eval constr
R43441:43446 compcert.cfrontend.Csyntax <> typeof def
R43385:43391 compcert.cfrontend.Csyntax <> Eassign constr
R43420:43425 compcert.cfrontend.Csyntax <> typeof def
R43417:43417 compcert.cfrontend.Cstrategy <> x var
R43394:43397 compcert.cfrontend.Csyntax <> Eloc constr
R43406:43411 compcert.cfrontend.Csyntax <> typeof def
R43344:43352 compcert.cfrontend.Csem <> step_rred constr
R43547:43555 compcert.common.Smallstep <> star_left thm
R43547:43555 compcert.common.Smallstep <> star_left thm
R43605:43610 compcert.cfrontend.Csyntax <> Ecomma constr
R43636:43641 compcert.cfrontend.Csyntax <> typeof def
R43615:43618 compcert.cfrontend.Csyntax <> Eval constr
R43624:43629 compcert.cfrontend.Csyntax <> typeof def
R43612:43612 compcert.cfrontend.Cstrategy <> x var
R43572:43580 compcert.cfrontend.Csem <> step_rred constr
R43605:43610 compcert.cfrontend.Csyntax <> Ecomma constr
R43636:43641 compcert.cfrontend.Csyntax <> typeof def
R43615:43618 compcert.cfrontend.Csyntax <> Eval constr
R43624:43629 compcert.cfrontend.Csyntax <> typeof def
R43612:43612 compcert.cfrontend.Cstrategy <> x var
R43572:43580 compcert.cfrontend.Csem <> step_rred constr
R43687:43694 compcert.common.Smallstep <> star_one thm
R43687:43694 compcert.common.Smallstep <> star_one thm
R43711:43719 compcert.cfrontend.Csem <> step_rred constr
R43711:43719 compcert.cfrontend.Csem <> step_rred constr
R43830:43844 compcert.common.Smallstep <> star_plus_trans thm
R43830:43844 compcert.common.Smallstep <> star_plus_trans thm
R43903:43911 compcert.cfrontend.Csyntax <> Epostincr constr
R43919:43924 compcert.cfrontend.Csyntax <> typeof def
R43916:43916 compcert.cfrontend.Cstrategy <> x var
R43856:43879 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R43903:43911 compcert.cfrontend.Csyntax <> Epostincr constr
R43919:43924 compcert.cfrontend.Csyntax <> typeof def
R43916:43916 compcert.cfrontend.Cstrategy <> x var
R43856:43879 compcert.cfrontend.Cstrategy <> eval_simple_lvalue_steps thm
R43948:43956 compcert.common.Smallstep <> plus_left constr
R43948:43956 compcert.common.Smallstep <> plus_left constr
R43973:43981 compcert.cfrontend.Csem <> step_rred constr
R43973:43981 compcert.cfrontend.Csem <> step_rred constr
R44038:44041 compcert.cfrontend.Cop <> Incr constr
R44046:44049 compcert.cfrontend.Cop <> Oadd constr
R44053:44056 compcert.cfrontend.Cop <> Decr constr
R44061:44064 compcert.cfrontend.Cop <> Osub constr
R44038:44041 compcert.cfrontend.Cop <> Incr constr
R44046:44049 compcert.cfrontend.Cop <> Oadd constr
R44053:44056 compcert.cfrontend.Cop <> Decr constr
R44061:44064 compcert.cfrontend.Cop <> Osub constr
R44153:44169 Coq.Init.Logic <> :type_scope:x_'='_x not
R44087:44106 compcert.cfrontend.Cop <> sem_binary_operation def
R44140:44150 compcert.cfrontend.Ctypes <> type_int32s def
R44126:44129 compcert.common.Values <> Vint constr
R44131:44137 compcert.lib.Integers Int one def
R44115:44120 compcert.cfrontend.Csyntax <> typeof def
R44170:44181 compcert.cfrontend.Cop <> sem_incrdecr def
R44190:44195 compcert.cfrontend.Csyntax <> typeof def
R44153:44169 Coq.Init.Logic <> :type_scope:x_'='_x not
R44087:44106 compcert.cfrontend.Cop <> sem_binary_operation def
R44140:44150 compcert.cfrontend.Ctypes <> type_int32s def
R44126:44129 compcert.common.Values <> Vint constr
R44131:44137 compcert.lib.Integers Int one def
R44115:44120 compcert.cfrontend.Csyntax <> typeof def
R44170:44181 compcert.cfrontend.Cop <> sem_incrdecr def
R44190:44195 compcert.cfrontend.Csyntax <> typeof def
R44237:44248 compcert.cfrontend.Cop <> sem_incrdecr def
R44257:44262 compcert.cfrontend.Csyntax <> typeof def
R44237:44248 compcert.cfrontend.Cop <> sem_incrdecr def
R44257:44262 compcert.cfrontend.Csyntax <> typeof def
R44287:44295 compcert.common.Smallstep <> star_left thm
R44287:44295 compcert.common.Smallstep <> star_left thm
R44345:44350 compcert.cfrontend.Csyntax <> Ecomma constr
R44421:44426 compcert.cfrontend.Csyntax <> typeof def
R44400:44403 compcert.cfrontend.Csyntax <> Eval constr
R44409:44414 compcert.cfrontend.Csyntax <> typeof def
R44353:44359 compcert.cfrontend.Csyntax <> Eassign constr
R44388:44393 compcert.cfrontend.Csyntax <> typeof def
R44385:44385 compcert.cfrontend.Cstrategy <> x var
R44362:44365 compcert.cfrontend.Csyntax <> Eloc constr
R44374:44379 compcert.cfrontend.Csyntax <> typeof def
R44312:44320 compcert.cfrontend.Csem <> step_rred constr
R44345:44350 compcert.cfrontend.Csyntax <> Ecomma constr
R44421:44426 compcert.cfrontend.Csyntax <> typeof def
R44400:44403 compcert.cfrontend.Csyntax <> Eval constr
R44409:44414 compcert.cfrontend.Csyntax <> typeof def
R44353:44359 compcert.cfrontend.Csyntax <> Eassign constr
R44388:44393 compcert.cfrontend.Csyntax <> typeof def
R44385:44385 compcert.cfrontend.Cstrategy <> x var
R44362:44365 compcert.cfrontend.Csyntax <> Eloc constr
R44374:44379 compcert.cfrontend.Csyntax <> typeof def
R44312:44320 compcert.cfrontend.Csem <> step_rred constr
R44472:44479 compcert.common.Smallstep <> star_one thm
R44472:44479 compcert.common.Smallstep <> star_one thm
R44531:44536 compcert.cfrontend.Csyntax <> Ecomma constr
R44562:44567 compcert.cfrontend.Csyntax <> typeof def
R44541:44544 compcert.cfrontend.Csyntax <> Eval constr
R44550:44555 compcert.cfrontend.Csyntax <> typeof def
R44538:44538 compcert.cfrontend.Cstrategy <> x var
R44497:44506 compcert.cfrontend.Csem <> step_stuck constr
R44531:44536 compcert.cfrontend.Csyntax <> Ecomma constr
R44562:44567 compcert.cfrontend.Csyntax <> typeof def
R44541:44544 compcert.cfrontend.Csyntax <> Eval constr
R44550:44555 compcert.cfrontend.Csyntax <> typeof def
R44538:44538 compcert.cfrontend.Cstrategy <> x var
R44497:44506 compcert.cfrontend.Csem <> step_stuck constr
R44605:44616 compcert.cfrontend.Cstrategy <> imm_safe_inv thm
R44725:44732 compcert.common.Smallstep <> star_one thm
R44725:44732 compcert.common.Smallstep <> star_one thm
R44784:44789 compcert.cfrontend.Csyntax <> Ecomma constr
R44860:44865 compcert.cfrontend.Csyntax <> typeof def
R44839:44842 compcert.cfrontend.Csyntax <> Eval constr
R44848:44853 compcert.cfrontend.Csyntax <> typeof def
R44792:44798 compcert.cfrontend.Csyntax <> Eassign constr
R44827:44832 compcert.cfrontend.Csyntax <> typeof def
R44824:44824 compcert.cfrontend.Cstrategy <> x var
R44801:44804 compcert.cfrontend.Csyntax <> Eloc constr
R44813:44818 compcert.cfrontend.Csyntax <> typeof def
R44750:44759 compcert.cfrontend.Csem <> step_stuck constr
R44784:44789 compcert.cfrontend.Csyntax <> Ecomma constr
R44860:44865 compcert.cfrontend.Csyntax <> typeof def
R44839:44842 compcert.cfrontend.Csyntax <> Eval constr
R44848:44853 compcert.cfrontend.Csyntax <> typeof def
R44792:44798 compcert.cfrontend.Csyntax <> Eassign constr
R44827:44832 compcert.cfrontend.Csyntax <> typeof def
R44824:44824 compcert.cfrontend.Cstrategy <> x var
R44801:44804 compcert.cfrontend.Csyntax <> Eloc constr
R44813:44818 compcert.cfrontend.Csyntax <> typeof def
R44750:44759 compcert.cfrontend.Csem <> step_stuck constr
R44903:44914 compcert.cfrontend.Cstrategy <> imm_safe_inv thm
R45006:45015 compcert.common.Smallstep <> plus_right thm
R45006:45015 compcert.common.Smallstep <> plus_right thm
R45074:45079 compcert.cfrontend.Csyntax <> Ecomma constr
R45087:45092 compcert.cfrontend.Csyntax <> typeof def
R45081:45081 compcert.cfrontend.Cstrategy <> x var
R45027:45050 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R45074:45079 compcert.cfrontend.Csyntax <> Ecomma constr
R45087:45092 compcert.cfrontend.Csyntax <> typeof def
R45081:45081 compcert.cfrontend.Cstrategy <> x var
R45027:45050 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R45122:45130 compcert.cfrontend.Csem <> step_rred constr
R45122:45130 compcert.cfrontend.Csem <> step_rred constr
R45188:45197 compcert.common.Smallstep <> plus_right thm
R45188:45197 compcert.common.Smallstep <> plus_right thm
R45263:45268 compcert.cfrontend.Csyntax <> Eparen constr
R45270:45270 compcert.cfrontend.Cstrategy <> x var
R45216:45239 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R45263:45268 compcert.cfrontend.Csyntax <> Eparen constr
R45270:45270 compcert.cfrontend.Cstrategy <> x var
R45216:45239 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R45299:45307 compcert.cfrontend.Csem <> step_rred constr
R45299:45307 compcert.cfrontend.Csem <> step_rred constr
R45365:45388 compcert.cfrontend.Cstrategy <> eval_simple_list_implies thm
R45427:45441 compcert.common.Smallstep <> star_plus_trans thm
R45427:45441 compcert.common.Smallstep <> star_plus_trans thm
R45501:45505 compcert.cfrontend.Csyntax <> Ecall constr
R45507:45507 compcert.cfrontend.Cstrategy <> x var
R45454:45477 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R45501:45505 compcert.cfrontend.Csyntax <> Ecall constr
R45507:45507 compcert.cfrontend.Cstrategy <> x var
R45454:45477 compcert.cfrontend.Cstrategy <> eval_simple_rvalue_steps thm
R45537:45546 compcert.common.Smallstep <> plus_right thm
R45537:45546 compcert.common.Smallstep <> plus_right thm
R45603:45607 compcert.cfrontend.Csyntax <> Ecall constr
R45631:45631 compcert.cfrontend.Cstrategy <> x var
R45610:45613 compcert.cfrontend.Csyntax <> Eval constr
R45619:45624 compcert.cfrontend.Csyntax <> typeof def
R45558:45579 compcert.cfrontend.Cstrategy <> eval_simple_list_steps thm
R45603:45607 compcert.cfrontend.Csyntax <> Ecall constr
R45631:45631 compcert.cfrontend.Cstrategy <> x var
R45610:45613 compcert.cfrontend.Csyntax <> Eval constr
R45619:45624 compcert.cfrontend.Csyntax <> typeof def
R45558:45579 compcert.cfrontend.Cstrategy <> eval_simple_list_steps thm
R45686:45689 compcert.cfrontend.Csyntax <> Enil constr
R45655:45671 compcert.cfrontend.Cstrategy <> contextlist'_call constr
R45686:45689 compcert.cfrontend.Csyntax <> Enil constr
R45655:45671 compcert.cfrontend.Cstrategy <> contextlist'_call constr
R45713:45726 compcert.cfrontend.Csem <> step_call constr
R45713:45726 compcert.cfrontend.Csem <> step_call constr
R45798:45821 compcert.cfrontend.Cstrategy <> eval_simple_list_implies thm
R45860:45869 compcert.common.Smallstep <> plus_right thm
R45860:45869 compcert.common.Smallstep <> plus_right thm
R45926:45933 compcert.cfrontend.Csyntax <> Ebuiltin constr
R45945:45945 compcert.cfrontend.Cstrategy <> x var
R45881:45902 compcert.cfrontend.Cstrategy <> eval_simple_list_steps thm
R45926:45933 compcert.cfrontend.Csyntax <> Ebuiltin constr
R45945:45945 compcert.cfrontend.Cstrategy <> x var
R45881:45902 compcert.cfrontend.Cstrategy <> eval_simple_list_steps thm
R46003:46006 compcert.cfrontend.Csyntax <> Enil constr
R45969:45988 compcert.cfrontend.Cstrategy <> contextlist'_builtin constr
R46003:46006 compcert.cfrontend.Csyntax <> Enil constr
R45969:45988 compcert.cfrontend.Cstrategy <> contextlist'_builtin constr
R46030:46043 compcert.cfrontend.Csem <> step_rred constr
R46030:46043 compcert.cfrontend.Csem <> step_rred constr
prf 46098:46106 <> can_estep
R46215:46221 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46223:46224 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46225:46231 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46233:46234 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46235:46239 compcert.cfrontend.Cstrategy <> estep ind
R46265:46265 compcert.cfrontend.Cstrategy <> S var
R46263:46263 compcert.cfrontend.Cstrategy <> t var
R46242:46250 compcert.cfrontend.Csem <> ExprState constr
R46260:46260 compcert.cfrontend.Cstrategy <> m var
R46258:46258 compcert.cfrontend.Cstrategy <> e var
R46256:46256 compcert.cfrontend.Cstrategy <> k var
R46254:46254 compcert.cfrontend.Cstrategy <> a var
R46252:46252 compcert.cfrontend.Cstrategy <> f var
R46169:46169 compcert.cfrontend.Cstrategy <> a var
R46176:46179 compcert.cfrontend.Csyntax <> Eval constr
R46188:46192 Coq.Init.Logic <> False ind
R46201:46204 Coq.Init.Logic <> True ind
R46131:46134 compcert.cfrontend.Cstrategy <> safe def
R46137:46145 compcert.cfrontend.Csem <> ExprState constr
R46155:46155 compcert.cfrontend.Cstrategy <> m var
R46153:46153 compcert.cfrontend.Cstrategy <> e var
R46151:46151 compcert.cfrontend.Cstrategy <> k var
R46149:46149 compcert.cfrontend.Cstrategy <> a var
R46147:46147 compcert.cfrontend.Cstrategy <> f var
R46295:46311 compcert.cfrontend.Cstrategy <> decompose_topexpr thm
R46295:46311 compcert.cfrontend.Cstrategy <> decompose_topexpr thm
R46383:46397 compcert.cfrontend.Cstrategy <> simple_can_eval thm
R46422:46422 compcert.cfrontend.Cstrategy <> x var
R46409:46410 compcert.cfrontend.Csem <> RV constr
R46383:46397 compcert.cfrontend.Cstrategy <> simple_can_eval thm
R46422:46422 compcert.cfrontend.Cstrategy <> x var
R46409:46410 compcert.cfrontend.Csem <> RV constr
R46484:46492 compcert.cfrontend.Cstrategy <> step_expr constr
R46484:46492 compcert.cfrontend.Cstrategy <> step_expr constr
R46630:46649 compcert.cfrontend.Cstrategy <> simple_can_eval_lval thm
R46673:46678 compcert.cfrontend.Csyntax <> Evalof constr
R46680:46680 compcert.cfrontend.Cstrategy <> x var
R46630:46649 compcert.cfrontend.Cstrategy <> simple_can_eval_lval thm
R46673:46678 compcert.cfrontend.Csyntax <> Evalof constr
R46680:46680 compcert.cfrontend.Cstrategy <> x var
R46735:46742 compcert.cfrontend.Cstrategy <> safe_inv thm
R46829:46848 compcert.cfrontend.Cstrategy <> step_rvalof_volatile constr
R46829:46848 compcert.cfrontend.Cstrategy <> step_rvalof_volatile constr
R46895:46914 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R46939:46945 compcert.cfrontend.Csyntax <> Eseqand constr
R46947:46947 compcert.cfrontend.Cstrategy <> x var
R46895:46914 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R46939:46945 compcert.cfrontend.Csyntax <> Eseqand constr
R46947:46947 compcert.cfrontend.Cstrategy <> x var
R46999:47006 compcert.cfrontend.Cstrategy <> safe_inv thm
R47100:47115 compcert.cfrontend.Cstrategy <> step_seqand_true constr
R47100:47115 compcert.cfrontend.Cstrategy <> step_seqand_true constr
R47163:47179 compcert.cfrontend.Cstrategy <> step_seqand_false constr
R47163:47179 compcert.cfrontend.Cstrategy <> step_seqand_false constr
R47213:47232 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R47257:47262 compcert.cfrontend.Csyntax <> Eseqor constr
R47264:47264 compcert.cfrontend.Cstrategy <> x var
R47213:47232 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R47257:47262 compcert.cfrontend.Csyntax <> Eseqor constr
R47264:47264 compcert.cfrontend.Cstrategy <> x var
R47316:47323 compcert.cfrontend.Cstrategy <> safe_inv thm
R47417:47431 compcert.cfrontend.Cstrategy <> step_seqor_true constr
R47417:47431 compcert.cfrontend.Cstrategy <> step_seqor_true constr
R47479:47494 compcert.cfrontend.Cstrategy <> step_seqor_false constr
R47479:47494 compcert.cfrontend.Cstrategy <> step_seqor_false constr
R47532:47551 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R47576:47585 compcert.cfrontend.Csyntax <> Econdition constr
R47587:47587 compcert.cfrontend.Cstrategy <> x var
R47532:47551 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R47576:47585 compcert.cfrontend.Csyntax <> Econdition constr
R47587:47587 compcert.cfrontend.Cstrategy <> x var
R47642:47649 compcert.cfrontend.Cstrategy <> safe_inv thm
R47729:47742 compcert.cfrontend.Cstrategy <> step_condition constr
R47729:47742 compcert.cfrontend.Cstrategy <> step_condition constr
R47791:47810 compcert.cfrontend.Cstrategy <> simple_can_eval_lval thm
R47835:47841 compcert.cfrontend.Csyntax <> Eassign constr
R47843:47843 compcert.cfrontend.Cstrategy <> x var
R47791:47810 compcert.cfrontend.Cstrategy <> simple_can_eval_lval thm
R47835:47841 compcert.cfrontend.Csyntax <> Eassign constr
R47843:47843 compcert.cfrontend.Cstrategy <> x var
R47901:47920 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R47945:47951 compcert.cfrontend.Csyntax <> Eassign constr
R47978:47978 compcert.cfrontend.Cstrategy <> x var
R47954:47957 compcert.cfrontend.Csyntax <> Eloc constr
R47966:47971 compcert.cfrontend.Csyntax <> typeof def
R47901:47920 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R47945:47951 compcert.cfrontend.Csyntax <> Eassign constr
R47978:47978 compcert.cfrontend.Cstrategy <> x var
R47954:47957 compcert.cfrontend.Csyntax <> Eloc constr
R47966:47971 compcert.cfrontend.Csyntax <> typeof def
R48026:48033 compcert.cfrontend.Cstrategy <> safe_inv thm
R48130:48140 compcert.cfrontend.Cstrategy <> step_assign constr
R48130:48140 compcert.cfrontend.Cstrategy <> step_assign constr
R48191:48210 compcert.cfrontend.Cstrategy <> simple_can_eval_lval thm
R48235:48243 compcert.cfrontend.Csyntax <> Eassignop constr
R48248:48248 compcert.cfrontend.Cstrategy <> x var
R48191:48210 compcert.cfrontend.Cstrategy <> simple_can_eval_lval thm
R48235:48243 compcert.cfrontend.Csyntax <> Eassignop constr
R48248:48248 compcert.cfrontend.Cstrategy <> x var
R48312:48331 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R48356:48364 compcert.cfrontend.Csyntax <> Eassignop constr
R48394:48394 compcert.cfrontend.Cstrategy <> x var
R48370:48373 compcert.cfrontend.Csyntax <> Eloc constr
R48382:48387 compcert.cfrontend.Csyntax <> typeof def
R48312:48331 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R48356:48364 compcert.cfrontend.Csyntax <> Eassignop constr
R48394:48394 compcert.cfrontend.Cstrategy <> x var
R48370:48373 compcert.cfrontend.Csyntax <> Eloc constr
R48382:48387 compcert.cfrontend.Csyntax <> typeof def
R48448:48455 compcert.cfrontend.Cstrategy <> safe_inv thm
R48519:48538 compcert.cfrontend.Cop <> sem_binary_operation def
R48561:48566 compcert.cfrontend.Csyntax <> typeof def
R48547:48552 compcert.cfrontend.Csyntax <> typeof def
R48519:48538 compcert.cfrontend.Cop <> sem_binary_operation def
R48561:48566 compcert.cfrontend.Csyntax <> typeof def
R48547:48552 compcert.cfrontend.Csyntax <> typeof def
R48603:48610 compcert.cfrontend.Cop <> sem_cast def
R48622:48627 compcert.cfrontend.Csyntax <> typeof def
R48603:48610 compcert.cfrontend.Cop <> sem_cast def
R48622:48627 compcert.cfrontend.Csyntax <> typeof def
R48662:48668 Coq.Logic.Classical_Prop <> classic prfax
R48671:48677 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48680:48681 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48682:48688 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48691:48692 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48693:48702 compcert.cfrontend.Csem <> assign_loc ind
R48733:48734 compcert.cfrontend.Cstrategy <> m' var
R48730:48731 compcert.cfrontend.Cstrategy <> t2 var
R48708:48713 compcert.cfrontend.Csyntax <> typeof def
R48704:48705 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R48662:48668 Coq.Logic.Classical_Prop <> classic prfax
R48671:48677 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48680:48681 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48682:48688 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48691:48692 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48693:48702 compcert.cfrontend.Csem <> assign_loc ind
R48733:48734 compcert.cfrontend.Cstrategy <> m' var
R48730:48731 compcert.cfrontend.Cstrategy <> t2 var
R48708:48713 compcert.cfrontend.Csyntax <> typeof def
R48704:48705 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R48806:48818 compcert.cfrontend.Cstrategy <> step_assignop constr
R48806:48818 compcert.cfrontend.Cstrategy <> step_assignop constr
R48865:48883 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R48865:48883 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R49020:49038 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R49020:49038 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R49123:49141 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R49123:49141 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R49200:49219 compcert.cfrontend.Cstrategy <> simple_can_eval_lval thm
R49243:49251 compcert.cfrontend.Csyntax <> Epostincr constr
R49256:49256 compcert.cfrontend.Cstrategy <> x var
R49200:49219 compcert.cfrontend.Cstrategy <> simple_can_eval_lval thm
R49243:49251 compcert.cfrontend.Csyntax <> Epostincr constr
R49256:49256 compcert.cfrontend.Cstrategy <> x var
R49311:49318 compcert.cfrontend.Cstrategy <> safe_inv thm
R49381:49392 compcert.cfrontend.Cop <> sem_incrdecr def
R49381:49392 compcert.cfrontend.Cop <> sem_incrdecr def
R49432:49439 compcert.cfrontend.Cop <> sem_cast def
R49445:49457 compcert.cfrontend.Cop <> incrdecr_type def
R49432:49439 compcert.cfrontend.Cop <> sem_cast def
R49445:49457 compcert.cfrontend.Cop <> incrdecr_type def
R49495:49501 Coq.Logic.Classical_Prop <> classic prfax
R49504:49510 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49513:49514 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49515:49521 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49524:49525 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49526:49535 compcert.cfrontend.Csem <> assign_loc ind
R49558:49559 compcert.cfrontend.Cstrategy <> m' var
R49555:49556 compcert.cfrontend.Cstrategy <> t2 var
R49537:49538 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R49495:49501 Coq.Logic.Classical_Prop <> classic prfax
R49504:49510 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49513:49514 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49515:49521 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49524:49525 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49526:49535 compcert.cfrontend.Csem <> assign_loc ind
R49558:49559 compcert.cfrontend.Cstrategy <> m' var
R49555:49556 compcert.cfrontend.Cstrategy <> t2 var
R49537:49538 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R49631:49643 compcert.cfrontend.Cstrategy <> step_postincr constr
R49631:49643 compcert.cfrontend.Cstrategy <> step_postincr constr
R49690:49708 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R49690:49708 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R49851:49869 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R49851:49869 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R49954:49972 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R49954:49972 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R50028:50047 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R50072:50077 compcert.cfrontend.Csyntax <> Ecomma constr
R50079:50079 compcert.cfrontend.Cstrategy <> x var
R50028:50047 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R50072:50077 compcert.cfrontend.Csyntax <> Ecomma constr
R50079:50079 compcert.cfrontend.Cstrategy <> x var
R50131:50138 compcert.cfrontend.Cstrategy <> safe_inv thm
R50214:50223 compcert.cfrontend.Cstrategy <> step_comma constr
R50214:50223 compcert.cfrontend.Cstrategy <> step_comma constr
R50269:50288 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R50312:50316 compcert.cfrontend.Csyntax <> Ecall constr
R50318:50318 compcert.cfrontend.Cstrategy <> x var
R50269:50288 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R50312:50316 compcert.cfrontend.Csyntax <> Ecall constr
R50318:50318 compcert.cfrontend.Cstrategy <> x var
R50388:50392 compcert.cfrontend.Csyntax <> Ecall constr
R50415:50415 compcert.cfrontend.Cstrategy <> x var
R50395:50398 compcert.cfrontend.Csyntax <> Eval constr
R50404:50409 compcert.cfrontend.Csyntax <> typeof def
R50388:50392 compcert.cfrontend.Csyntax <> Ecall constr
R50415:50415 compcert.cfrontend.Cstrategy <> x var
R50395:50398 compcert.cfrontend.Csyntax <> Eval constr
R50404:50409 compcert.cfrontend.Csyntax <> typeof def
R50433:50444 compcert.cfrontend.Cstrategy <> contextlist' ind
R50433:50444 compcert.cfrontend.Cstrategy <> contextlist' ind
R50500:50503 compcert.cfrontend.Csyntax <> Enil constr
R50469:50485 compcert.cfrontend.Cstrategy <> contextlist'_call constr
R50500:50503 compcert.cfrontend.Csyntax <> Enil constr
R50469:50485 compcert.cfrontend.Cstrategy <> contextlist'_call constr
R50524:50543 compcert.cfrontend.Cstrategy <> simple_list_can_eval thm
R50524:50543 compcert.cfrontend.Cstrategy <> simple_list_can_eval thm
R50599:50606 compcert.cfrontend.Cstrategy <> safe_inv thm
R50619:50637 compcert.cfrontend.Cstrategy <> leftcontext_context thm
R50619:50637 compcert.cfrontend.Cstrategy <> leftcontext_context thm
R50659:50668 compcert.cfrontend.Cstrategy <> safe_steps thm
R50659:50668 compcert.cfrontend.Cstrategy <> safe_steps thm
R50691:50712 compcert.cfrontend.Cstrategy <> eval_simple_list_steps thm
R50691:50712 compcert.cfrontend.Cstrategy <> eval_simple_list_steps thm
R50782:50801 compcert.cfrontend.Cstrategy <> rval_list_all_values thm
R50782:50801 compcert.cfrontend.Cstrategy <> rval_list_all_values thm
R50904:50912 compcert.cfrontend.Cstrategy <> step_call constr
R50904:50912 compcert.cfrontend.Cstrategy <> step_call constr
R50929:50948 compcert.cfrontend.Cstrategy <> can_eval_simple_list thm
R50929:50948 compcert.cfrontend.Cstrategy <> can_eval_simple_list thm
R50998:51005 compcert.cfrontend.Csyntax <> Ebuiltin constr
R51017:51017 compcert.cfrontend.Cstrategy <> x var
R50998:51005 compcert.cfrontend.Csyntax <> Ebuiltin constr
R51017:51017 compcert.cfrontend.Cstrategy <> x var
R51035:51046 compcert.cfrontend.Cstrategy <> contextlist' ind
R51035:51046 compcert.cfrontend.Cstrategy <> contextlist' ind
R51105:51108 compcert.cfrontend.Csyntax <> Enil constr
R51071:51090 compcert.cfrontend.Cstrategy <> contextlist'_builtin constr
R51105:51108 compcert.cfrontend.Csyntax <> Enil constr
R51071:51090 compcert.cfrontend.Cstrategy <> contextlist'_builtin constr
R51129:51148 compcert.cfrontend.Cstrategy <> simple_list_can_eval thm
R51129:51148 compcert.cfrontend.Cstrategy <> simple_list_can_eval thm
R51203:51210 compcert.cfrontend.Cstrategy <> safe_inv thm
R51223:51241 compcert.cfrontend.Cstrategy <> leftcontext_context thm
R51223:51241 compcert.cfrontend.Cstrategy <> leftcontext_context thm
R51263:51272 compcert.cfrontend.Cstrategy <> safe_steps thm
R51263:51272 compcert.cfrontend.Cstrategy <> safe_steps thm
R51294:51315 compcert.cfrontend.Cstrategy <> eval_simple_list_steps thm
R51294:51315 compcert.cfrontend.Cstrategy <> eval_simple_list_steps thm
R51384:51403 compcert.cfrontend.Cstrategy <> rval_list_all_values thm
R51384:51403 compcert.cfrontend.Cstrategy <> rval_list_all_values thm
R51483:51494 compcert.cfrontend.Cstrategy <> step_builtin constr
R51483:51494 compcert.cfrontend.Cstrategy <> step_builtin constr
R51513:51532 compcert.cfrontend.Cstrategy <> can_eval_simple_list thm
R51513:51532 compcert.cfrontend.Cstrategy <> can_eval_simple_list thm
R51566:51585 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R51609:51614 compcert.cfrontend.Csyntax <> Eparen constr
R51616:51616 compcert.cfrontend.Cstrategy <> x var
R51566:51585 compcert.cfrontend.Cstrategy <> simple_can_eval_rval thm
R51609:51614 compcert.cfrontend.Csyntax <> Eparen constr
R51616:51616 compcert.cfrontend.Cstrategy <> x var
R51665:51672 compcert.cfrontend.Cstrategy <> safe_inv thm
R51754:51763 compcert.cfrontend.Cstrategy <> step_paren constr
R51754:51763 compcert.cfrontend.Cstrategy <> step_paren constr
prf 51821:51835 <> step_simulation
R51874:51877 compcert.common.Smallstep <> plus ind
R51897:51898 compcert.cfrontend.Cstrategy <> S2 var
R51895:51895 compcert.cfrontend.Cstrategy <> t var
R51892:51893 compcert.cfrontend.Cstrategy <> S1 var
R51889:51890 compcert.cfrontend.Cstrategy <> STRATEGY.ge var
R51879:51887 compcert.cfrontend.Csem <> step def
R51858:51861 compcert.cfrontend.Cstrategy <> step def
R51868:51869 compcert.cfrontend.Cstrategy <> S2 var
R51866:51866 compcert.cfrontend.Cstrategy <> t var
R51863:51864 compcert.cfrontend.Cstrategy <> S1 var
R51933:51948 compcert.cfrontend.Cstrategy <> estep_simulation thm
R51933:51948 compcert.cfrontend.Cstrategy <> estep_simulation thm
R51965:51972 compcert.common.Smallstep <> plus_one thm
R51965:51972 compcert.common.Smallstep <> plus_one thm
prf 52002:52009 <> progress
R52036:52036 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R52062:52067 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R52100:52100 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R52037:52043 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52045:52046 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52047:52057 compcert.cfrontend.Csem <> final_state ind
R52061:52061 compcert.cfrontend.Cstrategy <> r var
R52059:52059 compcert.cfrontend.Cstrategy <> S var
R52068:52074 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52076:52077 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52078:52084 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52087:52088 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52089:52092 compcert.cfrontend.Cstrategy <> step def
R52098:52099 compcert.cfrontend.Cstrategy <> S' var
R52096:52096 compcert.cfrontend.Cstrategy <> t var
R52094:52094 compcert.cfrontend.Cstrategy <> S var
R52026:52029 compcert.cfrontend.Cstrategy <> safe def
R52031:52031 compcert.cfrontend.Cstrategy <> S var
R52137:52145 compcert.common.Smallstep <> star_refl constr
R52137:52145 compcert.common.Smallstep <> star_refl constr
R52269:52275 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52277:52278 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52279:52285 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52288:52289 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52290:52294 compcert.cfrontend.Cstrategy <> estep ind
R52300:52301 compcert.cfrontend.Cstrategy <> S' var
R52298:52298 compcert.cfrontend.Cstrategy <> t var
R52269:52275 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52277:52278 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52279:52285 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52288:52289 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52290:52294 compcert.cfrontend.Cstrategy <> estep ind
R52300:52301 compcert.cfrontend.Cstrategy <> S' var
R52298:52298 compcert.cfrontend.Cstrategy <> t var
R52343:52351 compcert.cfrontend.Cstrategy <> can_estep thm
R52343:52351 compcert.cfrontend.Cstrategy <> can_estep thm
R52402:52410 compcert.cfrontend.Cstrategy <> can_estep thm
R52402:52410 compcert.cfrontend.Cstrategy <> can_estep thm
R52478:52486 compcert.cfrontend.Cstrategy <> can_estep thm
R52478:52486 compcert.cfrontend.Cstrategy <> can_estep thm
R52555:52564 compcert.cfrontend.Csem <> Stuckstate constr
R52555:52564 compcert.cfrontend.Csem <> Stuckstate constr
R52574:52581 compcert.common.Smallstep <> star_one thm
R52574:52581 compcert.common.Smallstep <> star_one thm
R52815:52822 compcert.cfrontend.Cstrategy STRATEGY <> sec
def 52886:52894 <> semantics
R52900:52906 compcert.cfrontend.Csyntax <> program def
R52914:52922 compcert.common.Smallstep <> Semantics constr
R52960:52973 compcert.common.Globalenvs Genv globalenv def
R52975:52975 compcert.cfrontend.Cstrategy <> p var
R52947:52957 compcert.cfrontend.Csem <> final_state ind
R52930:52942 compcert.cfrontend.Csem <> initial_state ind
R52944:52944 compcert.cfrontend.Cstrategy <> p var
R52924:52927 compcert.cfrontend.Cstrategy <> step def
prf 53045:53059 <> deref_loc_trace
R53080:53085 compcert.common.Globalenvs Genv t rec
R53089:53089 compcert.cfrontend.Cstrategy <> V var
R53087:53087 compcert.cfrontend.Cstrategy <> F var
R53149:53149 compcert.cfrontend.Cstrategy <> t var
R53156:53158 Coq.Init.Datatypes <> nil constr
R53163:53166 Coq.Init.Logic <> True ind
R53172:53175 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R53176:53178 Coq.Init.Datatypes <> nil constr
R53183:53186 Coq.Init.Logic <> True ind
R53195:53199 Coq.Init.Logic <> False ind
R53110:53118 compcert.cfrontend.Csem <> deref_loc ind
R53136:53136 compcert.cfrontend.Cstrategy <> v var
R53134:53134 compcert.cfrontend.Cstrategy <> t var
R53130:53132 compcert.cfrontend.Cstrategy <> ofs var
R53128:53128 compcert.cfrontend.Cstrategy <> b var
R53126:53126 compcert.cfrontend.Cstrategy <> m var
R53123:53124 compcert.cfrontend.Cstrategy <> ty var
R53120:53121 compcert.cfrontend.Cstrategy <> ge var
prf 53278:53296 <> deref_loc_receptive
R53317:53322 compcert.common.Globalenvs Genv t rec
R53326:53326 compcert.cfrontend.Cstrategy <> V var
R53324:53324 compcert.cfrontend.Cstrategy <> F var
R53454:53457 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53448:53450 Coq.Init.Logic <> :type_scope:x_'='_x not
R53446:53447 compcert.cfrontend.Cstrategy <> t1 var
R53451:53453 Coq.Init.Datatypes <> nil constr
R53458:53464 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53467:53468 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53469:53477 compcert.cfrontend.Csem <> deref_loc ind
R53506:53507 compcert.cfrontend.Cstrategy <> v' var
R53497:53500 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R53494:53496 compcert.cfrontend.Cstrategy <> ev2 var
R53501:53503 Coq.Init.Datatypes <> nil constr
R53489:53491 compcert.cfrontend.Cstrategy <> ofs var
R53487:53487 compcert.cfrontend.Cstrategy <> b var
R53485:53485 compcert.cfrontend.Cstrategy <> m var
R53482:53483 compcert.cfrontend.Cstrategy <> ty var
R53479:53480 compcert.cfrontend.Cstrategy <> ge var
R53399:53410 compcert.common.Events <> match_traces ind
R53432:53435 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R53429:53431 compcert.cfrontend.Cstrategy <> ev2 var
R53436:53438 Coq.Init.Datatypes <> nil constr
R53419:53422 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R53416:53418 compcert.cfrontend.Cstrategy <> ev1 var
R53423:53425 Coq.Init.Datatypes <> nil constr
R53412:53413 compcert.cfrontend.Cstrategy <> ge var
R53356:53364 compcert.cfrontend.Csem <> deref_loc ind
R53392:53392 compcert.cfrontend.Cstrategy <> v var
R53384:53387 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R53381:53383 compcert.cfrontend.Cstrategy <> ev1 var
R53388:53389 compcert.cfrontend.Cstrategy <> t1 var
R53376:53378 compcert.cfrontend.Cstrategy <> ofs var
R53374:53374 compcert.cfrontend.Cstrategy <> b var
R53372:53372 compcert.cfrontend.Cstrategy <> m var
R53369:53370 compcert.cfrontend.Cstrategy <> ty var
R53366:53367 compcert.cfrontend.Cstrategy <> ge var
R53539:53541 Coq.Init.Logic <> :type_scope:x_'='_x not
R53542:53544 Coq.Init.Datatypes <> nil constr
R53539:53541 Coq.Init.Logic <> :type_scope:x_'='_x not
R53542:53544 Coq.Init.Datatypes <> nil constr
R53556:53570 compcert.cfrontend.Cstrategy <> deref_loc_trace thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R53624:53646 compcert.common.Events <> volatile_load_receptive thm
prf 53732:53747 <> assign_loc_trace
R53768:53773 compcert.common.Globalenvs Genv t rec
R53777:53777 compcert.cfrontend.Cstrategy <> V var
R53775:53775 compcert.cfrontend.Cstrategy <> F var
R53844:53844 compcert.cfrontend.Cstrategy <> t var
R53851:53853 Coq.Init.Datatypes <> nil constr
R53858:53861 Coq.Init.Logic <> True ind
R53867:53870 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R53871:53873 Coq.Init.Datatypes <> nil constr
R53878:53889 compcert.common.Events <> output_event def
R53901:53905 Coq.Init.Logic <> False ind
R53801:53810 compcert.cfrontend.Csem <> assign_loc ind
R53830:53831 compcert.cfrontend.Cstrategy <> m' var
R53828:53828 compcert.cfrontend.Cstrategy <> t var
R53826:53826 compcert.cfrontend.Cstrategy <> v var
R53822:53824 compcert.cfrontend.Cstrategy <> ofs var
R53820:53820 compcert.cfrontend.Cstrategy <> b var
R53818:53818 compcert.cfrontend.Cstrategy <> m var
R53815:53816 compcert.cfrontend.Cstrategy <> ty var
R53812:53813 compcert.cfrontend.Cstrategy <> ge var
prf 53984:54003 <> assign_loc_receptive
R54024:54029 compcert.common.Globalenvs Genv t rec
R54033:54033 compcert.cfrontend.Cstrategy <> V var
R54031:54031 compcert.cfrontend.Cstrategy <> F var
R54169:54171 Coq.Init.Logic <> :type_scope:x_'='_x not
R54163:54166 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54160:54162 compcert.cfrontend.Cstrategy <> ev1 var
R54167:54168 compcert.cfrontend.Cstrategy <> t1 var
R54175:54178 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54172:54174 compcert.cfrontend.Cstrategy <> ev2 var
R54179:54181 Coq.Init.Datatypes <> nil constr
R54113:54124 compcert.common.Events <> match_traces ind
R54146:54149 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54143:54145 compcert.cfrontend.Cstrategy <> ev2 var
R54150:54152 Coq.Init.Datatypes <> nil constr
R54133:54136 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54130:54132 compcert.cfrontend.Cstrategy <> ev1 var
R54137:54139 Coq.Init.Datatypes <> nil constr
R54126:54127 compcert.cfrontend.Cstrategy <> ge var
R54066:54075 compcert.cfrontend.Csem <> assign_loc ind
R54105:54106 compcert.cfrontend.Cstrategy <> m' var
R54097:54100 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R54094:54096 compcert.cfrontend.Cstrategy <> ev1 var
R54101:54102 compcert.cfrontend.Cstrategy <> t1 var
R54091:54091 compcert.cfrontend.Cstrategy <> v var
R54087:54089 compcert.cfrontend.Cstrategy <> ofs var
R54085:54085 compcert.cfrontend.Cstrategy <> b var
R54083:54083 compcert.cfrontend.Cstrategy <> m var
R54080:54081 compcert.cfrontend.Cstrategy <> ty var
R54077:54078 compcert.cfrontend.Cstrategy <> ge var
R54213:54215 Coq.Init.Logic <> :type_scope:x_'='_x not
R54216:54218 Coq.Init.Datatypes <> nil constr
R54213:54215 Coq.Init.Logic <> :type_scope:x_'='_x not
R54216:54218 Coq.Init.Datatypes <> nil constr
R54230:54245 compcert.cfrontend.Cstrategy <> assign_loc_trace thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R54298:54321 compcert.common.Events <> volatile_store_receptive thm
R54298:54321 compcert.common.Events <> volatile_store_receptive thm
prf 54344:54371 <> semantics_strongly_receptive
R54387:54404 compcert.common.Smallstep <> strongly_receptive rec
R54407:54415 compcert.cfrontend.Cstrategy <> semantics def
R54417:54417 compcert.cfrontend.Cstrategy <> p var
R54551:54569 compcert.cfrontend.Cstrategy <> deref_loc_receptive thm
R54642:54661 compcert.cfrontend.Cstrategy <> step_rvalof_volatile constr
R54642:54661 compcert.cfrontend.Cstrategy <> step_rvalof_volatile constr
R54697:54716 compcert.cfrontend.Cstrategy <> assign_loc_receptive thm
R54872:54891 compcert.cfrontend.Cstrategy <> assign_loc_receptive thm
R54985:55003 compcert.cfrontend.Cstrategy <> deref_loc_receptive thm
R55056:55075 compcert.cfrontend.Cop <> sem_binary_operation def
R55099:55104 compcert.cfrontend.Csyntax <> typeof def
R55085:55090 compcert.cfrontend.Csyntax <> typeof def
R55056:55075 compcert.cfrontend.Cop <> sem_binary_operation def
R55099:55104 compcert.cfrontend.Csyntax <> typeof def
R55085:55090 compcert.cfrontend.Csyntax <> typeof def
R55141:55148 compcert.cfrontend.Cop <> sem_cast def
R55161:55166 compcert.cfrontend.Csyntax <> typeof def
R55141:55148 compcert.cfrontend.Cop <> sem_cast def
R55161:55166 compcert.cfrontend.Csyntax <> typeof def
R55201:55207 Coq.Logic.Classical_Prop <> classic prfax
R55210:55216 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55220:55221 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55222:55228 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55232:55233 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55234:55243 compcert.cfrontend.Csem <> assign_loc ind
R55291:55293 compcert.cfrontend.Cstrategy <> m'' var
R55287:55289 compcert.cfrontend.Cstrategy <> t2' var
R55265:55270 compcert.cfrontend.Csyntax <> typeof def
R55246:55259 compcert.common.Globalenvs Genv globalenv def
R55201:55207 Coq.Logic.Classical_Prop <> classic prfax
R55210:55216 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55220:55221 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55222:55228 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55232:55233 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55234:55243 compcert.cfrontend.Csem <> assign_loc ind
R55291:55293 compcert.cfrontend.Cstrategy <> m'' var
R55287:55289 compcert.cfrontend.Cstrategy <> t2' var
R55265:55270 compcert.cfrontend.Csyntax <> typeof def
R55246:55259 compcert.common.Globalenvs Genv globalenv def
R55374:55386 compcert.cfrontend.Cstrategy <> step_assignop constr
R55374:55386 compcert.cfrontend.Cstrategy <> step_assignop constr
R55477:55495 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R55477:55495 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R55656:55674 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R55656:55674 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R55782:55800 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R55782:55800 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R55883:55901 compcert.cfrontend.Cstrategy <> deref_loc_receptive thm
R55954:55973 compcert.cfrontend.Cop <> sem_binary_operation def
R55997:56002 compcert.cfrontend.Csyntax <> typeof def
R55983:55988 compcert.cfrontend.Csyntax <> typeof def
R55954:55973 compcert.cfrontend.Cop <> sem_binary_operation def
R55997:56002 compcert.cfrontend.Csyntax <> typeof def
R55983:55988 compcert.cfrontend.Csyntax <> typeof def
R56039:56046 compcert.cfrontend.Cop <> sem_cast def
R56059:56064 compcert.cfrontend.Csyntax <> typeof def
R56039:56046 compcert.cfrontend.Cop <> sem_cast def
R56059:56064 compcert.cfrontend.Csyntax <> typeof def
R56099:56105 Coq.Logic.Classical_Prop <> classic prfax
R56108:56114 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56118:56119 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56120:56126 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56130:56131 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56132:56141 compcert.cfrontend.Csem <> assign_loc ind
R56189:56191 compcert.cfrontend.Cstrategy <> m'' var
R56185:56187 compcert.cfrontend.Cstrategy <> t2' var
R56163:56168 compcert.cfrontend.Csyntax <> typeof def
R56144:56157 compcert.common.Globalenvs Genv globalenv def
R56099:56105 Coq.Logic.Classical_Prop <> classic prfax
R56108:56114 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56118:56119 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56120:56126 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56130:56131 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56132:56141 compcert.cfrontend.Csem <> assign_loc ind
R56189:56191 compcert.cfrontend.Cstrategy <> m'' var
R56185:56187 compcert.cfrontend.Cstrategy <> t2' var
R56163:56168 compcert.cfrontend.Csyntax <> typeof def
R56144:56157 compcert.common.Globalenvs Genv globalenv def
R56272:56284 compcert.cfrontend.Cstrategy <> step_assignop constr
R56272:56284 compcert.cfrontend.Cstrategy <> step_assignop constr
R56375:56393 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R56375:56393 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R56553:56571 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R56553:56571 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R56679:56697 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R56679:56697 compcert.cfrontend.Cstrategy <> step_assignop_stuck constr
R56828:56847 compcert.cfrontend.Cstrategy <> assign_loc_receptive thm
R56940:56958 compcert.cfrontend.Cstrategy <> deref_loc_receptive thm
R57011:57022 compcert.cfrontend.Cop <> sem_incrdecr def
R57032:57037 compcert.cfrontend.Csyntax <> typeof def
R57011:57022 compcert.cfrontend.Cop <> sem_incrdecr def
R57032:57037 compcert.cfrontend.Csyntax <> typeof def
R57072:57079 compcert.cfrontend.Cop <> sem_cast def
R57113:57118 compcert.cfrontend.Csyntax <> typeof def
R57086:57098 compcert.cfrontend.Cop <> incrdecr_type def
R57101:57106 compcert.cfrontend.Csyntax <> typeof def
R57072:57079 compcert.cfrontend.Cop <> sem_cast def
R57113:57118 compcert.cfrontend.Csyntax <> typeof def
R57086:57098 compcert.cfrontend.Cop <> incrdecr_type def
R57101:57106 compcert.cfrontend.Csyntax <> typeof def
R57153:57159 Coq.Logic.Classical_Prop <> classic prfax
R57162:57168 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57172:57173 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57174:57180 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57184:57185 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57186:57195 compcert.cfrontend.Csem <> assign_loc ind
R57243:57245 compcert.cfrontend.Cstrategy <> m'' var
R57239:57241 compcert.cfrontend.Cstrategy <> t2' var
R57217:57222 compcert.cfrontend.Csyntax <> typeof def
R57198:57211 compcert.common.Globalenvs Genv globalenv def
R57153:57159 Coq.Logic.Classical_Prop <> classic prfax
R57162:57168 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57172:57173 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57174:57180 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57184:57185 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57186:57195 compcert.cfrontend.Csem <> assign_loc ind
R57243:57245 compcert.cfrontend.Cstrategy <> m'' var
R57239:57241 compcert.cfrontend.Cstrategy <> t2' var
R57217:57222 compcert.cfrontend.Csyntax <> typeof def
R57198:57211 compcert.common.Globalenvs Genv globalenv def
R57326:57338 compcert.cfrontend.Cstrategy <> step_postincr constr
R57326:57338 compcert.cfrontend.Cstrategy <> step_postincr constr
R57429:57447 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R57429:57447 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R57608:57626 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R57608:57626 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R57734:57752 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R57734:57752 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R57835:57853 compcert.cfrontend.Cstrategy <> deref_loc_receptive thm
R57906:57917 compcert.cfrontend.Cop <> sem_incrdecr def
R57927:57932 compcert.cfrontend.Csyntax <> typeof def
R57906:57917 compcert.cfrontend.Cop <> sem_incrdecr def
R57927:57932 compcert.cfrontend.Csyntax <> typeof def
R57967:57974 compcert.cfrontend.Cop <> sem_cast def
R58008:58013 compcert.cfrontend.Csyntax <> typeof def
R57981:57993 compcert.cfrontend.Cop <> incrdecr_type def
R57996:58001 compcert.cfrontend.Csyntax <> typeof def
R57967:57974 compcert.cfrontend.Cop <> sem_cast def
R58008:58013 compcert.cfrontend.Csyntax <> typeof def
R57981:57993 compcert.cfrontend.Cop <> incrdecr_type def
R57996:58001 compcert.cfrontend.Csyntax <> typeof def
R58048:58054 Coq.Logic.Classical_Prop <> classic prfax
R58057:58063 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58067:58068 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58069:58075 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58079:58080 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58081:58090 compcert.cfrontend.Csem <> assign_loc ind
R58138:58140 compcert.cfrontend.Cstrategy <> m'' var
R58134:58136 compcert.cfrontend.Cstrategy <> t2' var
R58112:58117 compcert.cfrontend.Csyntax <> typeof def
R58093:58106 compcert.common.Globalenvs Genv globalenv def
R58048:58054 Coq.Logic.Classical_Prop <> classic prfax
R58057:58063 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58067:58068 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58069:58075 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58079:58080 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58081:58090 compcert.cfrontend.Csem <> assign_loc ind
R58138:58140 compcert.cfrontend.Cstrategy <> m'' var
R58134:58136 compcert.cfrontend.Cstrategy <> t2' var
R58112:58117 compcert.cfrontend.Csyntax <> typeof def
R58093:58106 compcert.common.Globalenvs Genv globalenv def
R58221:58233 compcert.cfrontend.Cstrategy <> step_postincr constr
R58221:58233 compcert.cfrontend.Cstrategy <> step_postincr constr
R58324:58342 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R58324:58342 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R58502:58520 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R58502:58520 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R58628:58646 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R58628:58646 compcert.cfrontend.Cstrategy <> step_postincr_stuck constr
R58722:58747 compcert.common.Events <> external_call_trace_length def
R58796:58818 compcert.common.Events <> external_call_receptive def
R58897:58908 compcert.cfrontend.Cstrategy <> step_builtin constr
R58897:58908 compcert.cfrontend.Cstrategy <> step_builtin constr
R58983:59008 compcert.common.Events <> external_call_trace_length def
R59057:59079 compcert.common.Events <> external_call_receptive def
R59125:59135 compcert.cfrontend.Csem <> Returnstate constr
R59157:59158 compcert.common.Events <> E0 def
R59125:59135 compcert.cfrontend.Csem <> Returnstate constr
R59157:59158 compcert.common.Events <> E0 def
R59313:59327 compcert.cfrontend.Cstrategy <> deref_loc_trace thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R59399:59414 compcert.cfrontend.Cstrategy <> assign_loc_trace thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R59495:59509 compcert.cfrontend.Cstrategy <> deref_loc_trace thm
R59527:59542 compcert.cfrontend.Cstrategy <> assign_loc_trace thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R59732:59746 compcert.cfrontend.Cstrategy <> deref_loc_trace thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R59820:59834 compcert.cfrontend.Cstrategy <> deref_loc_trace thm
R59852:59867 compcert.cfrontend.Cstrategy <> assign_loc_trace thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R60057:60071 compcert.cfrontend.Cstrategy <> deref_loc_trace thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R0:-1 compcert.cfrontend.Cstrategy <> y var
R60145:60170 compcert.common.Events <> external_call_trace_length def
R60293:60318 compcert.common.Events <> external_call_trace_length def
prf 60458:60476 <> strategy_simulation
R60491:60509 compcert.common.Smallstep <> backward_simulation rec
R60531:60539 compcert.cfrontend.Cstrategy <> semantics def
R60541:60541 compcert.cfrontend.Cstrategy <> p var
R60512:60525 compcert.cfrontend.Csem <> semantics def
R60527:60527 compcert.cfrontend.Cstrategy <> p var
R60629:60633 compcert.cfrontend.Csem <> state ind
R60641:60643 Coq.Init.Logic <> :type_scope:x_'='_x not
R60639:60640 compcert.cfrontend.Cstrategy <> S1 var
R60644:60645 compcert.cfrontend.Cstrategy <> S2 var
R60570:60593 compcert.common.Smallstep <> backward_simulation_plus thm
R60629:60633 compcert.cfrontend.Csem <> state ind
R60641:60643 Coq.Init.Logic <> :type_scope:x_'='_x not
R60639:60640 compcert.cfrontend.Cstrategy <> S1 var
R60644:60645 compcert.cfrontend.Cstrategy <> S2 var
R60570:60593 compcert.common.Smallstep <> backward_simulation_plus thm
R60879:60886 compcert.cfrontend.Cstrategy <> progress thm
R60879:60886 compcert.cfrontend.Cstrategy <> progress thm
R60964:60978 compcert.cfrontend.Cstrategy <> step_simulation thm
R60964:60978 compcert.cfrontend.Cstrategy <> step_simulation thm
sec 61084:61090 <> BIGSTEP
var 61103:61104 BIGSTEP ge
R61107:61110 compcert.cfrontend.Csem <> genv def
ind 61332:61338 <> outcome
constr 61354:61362 <> Out_break
constr 61424:61435 <> Out_continue
constr 61497:61506 <> Out_normal
constr 61565:61574 <> Out_return
R61365:61371 compcert.cfrontend.Cstrategy <> outcome ind
R61438:61444 compcert.cfrontend.Cstrategy <> outcome ind
R61509:61515 compcert.cfrontend.Cstrategy <> outcome ind
R61600:61606 compcert.cfrontend.Cstrategy <> outcome ind
R61577:61582 Coq.Init.Datatypes <> option ind
R61588:61590 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R61585:61587 compcert.common.Values <> val ind
R61591:61594 compcert.cfrontend.Ctypes <> type ind
ind 61651:61672 <> out_normal_or_continue
constr 61699:61722 <> Out_normal_or_continue_N
constr 61763:61786 <> Out_normal_or_continue_C
R61676:61682 compcert.cfrontend.Cstrategy <> outcome ind
R61725:61746 compcert.cfrontend.Cstrategy <> out_normal_or_continue ind
R61748:61757 compcert.cfrontend.Cstrategy <> Out_normal constr
R61789:61810 compcert.cfrontend.Cstrategy <> out_normal_or_continue ind
R61812:61823 compcert.cfrontend.Cstrategy <> Out_continue constr
ind 61837:61855 <> out_break_or_return
constr 61893:61913 <> Out_break_or_return_B
constr 61961:61981 <> Out_break_or_return_R
R61870:61876 compcert.cfrontend.Cstrategy <> outcome ind
R61859:61865 compcert.cfrontend.Cstrategy <> outcome ind
R61916:61934 compcert.cfrontend.Cstrategy <> out_break_or_return ind
R61946:61955 compcert.cfrontend.Cstrategy <> Out_normal constr
R61936:61944 compcert.cfrontend.Cstrategy <> Out_break constr
R62001:62019 compcert.cfrontend.Cstrategy <> out_break_or_return ind
R62038:62047 compcert.cfrontend.Cstrategy <> Out_return constr
R62049:62050 compcert.cfrontend.Cstrategy <> ov var
R62022:62031 compcert.cfrontend.Cstrategy <> Out_return constr
R62033:62034 compcert.cfrontend.Cstrategy <> ov var
def 62066:62079 <> outcome_switch
R62087:62093 compcert.cfrontend.Cstrategy <> outcome ind
R62098:62104 compcert.cfrontend.Cstrategy <> outcome ind
R62117:62119 compcert.cfrontend.Cstrategy <> out var
R62130:62138 compcert.cfrontend.Cstrategy <> Out_break constr
R62143:62152 compcert.cfrontend.Cstrategy <> Out_normal constr
def 62184:62203 <> outcome_result_value
R62211:62217 compcert.cfrontend.Cstrategy <> outcome ind
R62224:62227 compcert.cfrontend.Ctypes <> type ind
R62234:62236 compcert.common.Values <> val ind
R62262:62262 compcert.cfrontend.Cstrategy <> t var
R62257:62259 compcert.cfrontend.Cstrategy <> out var
R62273:62282 compcert.cfrontend.Cstrategy <> Out_normal constr
R62285:62289 compcert.cfrontend.Ctypes <> Tvoid constr
R62295:62297 Coq.Init.Logic <> :type_scope:x_'='_x not
R62294:62294 compcert.cfrontend.Cstrategy <> v var
R62298:62303 compcert.common.Values <> Vundef constr
R62309:62318 compcert.cfrontend.Cstrategy <> Out_return constr
R62320:62323 Coq.Init.Datatypes <> None constr
R62326:62330 compcert.cfrontend.Ctypes <> Tvoid constr
R62336:62338 Coq.Init.Logic <> :type_scope:x_'='_x not
R62335:62335 compcert.cfrontend.Cstrategy <> v var
R62339:62344 compcert.common.Values <> Vundef constr
R62350:62359 compcert.cfrontend.Cstrategy <> Out_return constr
R62362:62365 Coq.Init.Datatypes <> Some constr
R62367:62367 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62370:62371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62375:62375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62396:62399 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R62387:62390 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R62391:62395 compcert.cfrontend.Ctypes <> Tvoid constr
R62418:62420 Coq.Init.Logic <> :type_scope:x_'='_x not
R62400:62407 compcert.cfrontend.Cop <> sem_cast def
R62421:62424 Coq.Init.Datatypes <> Some constr
R62426:62426 compcert.cfrontend.Cstrategy <> v var
R62440:62444 Coq.Init.Logic <> False ind
ind 62703:62717 <> eval_expression
constr 62777:62797 <> eval_expression_intro
ind 62936:62944 <> eval_expr
constr 63013:63020 <> eval_val
constr 63096:63103 <> eval_var
constr 63179:63188 <> eval_field
constr 63319:63328 <> eval_valof
constr 63498:63516 <> eval_valof_volatile
constr 63819:63828 <> eval_deref
constr 63953:63963 <> eval_addrof
constr 64090:64098 <> eval_unop
constr 64230:64239 <> eval_binop
constr 64447:64455 <> eval_cast
constr 64578:64593 <> eval_seqand_true
constr 65016:65032 <> eval_seqand_false
constr 65269:65284 <> eval_seqor_false
constr 65707:65721 <> eval_seqor_true
constr 65955:65968 <> eval_condition
constr 66382:66392 <> eval_sizeof
constr 66480:66491 <> eval_alignof
constr 66581:66591 <> eval_assign
constr 67003:67015 <> eval_assignop
constr 67606:67618 <> eval_postincr
constr 68033:68042 <> eval_comma
constr 68296:68304 <> eval_call
ind 68878:68890 <> eval_exprlist
constr 68959:68966 <> eval_nil
constr 69024:69032 <> eval_cons
ind 69492:69500 <> exec_stmt
constr 69569:69578 <> exec_Sskip
constr 69656:69663 <> exec_Sdo
constr 69793:69803 <> exec_Sseq_1
constr 69998:70008 <> exec_Sseq_2
constr 70172:70187 <> exec_Sifthenelse
constr 70447:70463 <> exec_Sreturn_none
constr 70557:70573 <> exec_Sreturn_some
constr 70732:70742 <> exec_Sbreak
constr 70820:70833 <> exec_Scontinue
constr 70917:70933 <> exec_Swhile_false
constr 71110:71125 <> exec_Swhile_stop
constr 71393:71408 <> exec_Swhile_loop
constr 71736:71754 <> exec_Sdowhile_false
constr 72029:72046 <> exec_Sdowhile_stop
constr 72216:72233 <> exec_Sdowhile_loop
constr 72566:72580 <> exec_Sfor_start
constr 72797:72811 <> exec_Sfor_false
constr 73002:73015 <> exec_Sfor_stop
constr 73299:73312 <> exec_Sfor_loop
constr 73718:73729 <> exec_Sswitch
ind 74185:74196 <> eval_funcall
constr 74263:74283 <> eval_funcall_internal
constr 74737:74757 <> eval_funcall_external
R62758:62760 compcert.common.Values <> val ind
R62751:62753 compcert.common.Memory <> mem syndef
R62742:62746 compcert.common.Events <> trace def
R62734:62737 compcert.cfrontend.Csyntax <> expr ind
R62727:62729 compcert.common.Memory <> mem syndef
R62720:62722 compcert.cfrontend.Csem <> env def
R62993:62996 compcert.cfrontend.Csyntax <> expr ind
R62986:62988 compcert.common.Memory <> mem syndef
R62977:62981 compcert.common.Events <> trace def
R62969:62972 compcert.cfrontend.Csyntax <> expr ind
R62961:62964 compcert.cfrontend.Csem <> kind ind
R62954:62956 compcert.common.Memory <> mem syndef
R62947:62949 compcert.cfrontend.Csem <> env def
R68935:68942 compcert.cfrontend.Csyntax <> exprlist ind
R68928:68930 compcert.common.Memory <> mem syndef
R68919:68923 compcert.common.Events <> trace def
R68907:68914 compcert.cfrontend.Csyntax <> exprlist ind
R68900:68902 compcert.common.Memory <> mem syndef
R68893:68895 compcert.cfrontend.Csem <> env def
R69546:69552 compcert.cfrontend.Cstrategy <> outcome ind
R69539:69541 compcert.common.Memory <> mem syndef
R69530:69534 compcert.common.Events <> trace def
R69517:69525 compcert.cfrontend.Csyntax <> statement ind
R69510:69512 compcert.common.Memory <> mem syndef
R69503:69505 compcert.cfrontend.Csem <> env def
R74244:74246 compcert.common.Values <> val ind
R74237:74239 compcert.common.Memory <> mem syndef
R74228:74232 compcert.common.Events <> trace def
R74216:74219 Coq.Init.Datatypes <> list ind
R74221:74223 compcert.common.Values <> val ind
R74206:74211 compcert.cfrontend.Csyntax <> fundef ind
R74199:74201 compcert.common.Memory <> mem syndef
R62901:62915 compcert.cfrontend.Cstrategy <> eval_expression ind
R62928:62928 compcert.cfrontend.Cstrategy <> v var
R62925:62926 compcert.cfrontend.Cstrategy <> m' var
R62923:62923 compcert.cfrontend.Cstrategy <> t var
R62921:62921 compcert.cfrontend.Cstrategy <> a var
R62919:62919 compcert.cfrontend.Cstrategy <> m var
R62917:62917 compcert.cfrontend.Cstrategy <> e var
R62860:62877 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R62890:62890 compcert.cfrontend.Cstrategy <> v var
R62887:62888 compcert.cfrontend.Cstrategy <> a' var
R62884:62885 compcert.cfrontend.Cstrategy <> m' var
R62882:62882 compcert.cfrontend.Cstrategy <> e var
R62879:62880 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R62830:62838 compcert.cfrontend.Cstrategy <> eval_expr ind
R62854:62855 compcert.cfrontend.Cstrategy <> a' var
R62851:62852 compcert.cfrontend.Cstrategy <> m' var
R62849:62849 compcert.cfrontend.Cstrategy <> t var
R62847:62847 compcert.cfrontend.Cstrategy <> a var
R62844:62845 compcert.cfrontend.Csem <> RV constr
R62842:62842 compcert.cfrontend.Cstrategy <> m var
R62840:62840 compcert.cfrontend.Cstrategy <> e var
R63046:63054 compcert.cfrontend.Cstrategy <> eval_expr ind
R63081:63084 compcert.cfrontend.Csyntax <> Eval constr
R63088:63089 compcert.cfrontend.Cstrategy <> ty var
R63086:63086 compcert.cfrontend.Cstrategy <> v var
R63078:63078 compcert.cfrontend.Cstrategy <> m var
R63075:63076 compcert.common.Events <> E0 def
R63064:63067 compcert.cfrontend.Csyntax <> Eval constr
R63071:63072 compcert.cfrontend.Cstrategy <> ty var
R63069:63069 compcert.cfrontend.Cstrategy <> v var
R63060:63061 compcert.cfrontend.Csem <> RV constr
R63058:63058 compcert.cfrontend.Cstrategy <> m var
R63056:63056 compcert.cfrontend.Cstrategy <> e var
R63129:63137 compcert.cfrontend.Cstrategy <> eval_expr ind
R63164:63167 compcert.cfrontend.Csyntax <> Evar constr
R63171:63172 compcert.cfrontend.Cstrategy <> ty var
R63169:63169 compcert.cfrontend.Cstrategy <> x var
R63161:63161 compcert.cfrontend.Cstrategy <> m var
R63158:63159 compcert.common.Events <> E0 def
R63147:63150 compcert.cfrontend.Csyntax <> Evar constr
R63154:63155 compcert.cfrontend.Cstrategy <> ty var
R63152:63152 compcert.cfrontend.Cstrategy <> x var
R63143:63144 compcert.cfrontend.Csem <> LV constr
R63141:63141 compcert.cfrontend.Cstrategy <> m var
R63139:63139 compcert.cfrontend.Cstrategy <> e var
R63260:63268 compcert.cfrontend.Cstrategy <> eval_expr ind
R63299:63304 compcert.cfrontend.Csyntax <> Efield constr
R63311:63312 compcert.cfrontend.Cstrategy <> ty var
R63309:63309 compcert.cfrontend.Cstrategy <> f var
R63306:63307 compcert.cfrontend.Cstrategy <> a' var
R63295:63296 compcert.cfrontend.Cstrategy <> m' var
R63293:63293 compcert.cfrontend.Cstrategy <> t var
R63278:63283 compcert.cfrontend.Csyntax <> Efield constr
R63289:63290 compcert.cfrontend.Cstrategy <> ty var
R63287:63287 compcert.cfrontend.Cstrategy <> f var
R63285:63285 compcert.cfrontend.Cstrategy <> a var
R63274:63275 compcert.cfrontend.Csem <> LV constr
R63272:63272 compcert.cfrontend.Cstrategy <> m var
R63270:63270 compcert.cfrontend.Cstrategy <> e var
R63224:63232 compcert.cfrontend.Cstrategy <> eval_expr ind
R63248:63249 compcert.cfrontend.Cstrategy <> a' var
R63245:63246 compcert.cfrontend.Cstrategy <> m' var
R63243:63243 compcert.cfrontend.Cstrategy <> t var
R63241:63241 compcert.cfrontend.Cstrategy <> a var
R63238:63239 compcert.cfrontend.Csem <> RV constr
R63236:63236 compcert.cfrontend.Cstrategy <> m var
R63234:63234 compcert.cfrontend.Cstrategy <> e var
R63443:63451 compcert.cfrontend.Cstrategy <> eval_expr ind
R63480:63485 compcert.cfrontend.Csyntax <> Evalof constr
R63490:63491 compcert.cfrontend.Cstrategy <> ty var
R63487:63488 compcert.cfrontend.Cstrategy <> a' var
R63476:63477 compcert.cfrontend.Cstrategy <> m' var
R63474:63474 compcert.cfrontend.Cstrategy <> t var
R63461:63466 compcert.cfrontend.Csyntax <> Evalof constr
R63470:63471 compcert.cfrontend.Cstrategy <> ty var
R63468:63468 compcert.cfrontend.Cstrategy <> a var
R63457:63458 compcert.cfrontend.Csem <> RV constr
R63455:63455 compcert.cfrontend.Cstrategy <> m var
R63453:63453 compcert.cfrontend.Cstrategy <> e var
R63407:63415 compcert.cfrontend.Cstrategy <> eval_expr ind
R63431:63432 compcert.cfrontend.Cstrategy <> a' var
R63428:63429 compcert.cfrontend.Cstrategy <> m' var
R63426:63426 compcert.cfrontend.Cstrategy <> t var
R63424:63424 compcert.cfrontend.Cstrategy <> a var
R63421:63422 compcert.cfrontend.Csem <> LV constr
R63419:63419 compcert.cfrontend.Cstrategy <> m var
R63417:63417 compcert.cfrontend.Cstrategy <> e var
R63389:63391 Coq.Init.Logic <> :type_scope:x_'='_x not
R63362:63377 compcert.cfrontend.Ctypes <> type_is_volatile def
R63380:63385 compcert.cfrontend.Csyntax <> typeof def
R63387:63387 compcert.cfrontend.Cstrategy <> a var
R63392:63396 Coq.Init.Datatypes <> false constr
R63758:63766 compcert.cfrontend.Cstrategy <> eval_expr ind
R63804:63807 compcert.cfrontend.Csyntax <> Eval constr
R63811:63812 compcert.cfrontend.Cstrategy <> ty var
R63809:63809 compcert.cfrontend.Cstrategy <> v var
R63800:63801 compcert.cfrontend.Cstrategy <> m' var
R63792:63795 compcert.common.Events <> ::x_'**'_x not
R63790:63791 compcert.cfrontend.Cstrategy <> t1 var
R63796:63797 compcert.cfrontend.Cstrategy <> t2 var
R63776:63781 compcert.cfrontend.Csyntax <> Evalof constr
R63785:63786 compcert.cfrontend.Cstrategy <> ty var
R63783:63783 compcert.cfrontend.Cstrategy <> a var
R63772:63773 compcert.cfrontend.Csem <> RV constr
R63770:63770 compcert.cfrontend.Cstrategy <> m var
R63768:63768 compcert.cfrontend.Cstrategy <> e var
R63737:63739 Coq.Init.Logic <> :type_scope:x_'='_x not
R63735:63736 compcert.cfrontend.Cstrategy <> ty var
R63740:63745 compcert.cfrontend.Csyntax <> typeof def
R63747:63747 compcert.cfrontend.Cstrategy <> a var
R63688:63696 compcert.cfrontend.Csem <> deref_loc ind
R63724:63724 compcert.cfrontend.Cstrategy <> v var
R63721:63722 compcert.cfrontend.Cstrategy <> t2 var
R63717:63719 compcert.cfrontend.Cstrategy <> ofs var
R63715:63715 compcert.cfrontend.Cstrategy <> b var
R63712:63713 compcert.cfrontend.Cstrategy <> m' var
R63702:63707 compcert.cfrontend.Csyntax <> typeof def
R63709:63709 compcert.cfrontend.Cstrategy <> a var
R63698:63699 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R63643:63660 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R63675:63677 compcert.cfrontend.Cstrategy <> ofs var
R63673:63673 compcert.cfrontend.Cstrategy <> b var
R63670:63671 compcert.cfrontend.Cstrategy <> a' var
R63667:63668 compcert.cfrontend.Cstrategy <> m' var
R63665:63665 compcert.cfrontend.Cstrategy <> e var
R63662:63663 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R63606:63614 compcert.cfrontend.Cstrategy <> eval_expr ind
R63631:63632 compcert.cfrontend.Cstrategy <> a' var
R63628:63629 compcert.cfrontend.Cstrategy <> m' var
R63625:63626 compcert.cfrontend.Cstrategy <> t1 var
R63623:63623 compcert.cfrontend.Cstrategy <> a var
R63620:63621 compcert.cfrontend.Csem <> LV constr
R63618:63618 compcert.cfrontend.Cstrategy <> m var
R63616:63616 compcert.cfrontend.Cstrategy <> e var
R63589:63591 Coq.Init.Logic <> :type_scope:x_'='_x not
R63562:63577 compcert.cfrontend.Ctypes <> type_is_volatile def
R63580:63585 compcert.cfrontend.Csyntax <> typeof def
R63587:63587 compcert.cfrontend.Cstrategy <> a var
R63592:63595 Coq.Init.Datatypes <> true constr
R63898:63906 compcert.cfrontend.Cstrategy <> eval_expr ind
R63935:63940 compcert.cfrontend.Csyntax <> Ederef constr
R63945:63946 compcert.cfrontend.Cstrategy <> ty var
R63942:63943 compcert.cfrontend.Cstrategy <> a' var
R63931:63932 compcert.cfrontend.Cstrategy <> m' var
R63929:63929 compcert.cfrontend.Cstrategy <> t var
R63916:63921 compcert.cfrontend.Csyntax <> Ederef constr
R63925:63926 compcert.cfrontend.Cstrategy <> ty var
R63923:63923 compcert.cfrontend.Cstrategy <> a var
R63912:63913 compcert.cfrontend.Csem <> LV constr
R63910:63910 compcert.cfrontend.Cstrategy <> m var
R63908:63908 compcert.cfrontend.Cstrategy <> e var
R63862:63870 compcert.cfrontend.Cstrategy <> eval_expr ind
R63886:63887 compcert.cfrontend.Cstrategy <> a' var
R63883:63884 compcert.cfrontend.Cstrategy <> m' var
R63881:63881 compcert.cfrontend.Cstrategy <> t var
R63879:63879 compcert.cfrontend.Cstrategy <> a var
R63876:63877 compcert.cfrontend.Csem <> RV constr
R63874:63874 compcert.cfrontend.Cstrategy <> m var
R63872:63872 compcert.cfrontend.Cstrategy <> e var
R64033:64041 compcert.cfrontend.Cstrategy <> eval_expr ind
R64071:64077 compcert.cfrontend.Csyntax <> Eaddrof constr
R64082:64083 compcert.cfrontend.Cstrategy <> ty var
R64079:64080 compcert.cfrontend.Cstrategy <> a' var
R64067:64068 compcert.cfrontend.Cstrategy <> m' var
R64065:64065 compcert.cfrontend.Cstrategy <> t var
R64051:64057 compcert.cfrontend.Csyntax <> Eaddrof constr
R64061:64062 compcert.cfrontend.Cstrategy <> ty var
R64059:64059 compcert.cfrontend.Cstrategy <> a var
R64047:64048 compcert.cfrontend.Csem <> RV constr
R64045:64045 compcert.cfrontend.Cstrategy <> m var
R64043:64043 compcert.cfrontend.Cstrategy <> e var
R63997:64005 compcert.cfrontend.Cstrategy <> eval_expr ind
R64021:64022 compcert.cfrontend.Cstrategy <> a' var
R64018:64019 compcert.cfrontend.Cstrategy <> m' var
R64016:64016 compcert.cfrontend.Cstrategy <> t var
R64014:64014 compcert.cfrontend.Cstrategy <> a var
R64011:64012 compcert.cfrontend.Csem <> LV constr
R64009:64009 compcert.cfrontend.Cstrategy <> m var
R64007:64007 compcert.cfrontend.Cstrategy <> e var
R64171:64179 compcert.cfrontend.Cstrategy <> eval_expr ind
R64210:64214 compcert.cfrontend.Csyntax <> Eunop constr
R64222:64223 compcert.cfrontend.Cstrategy <> ty var
R64219:64220 compcert.cfrontend.Cstrategy <> a' var
R64216:64217 compcert.cfrontend.Cstrategy <> op var
R64206:64207 compcert.cfrontend.Cstrategy <> m' var
R64204:64204 compcert.cfrontend.Cstrategy <> t var
R64189:64193 compcert.cfrontend.Csyntax <> Eunop constr
R64200:64201 compcert.cfrontend.Cstrategy <> ty var
R64198:64198 compcert.cfrontend.Cstrategy <> a var
R64195:64196 compcert.cfrontend.Cstrategy <> op var
R64185:64186 compcert.cfrontend.Csem <> RV constr
R64183:64183 compcert.cfrontend.Cstrategy <> m var
R64181:64181 compcert.cfrontend.Cstrategy <> e var
R64135:64143 compcert.cfrontend.Cstrategy <> eval_expr ind
R64159:64160 compcert.cfrontend.Cstrategy <> a' var
R64156:64157 compcert.cfrontend.Cstrategy <> m' var
R64154:64154 compcert.cfrontend.Cstrategy <> t var
R64152:64152 compcert.cfrontend.Cstrategy <> a var
R64149:64150 compcert.cfrontend.Csem <> RV constr
R64147:64147 compcert.cfrontend.Cstrategy <> m var
R64145:64145 compcert.cfrontend.Cstrategy <> e var
R64367:64375 compcert.cfrontend.Cstrategy <> eval_expr ind
R64421:64426 compcert.cfrontend.Csyntax <> Ebinop constr
R64439:64440 compcert.cfrontend.Cstrategy <> ty var
R64435:64437 compcert.cfrontend.Cstrategy <> a2' var
R64431:64433 compcert.cfrontend.Cstrategy <> a1' var
R64428:64429 compcert.cfrontend.Cstrategy <> op var
R64416:64418 compcert.cfrontend.Cstrategy <> m'' var
R64408:64411 compcert.common.Events <> ::x_'**'_x not
R64406:64407 compcert.cfrontend.Cstrategy <> t1 var
R64412:64413 compcert.cfrontend.Cstrategy <> t2 var
R64385:64390 compcert.cfrontend.Csyntax <> Ebinop constr
R64401:64402 compcert.cfrontend.Cstrategy <> ty var
R64398:64399 compcert.cfrontend.Cstrategy <> a2 var
R64395:64396 compcert.cfrontend.Cstrategy <> a1 var
R64392:64393 compcert.cfrontend.Cstrategy <> op var
R64381:64382 compcert.cfrontend.Csem <> RV constr
R64379:64379 compcert.cfrontend.Cstrategy <> m var
R64377:64377 compcert.cfrontend.Cstrategy <> e var
R64326:64334 compcert.cfrontend.Cstrategy <> eval_expr ind
R64354:64356 compcert.cfrontend.Cstrategy <> a2' var
R64350:64352 compcert.cfrontend.Cstrategy <> m'' var
R64347:64348 compcert.cfrontend.Cstrategy <> t2 var
R64344:64345 compcert.cfrontend.Cstrategy <> a2 var
R64341:64342 compcert.cfrontend.Csem <> RV constr
R64338:64339 compcert.cfrontend.Cstrategy <> m' var
R64336:64336 compcert.cfrontend.Cstrategy <> e var
R64293:64301 compcert.cfrontend.Cstrategy <> eval_expr ind
R64319:64321 compcert.cfrontend.Cstrategy <> a1' var
R64316:64317 compcert.cfrontend.Cstrategy <> m' var
R64313:64314 compcert.cfrontend.Cstrategy <> t1 var
R64310:64311 compcert.cfrontend.Cstrategy <> a1 var
R64307:64308 compcert.cfrontend.Csem <> RV constr
R64305:64305 compcert.cfrontend.Cstrategy <> m var
R64303:64303 compcert.cfrontend.Cstrategy <> e var
R64525:64533 compcert.cfrontend.Cstrategy <> eval_expr ind
R64561:64565 compcert.cfrontend.Csyntax <> Ecast constr
R64570:64571 compcert.cfrontend.Cstrategy <> ty var
R64567:64568 compcert.cfrontend.Cstrategy <> a' var
R64557:64558 compcert.cfrontend.Cstrategy <> m' var
R64555:64555 compcert.cfrontend.Cstrategy <> t var
R64543:64547 compcert.cfrontend.Csyntax <> Ecast constr
R64551:64552 compcert.cfrontend.Cstrategy <> ty var
R64549:64549 compcert.cfrontend.Cstrategy <> a var
R64539:64540 compcert.cfrontend.Csem <> RV constr
R64537:64537 compcert.cfrontend.Cstrategy <> m var
R64535:64535 compcert.cfrontend.Cstrategy <> e var
R64489:64497 compcert.cfrontend.Cstrategy <> eval_expr ind
R64513:64514 compcert.cfrontend.Cstrategy <> a' var
R64510:64511 compcert.cfrontend.Cstrategy <> m' var
R64508:64508 compcert.cfrontend.Cstrategy <> t var
R64506:64506 compcert.cfrontend.Cstrategy <> a var
R64503:64504 compcert.cfrontend.Csem <> RV constr
R64501:64501 compcert.cfrontend.Cstrategy <> m var
R64499:64499 compcert.cfrontend.Cstrategy <> e var
R64951:64959 compcert.cfrontend.Cstrategy <> eval_expr ind
R65001:65004 compcert.cfrontend.Csyntax <> Eval constr
R65008:65009 compcert.cfrontend.Cstrategy <> ty var
R65006:65006 compcert.cfrontend.Cstrategy <> v var
R64996:64998 compcert.cfrontend.Cstrategy <> m'' var
R64990:64991 compcert.common.Events <> ::x_'**'_x not
R64988:64989 compcert.cfrontend.Cstrategy <> t1 var
R64992:64993 compcert.cfrontend.Cstrategy <> t2 var
R64969:64975 compcert.cfrontend.Csyntax <> Eseqand constr
R64983:64984 compcert.cfrontend.Cstrategy <> ty var
R64980:64981 compcert.cfrontend.Cstrategy <> a2 var
R64977:64978 compcert.cfrontend.Cstrategy <> a1 var
R64965:64966 compcert.cfrontend.Csem <> RV constr
R64963:64963 compcert.cfrontend.Cstrategy <> m var
R64961:64961 compcert.cfrontend.Cstrategy <> e var
R64932:64934 Coq.Init.Logic <> :type_scope:x_'='_x not
R64908:64915 compcert.cfrontend.Cop <> sem_cast def
R64930:64931 compcert.cfrontend.Cstrategy <> ty var
R64920:64928 compcert.cfrontend.Ctypes <> type_bool def
R64917:64918 compcert.cfrontend.Cstrategy <> v' var
R64935:64938 Coq.Init.Datatypes <> Some constr
R64940:64940 compcert.cfrontend.Cstrategy <> v var
R64888:64890 Coq.Init.Logic <> :type_scope:x_'='_x not
R64855:64862 compcert.cfrontend.Cop <> sem_cast def
R64879:64887 compcert.cfrontend.Ctypes <> type_bool def
R64868:64873 compcert.cfrontend.Csyntax <> typeof def
R64875:64876 compcert.cfrontend.Cstrategy <> a2 var
R64864:64865 compcert.cfrontend.Cstrategy <> v2 var
R64891:64894 Coq.Init.Datatypes <> Some constr
R64896:64897 compcert.cfrontend.Cstrategy <> v' var
R64811:64828 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R64843:64844 compcert.cfrontend.Cstrategy <> v2 var
R64839:64841 compcert.cfrontend.Cstrategy <> a2' var
R64835:64837 compcert.cfrontend.Cstrategy <> m'' var
R64833:64833 compcert.cfrontend.Cstrategy <> e var
R64830:64831 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R64776:64784 compcert.cfrontend.Cstrategy <> eval_expr ind
R64804:64806 compcert.cfrontend.Cstrategy <> a2' var
R64800:64802 compcert.cfrontend.Cstrategy <> m'' var
R64797:64798 compcert.cfrontend.Cstrategy <> t2 var
R64794:64795 compcert.cfrontend.Cstrategy <> a2 var
R64791:64792 compcert.cfrontend.Csem <> RV constr
R64788:64789 compcert.cfrontend.Cstrategy <> m' var
R64786:64786 compcert.cfrontend.Cstrategy <> e var
R64754:64756 Coq.Init.Logic <> :type_scope:x_'='_x not
R64731:64738 compcert.cfrontend.Cop <> bool_val def
R64744:64749 compcert.cfrontend.Csyntax <> typeof def
R64751:64752 compcert.cfrontend.Cstrategy <> a1 var
R64740:64741 compcert.cfrontend.Cstrategy <> v1 var
R64757:64760 Coq.Init.Datatypes <> Some constr
R64762:64765 Coq.Init.Datatypes <> true constr
R64688:64705 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R64719:64720 compcert.cfrontend.Cstrategy <> v1 var
R64715:64717 compcert.cfrontend.Cstrategy <> a1' var
R64712:64713 compcert.cfrontend.Cstrategy <> m' var
R64710:64710 compcert.cfrontend.Cstrategy <> e var
R64707:64708 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R64655:64663 compcert.cfrontend.Cstrategy <> eval_expr ind
R64681:64683 compcert.cfrontend.Cstrategy <> a1' var
R64678:64679 compcert.cfrontend.Cstrategy <> m' var
R64675:64676 compcert.cfrontend.Cstrategy <> t1 var
R64672:64673 compcert.cfrontend.Cstrategy <> a1 var
R64669:64670 compcert.cfrontend.Csem <> RV constr
R64667:64667 compcert.cfrontend.Cstrategy <> m var
R64665:64665 compcert.cfrontend.Cstrategy <> e var
R65197:65205 compcert.cfrontend.Cstrategy <> eval_expr ind
R65240:65243 compcert.cfrontend.Csyntax <> Eval constr
R65261:65262 compcert.cfrontend.Cstrategy <> ty var
R65246:65249 compcert.common.Values <> Vint constr
R65251:65258 compcert.lib.Integers Int zero def
R65236:65237 compcert.cfrontend.Cstrategy <> m' var
R65233:65234 compcert.cfrontend.Cstrategy <> t1 var
R65215:65221 compcert.cfrontend.Csyntax <> Eseqand constr
R65229:65230 compcert.cfrontend.Cstrategy <> ty var
R65226:65227 compcert.cfrontend.Cstrategy <> a2 var
R65223:65224 compcert.cfrontend.Cstrategy <> a1 var
R65211:65212 compcert.cfrontend.Csem <> RV constr
R65209:65209 compcert.cfrontend.Cstrategy <> m var
R65207:65207 compcert.cfrontend.Cstrategy <> e var
R65174:65176 Coq.Init.Logic <> :type_scope:x_'='_x not
R65151:65158 compcert.cfrontend.Cop <> bool_val def
R65164:65169 compcert.cfrontend.Csyntax <> typeof def
R65171:65172 compcert.cfrontend.Cstrategy <> a1 var
R65160:65161 compcert.cfrontend.Cstrategy <> v1 var
R65177:65180 Coq.Init.Datatypes <> Some constr
R65182:65186 Coq.Init.Datatypes <> false constr
R65108:65125 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R65139:65140 compcert.cfrontend.Cstrategy <> v1 var
R65135:65137 compcert.cfrontend.Cstrategy <> a1' var
R65132:65133 compcert.cfrontend.Cstrategy <> m' var
R65130:65130 compcert.cfrontend.Cstrategy <> e var
R65127:65128 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R65075:65083 compcert.cfrontend.Cstrategy <> eval_expr ind
R65101:65103 compcert.cfrontend.Cstrategy <> a1' var
R65098:65099 compcert.cfrontend.Cstrategy <> m' var
R65095:65096 compcert.cfrontend.Cstrategy <> t1 var
R65092:65093 compcert.cfrontend.Cstrategy <> a1 var
R65089:65090 compcert.cfrontend.Csem <> RV constr
R65087:65087 compcert.cfrontend.Cstrategy <> m var
R65085:65085 compcert.cfrontend.Cstrategy <> e var
R65643:65651 compcert.cfrontend.Cstrategy <> eval_expr ind
R65692:65695 compcert.cfrontend.Csyntax <> Eval constr
R65699:65700 compcert.cfrontend.Cstrategy <> ty var
R65697:65697 compcert.cfrontend.Cstrategy <> v var
R65687:65689 compcert.cfrontend.Cstrategy <> m'' var
R65681:65682 compcert.common.Events <> ::x_'**'_x not
R65679:65680 compcert.cfrontend.Cstrategy <> t1 var
R65683:65684 compcert.cfrontend.Cstrategy <> t2 var
R65661:65666 compcert.cfrontend.Csyntax <> Eseqor constr
R65674:65675 compcert.cfrontend.Cstrategy <> ty var
R65671:65672 compcert.cfrontend.Cstrategy <> a2 var
R65668:65669 compcert.cfrontend.Cstrategy <> a1 var
R65657:65658 compcert.cfrontend.Csem <> RV constr
R65655:65655 compcert.cfrontend.Cstrategy <> m var
R65653:65653 compcert.cfrontend.Cstrategy <> e var
R65624:65626 Coq.Init.Logic <> :type_scope:x_'='_x not
R65600:65607 compcert.cfrontend.Cop <> sem_cast def
R65622:65623 compcert.cfrontend.Cstrategy <> ty var
R65612:65620 compcert.cfrontend.Ctypes <> type_bool def
R65609:65610 compcert.cfrontend.Cstrategy <> v' var
R65627:65630 Coq.Init.Datatypes <> Some constr
R65632:65632 compcert.cfrontend.Cstrategy <> v var
R65580:65582 Coq.Init.Logic <> :type_scope:x_'='_x not
R65547:65554 compcert.cfrontend.Cop <> sem_cast def
R65571:65579 compcert.cfrontend.Ctypes <> type_bool def
R65560:65565 compcert.cfrontend.Csyntax <> typeof def
R65567:65568 compcert.cfrontend.Cstrategy <> a2 var
R65556:65557 compcert.cfrontend.Cstrategy <> v2 var
R65583:65586 Coq.Init.Datatypes <> Some constr
R65588:65589 compcert.cfrontend.Cstrategy <> v' var
R65503:65520 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R65535:65536 compcert.cfrontend.Cstrategy <> v2 var
R65531:65533 compcert.cfrontend.Cstrategy <> a2' var
R65527:65529 compcert.cfrontend.Cstrategy <> m'' var
R65525:65525 compcert.cfrontend.Cstrategy <> e var
R65522:65523 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R65468:65476 compcert.cfrontend.Cstrategy <> eval_expr ind
R65496:65498 compcert.cfrontend.Cstrategy <> a2' var
R65492:65494 compcert.cfrontend.Cstrategy <> m'' var
R65489:65490 compcert.cfrontend.Cstrategy <> t2 var
R65486:65487 compcert.cfrontend.Cstrategy <> a2 var
R65483:65484 compcert.cfrontend.Csem <> RV constr
R65480:65481 compcert.cfrontend.Cstrategy <> m' var
R65478:65478 compcert.cfrontend.Cstrategy <> e var
R65445:65447 Coq.Init.Logic <> :type_scope:x_'='_x not
R65422:65429 compcert.cfrontend.Cop <> bool_val def
R65435:65440 compcert.cfrontend.Csyntax <> typeof def
R65442:65443 compcert.cfrontend.Cstrategy <> a1 var
R65431:65432 compcert.cfrontend.Cstrategy <> v1 var
R65448:65451 Coq.Init.Datatypes <> Some constr
R65453:65457 Coq.Init.Datatypes <> false constr
R65379:65396 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R65410:65411 compcert.cfrontend.Cstrategy <> v1 var
R65406:65408 compcert.cfrontend.Cstrategy <> a1' var
R65403:65404 compcert.cfrontend.Cstrategy <> m' var
R65401:65401 compcert.cfrontend.Cstrategy <> e var
R65398:65399 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R65346:65354 compcert.cfrontend.Cstrategy <> eval_expr ind
R65372:65374 compcert.cfrontend.Cstrategy <> a1' var
R65369:65370 compcert.cfrontend.Cstrategy <> m' var
R65366:65367 compcert.cfrontend.Cstrategy <> t1 var
R65363:65364 compcert.cfrontend.Cstrategy <> a1 var
R65360:65361 compcert.cfrontend.Csem <> RV constr
R65358:65358 compcert.cfrontend.Cstrategy <> m var
R65356:65356 compcert.cfrontend.Cstrategy <> e var
R65885:65893 compcert.cfrontend.Cstrategy <> eval_expr ind
R65927:65930 compcert.cfrontend.Csyntax <> Eval constr
R65947:65948 compcert.cfrontend.Cstrategy <> ty var
R65933:65936 compcert.common.Values <> Vint constr
R65938:65944 compcert.lib.Integers Int one def
R65923:65924 compcert.cfrontend.Cstrategy <> m' var
R65920:65921 compcert.cfrontend.Cstrategy <> t1 var
R65903:65908 compcert.cfrontend.Csyntax <> Eseqor constr
R65916:65917 compcert.cfrontend.Cstrategy <> ty var
R65913:65914 compcert.cfrontend.Cstrategy <> a2 var
R65910:65911 compcert.cfrontend.Cstrategy <> a1 var
R65899:65900 compcert.cfrontend.Csem <> RV constr
R65897:65897 compcert.cfrontend.Cstrategy <> m var
R65895:65895 compcert.cfrontend.Cstrategy <> e var
R65863:65865 Coq.Init.Logic <> :type_scope:x_'='_x not
R65840:65847 compcert.cfrontend.Cop <> bool_val def
R65853:65858 compcert.cfrontend.Csyntax <> typeof def
R65860:65861 compcert.cfrontend.Cstrategy <> a1 var
R65849:65850 compcert.cfrontend.Cstrategy <> v1 var
R65866:65869 Coq.Init.Datatypes <> Some constr
R65871:65874 Coq.Init.Datatypes <> true constr
R65797:65814 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R65828:65829 compcert.cfrontend.Cstrategy <> v1 var
R65824:65826 compcert.cfrontend.Cstrategy <> a1' var
R65821:65822 compcert.cfrontend.Cstrategy <> m' var
R65819:65819 compcert.cfrontend.Cstrategy <> e var
R65816:65817 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R65764:65772 compcert.cfrontend.Cstrategy <> eval_expr ind
R65790:65792 compcert.cfrontend.Cstrategy <> a1' var
R65787:65788 compcert.cfrontend.Cstrategy <> m' var
R65784:65785 compcert.cfrontend.Cstrategy <> t1 var
R65781:65782 compcert.cfrontend.Cstrategy <> a1 var
R65778:65779 compcert.cfrontend.Csem <> RV constr
R65776:65776 compcert.cfrontend.Cstrategy <> m var
R65774:65774 compcert.cfrontend.Cstrategy <> e var
R66311:66319 compcert.cfrontend.Cstrategy <> eval_expr ind
R66367:66370 compcert.cfrontend.Csyntax <> Eval constr
R66374:66375 compcert.cfrontend.Cstrategy <> ty var
R66372:66372 compcert.cfrontend.Cstrategy <> v var
R66362:66364 compcert.cfrontend.Cstrategy <> m'' var
R66356:66357 compcert.common.Events <> ::x_'**'_x not
R66354:66355 compcert.cfrontend.Cstrategy <> t1 var
R66358:66359 compcert.cfrontend.Cstrategy <> t2 var
R66329:66338 compcert.cfrontend.Csyntax <> Econdition constr
R66349:66350 compcert.cfrontend.Cstrategy <> ty var
R66346:66347 compcert.cfrontend.Cstrategy <> a3 var
R66343:66344 compcert.cfrontend.Cstrategy <> a2 var
R66340:66341 compcert.cfrontend.Cstrategy <> a1 var
R66325:66326 compcert.cfrontend.Csem <> RV constr
R66323:66323 compcert.cfrontend.Cstrategy <> m var
R66321:66321 compcert.cfrontend.Cstrategy <> e var
R66292:66294 Coq.Init.Logic <> :type_scope:x_'='_x not
R66246:66253 compcert.cfrontend.Cop <> sem_cast def
R66290:66291 compcert.cfrontend.Cstrategy <> ty var
R66259:66264 compcert.cfrontend.Csyntax <> typeof def
R66270:66270 compcert.cfrontend.Cstrategy <> b var
R66285:66286 compcert.cfrontend.Cstrategy <> a3 var
R66277:66278 compcert.cfrontend.Cstrategy <> a2 var
R66255:66256 compcert.cfrontend.Cstrategy <> v' var
R66295:66298 Coq.Init.Datatypes <> Some constr
R66300:66300 compcert.cfrontend.Cstrategy <> v var
R66203:66220 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R66234:66235 compcert.cfrontend.Cstrategy <> v' var
R66231:66232 compcert.cfrontend.Cstrategy <> a' var
R66227:66229 compcert.cfrontend.Cstrategy <> m'' var
R66225:66225 compcert.cfrontend.Cstrategy <> e var
R66222:66223 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R66149:66157 compcert.cfrontend.Cstrategy <> eval_expr ind
R66197:66198 compcert.cfrontend.Cstrategy <> a' var
R66193:66195 compcert.cfrontend.Cstrategy <> m'' var
R66190:66191 compcert.cfrontend.Cstrategy <> t2 var
R66171:66171 compcert.cfrontend.Cstrategy <> b var
R66186:66187 compcert.cfrontend.Cstrategy <> a3 var
R66178:66179 compcert.cfrontend.Cstrategy <> a2 var
R66164:66165 compcert.cfrontend.Csem <> RV constr
R66161:66162 compcert.cfrontend.Cstrategy <> m' var
R66159:66159 compcert.cfrontend.Cstrategy <> e var
R66130:66132 Coq.Init.Logic <> :type_scope:x_'='_x not
R66107:66114 compcert.cfrontend.Cop <> bool_val def
R66120:66125 compcert.cfrontend.Csyntax <> typeof def
R66127:66128 compcert.cfrontend.Cstrategy <> a1 var
R66116:66117 compcert.cfrontend.Cstrategy <> v1 var
R66133:66136 Coq.Init.Datatypes <> Some constr
R66138:66138 compcert.cfrontend.Cstrategy <> b var
R66064:66081 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R66095:66096 compcert.cfrontend.Cstrategy <> v1 var
R66091:66093 compcert.cfrontend.Cstrategy <> a1' var
R66088:66089 compcert.cfrontend.Cstrategy <> m' var
R66086:66086 compcert.cfrontend.Cstrategy <> e var
R66083:66084 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R66031:66039 compcert.cfrontend.Cstrategy <> eval_expr ind
R66057:66059 compcert.cfrontend.Cstrategy <> a1' var
R66054:66055 compcert.cfrontend.Cstrategy <> m' var
R66051:66052 compcert.cfrontend.Cstrategy <> t1 var
R66048:66049 compcert.cfrontend.Cstrategy <> a1 var
R66045:66046 compcert.cfrontend.Csem <> RV constr
R66043:66043 compcert.cfrontend.Cstrategy <> m var
R66041:66041 compcert.cfrontend.Cstrategy <> e var
R66420:66428 compcert.cfrontend.Cstrategy <> eval_expr ind
R66460:66466 compcert.cfrontend.Csyntax <> Esizeof constr
R66472:66473 compcert.cfrontend.Cstrategy <> ty var
R66468:66470 compcert.cfrontend.Cstrategy <> ty' var
R66457:66457 compcert.cfrontend.Cstrategy <> m var
R66454:66455 compcert.common.Events <> E0 def
R66438:66444 compcert.cfrontend.Csyntax <> Esizeof constr
R66450:66451 compcert.cfrontend.Cstrategy <> ty var
R66446:66448 compcert.cfrontend.Cstrategy <> ty' var
R66434:66435 compcert.cfrontend.Csem <> RV constr
R66432:66432 compcert.cfrontend.Cstrategy <> m var
R66430:66430 compcert.cfrontend.Cstrategy <> e var
R66519:66527 compcert.cfrontend.Cstrategy <> eval_expr ind
R66560:66567 compcert.cfrontend.Csyntax <> Ealignof constr
R66573:66574 compcert.cfrontend.Cstrategy <> ty var
R66569:66571 compcert.cfrontend.Cstrategy <> ty' var
R66557:66557 compcert.cfrontend.Cstrategy <> m var
R66554:66555 compcert.common.Events <> E0 def
R66537:66544 compcert.cfrontend.Csyntax <> Ealignof constr
R66550:66551 compcert.cfrontend.Cstrategy <> ty var
R66546:66548 compcert.cfrontend.Cstrategy <> ty' var
R66533:66534 compcert.cfrontend.Csem <> RV constr
R66531:66531 compcert.cfrontend.Cstrategy <> m var
R66529:66529 compcert.cfrontend.Cstrategy <> e var
R66936:66944 compcert.cfrontend.Cstrategy <> eval_expr ind
R66987:66990 compcert.cfrontend.Csyntax <> Eval constr
R66995:66996 compcert.cfrontend.Cstrategy <> ty var
R66992:66993 compcert.cfrontend.Cstrategy <> v' var
R66983:66984 compcert.cfrontend.Cstrategy <> m3 var
R66973:66974 compcert.common.Events <> ::x_'**'_x not
R66971:66972 compcert.cfrontend.Cstrategy <> t1 var
R66977:66978 compcert.common.Events <> ::x_'**'_x not
R66975:66976 compcert.cfrontend.Cstrategy <> t2 var
R66979:66980 compcert.cfrontend.Cstrategy <> t3 var
R66954:66960 compcert.cfrontend.Csyntax <> Eassign constr
R66966:66967 compcert.cfrontend.Cstrategy <> ty var
R66964:66964 compcert.cfrontend.Cstrategy <> r var
R66962:66962 compcert.cfrontend.Cstrategy <> l var
R66950:66951 compcert.cfrontend.Csem <> RV constr
R66948:66948 compcert.cfrontend.Cstrategy <> m var
R66946:66946 compcert.cfrontend.Cstrategy <> e var
R66915:66917 Coq.Init.Logic <> :type_scope:x_'='_x not
R66913:66914 compcert.cfrontend.Cstrategy <> ty var
R66918:66923 compcert.cfrontend.Csyntax <> typeof def
R66925:66925 compcert.cfrontend.Cstrategy <> l var
R66861:66870 compcert.cfrontend.Csem <> assign_loc ind
R66901:66902 compcert.cfrontend.Cstrategy <> m3 var
R66898:66899 compcert.cfrontend.Cstrategy <> t3 var
R66895:66896 compcert.cfrontend.Cstrategy <> v' var
R66891:66893 compcert.cfrontend.Cstrategy <> ofs var
R66889:66889 compcert.cfrontend.Cstrategy <> b var
R66886:66887 compcert.cfrontend.Cstrategy <> m2 var
R66876:66881 compcert.cfrontend.Csyntax <> typeof def
R66883:66883 compcert.cfrontend.Cstrategy <> l var
R66872:66873 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R66841:66843 Coq.Init.Logic <> :type_scope:x_'='_x not
R66809:66816 compcert.cfrontend.Cop <> sem_cast def
R66832:66837 compcert.cfrontend.Csyntax <> typeof def
R66839:66839 compcert.cfrontend.Cstrategy <> l var
R66821:66826 compcert.cfrontend.Csyntax <> typeof def
R66828:66828 compcert.cfrontend.Cstrategy <> r var
R66818:66818 compcert.cfrontend.Cstrategy <> v var
R66844:66847 Coq.Init.Datatypes <> Some constr
R66849:66850 compcert.cfrontend.Cstrategy <> v' var
R66768:66785 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R66798:66798 compcert.cfrontend.Cstrategy <> v var
R66795:66796 compcert.cfrontend.Cstrategy <> r' var
R66792:66793 compcert.cfrontend.Cstrategy <> m2 var
R66790:66790 compcert.cfrontend.Cstrategy <> e var
R66787:66788 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R66723:66740 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R66755:66757 compcert.cfrontend.Cstrategy <> ofs var
R66753:66753 compcert.cfrontend.Cstrategy <> b var
R66750:66751 compcert.cfrontend.Cstrategy <> l' var
R66747:66748 compcert.cfrontend.Cstrategy <> m2 var
R66745:66745 compcert.cfrontend.Cstrategy <> e var
R66742:66743 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R66685:66693 compcert.cfrontend.Cstrategy <> eval_expr ind
R66711:66712 compcert.cfrontend.Cstrategy <> r' var
R66708:66709 compcert.cfrontend.Cstrategy <> m2 var
R66705:66706 compcert.cfrontend.Cstrategy <> t2 var
R66703:66703 compcert.cfrontend.Cstrategy <> r var
R66700:66701 compcert.cfrontend.Csem <> RV constr
R66697:66698 compcert.cfrontend.Cstrategy <> m1 var
R66695:66695 compcert.cfrontend.Cstrategy <> e var
R66654:66662 compcert.cfrontend.Cstrategy <> eval_expr ind
R66679:66680 compcert.cfrontend.Cstrategy <> l' var
R66676:66677 compcert.cfrontend.Cstrategy <> m1 var
R66673:66674 compcert.cfrontend.Cstrategy <> t1 var
R66671:66671 compcert.cfrontend.Cstrategy <> l var
R66668:66669 compcert.cfrontend.Csem <> LV constr
R66666:66666 compcert.cfrontend.Cstrategy <> m var
R66664:66664 compcert.cfrontend.Cstrategy <> e var
R67524:67532 compcert.cfrontend.Cstrategy <> eval_expr ind
R67590:67593 compcert.cfrontend.Csyntax <> Eval constr
R67598:67599 compcert.cfrontend.Cstrategy <> ty var
R67595:67596 compcert.cfrontend.Cstrategy <> v4 var
R67586:67587 compcert.cfrontend.Cstrategy <> m3 var
R67572:67573 compcert.common.Events <> ::x_'**'_x not
R67570:67571 compcert.cfrontend.Cstrategy <> t1 var
R67576:67577 compcert.common.Events <> ::x_'**'_x not
R67574:67575 compcert.cfrontend.Cstrategy <> t2 var
R67580:67581 compcert.common.Events <> ::x_'**'_x not
R67578:67579 compcert.cfrontend.Cstrategy <> t3 var
R67582:67583 compcert.cfrontend.Cstrategy <> t4 var
R67542:67550 compcert.cfrontend.Csyntax <> Eassignop constr
R67565:67566 compcert.cfrontend.Cstrategy <> ty var
R67559:67563 compcert.cfrontend.Cstrategy <> tyres var
R67557:67557 compcert.cfrontend.Cstrategy <> r var
R67555:67555 compcert.cfrontend.Cstrategy <> l var
R67552:67553 compcert.cfrontend.Cstrategy <> op var
R67538:67539 compcert.cfrontend.Csem <> RV constr
R67536:67536 compcert.cfrontend.Cstrategy <> m var
R67534:67534 compcert.cfrontend.Cstrategy <> e var
R67503:67505 Coq.Init.Logic <> :type_scope:x_'='_x not
R67501:67502 compcert.cfrontend.Cstrategy <> ty var
R67506:67511 compcert.cfrontend.Csyntax <> typeof def
R67513:67513 compcert.cfrontend.Cstrategy <> l var
R67449:67458 compcert.cfrontend.Csem <> assign_loc ind
R67489:67490 compcert.cfrontend.Cstrategy <> m3 var
R67486:67487 compcert.cfrontend.Cstrategy <> t4 var
R67483:67484 compcert.cfrontend.Cstrategy <> v4 var
R67479:67481 compcert.cfrontend.Cstrategy <> ofs var
R67477:67477 compcert.cfrontend.Cstrategy <> b var
R67474:67475 compcert.cfrontend.Cstrategy <> m2 var
R67464:67469 compcert.cfrontend.Csyntax <> typeof def
R67471:67471 compcert.cfrontend.Cstrategy <> l var
R67460:67461 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R67429:67431 Coq.Init.Logic <> :type_scope:x_'='_x not
R67401:67408 compcert.cfrontend.Cop <> sem_cast def
R67420:67425 compcert.cfrontend.Csyntax <> typeof def
R67427:67427 compcert.cfrontend.Cstrategy <> l var
R67413:67417 compcert.cfrontend.Cstrategy <> tyres var
R67410:67411 compcert.cfrontend.Cstrategy <> v3 var
R67432:67435 Coq.Init.Datatypes <> Some constr
R67437:67438 compcert.cfrontend.Cstrategy <> v4 var
R67381:67383 Coq.Init.Logic <> :type_scope:x_'='_x not
R67327:67346 compcert.cfrontend.Cop <> sem_binary_operation def
R67379:67380 compcert.cfrontend.Cstrategy <> m2 var
R67369:67374 compcert.cfrontend.Csyntax <> typeof def
R67376:67376 compcert.cfrontend.Cstrategy <> r var
R67365:67366 compcert.cfrontend.Cstrategy <> v2 var
R67355:67360 compcert.cfrontend.Csyntax <> typeof def
R67362:67362 compcert.cfrontend.Cstrategy <> l var
R67351:67352 compcert.cfrontend.Cstrategy <> v1 var
R67348:67349 compcert.cfrontend.Cstrategy <> op var
R67384:67387 Coq.Init.Datatypes <> Some constr
R67389:67390 compcert.cfrontend.Cstrategy <> v3 var
R67285:67302 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R67315:67316 compcert.cfrontend.Cstrategy <> v2 var
R67312:67313 compcert.cfrontend.Cstrategy <> r' var
R67309:67310 compcert.cfrontend.Cstrategy <> m2 var
R67307:67307 compcert.cfrontend.Cstrategy <> e var
R67304:67305 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R67237:67245 compcert.cfrontend.Csem <> deref_loc ind
R67273:67274 compcert.cfrontend.Cstrategy <> v1 var
R67270:67271 compcert.cfrontend.Cstrategy <> t3 var
R67266:67268 compcert.cfrontend.Cstrategy <> ofs var
R67264:67264 compcert.cfrontend.Cstrategy <> b var
R67261:67262 compcert.cfrontend.Cstrategy <> m2 var
R67251:67256 compcert.cfrontend.Csyntax <> typeof def
R67258:67258 compcert.cfrontend.Cstrategy <> l var
R67247:67248 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R67192:67209 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R67224:67226 compcert.cfrontend.Cstrategy <> ofs var
R67222:67222 compcert.cfrontend.Cstrategy <> b var
R67219:67220 compcert.cfrontend.Cstrategy <> l' var
R67216:67217 compcert.cfrontend.Cstrategy <> m2 var
R67214:67214 compcert.cfrontend.Cstrategy <> e var
R67211:67212 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R67154:67162 compcert.cfrontend.Cstrategy <> eval_expr ind
R67180:67181 compcert.cfrontend.Cstrategy <> r' var
R67177:67178 compcert.cfrontend.Cstrategy <> m2 var
R67174:67175 compcert.cfrontend.Cstrategy <> t2 var
R67172:67172 compcert.cfrontend.Cstrategy <> r var
R67169:67170 compcert.cfrontend.Csem <> RV constr
R67166:67167 compcert.cfrontend.Cstrategy <> m1 var
R67164:67164 compcert.cfrontend.Cstrategy <> e var
R67123:67131 compcert.cfrontend.Cstrategy <> eval_expr ind
R67148:67149 compcert.cfrontend.Cstrategy <> l' var
R67145:67146 compcert.cfrontend.Cstrategy <> m1 var
R67142:67143 compcert.cfrontend.Cstrategy <> t1 var
R67140:67140 compcert.cfrontend.Cstrategy <> l var
R67137:67138 compcert.cfrontend.Csem <> LV constr
R67135:67135 compcert.cfrontend.Cstrategy <> m var
R67133:67133 compcert.cfrontend.Cstrategy <> e var
R67963:67971 compcert.cfrontend.Cstrategy <> eval_expr ind
R68017:68020 compcert.cfrontend.Csyntax <> Eval constr
R68025:68026 compcert.cfrontend.Cstrategy <> ty var
R68022:68023 compcert.cfrontend.Cstrategy <> v1 var
R68013:68014 compcert.cfrontend.Cstrategy <> m2 var
R68003:68004 compcert.common.Events <> ::x_'**'_x not
R68001:68002 compcert.cfrontend.Cstrategy <> t1 var
R68007:68008 compcert.common.Events <> ::x_'**'_x not
R68005:68006 compcert.cfrontend.Cstrategy <> t2 var
R68009:68010 compcert.cfrontend.Cstrategy <> t3 var
R67981:67989 compcert.cfrontend.Csyntax <> Epostincr constr
R67996:67997 compcert.cfrontend.Cstrategy <> ty var
R67994:67994 compcert.cfrontend.Cstrategy <> l var
R67991:67992 compcert.cfrontend.Cstrategy <> id var
R67977:67978 compcert.cfrontend.Csem <> RV constr
R67975:67975 compcert.cfrontend.Cstrategy <> m var
R67973:67973 compcert.cfrontend.Cstrategy <> e var
R67942:67944 Coq.Init.Logic <> :type_scope:x_'='_x not
R67940:67941 compcert.cfrontend.Cstrategy <> ty var
R67945:67950 compcert.cfrontend.Csyntax <> typeof def
R67952:67952 compcert.cfrontend.Cstrategy <> l var
R67896:67905 compcert.cfrontend.Csem <> assign_loc ind
R67928:67929 compcert.cfrontend.Cstrategy <> m2 var
R67925:67926 compcert.cfrontend.Cstrategy <> t3 var
R67922:67923 compcert.cfrontend.Cstrategy <> v3 var
R67918:67920 compcert.cfrontend.Cstrategy <> ofs var
R67916:67916 compcert.cfrontend.Cstrategy <> b var
R67913:67914 compcert.cfrontend.Cstrategy <> m1 var
R67910:67911 compcert.cfrontend.Cstrategy <> ty var
R67907:67908 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R67876:67878 Coq.Init.Logic <> :type_scope:x_'='_x not
R67843:67850 compcert.cfrontend.Cop <> sem_cast def
R67874:67875 compcert.cfrontend.Cstrategy <> ty var
R67856:67868 compcert.cfrontend.Cop <> incrdecr_type def
R67870:67871 compcert.cfrontend.Cstrategy <> ty var
R67852:67853 compcert.cfrontend.Cstrategy <> v2 var
R67879:67882 Coq.Init.Datatypes <> Some constr
R67884:67885 compcert.cfrontend.Cstrategy <> v3 var
R67823:67825 Coq.Init.Logic <> :type_scope:x_'='_x not
R67802:67813 compcert.cfrontend.Cop <> sem_incrdecr def
R67821:67822 compcert.cfrontend.Cstrategy <> ty var
R67818:67819 compcert.cfrontend.Cstrategy <> v1 var
R67815:67816 compcert.cfrontend.Cstrategy <> id var
R67826:67829 Coq.Init.Datatypes <> Some constr
R67831:67832 compcert.cfrontend.Cstrategy <> v2 var
R67762:67770 compcert.cfrontend.Csem <> deref_loc ind
R67790:67791 compcert.cfrontend.Cstrategy <> v1 var
R67787:67788 compcert.cfrontend.Cstrategy <> t2 var
R67783:67785 compcert.cfrontend.Cstrategy <> ofs var
R67781:67781 compcert.cfrontend.Cstrategy <> b var
R67778:67779 compcert.cfrontend.Cstrategy <> m1 var
R67775:67776 compcert.cfrontend.Cstrategy <> ty var
R67772:67773 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R67717:67734 compcert.cfrontend.Cstrategy <> eval_simple_lvalue ind
R67749:67751 compcert.cfrontend.Cstrategy <> ofs var
R67747:67747 compcert.cfrontend.Cstrategy <> b var
R67744:67745 compcert.cfrontend.Cstrategy <> l' var
R67741:67742 compcert.cfrontend.Cstrategy <> m1 var
R67739:67739 compcert.cfrontend.Cstrategy <> e var
R67736:67737 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R67680:67688 compcert.cfrontend.Cstrategy <> eval_expr ind
R67705:67706 compcert.cfrontend.Cstrategy <> l' var
R67702:67703 compcert.cfrontend.Cstrategy <> m1 var
R67699:67700 compcert.cfrontend.Cstrategy <> t1 var
R67697:67697 compcert.cfrontend.Cstrategy <> l var
R67694:67695 compcert.cfrontend.Csem <> LV constr
R67692:67692 compcert.cfrontend.Cstrategy <> m var
R67690:67690 compcert.cfrontend.Cstrategy <> e var
R68241:68249 compcert.cfrontend.Cstrategy <> eval_expr ind
R68288:68290 compcert.cfrontend.Cstrategy <> r2' var
R68285:68286 compcert.cfrontend.Cstrategy <> m2 var
R68279:68280 compcert.common.Events <> ::x_'**'_x not
R68277:68278 compcert.cfrontend.Cstrategy <> t1 var
R68281:68282 compcert.cfrontend.Cstrategy <> t2 var
R68259:68264 compcert.cfrontend.Csyntax <> Ecomma constr
R68272:68273 compcert.cfrontend.Cstrategy <> ty var
R68269:68270 compcert.cfrontend.Cstrategy <> r2 var
R68266:68267 compcert.cfrontend.Cstrategy <> r1 var
R68255:68256 compcert.cfrontend.Csem <> RV constr
R68253:68253 compcert.cfrontend.Cstrategy <> m var
R68251:68251 compcert.cfrontend.Cstrategy <> e var
R68219:68221 Coq.Init.Logic <> :type_scope:x_'='_x not
R68217:68218 compcert.cfrontend.Cstrategy <> ty var
R68222:68227 compcert.cfrontend.Csyntax <> typeof def
R68229:68230 compcert.cfrontend.Cstrategy <> r2 var
R68177:68185 compcert.cfrontend.Cstrategy <> eval_expr ind
R68204:68206 compcert.cfrontend.Cstrategy <> r2' var
R68201:68202 compcert.cfrontend.Cstrategy <> m2 var
R68198:68199 compcert.cfrontend.Cstrategy <> t2 var
R68195:68196 compcert.cfrontend.Cstrategy <> r2 var
R68192:68193 compcert.cfrontend.Csem <> RV constr
R68189:68190 compcert.cfrontend.Cstrategy <> m1 var
R68187:68187 compcert.cfrontend.Cstrategy <> e var
R68134:68151 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R68165:68166 compcert.cfrontend.Cstrategy <> v1 var
R68161:68163 compcert.cfrontend.Cstrategy <> r1' var
R68158:68159 compcert.cfrontend.Cstrategy <> m1 var
R68156:68156 compcert.cfrontend.Cstrategy <> e var
R68153:68154 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R68095:68103 compcert.cfrontend.Cstrategy <> eval_expr ind
R68121:68123 compcert.cfrontend.Cstrategy <> r1' var
R68118:68119 compcert.cfrontend.Cstrategy <> m1 var
R68115:68116 compcert.cfrontend.Cstrategy <> t1 var
R68112:68113 compcert.cfrontend.Cstrategy <> r1 var
R68109:68110 compcert.cfrontend.Csem <> RV constr
R68107:68107 compcert.cfrontend.Cstrategy <> m var
R68105:68105 compcert.cfrontend.Cstrategy <> e var
R68804:68812 compcert.cfrontend.Cstrategy <> eval_expr ind
R68858:68861 compcert.cfrontend.Csyntax <> Eval constr
R68868:68869 compcert.cfrontend.Cstrategy <> ty var
R68863:68866 compcert.cfrontend.Cstrategy <> vres var
R68854:68855 compcert.cfrontend.Cstrategy <> m3 var
R68844:68845 compcert.common.Events <> ::x_'**'_x not
R68842:68843 compcert.cfrontend.Cstrategy <> t1 var
R68848:68849 compcert.common.Events <> ::x_'**'_x not
R68846:68847 compcert.cfrontend.Cstrategy <> t2 var
R68850:68851 compcert.cfrontend.Cstrategy <> t3 var
R68822:68826 compcert.cfrontend.Csyntax <> Ecall constr
R68837:68838 compcert.cfrontend.Cstrategy <> ty var
R68831:68835 compcert.cfrontend.Cstrategy <> rargs var
R68828:68829 compcert.cfrontend.Cstrategy <> rf var
R68818:68819 compcert.cfrontend.Csem <> RV constr
R68816:68816 compcert.cfrontend.Cstrategy <> m var
R68814:68814 compcert.cfrontend.Cstrategy <> e var
R68759:68770 compcert.cfrontend.Cstrategy <> eval_funcall ind
R68790:68793 compcert.cfrontend.Cstrategy <> vres var
R68787:68788 compcert.cfrontend.Cstrategy <> m3 var
R68784:68785 compcert.cfrontend.Cstrategy <> t3 var
R68778:68782 compcert.cfrontend.Cstrategy <> vargs var
R68775:68776 compcert.cfrontend.Cstrategy <> fd var
R68772:68773 compcert.cfrontend.Cstrategy <> m2 var
R68720:68722 Coq.Init.Logic <> :type_scope:x_'='_x not
R68703:68716 compcert.cfrontend.Csyntax <> type_of_fundef def
R68718:68719 compcert.cfrontend.Cstrategy <> fd var
R68723:68731 compcert.cfrontend.Ctypes <> Tfunction constr
R68744:68748 compcert.cfrontend.Cstrategy <> cconv var
R68739:68742 compcert.cfrontend.Cstrategy <> tres var
R68733:68737 compcert.cfrontend.Cstrategy <> targs var
R68683:68685 Coq.Init.Logic <> :type_scope:x_'='_x not
R68662:68676 compcert.common.Globalenvs Genv find_funct def
R68681:68682 compcert.cfrontend.Cstrategy <> vf var
R68678:68679 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R68686:68689 Coq.Init.Datatypes <> Some constr
R68691:68692 compcert.cfrontend.Cstrategy <> fd var
R68622:68624 Coq.Init.Logic <> :type_scope:x_'='_x not
R68598:68609 compcert.cfrontend.Cop <> classify_fun def
R68612:68617 compcert.cfrontend.Csyntax <> typeof def
R68619:68620 compcert.cfrontend.Cstrategy <> rf var
R68625:68634 compcert.cfrontend.Cop <> fun_case_f constr
R68647:68651 compcert.cfrontend.Cstrategy <> cconv var
R68642:68645 compcert.cfrontend.Cstrategy <> tres var
R68636:68640 compcert.cfrontend.Cstrategy <> targs var
R68545:68560 compcert.cfrontend.Cstrategy <> eval_simple_list ind
R68583:68587 compcert.cfrontend.Cstrategy <> vargs var
R68577:68581 compcert.cfrontend.Cstrategy <> targs var
R68570:68575 compcert.cfrontend.Cstrategy <> rargs' var
R68567:68568 compcert.cfrontend.Cstrategy <> m2 var
R68565:68565 compcert.cfrontend.Cstrategy <> e var
R68562:68563 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R68502:68519 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R68533:68534 compcert.cfrontend.Cstrategy <> vf var
R68529:68531 compcert.cfrontend.Cstrategy <> rf' var
R68526:68527 compcert.cfrontend.Cstrategy <> m2 var
R68524:68524 compcert.cfrontend.Cstrategy <> e var
R68521:68522 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R68455:68467 compcert.cfrontend.Cstrategy <> eval_exprlist ind
R68486:68491 compcert.cfrontend.Cstrategy <> rargs' var
R68483:68484 compcert.cfrontend.Cstrategy <> m2 var
R68480:68481 compcert.cfrontend.Cstrategy <> t2 var
R68474:68478 compcert.cfrontend.Cstrategy <> rargs var
R68471:68472 compcert.cfrontend.Cstrategy <> m1 var
R68469:68469 compcert.cfrontend.Cstrategy <> e var
R68422:68430 compcert.cfrontend.Cstrategy <> eval_expr ind
R68448:68450 compcert.cfrontend.Cstrategy <> rf' var
R68445:68446 compcert.cfrontend.Cstrategy <> m1 var
R68442:68443 compcert.cfrontend.Cstrategy <> t1 var
R68439:68440 compcert.cfrontend.Cstrategy <> rf var
R68436:68437 compcert.cfrontend.Csem <> RV constr
R68434:68434 compcert.cfrontend.Cstrategy <> m var
R68432:68432 compcert.cfrontend.Cstrategy <> e var
R68987:68999 compcert.cfrontend.Cstrategy <> eval_exprlist ind
R69015:69018 compcert.cfrontend.Csyntax <> Enil constr
R69013:69013 compcert.cfrontend.Cstrategy <> m var
R69010:69011 compcert.common.Events <> E0 def
R69005:69008 compcert.cfrontend.Csyntax <> Enil constr
R69003:69003 compcert.cfrontend.Cstrategy <> m var
R69001:69001 compcert.cfrontend.Cstrategy <> e var
R69153:69165 compcert.cfrontend.Cstrategy <> eval_exprlist ind
R69198:69202 compcert.cfrontend.Csyntax <> Econs constr
R69208:69210 compcert.cfrontend.Cstrategy <> al' var
R69204:69206 compcert.cfrontend.Cstrategy <> a1' var
R69194:69195 compcert.cfrontend.Cstrategy <> m2 var
R69188:69189 compcert.common.Events <> ::x_'**'_x not
R69186:69187 compcert.cfrontend.Cstrategy <> t1 var
R69190:69191 compcert.cfrontend.Cstrategy <> t2 var
R69172:69176 compcert.cfrontend.Csyntax <> Econs constr
R69181:69182 compcert.cfrontend.Cstrategy <> al var
R69178:69179 compcert.cfrontend.Cstrategy <> a1 var
R69169:69169 compcert.cfrontend.Cstrategy <> m var
R69167:69167 compcert.cfrontend.Cstrategy <> e var
R69112:69124 compcert.cfrontend.Cstrategy <> eval_exprlist ind
R69140:69142 compcert.cfrontend.Cstrategy <> al' var
R69137:69138 compcert.cfrontend.Cstrategy <> m2 var
R69134:69135 compcert.cfrontend.Cstrategy <> t2 var
R69131:69132 compcert.cfrontend.Cstrategy <> al var
R69128:69129 compcert.cfrontend.Cstrategy <> m1 var
R69126:69126 compcert.cfrontend.Cstrategy <> e var
R69079:69087 compcert.cfrontend.Cstrategy <> eval_expr ind
R69105:69107 compcert.cfrontend.Cstrategy <> a1' var
R69102:69103 compcert.cfrontend.Cstrategy <> m1 var
R69099:69100 compcert.cfrontend.Cstrategy <> t1 var
R69096:69097 compcert.cfrontend.Cstrategy <> a1 var
R69093:69094 compcert.cfrontend.Csem <> RV constr
R69091:69091 compcert.cfrontend.Cstrategy <> m var
R69089:69089 compcert.cfrontend.Cstrategy <> e var
R69601:69609 compcert.cfrontend.Cstrategy <> exec_stmt ind
R69641:69650 compcert.cfrontend.Cstrategy <> Out_normal constr
R69639:69639 compcert.cfrontend.Cstrategy <> m var
R69636:69637 compcert.common.Events <> E0 def
R69615:69619 compcert.cfrontend.Csyntax <> Sskip constr
R69613:69613 compcert.cfrontend.Cstrategy <> m var
R69611:69611 compcert.cfrontend.Cstrategy <> e var
R69735:69743 compcert.cfrontend.Cstrategy <> exec_stmt ind
R69778:69787 compcert.cfrontend.Cstrategy <> Out_normal constr
R69775:69776 compcert.cfrontend.Cstrategy <> m' var
R69773:69773 compcert.cfrontend.Cstrategy <> t var
R69750:69752 compcert.cfrontend.Csyntax <> Sdo constr
R69754:69754 compcert.cfrontend.Cstrategy <> a var
R69747:69747 compcert.cfrontend.Cstrategy <> m var
R69745:69745 compcert.cfrontend.Cstrategy <> e var
R69697:69711 compcert.cfrontend.Cstrategy <> eval_expression ind
R69724:69724 compcert.cfrontend.Cstrategy <> v var
R69721:69722 compcert.cfrontend.Cstrategy <> m' var
R69719:69719 compcert.cfrontend.Cstrategy <> t var
R69717:69717 compcert.cfrontend.Cstrategy <> a var
R69715:69715 compcert.cfrontend.Cstrategy <> m var
R69713:69713 compcert.cfrontend.Cstrategy <> e var
R69928:69936 compcert.cfrontend.Cstrategy <> exec_stmt ind
R69990:69992 compcert.cfrontend.Cstrategy <> out var
R69987:69988 compcert.cfrontend.Cstrategy <> m2 var
R69979:69982 compcert.common.Events <> ::x_'**'_x not
R69977:69978 compcert.cfrontend.Cstrategy <> t1 var
R69983:69984 compcert.cfrontend.Cstrategy <> t2 var
R69943:69951 compcert.cfrontend.Csyntax <> Ssequence constr
R69956:69957 compcert.cfrontend.Cstrategy <> s2 var
R69953:69954 compcert.cfrontend.Cstrategy <> s1 var
R69940:69940 compcert.cfrontend.Cstrategy <> m var
R69938:69938 compcert.cfrontend.Cstrategy <> e var
R69891:69899 compcert.cfrontend.Cstrategy <> exec_stmt ind
R69915:69917 compcert.cfrontend.Cstrategy <> out var
R69912:69913 compcert.cfrontend.Cstrategy <> m2 var
R69909:69910 compcert.cfrontend.Cstrategy <> t2 var
R69906:69907 compcert.cfrontend.Cstrategy <> s2 var
R69903:69904 compcert.cfrontend.Cstrategy <> m1 var
R69901:69901 compcert.cfrontend.Cstrategy <> e var
R69848:69856 compcert.cfrontend.Cstrategy <> exec_stmt ind
R69871:69880 compcert.cfrontend.Cstrategy <> Out_normal constr
R69868:69869 compcert.cfrontend.Cstrategy <> m1 var
R69865:69866 compcert.cfrontend.Cstrategy <> t1 var
R69862:69863 compcert.cfrontend.Cstrategy <> s1 var
R69860:69860 compcert.cfrontend.Cstrategy <> m var
R69858:69858 compcert.cfrontend.Cstrategy <> e var
R70110:70118 compcert.cfrontend.Cstrategy <> exec_stmt ind
R70164:70166 compcert.cfrontend.Cstrategy <> out var
R70161:70162 compcert.cfrontend.Cstrategy <> m1 var
R70158:70159 compcert.cfrontend.Cstrategy <> t1 var
R70125:70133 compcert.cfrontend.Csyntax <> Ssequence constr
R70138:70139 compcert.cfrontend.Cstrategy <> s2 var
R70135:70136 compcert.cfrontend.Cstrategy <> s1 var
R70122:70122 compcert.cfrontend.Cstrategy <> m var
R70120:70120 compcert.cfrontend.Cstrategy <> e var
R70086:70089 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R70083:70085 compcert.cfrontend.Cstrategy <> out var
R70090:70099 compcert.cfrontend.Cstrategy <> Out_normal constr
R70047:70055 compcert.cfrontend.Cstrategy <> exec_stmt ind
R70070:70072 compcert.cfrontend.Cstrategy <> out var
R70067:70068 compcert.cfrontend.Cstrategy <> m1 var
R70064:70065 compcert.cfrontend.Cstrategy <> t1 var
R70061:70062 compcert.cfrontend.Cstrategy <> s1 var
R70059:70059 compcert.cfrontend.Cstrategy <> m var
R70057:70057 compcert.cfrontend.Cstrategy <> e var
R70375:70383 compcert.cfrontend.Cstrategy <> exec_stmt ind
R70439:70441 compcert.cfrontend.Cstrategy <> out var
R70436:70437 compcert.cfrontend.Cstrategy <> m2 var
R70430:70431 compcert.common.Events <> ::x_'**'_x not
R70428:70429 compcert.cfrontend.Cstrategy <> t1 var
R70432:70433 compcert.cfrontend.Cstrategy <> t2 var
R70390:70400 compcert.cfrontend.Csyntax <> Sifthenelse constr
R70407:70408 compcert.cfrontend.Cstrategy <> s2 var
R70404:70405 compcert.cfrontend.Cstrategy <> s1 var
R70402:70402 compcert.cfrontend.Cstrategy <> a var
R70387:70387 compcert.cfrontend.Cstrategy <> m var
R70385:70385 compcert.cfrontend.Cstrategy <> e var
R70318:70326 compcert.cfrontend.Cstrategy <> exec_stmt ind
R70362:70364 compcert.cfrontend.Cstrategy <> out var
R70359:70360 compcert.cfrontend.Cstrategy <> m2 var
R70356:70357 compcert.cfrontend.Cstrategy <> t2 var
R70337:70337 compcert.cfrontend.Cstrategy <> b var
R70352:70353 compcert.cfrontend.Cstrategy <> s2 var
R70344:70345 compcert.cfrontend.Cstrategy <> s1 var
R70330:70331 compcert.cfrontend.Cstrategy <> m1 var
R70328:70328 compcert.cfrontend.Cstrategy <> e var
R70299:70301 Coq.Init.Logic <> :type_scope:x_'='_x not
R70277:70284 compcert.cfrontend.Cop <> bool_val def
R70290:70295 compcert.cfrontend.Csyntax <> typeof def
R70297:70297 compcert.cfrontend.Cstrategy <> a var
R70286:70287 compcert.cfrontend.Cstrategy <> v1 var
R70302:70305 Coq.Init.Datatypes <> Some constr
R70307:70307 compcert.cfrontend.Cstrategy <> b var
R70237:70251 compcert.cfrontend.Cstrategy <> eval_expression ind
R70265:70266 compcert.cfrontend.Cstrategy <> v1 var
R70262:70263 compcert.cfrontend.Cstrategy <> m1 var
R70259:70260 compcert.cfrontend.Cstrategy <> t1 var
R70257:70257 compcert.cfrontend.Cstrategy <> a var
R70255:70255 compcert.cfrontend.Cstrategy <> m var
R70253:70253 compcert.cfrontend.Cstrategy <> e var
R70486:70494 compcert.cfrontend.Cstrategy <> exec_stmt ind
R70536:70545 compcert.cfrontend.Cstrategy <> Out_return constr
R70547:70550 Coq.Init.Datatypes <> None constr
R70533:70533 compcert.cfrontend.Cstrategy <> m var
R70530:70531 compcert.common.Events <> E0 def
R70501:70507 compcert.cfrontend.Csyntax <> Sreturn constr
R70509:70512 Coq.Init.Datatypes <> None constr
R70498:70498 compcert.cfrontend.Cstrategy <> m var
R70496:70496 compcert.cfrontend.Cstrategy <> e var
R70641:70649 compcert.cfrontend.Cstrategy <> exec_stmt ind
R70696:70705 compcert.cfrontend.Cstrategy <> Out_return constr
R70708:70711 Coq.Init.Datatypes <> Some constr
R70712:70712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R70714:70715 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R70724:70724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R70713:70713 compcert.cfrontend.Cstrategy <> v var
R70716:70721 compcert.cfrontend.Csyntax <> typeof def
R70723:70723 compcert.cfrontend.Cstrategy <> a var
R70692:70693 compcert.cfrontend.Cstrategy <> m' var
R70690:70690 compcert.cfrontend.Cstrategy <> t var
R70656:70662 compcert.cfrontend.Csyntax <> Sreturn constr
R70665:70668 Coq.Init.Datatypes <> Some constr
R70670:70670 compcert.cfrontend.Cstrategy <> a var
R70653:70653 compcert.cfrontend.Cstrategy <> m var
R70651:70651 compcert.cfrontend.Cstrategy <> e var
R70603:70617 compcert.cfrontend.Cstrategy <> eval_expression ind
R70630:70630 compcert.cfrontend.Cstrategy <> v var
R70627:70628 compcert.cfrontend.Cstrategy <> m' var
R70625:70625 compcert.cfrontend.Cstrategy <> t var
R70623:70623 compcert.cfrontend.Cstrategy <> a var
R70621:70621 compcert.cfrontend.Cstrategy <> m var
R70619:70619 compcert.cfrontend.Cstrategy <> e var
R70765:70773 compcert.cfrontend.Cstrategy <> exec_stmt ind
R70806:70814 compcert.cfrontend.Cstrategy <> Out_break constr
R70804:70804 compcert.cfrontend.Cstrategy <> m var
R70801:70802 compcert.common.Events <> E0 def
R70779:70784 compcert.cfrontend.Csyntax <> Sbreak constr
R70777:70777 compcert.cfrontend.Cstrategy <> m var
R70775:70775 compcert.cfrontend.Cstrategy <> e var
R70856:70864 compcert.cfrontend.Cstrategy <> exec_stmt ind
R70900:70911 compcert.cfrontend.Cstrategy <> Out_continue constr
R70898:70898 compcert.cfrontend.Cstrategy <> m var
R70895:70896 compcert.common.Events <> E0 def
R70870:70878 compcert.cfrontend.Csyntax <> Scontinue constr
R70868:70868 compcert.cfrontend.Cstrategy <> m var
R70866:70866 compcert.cfrontend.Cstrategy <> e var
R71047:71055 compcert.cfrontend.Cstrategy <> exec_stmt ind
R71095:71104 compcert.cfrontend.Cstrategy <> Out_normal constr
R71092:71093 compcert.cfrontend.Cstrategy <> m' var
R71090:71090 compcert.cfrontend.Cstrategy <> t var
R71062:71067 compcert.cfrontend.Csyntax <> Swhile constr
R71071:71071 compcert.cfrontend.Cstrategy <> s var
R71069:71069 compcert.cfrontend.Cstrategy <> a var
R71059:71059 compcert.cfrontend.Cstrategy <> m var
R71057:71057 compcert.cfrontend.Cstrategy <> e var
R71024:71026 Coq.Init.Logic <> :type_scope:x_'='_x not
R71003:71010 compcert.cfrontend.Cop <> bool_val def
R71015:71020 compcert.cfrontend.Csyntax <> typeof def
R71022:71022 compcert.cfrontend.Cstrategy <> a var
R71012:71012 compcert.cfrontend.Cstrategy <> v var
R71027:71030 Coq.Init.Datatypes <> Some constr
R71032:71036 Coq.Init.Datatypes <> false constr
R70965:70979 compcert.cfrontend.Cstrategy <> eval_expression ind
R70992:70992 compcert.cfrontend.Cstrategy <> v var
R70989:70990 compcert.cfrontend.Cstrategy <> m' var
R70987:70987 compcert.cfrontend.Cstrategy <> t var
R70985:70985 compcert.cfrontend.Cstrategy <> a var
R70983:70983 compcert.cfrontend.Cstrategy <> m var
R70981:70981 compcert.cfrontend.Cstrategy <> e var
R71330:71338 compcert.cfrontend.Cstrategy <> exec_stmt ind
R71385:71387 compcert.cfrontend.Cstrategy <> out var
R71382:71383 compcert.cfrontend.Cstrategy <> m2 var
R71376:71377 compcert.common.Events <> ::x_'**'_x not
R71374:71375 compcert.cfrontend.Cstrategy <> t1 var
R71378:71379 compcert.cfrontend.Cstrategy <> t2 var
R71345:71350 compcert.cfrontend.Csyntax <> Swhile constr
R71354:71354 compcert.cfrontend.Cstrategy <> s var
R71352:71352 compcert.cfrontend.Cstrategy <> a var
R71342:71342 compcert.cfrontend.Cstrategy <> m var
R71340:71340 compcert.cfrontend.Cstrategy <> e var
R71292:71310 compcert.cfrontend.Cstrategy <> out_break_or_return ind
R71317:71319 compcert.cfrontend.Cstrategy <> out var
R71312:71315 compcert.cfrontend.Cstrategy <> out' var
R71255:71263 compcert.cfrontend.Cstrategy <> exec_stmt ind
R71278:71281 compcert.cfrontend.Cstrategy <> out' var
R71275:71276 compcert.cfrontend.Cstrategy <> m2 var
R71272:71273 compcert.cfrontend.Cstrategy <> t2 var
R71270:71270 compcert.cfrontend.Cstrategy <> s var
R71267:71268 compcert.cfrontend.Cstrategy <> m1 var
R71265:71265 compcert.cfrontend.Cstrategy <> e var
R71233:71235 Coq.Init.Logic <> :type_scope:x_'='_x not
R71212:71219 compcert.cfrontend.Cop <> bool_val def
R71224:71229 compcert.cfrontend.Csyntax <> typeof def
R71231:71231 compcert.cfrontend.Cstrategy <> a var
R71221:71221 compcert.cfrontend.Cstrategy <> v var
R71236:71239 Coq.Init.Datatypes <> Some constr
R71241:71244 Coq.Init.Datatypes <> true constr
R71173:71187 compcert.cfrontend.Cstrategy <> eval_expression ind
R71201:71201 compcert.cfrontend.Cstrategy <> v var
R71198:71199 compcert.cfrontend.Cstrategy <> m1 var
R71195:71196 compcert.cfrontend.Cstrategy <> t1 var
R71193:71193 compcert.cfrontend.Cstrategy <> a var
R71191:71191 compcert.cfrontend.Cstrategy <> m var
R71189:71189 compcert.cfrontend.Cstrategy <> e var
R71665:71673 compcert.cfrontend.Cstrategy <> exec_stmt ind
R71728:71730 compcert.cfrontend.Cstrategy <> out var
R71725:71726 compcert.cfrontend.Cstrategy <> m3 var
R71711:71714 compcert.common.Events <> ::x_'**'_x not
R71709:71710 compcert.cfrontend.Cstrategy <> t1 var
R71717:71720 compcert.common.Events <> ::x_'**'_x not
R71715:71716 compcert.cfrontend.Cstrategy <> t2 var
R71721:71722 compcert.cfrontend.Cstrategy <> t3 var
R71680:71685 compcert.cfrontend.Csyntax <> Swhile constr
R71689:71689 compcert.cfrontend.Cstrategy <> s var
R71687:71687 compcert.cfrontend.Cstrategy <> a var
R71677:71677 compcert.cfrontend.Cstrategy <> m var
R71675:71675 compcert.cfrontend.Cstrategy <> e var
R71618:71626 compcert.cfrontend.Cstrategy <> exec_stmt ind
R71652:71654 compcert.cfrontend.Cstrategy <> out var
R71649:71650 compcert.cfrontend.Cstrategy <> m3 var
R71646:71647 compcert.cfrontend.Cstrategy <> t3 var
R71634:71639 compcert.cfrontend.Csyntax <> Swhile constr
R71643:71643 compcert.cfrontend.Cstrategy <> s var
R71641:71641 compcert.cfrontend.Cstrategy <> a var
R71630:71631 compcert.cfrontend.Cstrategy <> m2 var
R71628:71628 compcert.cfrontend.Cstrategy <> e var
R71581:71602 compcert.cfrontend.Cstrategy <> out_normal_or_continue ind
R71604:71607 compcert.cfrontend.Cstrategy <> out1 var
R71544:71552 compcert.cfrontend.Cstrategy <> exec_stmt ind
R71567:71570 compcert.cfrontend.Cstrategy <> out1 var
R71564:71565 compcert.cfrontend.Cstrategy <> m2 var
R71561:71562 compcert.cfrontend.Cstrategy <> t2 var
R71559:71559 compcert.cfrontend.Cstrategy <> s var
R71556:71557 compcert.cfrontend.Cstrategy <> m1 var
R71554:71554 compcert.cfrontend.Cstrategy <> e var
R71522:71524 Coq.Init.Logic <> :type_scope:x_'='_x not
R71501:71508 compcert.cfrontend.Cop <> bool_val def
R71513:71518 compcert.cfrontend.Csyntax <> typeof def
R71520:71520 compcert.cfrontend.Cstrategy <> a var
R71510:71510 compcert.cfrontend.Cstrategy <> v var
R71525:71528 Coq.Init.Datatypes <> Some constr
R71530:71533 Coq.Init.Datatypes <> true constr
R71462:71476 compcert.cfrontend.Cstrategy <> eval_expression ind
R71490:71490 compcert.cfrontend.Cstrategy <> v var
R71487:71488 compcert.cfrontend.Cstrategy <> m1 var
R71484:71485 compcert.cfrontend.Cstrategy <> t1 var
R71482:71482 compcert.cfrontend.Cstrategy <> a var
R71480:71480 compcert.cfrontend.Cstrategy <> m var
R71478:71478 compcert.cfrontend.Cstrategy <> e var
R71955:71963 compcert.cfrontend.Cstrategy <> exec_stmt ind
R72014:72023 compcert.cfrontend.Cstrategy <> Out_normal constr
R72011:72012 compcert.cfrontend.Cstrategy <> m2 var
R72003:72006 compcert.common.Events <> ::x_'**'_x not
R72001:72002 compcert.cfrontend.Cstrategy <> t1 var
R72007:72008 compcert.cfrontend.Cstrategy <> t2 var
R71970:71977 compcert.cfrontend.Csyntax <> Sdowhile constr
R71981:71981 compcert.cfrontend.Cstrategy <> s var
R71979:71979 compcert.cfrontend.Cstrategy <> a var
R71967:71967 compcert.cfrontend.Cstrategy <> m var
R71965:71965 compcert.cfrontend.Cstrategy <> e var
R71932:71934 Coq.Init.Logic <> :type_scope:x_'='_x not
R71911:71918 compcert.cfrontend.Cop <> bool_val def
R71923:71928 compcert.cfrontend.Csyntax <> typeof def
R71930:71930 compcert.cfrontend.Cstrategy <> a var
R71920:71920 compcert.cfrontend.Cstrategy <> v var
R71935:71938 Coq.Init.Datatypes <> Some constr
R71940:71944 Coq.Init.Datatypes <> false constr
R71871:71885 compcert.cfrontend.Cstrategy <> eval_expression ind
R71900:71900 compcert.cfrontend.Cstrategy <> v var
R71897:71898 compcert.cfrontend.Cstrategy <> m2 var
R71894:71895 compcert.cfrontend.Cstrategy <> t2 var
R71892:71892 compcert.cfrontend.Cstrategy <> a var
R71889:71890 compcert.cfrontend.Cstrategy <> m1 var
R71887:71887 compcert.cfrontend.Cstrategy <> e var
R71834:71855 compcert.cfrontend.Cstrategy <> out_normal_or_continue ind
R71857:71860 compcert.cfrontend.Cstrategy <> out1 var
R71798:71806 compcert.cfrontend.Cstrategy <> exec_stmt ind
R71820:71823 compcert.cfrontend.Cstrategy <> out1 var
R71817:71818 compcert.cfrontend.Cstrategy <> m1 var
R71814:71815 compcert.cfrontend.Cstrategy <> t1 var
R71812:71812 compcert.cfrontend.Cstrategy <> s var
R71810:71810 compcert.cfrontend.Cstrategy <> m var
R71808:71808 compcert.cfrontend.Cstrategy <> e var
R72158:72166 compcert.cfrontend.Cstrategy <> exec_stmt ind
R72208:72210 compcert.cfrontend.Cstrategy <> out var
R72205:72206 compcert.cfrontend.Cstrategy <> m1 var
R72203:72203 compcert.cfrontend.Cstrategy <> t var
R72173:72180 compcert.cfrontend.Csyntax <> Sdowhile constr
R72184:72184 compcert.cfrontend.Cstrategy <> s var
R72182:72182 compcert.cfrontend.Cstrategy <> a var
R72170:72170 compcert.cfrontend.Cstrategy <> m var
R72168:72168 compcert.cfrontend.Cstrategy <> e var
R72120:72138 compcert.cfrontend.Cstrategy <> out_break_or_return ind
R72145:72147 compcert.cfrontend.Cstrategy <> out var
R72140:72143 compcert.cfrontend.Cstrategy <> out1 var
R72085:72093 compcert.cfrontend.Cstrategy <> exec_stmt ind
R72106:72109 compcert.cfrontend.Cstrategy <> out1 var
R72103:72104 compcert.cfrontend.Cstrategy <> m1 var
R72101:72101 compcert.cfrontend.Cstrategy <> t var
R72099:72099 compcert.cfrontend.Cstrategy <> s var
R72097:72097 compcert.cfrontend.Cstrategy <> m var
R72095:72095 compcert.cfrontend.Cstrategy <> e var
R72492:72500 compcert.cfrontend.Cstrategy <> exec_stmt ind
R72558:72560 compcert.cfrontend.Cstrategy <> out var
R72555:72556 compcert.cfrontend.Cstrategy <> m3 var
R72541:72544 compcert.common.Events <> ::x_'**'_x not
R72539:72540 compcert.cfrontend.Cstrategy <> t1 var
R72547:72550 compcert.common.Events <> ::x_'**'_x not
R72545:72546 compcert.cfrontend.Cstrategy <> t2 var
R72551:72552 compcert.cfrontend.Cstrategy <> t3 var
R72507:72514 compcert.cfrontend.Csyntax <> Sdowhile constr
R72518:72518 compcert.cfrontend.Cstrategy <> s var
R72516:72516 compcert.cfrontend.Cstrategy <> a var
R72504:72504 compcert.cfrontend.Cstrategy <> m var
R72502:72502 compcert.cfrontend.Cstrategy <> e var
R72443:72451 compcert.cfrontend.Cstrategy <> exec_stmt ind
R72479:72481 compcert.cfrontend.Cstrategy <> out var
R72476:72477 compcert.cfrontend.Cstrategy <> m3 var
R72473:72474 compcert.cfrontend.Cstrategy <> t3 var
R72459:72466 compcert.cfrontend.Csyntax <> Sdowhile constr
R72470:72470 compcert.cfrontend.Cstrategy <> s var
R72468:72468 compcert.cfrontend.Cstrategy <> a var
R72455:72456 compcert.cfrontend.Cstrategy <> m2 var
R72453:72453 compcert.cfrontend.Cstrategy <> e var
R72421:72423 Coq.Init.Logic <> :type_scope:x_'='_x not
R72400:72407 compcert.cfrontend.Cop <> bool_val def
R72412:72417 compcert.cfrontend.Csyntax <> typeof def
R72419:72419 compcert.cfrontend.Cstrategy <> a var
R72409:72409 compcert.cfrontend.Cstrategy <> v var
R72424:72427 Coq.Init.Datatypes <> Some constr
R72429:72432 Coq.Init.Datatypes <> true constr
R72360:72374 compcert.cfrontend.Cstrategy <> eval_expression ind
R72389:72389 compcert.cfrontend.Cstrategy <> v var
R72386:72387 compcert.cfrontend.Cstrategy <> m2 var
R72383:72384 compcert.cfrontend.Cstrategy <> t2 var
R72381:72381 compcert.cfrontend.Cstrategy <> a var
R72378:72379 compcert.cfrontend.Cstrategy <> m1 var
R72376:72376 compcert.cfrontend.Cstrategy <> e var
R72323:72344 compcert.cfrontend.Cstrategy <> out_normal_or_continue ind
R72346:72349 compcert.cfrontend.Cstrategy <> out1 var
R72287:72295 compcert.cfrontend.Cstrategy <> exec_stmt ind
R72309:72312 compcert.cfrontend.Cstrategy <> out1 var
R72306:72307 compcert.cfrontend.Cstrategy <> m1 var
R72303:72304 compcert.cfrontend.Cstrategy <> t1 var
R72301:72301 compcert.cfrontend.Cstrategy <> s var
R72299:72299 compcert.cfrontend.Cstrategy <> m var
R72297:72297 compcert.cfrontend.Cstrategy <> e var
R72726:72734 compcert.cfrontend.Cstrategy <> exec_stmt ind
R72789:72791 compcert.cfrontend.Cstrategy <> out var
R72786:72787 compcert.cfrontend.Cstrategy <> m2 var
R72778:72781 compcert.common.Events <> ::x_'**'_x not
R72776:72777 compcert.cfrontend.Cstrategy <> t1 var
R72782:72783 compcert.cfrontend.Cstrategy <> t2 var
R72741:72744 compcert.cfrontend.Csyntax <> Sfor constr
R72755:72755 compcert.cfrontend.Cstrategy <> s var
R72752:72753 compcert.cfrontend.Cstrategy <> a3 var
R72749:72750 compcert.cfrontend.Cstrategy <> a2 var
R72746:72747 compcert.cfrontend.Cstrategy <> a1 var
R72738:72738 compcert.cfrontend.Cstrategy <> m var
R72736:72736 compcert.cfrontend.Cstrategy <> e var
R72671:72679 compcert.cfrontend.Cstrategy <> exec_stmt ind
R72713:72715 compcert.cfrontend.Cstrategy <> out var
R72710:72711 compcert.cfrontend.Cstrategy <> m2 var
R72707:72708 compcert.cfrontend.Cstrategy <> t2 var
R72687:72690 compcert.cfrontend.Csyntax <> Sfor constr
R72704:72704 compcert.cfrontend.Cstrategy <> s var
R72701:72702 compcert.cfrontend.Cstrategy <> a3 var
R72698:72699 compcert.cfrontend.Cstrategy <> a2 var
R72692:72696 compcert.cfrontend.Csyntax <> Sskip constr
R72683:72684 compcert.cfrontend.Cstrategy <> m1 var
R72681:72681 compcert.cfrontend.Cstrategy <> e var
R72628:72636 compcert.cfrontend.Cstrategy <> exec_stmt ind
R72651:72660 compcert.cfrontend.Cstrategy <> Out_normal constr
R72648:72649 compcert.cfrontend.Cstrategy <> m1 var
R72645:72646 compcert.cfrontend.Cstrategy <> t1 var
R72642:72643 compcert.cfrontend.Cstrategy <> a1 var
R72640:72640 compcert.cfrontend.Cstrategy <> m var
R72638:72638 compcert.cfrontend.Cstrategy <> e var
R72931:72939 compcert.cfrontend.Cstrategy <> exec_stmt ind
R72987:72996 compcert.cfrontend.Cstrategy <> Out_normal constr
R72984:72985 compcert.cfrontend.Cstrategy <> m' var
R72982:72982 compcert.cfrontend.Cstrategy <> t var
R72946:72949 compcert.cfrontend.Csyntax <> Sfor constr
R72963:72963 compcert.cfrontend.Cstrategy <> s var
R72960:72961 compcert.cfrontend.Cstrategy <> a3 var
R72957:72958 compcert.cfrontend.Cstrategy <> a2 var
R72951:72955 compcert.cfrontend.Csyntax <> Sskip constr
R72943:72943 compcert.cfrontend.Cstrategy <> m var
R72941:72941 compcert.cfrontend.Cstrategy <> e var
R72908:72910 Coq.Init.Logic <> :type_scope:x_'='_x not
R72886:72893 compcert.cfrontend.Cop <> bool_val def
R72898:72903 compcert.cfrontend.Csyntax <> typeof def
R72905:72906 compcert.cfrontend.Cstrategy <> a2 var
R72895:72895 compcert.cfrontend.Cstrategy <> v var
R72911:72914 Coq.Init.Datatypes <> Some constr
R72916:72920 Coq.Init.Datatypes <> false constr
R72847:72861 compcert.cfrontend.Cstrategy <> eval_expression ind
R72875:72875 compcert.cfrontend.Cstrategy <> v var
R72872:72873 compcert.cfrontend.Cstrategy <> m' var
R72870:72870 compcert.cfrontend.Cstrategy <> t var
R72867:72868 compcert.cfrontend.Cstrategy <> a2 var
R72865:72865 compcert.cfrontend.Cstrategy <> m var
R72863:72863 compcert.cfrontend.Cstrategy <> e var
R73226:73234 compcert.cfrontend.Cstrategy <> exec_stmt ind
R73291:73293 compcert.cfrontend.Cstrategy <> out var
R73288:73289 compcert.cfrontend.Cstrategy <> m2 var
R73280:73283 compcert.common.Events <> ::x_'**'_x not
R73278:73279 compcert.cfrontend.Cstrategy <> t1 var
R73284:73285 compcert.cfrontend.Cstrategy <> t2 var
R73241:73244 compcert.cfrontend.Csyntax <> Sfor constr
R73258:73258 compcert.cfrontend.Cstrategy <> s var
R73255:73256 compcert.cfrontend.Cstrategy <> a3 var
R73252:73253 compcert.cfrontend.Cstrategy <> a2 var
R73246:73250 compcert.cfrontend.Csyntax <> Sskip constr
R73238:73238 compcert.cfrontend.Cstrategy <> m var
R73236:73236 compcert.cfrontend.Cstrategy <> e var
R73188:73206 compcert.cfrontend.Cstrategy <> out_break_or_return ind
R73213:73215 compcert.cfrontend.Cstrategy <> out var
R73208:73211 compcert.cfrontend.Cstrategy <> out1 var
R73151:73159 compcert.cfrontend.Cstrategy <> exec_stmt ind
R73174:73177 compcert.cfrontend.Cstrategy <> out1 var
R73171:73172 compcert.cfrontend.Cstrategy <> m2 var
R73168:73169 compcert.cfrontend.Cstrategy <> t2 var
R73166:73166 compcert.cfrontend.Cstrategy <> s var
R73163:73164 compcert.cfrontend.Cstrategy <> m1 var
R73161:73161 compcert.cfrontend.Cstrategy <> e var
R73129:73131 Coq.Init.Logic <> :type_scope:x_'='_x not
R73107:73114 compcert.cfrontend.Cop <> bool_val def
R73119:73124 compcert.cfrontend.Csyntax <> typeof def
R73126:73127 compcert.cfrontend.Cstrategy <> a2 var
R73116:73116 compcert.cfrontend.Cstrategy <> v var
R73132:73135 Coq.Init.Datatypes <> Some constr
R73137:73140 Coq.Init.Datatypes <> true constr
R73067:73081 compcert.cfrontend.Cstrategy <> eval_expression ind
R73096:73096 compcert.cfrontend.Cstrategy <> v var
R73093:73094 compcert.cfrontend.Cstrategy <> m1 var
R73090:73091 compcert.cfrontend.Cstrategy <> t1 var
R73087:73088 compcert.cfrontend.Cstrategy <> a2 var
R73085:73085 compcert.cfrontend.Cstrategy <> m var
R73083:73083 compcert.cfrontend.Cstrategy <> e var
R73633:73641 compcert.cfrontend.Cstrategy <> exec_stmt ind
R73710:73712 compcert.cfrontend.Cstrategy <> out var
R73707:73708 compcert.cfrontend.Cstrategy <> m4 var
R73687:73690 compcert.common.Events <> ::x_'**'_x not
R73685:73686 compcert.cfrontend.Cstrategy <> t1 var
R73693:73696 compcert.common.Events <> ::x_'**'_x not
R73691:73692 compcert.cfrontend.Cstrategy <> t2 var
R73699:73702 compcert.common.Events <> ::x_'**'_x not
R73697:73698 compcert.cfrontend.Cstrategy <> t3 var
R73703:73704 compcert.cfrontend.Cstrategy <> t4 var
R73648:73651 compcert.cfrontend.Csyntax <> Sfor constr
R73665:73665 compcert.cfrontend.Cstrategy <> s var
R73662:73663 compcert.cfrontend.Cstrategy <> a3 var
R73659:73660 compcert.cfrontend.Cstrategy <> a2 var
R73653:73657 compcert.cfrontend.Csyntax <> Sskip constr
R73645:73645 compcert.cfrontend.Cstrategy <> m var
R73643:73643 compcert.cfrontend.Cstrategy <> e var
R73578:73586 compcert.cfrontend.Cstrategy <> exec_stmt ind
R73620:73622 compcert.cfrontend.Cstrategy <> out var
R73617:73618 compcert.cfrontend.Cstrategy <> m4 var
R73614:73615 compcert.cfrontend.Cstrategy <> t4 var
R73594:73597 compcert.cfrontend.Csyntax <> Sfor constr
R73611:73611 compcert.cfrontend.Cstrategy <> s var
R73608:73609 compcert.cfrontend.Cstrategy <> a3 var
R73605:73606 compcert.cfrontend.Cstrategy <> a2 var
R73599:73603 compcert.cfrontend.Csyntax <> Sskip constr
R73590:73591 compcert.cfrontend.Cstrategy <> m3 var
R73588:73588 compcert.cfrontend.Cstrategy <> e var
R73534:73542 compcert.cfrontend.Cstrategy <> exec_stmt ind
R73558:73567 compcert.cfrontend.Cstrategy <> Out_normal constr
R73555:73556 compcert.cfrontend.Cstrategy <> m3 var
R73552:73553 compcert.cfrontend.Cstrategy <> t3 var
R73549:73550 compcert.cfrontend.Cstrategy <> a3 var
R73546:73547 compcert.cfrontend.Cstrategy <> m2 var
R73544:73544 compcert.cfrontend.Cstrategy <> e var
R73497:73518 compcert.cfrontend.Cstrategy <> out_normal_or_continue ind
R73520:73523 compcert.cfrontend.Cstrategy <> out1 var
R73460:73468 compcert.cfrontend.Cstrategy <> exec_stmt ind
R73483:73486 compcert.cfrontend.Cstrategy <> out1 var
R73480:73481 compcert.cfrontend.Cstrategy <> m2 var
R73477:73478 compcert.cfrontend.Cstrategy <> t2 var
R73475:73475 compcert.cfrontend.Cstrategy <> s var
R73472:73473 compcert.cfrontend.Cstrategy <> m1 var
R73470:73470 compcert.cfrontend.Cstrategy <> e var
R73438:73440 Coq.Init.Logic <> :type_scope:x_'='_x not
R73416:73423 compcert.cfrontend.Cop <> bool_val def
R73428:73433 compcert.cfrontend.Csyntax <> typeof def
R73435:73436 compcert.cfrontend.Cstrategy <> a2 var
R73425:73425 compcert.cfrontend.Cstrategy <> v var
R73441:73444 Coq.Init.Datatypes <> Some constr
R73446:73449 Coq.Init.Datatypes <> true constr
R73376:73390 compcert.cfrontend.Cstrategy <> eval_expression ind
R73405:73405 compcert.cfrontend.Cstrategy <> v var
R73402:73403 compcert.cfrontend.Cstrategy <> m1 var
R73399:73400 compcert.cfrontend.Cstrategy <> t1 var
R73396:73397 compcert.cfrontend.Cstrategy <> a2 var
R73394:73394 compcert.cfrontend.Cstrategy <> m var
R73392:73392 compcert.cfrontend.Cstrategy <> e var
R73944:73952 compcert.cfrontend.Cstrategy <> exec_stmt ind
R74004:74017 compcert.cfrontend.Cstrategy <> outcome_switch def
R74019:74021 compcert.cfrontend.Cstrategy <> out var
R74000:74001 compcert.cfrontend.Cstrategy <> m2 var
R73992:73995 compcert.common.Events <> ::x_'**'_x not
R73990:73991 compcert.cfrontend.Cstrategy <> t1 var
R73996:73997 compcert.cfrontend.Cstrategy <> t2 var
R73959:73965 compcert.cfrontend.Csyntax <> Sswitch constr
R73969:73970 compcert.cfrontend.Cstrategy <> sl var
R73967:73967 compcert.cfrontend.Cstrategy <> a var
R73956:73956 compcert.cfrontend.Cstrategy <> m var
R73954:73954 compcert.cfrontend.Cstrategy <> e var
R73862:73870 compcert.cfrontend.Cstrategy <> exec_stmt ind
R73931:73933 compcert.cfrontend.Cstrategy <> out var
R73928:73929 compcert.cfrontend.Cstrategy <> m2 var
R73925:73926 compcert.cfrontend.Cstrategy <> t2 var
R73878:73901 compcert.cfrontend.Csem <> seq_of_labeled_statement def
R73904:73916 compcert.cfrontend.Csem <> select_switch def
R73920:73921 compcert.cfrontend.Cstrategy <> sl var
R73918:73918 compcert.cfrontend.Cstrategy <> n var
R73874:73875 compcert.cfrontend.Cstrategy <> m1 var
R73872:73872 compcert.cfrontend.Cstrategy <> e var
R73843:73845 Coq.Init.Logic <> :type_scope:x_'='_x not
R73816:73829 compcert.cfrontend.Cop <> sem_switch_arg def
R73834:73839 compcert.cfrontend.Csyntax <> typeof def
R73841:73841 compcert.cfrontend.Cstrategy <> a var
R73831:73831 compcert.cfrontend.Cstrategy <> v var
R73846:73849 Coq.Init.Datatypes <> Some constr
R73851:73851 compcert.cfrontend.Cstrategy <> n var
R73777:73791 compcert.cfrontend.Cstrategy <> eval_expression ind
R73805:73805 compcert.cfrontend.Cstrategy <> v var
R73802:73803 compcert.cfrontend.Cstrategy <> m1 var
R73799:73800 compcert.cfrontend.Cstrategy <> t1 var
R73797:73797 compcert.cfrontend.Cstrategy <> a var
R73795:73795 compcert.cfrontend.Cstrategy <> m var
R73793:73793 compcert.cfrontend.Cstrategy <> e var
R74689:74700 compcert.cfrontend.Cstrategy <> eval_funcall ind
R74728:74731 compcert.cfrontend.Cstrategy <> vres var
R74725:74726 compcert.cfrontend.Cstrategy <> m4 var
R74723:74723 compcert.cfrontend.Cstrategy <> t var
R74717:74721 compcert.cfrontend.Cstrategy <> vargs var
R74705:74712 compcert.cfrontend.Csyntax <> Internal constr
R74714:74714 compcert.cfrontend.Cstrategy <> f var
R74702:74702 compcert.cfrontend.Cstrategy <> m var
R74669:74671 Coq.Init.Logic <> :type_scope:x_'='_x not
R74635:74647 compcert.common.Memory Mem free_list def
R74653:74665 compcert.cfrontend.Csem <> blocks_of_env def
R74667:74667 compcert.cfrontend.Cstrategy <> e var
R74649:74650 compcert.cfrontend.Cstrategy <> m3 var
R74672:74675 Coq.Init.Datatypes <> Some constr
R74677:74678 compcert.cfrontend.Cstrategy <> m4 var
R74582:74601 compcert.cfrontend.Cstrategy <> outcome_result_value def
R74621:74624 compcert.cfrontend.Cstrategy <> vres var
R74610:74618 compcert.cfrontend.Csyntax <> fn_return proj
R74607:74607 compcert.cfrontend.Cstrategy <> f var
R74603:74605 compcert.cfrontend.Cstrategy <> out var
R74537:74545 compcert.cfrontend.Cstrategy <> exec_stmt ind
R74569:74571 compcert.cfrontend.Cstrategy <> out var
R74566:74567 compcert.cfrontend.Cstrategy <> m3 var
R74564:74564 compcert.cfrontend.Cstrategy <> t var
R74555:74561 compcert.cfrontend.Csyntax <> fn_body proj
R74552:74552 compcert.cfrontend.Cstrategy <> f var
R74549:74550 compcert.cfrontend.Cstrategy <> m2 var
R74547:74547 compcert.cfrontend.Cstrategy <> e var
R74481:74495 compcert.cfrontend.Csem <> bind_parameters ind
R74525:74526 compcert.cfrontend.Cstrategy <> m2 var
R74519:74523 compcert.cfrontend.Cstrategy <> vargs var
R74508:74516 compcert.cfrontend.Csyntax <> fn_params proj
R74505:74505 compcert.cfrontend.Cstrategy <> f var
R74502:74503 compcert.cfrontend.Cstrategy <> m1 var
R74500:74500 compcert.cfrontend.Cstrategy <> e var
R74497:74498 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R74408:74422 compcert.cfrontend.Csem <> alloc_variables ind
R74469:74470 compcert.cfrontend.Cstrategy <> m1 var
R74467:74467 compcert.cfrontend.Cstrategy <> e var
R74450:74453 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R74440:74448 compcert.cfrontend.Csyntax <> fn_params proj
R74437:74437 compcert.cfrontend.Cstrategy <> f var
R74457:74463 compcert.cfrontend.Csyntax <> fn_vars proj
R74454:74454 compcert.cfrontend.Cstrategy <> f var
R74434:74434 compcert.cfrontend.Cstrategy <> m var
R74424:74432 compcert.cfrontend.Csem <> empty_env def
R74335:74346 compcert.lib.Coqlib <> list_norepet ind
R74372:74375 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R74349:74357 compcert.cfrontend.Csyntax <> var_names def
R74362:74370 compcert.cfrontend.Csyntax <> fn_params proj
R74359:74359 compcert.cfrontend.Cstrategy <> f var
R74376:74384 compcert.cfrontend.Csyntax <> var_names def
R74389:74395 compcert.cfrontend.Csyntax <> fn_vars proj
R74386:74386 compcert.cfrontend.Cstrategy <> f var
R74859:74870 compcert.cfrontend.Cstrategy <> eval_funcall ind
R74916:74919 compcert.cfrontend.Cstrategy <> vres var
R74913:74914 compcert.cfrontend.Cstrategy <> m' var
R74911:74911 compcert.cfrontend.Cstrategy <> t var
R74905:74909 compcert.cfrontend.Cstrategy <> vargs var
R74875:74882 compcert.cfrontend.Csyntax <> External constr
R74898:74902 compcert.cfrontend.Cstrategy <> cconv var
R74893:74896 compcert.cfrontend.Cstrategy <> tres var
R74887:74891 compcert.cfrontend.Cstrategy <> targs var
R74884:74885 compcert.cfrontend.Cstrategy <> ef var
R74872:74872 compcert.cfrontend.Cstrategy <> m var
R74812:74824 compcert.common.Events <> external_call def
R74847:74848 compcert.cfrontend.Cstrategy <> m' var
R74842:74845 compcert.cfrontend.Cstrategy <> vres var
R74840:74840 compcert.cfrontend.Cstrategy <> t var
R74838:74838 compcert.cfrontend.Cstrategy <> m var
R74832:74836 compcert.cfrontend.Cstrategy <> vargs var
R74829:74830 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R74826:74827 compcert.cfrontend.Cstrategy <> ef var
def 74930:74949 <> eval_expression_ind5
R74969:74983 compcert.cfrontend.Cstrategy <> eval_expression ind
def 75002:75015 <> eval_expr_ind5
R75035:75043 compcert.cfrontend.Cstrategy <> eval_expr ind
def 75062:75079 <> eval_exprlist_ind5
R75099:75111 compcert.cfrontend.Cstrategy <> eval_exprlist ind
def 75130:75143 <> exec_stmt_ind5
R75163:75171 compcert.cfrontend.Cstrategy <> exec_stmt ind
def 75190:75206 <> eval_funcall_ind5
R75226:75237 compcert.cfrontend.Cstrategy <> eval_funcall ind
def 75267:75283 <> bigstep_induction
R75298:75317 compcert.cfrontend.Cstrategy <> eval_expression_ind5 scheme
R75321:75334 compcert.cfrontend.Cstrategy <> eval_expr_ind5 scheme
R75338:75355 compcert.cfrontend.Cstrategy <> eval_exprlist_ind5 scheme
R75366:75379 compcert.cfrontend.Cstrategy <> exec_stmt_ind5 scheme
R75382:75398 compcert.cfrontend.Cstrategy <> eval_funcall_ind5 scheme
ind 75600:75611 <> evalinf_expr
constr 75668:75680 <> evalinf_field
constr 75785:75797 <> evalinf_valof
constr 75898:75910 <> evalinf_deref
constr 76011:76024 <> evalinf_addrof
constr 76126:76137 <> evalinf_unop
constr 76243:76260 <> evalinf_binop_left
constr 76379:76397 <> evalinf_binop_right
constr 76569:76580 <> evalinf_cast
constr 76680:76693 <> evalinf_seqand
constr 76807:76822 <> evalinf_seqand_2
constr 77078:77090 <> evalinf_seqor
constr 77203:77217 <> evalinf_seqor_2
constr 77473:77489 <> evalinf_condition
constr 77612:77630 <> evalinf_condition_2
constr 77914:77932 <> evalinf_assign_left
constr 78046:78065 <> evalinf_assign_right
constr 78232:78252 <> evalinf_assignop_left
constr 78386:78407 <> evalinf_assignop_right
constr 78594:78609 <> evalinf_postincr
constr 78719:78736 <> evalinf_comma_left
constr 78849:78867 <> evalinf_comma_right
constr 79103:79119 <> evalinf_call_left
constr 79231:79248 <> evalinf_call_right
constr 79421:79432 <> evalinf_call
ind 79980:79995 <> evalinf_exprlist
constr 80048:80064 <> evalinf_cons_left
constr 80171:80188 <> evalinf_cons_right
ind 80444:80455 <> execinf_stmt
constr 80509:80519 <> execinf_Sdo
constr 80612:80625 <> execinf_Sseq_1
constr 80731:80744 <> execinf_Sseq_2
constr 80907:80930 <> execinf_Sifthenelse_test
constr 81042:81060 <> execinf_Sifthenelse
constr 81290:81309 <> execinf_Sreturn_some
constr 81409:81427 <> execinf_Swhile_test
constr 81526:81544 <> execinf_Swhile_body
constr 81738:81756 <> execinf_Swhile_loop
constr 82051:82071 <> execinf_Sdowhile_body
constr 82169:82189 <> execinf_Sdowhile_test
constr 82382:82402 <> execinf_Sdowhile_loop
constr 82701:82720 <> execinf_Sfor_start_1
constr 82829:82848 <> execinf_Sfor_start_2
constr 83047:83063 <> execinf_Sfor_test
constr 83172:83188 <> execinf_Sfor_body
constr 83396:83412 <> execinf_Sfor_next
constr 83711:83727 <> execinf_Sfor_loop
constr 84099:84118 <> execinf_Sswitch_expr
constr 84222:84241 <> execinf_Sswitch_body
ind 84615:84629 <> evalinf_funcall
constr 84685:84708 <> evalinf_funcall_internal
R75644:75651 compcert.common.Events <> traceinf coind
R75636:75639 compcert.cfrontend.Csyntax <> expr ind
R75628:75631 compcert.cfrontend.Csem <> kind ind
R75621:75623 compcert.common.Memory <> mem syndef
R75614:75616 compcert.cfrontend.Csem <> env def
R80024:80031 compcert.common.Events <> traceinf coind
R80012:80019 compcert.cfrontend.Csyntax <> exprlist ind
R80005:80007 compcert.common.Memory <> mem syndef
R79998:80000 compcert.cfrontend.Csem <> env def
R80485:80492 compcert.common.Events <> traceinf coind
R80472:80480 compcert.cfrontend.Csyntax <> statement ind
R80465:80467 compcert.common.Memory <> mem syndef
R80458:80460 compcert.cfrontend.Csem <> env def
R84661:84668 compcert.common.Events <> traceinf coind
R84649:84652 Coq.Init.Datatypes <> list ind
R84654:84656 compcert.common.Values <> val ind
R84639:84644 compcert.cfrontend.Csyntax <> fundef ind
R84632:84634 compcert.common.Memory <> mem syndef
R75743:75754 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R75779:75779 compcert.cfrontend.Cstrategy <> t var
R75764:75769 compcert.cfrontend.Csyntax <> Efield constr
R75775:75776 compcert.cfrontend.Cstrategy <> ty var
R75773:75773 compcert.cfrontend.Cstrategy <> f var
R75771:75771 compcert.cfrontend.Cstrategy <> a var
R75760:75761 compcert.cfrontend.Csem <> LV constr
R75758:75758 compcert.cfrontend.Cstrategy <> m var
R75756:75756 compcert.cfrontend.Cstrategy <> e var
R75710:75721 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R75732:75732 compcert.cfrontend.Cstrategy <> t var
R75730:75730 compcert.cfrontend.Cstrategy <> a var
R75727:75728 compcert.cfrontend.Csem <> RV constr
R75725:75725 compcert.cfrontend.Cstrategy <> m var
R75723:75723 compcert.cfrontend.Cstrategy <> e var
R75858:75869 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R75892:75892 compcert.cfrontend.Cstrategy <> t var
R75879:75884 compcert.cfrontend.Csyntax <> Evalof constr
R75888:75889 compcert.cfrontend.Cstrategy <> ty var
R75886:75886 compcert.cfrontend.Cstrategy <> a var
R75875:75876 compcert.cfrontend.Csem <> RV constr
R75873:75873 compcert.cfrontend.Cstrategy <> m var
R75871:75871 compcert.cfrontend.Cstrategy <> e var
R75825:75836 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R75847:75847 compcert.cfrontend.Cstrategy <> t var
R75845:75845 compcert.cfrontend.Cstrategy <> a var
R75842:75843 compcert.cfrontend.Csem <> LV constr
R75840:75840 compcert.cfrontend.Cstrategy <> m var
R75838:75838 compcert.cfrontend.Cstrategy <> e var
R75971:75982 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76005:76005 compcert.cfrontend.Cstrategy <> t var
R75992:75997 compcert.cfrontend.Csyntax <> Ederef constr
R76001:76002 compcert.cfrontend.Cstrategy <> ty var
R75999:75999 compcert.cfrontend.Cstrategy <> a var
R75988:75989 compcert.cfrontend.Csem <> LV constr
R75986:75986 compcert.cfrontend.Cstrategy <> m var
R75984:75984 compcert.cfrontend.Cstrategy <> e var
R75938:75949 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R75960:75960 compcert.cfrontend.Cstrategy <> t var
R75958:75958 compcert.cfrontend.Cstrategy <> a var
R75955:75956 compcert.cfrontend.Csem <> RV constr
R75953:75953 compcert.cfrontend.Cstrategy <> m var
R75951:75951 compcert.cfrontend.Cstrategy <> e var
R76085:76096 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76120:76120 compcert.cfrontend.Cstrategy <> t var
R76106:76112 compcert.cfrontend.Csyntax <> Eaddrof constr
R76116:76117 compcert.cfrontend.Cstrategy <> ty var
R76114:76114 compcert.cfrontend.Cstrategy <> a var
R76102:76103 compcert.cfrontend.Csem <> RV constr
R76100:76100 compcert.cfrontend.Cstrategy <> m var
R76098:76098 compcert.cfrontend.Cstrategy <> e var
R76052:76063 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76074:76074 compcert.cfrontend.Cstrategy <> t var
R76072:76072 compcert.cfrontend.Cstrategy <> a var
R76069:76070 compcert.cfrontend.Csem <> LV constr
R76067:76067 compcert.cfrontend.Cstrategy <> m var
R76065:76065 compcert.cfrontend.Cstrategy <> e var
R76201:76212 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76237:76237 compcert.cfrontend.Cstrategy <> t var
R76222:76226 compcert.cfrontend.Csyntax <> Eunop constr
R76233:76234 compcert.cfrontend.Cstrategy <> ty var
R76231:76231 compcert.cfrontend.Cstrategy <> a var
R76228:76229 compcert.cfrontend.Cstrategy <> op var
R76218:76219 compcert.cfrontend.Csem <> RV constr
R76216:76216 compcert.cfrontend.Cstrategy <> m var
R76214:76214 compcert.cfrontend.Cstrategy <> e var
R76168:76179 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76190:76190 compcert.cfrontend.Cstrategy <> t var
R76188:76188 compcert.cfrontend.Cstrategy <> a var
R76185:76186 compcert.cfrontend.Csem <> RV constr
R76183:76183 compcert.cfrontend.Cstrategy <> m var
R76181:76181 compcert.cfrontend.Cstrategy <> e var
R76331:76342 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76372:76373 compcert.cfrontend.Cstrategy <> t1 var
R76352:76357 compcert.cfrontend.Csyntax <> Ebinop constr
R76368:76369 compcert.cfrontend.Cstrategy <> ty var
R76365:76366 compcert.cfrontend.Cstrategy <> a2 var
R76362:76363 compcert.cfrontend.Cstrategy <> a1 var
R76359:76360 compcert.cfrontend.Cstrategy <> op var
R76348:76349 compcert.cfrontend.Csem <> RV constr
R76346:76346 compcert.cfrontend.Cstrategy <> m var
R76344:76344 compcert.cfrontend.Cstrategy <> e var
R76296:76307 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76319:76320 compcert.cfrontend.Cstrategy <> t1 var
R76316:76317 compcert.cfrontend.Cstrategy <> a1 var
R76313:76314 compcert.cfrontend.Csem <> RV constr
R76311:76311 compcert.cfrontend.Cstrategy <> m var
R76309:76309 compcert.cfrontend.Cstrategy <> e var
R76512:76523 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76556:76560 compcert.common.Events <> ::x_'***'_x not
R76554:76555 compcert.cfrontend.Cstrategy <> t1 var
R76561:76562 compcert.cfrontend.Cstrategy <> t2 var
R76533:76538 compcert.cfrontend.Csyntax <> Ebinop constr
R76549:76550 compcert.cfrontend.Cstrategy <> ty var
R76546:76547 compcert.cfrontend.Cstrategy <> a2 var
R76543:76544 compcert.cfrontend.Cstrategy <> a1 var
R76540:76541 compcert.cfrontend.Cstrategy <> op var
R76529:76530 compcert.cfrontend.Csem <> RV constr
R76527:76527 compcert.cfrontend.Cstrategy <> m var
R76525:76525 compcert.cfrontend.Cstrategy <> e var
R76476:76487 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76500:76501 compcert.cfrontend.Cstrategy <> t2 var
R76497:76498 compcert.cfrontend.Cstrategy <> a2 var
R76494:76495 compcert.cfrontend.Csem <> RV constr
R76491:76492 compcert.cfrontend.Cstrategy <> m' var
R76489:76489 compcert.cfrontend.Cstrategy <> e var
R76443:76451 compcert.cfrontend.Cstrategy <> eval_expr ind
R76469:76471 compcert.cfrontend.Cstrategy <> a1' var
R76466:76467 compcert.cfrontend.Cstrategy <> m' var
R76463:76464 compcert.cfrontend.Cstrategy <> t1 var
R76460:76461 compcert.cfrontend.Cstrategy <> a1 var
R76457:76458 compcert.cfrontend.Csem <> RV constr
R76455:76455 compcert.cfrontend.Cstrategy <> m var
R76453:76453 compcert.cfrontend.Cstrategy <> e var
R76641:76652 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76674:76674 compcert.cfrontend.Cstrategy <> t var
R76662:76666 compcert.cfrontend.Csyntax <> Ecast constr
R76670:76671 compcert.cfrontend.Cstrategy <> ty var
R76668:76668 compcert.cfrontend.Cstrategy <> a var
R76658:76659 compcert.cfrontend.Csem <> RV constr
R76656:76656 compcert.cfrontend.Cstrategy <> m var
R76654:76654 compcert.cfrontend.Cstrategy <> e var
R76608:76619 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76630:76630 compcert.cfrontend.Cstrategy <> t var
R76628:76628 compcert.cfrontend.Cstrategy <> a var
R76625:76626 compcert.cfrontend.Csem <> RV constr
R76623:76623 compcert.cfrontend.Cstrategy <> m var
R76621:76621 compcert.cfrontend.Cstrategy <> e var
R76761:76772 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76800:76801 compcert.cfrontend.Cstrategy <> t1 var
R76782:76788 compcert.cfrontend.Csyntax <> Eseqand constr
R76796:76797 compcert.cfrontend.Cstrategy <> ty var
R76793:76794 compcert.cfrontend.Cstrategy <> a2 var
R76790:76791 compcert.cfrontend.Cstrategy <> a1 var
R76778:76779 compcert.cfrontend.Csem <> RV constr
R76776:76776 compcert.cfrontend.Cstrategy <> m var
R76774:76774 compcert.cfrontend.Cstrategy <> e var
R76726:76737 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R76749:76750 compcert.cfrontend.Cstrategy <> t1 var
R76746:76747 compcert.cfrontend.Cstrategy <> a1 var
R76743:76744 compcert.cfrontend.Csem <> RV constr
R76741:76741 compcert.cfrontend.Cstrategy <> m var
R76739:76739 compcert.cfrontend.Cstrategy <> e var
R77025:77036 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R77067:77069 compcert.common.Events <> ::x_'***'_x not
R77065:77066 compcert.cfrontend.Cstrategy <> t1 var
R77070:77071 compcert.cfrontend.Cstrategy <> t2 var
R77046:77052 compcert.cfrontend.Csyntax <> Eseqand constr
R77060:77061 compcert.cfrontend.Cstrategy <> ty var
R77057:77058 compcert.cfrontend.Cstrategy <> a2 var
R77054:77055 compcert.cfrontend.Cstrategy <> a1 var
R77042:77043 compcert.cfrontend.Csem <> RV constr
R77040:77040 compcert.cfrontend.Cstrategy <> m var
R77038:77038 compcert.cfrontend.Cstrategy <> e var
R76989:77000 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R77013:77014 compcert.cfrontend.Cstrategy <> t2 var
R77010:77011 compcert.cfrontend.Cstrategy <> a2 var
R77007:77008 compcert.cfrontend.Csem <> RV constr
R77004:77005 compcert.cfrontend.Cstrategy <> m' var
R77002:77002 compcert.cfrontend.Cstrategy <> e var
R76967:76969 Coq.Init.Logic <> :type_scope:x_'='_x not
R76944:76951 compcert.cfrontend.Cop <> bool_val def
R76957:76962 compcert.cfrontend.Csyntax <> typeof def
R76964:76965 compcert.cfrontend.Cstrategy <> a1 var
R76953:76954 compcert.cfrontend.Cstrategy <> v1 var
R76970:76973 Coq.Init.Datatypes <> Some constr
R76975:76978 Coq.Init.Datatypes <> true constr
R76901:76918 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R76932:76933 compcert.cfrontend.Cstrategy <> v1 var
R76928:76930 compcert.cfrontend.Cstrategy <> a1' var
R76925:76926 compcert.cfrontend.Cstrategy <> m' var
R76923:76923 compcert.cfrontend.Cstrategy <> e var
R76920:76921 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R76868:76876 compcert.cfrontend.Cstrategy <> eval_expr ind
R76894:76896 compcert.cfrontend.Cstrategy <> a1' var
R76891:76892 compcert.cfrontend.Cstrategy <> m' var
R76888:76889 compcert.cfrontend.Cstrategy <> t1 var
R76885:76886 compcert.cfrontend.Cstrategy <> a1 var
R76882:76883 compcert.cfrontend.Csem <> RV constr
R76880:76880 compcert.cfrontend.Cstrategy <> m var
R76878:76878 compcert.cfrontend.Cstrategy <> e var
R77158:77169 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R77196:77197 compcert.cfrontend.Cstrategy <> t1 var
R77179:77184 compcert.cfrontend.Csyntax <> Eseqor constr
R77192:77193 compcert.cfrontend.Cstrategy <> ty var
R77189:77190 compcert.cfrontend.Cstrategy <> a2 var
R77186:77187 compcert.cfrontend.Cstrategy <> a1 var
R77175:77176 compcert.cfrontend.Csem <> RV constr
R77173:77173 compcert.cfrontend.Cstrategy <> m var
R77171:77171 compcert.cfrontend.Cstrategy <> e var
R77123:77134 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R77146:77147 compcert.cfrontend.Cstrategy <> t1 var
R77143:77144 compcert.cfrontend.Cstrategy <> a1 var
R77140:77141 compcert.cfrontend.Csem <> RV constr
R77138:77138 compcert.cfrontend.Cstrategy <> m var
R77136:77136 compcert.cfrontend.Cstrategy <> e var
R77421:77432 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R77462:77464 compcert.common.Events <> ::x_'***'_x not
R77460:77461 compcert.cfrontend.Cstrategy <> t1 var
R77465:77466 compcert.cfrontend.Cstrategy <> t2 var
R77442:77447 compcert.cfrontend.Csyntax <> Eseqor constr
R77455:77456 compcert.cfrontend.Cstrategy <> ty var
R77452:77453 compcert.cfrontend.Cstrategy <> a2 var
R77449:77450 compcert.cfrontend.Cstrategy <> a1 var
R77438:77439 compcert.cfrontend.Csem <> RV constr
R77436:77436 compcert.cfrontend.Cstrategy <> m var
R77434:77434 compcert.cfrontend.Cstrategy <> e var
R77385:77396 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R77409:77410 compcert.cfrontend.Cstrategy <> t2 var
R77406:77407 compcert.cfrontend.Cstrategy <> a2 var
R77403:77404 compcert.cfrontend.Csem <> RV constr
R77400:77401 compcert.cfrontend.Cstrategy <> m' var
R77398:77398 compcert.cfrontend.Cstrategy <> e var
R77362:77364 Coq.Init.Logic <> :type_scope:x_'='_x not
R77339:77346 compcert.cfrontend.Cop <> bool_val def
R77352:77357 compcert.cfrontend.Csyntax <> typeof def
R77359:77360 compcert.cfrontend.Cstrategy <> a1 var
R77348:77349 compcert.cfrontend.Cstrategy <> v1 var
R77365:77368 Coq.Init.Datatypes <> Some constr
R77370:77374 Coq.Init.Datatypes <> false constr
R77296:77313 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R77327:77328 compcert.cfrontend.Cstrategy <> v1 var
R77323:77325 compcert.cfrontend.Cstrategy <> a1' var
R77320:77321 compcert.cfrontend.Cstrategy <> m' var
R77318:77318 compcert.cfrontend.Cstrategy <> e var
R77315:77316 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R77263:77271 compcert.cfrontend.Cstrategy <> eval_expr ind
R77289:77291 compcert.cfrontend.Cstrategy <> a1' var
R77286:77287 compcert.cfrontend.Cstrategy <> m' var
R77283:77284 compcert.cfrontend.Cstrategy <> t1 var
R77280:77281 compcert.cfrontend.Cstrategy <> a1 var
R77277:77278 compcert.cfrontend.Csem <> RV constr
R77275:77275 compcert.cfrontend.Cstrategy <> m var
R77273:77273 compcert.cfrontend.Cstrategy <> e var
R77560:77571 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R77605:77606 compcert.cfrontend.Cstrategy <> t1 var
R77581:77590 compcert.cfrontend.Csyntax <> Econdition constr
R77601:77602 compcert.cfrontend.Cstrategy <> ty var
R77598:77599 compcert.cfrontend.Cstrategy <> a3 var
R77595:77596 compcert.cfrontend.Cstrategy <> a2 var
R77592:77593 compcert.cfrontend.Cstrategy <> a1 var
R77577:77578 compcert.cfrontend.Csem <> RV constr
R77575:77575 compcert.cfrontend.Cstrategy <> m var
R77573:77573 compcert.cfrontend.Cstrategy <> e var
R77525:77536 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R77548:77549 compcert.cfrontend.Cstrategy <> t1 var
R77545:77546 compcert.cfrontend.Cstrategy <> a1 var
R77542:77543 compcert.cfrontend.Csem <> RV constr
R77540:77540 compcert.cfrontend.Cstrategy <> m var
R77538:77538 compcert.cfrontend.Cstrategy <> e var
R77855:77866 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R77903:77905 compcert.common.Events <> ::x_'***'_x not
R77901:77902 compcert.cfrontend.Cstrategy <> t1 var
R77906:77907 compcert.cfrontend.Cstrategy <> t2 var
R77876:77885 compcert.cfrontend.Csyntax <> Econdition constr
R77896:77897 compcert.cfrontend.Cstrategy <> ty var
R77893:77894 compcert.cfrontend.Cstrategy <> a3 var
R77890:77891 compcert.cfrontend.Cstrategy <> a2 var
R77887:77888 compcert.cfrontend.Cstrategy <> a1 var
R77872:77873 compcert.cfrontend.Csem <> RV constr
R77870:77870 compcert.cfrontend.Cstrategy <> m var
R77868:77868 compcert.cfrontend.Cstrategy <> e var
R77799:77810 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R77843:77844 compcert.cfrontend.Cstrategy <> t2 var
R77824:77824 compcert.cfrontend.Cstrategy <> b var
R77839:77840 compcert.cfrontend.Cstrategy <> a3 var
R77831:77832 compcert.cfrontend.Cstrategy <> a2 var
R77817:77818 compcert.cfrontend.Csem <> RV constr
R77814:77815 compcert.cfrontend.Cstrategy <> m' var
R77812:77812 compcert.cfrontend.Cstrategy <> e var
R77780:77782 Coq.Init.Logic <> :type_scope:x_'='_x not
R77757:77764 compcert.cfrontend.Cop <> bool_val def
R77770:77775 compcert.cfrontend.Csyntax <> typeof def
R77777:77778 compcert.cfrontend.Cstrategy <> a1 var
R77766:77767 compcert.cfrontend.Cstrategy <> v1 var
R77783:77786 Coq.Init.Datatypes <> Some constr
R77788:77788 compcert.cfrontend.Cstrategy <> b var
R77714:77731 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R77745:77746 compcert.cfrontend.Cstrategy <> v1 var
R77741:77743 compcert.cfrontend.Cstrategy <> a1' var
R77738:77739 compcert.cfrontend.Cstrategy <> m' var
R77736:77736 compcert.cfrontend.Cstrategy <> e var
R77733:77734 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R77681:77689 compcert.cfrontend.Cstrategy <> eval_expr ind
R77707:77709 compcert.cfrontend.Cstrategy <> a1' var
R77704:77705 compcert.cfrontend.Cstrategy <> m' var
R77701:77702 compcert.cfrontend.Cstrategy <> t1 var
R77698:77699 compcert.cfrontend.Cstrategy <> a1 var
R77695:77696 compcert.cfrontend.Csem <> RV constr
R77693:77693 compcert.cfrontend.Cstrategy <> m var
R77691:77691 compcert.cfrontend.Cstrategy <> e var
R78000:78011 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R78039:78040 compcert.cfrontend.Cstrategy <> t1 var
R78021:78027 compcert.cfrontend.Csyntax <> Eassign constr
R78035:78036 compcert.cfrontend.Cstrategy <> ty var
R78032:78033 compcert.cfrontend.Cstrategy <> a2 var
R78029:78030 compcert.cfrontend.Cstrategy <> a1 var
R78017:78018 compcert.cfrontend.Csem <> RV constr
R78015:78015 compcert.cfrontend.Cstrategy <> m var
R78013:78013 compcert.cfrontend.Cstrategy <> e var
R77965:77976 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R77988:77989 compcert.cfrontend.Cstrategy <> t1 var
R77985:77986 compcert.cfrontend.Cstrategy <> a1 var
R77982:77983 compcert.cfrontend.Csem <> LV constr
R77980:77980 compcert.cfrontend.Cstrategy <> m var
R77978:77978 compcert.cfrontend.Cstrategy <> e var
R78177:78188 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R78219:78223 compcert.common.Events <> ::x_'***'_x not
R78217:78218 compcert.cfrontend.Cstrategy <> t1 var
R78224:78225 compcert.cfrontend.Cstrategy <> t2 var
R78198:78204 compcert.cfrontend.Csyntax <> Eassign constr
R78212:78213 compcert.cfrontend.Cstrategy <> ty var
R78209:78210 compcert.cfrontend.Cstrategy <> a2 var
R78206:78207 compcert.cfrontend.Cstrategy <> a1 var
R78194:78195 compcert.cfrontend.Csem <> RV constr
R78192:78192 compcert.cfrontend.Cstrategy <> m var
R78190:78190 compcert.cfrontend.Cstrategy <> e var
R78141:78152 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R78165:78166 compcert.cfrontend.Cstrategy <> t2 var
R78162:78163 compcert.cfrontend.Cstrategy <> a2 var
R78159:78160 compcert.cfrontend.Csem <> RV constr
R78156:78157 compcert.cfrontend.Cstrategy <> m' var
R78154:78154 compcert.cfrontend.Cstrategy <> e var
R78108:78116 compcert.cfrontend.Cstrategy <> eval_expr ind
R78134:78136 compcert.cfrontend.Cstrategy <> a1' var
R78131:78132 compcert.cfrontend.Cstrategy <> m' var
R78128:78129 compcert.cfrontend.Cstrategy <> t1 var
R78125:78126 compcert.cfrontend.Cstrategy <> a1 var
R78122:78123 compcert.cfrontend.Csem <> LV constr
R78120:78120 compcert.cfrontend.Cstrategy <> m var
R78118:78118 compcert.cfrontend.Cstrategy <> e var
R78329:78340 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R78379:78380 compcert.cfrontend.Cstrategy <> t1 var
R78350:78358 compcert.cfrontend.Csyntax <> Eassignop constr
R78375:78376 compcert.cfrontend.Cstrategy <> ty var
R78369:78373 compcert.cfrontend.Cstrategy <> tyres var
R78366:78367 compcert.cfrontend.Cstrategy <> a2 var
R78363:78364 compcert.cfrontend.Cstrategy <> a1 var
R78360:78361 compcert.cfrontend.Cstrategy <> op var
R78346:78347 compcert.cfrontend.Csem <> RV constr
R78344:78344 compcert.cfrontend.Cstrategy <> m var
R78342:78342 compcert.cfrontend.Cstrategy <> e var
R78294:78305 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R78317:78318 compcert.cfrontend.Cstrategy <> t1 var
R78314:78315 compcert.cfrontend.Cstrategy <> a1 var
R78311:78312 compcert.cfrontend.Csem <> LV constr
R78309:78309 compcert.cfrontend.Cstrategy <> m var
R78307:78307 compcert.cfrontend.Cstrategy <> e var
R78528:78539 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R78581:78585 compcert.common.Events <> ::x_'***'_x not
R78579:78580 compcert.cfrontend.Cstrategy <> t1 var
R78586:78587 compcert.cfrontend.Cstrategy <> t2 var
R78549:78557 compcert.cfrontend.Csyntax <> Eassignop constr
R78574:78575 compcert.cfrontend.Cstrategy <> ty var
R78568:78572 compcert.cfrontend.Cstrategy <> tyres var
R78565:78566 compcert.cfrontend.Cstrategy <> a2 var
R78562:78563 compcert.cfrontend.Cstrategy <> a1 var
R78559:78560 compcert.cfrontend.Cstrategy <> op var
R78545:78546 compcert.cfrontend.Csem <> RV constr
R78543:78543 compcert.cfrontend.Cstrategy <> m var
R78541:78541 compcert.cfrontend.Cstrategy <> e var
R78492:78503 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R78516:78517 compcert.cfrontend.Cstrategy <> t2 var
R78513:78514 compcert.cfrontend.Cstrategy <> a2 var
R78510:78511 compcert.cfrontend.Csem <> RV constr
R78507:78508 compcert.cfrontend.Cstrategy <> m' var
R78505:78505 compcert.cfrontend.Cstrategy <> e var
R78459:78467 compcert.cfrontend.Cstrategy <> eval_expr ind
R78485:78487 compcert.cfrontend.Cstrategy <> a1' var
R78482:78483 compcert.cfrontend.Cstrategy <> m' var
R78479:78480 compcert.cfrontend.Cstrategy <> t1 var
R78476:78477 compcert.cfrontend.Cstrategy <> a1 var
R78473:78474 compcert.cfrontend.Csem <> LV constr
R78471:78471 compcert.cfrontend.Cstrategy <> m var
R78469:78469 compcert.cfrontend.Cstrategy <> e var
R78673:78684 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R78713:78713 compcert.cfrontend.Cstrategy <> t var
R78694:78702 compcert.cfrontend.Csyntax <> Epostincr constr
R78709:78710 compcert.cfrontend.Cstrategy <> ty var
R78707:78707 compcert.cfrontend.Cstrategy <> a var
R78704:78705 compcert.cfrontend.Cstrategy <> id var
R78690:78691 compcert.cfrontend.Csem <> RV constr
R78688:78688 compcert.cfrontend.Cstrategy <> m var
R78686:78686 compcert.cfrontend.Cstrategy <> e var
R78640:78651 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R78662:78662 compcert.cfrontend.Cstrategy <> t var
R78660:78660 compcert.cfrontend.Cstrategy <> a var
R78657:78658 compcert.cfrontend.Csem <> LV constr
R78655:78655 compcert.cfrontend.Cstrategy <> m var
R78653:78653 compcert.cfrontend.Cstrategy <> e var
R78804:78815 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R78842:78843 compcert.cfrontend.Cstrategy <> t1 var
R78825:78830 compcert.cfrontend.Csyntax <> Ecomma constr
R78838:78839 compcert.cfrontend.Cstrategy <> ty var
R78835:78836 compcert.cfrontend.Cstrategy <> a2 var
R78832:78833 compcert.cfrontend.Cstrategy <> a1 var
R78821:78822 compcert.cfrontend.Csem <> RV constr
R78819:78819 compcert.cfrontend.Cstrategy <> m var
R78817:78817 compcert.cfrontend.Cstrategy <> e var
R78769:78780 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R78792:78793 compcert.cfrontend.Cstrategy <> t1 var
R78789:78790 compcert.cfrontend.Cstrategy <> a1 var
R78786:78787 compcert.cfrontend.Csem <> RV constr
R78784:78784 compcert.cfrontend.Cstrategy <> m var
R78782:78782 compcert.cfrontend.Cstrategy <> e var
R79049:79060 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R79090:79094 compcert.common.Events <> ::x_'***'_x not
R79088:79089 compcert.cfrontend.Cstrategy <> t1 var
R79095:79096 compcert.cfrontend.Cstrategy <> t2 var
R79070:79075 compcert.cfrontend.Csyntax <> Ecomma constr
R79083:79084 compcert.cfrontend.Cstrategy <> ty var
R79080:79081 compcert.cfrontend.Cstrategy <> a2 var
R79077:79078 compcert.cfrontend.Cstrategy <> a1 var
R79066:79067 compcert.cfrontend.Csem <> RV constr
R79064:79064 compcert.cfrontend.Cstrategy <> m var
R79062:79062 compcert.cfrontend.Cstrategy <> e var
R79013:79024 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R79037:79038 compcert.cfrontend.Cstrategy <> t2 var
R79034:79035 compcert.cfrontend.Cstrategy <> a2 var
R79031:79032 compcert.cfrontend.Csem <> RV constr
R79028:79029 compcert.cfrontend.Cstrategy <> m1 var
R79026:79026 compcert.cfrontend.Cstrategy <> e var
R78991:78993 Coq.Init.Logic <> :type_scope:x_'='_x not
R78989:78990 compcert.cfrontend.Cstrategy <> ty var
R78994:78999 compcert.cfrontend.Csyntax <> typeof def
R79001:79002 compcert.cfrontend.Cstrategy <> a2 var
R78946:78963 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R78977:78978 compcert.cfrontend.Cstrategy <> v1 var
R78973:78975 compcert.cfrontend.Cstrategy <> a1' var
R78970:78971 compcert.cfrontend.Cstrategy <> m1 var
R78968:78968 compcert.cfrontend.Cstrategy <> e var
R78965:78966 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R78913:78921 compcert.cfrontend.Cstrategy <> eval_expr ind
R78939:78941 compcert.cfrontend.Cstrategy <> a1' var
R78936:78937 compcert.cfrontend.Cstrategy <> m1 var
R78933:78934 compcert.cfrontend.Cstrategy <> t1 var
R78930:78931 compcert.cfrontend.Cstrategy <> a1 var
R78927:78928 compcert.cfrontend.Csem <> RV constr
R78925:78925 compcert.cfrontend.Cstrategy <> m var
R78923:78923 compcert.cfrontend.Cstrategy <> e var
R79187:79198 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R79224:79225 compcert.cfrontend.Cstrategy <> t1 var
R79208:79212 compcert.cfrontend.Csyntax <> Ecall constr
R79220:79221 compcert.cfrontend.Cstrategy <> ty var
R79217:79218 compcert.cfrontend.Cstrategy <> a2 var
R79214:79215 compcert.cfrontend.Cstrategy <> a1 var
R79204:79205 compcert.cfrontend.Csem <> RV constr
R79202:79202 compcert.cfrontend.Cstrategy <> m var
R79200:79200 compcert.cfrontend.Cstrategy <> e var
R79152:79163 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R79175:79176 compcert.cfrontend.Cstrategy <> t1 var
R79172:79173 compcert.cfrontend.Cstrategy <> a1 var
R79169:79170 compcert.cfrontend.Csem <> RV constr
R79167:79167 compcert.cfrontend.Cstrategy <> m var
R79165:79165 compcert.cfrontend.Cstrategy <> e var
R79368:79379 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R79408:79412 compcert.common.Events <> ::x_'***'_x not
R79406:79407 compcert.cfrontend.Cstrategy <> t1 var
R79413:79414 compcert.cfrontend.Cstrategy <> t2 var
R79389:79393 compcert.cfrontend.Csyntax <> Ecall constr
R79401:79402 compcert.cfrontend.Cstrategy <> ty var
R79398:79399 compcert.cfrontend.Cstrategy <> a2 var
R79395:79396 compcert.cfrontend.Cstrategy <> a1 var
R79385:79386 compcert.cfrontend.Csem <> RV constr
R79383:79383 compcert.cfrontend.Cstrategy <> m var
R79381:79381 compcert.cfrontend.Cstrategy <> e var
R79331:79346 compcert.cfrontend.Cstrategy <> evalinf_exprlist ind
R79356:79357 compcert.cfrontend.Cstrategy <> t2 var
R79353:79354 compcert.cfrontend.Cstrategy <> a2 var
R79350:79351 compcert.cfrontend.Cstrategy <> m1 var
R79348:79348 compcert.cfrontend.Cstrategy <> e var
R79291:79299 compcert.cfrontend.Cstrategy <> eval_expr ind
R79317:79319 compcert.cfrontend.Cstrategy <> a1' var
R79314:79315 compcert.cfrontend.Cstrategy <> m1 var
R79311:79312 compcert.cfrontend.Cstrategy <> t1 var
R79308:79309 compcert.cfrontend.Cstrategy <> a1 var
R79305:79306 compcert.cfrontend.Csem <> RV constr
R79303:79303 compcert.cfrontend.Cstrategy <> m var
R79301:79301 compcert.cfrontend.Cstrategy <> e var
R79919:79930 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R79962:79964 compcert.common.Events <> ::x_'***'_x not
R79960:79961 compcert.cfrontend.Cstrategy <> t1 var
R79967:79969 compcert.common.Events <> ::x_'***'_x not
R79965:79966 compcert.cfrontend.Cstrategy <> t2 var
R79970:79971 compcert.cfrontend.Cstrategy <> t3 var
R79940:79944 compcert.cfrontend.Csyntax <> Ecall constr
R79955:79956 compcert.cfrontend.Cstrategy <> ty var
R79949:79953 compcert.cfrontend.Cstrategy <> rargs var
R79946:79947 compcert.cfrontend.Cstrategy <> rf var
R79936:79937 compcert.cfrontend.Csem <> RV constr
R79934:79934 compcert.cfrontend.Cstrategy <> m var
R79932:79932 compcert.cfrontend.Cstrategy <> e var
R79879:79893 compcert.cfrontend.Cstrategy <> evalinf_funcall ind
R79907:79908 compcert.cfrontend.Cstrategy <> t3 var
R79901:79905 compcert.cfrontend.Cstrategy <> vargs var
R79898:79899 compcert.cfrontend.Cstrategy <> fd var
R79895:79896 compcert.cfrontend.Cstrategy <> m2 var
R79840:79842 Coq.Init.Logic <> :type_scope:x_'='_x not
R79823:79836 compcert.cfrontend.Csyntax <> type_of_fundef def
R79838:79839 compcert.cfrontend.Cstrategy <> fd var
R79843:79851 compcert.cfrontend.Ctypes <> Tfunction constr
R79864:79868 compcert.cfrontend.Cstrategy <> cconv var
R79859:79862 compcert.cfrontend.Cstrategy <> tres var
R79853:79857 compcert.cfrontend.Cstrategy <> targs var
R79803:79805 Coq.Init.Logic <> :type_scope:x_'='_x not
R79782:79796 compcert.common.Globalenvs Genv find_funct def
R79801:79802 compcert.cfrontend.Cstrategy <> vf var
R79798:79799 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R79806:79809 Coq.Init.Datatypes <> Some constr
R79811:79812 compcert.cfrontend.Cstrategy <> fd var
R79742:79744 Coq.Init.Logic <> :type_scope:x_'='_x not
R79718:79729 compcert.cfrontend.Cop <> classify_fun def
R79732:79737 compcert.cfrontend.Csyntax <> typeof def
R79739:79740 compcert.cfrontend.Cstrategy <> rf var
R79745:79754 compcert.cfrontend.Cop <> fun_case_f constr
R79767:79771 compcert.cfrontend.Cstrategy <> cconv var
R79762:79765 compcert.cfrontend.Cstrategy <> tres var
R79756:79760 compcert.cfrontend.Cstrategy <> targs var
R79665:79680 compcert.cfrontend.Cstrategy <> eval_simple_list ind
R79703:79707 compcert.cfrontend.Cstrategy <> vargs var
R79697:79701 compcert.cfrontend.Cstrategy <> targs var
R79690:79695 compcert.cfrontend.Cstrategy <> rargs' var
R79687:79688 compcert.cfrontend.Cstrategy <> m2 var
R79685:79685 compcert.cfrontend.Cstrategy <> e var
R79682:79683 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R79622:79639 compcert.cfrontend.Cstrategy <> eval_simple_rvalue ind
R79653:79654 compcert.cfrontend.Cstrategy <> vf var
R79649:79651 compcert.cfrontend.Cstrategy <> rf' var
R79646:79647 compcert.cfrontend.Cstrategy <> m2 var
R79644:79644 compcert.cfrontend.Cstrategy <> e var
R79641:79642 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R79575:79587 compcert.cfrontend.Cstrategy <> eval_exprlist ind
R79606:79611 compcert.cfrontend.Cstrategy <> rargs' var
R79603:79604 compcert.cfrontend.Cstrategy <> m2 var
R79600:79601 compcert.cfrontend.Cstrategy <> t2 var
R79594:79598 compcert.cfrontend.Cstrategy <> rargs var
R79591:79592 compcert.cfrontend.Cstrategy <> m1 var
R79589:79589 compcert.cfrontend.Cstrategy <> e var
R79542:79550 compcert.cfrontend.Cstrategy <> eval_expr ind
R79568:79570 compcert.cfrontend.Cstrategy <> rf' var
R79565:79566 compcert.cfrontend.Cstrategy <> m1 var
R79562:79563 compcert.cfrontend.Cstrategy <> t1 var
R79559:79560 compcert.cfrontend.Cstrategy <> rf var
R79556:79557 compcert.cfrontend.Csem <> RV constr
R79554:79554 compcert.cfrontend.Cstrategy <> m var
R79552:79552 compcert.cfrontend.Cstrategy <> e var
R80129:80144 compcert.cfrontend.Cstrategy <> evalinf_exprlist ind
R80164:80165 compcert.cfrontend.Cstrategy <> t1 var
R80151:80155 compcert.cfrontend.Csyntax <> Econs constr
R80160:80161 compcert.cfrontend.Cstrategy <> al var
R80157:80158 compcert.cfrontend.Cstrategy <> a1 var
R80148:80148 compcert.cfrontend.Cstrategy <> m var
R80146:80146 compcert.cfrontend.Cstrategy <> e var
R80094:80105 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R80117:80118 compcert.cfrontend.Cstrategy <> t1 var
R80114:80115 compcert.cfrontend.Cstrategy <> a1 var
R80111:80112 compcert.cfrontend.Csem <> RV constr
R80109:80109 compcert.cfrontend.Cstrategy <> m var
R80107:80107 compcert.cfrontend.Cstrategy <> e var
R80298:80313 compcert.cfrontend.Cstrategy <> evalinf_exprlist ind
R80336:80338 compcert.common.Events <> ::x_'***'_x not
R80334:80335 compcert.cfrontend.Cstrategy <> t1 var
R80339:80340 compcert.cfrontend.Cstrategy <> t2 var
R80320:80324 compcert.cfrontend.Csyntax <> Econs constr
R80329:80330 compcert.cfrontend.Cstrategy <> al var
R80326:80327 compcert.cfrontend.Cstrategy <> a1 var
R80317:80317 compcert.cfrontend.Cstrategy <> m var
R80315:80315 compcert.cfrontend.Cstrategy <> e var
R80261:80276 compcert.cfrontend.Cstrategy <> evalinf_exprlist ind
R80286:80287 compcert.cfrontend.Cstrategy <> t2 var
R80283:80284 compcert.cfrontend.Cstrategy <> al var
R80280:80281 compcert.cfrontend.Cstrategy <> m1 var
R80278:80278 compcert.cfrontend.Cstrategy <> e var
R80228:80236 compcert.cfrontend.Cstrategy <> eval_expr ind
R80254:80256 compcert.cfrontend.Cstrategy <> a1' var
R80251:80252 compcert.cfrontend.Cstrategy <> m1 var
R80248:80249 compcert.cfrontend.Cstrategy <> t1 var
R80245:80246 compcert.cfrontend.Cstrategy <> a1 var
R80242:80243 compcert.cfrontend.Csem <> RV constr
R80240:80240 compcert.cfrontend.Cstrategy <> m var
R80238:80238 compcert.cfrontend.Cstrategy <> e var
R80581:80592 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R80606:80606 compcert.cfrontend.Cstrategy <> t var
R80599:80601 compcert.cfrontend.Csyntax <> Sdo constr
R80603:80603 compcert.cfrontend.Cstrategy <> a var
R80596:80596 compcert.cfrontend.Cstrategy <> m var
R80594:80594 compcert.cfrontend.Cstrategy <> e var
R80548:80559 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R80570:80570 compcert.cfrontend.Cstrategy <> t var
R80568:80568 compcert.cfrontend.Cstrategy <> a var
R80565:80566 compcert.cfrontend.Csem <> RV constr
R80563:80563 compcert.cfrontend.Cstrategy <> m var
R80561:80561 compcert.cfrontend.Cstrategy <> e var
R80689:80700 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R80724:80725 compcert.cfrontend.Cstrategy <> t1 var
R80707:80715 compcert.cfrontend.Csyntax <> Ssequence constr
R80720:80721 compcert.cfrontend.Cstrategy <> s2 var
R80717:80718 compcert.cfrontend.Cstrategy <> s1 var
R80704:80704 compcert.cfrontend.Cstrategy <> m var
R80702:80702 compcert.cfrontend.Cstrategy <> e var
R80657:80668 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R80677:80678 compcert.cfrontend.Cstrategy <> t1 var
R80674:80675 compcert.cfrontend.Cstrategy <> s1 var
R80672:80672 compcert.cfrontend.Cstrategy <> m var
R80670:80670 compcert.cfrontend.Cstrategy <> e var
R80858:80869 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R80896:80898 compcert.common.Events <> ::x_'***'_x not
R80894:80895 compcert.cfrontend.Cstrategy <> t1 var
R80899:80900 compcert.cfrontend.Cstrategy <> t2 var
R80876:80884 compcert.cfrontend.Csyntax <> Ssequence constr
R80889:80890 compcert.cfrontend.Cstrategy <> s2 var
R80886:80887 compcert.cfrontend.Cstrategy <> s1 var
R80873:80873 compcert.cfrontend.Cstrategy <> m var
R80871:80871 compcert.cfrontend.Cstrategy <> e var
R80825:80836 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R80846:80847 compcert.cfrontend.Cstrategy <> t2 var
R80843:80844 compcert.cfrontend.Cstrategy <> s2 var
R80840:80841 compcert.cfrontend.Cstrategy <> m1 var
R80838:80838 compcert.cfrontend.Cstrategy <> e var
R80782:80790 compcert.cfrontend.Cstrategy <> exec_stmt ind
R80805:80814 compcert.cfrontend.Cstrategy <> Out_normal constr
R80802:80803 compcert.cfrontend.Cstrategy <> m1 var
R80799:80800 compcert.cfrontend.Cstrategy <> t1 var
R80796:80797 compcert.cfrontend.Cstrategy <> s1 var
R80794:80794 compcert.cfrontend.Cstrategy <> m var
R80792:80792 compcert.cfrontend.Cstrategy <> e var
R80996:81007 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R81035:81036 compcert.cfrontend.Cstrategy <> t1 var
R81014:81024 compcert.cfrontend.Csyntax <> Sifthenelse constr
R81031:81032 compcert.cfrontend.Cstrategy <> s2 var
R81028:81029 compcert.cfrontend.Cstrategy <> s1 var
R81026:81026 compcert.cfrontend.Cstrategy <> a var
R81011:81011 compcert.cfrontend.Cstrategy <> m var
R81009:81009 compcert.cfrontend.Cstrategy <> e var
R80962:80973 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R80984:80985 compcert.cfrontend.Cstrategy <> t1 var
R80982:80982 compcert.cfrontend.Cstrategy <> a var
R80979:80980 compcert.cfrontend.Csem <> RV constr
R80977:80977 compcert.cfrontend.Cstrategy <> m var
R80975:80975 compcert.cfrontend.Cstrategy <> e var
R81237:81248 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R81279:81281 compcert.common.Events <> ::x_'***'_x not
R81277:81278 compcert.cfrontend.Cstrategy <> t1 var
R81282:81283 compcert.cfrontend.Cstrategy <> t2 var
R81255:81265 compcert.cfrontend.Csyntax <> Sifthenelse constr
R81272:81273 compcert.cfrontend.Cstrategy <> s2 var
R81269:81270 compcert.cfrontend.Cstrategy <> s1 var
R81267:81267 compcert.cfrontend.Cstrategy <> a var
R81252:81252 compcert.cfrontend.Cstrategy <> m var
R81250:81250 compcert.cfrontend.Cstrategy <> e var
R81184:81195 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R81225:81226 compcert.cfrontend.Cstrategy <> t2 var
R81206:81206 compcert.cfrontend.Cstrategy <> b var
R81221:81222 compcert.cfrontend.Cstrategy <> s2 var
R81213:81214 compcert.cfrontend.Cstrategy <> s1 var
R81199:81200 compcert.cfrontend.Cstrategy <> m1 var
R81197:81197 compcert.cfrontend.Cstrategy <> e var
R81165:81167 Coq.Init.Logic <> :type_scope:x_'='_x not
R81143:81150 compcert.cfrontend.Cop <> bool_val def
R81156:81161 compcert.cfrontend.Csyntax <> typeof def
R81163:81163 compcert.cfrontend.Cstrategy <> a var
R81152:81153 compcert.cfrontend.Cstrategy <> v1 var
R81168:81171 Coq.Init.Datatypes <> Some constr
R81173:81173 compcert.cfrontend.Cstrategy <> b var
R81103:81117 compcert.cfrontend.Cstrategy <> eval_expression ind
R81131:81132 compcert.cfrontend.Cstrategy <> v1 var
R81128:81129 compcert.cfrontend.Cstrategy <> m1 var
R81125:81126 compcert.cfrontend.Cstrategy <> t1 var
R81123:81123 compcert.cfrontend.Cstrategy <> a var
R81121:81121 compcert.cfrontend.Cstrategy <> m var
R81119:81119 compcert.cfrontend.Cstrategy <> e var
R81367:81378 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R81403:81403 compcert.cfrontend.Cstrategy <> t var
R81385:81391 compcert.cfrontend.Csyntax <> Sreturn constr
R81394:81397 Coq.Init.Datatypes <> Some constr
R81399:81399 compcert.cfrontend.Cstrategy <> a var
R81382:81382 compcert.cfrontend.Cstrategy <> m var
R81380:81380 compcert.cfrontend.Cstrategy <> e var
R81334:81345 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R81356:81356 compcert.cfrontend.Cstrategy <> t var
R81354:81354 compcert.cfrontend.Cstrategy <> a var
R81351:81352 compcert.cfrontend.Csem <> RV constr
R81349:81349 compcert.cfrontend.Cstrategy <> m var
R81347:81347 compcert.cfrontend.Cstrategy <> e var
R81489:81500 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R81519:81520 compcert.cfrontend.Cstrategy <> t1 var
R81507:81512 compcert.cfrontend.Csyntax <> Swhile constr
R81516:81516 compcert.cfrontend.Cstrategy <> s var
R81514:81514 compcert.cfrontend.Cstrategy <> a var
R81504:81504 compcert.cfrontend.Cstrategy <> m var
R81502:81502 compcert.cfrontend.Cstrategy <> e var
R81455:81466 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R81477:81478 compcert.cfrontend.Cstrategy <> t1 var
R81475:81475 compcert.cfrontend.Cstrategy <> a var
R81472:81473 compcert.cfrontend.Csem <> RV constr
R81470:81470 compcert.cfrontend.Cstrategy <> m var
R81468:81468 compcert.cfrontend.Cstrategy <> e var
R81694:81705 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R81727:81729 compcert.common.Events <> ::x_'***'_x not
R81725:81726 compcert.cfrontend.Cstrategy <> t1 var
R81730:81731 compcert.cfrontend.Cstrategy <> t2 var
R81712:81717 compcert.cfrontend.Csyntax <> Swhile constr
R81721:81721 compcert.cfrontend.Cstrategy <> s var
R81719:81719 compcert.cfrontend.Cstrategy <> a var
R81709:81709 compcert.cfrontend.Cstrategy <> m var
R81707:81707 compcert.cfrontend.Cstrategy <> e var
R81662:81673 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R81682:81683 compcert.cfrontend.Cstrategy <> t2 var
R81680:81680 compcert.cfrontend.Cstrategy <> s var
R81677:81678 compcert.cfrontend.Cstrategy <> m1 var
R81675:81675 compcert.cfrontend.Cstrategy <> e var
R81640:81642 Coq.Init.Logic <> :type_scope:x_'='_x not
R81619:81626 compcert.cfrontend.Cop <> bool_val def
R81631:81636 compcert.cfrontend.Csyntax <> typeof def
R81638:81638 compcert.cfrontend.Cstrategy <> a var
R81628:81628 compcert.cfrontend.Cstrategy <> v var
R81643:81646 Coq.Init.Datatypes <> Some constr
R81648:81651 Coq.Init.Datatypes <> true constr
R81580:81594 compcert.cfrontend.Cstrategy <> eval_expression ind
R81608:81608 compcert.cfrontend.Cstrategy <> v var
R81605:81606 compcert.cfrontend.Cstrategy <> m1 var
R81602:81603 compcert.cfrontend.Cstrategy <> t1 var
R81600:81600 compcert.cfrontend.Cstrategy <> a var
R81598:81598 compcert.cfrontend.Cstrategy <> m var
R81596:81596 compcert.cfrontend.Cstrategy <> e var
R82002:82013 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R82035:82037 compcert.common.Events <> ::x_'***'_x not
R82033:82034 compcert.cfrontend.Cstrategy <> t1 var
R82040:82042 compcert.common.Events <> ::x_'***'_x not
R82038:82039 compcert.cfrontend.Cstrategy <> t2 var
R82043:82044 compcert.cfrontend.Cstrategy <> t3 var
R82020:82025 compcert.cfrontend.Csyntax <> Swhile constr
R82029:82029 compcert.cfrontend.Cstrategy <> s var
R82027:82027 compcert.cfrontend.Cstrategy <> a var
R82017:82017 compcert.cfrontend.Cstrategy <> m var
R82015:82015 compcert.cfrontend.Cstrategy <> e var
R81959:81970 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R81990:81991 compcert.cfrontend.Cstrategy <> t3 var
R81978:81983 compcert.cfrontend.Csyntax <> Swhile constr
R81987:81987 compcert.cfrontend.Cstrategy <> s var
R81985:81985 compcert.cfrontend.Cstrategy <> a var
R81974:81975 compcert.cfrontend.Cstrategy <> m2 var
R81972:81972 compcert.cfrontend.Cstrategy <> e var
R81922:81943 compcert.cfrontend.Cstrategy <> out_normal_or_continue ind
R81945:81948 compcert.cfrontend.Cstrategy <> out1 var
R81885:81893 compcert.cfrontend.Cstrategy <> exec_stmt ind
R81908:81911 compcert.cfrontend.Cstrategy <> out1 var
R81905:81906 compcert.cfrontend.Cstrategy <> m2 var
R81902:81903 compcert.cfrontend.Cstrategy <> t2 var
R81900:81900 compcert.cfrontend.Cstrategy <> s var
R81897:81898 compcert.cfrontend.Cstrategy <> m1 var
R81895:81895 compcert.cfrontend.Cstrategy <> e var
R81863:81865 Coq.Init.Logic <> :type_scope:x_'='_x not
R81842:81849 compcert.cfrontend.Cop <> bool_val def
R81854:81859 compcert.cfrontend.Csyntax <> typeof def
R81861:81861 compcert.cfrontend.Cstrategy <> a var
R81851:81851 compcert.cfrontend.Cstrategy <> v var
R81866:81869 Coq.Init.Datatypes <> Some constr
R81871:81874 Coq.Init.Datatypes <> true constr
R81803:81817 compcert.cfrontend.Cstrategy <> eval_expression ind
R81831:81831 compcert.cfrontend.Cstrategy <> v var
R81828:81829 compcert.cfrontend.Cstrategy <> m1 var
R81825:81826 compcert.cfrontend.Cstrategy <> t1 var
R81823:81823 compcert.cfrontend.Cstrategy <> a var
R81821:81821 compcert.cfrontend.Cstrategy <> m var
R81819:81819 compcert.cfrontend.Cstrategy <> e var
R82130:82141 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R82162:82163 compcert.cfrontend.Cstrategy <> t1 var
R82148:82155 compcert.cfrontend.Csyntax <> Sdowhile constr
R82159:82159 compcert.cfrontend.Cstrategy <> s var
R82157:82157 compcert.cfrontend.Cstrategy <> a var
R82145:82145 compcert.cfrontend.Cstrategy <> m var
R82143:82143 compcert.cfrontend.Cstrategy <> e var
R82099:82110 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R82118:82119 compcert.cfrontend.Cstrategy <> t1 var
R82116:82116 compcert.cfrontend.Cstrategy <> s var
R82114:82114 compcert.cfrontend.Cstrategy <> m var
R82112:82112 compcert.cfrontend.Cstrategy <> e var
R82336:82347 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R82371:82373 compcert.common.Events <> ::x_'***'_x not
R82369:82370 compcert.cfrontend.Cstrategy <> t1 var
R82374:82375 compcert.cfrontend.Cstrategy <> t2 var
R82354:82361 compcert.cfrontend.Csyntax <> Sdowhile constr
R82365:82365 compcert.cfrontend.Cstrategy <> s var
R82363:82363 compcert.cfrontend.Cstrategy <> a var
R82351:82351 compcert.cfrontend.Cstrategy <> m var
R82349:82349 compcert.cfrontend.Cstrategy <> e var
R82301:82312 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R82324:82325 compcert.cfrontend.Cstrategy <> t2 var
R82322:82322 compcert.cfrontend.Cstrategy <> a var
R82319:82320 compcert.cfrontend.Csem <> RV constr
R82316:82317 compcert.cfrontend.Cstrategy <> m1 var
R82314:82314 compcert.cfrontend.Cstrategy <> e var
R82264:82285 compcert.cfrontend.Cstrategy <> out_normal_or_continue ind
R82287:82290 compcert.cfrontend.Cstrategy <> out1 var
R82228:82236 compcert.cfrontend.Cstrategy <> exec_stmt ind
R82250:82253 compcert.cfrontend.Cstrategy <> out1 var
R82247:82248 compcert.cfrontend.Cstrategy <> m1 var
R82244:82245 compcert.cfrontend.Cstrategy <> t1 var
R82242:82242 compcert.cfrontend.Cstrategy <> s var
R82240:82240 compcert.cfrontend.Cstrategy <> m var
R82238:82238 compcert.cfrontend.Cstrategy <> e var
R82650:82661 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R82685:82687 compcert.common.Events <> ::x_'***'_x not
R82683:82684 compcert.cfrontend.Cstrategy <> t1 var
R82690:82692 compcert.common.Events <> ::x_'***'_x not
R82688:82689 compcert.cfrontend.Cstrategy <> t2 var
R82693:82694 compcert.cfrontend.Cstrategy <> t3 var
R82668:82675 compcert.cfrontend.Csyntax <> Sdowhile constr
R82679:82679 compcert.cfrontend.Cstrategy <> s var
R82677:82677 compcert.cfrontend.Cstrategy <> a var
R82665:82665 compcert.cfrontend.Cstrategy <> m var
R82663:82663 compcert.cfrontend.Cstrategy <> e var
R82605:82616 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R82638:82639 compcert.cfrontend.Cstrategy <> t3 var
R82624:82631 compcert.cfrontend.Csyntax <> Sdowhile constr
R82635:82635 compcert.cfrontend.Cstrategy <> s var
R82633:82633 compcert.cfrontend.Cstrategy <> a var
R82620:82621 compcert.cfrontend.Cstrategy <> m2 var
R82618:82618 compcert.cfrontend.Cstrategy <> e var
R82583:82585 Coq.Init.Logic <> :type_scope:x_'='_x not
R82562:82569 compcert.cfrontend.Cop <> bool_val def
R82574:82579 compcert.cfrontend.Csyntax <> typeof def
R82581:82581 compcert.cfrontend.Cstrategy <> a var
R82571:82571 compcert.cfrontend.Cstrategy <> v var
R82586:82589 Coq.Init.Datatypes <> Some constr
R82591:82594 Coq.Init.Datatypes <> true constr
R82522:82536 compcert.cfrontend.Cstrategy <> eval_expression ind
R82551:82551 compcert.cfrontend.Cstrategy <> v var
R82548:82549 compcert.cfrontend.Cstrategy <> m2 var
R82545:82546 compcert.cfrontend.Cstrategy <> t2 var
R82543:82543 compcert.cfrontend.Cstrategy <> a var
R82540:82541 compcert.cfrontend.Cstrategy <> m1 var
R82538:82538 compcert.cfrontend.Cstrategy <> e var
R82485:82506 compcert.cfrontend.Cstrategy <> out_normal_or_continue ind
R82508:82511 compcert.cfrontend.Cstrategy <> out1 var
R82449:82457 compcert.cfrontend.Cstrategy <> exec_stmt ind
R82471:82474 compcert.cfrontend.Cstrategy <> out1 var
R82468:82469 compcert.cfrontend.Cstrategy <> m1 var
R82465:82466 compcert.cfrontend.Cstrategy <> t1 var
R82463:82463 compcert.cfrontend.Cstrategy <> s var
R82461:82461 compcert.cfrontend.Cstrategy <> m var
R82459:82459 compcert.cfrontend.Cstrategy <> e var
R82787:82798 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R82822:82823 compcert.cfrontend.Cstrategy <> t1 var
R82805:82808 compcert.cfrontend.Csyntax <> Sfor constr
R82819:82819 compcert.cfrontend.Cstrategy <> s var
R82816:82817 compcert.cfrontend.Cstrategy <> a3 var
R82813:82814 compcert.cfrontend.Cstrategy <> a2 var
R82810:82811 compcert.cfrontend.Cstrategy <> a1 var
R82802:82802 compcert.cfrontend.Cstrategy <> m var
R82800:82800 compcert.cfrontend.Cstrategy <> e var
R82755:82766 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R82775:82776 compcert.cfrontend.Cstrategy <> t1 var
R82772:82773 compcert.cfrontend.Cstrategy <> a1 var
R82770:82770 compcert.cfrontend.Cstrategy <> m var
R82768:82768 compcert.cfrontend.Cstrategy <> e var
R82998:83009 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R83036:83038 compcert.common.Events <> ::x_'***'_x not
R83034:83035 compcert.cfrontend.Cstrategy <> t1 var
R83039:83040 compcert.cfrontend.Cstrategy <> t2 var
R83016:83019 compcert.cfrontend.Csyntax <> Sfor constr
R83030:83030 compcert.cfrontend.Cstrategy <> s var
R83027:83028 compcert.cfrontend.Cstrategy <> a3 var
R83024:83025 compcert.cfrontend.Cstrategy <> a2 var
R83021:83022 compcert.cfrontend.Cstrategy <> a1 var
R83013:83013 compcert.cfrontend.Cstrategy <> m var
R83011:83011 compcert.cfrontend.Cstrategy <> e var
R82947:82958 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R82986:82987 compcert.cfrontend.Cstrategy <> t2 var
R82966:82969 compcert.cfrontend.Csyntax <> Sfor constr
R82983:82983 compcert.cfrontend.Cstrategy <> s var
R82980:82981 compcert.cfrontend.Cstrategy <> a3 var
R82977:82978 compcert.cfrontend.Cstrategy <> a2 var
R82971:82975 compcert.cfrontend.Csyntax <> Sskip constr
R82962:82963 compcert.cfrontend.Cstrategy <> m1 var
R82960:82960 compcert.cfrontend.Cstrategy <> e var
R82928:82931 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R82926:82927 compcert.cfrontend.Cstrategy <> a1 var
R82932:82936 compcert.cfrontend.Csyntax <> Sskip constr
R82889:82897 compcert.cfrontend.Cstrategy <> exec_stmt ind
R82912:82921 compcert.cfrontend.Cstrategy <> Out_normal constr
R82909:82910 compcert.cfrontend.Cstrategy <> m1 var
R82906:82907 compcert.cfrontend.Cstrategy <> t1 var
R82903:82904 compcert.cfrontend.Cstrategy <> a1 var
R82901:82901 compcert.cfrontend.Cstrategy <> m var
R82899:82899 compcert.cfrontend.Cstrategy <> e var
R83128:83139 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R83166:83166 compcert.cfrontend.Cstrategy <> t var
R83146:83149 compcert.cfrontend.Csyntax <> Sfor constr
R83163:83163 compcert.cfrontend.Cstrategy <> s var
R83160:83161 compcert.cfrontend.Cstrategy <> a3 var
R83157:83158 compcert.cfrontend.Cstrategy <> a2 var
R83151:83155 compcert.cfrontend.Csyntax <> Sskip constr
R83143:83143 compcert.cfrontend.Cstrategy <> m var
R83141:83141 compcert.cfrontend.Cstrategy <> e var
R83094:83105 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R83117:83117 compcert.cfrontend.Cstrategy <> t var
R83114:83115 compcert.cfrontend.Cstrategy <> a2 var
R83111:83112 compcert.cfrontend.Csem <> RV constr
R83109:83109 compcert.cfrontend.Cstrategy <> m var
R83107:83107 compcert.cfrontend.Cstrategy <> e var
R83344:83355 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R83385:83387 compcert.common.Events <> ::x_'***'_x not
R83383:83384 compcert.cfrontend.Cstrategy <> t1 var
R83388:83389 compcert.cfrontend.Cstrategy <> t2 var
R83362:83365 compcert.cfrontend.Csyntax <> Sfor constr
R83379:83379 compcert.cfrontend.Cstrategy <> s var
R83376:83377 compcert.cfrontend.Cstrategy <> a3 var
R83373:83374 compcert.cfrontend.Cstrategy <> a2 var
R83367:83371 compcert.cfrontend.Csyntax <> Sskip constr
R83359:83359 compcert.cfrontend.Cstrategy <> m var
R83357:83357 compcert.cfrontend.Cstrategy <> e var
R83312:83323 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R83332:83333 compcert.cfrontend.Cstrategy <> t2 var
R83330:83330 compcert.cfrontend.Cstrategy <> s var
R83327:83328 compcert.cfrontend.Cstrategy <> m1 var
R83325:83325 compcert.cfrontend.Cstrategy <> e var
R83290:83292 Coq.Init.Logic <> :type_scope:x_'='_x not
R83268:83275 compcert.cfrontend.Cop <> bool_val def
R83280:83285 compcert.cfrontend.Csyntax <> typeof def
R83287:83288 compcert.cfrontend.Cstrategy <> a2 var
R83277:83277 compcert.cfrontend.Cstrategy <> v var
R83293:83296 Coq.Init.Datatypes <> Some constr
R83298:83301 Coq.Init.Datatypes <> true constr
R83228:83242 compcert.cfrontend.Cstrategy <> eval_expression ind
R83257:83257 compcert.cfrontend.Cstrategy <> v var
R83254:83255 compcert.cfrontend.Cstrategy <> m1 var
R83251:83252 compcert.cfrontend.Cstrategy <> t1 var
R83248:83249 compcert.cfrontend.Cstrategy <> a2 var
R83246:83246 compcert.cfrontend.Cstrategy <> m var
R83244:83244 compcert.cfrontend.Cstrategy <> e var
R83654:83665 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R83695:83697 compcert.common.Events <> ::x_'***'_x not
R83693:83694 compcert.cfrontend.Cstrategy <> t1 var
R83700:83702 compcert.common.Events <> ::x_'***'_x not
R83698:83699 compcert.cfrontend.Cstrategy <> t2 var
R83703:83704 compcert.cfrontend.Cstrategy <> t3 var
R83672:83675 compcert.cfrontend.Csyntax <> Sfor constr
R83689:83689 compcert.cfrontend.Cstrategy <> s var
R83686:83687 compcert.cfrontend.Cstrategy <> a3 var
R83683:83684 compcert.cfrontend.Cstrategy <> a2 var
R83677:83681 compcert.cfrontend.Csyntax <> Sskip constr
R83669:83669 compcert.cfrontend.Cstrategy <> m var
R83667:83667 compcert.cfrontend.Cstrategy <> e var
R83621:83632 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R83642:83643 compcert.cfrontend.Cstrategy <> t3 var
R83639:83640 compcert.cfrontend.Cstrategy <> a3 var
R83636:83637 compcert.cfrontend.Cstrategy <> m2 var
R83634:83634 compcert.cfrontend.Cstrategy <> e var
R83584:83605 compcert.cfrontend.Cstrategy <> out_normal_or_continue ind
R83607:83610 compcert.cfrontend.Cstrategy <> out1 var
R83547:83555 compcert.cfrontend.Cstrategy <> exec_stmt ind
R83570:83573 compcert.cfrontend.Cstrategy <> out1 var
R83567:83568 compcert.cfrontend.Cstrategy <> m2 var
R83564:83565 compcert.cfrontend.Cstrategy <> t2 var
R83562:83562 compcert.cfrontend.Cstrategy <> s var
R83559:83560 compcert.cfrontend.Cstrategy <> m1 var
R83557:83557 compcert.cfrontend.Cstrategy <> e var
R83525:83527 Coq.Init.Logic <> :type_scope:x_'='_x not
R83503:83510 compcert.cfrontend.Cop <> bool_val def
R83515:83520 compcert.cfrontend.Csyntax <> typeof def
R83522:83523 compcert.cfrontend.Cstrategy <> a2 var
R83512:83512 compcert.cfrontend.Cstrategy <> v var
R83528:83531 Coq.Init.Datatypes <> Some constr
R83533:83536 Coq.Init.Datatypes <> true constr
R83463:83477 compcert.cfrontend.Cstrategy <> eval_expression ind
R83492:83492 compcert.cfrontend.Cstrategy <> v var
R83489:83490 compcert.cfrontend.Cstrategy <> m1 var
R83486:83487 compcert.cfrontend.Cstrategy <> t1 var
R83483:83484 compcert.cfrontend.Cstrategy <> a2 var
R83481:83481 compcert.cfrontend.Cstrategy <> m var
R83479:83479 compcert.cfrontend.Cstrategy <> e var
R84037:84048 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R84078:84080 compcert.common.Events <> ::x_'***'_x not
R84076:84077 compcert.cfrontend.Cstrategy <> t1 var
R84083:84085 compcert.common.Events <> ::x_'***'_x not
R84081:84082 compcert.cfrontend.Cstrategy <> t2 var
R84088:84090 compcert.common.Events <> ::x_'***'_x not
R84086:84087 compcert.cfrontend.Cstrategy <> t3 var
R84091:84092 compcert.cfrontend.Cstrategy <> t4 var
R84055:84058 compcert.cfrontend.Csyntax <> Sfor constr
R84072:84072 compcert.cfrontend.Cstrategy <> s var
R84069:84070 compcert.cfrontend.Cstrategy <> a3 var
R84066:84067 compcert.cfrontend.Cstrategy <> a2 var
R84060:84064 compcert.cfrontend.Csyntax <> Sskip constr
R84052:84052 compcert.cfrontend.Cstrategy <> m var
R84050:84050 compcert.cfrontend.Cstrategy <> e var
R83986:83997 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R84025:84026 compcert.cfrontend.Cstrategy <> t4 var
R84005:84008 compcert.cfrontend.Csyntax <> Sfor constr
R84022:84022 compcert.cfrontend.Cstrategy <> s var
R84019:84020 compcert.cfrontend.Cstrategy <> a3 var
R84016:84017 compcert.cfrontend.Cstrategy <> a2 var
R84010:84014 compcert.cfrontend.Csyntax <> Sskip constr
R84001:84002 compcert.cfrontend.Cstrategy <> m3 var
R83999:83999 compcert.cfrontend.Cstrategy <> e var
R83942:83950 compcert.cfrontend.Cstrategy <> exec_stmt ind
R83966:83975 compcert.cfrontend.Cstrategy <> Out_normal constr
R83963:83964 compcert.cfrontend.Cstrategy <> m3 var
R83960:83961 compcert.cfrontend.Cstrategy <> t3 var
R83957:83958 compcert.cfrontend.Cstrategy <> a3 var
R83954:83955 compcert.cfrontend.Cstrategy <> m2 var
R83952:83952 compcert.cfrontend.Cstrategy <> e var
R83905:83926 compcert.cfrontend.Cstrategy <> out_normal_or_continue ind
R83928:83931 compcert.cfrontend.Cstrategy <> out1 var
R83868:83876 compcert.cfrontend.Cstrategy <> exec_stmt ind
R83891:83894 compcert.cfrontend.Cstrategy <> out1 var
R83888:83889 compcert.cfrontend.Cstrategy <> m2 var
R83885:83886 compcert.cfrontend.Cstrategy <> t2 var
R83883:83883 compcert.cfrontend.Cstrategy <> s var
R83880:83881 compcert.cfrontend.Cstrategy <> m1 var
R83878:83878 compcert.cfrontend.Cstrategy <> e var
R83846:83848 Coq.Init.Logic <> :type_scope:x_'='_x not
R83824:83831 compcert.cfrontend.Cop <> bool_val def
R83836:83841 compcert.cfrontend.Csyntax <> typeof def
R83843:83844 compcert.cfrontend.Cstrategy <> a2 var
R83833:83833 compcert.cfrontend.Cstrategy <> v var
R83849:83852 Coq.Init.Datatypes <> Some constr
R83854:83857 Coq.Init.Datatypes <> true constr
R83784:83798 compcert.cfrontend.Cstrategy <> eval_expression ind
R83813:83813 compcert.cfrontend.Cstrategy <> v var
R83810:83811 compcert.cfrontend.Cstrategy <> m1 var
R83807:83808 compcert.cfrontend.Cstrategy <> t1 var
R83804:83805 compcert.cfrontend.Cstrategy <> a2 var
R83802:83802 compcert.cfrontend.Cstrategy <> m var
R83800:83800 compcert.cfrontend.Cstrategy <> e var
R84183:84194 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R84215:84216 compcert.cfrontend.Cstrategy <> t1 var
R84201:84207 compcert.cfrontend.Csyntax <> Sswitch constr
R84211:84212 compcert.cfrontend.Cstrategy <> sl var
R84209:84209 compcert.cfrontend.Cstrategy <> a var
R84198:84198 compcert.cfrontend.Cstrategy <> m var
R84196:84196 compcert.cfrontend.Cstrategy <> e var
R84149:84160 compcert.cfrontend.Cstrategy <> evalinf_expr ind
R84171:84172 compcert.cfrontend.Cstrategy <> t1 var
R84169:84169 compcert.cfrontend.Cstrategy <> a var
R84166:84167 compcert.cfrontend.Csem <> RV constr
R84164:84164 compcert.cfrontend.Cstrategy <> m var
R84162:84162 compcert.cfrontend.Cstrategy <> e var
R84445:84456 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R84480:84482 compcert.common.Events <> ::x_'***'_x not
R84478:84479 compcert.cfrontend.Cstrategy <> t1 var
R84483:84484 compcert.cfrontend.Cstrategy <> t2 var
R84463:84469 compcert.cfrontend.Csyntax <> Sswitch constr
R84473:84474 compcert.cfrontend.Cstrategy <> sl var
R84471:84471 compcert.cfrontend.Cstrategy <> a var
R84460:84460 compcert.cfrontend.Cstrategy <> m var
R84458:84458 compcert.cfrontend.Cstrategy <> e var
R84367:84378 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R84433:84434 compcert.cfrontend.Cstrategy <> t2 var
R84386:84409 compcert.cfrontend.Csem <> seq_of_labeled_statement def
R84412:84424 compcert.cfrontend.Csem <> select_switch def
R84428:84429 compcert.cfrontend.Cstrategy <> sl var
R84426:84426 compcert.cfrontend.Cstrategy <> n var
R84382:84383 compcert.cfrontend.Cstrategy <> m1 var
R84380:84380 compcert.cfrontend.Cstrategy <> e var
R84348:84350 Coq.Init.Logic <> :type_scope:x_'='_x not
R84321:84334 compcert.cfrontend.Cop <> sem_switch_arg def
R84339:84344 compcert.cfrontend.Csyntax <> typeof def
R84346:84346 compcert.cfrontend.Cstrategy <> a var
R84336:84336 compcert.cfrontend.Cstrategy <> v var
R84351:84354 Coq.Init.Datatypes <> Some constr
R84356:84356 compcert.cfrontend.Cstrategy <> n var
R84282:84296 compcert.cfrontend.Cstrategy <> eval_expression ind
R84310:84310 compcert.cfrontend.Cstrategy <> v var
R84307:84308 compcert.cfrontend.Cstrategy <> m1 var
R84304:84305 compcert.cfrontend.Cstrategy <> t1 var
R84302:84302 compcert.cfrontend.Cstrategy <> a var
R84300:84300 compcert.cfrontend.Cstrategy <> m var
R84298:84298 compcert.cfrontend.Cstrategy <> e var
R84988:85002 compcert.cfrontend.Cstrategy <> evalinf_funcall ind
R85025:85025 compcert.cfrontend.Cstrategy <> t var
R85019:85023 compcert.cfrontend.Cstrategy <> vargs var
R85007:85014 compcert.cfrontend.Csyntax <> Internal constr
R85016:85016 compcert.cfrontend.Cstrategy <> f var
R85004:85004 compcert.cfrontend.Cstrategy <> m var
R84947:84958 compcert.cfrontend.Cstrategy <> execinf_stmt ind
R84977:84977 compcert.cfrontend.Cstrategy <> t var
R84968:84974 compcert.cfrontend.Csyntax <> fn_body proj
R84965:84965 compcert.cfrontend.Cstrategy <> f var
R84962:84963 compcert.cfrontend.Cstrategy <> m2 var
R84960:84960 compcert.cfrontend.Cstrategy <> e var
R84891:84905 compcert.cfrontend.Csem <> bind_parameters ind
R84935:84936 compcert.cfrontend.Cstrategy <> m2 var
R84929:84933 compcert.cfrontend.Cstrategy <> vargs var
R84918:84926 compcert.cfrontend.Csyntax <> fn_params proj
R84915:84915 compcert.cfrontend.Cstrategy <> f var
R84912:84913 compcert.cfrontend.Cstrategy <> m1 var
R84910:84910 compcert.cfrontend.Cstrategy <> e var
R84907:84908 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R84818:84832 compcert.cfrontend.Csem <> alloc_variables ind
R84879:84880 compcert.cfrontend.Cstrategy <> m1 var
R84877:84877 compcert.cfrontend.Cstrategy <> e var
R84860:84863 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R84850:84858 compcert.cfrontend.Csyntax <> fn_params proj
R84847:84847 compcert.cfrontend.Cstrategy <> f var
R84867:84873 compcert.cfrontend.Csyntax <> fn_vars proj
R84864:84864 compcert.cfrontend.Cstrategy <> f var
R84844:84844 compcert.cfrontend.Cstrategy <> m var
R84834:84842 compcert.cfrontend.Csem <> empty_env def
R84745:84756 compcert.lib.Coqlib <> list_norepet ind
R84782:84785 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R84759:84767 compcert.cfrontend.Csyntax <> var_names def
R84772:84780 compcert.cfrontend.Csyntax <> fn_params proj
R84769:84769 compcert.cfrontend.Cstrategy <> f var
R84786:84794 compcert.cfrontend.Csyntax <> var_names def
R84799:84805 compcert.cfrontend.Csyntax <> fn_vars proj
R84796:84796 compcert.cfrontend.Cstrategy <> f var
ind 85110:85128 <> outcome_state_match
constr 85212:85221 <> osm_normal
constr 85295:85303 <> osm_break
constr 85377:85388 <> osm_continue
constr 85468:85482 <> osm_return_none
constr 85629:85643 <> osm_return_some
R85141:85143 compcert.cfrontend.Csem <> env def
R85150:85152 compcert.common.Memory <> mem syndef
R85159:85166 compcert.cfrontend.Csyntax <> function rec
R85173:85176 compcert.cfrontend.Csem <> cont ind
R85191:85195 compcert.cfrontend.Csem <> state ind
R85180:85186 compcert.cfrontend.Cstrategy <> outcome ind
R85230:85248 compcert.cfrontend.Cstrategy <> outcome_state_match ind
R85270:85274 compcert.cfrontend.Csem <> State constr
R85278:85282 compcert.cfrontend.Csyntax <> Sskip constr
R85258:85267 compcert.cfrontend.Cstrategy <> Out_normal constr
R85312:85330 compcert.cfrontend.Cstrategy <> outcome_state_match ind
R85351:85355 compcert.cfrontend.Csem <> State constr
R85359:85364 compcert.cfrontend.Csyntax <> Sbreak constr
R85340:85348 compcert.cfrontend.Cstrategy <> Out_break constr
R85397:85415 compcert.cfrontend.Cstrategy <> outcome_state_match ind
R85439:85443 compcert.cfrontend.Csem <> State constr
R85447:85455 compcert.cfrontend.Csyntax <> Scontinue constr
R85425:85436 compcert.cfrontend.Cstrategy <> Out_continue constr
R85538:85556 compcert.cfrontend.Cstrategy <> outcome_state_match ind
R85594:85598 compcert.cfrontend.Csem <> State constr
R85617:85618 compcert.cfrontend.Cstrategy <> k' var
R85603:85609 compcert.cfrontend.Csyntax <> Sreturn constr
R85611:85614 Coq.Init.Datatypes <> None constr
R85576:85585 compcert.cfrontend.Cstrategy <> Out_return constr
R85587:85590 Coq.Init.Datatypes <> None constr
R85514:85516 Coq.Init.Logic <> :type_scope:x_'='_x not
R85502:85510 compcert.cfrontend.Csem <> call_cont def
R85512:85513 compcert.cfrontend.Cstrategy <> k' var
R85517:85525 compcert.cfrontend.Csem <> call_cont def
R85704:85722 compcert.cfrontend.Cstrategy <> outcome_state_match ind
R85769:85777 compcert.cfrontend.Csem <> ExprState constr
R85794:85800 compcert.cfrontend.Csem <> Kreturn constr
R85802:85803 compcert.cfrontend.Cstrategy <> k' var
R85782:85785 compcert.cfrontend.Csyntax <> Eval constr
R85789:85790 compcert.cfrontend.Cstrategy <> ty var
R85787:85787 compcert.cfrontend.Cstrategy <> v var
R85741:85750 compcert.cfrontend.Cstrategy <> Out_return constr
R85753:85756 Coq.Init.Datatypes <> Some constr
R85758:85758 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R85760:85761 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R85764:85764 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R85759:85759 compcert.cfrontend.Cstrategy <> v var
R85762:85763 compcert.cfrontend.Cstrategy <> ty var
R85680:85682 Coq.Init.Logic <> :type_scope:x_'='_x not
R85668:85676 compcert.cfrontend.Csem <> call_cont def
R85678:85679 compcert.cfrontend.Cstrategy <> k' var
R85683:85691 compcert.cfrontend.Csem <> call_cont def
prf 85819:85840 <> is_call_cont_call_cont
R85884:85886 Coq.Init.Logic <> :type_scope:x_'='_x not
R85873:85881 compcert.cfrontend.Csem <> call_cont def
R85883:85883 compcert.cfrontend.Cstrategy <> k var
R85887:85887 compcert.cfrontend.Cstrategy <> k var
R85855:85866 compcert.cfrontend.Csem <> is_call_cont def
R85868:85868 compcert.cfrontend.Cstrategy <> k var
prf 85961:85979 <> leftcontext_compose
prf 86110:86132 <> leftcontextlist_compose
R86067:86077 compcert.cfrontend.Cstrategy <> leftcontext ind
R86095:86096 compcert.cfrontend.Cstrategy <> C2 var
R86098:86099 compcert.cfrontend.Cstrategy <> C1 var
R86101:86101 compcert.cfrontend.Cstrategy <> x var
R86082:86083 compcert.cfrontend.Cstrategy <> k3 var
R86079:86080 compcert.cfrontend.Cstrategy <> k1 var
R86041:86051 compcert.cfrontend.Cstrategy <> leftcontext ind
R86059:86060 compcert.cfrontend.Cstrategy <> C1 var
R86056:86057 compcert.cfrontend.Cstrategy <> k2 var
R86053:86054 compcert.cfrontend.Cstrategy <> k1 var
R86001:86011 compcert.cfrontend.Cstrategy <> leftcontext ind
R86019:86020 compcert.cfrontend.Cstrategy <> C2 var
R86016:86017 compcert.cfrontend.Cstrategy <> k3 var
R86013:86014 compcert.cfrontend.Cstrategy <> k2 var
R86218:86232 compcert.cfrontend.Cstrategy <> leftcontextlist ind
R86247:86248 compcert.cfrontend.Cstrategy <> C2 var
R86250:86251 compcert.cfrontend.Cstrategy <> C1 var
R86253:86253 compcert.cfrontend.Cstrategy <> x var
R86234:86235 compcert.cfrontend.Cstrategy <> k1 var
R86192:86202 compcert.cfrontend.Cstrategy <> leftcontext ind
R86210:86211 compcert.cfrontend.Cstrategy <> C1 var
R86207:86208 compcert.cfrontend.Cstrategy <> k2 var
R86204:86205 compcert.cfrontend.Cstrategy <> k1 var
R86151:86165 compcert.cfrontend.Cstrategy <> leftcontextlist ind
R86170:86171 compcert.cfrontend.Cstrategy <> C2 var
R86167:86168 compcert.cfrontend.Cstrategy <> k2 var
R86337:86337 compcert.cfrontend.Cstrategy <> x var
R86337:86337 compcert.cfrontend.Cstrategy <> x var
R86361:86374 compcert.lib.Axioms <> extensionality thm
R86361:86374 compcert.lib.Axioms <> extensionality thm
prf 86438:86461 <> exprlist_app_leftcontext
R86509:86523 compcert.cfrontend.Cstrategy <> leftcontextlist ind
R86538:86549 compcert.cfrontend.Cstrategy <> exprlist_app def
R86556:86560 compcert.cfrontend.Csyntax <> Econs constr
R86564:86566 compcert.cfrontend.Cstrategy <> rl2 var
R86562:86562 compcert.cfrontend.Cstrategy <> x var
R86551:86553 compcert.cfrontend.Cstrategy <> rl1 var
R86525:86526 compcert.cfrontend.Csem <> RV constr
R86498:86500 Coq.Init.Logic <> :type_scope:x_'='_x not
R86484:86493 compcert.cfrontend.Cstrategy <> simplelist def
R86495:86497 compcert.cfrontend.Cstrategy <> rl1 var
R86501:86504 Coq.Init.Datatypes <> true constr
R86619:86632 compcert.cfrontend.Cstrategy <> lctx_list_head constr
R86619:86632 compcert.cfrontend.Cstrategy <> lctx_list_head constr
R86660:86668 Coq.Init.Datatypes <> andb_prop thm
R86660:86668 Coq.Init.Datatypes <> andb_prop thm
R86684:86697 compcert.cfrontend.Cstrategy <> lctx_list_tail constr
R86684:86697 compcert.cfrontend.Cstrategy <> lctx_list_tail constr
prf 86725:86743 <> exprlist_app_simple
R86799:86801 Coq.Init.Logic <> :type_scope:x_'='_x not
R86766:86775 compcert.cfrontend.Cstrategy <> simplelist def
R86778:86789 compcert.cfrontend.Cstrategy <> exprlist_app def
R86795:86797 compcert.cfrontend.Cstrategy <> rl2 var
R86791:86793 compcert.cfrontend.Cstrategy <> rl1 var
R86816:86819 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R86802:86811 compcert.cfrontend.Cstrategy <> simplelist def
R86813:86815 compcert.cfrontend.Cstrategy <> rl1 var
R86820:86829 compcert.cfrontend.Cstrategy <> simplelist def
R86831:86833 compcert.cfrontend.Cstrategy <> rl2 var
R86902:86911 Coq.Bool.Bool <> andb_assoc thm
R86902:86911 Coq.Bool.Bool <> andb_assoc thm
prf 86927:86942 <> bigstep_to_steps
R86947:86947 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87099:87102 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87022:87025 compcert.common.Smallstep <> star ind
R87060:87068 compcert.cfrontend.Csem <> ExprState constr
R87096:87097 compcert.cfrontend.Cstrategy <> m' var
R87094:87094 compcert.cfrontend.Cstrategy <> e var
R87092:87092 compcert.cfrontend.Cstrategy <> k var
R87073:87076 compcert.cfrontend.Csyntax <> Eval constr
R87081:87086 compcert.cfrontend.Csyntax <> typeof def
R87088:87088 compcert.cfrontend.Cstrategy <> a var
R87078:87078 compcert.cfrontend.Cstrategy <> v var
R87070:87070 compcert.cfrontend.Cstrategy <> f var
R87057:87057 compcert.cfrontend.Cstrategy <> t var
R87036:87044 compcert.cfrontend.Csem <> ExprState constr
R87054:87054 compcert.cfrontend.Cstrategy <> m var
R87052:87052 compcert.cfrontend.Cstrategy <> e var
R87050:87050 compcert.cfrontend.Cstrategy <> k var
R87048:87048 compcert.cfrontend.Cstrategy <> a var
R87046:87046 compcert.cfrontend.Cstrategy <> f var
R87032:87033 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R87027:87030 compcert.cfrontend.Cstrategy <> step def
R86972:86986 compcert.cfrontend.Cstrategy <> eval_expression ind
R86999:86999 compcert.cfrontend.Cstrategy <> v var
R86996:86997 compcert.cfrontend.Cstrategy <> m' var
R86994:86994 compcert.cfrontend.Cstrategy <> t var
R86992:86992 compcert.cfrontend.Cstrategy <> a var
R86990:86990 compcert.cfrontend.Cstrategy <> m var
R86988:86988 compcert.cfrontend.Cstrategy <> e var
R87103:87103 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87317:87320 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87218:87221 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87211:87213 Coq.Init.Logic <> :type_scope:x_'='_x not
R87202:87207 compcert.cfrontend.Cstrategy <> simple def
R87209:87210 compcert.cfrontend.Cstrategy <> a' var
R87214:87217 Coq.Init.Datatypes <> true constr
R87242:87248 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87231:87233 Coq.Init.Logic <> :type_scope:x_'='_x not
R87222:87227 compcert.cfrontend.Csyntax <> typeof def
R87229:87230 compcert.cfrontend.Cstrategy <> a' var
R87234:87239 compcert.cfrontend.Csyntax <> typeof def
R87241:87241 compcert.cfrontend.Cstrategy <> a var
R87249:87252 compcert.common.Smallstep <> star ind
R87291:87299 compcert.cfrontend.Csem <> ExprState constr
R87314:87315 compcert.cfrontend.Cstrategy <> m' var
R87312:87312 compcert.cfrontend.Cstrategy <> e var
R87310:87310 compcert.cfrontend.Cstrategy <> k var
R87304:87304 compcert.cfrontend.Cstrategy <> C var
R87306:87307 compcert.cfrontend.Cstrategy <> a' var
R87301:87301 compcert.cfrontend.Cstrategy <> f var
R87288:87288 compcert.cfrontend.Cstrategy <> t var
R87263:87271 compcert.cfrontend.Csem <> ExprState constr
R87285:87285 compcert.cfrontend.Cstrategy <> m var
R87283:87283 compcert.cfrontend.Cstrategy <> e var
R87281:87281 compcert.cfrontend.Cstrategy <> k var
R87276:87276 compcert.cfrontend.Cstrategy <> C var
R87278:87278 compcert.cfrontend.Cstrategy <> a var
R87273:87273 compcert.cfrontend.Cstrategy <> f var
R87259:87260 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R87254:87257 compcert.cfrontend.Cstrategy <> step def
R87177:87187 compcert.cfrontend.Cstrategy <> leftcontext ind
R87194:87194 compcert.cfrontend.Cstrategy <> C var
R87191:87192 compcert.cfrontend.Csem <> RV constr
R87189:87189 compcert.cfrontend.Cstrategy <> K var
R87131:87139 compcert.cfrontend.Cstrategy <> eval_expr ind
R87154:87155 compcert.cfrontend.Cstrategy <> a' var
R87151:87152 compcert.cfrontend.Cstrategy <> m' var
R87149:87149 compcert.cfrontend.Cstrategy <> t var
R87147:87147 compcert.cfrontend.Cstrategy <> a var
R87145:87145 compcert.cfrontend.Cstrategy <> K var
R87143:87143 compcert.cfrontend.Cstrategy <> m var
R87141:87141 compcert.cfrontend.Cstrategy <> e var
R87321:87321 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87658:87661 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87501:87507 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87494:87496 Coq.Init.Logic <> :type_scope:x_'='_x not
R87480:87489 compcert.cfrontend.Cstrategy <> simplelist def
R87491:87493 compcert.cfrontend.Cstrategy <> al' var
R87497:87500 Coq.Init.Datatypes <> true constr
R87508:87511 compcert.common.Smallstep <> star ind
R87598:87606 compcert.cfrontend.Csem <> ExprState constr
R87655:87656 compcert.cfrontend.Cstrategy <> m' var
R87653:87653 compcert.cfrontend.Cstrategy <> e var
R87651:87651 compcert.cfrontend.Cstrategy <> k var
R87611:87611 compcert.cfrontend.Cstrategy <> C var
R87614:87618 compcert.cfrontend.Csyntax <> Ecall constr
R87646:87647 compcert.cfrontend.Cstrategy <> ty var
R87624:87635 compcert.cfrontend.Cstrategy <> exprlist_app def
R87641:87643 compcert.cfrontend.Cstrategy <> al' var
R87637:87639 compcert.cfrontend.Cstrategy <> al2 var
R87620:87621 compcert.cfrontend.Cstrategy <> a1 var
R87608:87608 compcert.cfrontend.Cstrategy <> f var
R87595:87595 compcert.cfrontend.Cstrategy <> t var
R87522:87530 compcert.cfrontend.Csem <> ExprState constr
R87578:87578 compcert.cfrontend.Cstrategy <> m var
R87576:87576 compcert.cfrontend.Cstrategy <> e var
R87574:87574 compcert.cfrontend.Cstrategy <> k var
R87535:87535 compcert.cfrontend.Cstrategy <> C var
R87538:87542 compcert.cfrontend.Csyntax <> Ecall constr
R87569:87570 compcert.cfrontend.Cstrategy <> ty var
R87548:87559 compcert.cfrontend.Cstrategy <> exprlist_app def
R87565:87566 compcert.cfrontend.Cstrategy <> al var
R87561:87563 compcert.cfrontend.Cstrategy <> al2 var
R87544:87545 compcert.cfrontend.Cstrategy <> a1 var
R87532:87532 compcert.cfrontend.Cstrategy <> f var
R87518:87519 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R87513:87516 compcert.cfrontend.Cstrategy <> step def
R87466:87468 Coq.Init.Logic <> :type_scope:x_'='_x not
R87452:87461 compcert.cfrontend.Cstrategy <> simplelist def
R87463:87465 compcert.cfrontend.Cstrategy <> al2 var
R87469:87472 Coq.Init.Datatypes <> true constr
R87441:87443 Coq.Init.Logic <> :type_scope:x_'='_x not
R87432:87437 compcert.cfrontend.Cstrategy <> simple def
R87439:87440 compcert.cfrontend.Cstrategy <> a1 var
R87444:87447 Coq.Init.Datatypes <> true constr
R87409:87419 compcert.cfrontend.Cstrategy <> leftcontext ind
R87427:87427 compcert.cfrontend.Cstrategy <> C var
R87424:87425 compcert.cfrontend.Csem <> RV constr
R87421:87422 compcert.cfrontend.Csem <> RV constr
R87349:87361 compcert.cfrontend.Cstrategy <> eval_exprlist ind
R87375:87377 compcert.cfrontend.Cstrategy <> al' var
R87372:87373 compcert.cfrontend.Cstrategy <> m' var
R87370:87370 compcert.cfrontend.Cstrategy <> t var
R87367:87368 compcert.cfrontend.Cstrategy <> al var
R87365:87365 compcert.cfrontend.Cstrategy <> m var
R87363:87363 compcert.cfrontend.Cstrategy <> e var
R87662:87662 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87820:87824 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87988:87988 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87735:87741 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R87743:87747 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R87782:87785 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R87748:87751 compcert.common.Smallstep <> star ind
R87781:87781 compcert.cfrontend.Cstrategy <> S var
R87779:87779 compcert.cfrontend.Cstrategy <> t var
R87762:87766 compcert.cfrontend.Csem <> State constr
R87776:87776 compcert.cfrontend.Cstrategy <> m var
R87774:87774 compcert.cfrontend.Cstrategy <> e var
R87772:87772 compcert.cfrontend.Cstrategy <> k var
R87770:87770 compcert.cfrontend.Cstrategy <> s var
R87768:87768 compcert.cfrontend.Cstrategy <> f var
R87758:87759 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R87753:87756 compcert.cfrontend.Cstrategy <> step def
R87786:87804 compcert.cfrontend.Cstrategy <> outcome_state_match ind
R87819:87819 compcert.cfrontend.Cstrategy <> S var
R87815:87817 compcert.cfrontend.Cstrategy <> out var
R87813:87813 compcert.cfrontend.Cstrategy <> k var
R87811:87811 compcert.cfrontend.Cstrategy <> f var
R87808:87809 compcert.cfrontend.Cstrategy <> m' var
R87806:87806 compcert.cfrontend.Cstrategy <> e var
R87689:87697 compcert.cfrontend.Cstrategy <> exec_stmt ind
R87710:87712 compcert.cfrontend.Cstrategy <> out var
R87707:87708 compcert.cfrontend.Cstrategy <> m' var
R87705:87705 compcert.cfrontend.Cstrategy <> t var
R87703:87703 compcert.cfrontend.Cstrategy <> s var
R87701:87701 compcert.cfrontend.Cstrategy <> m var
R87699:87699 compcert.cfrontend.Cstrategy <> e var
R87927:87930 compcert.common.Smallstep <> star ind
R87967:87977 compcert.cfrontend.Csem <> Returnstate constr
R87985:87986 compcert.cfrontend.Cstrategy <> m' var
R87983:87983 compcert.cfrontend.Cstrategy <> k var
R87979:87981 compcert.cfrontend.Cstrategy <> res var
R87964:87964 compcert.cfrontend.Cstrategy <> t var
R87941:87949 compcert.cfrontend.Csem <> Callstate constr
R87961:87961 compcert.cfrontend.Cstrategy <> m var
R87959:87959 compcert.cfrontend.Cstrategy <> k var
R87954:87957 compcert.cfrontend.Cstrategy <> args var
R87951:87952 compcert.cfrontend.Cstrategy <> fd var
R87937:87938 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R87932:87935 compcert.cfrontend.Cstrategy <> step def
R87906:87917 compcert.cfrontend.Csem <> is_call_cont def
R87919:87919 compcert.cfrontend.Cstrategy <> k var
R87855:87866 compcert.cfrontend.Cstrategy <> eval_funcall ind
R87883:87885 compcert.cfrontend.Cstrategy <> res var
R87880:87881 compcert.cfrontend.Cstrategy <> m' var
R87878:87878 compcert.cfrontend.Cstrategy <> t var
R87873:87876 compcert.cfrontend.Cstrategy <> args var
R87870:87871 compcert.cfrontend.Cstrategy <> fd var
R87868:87868 compcert.cfrontend.Cstrategy <> m var
R88006:88022 compcert.cfrontend.Cstrategy <> bigstep_induction scheme
R88006:88022 compcert.cfrontend.Cstrategy <> bigstep_induction scheme
R88083:88083 compcert.cfrontend.Cstrategy <> x var
R88083:88083 compcert.cfrontend.Cstrategy <> x var
R88194:88197 compcert.common.Smallstep <> star ind
R88232:88240 compcert.cfrontend.Csem <> ExprState constr
R88245:88248 compcert.cfrontend.Csyntax <> Eval constr
R88253:88258 compcert.cfrontend.Csyntax <> typeof def
R88208:88216 compcert.cfrontend.Csem <> ExprState constr
R88204:88205 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R88199:88202 compcert.cfrontend.Cstrategy <> step def
R88147:88150 compcert.cfrontend.Csyntax <> Eval constr
R88159:88163 Coq.Init.Logic <> False ind
R88172:88175 Coq.Init.Logic <> True ind
R88194:88197 compcert.common.Smallstep <> star ind
R88232:88240 compcert.cfrontend.Csem <> ExprState constr
R88245:88248 compcert.cfrontend.Csyntax <> Eval constr
R88253:88258 compcert.cfrontend.Csyntax <> typeof def
R88208:88216 compcert.cfrontend.Csem <> ExprState constr
R88204:88205 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R88199:88202 compcert.cfrontend.Cstrategy <> step def
R88147:88150 compcert.cfrontend.Csyntax <> Eval constr
R88159:88163 Coq.Init.Logic <> False ind
R88172:88175 Coq.Init.Logic <> True ind
R88291:88300 compcert.common.Smallstep <> star_right thm
R88291:88300 compcert.common.Smallstep <> star_right thm
R88323:88331 compcert.cfrontend.Cstrategy <> step_expr constr
R88323:88331 compcert.cfrontend.Cstrategy <> step_expr constr
R0:-1 compcert.cfrontend.Cstrategy <> y var
R88454:88462 compcert.common.Smallstep <> star_refl constr
R88454:88462 compcert.common.Smallstep <> star_refl constr
R0:-1 compcert.cfrontend.Cstrategy <> y var
R88501:88509 compcert.common.Smallstep <> star_refl constr
R88501:88509 compcert.common.Smallstep <> star_refl constr
R88550:88555 compcert.cfrontend.Csyntax <> Efield constr
R88557:88557 compcert.cfrontend.Cstrategy <> x var
R88550:88555 compcert.cfrontend.Csyntax <> Efield constr
R88557:88557 compcert.cfrontend.Cstrategy <> x var
R88579:88597 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R88579:88597 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R88711:88716 compcert.cfrontend.Csyntax <> Evalof constr
R88718:88718 compcert.cfrontend.Cstrategy <> x var
R88711:88716 compcert.cfrontend.Csyntax <> Evalof constr
R88718:88718 compcert.cfrontend.Cstrategy <> x var
R88738:88756 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R88738:88756 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R88917:88922 compcert.cfrontend.Csyntax <> Evalof constr
R88924:88924 compcert.cfrontend.Cstrategy <> x var
R88917:88922 compcert.cfrontend.Csyntax <> Evalof constr
R88924:88924 compcert.cfrontend.Cstrategy <> x var
R88944:88962 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R88944:88962 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R89039:89048 compcert.common.Smallstep <> star_right thm
R89039:89048 compcert.common.Smallstep <> star_right thm
R89077:89096 compcert.cfrontend.Cstrategy <> step_rvalof_volatile constr
R89077:89096 compcert.cfrontend.Cstrategy <> step_rvalof_volatile constr
R89199:89204 compcert.cfrontend.Csyntax <> Ederef constr
R89206:89206 compcert.cfrontend.Cstrategy <> x var
R89199:89204 compcert.cfrontend.Csyntax <> Ederef constr
R89206:89206 compcert.cfrontend.Cstrategy <> x var
R89226:89244 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R89226:89244 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R89358:89364 compcert.cfrontend.Csyntax <> Eaddrof constr
R89366:89366 compcert.cfrontend.Cstrategy <> x var
R89358:89364 compcert.cfrontend.Csyntax <> Eaddrof constr
R89366:89366 compcert.cfrontend.Cstrategy <> x var
R89386:89404 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R89386:89404 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R89516:89520 compcert.cfrontend.Csyntax <> Eunop constr
R89525:89525 compcert.cfrontend.Cstrategy <> x var
R89516:89520 compcert.cfrontend.Csyntax <> Eunop constr
R89525:89525 compcert.cfrontend.Cstrategy <> x var
R89545:89563 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R89545:89563 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R89676:89681 compcert.cfrontend.Csyntax <> Ebinop constr
R89686:89686 compcert.cfrontend.Cstrategy <> x var
R89676:89681 compcert.cfrontend.Csyntax <> Ebinop constr
R89686:89686 compcert.cfrontend.Cstrategy <> x var
R89709:89727 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R89709:89727 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R89801:89806 compcert.cfrontend.Csyntax <> Ebinop constr
R89815:89815 compcert.cfrontend.Cstrategy <> x var
R89801:89806 compcert.cfrontend.Csyntax <> Ebinop constr
R89815:89815 compcert.cfrontend.Cstrategy <> x var
R89835:89853 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R89835:89853 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R89934:89943 compcert.common.Smallstep <> star_trans thm
R89934:89943 compcert.common.Smallstep <> star_trans thm
R89991:89995 compcert.cfrontend.Csyntax <> Ecast constr
R89997:89997 compcert.cfrontend.Cstrategy <> x var
R89991:89995 compcert.cfrontend.Csyntax <> Ecast constr
R89997:89997 compcert.cfrontend.Cstrategy <> x var
R90017:90035 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R90017:90035 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R90154:90160 compcert.cfrontend.Csyntax <> Eseqand constr
R90162:90162 compcert.cfrontend.Cstrategy <> x var
R90154:90160 compcert.cfrontend.Csyntax <> Eseqand constr
R90162:90162 compcert.cfrontend.Cstrategy <> x var
R90185:90203 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R90185:90203 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R90277:90282 compcert.cfrontend.Csyntax <> Eparen constr
R90285:90290 compcert.cfrontend.Csyntax <> Eparen constr
R90294:90302 compcert.cfrontend.Ctypes <> type_bool def
R90292:90292 compcert.cfrontend.Cstrategy <> x var
R90277:90282 compcert.cfrontend.Csyntax <> Eparen constr
R90285:90290 compcert.cfrontend.Csyntax <> Eparen constr
R90294:90302 compcert.cfrontend.Ctypes <> type_bool def
R90292:90292 compcert.cfrontend.Cstrategy <> x var
R90323:90341 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R90323:90341 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R90416:90425 compcert.common.Smallstep <> star_trans thm
R90416:90425 compcert.common.Smallstep <> star_trans thm
R90448:90456 compcert.common.Smallstep <> star_left thm
R90448:90456 compcert.common.Smallstep <> star_left thm
R90472:90487 compcert.cfrontend.Cstrategy <> step_seqand_true constr
R90472:90487 compcert.cfrontend.Cstrategy <> step_seqand_true constr
R90524:90533 compcert.common.Smallstep <> star_trans thm
R90524:90533 compcert.common.Smallstep <> star_trans thm
R90571:90576 compcert.cfrontend.Csyntax <> Eparen constr
R90578:90578 compcert.cfrontend.Cstrategy <> x var
R90571:90576 compcert.cfrontend.Csyntax <> Eparen constr
R90578:90578 compcert.cfrontend.Cstrategy <> x var
R90644:90649 compcert.cfrontend.Csyntax <> Eparen constr
R90655:90663 compcert.cfrontend.Ctypes <> type_bool def
R90599:90604 compcert.cfrontend.Csyntax <> Eparen constr
R90607:90612 compcert.cfrontend.Csyntax <> Eparen constr
R90618:90626 compcert.cfrontend.Ctypes <> type_bool def
R90599:90604 compcert.cfrontend.Csyntax <> Eparen constr
R90607:90612 compcert.cfrontend.Csyntax <> Eparen constr
R90618:90626 compcert.cfrontend.Ctypes <> type_bool def
R90644:90649 compcert.cfrontend.Csyntax <> Eparen constr
R90655:90663 compcert.cfrontend.Ctypes <> type_bool def
R90677:90684 compcert.common.Smallstep <> star_two thm
R90677:90684 compcert.common.Smallstep <> star_two thm
R90702:90711 compcert.cfrontend.Cstrategy <> step_paren constr
R90702:90711 compcert.cfrontend.Cstrategy <> step_paren constr
R90739:90757 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R90739:90757 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R90833:90842 compcert.cfrontend.Cstrategy <> step_paren constr
R90833:90842 compcert.cfrontend.Cstrategy <> step_paren constr
R90944:90950 compcert.cfrontend.Csyntax <> Eseqand constr
R90952:90952 compcert.cfrontend.Cstrategy <> x var
R90944:90950 compcert.cfrontend.Csyntax <> Eseqand constr
R90952:90952 compcert.cfrontend.Cstrategy <> x var
R90975:90993 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R90975:90993 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R91068:91077 compcert.common.Smallstep <> star_right thm
R91068:91077 compcert.common.Smallstep <> star_right thm
R91106:91122 compcert.cfrontend.Cstrategy <> step_seqand_false constr
R91106:91122 compcert.cfrontend.Cstrategy <> step_seqand_false constr
R91204:91209 compcert.cfrontend.Csyntax <> Eseqor constr
R91211:91211 compcert.cfrontend.Cstrategy <> x var
R91204:91209 compcert.cfrontend.Csyntax <> Eseqor constr
R91211:91211 compcert.cfrontend.Cstrategy <> x var
R91234:91252 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R91234:91252 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R91326:91331 compcert.cfrontend.Csyntax <> Eparen constr
R91334:91339 compcert.cfrontend.Csyntax <> Eparen constr
R91343:91351 compcert.cfrontend.Ctypes <> type_bool def
R91341:91341 compcert.cfrontend.Cstrategy <> x var
R91326:91331 compcert.cfrontend.Csyntax <> Eparen constr
R91334:91339 compcert.cfrontend.Csyntax <> Eparen constr
R91343:91351 compcert.cfrontend.Ctypes <> type_bool def
R91341:91341 compcert.cfrontend.Cstrategy <> x var
R91372:91390 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R91372:91390 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R91465:91474 compcert.common.Smallstep <> star_trans thm
R91465:91474 compcert.common.Smallstep <> star_trans thm
R91497:91505 compcert.common.Smallstep <> star_left thm
R91497:91505 compcert.common.Smallstep <> star_left thm
R91521:91536 compcert.cfrontend.Cstrategy <> step_seqor_false constr
R91521:91536 compcert.cfrontend.Cstrategy <> step_seqor_false constr
R91573:91582 compcert.common.Smallstep <> star_trans thm
R91573:91582 compcert.common.Smallstep <> star_trans thm
R91620:91625 compcert.cfrontend.Csyntax <> Eparen constr
R91627:91627 compcert.cfrontend.Cstrategy <> x var
R91620:91625 compcert.cfrontend.Csyntax <> Eparen constr
R91627:91627 compcert.cfrontend.Cstrategy <> x var
R91693:91698 compcert.cfrontend.Csyntax <> Eparen constr
R91704:91712 compcert.cfrontend.Ctypes <> type_bool def
R91648:91653 compcert.cfrontend.Csyntax <> Eparen constr
R91656:91661 compcert.cfrontend.Csyntax <> Eparen constr
R91667:91675 compcert.cfrontend.Ctypes <> type_bool def
R91648:91653 compcert.cfrontend.Csyntax <> Eparen constr
R91656:91661 compcert.cfrontend.Csyntax <> Eparen constr
R91667:91675 compcert.cfrontend.Ctypes <> type_bool def
R91693:91698 compcert.cfrontend.Csyntax <> Eparen constr
R91704:91712 compcert.cfrontend.Ctypes <> type_bool def
R91726:91733 compcert.common.Smallstep <> star_two thm
R91726:91733 compcert.common.Smallstep <> star_two thm
R91751:91760 compcert.cfrontend.Cstrategy <> step_paren constr
R91751:91760 compcert.cfrontend.Cstrategy <> step_paren constr
R91788:91806 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R91788:91806 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R91882:91891 compcert.cfrontend.Cstrategy <> step_paren constr
R91882:91891 compcert.cfrontend.Cstrategy <> step_paren constr
R91991:91996 compcert.cfrontend.Csyntax <> Eseqor constr
R91998:91998 compcert.cfrontend.Cstrategy <> x var
R91991:91996 compcert.cfrontend.Csyntax <> Eseqor constr
R91998:91998 compcert.cfrontend.Cstrategy <> x var
R92021:92039 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R92021:92039 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R92114:92123 compcert.common.Smallstep <> star_right thm
R92114:92123 compcert.common.Smallstep <> star_right thm
R92152:92166 compcert.cfrontend.Cstrategy <> step_seqor_true constr
R92152:92166 compcert.cfrontend.Cstrategy <> step_seqor_true constr
R92246:92255 compcert.cfrontend.Csyntax <> Econdition constr
R92257:92257 compcert.cfrontend.Cstrategy <> x var
R92246:92255 compcert.cfrontend.Csyntax <> Econdition constr
R92257:92257 compcert.cfrontend.Cstrategy <> x var
R92283:92301 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R92283:92301 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R92375:92380 compcert.cfrontend.Csyntax <> Eparen constr
R92382:92382 compcert.cfrontend.Cstrategy <> x var
R92375:92380 compcert.cfrontend.Csyntax <> Eparen constr
R92382:92382 compcert.cfrontend.Cstrategy <> x var
R92402:92420 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R92402:92420 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R92513:92522 compcert.common.Smallstep <> star_trans thm
R92513:92522 compcert.common.Smallstep <> star_trans thm
R92544:92552 compcert.common.Smallstep <> star_left thm
R92544:92552 compcert.common.Smallstep <> star_left thm
R92568:92581 compcert.cfrontend.Cstrategy <> step_condition constr
R92568:92581 compcert.cfrontend.Cstrategy <> step_condition constr
R92619:92628 compcert.common.Smallstep <> star_right thm
R92619:92628 compcert.common.Smallstep <> star_right thm
R92654:92663 compcert.cfrontend.Cstrategy <> step_paren constr
R92654:92663 compcert.cfrontend.Cstrategy <> step_paren constr
R0:-1 compcert.cfrontend.Cstrategy <> y var
R92762:92770 compcert.common.Smallstep <> star_refl constr
R92762:92770 compcert.common.Smallstep <> star_refl constr
R0:-1 compcert.cfrontend.Cstrategy <> y var
R92813:92821 compcert.common.Smallstep <> star_refl constr
R92813:92821 compcert.common.Smallstep <> star_refl constr
R92863:92869 compcert.cfrontend.Csyntax <> Eassign constr
R92871:92871 compcert.cfrontend.Cstrategy <> x var
R92863:92869 compcert.cfrontend.Csyntax <> Eassign constr
R92871:92871 compcert.cfrontend.Cstrategy <> x var
R92893:92911 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R92893:92911 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R92985:92991 compcert.cfrontend.Csyntax <> Eassign constr
R92996:92996 compcert.cfrontend.Cstrategy <> x var
R92985:92991 compcert.cfrontend.Csyntax <> Eassign constr
R92996:92996 compcert.cfrontend.Cstrategy <> x var
R93016:93034 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R93016:93034 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R93117:93126 compcert.common.Smallstep <> star_trans thm
R93117:93126 compcert.common.Smallstep <> star_trans thm
R93149:93158 compcert.common.Smallstep <> star_right thm
R93149:93158 compcert.common.Smallstep <> star_right thm
R93186:93196 compcert.cfrontend.Cstrategy <> step_assign constr
R93186:93196 compcert.cfrontend.Cstrategy <> step_assign constr
R93313:93321 compcert.cfrontend.Csyntax <> Eassignop constr
R93326:93326 compcert.cfrontend.Cstrategy <> x var
R93313:93321 compcert.cfrontend.Csyntax <> Eassignop constr
R93326:93326 compcert.cfrontend.Cstrategy <> x var
R93354:93372 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R93354:93372 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R93446:93454 compcert.cfrontend.Csyntax <> Eassignop constr
R93462:93462 compcert.cfrontend.Cstrategy <> x var
R93446:93454 compcert.cfrontend.Csyntax <> Eassignop constr
R93462:93462 compcert.cfrontend.Cstrategy <> x var
R93488:93506 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R93488:93506 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R93589:93598 compcert.common.Smallstep <> star_trans thm
R93589:93598 compcert.common.Smallstep <> star_trans thm
R93621:93630 compcert.common.Smallstep <> star_right thm
R93621:93630 compcert.common.Smallstep <> star_right thm
R93658:93670 compcert.cfrontend.Cstrategy <> step_assignop constr
R93658:93670 compcert.cfrontend.Cstrategy <> step_assignop constr
R93836:93844 compcert.cfrontend.Csyntax <> Epostincr constr
R93849:93849 compcert.cfrontend.Cstrategy <> x var
R93836:93844 compcert.cfrontend.Csyntax <> Epostincr constr
R93849:93849 compcert.cfrontend.Cstrategy <> x var
R93869:93887 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R93869:93887 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R93964:93973 compcert.common.Smallstep <> star_right thm
R93964:93973 compcert.common.Smallstep <> star_right thm
R94002:94014 compcert.cfrontend.Cstrategy <> step_postincr constr
R94002:94014 compcert.cfrontend.Cstrategy <> step_postincr constr
R94086:94091 compcert.cfrontend.Csyntax <> Ecomma constr
R94093:94093 compcert.cfrontend.Cstrategy <> x var
R94086:94091 compcert.cfrontend.Csyntax <> Ecomma constr
R94093:94093 compcert.cfrontend.Cstrategy <> x var
R94116:94134 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R94116:94134 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R94265:94274 compcert.common.Smallstep <> star_trans thm
R94265:94274 compcert.common.Smallstep <> star_trans thm
R94296:94304 compcert.common.Smallstep <> star_left thm
R94296:94304 compcert.common.Smallstep <> star_left thm
R94320:94329 compcert.cfrontend.Cstrategy <> step_comma constr
R94320:94329 compcert.cfrontend.Cstrategy <> step_comma constr
R94413:94417 compcert.cfrontend.Csyntax <> Ecall constr
R94419:94419 compcert.cfrontend.Cstrategy <> x var
R94413:94417 compcert.cfrontend.Csyntax <> Ecall constr
R94419:94419 compcert.cfrontend.Cstrategy <> x var
R94445:94463 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R94445:94463 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R94529:94532 compcert.cfrontend.Csyntax <> Enil constr
R94529:94532 compcert.cfrontend.Csyntax <> Enil constr
R0:-1 compcert.cfrontend.Cstrategy <> y var
R94592:94601 compcert.common.Smallstep <> star_trans thm
R94592:94601 compcert.common.Smallstep <> star_trans thm
R94623:94632 compcert.common.Smallstep <> star_trans thm
R94623:94632 compcert.common.Smallstep <> star_trans thm
R94655:94663 compcert.common.Smallstep <> star_left thm
R94655:94663 compcert.common.Smallstep <> star_left thm
R94679:94687 compcert.cfrontend.Cstrategy <> step_call constr
R94679:94687 compcert.cfrontend.Cstrategy <> step_call constr
R94719:94728 compcert.common.Smallstep <> star_right thm
R94719:94728 compcert.common.Smallstep <> star_right thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R94863:94871 compcert.common.Smallstep <> star_refl constr
R94863:94871 compcert.common.Smallstep <> star_refl constr
R94911:94915 compcert.cfrontend.Csyntax <> Ecall constr
R94921:94932 compcert.cfrontend.Cstrategy <> exprlist_app def
R94939:94943 compcert.cfrontend.Csyntax <> Econs constr
R94945:94945 compcert.cfrontend.Cstrategy <> x var
R94911:94915 compcert.cfrontend.Csyntax <> Ecall constr
R94921:94932 compcert.cfrontend.Cstrategy <> exprlist_app def
R94939:94943 compcert.cfrontend.Csyntax <> Econs constr
R94945:94945 compcert.cfrontend.Cstrategy <> x var
R94970:94988 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R94970:94988 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R95034:95057 compcert.cfrontend.Cstrategy <> exprlist_app_leftcontext thm
R95034:95057 compcert.cfrontend.Cstrategy <> exprlist_app_leftcontext thm
R95102:95113 compcert.cfrontend.Cstrategy <> exprlist_app def
R95120:95124 compcert.cfrontend.Csyntax <> Econs constr
R95130:95133 compcert.cfrontend.Csyntax <> Enil constr
R95102:95113 compcert.cfrontend.Cstrategy <> exprlist_app def
R95120:95124 compcert.cfrontend.Csyntax <> Econs constr
R95130:95133 compcert.cfrontend.Csyntax <> Enil constr
R95156:95174 compcert.cfrontend.Cstrategy <> exprlist_app_simple thm
R95156:95174 compcert.cfrontend.Cstrategy <> exprlist_app_simple thm
R95231:95248 compcert.cfrontend.Cstrategy <> exprlist_app_assoc thm
R95231:95248 compcert.cfrontend.Cstrategy <> exprlist_app_assoc thm
R95231:95248 compcert.cfrontend.Cstrategy <> exprlist_app_assoc thm
R95231:95248 compcert.cfrontend.Cstrategy <> exprlist_app_assoc thm
R0:-1 compcert.cfrontend.Cstrategy <> y var
R95306:95315 compcert.common.Smallstep <> star_trans thm
R95306:95315 compcert.common.Smallstep <> star_trans thm
R95366:95374 compcert.common.Smallstep <> star_refl constr
R95366:95374 compcert.common.Smallstep <> star_refl constr
R95433:95441 compcert.common.Smallstep <> star_left thm
R95433:95441 compcert.common.Smallstep <> star_left thm
R95474:95483 compcert.common.Smallstep <> star_right thm
R95474:95483 compcert.common.Smallstep <> star_right thm
R95591:95594 compcert.cfrontend.Csem <> Kseq constr
R95591:95594 compcert.cfrontend.Csem <> Kseq constr
R95709:95717 compcert.common.Smallstep <> star_left thm
R95709:95717 compcert.common.Smallstep <> star_left thm
R95750:95759 compcert.common.Smallstep <> star_trans thm
R95750:95759 compcert.common.Smallstep <> star_trans thm
R95783:95791 compcert.common.Smallstep <> star_left thm
R95783:95791 compcert.common.Smallstep <> star_left thm
R95906:95909 compcert.cfrontend.Csem <> Kseq constr
R95906:95909 compcert.cfrontend.Csem <> Kseq constr
R95979:95987 compcert.cfrontend.Cstrategy <> Out_break constr
R95992:95996 compcert.cfrontend.Csem <> State constr
R96000:96005 compcert.cfrontend.Csyntax <> Sbreak constr
R96020:96031 compcert.cfrontend.Cstrategy <> Out_continue constr
R96036:96040 compcert.cfrontend.Csem <> State constr
R96044:96052 compcert.cfrontend.Csyntax <> Scontinue constr
R95979:95987 compcert.cfrontend.Cstrategy <> Out_break constr
R95992:95996 compcert.cfrontend.Csem <> State constr
R96000:96005 compcert.cfrontend.Csyntax <> Sbreak constr
R96020:96031 compcert.cfrontend.Cstrategy <> Out_continue constr
R96036:96040 compcert.cfrontend.Csem <> State constr
R96044:96052 compcert.cfrontend.Csyntax <> Scontinue constr
R96114:96122 compcert.common.Smallstep <> star_left thm
R96114:96122 compcert.common.Smallstep <> star_left thm
R96155:96164 compcert.common.Smallstep <> star_trans thm
R96155:96164 compcert.common.Smallstep <> star_trans thm
R96225:96232 compcert.common.Smallstep <> star_one thm
R96225:96232 compcert.common.Smallstep <> star_one thm
R96248:96261 compcert.cfrontend.Csem <> step_break_seq constr
R96248:96261 compcert.cfrontend.Csem <> step_break_seq constr
R96274:96281 compcert.common.Smallstep <> star_one thm
R96274:96281 compcert.common.Smallstep <> star_one thm
R96297:96313 compcert.cfrontend.Csem <> step_continue_seq constr
R96297:96313 compcert.cfrontend.Csem <> step_continue_seq constr
R96326:96334 compcert.common.Smallstep <> star_refl constr
R96326:96334 compcert.common.Smallstep <> star_refl constr
R96347:96355 compcert.common.Smallstep <> star_refl constr
R96347:96355 compcert.common.Smallstep <> star_refl constr
R96528:96536 compcert.common.Smallstep <> star_left thm
R96528:96536 compcert.common.Smallstep <> star_left thm
R96552:96568 compcert.cfrontend.Csem <> step_ifthenelse_1 constr
R96552:96568 compcert.cfrontend.Csem <> step_ifthenelse_1 constr
R96580:96589 compcert.common.Smallstep <> star_trans thm
R96580:96589 compcert.common.Smallstep <> star_trans thm
R96612:96620 compcert.common.Smallstep <> star_left thm
R96612:96620 compcert.common.Smallstep <> star_left thm
R96651:96667 compcert.cfrontend.Csem <> step_ifthenelse_2 constr
R96651:96667 compcert.cfrontend.Csem <> step_ifthenelse_2 constr
R96770:96778 compcert.common.Smallstep <> star_refl constr
R96770:96778 compcert.common.Smallstep <> star_refl constr
R96851:96859 compcert.common.Smallstep <> star_left thm
R96851:96859 compcert.common.Smallstep <> star_left thm
R96875:96887 compcert.cfrontend.Csem <> step_return_1 constr
R96875:96887 compcert.cfrontend.Csem <> step_return_1 constr
R96978:96986 compcert.common.Smallstep <> star_refl constr
R96978:96986 compcert.common.Smallstep <> star_refl constr
R97047:97055 compcert.common.Smallstep <> star_refl constr
R97047:97055 compcert.common.Smallstep <> star_refl constr
R97122:97130 compcert.common.Smallstep <> star_left thm
R97122:97130 compcert.common.Smallstep <> star_left thm
R97146:97155 compcert.cfrontend.Csem <> step_while constr
R97146:97155 compcert.cfrontend.Csem <> step_while constr
R97167:97176 compcert.common.Smallstep <> star_right thm
R97167:97176 compcert.common.Smallstep <> star_right thm
R97203:97218 compcert.cfrontend.Csem <> step_while_false constr
R97203:97218 compcert.cfrontend.Csem <> step_while_false constr
R97304:97310 compcert.cfrontend.Csem <> Kwhile2 constr
R97304:97310 compcert.cfrontend.Csem <> Kwhile2 constr
R97376:97384 compcert.cfrontend.Cstrategy <> Out_break constr
R97389:97393 compcert.cfrontend.Csem <> State constr
R97397:97401 compcert.cfrontend.Csyntax <> Sskip constr
R97376:97384 compcert.cfrontend.Cstrategy <> Out_break constr
R97389:97393 compcert.cfrontend.Csem <> State constr
R97397:97401 compcert.cfrontend.Csyntax <> Sskip constr
R97463:97471 compcert.common.Smallstep <> star_left thm
R97463:97471 compcert.common.Smallstep <> star_left thm
R97487:97496 compcert.cfrontend.Csem <> step_while constr
R97487:97496 compcert.cfrontend.Csem <> step_while constr
R97508:97517 compcert.common.Smallstep <> star_trans thm
R97508:97517 compcert.common.Smallstep <> star_trans thm
R97539:97547 compcert.common.Smallstep <> star_left thm
R97539:97547 compcert.common.Smallstep <> star_left thm
R97564:97578 compcert.cfrontend.Csem <> step_while_true constr
R97564:97578 compcert.cfrontend.Csem <> step_while_true constr
R97597:97606 compcert.common.Smallstep <> star_trans thm
R97597:97606 compcert.common.Smallstep <> star_trans thm
R97670:97677 compcert.common.Smallstep <> star_one thm
R97670:97677 compcert.common.Smallstep <> star_one thm
R97712:97720 compcert.common.Smallstep <> star_refl constr
R97712:97720 compcert.common.Smallstep <> star_refl constr
R97885:97891 compcert.cfrontend.Csem <> Kwhile2 constr
R97885:97891 compcert.cfrontend.Csem <> Kwhile2 constr
R97990:97998 compcert.common.Smallstep <> star_left thm
R97990:97998 compcert.common.Smallstep <> star_left thm
R98014:98023 compcert.cfrontend.Csem <> step_while constr
R98014:98023 compcert.cfrontend.Csem <> step_while constr
R98035:98044 compcert.common.Smallstep <> star_trans thm
R98035:98044 compcert.common.Smallstep <> star_trans thm
R98066:98074 compcert.common.Smallstep <> star_left thm
R98066:98074 compcert.common.Smallstep <> star_left thm
R98091:98105 compcert.cfrontend.Csem <> step_while_true constr
R98091:98105 compcert.cfrontend.Csem <> step_while_true constr
R98124:98133 compcert.common.Smallstep <> star_trans thm
R98124:98133 compcert.common.Smallstep <> star_trans thm
R98156:98164 compcert.common.Smallstep <> star_left thm
R98156:98164 compcert.common.Smallstep <> star_left thm
R98198:98224 compcert.cfrontend.Csem <> step_skip_or_continue_while constr
R98198:98224 compcert.cfrontend.Csem <> step_skip_or_continue_while constr
R98198:98224 compcert.cfrontend.Csem <> step_skip_or_continue_while constr
R98356:98364 compcert.cfrontend.Csem <> Kdowhile1 constr
R98356:98364 compcert.cfrontend.Csem <> Kdowhile1 constr
R98401:98405 compcert.cfrontend.Csem <> State constr
R98409:98413 compcert.cfrontend.Csyntax <> Sskip constr
R98401:98405 compcert.cfrontend.Csem <> State constr
R98409:98413 compcert.cfrontend.Csyntax <> Sskip constr
R98440:98448 compcert.common.Smallstep <> star_left thm
R98440:98448 compcert.common.Smallstep <> star_left thm
R98480:98489 compcert.common.Smallstep <> star_trans thm
R98480:98489 compcert.common.Smallstep <> star_trans thm
R98512:98520 compcert.common.Smallstep <> star_left thm
R98512:98520 compcert.common.Smallstep <> star_left thm
R98555:98583 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R98555:98583 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R98555:98583 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R98602:98611 compcert.common.Smallstep <> star_right thm
R98602:98611 compcert.common.Smallstep <> star_right thm
R98641:98658 compcert.cfrontend.Csem <> step_dowhile_false constr
R98641:98658 compcert.cfrontend.Csem <> step_dowhile_false constr
R98773:98781 compcert.cfrontend.Csem <> Kdowhile1 constr
R98773:98781 compcert.cfrontend.Csem <> Kdowhile1 constr
R98847:98855 compcert.cfrontend.Cstrategy <> Out_break constr
R98860:98864 compcert.cfrontend.Csem <> State constr
R98868:98872 compcert.cfrontend.Csyntax <> Sskip constr
R98847:98855 compcert.cfrontend.Cstrategy <> Out_break constr
R98860:98864 compcert.cfrontend.Csem <> State constr
R98868:98872 compcert.cfrontend.Csyntax <> Sskip constr
R98934:98942 compcert.common.Smallstep <> star_left thm
R98934:98942 compcert.common.Smallstep <> star_left thm
R98958:98969 compcert.cfrontend.Csem <> step_dowhile constr
R98958:98969 compcert.cfrontend.Csem <> step_dowhile constr
R98982:98991 compcert.common.Smallstep <> star_trans thm
R98982:98991 compcert.common.Smallstep <> star_trans thm
R99055:99062 compcert.common.Smallstep <> star_one thm
R99055:99062 compcert.common.Smallstep <> star_one thm
R99093:99101 compcert.common.Smallstep <> star_refl constr
R99093:99101 compcert.common.Smallstep <> star_refl constr
R99242:99250 compcert.cfrontend.Csem <> Kdowhile1 constr
R99242:99250 compcert.cfrontend.Csem <> Kdowhile1 constr
R99349:99357 compcert.common.Smallstep <> star_left thm
R99349:99357 compcert.common.Smallstep <> star_left thm
R99389:99398 compcert.common.Smallstep <> star_trans thm
R99389:99398 compcert.common.Smallstep <> star_trans thm
R99421:99429 compcert.common.Smallstep <> star_left thm
R99421:99429 compcert.common.Smallstep <> star_left thm
R99464:99492 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R99464:99492 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R99464:99492 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R99511:99520 compcert.common.Smallstep <> star_trans thm
R99511:99520 compcert.common.Smallstep <> star_trans thm
R99542:99550 compcert.common.Smallstep <> star_left thm
R99542:99550 compcert.common.Smallstep <> star_left thm
R99567:99583 compcert.cfrontend.Csem <> step_dowhile_true constr
R99567:99583 compcert.cfrontend.Csem <> step_dowhile_true constr
R99714:99717 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R99706:99708 Coq.Init.Logic <> :type_scope:x_'='_x not
R99709:99713 compcert.cfrontend.Csyntax <> Sskip constr
R99720:99723 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R99724:99728 compcert.cfrontend.Csyntax <> Sskip constr
R99714:99717 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R99706:99708 Coq.Init.Logic <> :type_scope:x_'='_x not
R99709:99713 compcert.cfrontend.Csyntax <> Sskip constr
R99720:99723 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R99724:99728 compcert.cfrontend.Csyntax <> Sskip constr
R99839:99842 compcert.cfrontend.Csem <> Kseq constr
R99845:99848 compcert.cfrontend.Csyntax <> Sfor constr
R99850:99854 compcert.cfrontend.Csyntax <> Sskip constr
R99839:99842 compcert.cfrontend.Csem <> Kseq constr
R99845:99848 compcert.cfrontend.Csyntax <> Sfor constr
R99850:99854 compcert.cfrontend.Csyntax <> Sskip constr
R99972:99980 compcert.common.Smallstep <> star_left thm
R99972:99980 compcert.common.Smallstep <> star_left thm
R99996:100009 compcert.cfrontend.Csem <> step_for_start constr
R99996:100009 compcert.cfrontend.Csem <> step_for_start constr
R100030:100039 compcert.common.Smallstep <> star_trans thm
R100030:100039 compcert.common.Smallstep <> star_trans thm
R100062:100070 compcert.common.Smallstep <> star_left thm
R100062:100070 compcert.common.Smallstep <> star_left thm
R100198:100206 compcert.common.Smallstep <> star_left thm
R100198:100206 compcert.common.Smallstep <> star_left thm
R100222:100229 compcert.cfrontend.Csem <> step_for constr
R100222:100229 compcert.cfrontend.Csem <> step_for constr
R100242:100251 compcert.common.Smallstep <> star_right thm
R100242:100251 compcert.common.Smallstep <> star_right thm
R100278:100291 compcert.cfrontend.Csem <> step_for_false constr
R100278:100291 compcert.cfrontend.Csem <> step_for_false constr
R100375:100379 compcert.cfrontend.Csem <> Kfor3 constr
R100375:100379 compcert.cfrontend.Csem <> Kfor3 constr
R100449:100457 compcert.cfrontend.Cstrategy <> Out_break constr
R100462:100466 compcert.cfrontend.Csem <> State constr
R100470:100474 compcert.cfrontend.Csyntax <> Sskip constr
R100449:100457 compcert.cfrontend.Cstrategy <> Out_break constr
R100462:100466 compcert.cfrontend.Csem <> State constr
R100470:100474 compcert.cfrontend.Csyntax <> Sskip constr
R100536:100544 compcert.common.Smallstep <> star_left thm
R100536:100544 compcert.common.Smallstep <> star_left thm
R100560:100567 compcert.cfrontend.Csem <> step_for constr
R100560:100567 compcert.cfrontend.Csem <> step_for constr
R100580:100589 compcert.common.Smallstep <> star_trans thm
R100580:100589 compcert.common.Smallstep <> star_trans thm
R100612:100620 compcert.common.Smallstep <> star_left thm
R100612:100620 compcert.common.Smallstep <> star_left thm
R100637:100649 compcert.cfrontend.Csem <> step_for_true constr
R100637:100649 compcert.cfrontend.Csem <> step_for_true constr
R100668:100677 compcert.common.Smallstep <> star_trans thm
R100668:100677 compcert.common.Smallstep <> star_trans thm
R100742:100749 compcert.common.Smallstep <> star_one thm
R100742:100749 compcert.common.Smallstep <> star_one thm
R100781:100789 compcert.common.Smallstep <> star_refl constr
R100781:100789 compcert.common.Smallstep <> star_refl constr
R100952:100956 compcert.cfrontend.Csem <> Kfor3 constr
R100952:100956 compcert.cfrontend.Csem <> Kfor3 constr
R101005:101009 compcert.cfrontend.Csem <> Kfor4 constr
R101005:101009 compcert.cfrontend.Csem <> Kfor4 constr
R101126:101134 compcert.common.Smallstep <> star_left thm
R101126:101134 compcert.common.Smallstep <> star_left thm
R101150:101157 compcert.cfrontend.Csem <> step_for constr
R101150:101157 compcert.cfrontend.Csem <> step_for constr
R101170:101179 compcert.common.Smallstep <> star_trans thm
R101170:101179 compcert.common.Smallstep <> star_trans thm
R101202:101210 compcert.common.Smallstep <> star_left thm
R101202:101210 compcert.common.Smallstep <> star_left thm
R101227:101239 compcert.cfrontend.Csem <> step_for_true constr
R101227:101239 compcert.cfrontend.Csem <> step_for_true constr
R101258:101267 compcert.common.Smallstep <> star_trans thm
R101258:101267 compcert.common.Smallstep <> star_trans thm
R101313:101317 compcert.cfrontend.Csem <> State constr
R101325:101329 compcert.cfrontend.Csem <> Kfor4 constr
R101290:101299 compcert.common.Smallstep <> star_trans thm
R101313:101317 compcert.cfrontend.Csem <> State constr
R101325:101329 compcert.cfrontend.Csem <> Kfor4 constr
R101290:101299 compcert.common.Smallstep <> star_trans thm
R101375:101382 compcert.common.Smallstep <> star_one thm
R101375:101382 compcert.common.Smallstep <> star_one thm
R101420:101427 compcert.common.Smallstep <> star_one thm
R101420:101427 compcert.common.Smallstep <> star_one thm
R101466:101475 compcert.common.Smallstep <> star_trans thm
R101466:101475 compcert.common.Smallstep <> star_trans thm
R101499:101507 compcert.common.Smallstep <> star_left thm
R101499:101507 compcert.common.Smallstep <> star_left thm
R101674:101681 compcert.cfrontend.Csem <> Kswitch2 constr
R101674:101681 compcert.cfrontend.Csem <> Kswitch2 constr
R101742:101751 compcert.cfrontend.Cstrategy <> Out_normal constr
R101756:101760 compcert.cfrontend.Csem <> State constr
R101764:101768 compcert.cfrontend.Csyntax <> Sskip constr
R101783:101791 compcert.cfrontend.Cstrategy <> Out_break constr
R101796:101800 compcert.cfrontend.Csem <> State constr
R101804:101808 compcert.cfrontend.Csyntax <> Sskip constr
R101823:101834 compcert.cfrontend.Cstrategy <> Out_continue constr
R101839:101843 compcert.cfrontend.Csem <> State constr
R101847:101855 compcert.cfrontend.Csyntax <> Scontinue constr
R101742:101751 compcert.cfrontend.Cstrategy <> Out_normal constr
R101756:101760 compcert.cfrontend.Csem <> State constr
R101764:101768 compcert.cfrontend.Csyntax <> Sskip constr
R101783:101791 compcert.cfrontend.Cstrategy <> Out_break constr
R101796:101800 compcert.cfrontend.Csem <> State constr
R101804:101808 compcert.cfrontend.Csyntax <> Sskip constr
R101823:101834 compcert.cfrontend.Cstrategy <> Out_continue constr
R101839:101843 compcert.cfrontend.Csem <> State constr
R101847:101855 compcert.cfrontend.Csyntax <> Scontinue constr
R101917:101925 compcert.common.Smallstep <> star_left thm
R101917:101925 compcert.common.Smallstep <> star_left thm
R101942:101952 compcert.cfrontend.Csem <> step_switch constr
R101942:101952 compcert.cfrontend.Csem <> step_switch constr
R101964:101973 compcert.common.Smallstep <> star_trans thm
R101964:101973 compcert.common.Smallstep <> star_trans thm
R101996:102004 compcert.common.Smallstep <> star_left thm
R101996:102004 compcert.common.Smallstep <> star_left thm
R102021:102036 compcert.cfrontend.Csem <> step_expr_switch constr
R102021:102036 compcert.cfrontend.Csem <> step_expr_switch constr
R102056:102065 compcert.common.Smallstep <> star_trans thm
R102056:102065 compcert.common.Smallstep <> star_trans thm
R102111:102118 compcert.common.Smallstep <> star_one thm
R102111:102118 compcert.common.Smallstep <> star_one thm
R102158:102165 compcert.common.Smallstep <> star_one thm
R102158:102165 compcert.common.Smallstep <> star_one thm
R102205:102212 compcert.common.Smallstep <> star_one thm
R102205:102212 compcert.common.Smallstep <> star_one thm
R102246:102254 compcert.common.Smallstep <> star_refl constr
R102246:102254 compcert.common.Smallstep <> star_refl constr
R102267:102275 compcert.common.Smallstep <> star_refl constr
R102267:102275 compcert.common.Smallstep <> star_refl constr
R102444:102452 compcert.common.Smallstep <> star_left thm
R102444:102452 compcert.common.Smallstep <> star_left thm
R102469:102490 compcert.cfrontend.Csem <> step_internal_function constr
R102469:102490 compcert.cfrontend.Csem <> step_internal_function constr
R102509:102518 compcert.common.Smallstep <> star_right thm
R102509:102518 compcert.common.Smallstep <> star_right thm
R102623:102626 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102615:102617 Coq.Init.Logic <> :type_scope:x_'='_x not
R102604:102612 compcert.cfrontend.Csyntax <> fn_return proj
R102618:102622 compcert.cfrontend.Ctypes <> Tvoid constr
R102631:102633 Coq.Init.Logic <> :type_scope:x_'='_x not
R102634:102639 compcert.common.Values <> Vundef constr
R102623:102626 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102615:102617 Coq.Init.Logic <> :type_scope:x_'='_x not
R102604:102612 compcert.cfrontend.Csyntax <> fn_return proj
R102618:102622 compcert.cfrontend.Ctypes <> Tvoid constr
R102631:102633 Coq.Init.Logic <> :type_scope:x_'='_x not
R102634:102639 compcert.common.Values <> Vundef constr
R102657:102665 compcert.cfrontend.Csyntax <> fn_return proj
R102657:102665 compcert.cfrontend.Csyntax <> fn_return proj
R102744:102757 compcert.cfrontend.Csem <> step_skip_call constr
R102744:102757 compcert.cfrontend.Csem <> step_skip_call constr
R102820:102823 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102812:102814 Coq.Init.Logic <> :type_scope:x_'='_x not
R102801:102809 compcert.cfrontend.Csyntax <> fn_return proj
R102815:102819 compcert.cfrontend.Ctypes <> Tvoid constr
R102828:102830 Coq.Init.Logic <> :type_scope:x_'='_x not
R102831:102836 compcert.common.Values <> Vundef constr
R102820:102823 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102812:102814 Coq.Init.Logic <> :type_scope:x_'='_x not
R102801:102809 compcert.cfrontend.Csyntax <> fn_return proj
R102815:102819 compcert.cfrontend.Ctypes <> Tvoid constr
R102828:102830 Coq.Init.Logic <> :type_scope:x_'='_x not
R102831:102836 compcert.common.Values <> Vundef constr
R102854:102862 compcert.cfrontend.Csyntax <> fn_return proj
R102854:102862 compcert.cfrontend.Csyntax <> fn_return proj
R102941:102962 compcert.cfrontend.Cstrategy <> is_call_cont_call_cont thm
R102941:102962 compcert.cfrontend.Cstrategy <> is_call_cont_call_cont thm
R103001:103013 compcert.cfrontend.Csem <> step_return_0 constr
R103001:103013 compcert.cfrontend.Csem <> step_return_0 constr
R103073:103094 compcert.cfrontend.Cstrategy <> is_call_cont_call_cont thm
R103073:103094 compcert.cfrontend.Cstrategy <> is_call_cont_call_cont thm
R103134:103146 compcert.cfrontend.Csem <> step_return_2 constr
R103134:103146 compcert.cfrontend.Csem <> step_return_2 constr
R103209:103216 compcert.common.Smallstep <> star_one thm
R103209:103216 compcert.common.Smallstep <> star_one thm
R103232:103253 compcert.cfrontend.Csem <> step_external_function constr
R103232:103253 compcert.cfrontend.Csem <> step_external_function constr
prf 103275:103298 <> eval_expression_to_steps
R103378:103381 compcert.common.Smallstep <> star ind
R103416:103424 compcert.cfrontend.Csem <> ExprState constr
R103452:103453 compcert.cfrontend.Cstrategy <> m' var
R103450:103450 compcert.cfrontend.Cstrategy <> e var
R103448:103448 compcert.cfrontend.Cstrategy <> k var
R103429:103432 compcert.cfrontend.Csyntax <> Eval constr
R103437:103442 compcert.cfrontend.Csyntax <> typeof def
R103444:103444 compcert.cfrontend.Cstrategy <> a var
R103434:103434 compcert.cfrontend.Cstrategy <> v var
R103426:103426 compcert.cfrontend.Cstrategy <> f var
R103413:103413 compcert.cfrontend.Cstrategy <> t var
R103392:103400 compcert.cfrontend.Csem <> ExprState constr
R103410:103410 compcert.cfrontend.Cstrategy <> m var
R103408:103408 compcert.cfrontend.Cstrategy <> e var
R103406:103406 compcert.cfrontend.Cstrategy <> k var
R103404:103404 compcert.cfrontend.Cstrategy <> a var
R103402:103402 compcert.cfrontend.Cstrategy <> f var
R103388:103389 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R103383:103386 compcert.cfrontend.Cstrategy <> step def
R103328:103342 compcert.cfrontend.Cstrategy <> eval_expression ind
R103355:103355 compcert.cfrontend.Cstrategy <> v var
R103352:103353 compcert.cfrontend.Cstrategy <> m' var
R103350:103350 compcert.cfrontend.Cstrategy <> t var
R103348:103348 compcert.cfrontend.Cstrategy <> a var
R103346:103346 compcert.cfrontend.Cstrategy <> m var
R103344:103344 compcert.cfrontend.Cstrategy <> e var
R103464:103468 Coq.Init.Logic <> proj1 thm
R103470:103485 compcert.cfrontend.Cstrategy <> bigstep_to_steps thm
prf 103496:103513 <> eval_expr_to_steps
R103633:103636 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103626:103628 Coq.Init.Logic <> :type_scope:x_'='_x not
R103617:103622 compcert.cfrontend.Cstrategy <> simple def
R103624:103625 compcert.cfrontend.Cstrategy <> a' var
R103629:103632 Coq.Init.Datatypes <> true constr
R103657:103663 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103646:103648 Coq.Init.Logic <> :type_scope:x_'='_x not
R103637:103642 compcert.cfrontend.Csyntax <> typeof def
R103644:103645 compcert.cfrontend.Cstrategy <> a' var
R103649:103654 compcert.cfrontend.Csyntax <> typeof def
R103656:103656 compcert.cfrontend.Cstrategy <> a var
R103664:103667 compcert.common.Smallstep <> star ind
R103706:103714 compcert.cfrontend.Csem <> ExprState constr
R103729:103730 compcert.cfrontend.Cstrategy <> m' var
R103727:103727 compcert.cfrontend.Cstrategy <> e var
R103725:103725 compcert.cfrontend.Cstrategy <> k var
R103719:103719 compcert.cfrontend.Cstrategy <> C var
R103721:103722 compcert.cfrontend.Cstrategy <> a' var
R103716:103716 compcert.cfrontend.Cstrategy <> f var
R103703:103703 compcert.cfrontend.Cstrategy <> t var
R103678:103686 compcert.cfrontend.Csem <> ExprState constr
R103700:103700 compcert.cfrontend.Cstrategy <> m var
R103698:103698 compcert.cfrontend.Cstrategy <> e var
R103696:103696 compcert.cfrontend.Cstrategy <> k var
R103691:103691 compcert.cfrontend.Cstrategy <> C var
R103693:103693 compcert.cfrontend.Cstrategy <> a var
R103688:103688 compcert.cfrontend.Cstrategy <> f var
R103674:103675 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R103669:103672 compcert.cfrontend.Cstrategy <> step def
R103592:103602 compcert.cfrontend.Cstrategy <> leftcontext ind
R103609:103609 compcert.cfrontend.Cstrategy <> C var
R103606:103607 compcert.cfrontend.Csem <> RV constr
R103604:103604 compcert.cfrontend.Cstrategy <> K var
R103546:103554 compcert.cfrontend.Cstrategy <> eval_expr ind
R103569:103570 compcert.cfrontend.Cstrategy <> a' var
R103566:103567 compcert.cfrontend.Cstrategy <> m' var
R103564:103564 compcert.cfrontend.Cstrategy <> t var
R103562:103562 compcert.cfrontend.Cstrategy <> a var
R103560:103560 compcert.cfrontend.Cstrategy <> K var
R103558:103558 compcert.cfrontend.Cstrategy <> m var
R103556:103556 compcert.cfrontend.Cstrategy <> e var
R103741:103745 Coq.Init.Logic <> proj1 thm
R103748:103752 Coq.Init.Logic <> proj2 thm
R103754:103769 compcert.cfrontend.Cstrategy <> bigstep_to_steps thm
prf 103781:103802 <> eval_exprlist_to_steps
R103987:103993 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103980:103982 Coq.Init.Logic <> :type_scope:x_'='_x not
R103966:103975 compcert.cfrontend.Cstrategy <> simplelist def
R103977:103979 compcert.cfrontend.Cstrategy <> al' var
R103983:103986 Coq.Init.Datatypes <> true constr
R103994:103997 compcert.common.Smallstep <> star ind
R104084:104092 compcert.cfrontend.Csem <> ExprState constr
R104141:104142 compcert.cfrontend.Cstrategy <> m' var
R104139:104139 compcert.cfrontend.Cstrategy <> e var
R104137:104137 compcert.cfrontend.Cstrategy <> k var
R104097:104097 compcert.cfrontend.Cstrategy <> C var
R104100:104104 compcert.cfrontend.Csyntax <> Ecall constr
R104132:104133 compcert.cfrontend.Cstrategy <> ty var
R104110:104121 compcert.cfrontend.Cstrategy <> exprlist_app def
R104127:104129 compcert.cfrontend.Cstrategy <> al' var
R104123:104125 compcert.cfrontend.Cstrategy <> al2 var
R104106:104107 compcert.cfrontend.Cstrategy <> a1 var
R104094:104094 compcert.cfrontend.Cstrategy <> f var
R104081:104081 compcert.cfrontend.Cstrategy <> t var
R104008:104016 compcert.cfrontend.Csem <> ExprState constr
R104064:104064 compcert.cfrontend.Cstrategy <> m var
R104062:104062 compcert.cfrontend.Cstrategy <> e var
R104060:104060 compcert.cfrontend.Cstrategy <> k var
R104021:104021 compcert.cfrontend.Cstrategy <> C var
R104024:104028 compcert.cfrontend.Csyntax <> Ecall constr
R104055:104056 compcert.cfrontend.Cstrategy <> ty var
R104034:104045 compcert.cfrontend.Cstrategy <> exprlist_app def
R104051:104052 compcert.cfrontend.Cstrategy <> al var
R104047:104049 compcert.cfrontend.Cstrategy <> al2 var
R104030:104031 compcert.cfrontend.Cstrategy <> a1 var
R104018:104018 compcert.cfrontend.Cstrategy <> f var
R104004:104005 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R103999:104002 compcert.cfrontend.Cstrategy <> step def
R103952:103954 Coq.Init.Logic <> :type_scope:x_'='_x not
R103938:103947 compcert.cfrontend.Cstrategy <> simplelist def
R103949:103951 compcert.cfrontend.Cstrategy <> al2 var
R103955:103958 Coq.Init.Datatypes <> true constr
R103927:103929 Coq.Init.Logic <> :type_scope:x_'='_x not
R103918:103923 compcert.cfrontend.Cstrategy <> simple def
R103925:103926 compcert.cfrontend.Cstrategy <> a1 var
R103930:103933 Coq.Init.Datatypes <> true constr
R103895:103905 compcert.cfrontend.Cstrategy <> leftcontext ind
R103913:103913 compcert.cfrontend.Cstrategy <> C var
R103910:103911 compcert.cfrontend.Csem <> RV constr
R103907:103908 compcert.cfrontend.Csem <> RV constr
R103835:103847 compcert.cfrontend.Cstrategy <> eval_exprlist ind
R103861:103863 compcert.cfrontend.Cstrategy <> al' var
R103858:103859 compcert.cfrontend.Cstrategy <> m' var
R103856:103856 compcert.cfrontend.Cstrategy <> t var
R103853:103854 compcert.cfrontend.Cstrategy <> al var
R103851:103851 compcert.cfrontend.Cstrategy <> m var
R103849:103849 compcert.cfrontend.Cstrategy <> e var
R104153:104157 Coq.Init.Logic <> proj1 thm
R104160:104164 Coq.Init.Logic <> proj2 thm
R104167:104171 Coq.Init.Logic <> proj2 thm
R104173:104188 compcert.cfrontend.Cstrategy <> bigstep_to_steps thm
prf 104201:104218 <> exec_stmt_to_steps
R104296:104302 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R104304:104308 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R104343:104346 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R104309:104312 compcert.common.Smallstep <> star ind
R104342:104342 compcert.cfrontend.Cstrategy <> S var
R104340:104340 compcert.cfrontend.Cstrategy <> t var
R104323:104327 compcert.cfrontend.Csem <> State constr
R104337:104337 compcert.cfrontend.Cstrategy <> m var
R104335:104335 compcert.cfrontend.Cstrategy <> e var
R104333:104333 compcert.cfrontend.Cstrategy <> k var
R104331:104331 compcert.cfrontend.Cstrategy <> s var
R104329:104329 compcert.cfrontend.Cstrategy <> f var
R104319:104320 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R104314:104317 compcert.cfrontend.Cstrategy <> step def
R104347:104365 compcert.cfrontend.Cstrategy <> outcome_state_match ind
R104380:104380 compcert.cfrontend.Cstrategy <> S var
R104376:104378 compcert.cfrontend.Cstrategy <> out var
R104374:104374 compcert.cfrontend.Cstrategy <> k var
R104372:104372 compcert.cfrontend.Cstrategy <> f var
R104369:104370 compcert.cfrontend.Cstrategy <> m' var
R104367:104367 compcert.cfrontend.Cstrategy <> e var
R104250:104258 compcert.cfrontend.Cstrategy <> exec_stmt ind
R104271:104273 compcert.cfrontend.Cstrategy <> out var
R104268:104269 compcert.cfrontend.Cstrategy <> m' var
R104266:104266 compcert.cfrontend.Cstrategy <> t var
R104264:104264 compcert.cfrontend.Cstrategy <> s var
R104262:104262 compcert.cfrontend.Cstrategy <> m var
R104260:104260 compcert.cfrontend.Cstrategy <> e var
R104390:104394 Coq.Init.Logic <> proj1 thm
R104397:104401 Coq.Init.Logic <> proj2 thm
R104404:104408 Coq.Init.Logic <> proj2 thm
R104411:104415 Coq.Init.Logic <> proj2 thm
R104417:104432 compcert.cfrontend.Cstrategy <> bigstep_to_steps thm
prf 104446:104466 <> eval_funcall_to_steps
R104569:104572 compcert.common.Smallstep <> star ind
R104609:104619 compcert.cfrontend.Csem <> Returnstate constr
R104627:104628 compcert.cfrontend.Cstrategy <> m' var
R104625:104625 compcert.cfrontend.Cstrategy <> k var
R104621:104623 compcert.cfrontend.Cstrategy <> res var
R104606:104606 compcert.cfrontend.Cstrategy <> t var
R104583:104591 compcert.cfrontend.Csem <> Callstate constr
R104603:104603 compcert.cfrontend.Cstrategy <> m var
R104601:104601 compcert.cfrontend.Cstrategy <> k var
R104596:104599 compcert.cfrontend.Cstrategy <> args var
R104593:104594 compcert.cfrontend.Cstrategy <> fd var
R104579:104580 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R104574:104577 compcert.cfrontend.Cstrategy <> step def
R104549:104560 compcert.cfrontend.Csem <> is_call_cont def
R104562:104562 compcert.cfrontend.Cstrategy <> k var
R104500:104511 compcert.cfrontend.Cstrategy <> eval_funcall ind
R104528:104530 compcert.cfrontend.Cstrategy <> res var
R104525:104526 compcert.cfrontend.Cstrategy <> m' var
R104523:104523 compcert.cfrontend.Cstrategy <> t var
R104518:104521 compcert.cfrontend.Cstrategy <> args var
R104515:104516 compcert.cfrontend.Cstrategy <> fd var
R104513:104513 compcert.cfrontend.Cstrategy <> m var
R104639:104643 Coq.Init.Logic <> proj2 thm
R104646:104650 Coq.Init.Logic <> proj2 thm
R104653:104657 Coq.Init.Logic <> proj2 thm
R104660:104664 Coq.Init.Logic <> proj2 thm
R104666:104681 compcert.cfrontend.Cstrategy <> bigstep_to_steps thm
def 104698:104702 <> esize
def 105536:105544 <> esizelist
R104708:104711 compcert.cfrontend.Csyntax <> expr ind
R105551:105558 compcert.cfrontend.Csyntax <> exprlist ind
R104716:104718 Coq.Init.Datatypes <> nat ind
R105563:105565 Coq.Init.Datatypes <> nat ind
R104731:104731 compcert.cfrontend.Cstrategy <> a var
R104742:104745 compcert.cfrontend.Csyntax <> Eloc constr
R104766:104769 compcert.cfrontend.Csyntax <> Evar constr
R104788:104793 compcert.cfrontend.Csyntax <> Ederef constr
R104803:104803 Coq.Init.Datatypes <> S constr
R104805:104809 compcert.cfrontend.Cstrategy <> esize def
R104819:104824 compcert.cfrontend.Csyntax <> Efield constr
R104836:104836 Coq.Init.Datatypes <> S constr
R104838:104842 compcert.cfrontend.Cstrategy <> esize def
R104852:104855 compcert.cfrontend.Csyntax <> Eval constr
R104864:104864 Coq.Init.Datatypes <> O constr
R104870:104875 compcert.cfrontend.Csyntax <> Evalof constr
R104885:104885 Coq.Init.Datatypes <> S constr
R104887:104891 compcert.cfrontend.Cstrategy <> esize def
R104901:104907 compcert.cfrontend.Csyntax <> Eaddrof constr
R104917:104917 Coq.Init.Datatypes <> S constr
R104919:104923 compcert.cfrontend.Cstrategy <> esize def
R104933:104937 compcert.cfrontend.Csyntax <> Eunop constr
R104949:104949 Coq.Init.Datatypes <> S constr
R104951:104955 compcert.cfrontend.Cstrategy <> esize def
R104965:104970 compcert.cfrontend.Csyntax <> Ebinop constr
R104985:104985 Coq.Init.Datatypes <> S constr
R104995:104997 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R104987:104991 compcert.cfrontend.Cstrategy <> esize def
R104998:105002 compcert.cfrontend.Cstrategy <> esize def
R105016:105020 compcert.cfrontend.Csyntax <> Ecast constr
R105030:105030 Coq.Init.Datatypes <> S constr
R105032:105036 compcert.cfrontend.Cstrategy <> esize def
R105046:105052 compcert.cfrontend.Csyntax <> Eseqand constr
R105065:105065 Coq.Init.Datatypes <> S constr
R105067:105071 compcert.cfrontend.Cstrategy <> esize def
R105081:105086 compcert.cfrontend.Csyntax <> Eseqor constr
R105099:105099 Coq.Init.Datatypes <> S constr
R105101:105105 compcert.cfrontend.Cstrategy <> esize def
R105115:105124 compcert.cfrontend.Csyntax <> Econdition constr
R105138:105138 Coq.Init.Datatypes <> S constr
R105140:105144 compcert.cfrontend.Cstrategy <> esize def
R105154:105160 compcert.cfrontend.Csyntax <> Esizeof constr
R105179:105186 compcert.cfrontend.Csyntax <> Ealignof constr
R105205:105211 compcert.cfrontend.Csyntax <> Eassign constr
R105224:105224 Coq.Init.Datatypes <> S constr
R105234:105236 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R105226:105230 compcert.cfrontend.Cstrategy <> esize def
R105237:105241 compcert.cfrontend.Cstrategy <> esize def
R105255:105263 compcert.cfrontend.Csyntax <> Eassignop constr
R105280:105280 Coq.Init.Datatypes <> S constr
R105290:105292 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R105282:105286 compcert.cfrontend.Cstrategy <> esize def
R105293:105297 compcert.cfrontend.Cstrategy <> esize def
R105311:105319 compcert.cfrontend.Csyntax <> Epostincr constr
R105331:105331 Coq.Init.Datatypes <> S constr
R105333:105337 compcert.cfrontend.Cstrategy <> esize def
R105347:105352 compcert.cfrontend.Csyntax <> Ecomma constr
R105365:105365 Coq.Init.Datatypes <> S constr
R105375:105377 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R105367:105371 compcert.cfrontend.Cstrategy <> esize def
R105378:105382 compcert.cfrontend.Cstrategy <> esize def
R105396:105400 compcert.cfrontend.Csyntax <> Ecall constr
R105414:105414 Coq.Init.Datatypes <> S constr
R105424:105426 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R105416:105420 compcert.cfrontend.Cstrategy <> esize def
R105427:105435 compcert.cfrontend.Cstrategy <> esizelist def
R105450:105457 compcert.cfrontend.Csyntax <> Ebuiltin constr
R105477:105477 Coq.Init.Datatypes <> S constr
R105479:105487 compcert.cfrontend.Cstrategy <> esizelist def
R105497:105502 compcert.cfrontend.Csyntax <> Eparen constr
R105512:105512 Coq.Init.Datatypes <> S constr
R105514:105518 compcert.cfrontend.Cstrategy <> esize def
R105578:105579 compcert.cfrontend.Cstrategy <> el var
R105590:105593 compcert.cfrontend.Csyntax <> Enil constr
R105598:105598 Coq.Init.Datatypes <> O constr
R105604:105608 compcert.cfrontend.Csyntax <> Econs constr
R105620:105620 Coq.Init.Datatypes <> S constr
R105630:105632 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R105622:105626 compcert.cfrontend.Cstrategy <> esize def
R105633:105641 compcert.cfrontend.Cstrategy <> esizelist def
prf 105666:105681 <> leftcontext_size
prf 105819:105838 <> leftcontextlist_size
R105793:105795 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R105781:105785 compcert.cfrontend.Cstrategy <> esize def
R105788:105788 compcert.cfrontend.Cstrategy <> C var
R105790:105791 compcert.cfrontend.Cstrategy <> e1 var
R105796:105800 compcert.cfrontend.Cstrategy <> esize def
R105803:105803 compcert.cfrontend.Cstrategy <> C var
R105805:105806 compcert.cfrontend.Cstrategy <> e2 var
R105758:105760 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R105750:105754 compcert.cfrontend.Cstrategy <> esize def
R105756:105757 compcert.cfrontend.Cstrategy <> e1 var
R105761:105765 compcert.cfrontend.Cstrategy <> esize def
R105767:105768 compcert.cfrontend.Cstrategy <> e2 var
R105706:105716 compcert.cfrontend.Cstrategy <> leftcontext ind
R105726:105726 compcert.cfrontend.Cstrategy <> C var
R105723:105724 compcert.cfrontend.Cstrategy <> to var
R105718:105721 compcert.cfrontend.Cstrategy <> from var
R105952:105954 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R105936:105944 compcert.cfrontend.Cstrategy <> esizelist def
R105947:105947 compcert.cfrontend.Cstrategy <> C var
R105949:105950 compcert.cfrontend.Cstrategy <> e1 var
R105955:105963 compcert.cfrontend.Cstrategy <> esizelist def
R105966:105966 compcert.cfrontend.Cstrategy <> C var
R105968:105969 compcert.cfrontend.Cstrategy <> e2 var
R105913:105915 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R105905:105909 compcert.cfrontend.Cstrategy <> esize def
R105911:105912 compcert.cfrontend.Cstrategy <> e1 var
R105916:105920 compcert.cfrontend.Cstrategy <> esize def
R105922:105923 compcert.cfrontend.Cstrategy <> e2 var
R105860:105874 compcert.cfrontend.Cstrategy <> leftcontextlist ind
R105881:105881 compcert.cfrontend.Cstrategy <> C var
R105876:105879 compcert.cfrontend.Cstrategy <> from var
prf 106255:106275 <> evalinf_funcall_steps
R106337:106345 compcert.common.Smallstep <> forever_N coind
R106384:106384 compcert.cfrontend.Cstrategy <> t var
R106361:106369 compcert.cfrontend.Csem <> Callstate constr
R106381:106381 compcert.cfrontend.Cstrategy <> m var
R106379:106379 compcert.cfrontend.Cstrategy <> k var
R106374:106377 compcert.cfrontend.Cstrategy <> args var
R106371:106372 compcert.cfrontend.Cstrategy <> fd var
R106358:106358 Coq.Init.Datatypes <> O constr
R106355:106356 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R106352:106353 Coq.Init.Peano <> lt def
R106347:106350 compcert.cfrontend.Cstrategy <> step def
R106304:106318 compcert.cfrontend.Cstrategy <> evalinf_funcall coind
R106330:106330 compcert.cfrontend.Cstrategy <> t var
R106325:106328 compcert.cfrontend.Cstrategy <> args var
R106322:106323 compcert.cfrontend.Cstrategy <> fd var
R106320:106320 compcert.cfrontend.Cstrategy <> m var
R106480:106488 compcert.common.Smallstep <> forever_N coind
R106521:106521 compcert.cfrontend.Cstrategy <> t var
R106504:106508 compcert.cfrontend.Csem <> State constr
R106518:106518 compcert.cfrontend.Cstrategy <> m var
R106516:106516 compcert.cfrontend.Cstrategy <> e var
R106514:106514 compcert.cfrontend.Cstrategy <> k var
R106512:106512 compcert.cfrontend.Cstrategy <> s var
R106510:106510 compcert.cfrontend.Cstrategy <> f var
R106501:106501 Coq.Init.Datatypes <> O constr
R106498:106499 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R106495:106496 Coq.Init.Peano <> lt def
R106490:106493 compcert.cfrontend.Cstrategy <> step def
R106452:106463 compcert.cfrontend.Cstrategy <> execinf_stmt coind
R106471:106471 compcert.cfrontend.Cstrategy <> t var
R106469:106469 compcert.cfrontend.Cstrategy <> s var
R106467:106467 compcert.cfrontend.Cstrategy <> m var
R106465:106465 compcert.cfrontend.Cstrategy <> e var
R106480:106488 compcert.common.Smallstep <> forever_N coind
R106521:106521 compcert.cfrontend.Cstrategy <> t var
R106504:106508 compcert.cfrontend.Csem <> State constr
R106518:106518 compcert.cfrontend.Cstrategy <> m var
R106516:106516 compcert.cfrontend.Cstrategy <> e var
R106514:106514 compcert.cfrontend.Cstrategy <> k var
R106512:106512 compcert.cfrontend.Cstrategy <> s var
R106510:106510 compcert.cfrontend.Cstrategy <> f var
R106501:106501 Coq.Init.Datatypes <> O constr
R106498:106499 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R106495:106496 Coq.Init.Peano <> lt def
R106490:106493 compcert.cfrontend.Cstrategy <> step def
R106452:106463 compcert.cfrontend.Cstrategy <> execinf_stmt coind
R106471:106471 compcert.cfrontend.Cstrategy <> t var
R106469:106469 compcert.cfrontend.Cstrategy <> s var
R106467:106467 compcert.cfrontend.Cstrategy <> m var
R106465:106465 compcert.cfrontend.Cstrategy <> e var
R106642:106650 compcert.common.Smallstep <> forever_N coind
R106699:106699 compcert.cfrontend.Cstrategy <> t var
R106674:106682 compcert.cfrontend.Csem <> ExprState constr
R106696:106696 compcert.cfrontend.Cstrategy <> m var
R106694:106694 compcert.cfrontend.Cstrategy <> e var
R106692:106692 compcert.cfrontend.Cstrategy <> k var
R106687:106687 compcert.cfrontend.Cstrategy <> C var
R106689:106689 compcert.cfrontend.Cstrategy <> a var
R106684:106684 compcert.cfrontend.Cstrategy <> f var
R106664:106668 compcert.cfrontend.Cstrategy <> esize def
R106670:106670 compcert.cfrontend.Cstrategy <> a var
R106660:106661 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R106657:106658 Coq.Init.Peano <> lt def
R106652:106655 compcert.cfrontend.Cstrategy <> step def
R106616:106626 compcert.cfrontend.Cstrategy <> leftcontext ind
R106633:106633 compcert.cfrontend.Cstrategy <> C var
R106630:106631 compcert.cfrontend.Csem <> RV constr
R106628:106628 compcert.cfrontend.Cstrategy <> K var
R106586:106597 compcert.cfrontend.Cstrategy <> evalinf_expr coind
R106607:106607 compcert.cfrontend.Cstrategy <> t var
R106605:106605 compcert.cfrontend.Cstrategy <> a var
R106603:106603 compcert.cfrontend.Cstrategy <> K var
R106601:106601 compcert.cfrontend.Cstrategy <> m var
R106599:106599 compcert.cfrontend.Cstrategy <> e var
R106642:106650 compcert.common.Smallstep <> forever_N coind
R106699:106699 compcert.cfrontend.Cstrategy <> t var
R106674:106682 compcert.cfrontend.Csem <> ExprState constr
R106696:106696 compcert.cfrontend.Cstrategy <> m var
R106694:106694 compcert.cfrontend.Cstrategy <> e var
R106692:106692 compcert.cfrontend.Cstrategy <> k var
R106687:106687 compcert.cfrontend.Cstrategy <> C var
R106689:106689 compcert.cfrontend.Cstrategy <> a var
R106684:106684 compcert.cfrontend.Cstrategy <> f var
R106664:106668 compcert.cfrontend.Cstrategy <> esize def
R106670:106670 compcert.cfrontend.Cstrategy <> a var
R106660:106661 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R106657:106658 Coq.Init.Peano <> lt def
R106652:106655 compcert.cfrontend.Cstrategy <> step def
R106616:106626 compcert.cfrontend.Cstrategy <> leftcontext ind
R106633:106633 compcert.cfrontend.Cstrategy <> C var
R106630:106631 compcert.cfrontend.Csem <> RV constr
R106628:106628 compcert.cfrontend.Cstrategy <> K var
R106586:106597 compcert.cfrontend.Cstrategy <> evalinf_expr coind
R106607:106607 compcert.cfrontend.Cstrategy <> t var
R106605:106605 compcert.cfrontend.Cstrategy <> a var
R106603:106603 compcert.cfrontend.Cstrategy <> K var
R106601:106601 compcert.cfrontend.Cstrategy <> m var
R106599:106599 compcert.cfrontend.Cstrategy <> e var
R106875:106883 compcert.common.Smallstep <> forever_N coind
R106987:106987 compcert.cfrontend.Cstrategy <> t var
R106930:106938 compcert.cfrontend.Csem <> ExprState constr
R106984:106984 compcert.cfrontend.Cstrategy <> m var
R106982:106982 compcert.cfrontend.Cstrategy <> e var
R106980:106980 compcert.cfrontend.Cstrategy <> k var
R106943:106943 compcert.cfrontend.Cstrategy <> C var
R106946:106950 compcert.cfrontend.Csyntax <> Ecall constr
R106975:106976 compcert.cfrontend.Cstrategy <> ty var
R106956:106967 compcert.cfrontend.Cstrategy <> exprlist_app def
R106972:106972 compcert.cfrontend.Cstrategy <> a var
R106969:106970 compcert.cfrontend.Cstrategy <> al var
R106952:106953 compcert.cfrontend.Cstrategy <> a1 var
R106940:106940 compcert.cfrontend.Cstrategy <> f var
R106897:106905 compcert.cfrontend.Cstrategy <> esizelist def
R106907:106907 compcert.cfrontend.Cstrategy <> a var
R106893:106894 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R106890:106891 Coq.Init.Peano <> lt def
R106885:106888 compcert.cfrontend.Cstrategy <> step def
R106860:106862 Coq.Init.Logic <> :type_scope:x_'='_x not
R106847:106856 compcert.cfrontend.Cstrategy <> simplelist def
R106858:106859 compcert.cfrontend.Cstrategy <> al var
R106863:106866 Coq.Init.Datatypes <> true constr
R106836:106838 Coq.Init.Logic <> :type_scope:x_'='_x not
R106827:106832 compcert.cfrontend.Cstrategy <> simple def
R106834:106835 compcert.cfrontend.Cstrategy <> a1 var
R106839:106842 Coq.Init.Datatypes <> true constr
R106804:106814 compcert.cfrontend.Cstrategy <> leftcontext ind
R106822:106822 compcert.cfrontend.Cstrategy <> C var
R106819:106820 compcert.cfrontend.Csem <> RV constr
R106816:106817 compcert.cfrontend.Csem <> RV constr
R106772:106787 compcert.cfrontend.Cstrategy <> evalinf_exprlist coind
R106795:106795 compcert.cfrontend.Cstrategy <> t var
R106793:106793 compcert.cfrontend.Cstrategy <> a var
R106791:106791 compcert.cfrontend.Cstrategy <> m var
R106789:106789 compcert.cfrontend.Cstrategy <> e var
R106875:106883 compcert.common.Smallstep <> forever_N coind
R106987:106987 compcert.cfrontend.Cstrategy <> t var
R106930:106938 compcert.cfrontend.Csem <> ExprState constr
R106984:106984 compcert.cfrontend.Cstrategy <> m var
R106982:106982 compcert.cfrontend.Cstrategy <> e var
R106980:106980 compcert.cfrontend.Cstrategy <> k var
R106943:106943 compcert.cfrontend.Cstrategy <> C var
R106946:106950 compcert.cfrontend.Csyntax <> Ecall constr
R106975:106976 compcert.cfrontend.Cstrategy <> ty var
R106956:106967 compcert.cfrontend.Cstrategy <> exprlist_app def
R106972:106972 compcert.cfrontend.Cstrategy <> a var
R106969:106970 compcert.cfrontend.Cstrategy <> al var
R106952:106953 compcert.cfrontend.Cstrategy <> a1 var
R106940:106940 compcert.cfrontend.Cstrategy <> f var
R106897:106905 compcert.cfrontend.Cstrategy <> esizelist def
R106907:106907 compcert.cfrontend.Cstrategy <> a var
R106893:106894 compcert.cfrontend.Cstrategy <> BIGSTEP.ge var
R106890:106891 Coq.Init.Peano <> lt def
R106885:106888 compcert.cfrontend.Cstrategy <> step def
R106860:106862 Coq.Init.Logic <> :type_scope:x_'='_x not
R106847:106856 compcert.cfrontend.Cstrategy <> simplelist def
R106858:106859 compcert.cfrontend.Cstrategy <> al var
R106863:106866 Coq.Init.Datatypes <> true constr
R106836:106838 Coq.Init.Logic <> :type_scope:x_'='_x not
R106827:106832 compcert.cfrontend.Cstrategy <> simple def
R106834:106835 compcert.cfrontend.Cstrategy <> a1 var
R106839:106842 Coq.Init.Datatypes <> true constr
R106804:106814 compcert.cfrontend.Cstrategy <> leftcontext ind
R106822:106822 compcert.cfrontend.Cstrategy <> C var
R106819:106820 compcert.cfrontend.Csem <> RV constr
R106816:106817 compcert.cfrontend.Csem <> RV constr
R106772:106787 compcert.cfrontend.Cstrategy <> evalinf_exprlist coind
R106795:106795 compcert.cfrontend.Cstrategy <> t var
R106793:106793 compcert.cfrontend.Cstrategy <> a var
R106791:106791 compcert.cfrontend.Cstrategy <> m var
R106789:106789 compcert.cfrontend.Cstrategy <> e var
R107075:107079 compcert.cfrontend.Cstrategy <> esize def
R107047:107060 compcert.common.Smallstep <> forever_N_star constr
R107075:107079 compcert.cfrontend.Cstrategy <> esize def
R107047:107060 compcert.common.Smallstep <> forever_N_star constr
R107093:107101 compcert.common.Smallstep <> star_refl constr
R107093:107101 compcert.common.Smallstep <> star_refl constr
R107154:107158 compcert.cfrontend.Csyntax <> Ecall constr
R107164:107175 compcert.cfrontend.Cstrategy <> exprlist_app def
R107181:107185 compcert.cfrontend.Csyntax <> Econs constr
R107187:107187 compcert.cfrontend.Cstrategy <> x var
R107154:107158 compcert.cfrontend.Csyntax <> Ecall constr
R107164:107175 compcert.cfrontend.Cstrategy <> exprlist_app def
R107181:107185 compcert.cfrontend.Csyntax <> Econs constr
R107187:107187 compcert.cfrontend.Cstrategy <> x var
R107217:107235 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R107217:107235 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R107273:107296 compcert.cfrontend.Cstrategy <> exprlist_app_leftcontext thm
R107273:107296 compcert.cfrontend.Cstrategy <> exprlist_app_leftcontext thm
R107344:107361 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R107406:107410 compcert.cfrontend.Csyntax <> Ecall constr
R107416:107427 compcert.cfrontend.Cstrategy <> exprlist_app def
R107433:107437 compcert.cfrontend.Csyntax <> Econs constr
R107439:107439 compcert.cfrontend.Cstrategy <> x var
R107344:107361 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R107406:107410 compcert.cfrontend.Csyntax <> Ecall constr
R107416:107427 compcert.cfrontend.Cstrategy <> exprlist_app def
R107433:107437 compcert.cfrontend.Csyntax <> Econs constr
R107439:107439 compcert.cfrontend.Cstrategy <> x var
R107483:107501 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R107483:107501 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R107546:107569 compcert.cfrontend.Cstrategy <> exprlist_app_leftcontext thm
R107546:107569 compcert.cfrontend.Cstrategy <> exprlist_app_leftcontext thm
R107616:107624 compcert.cfrontend.Cstrategy <> esizelist def
R107588:107601 compcert.common.Smallstep <> forever_N_star constr
R107616:107624 compcert.cfrontend.Cstrategy <> esizelist def
R107588:107601 compcert.common.Smallstep <> forever_N_star constr
R107690:107701 compcert.cfrontend.Cstrategy <> exprlist_app def
R107704:107708 compcert.cfrontend.Csyntax <> Econs constr
R107714:107717 compcert.cfrontend.Csyntax <> Enil constr
R107669:107673 compcert.cfrontend.Csyntax <> Econs constr
R107669:107673 compcert.cfrontend.Csyntax <> Econs constr
R107690:107701 compcert.cfrontend.Cstrategy <> exprlist_app def
R107704:107708 compcert.cfrontend.Csyntax <> Econs constr
R107714:107717 compcert.cfrontend.Csyntax <> Enil constr
R107739:107756 compcert.cfrontend.Cstrategy <> exprlist_app_assoc thm
R107739:107756 compcert.cfrontend.Cstrategy <> exprlist_app_assoc thm
R107806:107824 compcert.cfrontend.Cstrategy <> exprlist_app_simple thm
R107806:107824 compcert.cfrontend.Cstrategy <> exprlist_app_simple thm
R107938:107942 compcert.cfrontend.Cstrategy <> esize def
R107910:107923 compcert.common.Smallstep <> forever_N_star constr
R107938:107942 compcert.cfrontend.Cstrategy <> esize def
R107910:107923 compcert.common.Smallstep <> forever_N_star constr
R107956:107964 compcert.common.Smallstep <> star_refl constr
R107956:107964 compcert.common.Smallstep <> star_refl constr
R108016:108021 compcert.cfrontend.Csyntax <> Efield constr
R108023:108023 compcert.cfrontend.Cstrategy <> x var
R108016:108021 compcert.cfrontend.Csyntax <> Efield constr
R108023:108023 compcert.cfrontend.Cstrategy <> x var
R108051:108069 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R108051:108069 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R108157:108161 compcert.cfrontend.Cstrategy <> esize def
R108129:108142 compcert.common.Smallstep <> forever_N_star constr
R108157:108161 compcert.cfrontend.Cstrategy <> esize def
R108129:108142 compcert.common.Smallstep <> forever_N_star constr
R108175:108183 compcert.common.Smallstep <> star_refl constr
R108175:108183 compcert.common.Smallstep <> star_refl constr
R108235:108240 compcert.cfrontend.Csyntax <> Evalof constr
R108242:108242 compcert.cfrontend.Cstrategy <> x var
R108235:108240 compcert.cfrontend.Csyntax <> Evalof constr
R108242:108242 compcert.cfrontend.Cstrategy <> x var
R108267:108285 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R108267:108285 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R108373:108377 compcert.cfrontend.Cstrategy <> esize def
R108345:108358 compcert.common.Smallstep <> forever_N_star constr
R108373:108377 compcert.cfrontend.Cstrategy <> esize def
R108345:108358 compcert.common.Smallstep <> forever_N_star constr
R108391:108399 compcert.common.Smallstep <> star_refl constr
R108391:108399 compcert.common.Smallstep <> star_refl constr
R108451:108456 compcert.cfrontend.Csyntax <> Ederef constr
R108458:108458 compcert.cfrontend.Cstrategy <> x var
R108451:108456 compcert.cfrontend.Csyntax <> Ederef constr
R108458:108458 compcert.cfrontend.Cstrategy <> x var
R108483:108501 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R108483:108501 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R108590:108594 compcert.cfrontend.Cstrategy <> esize def
R108562:108575 compcert.common.Smallstep <> forever_N_star constr
R108590:108594 compcert.cfrontend.Cstrategy <> esize def
R108562:108575 compcert.common.Smallstep <> forever_N_star constr
R108608:108616 compcert.common.Smallstep <> star_refl constr
R108608:108616 compcert.common.Smallstep <> star_refl constr
R108668:108674 compcert.cfrontend.Csyntax <> Eaddrof constr
R108676:108676 compcert.cfrontend.Cstrategy <> x var
R108668:108674 compcert.cfrontend.Csyntax <> Eaddrof constr
R108676:108676 compcert.cfrontend.Cstrategy <> x var
R108701:108719 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R108701:108719 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R108806:108810 compcert.cfrontend.Cstrategy <> esize def
R108778:108791 compcert.common.Smallstep <> forever_N_star constr
R108806:108810 compcert.cfrontend.Cstrategy <> esize def
R108778:108791 compcert.common.Smallstep <> forever_N_star constr
R108824:108832 compcert.common.Smallstep <> star_refl constr
R108824:108832 compcert.common.Smallstep <> star_refl constr
R108884:108888 compcert.cfrontend.Csyntax <> Eunop constr
R108893:108893 compcert.cfrontend.Cstrategy <> x var
R108884:108888 compcert.cfrontend.Csyntax <> Eunop constr
R108893:108893 compcert.cfrontend.Cstrategy <> x var
R108918:108936 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R108918:108936 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R109029:109033 compcert.cfrontend.Cstrategy <> esize def
R109001:109014 compcert.common.Smallstep <> forever_N_star constr
R109029:109033 compcert.cfrontend.Cstrategy <> esize def
R109001:109014 compcert.common.Smallstep <> forever_N_star constr
R109047:109055 compcert.common.Smallstep <> star_refl constr
R109047:109055 compcert.common.Smallstep <> star_refl constr
R109107:109112 compcert.cfrontend.Csyntax <> Ebinop constr
R109117:109117 compcert.cfrontend.Cstrategy <> x var
R109107:109112 compcert.cfrontend.Csyntax <> Ebinop constr
R109117:109117 compcert.cfrontend.Cstrategy <> x var
R109145:109163 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R109145:109163 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R109232:109249 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R109280:109285 compcert.cfrontend.Csyntax <> Ebinop constr
R109290:109290 compcert.cfrontend.Cstrategy <> x var
R109232:109249 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R109280:109285 compcert.cfrontend.Csyntax <> Ebinop constr
R109290:109290 compcert.cfrontend.Cstrategy <> x var
R109331:109349 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R109331:109349 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R109416:109420 compcert.cfrontend.Cstrategy <> esize def
R109388:109401 compcert.common.Smallstep <> forever_N_star constr
R109416:109420 compcert.cfrontend.Cstrategy <> esize def
R109388:109401 compcert.common.Smallstep <> forever_N_star constr
R109487:109492 compcert.cfrontend.Csyntax <> Ebinop constr
R109501:109501 compcert.cfrontend.Cstrategy <> x var
R109487:109492 compcert.cfrontend.Csyntax <> Ebinop constr
R109501:109501 compcert.cfrontend.Cstrategy <> x var
R109526:109544 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R109526:109544 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R109637:109641 compcert.cfrontend.Cstrategy <> esize def
R109609:109622 compcert.common.Smallstep <> forever_N_star constr
R109637:109641 compcert.cfrontend.Cstrategy <> esize def
R109609:109622 compcert.common.Smallstep <> forever_N_star constr
R109655:109663 compcert.common.Smallstep <> star_refl constr
R109655:109663 compcert.common.Smallstep <> star_refl constr
R109715:109719 compcert.cfrontend.Csyntax <> Ecast constr
R109721:109721 compcert.cfrontend.Cstrategy <> x var
R109715:109719 compcert.cfrontend.Csyntax <> Ecast constr
R109721:109721 compcert.cfrontend.Cstrategy <> x var
R109746:109764 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R109746:109764 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R109858:109862 compcert.cfrontend.Cstrategy <> esize def
R109830:109843 compcert.common.Smallstep <> forever_N_star constr
R109858:109862 compcert.cfrontend.Cstrategy <> esize def
R109830:109843 compcert.common.Smallstep <> forever_N_star constr
R109876:109884 compcert.common.Smallstep <> star_refl constr
R109876:109884 compcert.common.Smallstep <> star_refl constr
R109936:109942 compcert.cfrontend.Csyntax <> Eseqand constr
R109944:109944 compcert.cfrontend.Cstrategy <> x var
R109936:109942 compcert.cfrontend.Csyntax <> Eseqand constr
R109944:109944 compcert.cfrontend.Cstrategy <> x var
R109972:109990 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R109972:109990 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R110056:110073 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R110104:110110 compcert.cfrontend.Csyntax <> Eseqand constr
R110112:110112 compcert.cfrontend.Cstrategy <> x var
R110056:110073 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R110104:110110 compcert.cfrontend.Csyntax <> Eseqand constr
R110112:110112 compcert.cfrontend.Cstrategy <> x var
R110153:110171 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R110153:110171 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R110210:110223 compcert.common.Smallstep <> forever_N_plus constr
R110210:110223 compcert.common.Smallstep <> forever_N_plus constr
R110233:110242 compcert.common.Smallstep <> plus_right thm
R110233:110242 compcert.common.Smallstep <> plus_right thm
R110271:110286 compcert.cfrontend.Cstrategy <> step_seqand_true constr
R110271:110286 compcert.cfrontend.Cstrategy <> step_seqand_true constr
R110367:110372 compcert.cfrontend.Csyntax <> Eparen constr
R110375:110380 compcert.cfrontend.Csyntax <> Eparen constr
R110384:110392 compcert.cfrontend.Ctypes <> type_bool def
R110382:110382 compcert.cfrontend.Cstrategy <> x var
R110367:110372 compcert.cfrontend.Csyntax <> Eparen constr
R110375:110380 compcert.cfrontend.Csyntax <> Eparen constr
R110384:110392 compcert.cfrontend.Ctypes <> type_bool def
R110382:110382 compcert.cfrontend.Cstrategy <> x var
R110418:110436 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R110418:110436 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R110529:110533 compcert.cfrontend.Cstrategy <> esize def
R110501:110514 compcert.common.Smallstep <> forever_N_star constr
R110529:110533 compcert.cfrontend.Cstrategy <> esize def
R110501:110514 compcert.common.Smallstep <> forever_N_star constr
R110547:110555 compcert.common.Smallstep <> star_refl constr
R110547:110555 compcert.common.Smallstep <> star_refl constr
R110607:110612 compcert.cfrontend.Csyntax <> Eseqor constr
R110614:110614 compcert.cfrontend.Cstrategy <> x var
R110607:110612 compcert.cfrontend.Csyntax <> Eseqor constr
R110614:110614 compcert.cfrontend.Cstrategy <> x var
R110642:110660 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R110642:110660 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R110725:110742 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R110773:110778 compcert.cfrontend.Csyntax <> Eseqor constr
R110780:110780 compcert.cfrontend.Cstrategy <> x var
R110725:110742 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R110773:110778 compcert.cfrontend.Csyntax <> Eseqor constr
R110780:110780 compcert.cfrontend.Cstrategy <> x var
R110821:110839 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R110821:110839 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R110878:110891 compcert.common.Smallstep <> forever_N_plus constr
R110878:110891 compcert.common.Smallstep <> forever_N_plus constr
R110901:110910 compcert.common.Smallstep <> plus_right thm
R110901:110910 compcert.common.Smallstep <> plus_right thm
R110939:110954 compcert.cfrontend.Cstrategy <> step_seqor_false constr
R110939:110954 compcert.cfrontend.Cstrategy <> step_seqor_false constr
R111035:111040 compcert.cfrontend.Csyntax <> Eparen constr
R111043:111048 compcert.cfrontend.Csyntax <> Eparen constr
R111052:111060 compcert.cfrontend.Ctypes <> type_bool def
R111050:111050 compcert.cfrontend.Cstrategy <> x var
R111035:111040 compcert.cfrontend.Csyntax <> Eparen constr
R111043:111048 compcert.cfrontend.Csyntax <> Eparen constr
R111052:111060 compcert.cfrontend.Ctypes <> type_bool def
R111050:111050 compcert.cfrontend.Cstrategy <> x var
R111086:111104 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R111086:111104 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R111200:111204 compcert.cfrontend.Cstrategy <> esize def
R111172:111185 compcert.common.Smallstep <> forever_N_star constr
R111200:111204 compcert.cfrontend.Cstrategy <> esize def
R111172:111185 compcert.common.Smallstep <> forever_N_star constr
R111218:111226 compcert.common.Smallstep <> star_refl constr
R111218:111226 compcert.common.Smallstep <> star_refl constr
R111278:111287 compcert.cfrontend.Csyntax <> Econdition constr
R111289:111289 compcert.cfrontend.Cstrategy <> x var
R111278:111287 compcert.cfrontend.Csyntax <> Econdition constr
R111289:111289 compcert.cfrontend.Cstrategy <> x var
R111320:111338 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R111320:111338 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R111405:111422 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R111453:111462 compcert.cfrontend.Csyntax <> Econdition constr
R111464:111464 compcert.cfrontend.Cstrategy <> x var
R111405:111422 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R111453:111462 compcert.cfrontend.Csyntax <> Econdition constr
R111464:111464 compcert.cfrontend.Cstrategy <> x var
R111508:111526 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R111508:111526 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R111565:111578 compcert.common.Smallstep <> forever_N_plus constr
R111565:111578 compcert.common.Smallstep <> forever_N_plus constr
R111588:111597 compcert.common.Smallstep <> plus_right thm
R111588:111597 compcert.common.Smallstep <> plus_right thm
R111626:111639 compcert.cfrontend.Cstrategy <> step_condition constr
R111626:111639 compcert.cfrontend.Cstrategy <> step_condition constr
R111720:111725 compcert.cfrontend.Csyntax <> Eparen constr
R111727:111727 compcert.cfrontend.Cstrategy <> x var
R111720:111725 compcert.cfrontend.Csyntax <> Eparen constr
R111727:111727 compcert.cfrontend.Cstrategy <> x var
R111752:111770 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R111752:111770 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R111864:111868 compcert.cfrontend.Cstrategy <> esize def
R111836:111849 compcert.common.Smallstep <> forever_N_star constr
R111864:111868 compcert.cfrontend.Cstrategy <> esize def
R111836:111849 compcert.common.Smallstep <> forever_N_star constr
R111882:111890 compcert.common.Smallstep <> star_refl constr
R111882:111890 compcert.common.Smallstep <> star_refl constr
R111942:111948 compcert.cfrontend.Csyntax <> Eassign constr
R111950:111950 compcert.cfrontend.Cstrategy <> x var
R111942:111948 compcert.cfrontend.Csyntax <> Eassign constr
R111950:111950 compcert.cfrontend.Cstrategy <> x var
R111978:111996 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R111978:111996 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R112066:112083 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R112114:112120 compcert.cfrontend.Csyntax <> Eassign constr
R112122:112122 compcert.cfrontend.Cstrategy <> x var
R112066:112083 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R112114:112120 compcert.cfrontend.Csyntax <> Eassign constr
R112122:112122 compcert.cfrontend.Cstrategy <> x var
R112163:112181 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R112163:112181 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R112248:112252 compcert.cfrontend.Cstrategy <> esize def
R112220:112233 compcert.common.Smallstep <> forever_N_star constr
R112248:112252 compcert.cfrontend.Cstrategy <> esize def
R112220:112233 compcert.common.Smallstep <> forever_N_star constr
R112319:112325 compcert.cfrontend.Csyntax <> Eassign constr
R112331:112331 compcert.cfrontend.Cstrategy <> x var
R112319:112325 compcert.cfrontend.Csyntax <> Eassign constr
R112331:112331 compcert.cfrontend.Cstrategy <> x var
R112356:112374 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R112356:112374 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R112476:112480 compcert.cfrontend.Cstrategy <> esize def
R112448:112461 compcert.common.Smallstep <> forever_N_star constr
R112476:112480 compcert.cfrontend.Cstrategy <> esize def
R112448:112461 compcert.common.Smallstep <> forever_N_star constr
R112494:112502 compcert.common.Smallstep <> star_refl constr
R112494:112502 compcert.common.Smallstep <> star_refl constr
R112554:112562 compcert.cfrontend.Csyntax <> Eassignop constr
R112567:112567 compcert.cfrontend.Cstrategy <> x var
R112554:112562 compcert.cfrontend.Csyntax <> Eassignop constr
R112567:112567 compcert.cfrontend.Cstrategy <> x var
R112601:112619 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R112601:112619 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R112691:112708 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R112739:112747 compcert.cfrontend.Csyntax <> Eassignop constr
R112752:112752 compcert.cfrontend.Cstrategy <> x var
R112691:112708 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R112739:112747 compcert.cfrontend.Csyntax <> Eassignop constr
R112752:112752 compcert.cfrontend.Cstrategy <> x var
R112799:112817 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R112799:112817 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R112884:112888 compcert.cfrontend.Cstrategy <> esize def
R112856:112869 compcert.common.Smallstep <> forever_N_star constr
R112884:112888 compcert.cfrontend.Cstrategy <> esize def
R112856:112869 compcert.common.Smallstep <> forever_N_star constr
R112955:112963 compcert.cfrontend.Csyntax <> Eassignop constr
R112972:112972 compcert.cfrontend.Cstrategy <> x var
R112955:112963 compcert.cfrontend.Csyntax <> Eassignop constr
R112972:112972 compcert.cfrontend.Cstrategy <> x var
R113003:113021 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R113003:113021 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R113118:113122 compcert.cfrontend.Cstrategy <> esize def
R113090:113103 compcert.common.Smallstep <> forever_N_star constr
R113118:113122 compcert.cfrontend.Cstrategy <> esize def
R113090:113103 compcert.common.Smallstep <> forever_N_star constr
R113136:113144 compcert.common.Smallstep <> star_refl constr
R113136:113144 compcert.common.Smallstep <> star_refl constr
R113196:113204 compcert.cfrontend.Csyntax <> Epostincr constr
R113209:113209 compcert.cfrontend.Cstrategy <> x var
R113196:113204 compcert.cfrontend.Csyntax <> Epostincr constr
R113209:113209 compcert.cfrontend.Cstrategy <> x var
R113234:113252 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R113234:113252 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R113345:113349 compcert.cfrontend.Cstrategy <> esize def
R113317:113330 compcert.common.Smallstep <> forever_N_star constr
R113345:113349 compcert.cfrontend.Cstrategy <> esize def
R113317:113330 compcert.common.Smallstep <> forever_N_star constr
R113363:113371 compcert.common.Smallstep <> star_refl constr
R113363:113371 compcert.common.Smallstep <> star_refl constr
R113423:113428 compcert.cfrontend.Csyntax <> Ecomma constr
R113430:113430 compcert.cfrontend.Cstrategy <> x var
R113423:113428 compcert.cfrontend.Csyntax <> Ecomma constr
R113430:113430 compcert.cfrontend.Cstrategy <> x var
R113458:113476 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R113458:113476 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R113545:113562 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R113593:113598 compcert.cfrontend.Csyntax <> Ecomma constr
R113606:113611 compcert.cfrontend.Csyntax <> typeof def
R113600:113600 compcert.cfrontend.Cstrategy <> x var
R113545:113562 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R113593:113598 compcert.cfrontend.Csyntax <> Ecomma constr
R113606:113611 compcert.cfrontend.Csyntax <> typeof def
R113600:113600 compcert.cfrontend.Cstrategy <> x var
R113650:113668 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R113650:113668 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R113707:113720 compcert.common.Smallstep <> forever_N_plus constr
R113707:113720 compcert.common.Smallstep <> forever_N_plus constr
R113730:113739 compcert.common.Smallstep <> plus_right thm
R113730:113739 compcert.common.Smallstep <> plus_right thm
R113768:113777 compcert.cfrontend.Cstrategy <> step_comma constr
R113768:113777 compcert.cfrontend.Cstrategy <> step_comma constr
R113899:113903 compcert.cfrontend.Cstrategy <> esize def
R113871:113884 compcert.common.Smallstep <> forever_N_star constr
R113899:113903 compcert.cfrontend.Cstrategy <> esize def
R113871:113884 compcert.common.Smallstep <> forever_N_star constr
R113917:113925 compcert.common.Smallstep <> star_refl constr
R113917:113925 compcert.common.Smallstep <> star_refl constr
R113977:113981 compcert.cfrontend.Csyntax <> Ecall constr
R113983:113983 compcert.cfrontend.Cstrategy <> x var
R113977:113981 compcert.cfrontend.Csyntax <> Ecall constr
R113983:113983 compcert.cfrontend.Cstrategy <> x var
R114011:114029 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R114011:114029 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R114097:114114 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R114145:114149 compcert.cfrontend.Csyntax <> Ecall constr
R114151:114151 compcert.cfrontend.Cstrategy <> x var
R114097:114114 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R114145:114149 compcert.cfrontend.Csyntax <> Ecall constr
R114151:114151 compcert.cfrontend.Cstrategy <> x var
R114192:114210 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R114192:114210 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R114277:114285 compcert.cfrontend.Cstrategy <> esizelist def
R114249:114262 compcert.common.Smallstep <> forever_N_star constr
R114277:114285 compcert.cfrontend.Cstrategy <> esizelist def
R114249:114262 compcert.common.Smallstep <> forever_N_star constr
R114343:114346 compcert.cfrontend.Csyntax <> Enil constr
R114343:114346 compcert.cfrontend.Csyntax <> Enil constr
R114407:114424 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R114455:114459 compcert.cfrontend.Csyntax <> Ecall constr
R114461:114461 compcert.cfrontend.Cstrategy <> x var
R114407:114424 compcert.cfrontend.Cstrategy <> eval_expr_to_steps thm
R114455:114459 compcert.cfrontend.Csyntax <> Ecall constr
R114461:114461 compcert.cfrontend.Cstrategy <> x var
R114505:114523 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R114505:114523 compcert.cfrontend.Cstrategy <> leftcontext_compose thm
R114565:114586 compcert.cfrontend.Cstrategy <> eval_exprlist_to_steps thm
R114607:114610 compcert.cfrontend.Csyntax <> Enil constr
R114565:114586 compcert.cfrontend.Cstrategy <> eval_exprlist_to_steps thm
R114607:114610 compcert.cfrontend.Csyntax <> Enil constr
R114668:114681 compcert.common.Smallstep <> forever_N_plus constr
R114668:114681 compcert.common.Smallstep <> forever_N_plus constr
R114691:114700 compcert.common.Smallstep <> plus_right thm
R114691:114700 compcert.common.Smallstep <> plus_right thm
R114712:114721 compcert.common.Smallstep <> star_trans thm
R114712:114721 compcert.common.Smallstep <> star_trans thm
R114779:114787 compcert.cfrontend.Cstrategy <> step_call constr
R114779:114787 compcert.cfrontend.Cstrategy <> step_call constr
R114906:114919 compcert.common.Smallstep <> forever_N_plus constr
R114906:114919 compcert.common.Smallstep <> forever_N_plus constr
R114928:114935 compcert.common.Smallstep <> plus_one thm
R114928:114935 compcert.common.Smallstep <> plus_one thm
R114992:114992 compcert.cfrontend.Cstrategy <> x var
R114992:114992 compcert.cfrontend.Cstrategy <> x var
R115046:115059 compcert.common.Smallstep <> forever_N_plus constr
R115046:115059 compcert.common.Smallstep <> forever_N_plus constr
R115068:115075 compcert.common.Smallstep <> plus_one thm
R115068:115075 compcert.common.Smallstep <> plus_one thm
R115153:115170 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R115190:115193 compcert.cfrontend.Csem <> Kseq constr
R115153:115170 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R115190:115193 compcert.cfrontend.Csem <> Kseq constr
R115242:115255 compcert.common.Smallstep <> forever_N_plus constr
R115242:115255 compcert.common.Smallstep <> forever_N_plus constr
R115268:115276 compcert.common.Smallstep <> plus_left constr
R115268:115276 compcert.common.Smallstep <> plus_left constr
R115309:115318 compcert.common.Smallstep <> star_right thm
R115309:115318 compcert.common.Smallstep <> star_right thm
R115430:115443 compcert.common.Smallstep <> forever_N_plus constr
R115430:115443 compcert.common.Smallstep <> forever_N_plus constr
R115452:115459 compcert.common.Smallstep <> plus_one thm
R115452:115459 compcert.common.Smallstep <> plus_one thm
R115516:115516 compcert.cfrontend.Cstrategy <> x var
R115516:115516 compcert.cfrontend.Cstrategy <> x var
R115578:115591 compcert.common.Smallstep <> forever_N_plus constr
R115578:115591 compcert.common.Smallstep <> forever_N_plus constr
R115603:115611 compcert.common.Smallstep <> plus_left constr
R115603:115611 compcert.common.Smallstep <> plus_left constr
R115643:115652 compcert.common.Smallstep <> star_right thm
R115643:115652 compcert.common.Smallstep <> star_right thm
R115662:115685 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R115662:115685 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R115711:115727 compcert.cfrontend.Csem <> step_ifthenelse_2 constr
R115711:115727 compcert.cfrontend.Csem <> step_ifthenelse_2 constr
R115836:115849 compcert.common.Smallstep <> forever_N_plus constr
R115836:115849 compcert.common.Smallstep <> forever_N_plus constr
R115858:115865 compcert.common.Smallstep <> plus_one thm
R115858:115865 compcert.common.Smallstep <> plus_one thm
R115921:115921 compcert.cfrontend.Cstrategy <> x var
R115921:115921 compcert.cfrontend.Cstrategy <> x var
R115980:115993 compcert.common.Smallstep <> forever_N_plus constr
R115980:115993 compcert.common.Smallstep <> forever_N_plus constr
R116002:116009 compcert.common.Smallstep <> plus_one thm
R116002:116009 compcert.common.Smallstep <> plus_one thm
R116065:116065 compcert.cfrontend.Cstrategy <> x var
R116065:116065 compcert.cfrontend.Cstrategy <> x var
R116124:116137 compcert.common.Smallstep <> forever_N_plus constr
R116124:116137 compcert.common.Smallstep <> forever_N_plus constr
R116149:116157 compcert.common.Smallstep <> plus_left constr
R116149:116157 compcert.common.Smallstep <> plus_left constr
R116190:116199 compcert.common.Smallstep <> star_right thm
R116190:116199 compcert.common.Smallstep <> star_right thm
R116209:116232 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R116209:116232 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R116257:116271 compcert.cfrontend.Csem <> step_while_true constr
R116257:116271 compcert.cfrontend.Csem <> step_while_true constr
R116367:116384 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R116404:116410 compcert.cfrontend.Csem <> Kwhile2 constr
R116367:116384 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R116404:116410 compcert.cfrontend.Csem <> Kwhile2 constr
R116453:116466 compcert.common.Smallstep <> forever_N_plus constr
R116453:116466 compcert.common.Smallstep <> forever_N_plus constr
R116478:116486 compcert.common.Smallstep <> plus_left constr
R116478:116486 compcert.common.Smallstep <> plus_left constr
R116519:116528 compcert.common.Smallstep <> star_trans thm
R116519:116528 compcert.common.Smallstep <> star_trans thm
R116538:116561 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R116538:116561 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R116580:116588 compcert.common.Smallstep <> star_left thm
R116580:116588 compcert.common.Smallstep <> star_left thm
R116604:116618 compcert.cfrontend.Csem <> step_while_true constr
R116604:116618 compcert.cfrontend.Csem <> step_while_true constr
R116636:116645 compcert.common.Smallstep <> star_trans thm
R116636:116645 compcert.common.Smallstep <> star_trans thm
R116684:116691 compcert.common.Smallstep <> star_one thm
R116707:116733 compcert.cfrontend.Csem <> step_skip_or_continue_while constr
R116684:116691 compcert.common.Smallstep <> star_one thm
R116684:116691 compcert.common.Smallstep <> star_one thm
R116707:116733 compcert.cfrontend.Csem <> step_skip_or_continue_while constr
R116707:116733 compcert.cfrontend.Csem <> step_skip_or_continue_while constr
R116854:116867 compcert.common.Smallstep <> forever_N_plus constr
R116854:116867 compcert.common.Smallstep <> forever_N_plus constr
R116876:116883 compcert.common.Smallstep <> plus_one thm
R116876:116883 compcert.common.Smallstep <> plus_one thm
R116967:116984 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R117004:117012 compcert.cfrontend.Csem <> Kdowhile1 constr
R116967:116984 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R117004:117012 compcert.cfrontend.Csem <> Kdowhile1 constr
R117055:117068 compcert.common.Smallstep <> forever_N_plus constr
R117055:117068 compcert.common.Smallstep <> forever_N_plus constr
R117080:117088 compcert.common.Smallstep <> plus_left constr
R117080:117088 compcert.common.Smallstep <> plus_left constr
R117121:117130 compcert.common.Smallstep <> star_trans thm
R117121:117130 compcert.common.Smallstep <> star_trans thm
R117153:117160 compcert.common.Smallstep <> star_one thm
R117153:117160 compcert.common.Smallstep <> star_one thm
R117192:117220 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R117192:117220 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R117192:117220 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R117290:117290 compcert.cfrontend.Cstrategy <> x var
R117290:117290 compcert.cfrontend.Cstrategy <> x var
R117354:117371 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R117391:117399 compcert.cfrontend.Csem <> Kdowhile1 constr
R117354:117371 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R117391:117399 compcert.cfrontend.Csem <> Kdowhile1 constr
R117442:117455 compcert.common.Smallstep <> forever_N_plus constr
R117442:117455 compcert.common.Smallstep <> forever_N_plus constr
R117467:117475 compcert.common.Smallstep <> plus_left constr
R117467:117475 compcert.common.Smallstep <> plus_left constr
R117508:117517 compcert.common.Smallstep <> star_trans thm
R117508:117517 compcert.common.Smallstep <> star_trans thm
R117540:117548 compcert.common.Smallstep <> star_left thm
R117540:117548 compcert.common.Smallstep <> star_left thm
R117580:117608 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R117580:117608 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R117580:117608 compcert.cfrontend.Csem <> step_skip_or_continue_dowhile constr
R117626:117635 compcert.common.Smallstep <> star_right thm
R117626:117635 compcert.common.Smallstep <> star_right thm
R117645:117668 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R117645:117668 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R117693:117709 compcert.cfrontend.Csem <> step_dowhile_true constr
R117693:117709 compcert.cfrontend.Csem <> step_dowhile_true constr
R117832:117835 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R117836:117840 compcert.cfrontend.Csyntax <> Sskip constr
R117832:117835 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R117836:117840 compcert.cfrontend.Csyntax <> Sskip constr
R117884:117897 compcert.common.Smallstep <> forever_N_plus constr
R117884:117897 compcert.common.Smallstep <> forever_N_plus constr
R117906:117913 compcert.common.Smallstep <> plus_one thm
R117906:117913 compcert.common.Smallstep <> plus_one thm
R118002:118019 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R118039:118042 compcert.cfrontend.Csem <> Kseq constr
R118045:118048 compcert.cfrontend.Csyntax <> Sfor constr
R118050:118054 compcert.cfrontend.Csyntax <> Sskip constr
R118002:118019 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R118039:118042 compcert.cfrontend.Csem <> Kseq constr
R118045:118048 compcert.cfrontend.Csyntax <> Sfor constr
R118050:118054 compcert.cfrontend.Csyntax <> Sskip constr
R118110:118123 compcert.common.Smallstep <> forever_N_plus constr
R118110:118123 compcert.common.Smallstep <> forever_N_plus constr
R118135:118143 compcert.common.Smallstep <> plus_left constr
R118135:118143 compcert.common.Smallstep <> plus_left constr
R118182:118191 compcert.common.Smallstep <> star_trans thm
R118182:118191 compcert.common.Smallstep <> star_trans thm
R118213:118220 compcert.common.Smallstep <> star_one thm
R118213:118220 compcert.common.Smallstep <> star_one thm
R118326:118339 compcert.common.Smallstep <> forever_N_plus constr
R118326:118339 compcert.common.Smallstep <> forever_N_plus constr
R118348:118355 compcert.common.Smallstep <> plus_one thm
R118371:118378 compcert.cfrontend.Csem <> step_for constr
R118348:118355 compcert.common.Smallstep <> plus_one thm
R118371:118378 compcert.cfrontend.Csem <> step_for constr
R118414:118414 compcert.cfrontend.Cstrategy <> x var
R118414:118414 compcert.cfrontend.Cstrategy <> x var
R118471:118484 compcert.common.Smallstep <> forever_N_plus constr
R118471:118484 compcert.common.Smallstep <> forever_N_plus constr
R118496:118504 compcert.common.Smallstep <> plus_left constr
R118496:118504 compcert.common.Smallstep <> plus_left constr
R118520:118527 compcert.cfrontend.Csem <> step_for constr
R118520:118527 compcert.cfrontend.Csem <> step_for constr
R118539:118548 compcert.common.Smallstep <> star_right thm
R118539:118548 compcert.common.Smallstep <> star_right thm
R118558:118581 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R118558:118581 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R118606:118618 compcert.cfrontend.Csem <> step_for_true constr
R118606:118618 compcert.cfrontend.Csem <> step_for_true constr
R118712:118729 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R118749:118753 compcert.cfrontend.Csem <> Kfor3 constr
R118712:118729 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R118749:118753 compcert.cfrontend.Csem <> Kfor3 constr
R118800:118813 compcert.common.Smallstep <> forever_N_plus constr
R118800:118813 compcert.common.Smallstep <> forever_N_plus constr
R118825:118833 compcert.common.Smallstep <> plus_left constr
R118825:118833 compcert.common.Smallstep <> plus_left constr
R118849:118856 compcert.cfrontend.Csem <> step_for constr
R118849:118856 compcert.cfrontend.Csem <> step_for constr
R118868:118877 compcert.common.Smallstep <> star_trans thm
R118868:118877 compcert.common.Smallstep <> star_trans thm
R118887:118910 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R118887:118910 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R118929:118937 compcert.common.Smallstep <> star_left thm
R118929:118937 compcert.common.Smallstep <> star_left thm
R118953:118965 compcert.cfrontend.Csem <> step_for_true constr
R118953:118965 compcert.cfrontend.Csem <> step_for_true constr
R118983:118992 compcert.common.Smallstep <> star_trans thm
R118983:118992 compcert.common.Smallstep <> star_trans thm
R119031:119038 compcert.common.Smallstep <> star_one thm
R119054:119079 compcert.cfrontend.Csem <> step_skip_or_continue_for3 constr
R119031:119038 compcert.common.Smallstep <> star_one thm
R119031:119038 compcert.common.Smallstep <> star_one thm
R119054:119079 compcert.cfrontend.Csem <> step_skip_or_continue_for3 constr
R119054:119079 compcert.cfrontend.Csem <> step_skip_or_continue_for3 constr
R119199:119216 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R119236:119240 compcert.cfrontend.Csem <> Kfor3 constr
R119199:119216 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R119236:119240 compcert.cfrontend.Csem <> Kfor3 constr
R119290:119307 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R119327:119331 compcert.cfrontend.Csem <> Kfor4 constr
R119290:119307 compcert.cfrontend.Cstrategy <> exec_stmt_to_steps thm
R119327:119331 compcert.cfrontend.Csem <> Kfor4 constr
R119386:119399 compcert.common.Smallstep <> forever_N_plus constr
R119386:119399 compcert.common.Smallstep <> forever_N_plus constr
R119411:119419 compcert.common.Smallstep <> plus_left constr
R119411:119419 compcert.common.Smallstep <> plus_left constr
R119435:119442 compcert.cfrontend.Csem <> step_for constr
R119435:119442 compcert.cfrontend.Csem <> step_for constr
R119454:119463 compcert.common.Smallstep <> star_trans thm
R119454:119463 compcert.common.Smallstep <> star_trans thm
R119473:119496 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R119473:119496 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R119515:119523 compcert.common.Smallstep <> star_left thm
R119515:119523 compcert.common.Smallstep <> star_left thm
R119539:119551 compcert.cfrontend.Csem <> step_for_true constr
R119539:119551 compcert.cfrontend.Csem <> step_for_true constr
R119569:119578 compcert.common.Smallstep <> star_trans thm
R119569:119578 compcert.common.Smallstep <> star_trans thm
R119601:119609 compcert.common.Smallstep <> star_left thm
R119601:119609 compcert.common.Smallstep <> star_left thm
R119643:119668 compcert.cfrontend.Csem <> step_skip_or_continue_for3 constr
R119643:119668 compcert.cfrontend.Csem <> step_skip_or_continue_for3 constr
R119643:119668 compcert.cfrontend.Csem <> step_skip_or_continue_for3 constr
R119686:119695 compcert.common.Smallstep <> star_right thm
R119686:119695 compcert.common.Smallstep <> star_right thm
R119869:119882 compcert.common.Smallstep <> forever_N_plus constr
R119869:119882 compcert.common.Smallstep <> forever_N_plus constr
R119891:119898 compcert.common.Smallstep <> plus_one thm
R119891:119898 compcert.common.Smallstep <> plus_one thm
R119954:119954 compcert.cfrontend.Cstrategy <> x var
R119954:119954 compcert.cfrontend.Cstrategy <> x var
R120014:120027 compcert.common.Smallstep <> forever_N_plus constr
R120014:120027 compcert.common.Smallstep <> forever_N_plus constr
R120039:120047 compcert.common.Smallstep <> plus_left constr
R120039:120047 compcert.common.Smallstep <> plus_left constr
R120080:120089 compcert.common.Smallstep <> star_right thm
R120080:120089 compcert.common.Smallstep <> star_right thm
R120099:120122 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R120099:120122 compcert.cfrontend.Cstrategy <> eval_expression_to_steps thm
R120265:120278 compcert.common.Smallstep <> forever_N_plus constr
R120265:120278 compcert.common.Smallstep <> forever_N_plus constr
R120287:120294 compcert.common.Smallstep <> plus_one thm
R120287:120294 compcert.common.Smallstep <> plus_one thm
R120366:120372 compcert.cfrontend.Cstrategy BIGSTEP <> sec
ind 120438:120463 <> bigstep_program_terminates
constr 120507:120538 <> bigstep_program_terminates_intro
R120469:120475 compcert.cfrontend.Csyntax <> program def
R120488:120490 compcert.lib.Integers <> int syndef
R120479:120483 compcert.common.Events <> trace def
R120579:120592 compcert.common.Globalenvs Genv globalenv def
R120850:120875 compcert.cfrontend.Cstrategy <> bigstep_program_terminates ind
R120881:120881 compcert.cfrontend.Cstrategy <> r var
R120879:120879 compcert.cfrontend.Cstrategy <> t var
R120802:120813 compcert.cfrontend.Cstrategy <> eval_funcall ind
R120833:120836 compcert.common.Values <> Vint constr
R120838:120838 compcert.cfrontend.Cstrategy <> r var
R120829:120830 compcert.cfrontend.Cstrategy <> m1 var
R120827:120827 compcert.cfrontend.Cstrategy <> t var
R120823:120825 Coq.Init.Datatypes <> nil constr
R120821:120821 compcert.cfrontend.Cstrategy <> f var
R120818:120819 compcert.cfrontend.Cstrategy <> m0 var
R120815:120816 compcert.cfrontend.Cstrategy <> ge var
R120752:120754 Coq.Init.Logic <> :type_scope:x_'='_x not
R120736:120749 compcert.cfrontend.Csyntax <> type_of_fundef def
R120751:120751 compcert.cfrontend.Cstrategy <> f var
R120755:120763 compcert.cfrontend.Ctypes <> Tfunction constr
R120782:120791 compcert.common.AST <> cc_default def
R120770:120780 compcert.cfrontend.Ctypes <> type_int32s def
R120765:120768 compcert.cfrontend.Ctypes <> Tnil constr
R120717:120719 Coq.Init.Logic <> :type_scope:x_'='_x not
R120693:120711 compcert.common.Globalenvs Genv find_funct_ptr def
R120716:120716 compcert.cfrontend.Cstrategy <> b var
R120713:120714 compcert.cfrontend.Cstrategy <> ge var
R120720:120723 Coq.Init.Datatypes <> Some constr
R120725:120725 compcert.cfrontend.Cstrategy <> f var
R120674:120676 Coq.Init.Logic <> :type_scope:x_'='_x not
R120641:120656 compcert.common.Globalenvs Genv find_symbol def
R120664:120672 compcert.common.AST <> prog_main proj
R120658:120659 compcert.cfrontend.Cstrategy <> ge var
R120677:120680 Coq.Init.Datatypes <> Some constr
R120682:120682 compcert.cfrontend.Cstrategy <> b var
R120621:120623 Coq.Init.Logic <> :type_scope:x_'='_x not
R120606:120618 compcert.common.Globalenvs Genv init_mem def
R120624:120627 Coq.Init.Datatypes <> Some constr
R120629:120630 compcert.cfrontend.Cstrategy <> m0 var
ind 120895:120918 <> bigstep_program_diverges
constr 120958:120987 <> bigstep_program_diverges_intro
R120924:120930 compcert.cfrontend.Csyntax <> program def
R120934:120941 compcert.common.Events <> traceinf coind
R121023:121036 compcert.common.Globalenvs Genv globalenv def
R121285:121308 compcert.cfrontend.Cstrategy <> bigstep_program_diverges ind
R121312:121312 compcert.cfrontend.Cstrategy <> t var
R121246:121260 compcert.cfrontend.Cstrategy <> evalinf_funcall coind
R121274:121274 compcert.cfrontend.Cstrategy <> t var
R121270:121272 Coq.Init.Datatypes <> nil constr
R121268:121268 compcert.cfrontend.Cstrategy <> f var
R121265:121266 compcert.cfrontend.Cstrategy <> m0 var
R121262:121263 compcert.cfrontend.Cstrategy <> ge var
R121196:121198 Coq.Init.Logic <> :type_scope:x_'='_x not
R121180:121193 compcert.cfrontend.Csyntax <> type_of_fundef def
R121195:121195 compcert.cfrontend.Cstrategy <> f var
R121199:121207 compcert.cfrontend.Ctypes <> Tfunction constr
R121226:121235 compcert.common.AST <> cc_default def
R121214:121224 compcert.cfrontend.Ctypes <> type_int32s def
R121209:121212 compcert.cfrontend.Ctypes <> Tnil constr
R121161:121163 Coq.Init.Logic <> :type_scope:x_'='_x not
R121137:121155 compcert.common.Globalenvs Genv find_funct_ptr def
R121160:121160 compcert.cfrontend.Cstrategy <> b var
R121157:121158 compcert.cfrontend.Cstrategy <> ge var
R121164:121167 Coq.Init.Datatypes <> Some constr
R121169:121169 compcert.cfrontend.Cstrategy <> f var
R121118:121120 Coq.Init.Logic <> :type_scope:x_'='_x not
R121085:121100 compcert.common.Globalenvs Genv find_symbol def
R121108:121116 compcert.common.AST <> prog_main proj
R121102:121103 compcert.cfrontend.Cstrategy <> ge var
R121121:121124 Coq.Init.Datatypes <> Some constr
R121126:121126 compcert.cfrontend.Cstrategy <> b var
R121065:121067 Coq.Init.Logic <> :type_scope:x_'='_x not
R121050:121062 compcert.common.Globalenvs Genv init_mem def
R121068:121071 Coq.Init.Datatypes <> Some constr
R121073:121074 compcert.cfrontend.Cstrategy <> m0 var
def 121327:121343 <> bigstep_semantics
R121349:121355 compcert.cfrontend.Csyntax <> program def
R121363:121379 compcert.common.Smallstep <> Bigstep_semantics constr
R121413:121436 compcert.cfrontend.Cstrategy <> bigstep_program_diverges ind
R121438:121438 compcert.cfrontend.Cstrategy <> p var
R121382:121407 compcert.cfrontend.Cstrategy <> bigstep_program_terminates ind
R121409:121409 compcert.cfrontend.Cstrategy <> p var
prf 121451:121473 <> bigstep_semantics_sound
R121488:121500 compcert.common.Smallstep <> bigstep_sound rec
R121525:121533 compcert.cfrontend.Cstrategy <> semantics def
R121535:121535 compcert.cfrontend.Cstrategy <> p var
R121503:121519 compcert.cfrontend.Cstrategy <> bigstep_semantics def
R121521:121521 compcert.cfrontend.Cstrategy <> p var
R121678:121698 compcert.cfrontend.Cstrategy <> eval_funcall_to_steps thm
R121678:121698 compcert.cfrontend.Cstrategy <> eval_funcall_to_steps thm
R121847:121848 Coq.Init.Peano <> lt def
R121814:121830 compcert.common.Smallstep <> forever_N_forever thm
R121847:121848 Coq.Init.Peano <> lt def
R121814:121830 compcert.common.Smallstep <> forever_N_forever thm
R121860:121864 Coq.Arith.Wf_nat <> lt_wf thm
R121860:121864 Coq.Arith.Wf_nat <> lt_wf thm
R121876:121896 compcert.cfrontend.Cstrategy <> evalinf_funcall_steps thm
R121876:121896 compcert.cfrontend.Cstrategy <> evalinf_funcall_steps thm
