DIGEST NO
Fcompcert.backend.Asmgenproof0
R906:911 compcert.lib.Coqlib <> <> lib
R922:925 compcert.lib.Intv <> <> lib
R943:945 compcert.common.AST <> <> lib
R963:968 compcert.common.Errors <> <> lib
R986:993 compcert.lib.Integers <> <> lib
R1011:1016 compcert.lib.Floats <> <> lib
R1034:1039 compcert.common.Values <> <> lib
R1057:1062 compcert.common.Memory <> <> lib
R1080:1089 compcert.common.Globalenvs <> <> lib
R1107:1112 compcert.common.Events <> <> lib
R1130:1138 compcert.common.Smallstep <> <> lib
R1156:1164 compcert.backend.Locations <> <> lib
R1182:1185 compcert.backend.Mach <> <> lib
R1203:1205 compcert.ia32.Asm <> <> lib
R1223:1228 compcert.ia32.Asmgen <> <> lib
R1246:1256 compcert.backend.Conventions <> <> lib
R1326:1329 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 1363:1372 <> ireg_of_eq
R1420:1422 Coq.Init.Logic <> :type_scope:x_'='_x not
R1411:1417 compcert.ia32.Asm <> preg_of def
R1419:1419 compcert.backend.Asmgenproof0 <> r var
R1423:1424 compcert.ia32.Asm <> IR constr
R1426:1427 compcert.backend.Asmgenproof0 <> r' var
R1399:1401 Coq.Init.Logic <> :type_scope:x_'='_x not
R1390:1396 compcert.ia32.Asmgen <> ireg_of def
R1398:1398 compcert.backend.Asmgenproof0 <> r var
R1402:1403 compcert.common.Errors <> OK constr
R1405:1406 compcert.backend.Asmgenproof0 <> r' var
R1446:1452 compcert.ia32.Asmgen <> ireg_of def
R1473:1479 compcert.ia32.Asm <> preg_of def
R1473:1479 compcert.ia32.Asm <> preg_of def
prf 1510:1519 <> freg_of_eq
R1567:1569 Coq.Init.Logic <> :type_scope:x_'='_x not
R1558:1564 compcert.ia32.Asm <> preg_of def
R1566:1566 compcert.backend.Asmgenproof0 <> r var
R1570:1571 compcert.ia32.Asm <> FR constr
R1573:1574 compcert.backend.Asmgenproof0 <> r' var
R1546:1548 Coq.Init.Logic <> :type_scope:x_'='_x not
R1537:1543 compcert.ia32.Asmgen <> freg_of def
R1545:1545 compcert.backend.Asmgenproof0 <> r var
R1549:1550 compcert.common.Errors <> OK constr
R1552:1553 compcert.backend.Asmgenproof0 <> r' var
R1593:1599 compcert.ia32.Asmgen <> freg_of def
R1620:1626 compcert.ia32.Asm <> preg_of def
R1620:1626 compcert.ia32.Asm <> preg_of def
prf 1657:1673 <> preg_of_injective
R1721:1723 Coq.Init.Logic <> :type_scope:x_'='_x not
R1719:1720 compcert.backend.Asmgenproof0 <> r1 var
R1724:1725 compcert.backend.Asmgenproof0 <> r2 var
R1702:1704 Coq.Init.Logic <> :type_scope:x_'='_x not
R1692:1698 compcert.ia32.Asm <> preg_of def
R1700:1701 compcert.backend.Asmgenproof0 <> r1 var
R1705:1711 compcert.ia32.Asm <> preg_of def
R1713:1714 compcert.backend.Asmgenproof0 <> r2 var
prf 1819:1830 <> preg_of_data
R1866:1868 Coq.Init.Logic <> :type_scope:x_'='_x not
R1845:1853 compcert.ia32.Asm <> data_preg def
R1856:1862 compcert.ia32.Asm <> preg_of def
R1864:1864 compcert.backend.Asmgenproof0 <> r var
R1869:1872 Coq.Init.Datatypes <> true constr
R1935:1946 compcert.backend.Asmgenproof0 <> preg_of_data thm
prf 1964:1972 <> data_diff
R2039:2042 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2038:2038 compcert.backend.Asmgenproof0 <> r var
R2043:2044 compcert.backend.Asmgenproof0 <> r' var
R2026:2028 Coq.Init.Logic <> :type_scope:x_'='_x not
R2014:2022 compcert.ia32.Asm <> data_preg def
R2024:2025 compcert.backend.Asmgenproof0 <> r' var
R2029:2033 Coq.Init.Datatypes <> false constr
R2003:2005 Coq.Init.Logic <> :type_scope:x_'='_x not
R1992:2000 compcert.ia32.Asm <> data_preg def
R2002:2002 compcert.backend.Asmgenproof0 <> r var
R2006:2009 Coq.Init.Datatypes <> true constr
R2086:2094 compcert.backend.Asmgenproof0 <> data_diff thm
prf 2112:2125 <> preg_of_not_SP
R2149:2152 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2140:2146 compcert.ia32.Asm <> preg_of def
R2148:2148 compcert.backend.Asmgenproof0 <> r var
R2153:2154 compcert.ia32.Asm <> SP syndef
R2181:2187 compcert.ia32.Asm <> preg_of def
prf 2234:2247 <> preg_of_not_PC
R2271:2274 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2262:2268 compcert.ia32.Asm <> preg_of def
R2270:2270 compcert.backend.Asmgenproof0 <> r var
R2275:2276 compcert.ia32.Asm <> PC constr
R2302:2310 compcert.backend.Asmgenproof0 <> data_diff thm
R2302:2310 compcert.backend.Asmgenproof0 <> data_diff thm
R2350:2363 compcert.backend.Asmgenproof0 <> preg_of_not_SP thm
R2365:2378 compcert.backend.Asmgenproof0 <> preg_of_not_PC thm
prf 2396:2407 <> nextinstr_pc
R2440:2442 Coq.Init.Logic <> :type_scope:x_'='_x not
R2423:2423 compcert.ia32.Asm <> ::x_'#'_x not
R2436:2437 compcert.ia32.Asm <> ::x_'#'_x not
R2438:2439 compcert.ia32.Asm <> PC constr
R2424:2432 compcert.ia32.Asm <> nextinstr def
R2434:2435 compcert.backend.Asmgenproof0 <> rs var
R2443:2449 compcert.common.Values Val add def
R2457:2460 compcert.common.Values <> Vone def
R2453:2453 compcert.ia32.Asm <> ::x_'#'_x not
R2454:2455 compcert.ia32.Asm <> PC constr
R2451:2452 compcert.backend.Asmgenproof0 <> rs var
R2486:2496 compcert.ia32.Asm Pregmap gss thm
R2486:2496 compcert.ia32.Asm Pregmap gss thm
prf 2512:2524 <> nextinstr_inv
R2569:2571 Coq.Init.Logic <> :type_scope:x_'='_x not
R2553:2553 compcert.ia32.Asm <> ::x_'#'_x not
R2566:2567 compcert.ia32.Asm <> ::x_'#'_x not
R2568:2568 compcert.backend.Asmgenproof0 <> r var
R2554:2562 compcert.ia32.Asm <> nextinstr def
R2564:2565 compcert.backend.Asmgenproof0 <> rs var
R2574:2574 compcert.ia32.Asm <> ::x_'#'_x not
R2575:2575 compcert.backend.Asmgenproof0 <> r var
R2572:2573 compcert.backend.Asmgenproof0 <> rs var
R2543:2546 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2542:2542 compcert.backend.Asmgenproof0 <> r var
R2547:2548 compcert.ia32.Asm <> PC constr
R2602:2610 compcert.ia32.Asm <> nextinstr def
R2619:2629 compcert.ia32.Asm Pregmap gso thm
R2619:2629 compcert.ia32.Asm Pregmap gso thm
prf 2669:2682 <> nextinstr_inv1
R2738:2740 Coq.Init.Logic <> :type_scope:x_'='_x not
R2722:2722 compcert.ia32.Asm <> ::x_'#'_x not
R2735:2736 compcert.ia32.Asm <> ::x_'#'_x not
R2737:2737 compcert.backend.Asmgenproof0 <> r var
R2723:2731 compcert.ia32.Asm <> nextinstr def
R2733:2734 compcert.backend.Asmgenproof0 <> rs var
R2743:2743 compcert.ia32.Asm <> ::x_'#'_x not
R2744:2744 compcert.backend.Asmgenproof0 <> r var
R2741:2742 compcert.backend.Asmgenproof0 <> rs var
R2711:2713 Coq.Init.Logic <> :type_scope:x_'='_x not
R2700:2708 compcert.ia32.Asm <> data_preg def
R2710:2710 compcert.backend.Asmgenproof0 <> r var
R2714:2717 Coq.Init.Datatypes <> true constr
R2770:2782 compcert.backend.Asmgenproof0 <> nextinstr_inv thm
R2770:2782 compcert.backend.Asmgenproof0 <> nextinstr_inv thm
prf 2830:2847 <> nextinstr_set_preg
R2905:2907 Coq.Init.Logic <> :type_scope:x_'='_x not
R2869:2869 compcert.ia32.Asm <> ::x_'#'_x not
R2901:2902 compcert.ia32.Asm <> ::x_'#'_x not
R2903:2904 compcert.ia32.Asm <> PC constr
R2870:2878 compcert.ia32.Asm <> nextinstr def
R2883:2884 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R2894:2898 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R2885:2891 compcert.ia32.Asm <> preg_of def
R2893:2893 compcert.backend.Asmgenproof0 <> m var
R2899:2899 compcert.backend.Asmgenproof0 <> v var
R2881:2882 compcert.backend.Asmgenproof0 <> rs var
R2908:2914 compcert.common.Values Val add def
R2922:2925 compcert.common.Values <> Vone def
R2918:2918 compcert.ia32.Asm <> ::x_'#'_x not
R2919:2920 compcert.ia32.Asm <> PC constr
R2916:2917 compcert.backend.Asmgenproof0 <> rs var
R2952:2960 compcert.ia32.Asm <> nextinstr def
R2971:2981 compcert.ia32.Asm Pregmap gss thm
R2971:2981 compcert.ia32.Asm Pregmap gss thm
R2995:3005 compcert.ia32.Asm Pregmap gso thm
R2995:3005 compcert.ia32.Asm Pregmap gso thm
R3020:3029 Coq.Init.Logic <> sym_not_eq syndef
R3020:3029 Coq.Init.Logic <> sym_not_eq syndef
R3038:3051 compcert.backend.Asmgenproof0 <> preg_of_not_PC thm
R3038:3051 compcert.backend.Asmgenproof0 <> preg_of_not_PC thm
prf 3067:3082 <> undef_regs_other
R3162:3164 Coq.Init.Logic <> :type_scope:x_'='_x not
R3144:3153 compcert.ia32.Asm <> undef_regs def
R3161:3161 compcert.backend.Asmgenproof0 <> r var
R3158:3159 compcert.backend.Asmgenproof0 <> rs var
R3155:3156 compcert.backend.Asmgenproof0 <> rl var
R3165:3166 compcert.backend.Asmgenproof0 <> rs var
R3168:3168 compcert.backend.Asmgenproof0 <> r var
R3131:3134 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3130:3130 compcert.backend.Asmgenproof0 <> r var
R3135:3136 compcert.backend.Asmgenproof0 <> r' var
R3118:3119 Coq.Lists.List <> In def
R3124:3125 compcert.backend.Asmgenproof0 <> rl var
R3121:3122 compcert.backend.Asmgenproof0 <> r' var
R3248:3258 compcert.ia32.Asm Pregmap gso thm
R3248:3258 compcert.ia32.Asm Pregmap gso thm
def 3282:3291 <> preg_notin
R3297:3300 compcert.ia32.Asm <> preg ind
R3308:3311 Coq.Init.Datatypes <> list ind
R3313:3316 compcert.ia32.Machregs <> mreg ind
R3337:3338 compcert.backend.Asmgenproof0 <> rl var
R3349:3351 Coq.Init.Datatypes <> nil constr
R3356:3359 Coq.Init.Logic <> True ind
R3367:3370 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3371:3373 Coq.Init.Datatypes <> nil constr
R3379:3382 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3378:3378 compcert.backend.Asmgenproof0 <> r var
R3383:3389 compcert.ia32.Asm <> preg_of def
R3400:3403 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3425:3428 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3411:3414 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3410:3410 compcert.backend.Asmgenproof0 <> r var
R3415:3421 compcert.ia32.Asm <> preg_of def
R3429:3438 compcert.backend.Asmgenproof0 <> preg_notin def
R3442:3443 compcert.backend.Asmgenproof0 <> rl var
R3440:3440 compcert.backend.Asmgenproof0 <> r var
prf 3460:3477 <> preg_notin_charact
R3512:3517 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3556:3556 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3497:3506 compcert.backend.Asmgenproof0 <> preg_notin def
R3510:3511 compcert.backend.Asmgenproof0 <> rl var
R3508:3508 compcert.backend.Asmgenproof0 <> r var
R3542:3545 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3541:3541 compcert.backend.Asmgenproof0 <> r var
R3546:3552 compcert.ia32.Asm <> preg_of def
R3554:3555 compcert.backend.Asmgenproof0 <> mr var
R3529:3530 Coq.Lists.List <> In def
R3535:3536 compcert.backend.Asmgenproof0 <> rl var
R3532:3533 compcert.backend.Asmgenproof0 <> mr var
R0:-1 compcert.backend.Asmgenproof0 <> y var
R0:-1 compcert.backend.Asmgenproof0 <> y var
R0:-1 compcert.backend.Asmgenproof0 <> y var
prf 3773:3790 <> undef_regs_other_2
R3866:3868 Coq.Init.Logic <> :type_scope:x_'='_x not
R3834:3843 compcert.ia32.Asm <> undef_regs def
R3865:3865 compcert.backend.Asmgenproof0 <> r var
R3862:3863 compcert.backend.Asmgenproof0 <> rs var
R3846:3848 Coq.Lists.List <> map def
R3858:3859 compcert.backend.Asmgenproof0 <> rl var
R3850:3856 compcert.ia32.Asm <> preg_of def
R3869:3870 compcert.backend.Asmgenproof0 <> rs var
R3872:3872 compcert.backend.Asmgenproof0 <> r var
R3813:3822 compcert.backend.Asmgenproof0 <> preg_notin def
R3826:3827 compcert.backend.Asmgenproof0 <> rl var
R3824:3824 compcert.backend.Asmgenproof0 <> r var
R3898:3913 compcert.backend.Asmgenproof0 <> undef_regs_other thm
R3898:3913 compcert.backend.Asmgenproof0 <> undef_regs_other thm
R3935:3949 compcert.lib.Coqlib <> list_in_map_inv thm
R3995:4012 compcert.backend.Asmgenproof0 <> preg_notin_charact thm
R3995:4012 compcert.backend.Asmgenproof0 <> preg_notin_charact thm
prf 4038:4054 <> set_pregs_other_2
R4134:4136 Coq.Init.Logic <> :type_scope:x_'='_x not
R4101:4108 compcert.ia32.Asm <> set_regs def
R4133:4133 compcert.backend.Asmgenproof0 <> r var
R4130:4131 compcert.backend.Asmgenproof0 <> rs var
R4127:4128 compcert.backend.Asmgenproof0 <> vl var
R4111:4113 Coq.Lists.List <> map def
R4123:4124 compcert.backend.Asmgenproof0 <> rl var
R4115:4121 compcert.ia32.Asm <> preg_of def
R4137:4138 compcert.backend.Asmgenproof0 <> rs var
R4140:4140 compcert.backend.Asmgenproof0 <> r var
R4080:4089 compcert.backend.Asmgenproof0 <> preg_notin def
R4093:4094 compcert.backend.Asmgenproof0 <> rl var
R4091:4091 compcert.backend.Asmgenproof0 <> r var
R4222:4225 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4226:4232 compcert.ia32.Asm <> preg_of def
R4222:4225 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4226:4232 compcert.ia32.Asm <> preg_of def
R0:-1 compcert.backend.Asmgenproof0 <> y var
R0:-1 compcert.backend.Asmgenproof0 <> y var
R4272:4281 compcert.backend.Asmgenproof0 <> preg_notin def
R4272:4281 compcert.backend.Asmgenproof0 <> preg_notin def
R0:-1 compcert.backend.Asmgenproof0 <> y var
R0:-1 compcert.backend.Asmgenproof0 <> y var
R4351:4361 compcert.ia32.Asm Pregmap gso thm
R4351:4361 compcert.ia32.Asm Pregmap gso thm
constr 4512:4518 <> mkagree
rec 4451:4455 <> agree
proj 4524:4531 <> agree_sp
proj 4548:4559 <> agree_sp_def
proj 4578:4588 <> agree_mregs
R4462:4472 compcert.backend.Mach <> regset def
R4480:4482 compcert.common.Values <> val ind
R4490:4499 compcert.ia32.Asm <> regset def
R4539:4541 Coq.Init.Logic <> :type_scope:x_'='_x not
R4536:4536 compcert.ia32.Asm <> ::x_'#'_x not
R4537:4538 compcert.ia32.Asm <> SP syndef
R4534:4535 compcert.backend.Asmgenproof0 <> rs var
R4542:4543 compcert.backend.Asmgenproof0 <> sp var
R4564:4567 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4562:4563 compcert.backend.Asmgenproof0 <> sp var
R4568:4573 compcert.common.Values <> Vundef constr
R4601:4604 compcert.ia32.Machregs <> mreg ind
R4607:4617 compcert.common.Values Val lessdef ind
R4629:4630 compcert.ia32.Asm <> ::x_'#'_x not
R4640:4640 compcert.ia32.Asm <> ::x_'#'_x not
R4631:4637 compcert.ia32.Asm <> preg_of def
R4639:4639 compcert.backend.Asmgenproof0 <> r var
R4627:4628 compcert.backend.Asmgenproof0 <> rs var
R4620:4621 compcert.backend.Asmgenproof0 <> ms var
R4623:4623 compcert.backend.Asmgenproof0 <> r var
prf 4653:4660 <> preg_val
R4702:4712 compcert.common.Values Val lessdef ind
R4723:4724 compcert.ia32.Asm <> ::x_'#'_x not
R4734:4734 compcert.ia32.Asm <> ::x_'#'_x not
R4725:4731 compcert.ia32.Asm <> preg_of def
R4733:4733 compcert.backend.Asmgenproof0 <> r var
R4721:4722 compcert.backend.Asmgenproof0 <> rs var
R4715:4716 compcert.backend.Asmgenproof0 <> ms var
R4718:4718 compcert.backend.Asmgenproof0 <> r var
R4684:4688 compcert.backend.Asmgenproof0 <> agree rec
R4696:4697 compcert.backend.Asmgenproof0 <> rs var
R4693:4694 compcert.backend.Asmgenproof0 <> sp var
R4690:4691 compcert.backend.Asmgenproof0 <> ms var
prf 4784:4792 <> preg_vals
R4844:4859 compcert.common.Values Val lessdef_list ind
R4873:4875 Coq.Lists.List <> map def
R4881:4883 Coq.Lists.List <> map def
R4893:4893 compcert.backend.Asmgenproof0 <> l var
R4885:4891 compcert.ia32.Asm <> preg_of def
R4877:4878 compcert.backend.Asmgenproof0 <> rs var
R4862:4864 Coq.Lists.List <> map def
R4869:4869 compcert.backend.Asmgenproof0 <> l var
R4866:4867 compcert.backend.Asmgenproof0 <> ms var
R4814:4818 compcert.backend.Asmgenproof0 <> agree rec
R4826:4827 compcert.backend.Asmgenproof0 <> rs var
R4823:4824 compcert.backend.Asmgenproof0 <> sp var
R4820:4821 compcert.backend.Asmgenproof0 <> ms var
R4960:4967 compcert.backend.Asmgenproof0 <> preg_val thm
R4960:4967 compcert.backend.Asmgenproof0 <> preg_val thm
prf 4995:5000 <> sp_val
R5042:5044 Coq.Init.Logic <> :type_scope:x_'='_x not
R5040:5041 compcert.backend.Asmgenproof0 <> sp var
R5047:5047 compcert.ia32.Asm <> ::x_'#'_x not
R5048:5049 compcert.ia32.Asm <> SP syndef
R5045:5046 compcert.backend.Asmgenproof0 <> rs var
R5022:5026 compcert.backend.Asmgenproof0 <> agree rec
R5034:5035 compcert.backend.Asmgenproof0 <> rs var
R5031:5032 compcert.backend.Asmgenproof0 <> sp var
R5028:5029 compcert.backend.Asmgenproof0 <> ms var
prf 5099:5106 <> ireg_val
R5178:5188 compcert.common.Values Val lessdef ind
R5199:5199 compcert.ia32.Asm <> ::x_'#'_x not
R5200:5201 compcert.backend.Asmgenproof0 <> r' var
R5197:5198 compcert.backend.Asmgenproof0 <> rs var
R5191:5192 compcert.backend.Asmgenproof0 <> ms var
R5194:5194 compcert.backend.Asmgenproof0 <> r var
R5164:5166 Coq.Init.Logic <> :type_scope:x_'='_x not
R5155:5161 compcert.ia32.Asmgen <> ireg_of def
R5163:5163 compcert.backend.Asmgenproof0 <> r var
R5167:5168 compcert.common.Errors <> OK constr
R5170:5171 compcert.backend.Asmgenproof0 <> r' var
R5135:5139 compcert.backend.Asmgenproof0 <> agree rec
R5147:5148 compcert.backend.Asmgenproof0 <> rs var
R5144:5145 compcert.backend.Asmgenproof0 <> sp var
R5141:5142 compcert.backend.Asmgenproof0 <> ms var
R5233:5242 compcert.backend.Asmgenproof0 <> ireg_of_eq thm
R5233:5242 compcert.backend.Asmgenproof0 <> ireg_of_eq thm
R5260:5267 compcert.backend.Asmgenproof0 <> preg_val thm
R5260:5267 compcert.backend.Asmgenproof0 <> preg_val thm
prf 5289:5296 <> freg_val
R5368:5378 compcert.common.Values Val lessdef ind
R5390:5390 compcert.ia32.Asm <> ::x_'#'_x not
R5391:5392 compcert.backend.Asmgenproof0 <> r' var
R5388:5389 compcert.backend.Asmgenproof0 <> rs var
R5381:5382 compcert.backend.Asmgenproof0 <> ms var
R5384:5384 compcert.backend.Asmgenproof0 <> r var
R5354:5356 Coq.Init.Logic <> :type_scope:x_'='_x not
R5345:5351 compcert.ia32.Asmgen <> freg_of def
R5353:5353 compcert.backend.Asmgenproof0 <> r var
R5357:5358 compcert.common.Errors <> OK constr
R5360:5361 compcert.backend.Asmgenproof0 <> r' var
R5325:5329 compcert.backend.Asmgenproof0 <> agree rec
R5337:5338 compcert.backend.Asmgenproof0 <> rs var
R5334:5335 compcert.backend.Asmgenproof0 <> sp var
R5331:5332 compcert.backend.Asmgenproof0 <> ms var
R5425:5434 compcert.backend.Asmgenproof0 <> freg_of_eq thm
R5425:5434 compcert.backend.Asmgenproof0 <> freg_of_eq thm
R5452:5459 compcert.backend.Asmgenproof0 <> preg_val thm
R5452:5459 compcert.backend.Asmgenproof0 <> preg_val thm
prf 5481:5491 <> agree_exten
R5591:5595 compcert.backend.Asmgenproof0 <> agree rec
R5603:5605 compcert.backend.Asmgenproof0 <> rs' var
R5600:5601 compcert.backend.Asmgenproof0 <> sp var
R5597:5598 compcert.backend.Asmgenproof0 <> ms var
R5577:5579 Coq.Init.Logic <> :type_scope:x_'='_x not
R5575:5575 compcert.ia32.Asm <> ::x_'#'_x not
R5576:5576 compcert.backend.Asmgenproof0 <> r var
R5572:5574 compcert.backend.Asmgenproof0 <> rs' var
R5582:5582 compcert.ia32.Asm <> ::x_'#'_x not
R5583:5583 compcert.backend.Asmgenproof0 <> r var
R5580:5581 compcert.backend.Asmgenproof0 <> rs var
R5561:5563 Coq.Init.Logic <> :type_scope:x_'='_x not
R5550:5558 compcert.ia32.Asm <> data_preg def
R5560:5560 compcert.backend.Asmgenproof0 <> r var
R5564:5567 Coq.Init.Datatypes <> true constr
R5519:5523 compcert.backend.Asmgenproof0 <> agree rec
R5531:5532 compcert.backend.Asmgenproof0 <> rs var
R5528:5529 compcert.backend.Asmgenproof0 <> sp var
R5525:5526 compcert.backend.Asmgenproof0 <> ms var
R5710:5721 compcert.backend.Asmgenproof0 <> preg_of_data thm
R5710:5721 compcert.backend.Asmgenproof0 <> preg_of_data thm
prf 5806:5819 <> agree_set_mreg
R5983:5987 compcert.backend.Asmgenproof0 <> agree rec
R6012:6014 compcert.backend.Asmgenproof0 <> rs' var
R6009:6010 compcert.backend.Asmgenproof0 <> sp var
R5990:5999 compcert.backend.Mach Regmap set def
R6005:6006 compcert.backend.Asmgenproof0 <> ms var
R6003:6003 compcert.backend.Asmgenproof0 <> v var
R6001:6001 compcert.backend.Asmgenproof0 <> r var
R5968:5970 Coq.Init.Logic <> :type_scope:x_'='_x not
R5965:5965 compcert.ia32.Asm <> ::x_'#'_x not
R5966:5967 compcert.backend.Asmgenproof0 <> r' var
R5962:5964 compcert.backend.Asmgenproof0 <> rs' var
R5973:5973 compcert.ia32.Asm <> ::x_'#'_x not
R5974:5975 compcert.backend.Asmgenproof0 <> r' var
R5971:5972 compcert.backend.Asmgenproof0 <> rs var
R5945:5948 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R5943:5944 compcert.backend.Asmgenproof0 <> r' var
R5949:5955 compcert.ia32.Asm <> preg_of def
R5957:5957 compcert.backend.Asmgenproof0 <> r var
R5932:5934 Coq.Init.Logic <> :type_scope:x_'='_x not
R5920:5928 compcert.ia32.Asm <> data_preg def
R5930:5931 compcert.backend.Asmgenproof0 <> r' var
R5935:5938 Coq.Init.Datatypes <> true constr
R5871:5881 compcert.common.Values Val lessdef ind
R5889:5890 compcert.ia32.Asm <> ::x_'#'_x not
R5900:5900 compcert.ia32.Asm <> ::x_'#'_x not
R5891:5897 compcert.ia32.Asm <> preg_of def
R5899:5899 compcert.backend.Asmgenproof0 <> r var
R5886:5888 compcert.backend.Asmgenproof0 <> rs' var
R5883:5883 compcert.backend.Asmgenproof0 <> v var
R5851:5855 compcert.backend.Asmgenproof0 <> agree rec
R5863:5864 compcert.backend.Asmgenproof0 <> rs var
R5860:5861 compcert.backend.Asmgenproof0 <> sp var
R5857:5858 compcert.backend.Asmgenproof0 <> ms var
R6085:6097 Coq.Init.Logic <> sym_not_equal syndef
R6085:6097 Coq.Init.Logic <> sym_not_equal syndef
R6106:6119 compcert.backend.Asmgenproof0 <> preg_of_not_SP thm
R6106:6119 compcert.backend.Asmgenproof0 <> preg_of_not_SP thm
R6139:6148 compcert.backend.Mach Regmap set def
R6161:6168 compcert.backend.Mach RegEq eq def
R6161:6168 compcert.backend.Mach RegEq eq def
R6216:6227 compcert.backend.Asmgenproof0 <> preg_of_data thm
R6216:6227 compcert.backend.Asmgenproof0 <> preg_of_data thm
R6260:6276 compcert.backend.Asmgenproof0 <> preg_of_injective thm
R6260:6276 compcert.backend.Asmgenproof0 <> preg_of_injective thm
prf 6298:6312 <> agree_set_other
R6385:6389 compcert.backend.Asmgenproof0 <> agree rec
R6400:6400 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R6402:6405 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R6401:6401 compcert.backend.Asmgenproof0 <> r var
R6406:6406 compcert.backend.Asmgenproof0 <> v var
R6398:6399 compcert.backend.Asmgenproof0 <> rs var
R6394:6395 compcert.backend.Asmgenproof0 <> sp var
R6391:6392 compcert.backend.Asmgenproof0 <> ms var
R6371:6373 Coq.Init.Logic <> :type_scope:x_'='_x not
R6360:6368 compcert.ia32.Asm <> data_preg def
R6370:6370 compcert.backend.Asmgenproof0 <> r var
R6374:6378 Coq.Init.Datatypes <> false constr
R6340:6344 compcert.backend.Asmgenproof0 <> agree rec
R6352:6353 compcert.backend.Asmgenproof0 <> rs var
R6349:6350 compcert.backend.Asmgenproof0 <> sp var
R6346:6347 compcert.backend.Asmgenproof0 <> ms var
R6433:6443 compcert.backend.Asmgenproof0 <> agree_exten thm
R6433:6443 compcert.backend.Asmgenproof0 <> agree_exten thm
R6476:6486 compcert.ia32.Asm Pregmap gso thm
R6476:6486 compcert.ia32.Asm Pregmap gso thm
prf 6513:6527 <> agree_nextinstr
R6569:6573 compcert.backend.Asmgenproof0 <> agree rec
R6582:6590 compcert.ia32.Asm <> nextinstr def
R6592:6593 compcert.backend.Asmgenproof0 <> rs var
R6578:6579 compcert.backend.Asmgenproof0 <> sp var
R6575:6576 compcert.backend.Asmgenproof0 <> ms var
R6551:6555 compcert.backend.Asmgenproof0 <> agree rec
R6563:6564 compcert.backend.Asmgenproof0 <> rs var
R6560:6561 compcert.backend.Asmgenproof0 <> sp var
R6557:6558 compcert.backend.Asmgenproof0 <> ms var
R6621:6629 compcert.ia32.Asm <> nextinstr def
R6638:6652 compcert.backend.Asmgenproof0 <> agree_set_other thm
R6638:6652 compcert.backend.Asmgenproof0 <> agree_set_other thm
prf 6679:6693 <> agree_set_mregs
R6776:6780 compcert.backend.Asmgenproof0 <> agree rec
R6811:6818 compcert.ia32.Asm <> set_regs def
R6841:6842 compcert.backend.Asmgenproof0 <> rs var
R6837:6839 compcert.backend.Asmgenproof0 <> vl' var
R6821:6823 Coq.Lists.List <> map def
R6833:6834 compcert.backend.Asmgenproof0 <> rl var
R6825:6831 compcert.ia32.Asm <> preg_of def
R6807:6808 compcert.backend.Asmgenproof0 <> sp var
R6783:6795 compcert.backend.Mach <> set_regs def
R6803:6804 compcert.backend.Asmgenproof0 <> ms var
R6800:6801 compcert.backend.Asmgenproof0 <> vl var
R6797:6798 compcert.backend.Asmgenproof0 <> rl var
R6747:6762 compcert.common.Values Val lessdef_list ind
R6767:6769 compcert.backend.Asmgenproof0 <> vl' var
R6764:6765 compcert.backend.Asmgenproof0 <> vl var
R6727:6731 compcert.backend.Asmgenproof0 <> agree rec
R6739:6740 compcert.backend.Asmgenproof0 <> rs var
R6736:6737 compcert.backend.Asmgenproof0 <> sp var
R6733:6734 compcert.backend.Asmgenproof0 <> ms var
R6937:6950 compcert.backend.Asmgenproof0 <> agree_set_mreg thm
R6937:6950 compcert.backend.Asmgenproof0 <> agree_set_mreg thm
R6974:6984 compcert.ia32.Asm Pregmap gss thm
R6974:6984 compcert.ia32.Asm Pregmap gss thm
R7009:7019 compcert.ia32.Asm Pregmap gso thm
R7009:7019 compcert.ia32.Asm Pregmap gso thm
prf 7041:7064 <> agree_undef_nondata_regs
R7159:7163 compcert.backend.Asmgenproof0 <> agree rec
R7172:7181 compcert.ia32.Asm <> undef_regs def
R7186:7187 compcert.backend.Asmgenproof0 <> rs var
R7183:7184 compcert.backend.Asmgenproof0 <> rl var
R7168:7169 compcert.backend.Asmgenproof0 <> sp var
R7165:7166 compcert.backend.Asmgenproof0 <> ms var
R7144:7146 Coq.Init.Logic <> :type_scope:x_'='_x not
R7133:7141 compcert.ia32.Asm <> data_preg def
R7143:7143 compcert.backend.Asmgenproof0 <> r var
R7147:7151 Coq.Init.Datatypes <> false constr
R7122:7123 Coq.Lists.List <> In def
R7127:7128 compcert.backend.Asmgenproof0 <> rl var
R7125:7125 compcert.backend.Asmgenproof0 <> r var
R7091:7095 compcert.backend.Asmgenproof0 <> agree rec
R7103:7104 compcert.backend.Asmgenproof0 <> rs var
R7100:7101 compcert.backend.Asmgenproof0 <> sp var
R7097:7098 compcert.backend.Asmgenproof0 <> ms var
R7255:7265 compcert.backend.Asmgenproof0 <> agree_exten thm
R7255:7265 compcert.backend.Asmgenproof0 <> agree_exten thm
R7298:7308 compcert.ia32.Asm Pregmap gso thm
R7298:7308 compcert.ia32.Asm Pregmap gso thm
R7352:7354 Coq.Init.Logic <> :type_scope:x_'='_x not
R7341:7349 compcert.ia32.Asm <> data_preg def
R7355:7359 Coq.Init.Datatypes <> false constr
R7352:7354 Coq.Init.Logic <> :type_scope:x_'='_x not
R7341:7349 compcert.ia32.Asm <> data_preg def
R7355:7359 Coq.Init.Datatypes <> false constr
prf 7421:7436 <> agree_undef_regs
R7563:7567 compcert.backend.Asmgenproof0 <> agree rec
R7596:7598 compcert.backend.Asmgenproof0 <> rs' var
R7593:7594 compcert.backend.Asmgenproof0 <> sp var
R7570:7584 compcert.backend.Mach <> undef_regs def
R7589:7590 compcert.backend.Asmgenproof0 <> ms var
R7586:7587 compcert.backend.Asmgenproof0 <> rl var
R7548:7550 Coq.Init.Logic <> :type_scope:x_'='_x not
R7545:7545 compcert.ia32.Asm <> ::x_'#'_x not
R7546:7547 compcert.backend.Asmgenproof0 <> r' var
R7542:7544 compcert.backend.Asmgenproof0 <> rs' var
R7553:7553 compcert.ia32.Asm <> ::x_'#'_x not
R7554:7555 compcert.backend.Asmgenproof0 <> r' var
R7551:7552 compcert.backend.Asmgenproof0 <> rs var
R7522:7531 compcert.backend.Asmgenproof0 <> preg_notin def
R7536:7537 compcert.backend.Asmgenproof0 <> rl var
R7533:7534 compcert.backend.Asmgenproof0 <> r' var
R7511:7513 Coq.Init.Logic <> :type_scope:x_'='_x not
R7499:7507 compcert.ia32.Asm <> data_preg def
R7509:7510 compcert.backend.Asmgenproof0 <> r' var
R7514:7517 Coq.Init.Datatypes <> true constr
R7467:7471 compcert.backend.Asmgenproof0 <> agree rec
R7479:7480 compcert.backend.Asmgenproof0 <> rs var
R7476:7477 compcert.backend.Asmgenproof0 <> sp var
R7473:7474 compcert.backend.Asmgenproof0 <> ms var
R7694:7711 compcert.backend.Asmgenproof0 <> preg_notin_charact thm
R7694:7711 compcert.backend.Asmgenproof0 <> preg_notin_charact thm
R7728:7737 Coq.Init.Logic <> not_eq_sym thm
R7728:7737 Coq.Init.Logic <> not_eq_sym thm
R7746:7759 compcert.backend.Asmgenproof0 <> preg_of_not_SP thm
R7746:7759 compcert.backend.Asmgenproof0 <> preg_of_not_SP thm
R7783:7788 Coq.Lists.List <> In_dec syndef
R7790:7796 compcert.ia32.Machregs <> mreg_eq thm
R7783:7788 Coq.Lists.List <> In_dec syndef
R7790:7796 compcert.ia32.Machregs <> mreg_eq thm
R7815:7834 compcert.backend.Mach <> undef_regs_same thm
R7815:7834 compcert.backend.Mach <> undef_regs_same thm
R7853:7873 compcert.backend.Mach <> undef_regs_other thm
R7853:7873 compcert.backend.Mach <> undef_regs_other thm
R7909:7920 compcert.backend.Asmgenproof0 <> preg_of_data thm
R7909:7920 compcert.backend.Asmgenproof0 <> preg_of_data thm
R7933:7950 compcert.backend.Asmgenproof0 <> preg_notin_charact thm
R7933:7950 compcert.backend.Asmgenproof0 <> preg_notin_charact thm
R7993:8009 compcert.backend.Asmgenproof0 <> preg_of_injective thm
prf 8043:8062 <> agree_set_undef_mreg
R8249:8253 compcert.backend.Asmgenproof0 <> agree rec
R8299:8301 compcert.backend.Asmgenproof0 <> rs' var
R8296:8297 compcert.backend.Asmgenproof0 <> sp var
R8256:8265 compcert.backend.Mach Regmap set def
R8272:8286 compcert.backend.Mach <> undef_regs def
R8291:8292 compcert.backend.Asmgenproof0 <> ms var
R8288:8289 compcert.backend.Asmgenproof0 <> rl var
R8269:8269 compcert.backend.Asmgenproof0 <> v var
R8267:8267 compcert.backend.Asmgenproof0 <> r var
R8234:8236 Coq.Init.Logic <> :type_scope:x_'='_x not
R8231:8231 compcert.ia32.Asm <> ::x_'#'_x not
R8232:8233 compcert.backend.Asmgenproof0 <> r' var
R8228:8230 compcert.backend.Asmgenproof0 <> rs' var
R8239:8239 compcert.ia32.Asm <> ::x_'#'_x not
R8240:8241 compcert.backend.Asmgenproof0 <> r' var
R8237:8238 compcert.backend.Asmgenproof0 <> rs var
R8208:8217 compcert.backend.Asmgenproof0 <> preg_notin def
R8222:8223 compcert.backend.Asmgenproof0 <> rl var
R8219:8220 compcert.backend.Asmgenproof0 <> r' var
R8191:8194 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R8189:8190 compcert.backend.Asmgenproof0 <> r' var
R8195:8201 compcert.ia32.Asm <> preg_of def
R8203:8203 compcert.backend.Asmgenproof0 <> r var
R8178:8180 Coq.Init.Logic <> :type_scope:x_'='_x not
R8166:8174 compcert.ia32.Asm <> data_preg def
R8176:8177 compcert.backend.Asmgenproof0 <> r' var
R8181:8184 Coq.Init.Datatypes <> true constr
R8117:8127 compcert.common.Values Val lessdef ind
R8135:8136 compcert.ia32.Asm <> ::x_'#'_x not
R8146:8146 compcert.ia32.Asm <> ::x_'#'_x not
R8137:8143 compcert.ia32.Asm <> preg_of def
R8145:8145 compcert.backend.Asmgenproof0 <> r var
R8132:8134 compcert.backend.Asmgenproof0 <> rs' var
R8129:8129 compcert.backend.Asmgenproof0 <> v var
R8097:8101 compcert.backend.Asmgenproof0 <> agree rec
R8109:8110 compcert.backend.Asmgenproof0 <> rs var
R8106:8107 compcert.backend.Asmgenproof0 <> sp var
R8103:8104 compcert.backend.Asmgenproof0 <> ms var
R8351:8352 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R8362:8367 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R8382:8382 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R8353:8359 compcert.ia32.Asm <> preg_of def
R8370:8371 compcert.ia32.Asm <> ::x_'#'_x not
R8381:8381 compcert.ia32.Asm <> ::x_'#'_x not
R8372:8378 compcert.ia32.Asm <> preg_of def
R8327:8340 compcert.backend.Asmgenproof0 <> agree_set_mreg thm
R8351:8352 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R8362:8367 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R8382:8382 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R8353:8359 compcert.ia32.Asm <> preg_of def
R8370:8371 compcert.ia32.Asm <> ::x_'#'_x not
R8381:8381 compcert.ia32.Asm <> ::x_'#'_x not
R8372:8378 compcert.ia32.Asm <> preg_of def
R8327:8340 compcert.backend.Asmgenproof0 <> agree_set_mreg thm
R8400:8415 compcert.backend.Asmgenproof0 <> agree_undef_regs thm
R8400:8415 compcert.backend.Asmgenproof0 <> agree_undef_regs thm
R8450:8460 compcert.ia32.Asm Pregmap set def
R8473:8481 compcert.ia32.Asm PregEq eq def
R8487:8493 compcert.ia32.Asm <> preg_of def
R8473:8481 compcert.ia32.Asm PregEq eq def
R8487:8493 compcert.ia32.Asm <> preg_of def
R8540:8550 compcert.ia32.Asm Pregmap gso thm
R8540:8550 compcert.ia32.Asm Pregmap gso thm
prf 8572:8586 <> agree_change_sp
R8651:8655 compcert.backend.Asmgenproof0 <> agree rec
R8667:8667 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R8670:8673 compcert.ia32.Asm <> ::x_'#'_x_'<-'_x not
R8668:8669 compcert.ia32.Asm <> SP syndef
R8674:8676 compcert.backend.Asmgenproof0 <> sp' var
R8665:8666 compcert.backend.Asmgenproof0 <> rs var
R8660:8662 compcert.backend.Asmgenproof0 <> sp' var
R8657:8658 compcert.backend.Asmgenproof0 <> ms var
R8635:8638 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R8632:8634 compcert.backend.Asmgenproof0 <> sp' var
R8639:8644 compcert.common.Values <> Vundef constr
R8614:8618 compcert.backend.Asmgenproof0 <> agree rec
R8626:8627 compcert.backend.Asmgenproof0 <> rs var
R8623:8624 compcert.backend.Asmgenproof0 <> sp var
R8620:8621 compcert.backend.Asmgenproof0 <> ms var
R8735:8745 compcert.ia32.Asm Pregmap gso thm
R8735:8745 compcert.ia32.Asm Pregmap gso thm
prf 8866:8882 <> extcall_arg_match
R8991:8997 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9000:9001 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9028:9031 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9002:9016 compcert.ia32.Asm <> extcall_arg ind
R9026:9027 compcert.backend.Asmgenproof0 <> v' var
R9024:9024 compcert.backend.Asmgenproof0 <> l var
R9021:9022 compcert.backend.Asmgenproof0 <> m' var
R9018:9019 compcert.backend.Asmgenproof0 <> rs var
R9032:9042 compcert.common.Values Val lessdef ind
R9046:9047 compcert.backend.Asmgenproof0 <> v' var
R9044:9044 compcert.backend.Asmgenproof0 <> v var
R8957:8972 compcert.backend.Mach <> extcall_arg ind
R8984:8984 compcert.backend.Asmgenproof0 <> v var
R8982:8982 compcert.backend.Asmgenproof0 <> l var
R8979:8980 compcert.backend.Asmgenproof0 <> sp var
R8977:8977 compcert.backend.Asmgenproof0 <> m var
R8974:8975 compcert.backend.Asmgenproof0 <> ms var
R8935:8945 compcert.common.Memory Mem extends def
R8949:8950 compcert.backend.Asmgenproof0 <> m' var
R8947:8947 compcert.backend.Asmgenproof0 <> m var
R8915:8919 compcert.backend.Asmgenproof0 <> agree rec
R8927:8928 compcert.backend.Asmgenproof0 <> rs var
R8924:8925 compcert.backend.Asmgenproof0 <> sp var
R8921:8922 compcert.backend.Asmgenproof0 <> ms var
R9087:9088 compcert.ia32.Asm <> ::x_'#'_x not
R9098:9098 compcert.ia32.Asm <> ::x_'#'_x not
R9089:9095 compcert.ia32.Asm <> preg_of def
R9087:9088 compcert.ia32.Asm <> ::x_'#'_x not
R9098:9098 compcert.ia32.Asm <> ::x_'#'_x not
R9089:9095 compcert.ia32.Asm <> preg_of def
R9129:9136 compcert.backend.Asmgenproof0 <> preg_val thm
R9129:9136 compcert.backend.Asmgenproof0 <> preg_val thm
R9155:9164 compcert.backend.Mach <> load_stack def
R9183:9199 compcert.common.Memory Mem loadv_extends thm
R9239:9244 compcert.backend.Asmgenproof0 <> sp_val thm
R9239:9244 compcert.backend.Asmgenproof0 <> sp_val thm
prf 9335:9352 <> extcall_args_match
R9486:9492 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9496:9497 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9541:9544 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9498:9509 compcert.lib.Coqlib <> list_forall2 ind
R9538:9540 compcert.backend.Asmgenproof0 <> vl' var
R9535:9536 compcert.backend.Asmgenproof0 <> ll var
R9512:9526 compcert.ia32.Asm <> extcall_arg ind
R9531:9532 compcert.backend.Asmgenproof0 <> m' var
R9528:9529 compcert.backend.Asmgenproof0 <> rs var
R9545:9560 compcert.common.Values Val lessdef_list ind
R9565:9567 compcert.backend.Asmgenproof0 <> vl' var
R9562:9563 compcert.backend.Asmgenproof0 <> vl var
R9435:9446 compcert.lib.Coqlib <> list_forall2 ind
R9478:9479 compcert.backend.Asmgenproof0 <> vl var
R9475:9476 compcert.backend.Asmgenproof0 <> ll var
R9449:9464 compcert.backend.Mach <> extcall_arg ind
R9471:9472 compcert.backend.Asmgenproof0 <> sp var
R9469:9469 compcert.backend.Asmgenproof0 <> m var
R9466:9467 compcert.backend.Asmgenproof0 <> ms var
R9397:9407 compcert.common.Memory Mem extends def
R9411:9412 compcert.backend.Asmgenproof0 <> m' var
R9409:9409 compcert.backend.Asmgenproof0 <> m var
R9379:9383 compcert.backend.Asmgenproof0 <> agree rec
R9391:9392 compcert.backend.Asmgenproof0 <> rs var
R9388:9389 compcert.backend.Asmgenproof0 <> sp var
R9385:9386 compcert.backend.Asmgenproof0 <> ms var
R9612:9614 Coq.Init.Datatypes <> nil constr
R9616:9618 compcert.common.Values <> val ind
R9612:9614 Coq.Init.Datatypes <> nil constr
R9616:9618 compcert.common.Values <> val ind
R9665:9681 compcert.backend.Asmgenproof0 <> extcall_arg_match thm
R9766:9769 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9766:9769 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
prf 9814:9836 <> extcall_arguments_match
R9957:9963 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9969:9970 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10007:10010 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9971:9991 compcert.ia32.Asm <> extcall_arguments def
R10002:10006 compcert.backend.Asmgenproof0 <> args' var
R9999:10000 compcert.backend.Asmgenproof0 <> sg var
R9996:9997 compcert.backend.Asmgenproof0 <> m' var
R9993:9994 compcert.backend.Asmgenproof0 <> rs var
R10011:10026 compcert.common.Values Val lessdef_list ind
R10033:10037 compcert.backend.Asmgenproof0 <> args' var
R10028:10031 compcert.backend.Asmgenproof0 <> args var
R9913:9934 compcert.backend.Mach <> extcall_arguments def
R9947:9950 compcert.backend.Asmgenproof0 <> args var
R9944:9945 compcert.backend.Asmgenproof0 <> sg var
R9941:9942 compcert.backend.Asmgenproof0 <> sp var
R9939:9939 compcert.backend.Asmgenproof0 <> m var
R9936:9937 compcert.backend.Asmgenproof0 <> ms var
R9891:9901 compcert.common.Memory Mem extends def
R9905:9906 compcert.backend.Asmgenproof0 <> m' var
R9903:9903 compcert.backend.Asmgenproof0 <> m var
R9873:9877 compcert.backend.Asmgenproof0 <> agree rec
R9885:9886 compcert.backend.Asmgenproof0 <> rs var
R9882:9883 compcert.backend.Asmgenproof0 <> sp var
R9879:9880 compcert.backend.Asmgenproof0 <> ms var
R10056:10077 compcert.backend.Mach <> extcall_arguments def
R10080:10100 compcert.ia32.Asm <> extcall_arguments def
R10120:10137 compcert.backend.Asmgenproof0 <> extcall_args_match thm
R10120:10137 compcert.backend.Asmgenproof0 <> extcall_args_match thm
prf 10208:10222 <> annot_arg_match
R10329:10335 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10338:10339 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10385:10388 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10340:10352 compcert.ia32.Asm <> annot_arg ind
R10383:10384 compcert.backend.Asmgenproof0 <> v' var
R10361:10378 compcert.ia32.Asmgen <> transl_annot_param def
R10380:10380 compcert.backend.Asmgenproof0 <> p var
R10357:10358 compcert.backend.Asmgenproof0 <> m' var
R10354:10355 compcert.backend.Asmgenproof0 <> rs var
R10389:10399 compcert.common.Values Val lessdef ind
R10403:10404 compcert.backend.Asmgenproof0 <> v' var
R10401:10401 compcert.backend.Asmgenproof0 <> v var
R10297:10310 compcert.backend.Mach <> annot_arg ind
R10322:10322 compcert.backend.Asmgenproof0 <> v var
R10320:10320 compcert.backend.Asmgenproof0 <> p var
R10317:10318 compcert.backend.Asmgenproof0 <> sp var
R10315:10315 compcert.backend.Asmgenproof0 <> m var
R10312:10313 compcert.backend.Asmgenproof0 <> ms var
R10275:10285 compcert.common.Memory Mem extends def
R10289:10290 compcert.backend.Asmgenproof0 <> m' var
R10287:10287 compcert.backend.Asmgenproof0 <> m var
R10255:10259 compcert.backend.Asmgenproof0 <> agree rec
R10267:10268 compcert.backend.Asmgenproof0 <> rs var
R10264:10265 compcert.backend.Asmgenproof0 <> sp var
R10261:10262 compcert.backend.Asmgenproof0 <> ms var
R10463:10469 compcert.ia32.Asm <> preg_of def
R10463:10469 compcert.ia32.Asm <> preg_of def
R10503:10510 compcert.backend.Asmgenproof0 <> preg_val thm
R10503:10510 compcert.backend.Asmgenproof0 <> preg_val thm
R10542:10557 compcert.common.Memory Mem load_extends thm
prf 10656:10676 <> annot_arguments_match
R10799:10805 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10809:10810 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10868:10882 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10811:10829 compcert.ia32.Asm <> annot_arguments def
R10865:10867 compcert.backend.Asmgenproof0 <> vl' var
R10838:10840 Coq.Lists.List <> map def
R10861:10862 compcert.backend.Asmgenproof0 <> pl var
R10842:10859 compcert.ia32.Asmgen <> transl_annot_param def
R10834:10835 compcert.backend.Asmgenproof0 <> m' var
R10831:10832 compcert.backend.Asmgenproof0 <> rs var
R10883:10898 compcert.common.Values Val lessdef_list ind
R10903:10905 compcert.backend.Asmgenproof0 <> vl' var
R10900:10901 compcert.backend.Asmgenproof0 <> vl var
R10759:10778 compcert.backend.Mach <> annot_arguments def
R10791:10792 compcert.backend.Asmgenproof0 <> vl var
R10788:10789 compcert.backend.Asmgenproof0 <> pl var
R10785:10786 compcert.backend.Asmgenproof0 <> sp var
R10783:10783 compcert.backend.Asmgenproof0 <> m var
R10780:10781 compcert.backend.Asmgenproof0 <> ms var
R10721:10731 compcert.common.Memory Mem extends def
R10735:10736 compcert.backend.Asmgenproof0 <> m' var
R10733:10733 compcert.backend.Asmgenproof0 <> m var
R10703:10707 compcert.backend.Asmgenproof0 <> agree rec
R10715:10716 compcert.backend.Asmgenproof0 <> rs var
R10712:10713 compcert.backend.Asmgenproof0 <> sp var
R10709:10710 compcert.backend.Asmgenproof0 <> ms var
R10950:10952 Coq.Init.Datatypes <> nil constr
R10954:10956 compcert.common.Values <> val ind
R10950:10952 Coq.Init.Datatypes <> nil constr
R10954:10956 compcert.common.Values <> val ind
R11003:11017 compcert.backend.Asmgenproof0 <> annot_arg_match thm
R11102:11105 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11102:11105 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
prf 11206:11218 <> find_instr_in
R11270:11271 Coq.Lists.List <> In def
R11275:11275 compcert.backend.Asmgenproof0 <> c var
R11273:11273 compcert.backend.Asmgenproof0 <> i var
R11257:11259 Coq.Init.Logic <> :type_scope:x_'='_x not
R11241:11250 compcert.ia32.Asm <> find_instr def
R11256:11256 compcert.backend.Asmgenproof0 <> c var
R11252:11254 compcert.backend.Asmgenproof0 <> pos var
R11260:11263 Coq.Init.Datatypes <> Some constr
R11265:11265 compcert.backend.Asmgenproof0 <> i var
R11353:11355 compcert.lib.Coqlib <> zeq def
R11353:11355 compcert.lib.Coqlib <> zeq def
ind 11528:11536 <> code_tail
constr 11572:11582 <> code_tail_0
constr 11621:11631 <> code_tail_S
R11552:11555 compcert.ia32.Asm <> code def
R11544:11547 compcert.ia32.Asm <> code def
R11539:11539 Coq.Numbers.BinNums <> Z ind
R11601:11609 compcert.backend.Asmgenproof0 <> code_tail ind
R11615:11615 compcert.backend.Asmgenproof0 <> c var
R11613:11613 compcert.backend.Asmgenproof0 <> c var
R11689:11697 compcert.backend.Asmgenproof0 <> code_tail ind
R11719:11720 compcert.backend.Asmgenproof0 <> c2 var
R11711:11714 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11710:11710 compcert.backend.Asmgenproof0 <> i var
R11715:11716 compcert.backend.Asmgenproof0 <> c1 var
R11703:11705 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11700:11702 compcert.backend.Asmgenproof0 <> pos var
R11660:11668 compcert.backend.Asmgenproof0 <> code_tail ind
R11677:11678 compcert.backend.Asmgenproof0 <> c2 var
R11674:11675 compcert.backend.Asmgenproof0 <> c1 var
R11670:11672 compcert.backend.Asmgenproof0 <> pos var
prf 11730:11742 <> code_tail_pos
R11791:11794 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R11788:11790 compcert.backend.Asmgenproof0 <> pos var
R11765:11773 compcert.backend.Asmgenproof0 <> code_tail ind
R11782:11783 compcert.backend.Asmgenproof0 <> c2 var
R11779:11780 compcert.backend.Asmgenproof0 <> c1 var
R11775:11777 compcert.backend.Asmgenproof0 <> pos var
prf 11846:11860 <> find_instr_tail
R11936:11938 Coq.Init.Logic <> :type_scope:x_'='_x not
R11919:11928 compcert.ia32.Asm <> find_instr def
R11934:11935 compcert.backend.Asmgenproof0 <> c1 var
R11930:11932 compcert.backend.Asmgenproof0 <> pos var
R11939:11942 Coq.Init.Datatypes <> Some constr
R11944:11944 compcert.backend.Asmgenproof0 <> i var
R11887:11895 compcert.backend.Asmgenproof0 <> code_tail ind
R11906:11909 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11905:11905 compcert.backend.Asmgenproof0 <> i var
R11910:11911 compcert.backend.Asmgenproof0 <> c2 var
R11901:11902 compcert.backend.Asmgenproof0 <> c1 var
R11897:11899 compcert.backend.Asmgenproof0 <> pos var
R12006:12008 compcert.lib.Coqlib <> zeq def
R12006:12008 compcert.lib.Coqlib <> zeq def
R12056:12068 compcert.backend.Asmgenproof0 <> code_tail_pos thm
R12056:12068 compcert.backend.Asmgenproof0 <> code_tail_pos thm
R12146:12148 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R12142:12144 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R12146:12148 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R12142:12144 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
prf 12194:12211 <> code_tail_bounds_1
R12258:12261 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R12265:12268 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R12262:12264 compcert.backend.Asmgenproof0 <> ofs var
R12262:12264 compcert.backend.Asmgenproof0 <> ofs var
R12269:12281 compcert.lib.Coqlib <> list_length_z def
R12283:12284 compcert.backend.Asmgenproof0 <> fn var
R12235:12243 compcert.backend.Asmgenproof0 <> code_tail ind
R12252:12252 compcert.backend.Asmgenproof0 <> c var
R12249:12250 compcert.backend.Asmgenproof0 <> fn var
R12245:12247 compcert.backend.Asmgenproof0 <> ofs var
R12338:12354 compcert.lib.Coqlib <> list_length_z_pos thm
R12338:12354 compcert.lib.Coqlib <> list_length_z_pos thm
R12378:12395 compcert.lib.Coqlib <> list_length_z_cons thm
R12378:12395 compcert.lib.Coqlib <> list_length_z_cons thm
prf 12418:12435 <> code_tail_bounds_2
R12491:12494 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R12498:12500 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R12495:12497 compcert.backend.Asmgenproof0 <> ofs var
R12495:12497 compcert.backend.Asmgenproof0 <> ofs var
R12501:12513 compcert.lib.Coqlib <> list_length_z def
R12515:12516 compcert.backend.Asmgenproof0 <> fn var
R12461:12469 compcert.backend.Asmgenproof0 <> code_tail ind
R12480:12483 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12479:12479 compcert.backend.Asmgenproof0 <> i var
R12484:12484 compcert.backend.Asmgenproof0 <> c var
R12475:12476 compcert.backend.Asmgenproof0 <> fn var
R12471:12473 compcert.backend.Asmgenproof0 <> ofs var
R12614:12617 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R12621:12623 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R12618:12620 compcert.backend.Asmgenproof0 <> ofs var
R12618:12620 compcert.backend.Asmgenproof0 <> ofs var
R12624:12636 compcert.lib.Coqlib <> list_length_z def
R12638:12639 compcert.backend.Asmgenproof0 <> fn var
R12599:12601 Coq.Init.Logic <> :type_scope:x_'='_x not
R12598:12598 compcert.backend.Asmgenproof0 <> c var
R12603:12606 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12602:12602 compcert.backend.Asmgenproof0 <> i var
R12607:12608 compcert.backend.Asmgenproof0 <> c' var
R12553:12561 compcert.backend.Asmgenproof0 <> code_tail ind
R12570:12570 compcert.backend.Asmgenproof0 <> c var
R12567:12568 compcert.backend.Asmgenproof0 <> fn var
R12563:12565 compcert.backend.Asmgenproof0 <> ofs var
R12614:12617 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R12621:12623 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R12618:12620 compcert.backend.Asmgenproof0 <> ofs var
R12618:12620 compcert.backend.Asmgenproof0 <> ofs var
R12624:12636 compcert.lib.Coqlib <> list_length_z def
R12638:12639 compcert.backend.Asmgenproof0 <> fn var
R12599:12601 Coq.Init.Logic <> :type_scope:x_'='_x not
R12598:12598 compcert.backend.Asmgenproof0 <> c var
R12603:12606 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12602:12602 compcert.backend.Asmgenproof0 <> i var
R12607:12608 compcert.backend.Asmgenproof0 <> c' var
R12553:12561 compcert.backend.Asmgenproof0 <> code_tail ind
R12570:12570 compcert.backend.Asmgenproof0 <> c var
R12567:12568 compcert.backend.Asmgenproof0 <> fn var
R12563:12565 compcert.backend.Asmgenproof0 <> ofs var
R12695:12712 compcert.lib.Coqlib <> list_length_z_cons thm
R12695:12712 compcert.lib.Coqlib <> list_length_z_cons thm
R12727:12743 compcert.lib.Coqlib <> list_length_z_pos thm
R12727:12743 compcert.lib.Coqlib <> list_length_z_pos thm
R12767:12784 compcert.lib.Coqlib <> list_length_z_cons thm
R12767:12784 compcert.lib.Coqlib <> list_length_z_cons thm
prf 12848:12861 <> code_tail_next
R12918:12926 compcert.backend.Asmgenproof0 <> code_tail ind
R12941:12941 compcert.backend.Asmgenproof0 <> c var
R12938:12939 compcert.backend.Asmgenproof0 <> fn var
R12932:12934 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R12929:12931 compcert.backend.Asmgenproof0 <> ofs var
R12887:12895 compcert.backend.Asmgenproof0 <> code_tail ind
R12906:12909 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12905:12905 compcert.backend.Asmgenproof0 <> i var
R12910:12910 compcert.backend.Asmgenproof0 <> c var
R12901:12902 compcert.backend.Asmgenproof0 <> fn var
R12897:12899 compcert.backend.Asmgenproof0 <> ofs var
R13038:13046 compcert.backend.Asmgenproof0 <> code_tail ind
R13061:13062 compcert.backend.Asmgenproof0 <> c' var
R13058:13059 compcert.backend.Asmgenproof0 <> fn var
R13052:13054 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13049:13051 compcert.backend.Asmgenproof0 <> ofs var
R13024:13026 Coq.Init.Logic <> :type_scope:x_'='_x not
R13023:13023 compcert.backend.Asmgenproof0 <> c var
R13028:13031 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R13027:13027 compcert.backend.Asmgenproof0 <> i var
R13032:13033 compcert.backend.Asmgenproof0 <> c' var
R12978:12986 compcert.backend.Asmgenproof0 <> code_tail ind
R12995:12995 compcert.backend.Asmgenproof0 <> c var
R12992:12993 compcert.backend.Asmgenproof0 <> fn var
R12988:12990 compcert.backend.Asmgenproof0 <> ofs var
R13038:13046 compcert.backend.Asmgenproof0 <> code_tail ind
R13061:13062 compcert.backend.Asmgenproof0 <> c' var
R13058:13059 compcert.backend.Asmgenproof0 <> fn var
R13052:13054 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13049:13051 compcert.backend.Asmgenproof0 <> ofs var
R13024:13026 Coq.Init.Logic <> :type_scope:x_'='_x not
R13023:13023 compcert.backend.Asmgenproof0 <> c var
R13028:13031 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R13027:13027 compcert.backend.Asmgenproof0 <> i var
R13032:13033 compcert.backend.Asmgenproof0 <> c' var
R12978:12986 compcert.backend.Asmgenproof0 <> code_tail ind
R12995:12995 compcert.backend.Asmgenproof0 <> c var
R12992:12993 compcert.backend.Asmgenproof0 <> fn var
R12988:12990 compcert.backend.Asmgenproof0 <> ofs var
prf 13169:13186 <> code_tail_next_int
R13300:13308 compcert.backend.Asmgenproof0 <> code_tail ind
R13350:13350 compcert.backend.Asmgenproof0 <> c var
R13347:13348 compcert.backend.Asmgenproof0 <> fn var
R13311:13322 compcert.lib.Integers Int unsigned def
R13325:13331 compcert.lib.Integers Int add def
R13337:13343 compcert.lib.Integers Int one def
R13333:13335 compcert.backend.Asmgenproof0 <> ofs var
R13254:13262 compcert.backend.Asmgenproof0 <> code_tail ind
R13288:13291 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R13287:13287 compcert.backend.Asmgenproof0 <> i var
R13292:13292 compcert.backend.Asmgenproof0 <> c var
R13283:13284 compcert.backend.Asmgenproof0 <> fn var
R13265:13276 compcert.lib.Integers Int unsigned def
R13278:13280 compcert.backend.Asmgenproof0 <> ofs var
R13228:13231 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R13212:13224 compcert.lib.Coqlib <> list_length_z def
R13226:13227 compcert.backend.Asmgenproof0 <> fn var
R13232:13247 compcert.lib.Integers Int max_unsigned def
R13378:13393 compcert.lib.Integers Int add_unsigned thm
R13378:13393 compcert.lib.Integers Int add_unsigned thm
R13406:13417 compcert.lib.Integers Int unsigned def
R13419:13425 compcert.lib.Integers Int one def
R13406:13417 compcert.lib.Integers Int unsigned def
R13419:13425 compcert.lib.Integers Int one def
R13446:13462 compcert.lib.Integers Int unsigned_repr thm
R13446:13462 compcert.lib.Integers Int unsigned_repr thm
R13471:13484 compcert.backend.Asmgenproof0 <> code_tail_next thm
R13471:13484 compcert.backend.Asmgenproof0 <> code_tail_next thm
R13514:13531 compcert.backend.Asmgenproof0 <> code_tail_bounds_2 thm
R13514:13531 compcert.backend.Asmgenproof0 <> code_tail_bounds_2 thm
ind 13824:13840 <> transl_code_at_pc
constr 13955:13977 <> transl_code_at_pc_intro
R13847:13855 compcert.backend.Mach <> genv def
R13933:13940 compcert.ia32.Asm <> code def
R13917:13928 compcert.ia32.Asm <> function rec
R13909:13912 Coq.Init.Datatypes <> bool ind
R13896:13904 compcert.backend.Mach <> code def
R13879:13891 compcert.backend.Mach <> function rec
R13870:13874 compcert.common.Values <> block def
R13863:13865 compcert.common.Values <> val ind
R14192:14208 compcert.backend.Asmgenproof0 <> transl_code_at_pc ind
R14238:14239 compcert.backend.Asmgenproof0 <> tc var
R14235:14236 compcert.backend.Asmgenproof0 <> tf var
R14232:14233 compcert.backend.Asmgenproof0 <> ep var
R14230:14230 compcert.backend.Asmgenproof0 <> c var
R14228:14228 compcert.backend.Asmgenproof0 <> f var
R14226:14226 compcert.backend.Asmgenproof0 <> b var
R14214:14217 compcert.common.Values <> Vptr constr
R14221:14223 compcert.backend.Asmgenproof0 <> ofs var
R14219:14219 compcert.backend.Asmgenproof0 <> b var
R14140:14148 compcert.backend.Asmgenproof0 <> code_tail ind
R14182:14183 compcert.backend.Asmgenproof0 <> tc var
R14170:14176 compcert.ia32.Asm <> fn_code proj
R14178:14179 compcert.backend.Asmgenproof0 <> tf var
R14151:14162 compcert.lib.Integers Int unsigned def
R14164:14166 compcert.backend.Asmgenproof0 <> ofs var
R14124:14126 Coq.Init.Logic <> :type_scope:x_'='_x not
R14106:14116 compcert.ia32.Asmgen <> transl_code def
R14122:14123 compcert.backend.Asmgenproof0 <> ep var
R14120:14120 compcert.backend.Asmgenproof0 <> c var
R14118:14118 compcert.backend.Asmgenproof0 <> f var
R14127:14128 compcert.common.Errors <> OK constr
R14130:14131 compcert.backend.Asmgenproof0 <> tc var
R14083:14085 Coq.Init.Logic <> :type_scope:x_'='_x not
R14066:14080 compcert.ia32.Asmgen <> transf_function def
R14082:14082 compcert.backend.Asmgenproof0 <> f var
R14086:14094 compcert.common.Errors <> OK constr
R14096:14097 compcert.backend.Asmgenproof0 <> tf var
R14039:14041 Coq.Init.Logic <> :type_scope:x_'='_x not
R14015:14033 compcert.common.Globalenvs Genv find_funct_ptr def
R14038:14038 compcert.backend.Asmgenproof0 <> b var
R14042:14045 Coq.Init.Datatypes <> Some constr
R14047:14054 compcert.common.AST <> Internal constr
R14056:14056 compcert.backend.Asmgenproof0 <> f var
prf 14348:14374 <> transl_code_rec_transl_code
R14424:14427 Coq.Init.Logic <> :type_scope:x_'='_x not
R14460:14460 Coq.Init.Logic <> :type_scope:x_'='_x not
R14399:14413 compcert.ia32.Asmgen <> transl_code_rec def
R14423:14423 compcert.backend.Asmgenproof0 <> k var
R14420:14421 compcert.backend.Asmgenproof0 <> ep var
R14417:14418 compcert.backend.Asmgenproof0 <> il var
R14415:14415 compcert.backend.Asmgenproof0 <> f var
R14428:14430 compcert.common.Errors <> :error_monad_scope:'do'_x_'<-'_x_';'_x not
R14432:14435 compcert.common.Errors <> :error_monad_scope:'do'_x_'<-'_x_';'_x not
R14455:14456 compcert.common.Errors <> :error_monad_scope:'do'_x_'<-'_x_';'_x not
R14436:14446 compcert.ia32.Asmgen <> transl_code def
R14453:14454 compcert.backend.Asmgenproof0 <> ep var
R14450:14451 compcert.backend.Asmgenproof0 <> il var
R14448:14448 compcert.backend.Asmgenproof0 <> f var
R14457:14457 compcert.backend.Asmgenproof0 <> k var
R14537:14547 compcert.ia32.Asmgen <> transl_code def
R14555:14567 compcert.ia32.Asmgen <> it1_is_parent def
R14537:14547 compcert.ia32.Asmgen <> transl_code def
R14555:14567 compcert.ia32.Asmgen <> it1_is_parent def
prf 14602:14625 <> transl_code'_transl_code
R14668:14670 Coq.Init.Logic <> :type_scope:x_'='_x not
R14648:14659 compcert.ia32.Asmgen <> transl_code' def
R14666:14667 compcert.backend.Asmgenproof0 <> ep var
R14663:14664 compcert.backend.Asmgenproof0 <> il var
R14661:14661 compcert.backend.Asmgenproof0 <> f var
R14671:14681 compcert.ia32.Asmgen <> transl_code def
R14688:14689 compcert.backend.Asmgenproof0 <> ep var
R14685:14686 compcert.backend.Asmgenproof0 <> il var
R14683:14683 compcert.backend.Asmgenproof0 <> f var
R14716:14727 compcert.ia32.Asmgen <> transl_code' def
R14738:14764 compcert.backend.Asmgenproof0 <> transl_code_rec_transl_code thm
R14738:14764 compcert.backend.Asmgenproof0 <> transl_code_rec_transl_code thm
R14780:14790 compcert.ia32.Asmgen <> transl_code def
R14780:14790 compcert.ia32.Asmgen <> transl_code def
def 15854:15874 <> return_address_offset
R15880:15892 compcert.backend.Mach <> function rec
R15899:15907 compcert.backend.Mach <> code def
R15916:15918 compcert.lib.Integers <> int syndef
R16015:16023 compcert.backend.Asmgenproof0 <> code_tail ind
R16057:16058 compcert.backend.Asmgenproof0 <> tc var
R16045:16051 compcert.ia32.Asm <> fn_code proj
R16053:16054 compcert.backend.Asmgenproof0 <> tf var
R16026:16037 compcert.lib.Integers Int unsigned def
R16039:16041 compcert.backend.Asmgenproof0 <> ofs var
R16001:16003 Coq.Init.Logic <> :type_scope:x_'='_x not
R15980:15990 compcert.ia32.Asmgen <> transl_code def
R15996:16000 Coq.Init.Datatypes <> false constr
R15994:15994 compcert.backend.Asmgenproof0 <> c var
R15992:15992 compcert.backend.Asmgenproof0 <> f var
R16004:16005 compcert.common.Errors <> OK constr
R16007:16008 compcert.backend.Asmgenproof0 <> tc var
R15966:15968 Coq.Init.Logic <> :type_scope:x_'='_x not
R15949:15963 compcert.ia32.Asmgen <> transf_function def
R15965:15965 compcert.backend.Asmgenproof0 <> f var
R15969:15970 compcert.common.Errors <> OK constr
R15972:15973 compcert.backend.Asmgenproof0 <> tf var
prf 16365:16381 <> is_tail_code_tail
R16417:16423 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16427:16428 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16429:16437 compcert.backend.Asmgenproof0 <> code_tail ind
R16446:16447 compcert.backend.Asmgenproof0 <> c1 var
R16443:16444 compcert.backend.Asmgenproof0 <> c2 var
R16439:16441 compcert.backend.Asmgenproof0 <> ofs var
R16400:16406 compcert.lib.Coqlib <> is_tail ind
R16411:16412 compcert.backend.Asmgenproof0 <> c2 var
R16408:16409 compcert.backend.Asmgenproof0 <> c1 var
R16540:16542 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16540:16542 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
sec 16580:16593 <> RETADDR_EXISTS
var 16608:16624 RETADDR_EXISTS transl_instr_tail
R16680:16686 compcert.lib.Coqlib <> is_tail ind
R16690:16690 compcert.backend.Asmgenproof0 <> c var
R16688:16688 compcert.backend.Asmgenproof0 <> k var
R16669:16671 Coq.Init.Logic <> :type_scope:x_'='_x not
R16648:16659 compcert.ia32.Asmgen <> transl_instr def
R16668:16668 compcert.backend.Asmgenproof0 <> k var
R16665:16666 compcert.backend.Asmgenproof0 <> ep var
R16663:16663 compcert.backend.Asmgenproof0 <> i var
R16661:16661 compcert.backend.Asmgenproof0 <> f var
R16672:16673 compcert.common.Errors <> OK constr
R16675:16675 compcert.backend.Asmgenproof0 <> c var
var 16704:16722 RETADDR_EXISTS transf_function_inv
R16771:16777 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16780:16781 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16782:16788 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16791:16792 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16834:16837 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16826:16828 Coq.Init.Logic <> :type_scope:x_'='_x not
R16793:16803 compcert.ia32.Asmgen <> transl_code def
R16824:16825 compcert.backend.Asmgenproof0 <> ep var
R16808:16819 compcert.backend.Mach <> fn_code proj
R16821:16821 compcert.backend.Asmgenproof0 <> f var
R16805:16805 compcert.backend.Asmgenproof0 <> f var
R16829:16830 compcert.common.Errors <> OK constr
R16832:16833 compcert.backend.Asmgenproof0 <> tc var
R16838:16844 compcert.lib.Coqlib <> is_tail ind
R16850:16856 compcert.ia32.Asm <> fn_code proj
R16858:16859 compcert.backend.Asmgenproof0 <> tf var
R16846:16847 compcert.backend.Asmgenproof0 <> tc var
R16757:16759 Coq.Init.Logic <> :type_scope:x_'='_x not
R16740:16754 compcert.ia32.Asmgen <> transf_function def
R16756:16756 compcert.backend.Asmgenproof0 <> f var
R16760:16761 compcert.common.Errors <> OK constr
R16763:16764 compcert.backend.Asmgenproof0 <> tf var
var 16874:16892 RETADDR_EXISTS transf_function_len
R16965:16968 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16939:16951 compcert.lib.Coqlib <> list_length_z def
R16954:16960 compcert.ia32.Asm <> fn_code proj
R16962:16963 compcert.backend.Asmgenproof0 <> tf var
R16969:16984 compcert.lib.Integers Int max_unsigned def
R16927:16929 Coq.Init.Logic <> :type_scope:x_'='_x not
R16910:16924 compcert.ia32.Asmgen <> transf_function def
R16926:16926 compcert.backend.Asmgenproof0 <> f var
R16930:16931 compcert.common.Errors <> OK constr
R16933:16934 compcert.backend.Asmgenproof0 <> tf var
prf 16994:17009 <> transl_code_tail
R17101:17107 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17111:17112 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17113:17119 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17123:17124 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17154:17157 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17145:17147 Coq.Init.Logic <> :type_scope:x_'='_x not
R17125:17135 compcert.ia32.Asmgen <> transl_code def
R17142:17144 compcert.backend.Asmgenproof0 <> ep1 var
R17139:17140 compcert.backend.Asmgenproof0 <> c1 var
R17137:17137 compcert.backend.Asmgenproof0 <> f var
R17148:17149 compcert.common.Errors <> OK constr
R17151:17153 compcert.backend.Asmgenproof0 <> tc1 var
R17158:17164 compcert.lib.Coqlib <> is_tail ind
R17170:17172 compcert.backend.Asmgenproof0 <> tc2 var
R17166:17168 compcert.backend.Asmgenproof0 <> tc1 var
R17086:17088 Coq.Init.Logic <> :type_scope:x_'='_x not
R17066:17076 compcert.ia32.Asmgen <> transl_code def
R17083:17085 compcert.backend.Asmgenproof0 <> ep2 var
R17080:17081 compcert.backend.Asmgenproof0 <> c2 var
R17078:17078 compcert.backend.Asmgenproof0 <> f var
R17089:17090 compcert.common.Errors <> OK constr
R17092:17094 compcert.backend.Asmgenproof0 <> tc2 var
R17031:17037 compcert.lib.Coqlib <> is_tail ind
R17042:17043 compcert.backend.Asmgenproof0 <> c2 var
R17039:17040 compcert.backend.Asmgenproof0 <> c1 var
R17378:17390 compcert.lib.Coqlib <> is_tail_trans thm
R17378:17390 compcert.lib.Coqlib <> is_tail_trans thm
R17413:17429 compcert.backend.Asmgenproof0 <> RETADDR_EXISTS.transl_instr_tail var
R17413:17429 compcert.backend.Asmgenproof0 <> RETADDR_EXISTS.transl_instr_tail var
prf 17451:17471 <> return_address_exists
R17545:17551 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17554:17555 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17556:17576 compcert.backend.Asmgenproof0 <> return_address_offset def
R17582:17583 compcert.backend.Asmgenproof0 <> ra var
R17580:17580 compcert.backend.Asmgenproof0 <> c var
R17578:17578 compcert.backend.Asmgenproof0 <> f var
R17495:17501 compcert.lib.Coqlib <> is_tail ind
R17526:17537 compcert.backend.Mach <> fn_code proj
R17523:17523 compcert.backend.Asmgenproof0 <> f var
R17516:17519 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17504:17508 compcert.backend.Mach <> Mcall constr
R17513:17515 compcert.backend.Asmgenproof0 <> ros var
R17510:17511 compcert.backend.Asmgenproof0 <> sg var
R17520:17520 compcert.backend.Asmgenproof0 <> c var
R17613:17627 compcert.ia32.Asmgen <> transf_function def
R17613:17627 compcert.ia32.Asmgen <> transf_function def
R17659:17677 compcert.backend.Asmgenproof0 <> RETADDR_EXISTS.transf_function_inv var
R17729:17744 compcert.backend.Asmgenproof0 <> transl_code_tail thm
R17793:17804 compcert.ia32.Asmgen <> transl_instr def
R17839:17845 compcert.lib.Coqlib <> is_tail ind
R17850:17856 compcert.ia32.Asm <> fn_code proj
R17839:17845 compcert.lib.Coqlib <> is_tail ind
R17850:17856 compcert.ia32.Asm <> fn_code proj
R17874:17886 compcert.lib.Coqlib <> is_tail_trans thm
R17874:17886 compcert.lib.Coqlib <> is_tail_trans thm
R17915:17927 compcert.lib.Coqlib <> is_tail_trans thm
R17915:17927 compcert.lib.Coqlib <> is_tail_trans thm
R17956:17972 compcert.backend.Asmgenproof0 <> RETADDR_EXISTS.transl_instr_tail var
R17956:17972 compcert.backend.Asmgenproof0 <> RETADDR_EXISTS.transl_instr_tail var
R17994:18010 compcert.backend.Asmgenproof0 <> is_tail_code_tail thm
R18052:18059 compcert.lib.Integers Int repr def
R18052:18059 compcert.lib.Integers Int repr def
R18091:18107 compcert.lib.Integers Int unsigned_repr thm
R18091:18107 compcert.lib.Integers Int unsigned_repr thm
R18133:18150 compcert.backend.Asmgenproof0 <> code_tail_bounds_1 thm
R18168:18186 compcert.backend.Asmgenproof0 <> RETADDR_EXISTS.transf_function_len var
R18168:18186 compcert.backend.Asmgenproof0 <> RETADDR_EXISTS.transf_function_len var
R18212:18219 compcert.lib.Integers Int zero def
R18212:18219 compcert.lib.Integers Int zero def
R18258:18271 compcert.backend.Asmgenproof0 RETADDR_EXISTS <> sec
prf 18282:18300 <> code_tail_no_bigger
R18356:18359 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R18347:18352 Coq.Init.Datatypes <> length def
R18354:18355 compcert.backend.Asmgenproof0 <> c2 var
R18360:18365 Coq.Init.Datatypes <> length def
R18367:18368 compcert.backend.Asmgenproof0 <> c1 var
R18323:18331 compcert.backend.Asmgenproof0 <> code_tail ind
R18340:18341 compcert.backend.Asmgenproof0 <> c2 var
R18337:18338 compcert.backend.Asmgenproof0 <> c1 var
R18333:18335 compcert.backend.Asmgenproof0 <> pos var
prf 18425:18440 <> code_tail_unique
R18517:18519 Coq.Init.Logic <> :type_scope:x_'='_x not
R18514:18516 compcert.backend.Asmgenproof0 <> pos var
R18520:18523 compcert.backend.Asmgenproof0 <> pos' var
R18491:18499 compcert.backend.Asmgenproof0 <> code_tail ind
R18509:18509 compcert.backend.Asmgenproof0 <> c var
R18506:18507 compcert.backend.Asmgenproof0 <> fn var
R18501:18504 compcert.backend.Asmgenproof0 <> pos' var
R18469:18477 compcert.backend.Asmgenproof0 <> code_tail ind
R18486:18486 compcert.backend.Asmgenproof0 <> c var
R18483:18484 compcert.backend.Asmgenproof0 <> fn var
R18479:18481 compcert.backend.Asmgenproof0 <> pos var
R18620:18638 compcert.backend.Asmgenproof0 <> code_tail_no_bigger thm
R18620:18638 compcert.backend.Asmgenproof0 <> code_tail_no_bigger thm
R18686:18704 compcert.backend.Asmgenproof0 <> code_tail_no_bigger thm
R18686:18704 compcert.backend.Asmgenproof0 <> code_tail_no_bigger thm
prf 18768:18796 <> return_address_offset_correct
R18936:18938 Coq.Init.Logic <> :type_scope:x_'='_x not
R18932:18935 compcert.backend.Asmgenproof0 <> ofs' var
R18939:18941 compcert.backend.Asmgenproof0 <> ofs var
R18896:18916 compcert.backend.Asmgenproof0 <> return_address_offset def
R18922:18925 compcert.backend.Asmgenproof0 <> ofs' var
R18920:18920 compcert.backend.Asmgenproof0 <> c var
R18918:18918 compcert.backend.Asmgenproof0 <> f var
R18838:18854 compcert.backend.Asmgenproof0 <> transl_code_at_pc ind
R18888:18889 compcert.backend.Asmgenproof0 <> tc var
R18885:18886 compcert.backend.Asmgenproof0 <> tf var
R18879:18883 Coq.Init.Datatypes <> false constr
R18877:18877 compcert.backend.Asmgenproof0 <> c var
R18875:18875 compcert.backend.Asmgenproof0 <> f var
R18872:18873 compcert.backend.Asmgenproof0 <> fb var
R18860:18863 compcert.common.Values <> Vptr constr
R18867:18869 compcert.backend.Asmgenproof0 <> ofs var
R18865:18865 compcert.backend.Asmgenproof0 <> b var
R18856:18857 compcert.backend.Asmgenproof0 <> ge var
R18991:19006 compcert.backend.Asmgenproof0 <> code_tail_unique thm
R19060:19076 compcert.lib.Integers Int repr_unsigned thm
R19060:19076 compcert.lib.Integers Int repr_unsigned thm
R19099:19115 compcert.lib.Integers Int repr_unsigned thm
R19099:19115 compcert.lib.Integers Int repr_unsigned thm
def 19292:19301 <> find_label
R19309:19313 compcert.ia32.Asm <> label def
R19320:19323 compcert.ia32.Asm <> code def
R19339:19344 Coq.Init.Datatypes <> option ind
R19346:19349 compcert.ia32.Asm <> code def
R19362:19362 compcert.backend.Asmgenproof0 <> c var
R19373:19375 Coq.Init.Datatypes <> nil constr
R19380:19383 Coq.Init.Datatypes <> None constr
R19394:19397 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19413:19420 compcert.ia32.Asm <> is_label def
R19422:19424 compcert.backend.Asmgenproof0 <> lbl var
R19450:19459 compcert.backend.Asmgenproof0 <> find_label def
R19461:19463 compcert.backend.Asmgenproof0 <> lbl var
R19437:19440 Coq.Init.Datatypes <> Some constr
prf 19482:19500 <> label_pos_code_tail
R19560:19566 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19571:19574 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19606:19612 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19594:19596 Coq.Init.Logic <> :type_scope:x_'='_x not
R19575:19583 compcert.ia32.Asm <> label_pos def
R19593:19593 compcert.backend.Asmgenproof0 <> c var
R19589:19591 compcert.backend.Asmgenproof0 <> pos var
R19585:19587 compcert.backend.Asmgenproof0 <> lbl var
R19597:19600 Coq.Init.Datatypes <> Some constr
R19602:19605 compcert.backend.Asmgenproof0 <> pos' var
R19640:19645 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19613:19621 compcert.backend.Asmgenproof0 <> code_tail ind
R19638:19639 compcert.backend.Asmgenproof0 <> c' var
R19636:19636 compcert.backend.Asmgenproof0 <> c var
R19628:19630 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19624:19627 compcert.backend.Asmgenproof0 <> pos' var
R19631:19633 compcert.backend.Asmgenproof0 <> pos var
R19649:19651 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R19656:19659 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R19646:19648 compcert.backend.Asmgenproof0 <> pos var
R19652:19655 compcert.backend.Asmgenproof0 <> pos' var
R19652:19655 compcert.backend.Asmgenproof0 <> pos' var
R19663:19665 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19660:19662 compcert.backend.Asmgenproof0 <> pos var
R19666:19678 compcert.lib.Coqlib <> list_length_z def
R19680:19680 compcert.backend.Asmgenproof0 <> c var
R19544:19546 Coq.Init.Logic <> :type_scope:x_'='_x not
R19528:19537 compcert.backend.Asmgenproof0 <> find_label def
R19543:19543 compcert.backend.Asmgenproof0 <> c var
R19539:19541 compcert.backend.Asmgenproof0 <> lbl var
R19547:19550 Coq.Init.Datatypes <> Some constr
R19552:19553 compcert.backend.Asmgenproof0 <> c' var
R19771:19778 compcert.ia32.Asm <> is_label def
R19771:19778 compcert.ia32.Asm <> is_label def
R19844:19846 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19844:19846 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19889:19891 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19885:19887 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19904:19906 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19904:19906 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19889:19891 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19885:19887 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19957:19974 compcert.lib.Coqlib <> list_length_z_cons thm
R19957:19974 compcert.lib.Coqlib <> list_length_z_cons thm
R19989:20005 compcert.lib.Coqlib <> list_length_z_pos thm
R19989:20005 compcert.lib.Coqlib <> list_length_z_pos thm
R20049:20051 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20049:20051 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20137:20139 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R20151:20151 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20168:20171 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20156:20159 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R20167:20167 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R20163:20165 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20151:20151 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20168:20171 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20156:20159 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R20167:20167 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R20163:20165 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20137:20139 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R20217:20234 compcert.lib.Coqlib <> list_length_z_cons thm
R20217:20234 compcert.lib.Coqlib <> list_length_z_cons thm
def 20366:20377 <> tail_nolabel
R20385:20388 compcert.ia32.Asm <> code def
R20414:20417 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20403:20409 compcert.lib.Coqlib <> is_tail ind
R20413:20413 compcert.backend.Asmgenproof0 <> c var
R20411:20411 compcert.backend.Asmgenproof0 <> k var
R20446:20448 Coq.Init.Logic <> :type_scope:x_'='_x not
R20430:20439 compcert.backend.Asmgenproof0 <> find_label def
R20445:20445 compcert.backend.Asmgenproof0 <> c var
R20441:20443 compcert.backend.Asmgenproof0 <> lbl var
R20449:20458 compcert.backend.Asmgenproof0 <> find_label def
R20464:20464 compcert.backend.Asmgenproof0 <> k var
R20460:20462 compcert.backend.Asmgenproof0 <> lbl var
prf 20474:20490 <> tail_nolabel_refl
R20505:20516 compcert.backend.Asmgenproof0 <> tail_nolabel def
R20520:20520 compcert.backend.Asmgenproof0 <> c var
R20518:20518 compcert.backend.Asmgenproof0 <> c var
R20553:20564 compcert.lib.Coqlib <> is_tail_refl constr
R20553:20564 compcert.lib.Coqlib <> is_tail_refl constr
prf 20585:20602 <> tail_nolabel_trans
R20668:20679 compcert.backend.Asmgenproof0 <> tail_nolabel def
R20684:20685 compcert.backend.Asmgenproof0 <> c3 var
R20681:20682 compcert.backend.Asmgenproof0 <> c1 var
R20646:20657 compcert.backend.Asmgenproof0 <> tail_nolabel def
R20662:20663 compcert.backend.Asmgenproof0 <> c2 var
R20659:20660 compcert.backend.Asmgenproof0 <> c1 var
R20624:20635 compcert.backend.Asmgenproof0 <> tail_nolabel def
R20640:20641 compcert.backend.Asmgenproof0 <> c3 var
R20637:20638 compcert.backend.Asmgenproof0 <> c2 var
R20747:20759 compcert.lib.Coqlib <> is_tail_trans thm
R20747:20759 compcert.lib.Coqlib <> is_tail_trans thm
def 20814:20820 <> nolabel
R20826:20836 compcert.ia32.Asm <> instruction ind
R20850:20850 compcert.backend.Asmgenproof0 <> i var
R20857:20862 compcert.ia32.Asm <> Plabel constr
R20869:20873 Coq.Init.Logic <> False ind
R20882:20885 Coq.Init.Logic <> True ind
R20908:20914 compcert.backend.Asmgenproof0 <> nolabel def
R20928:20928 Coq.Init.Logic <> I constr
prf 20947:20963 <> tail_nolabel_cons
R21017:21028 compcert.backend.Asmgenproof0 <> tail_nolabel def
R21034:21037 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R21033:21033 compcert.backend.Asmgenproof0 <> i var
R21038:21038 compcert.backend.Asmgenproof0 <> c var
R21030:21030 compcert.backend.Asmgenproof0 <> k var
R20997:21008 compcert.backend.Asmgenproof0 <> tail_nolabel def
R21012:21012 compcert.backend.Asmgenproof0 <> c var
R21010:21010 compcert.backend.Asmgenproof0 <> k var
R20984:20990 compcert.backend.Asmgenproof0 <> nolabel def
R20992:20992 compcert.backend.Asmgenproof0 <> i var
R21194:21210 compcert.backend.Asmgenproof0 <> tail_nolabel_refl thm
R21290:21301 compcert.backend.Asmgenproof0 <> tail_nolabel def
R21307:21310 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R21290:21301 compcert.backend.Asmgenproof0 <> tail_nolabel def
R21307:21310 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R21390:21392 Coq.Init.Logic <> :type_scope:x_'='_x not
R21383:21387 compcert.common.Errors <> Error constr
R21393:21394 compcert.common.Errors <> OK constr
R21390:21392 Coq.Init.Logic <> :type_scope:x_'='_x not
R21383:21387 compcert.common.Errors <> Error constr
R21393:21394 compcert.common.Errors <> OK constr
R21446:21448 Coq.Init.Logic <> :type_scope:x_'='_x not
R21430:21445 compcert.common.Errors <> assertion_failed def
R21449:21450 compcert.common.Errors <> OK constr
R21446:21448 Coq.Init.Logic <> :type_scope:x_'='_x not
R21430:21445 compcert.common.Errors <> assertion_failed def
R21449:21450 compcert.common.Errors <> OK constr
R21490:21492 Coq.Init.Logic <> :type_scope:x_'='_x not
R21486:21487 compcert.common.Errors <> OK constr
R21493:21494 compcert.common.Errors <> OK constr
R21490:21492 Coq.Init.Logic <> :type_scope:x_'='_x not
R21486:21487 compcert.common.Errors <> OK constr
R21493:21494 compcert.common.Errors <> OK constr
R21544:21546 Coq.Init.Logic <> :type_scope:x_'='_x not
R21536:21539 compcert.common.Errors <> bind def
R21547:21548 compcert.common.Errors <> OK constr
R21544:21546 Coq.Init.Logic <> :type_scope:x_'='_x not
R21536:21539 compcert.common.Errors <> bind def
R21547:21548 compcert.common.Errors <> OK constr
R21596:21596 Coq.Init.Logic <> :type_scope:x_'='_x not
R21616:21619 Coq.Init.Logic <> :type_scope:x_'='_x not
R21620:21621 compcert.common.Errors <> OK constr
R21596:21596 Coq.Init.Logic <> :type_scope:x_'='_x not
R21616:21619 Coq.Init.Logic <> :type_scope:x_'='_x not
R21620:21621 compcert.common.Errors <> OK constr
R21708:21710 Coq.Init.Logic <> :type_scope:x_'='_x not
R21682:21684 Coq.Init.Datatypes <> nil constr
R21694:21697 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R21711:21712 compcert.common.Errors <> OK constr
R21708:21710 Coq.Init.Logic <> :type_scope:x_'='_x not
R21682:21684 Coq.Init.Datatypes <> nil constr
R21694:21697 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R21711:21712 compcert.common.Errors <> OK constr
R21325:21341 compcert.backend.Asmgenproof0 <> tail_nolabel_cons thm
R21357:21357 Coq.Init.Logic <> I constr
sec 21823:21834 <> STRAIGHTLINE
var 21847:21848 STRAIGHTLINE ge
R21851:21854 compcert.ia32.Asm <> genv def
var 21866:21867 STRAIGHTLINE fn
R21870:21877 compcert.ia32.Asm <> function rec
ind 22248:22260 <> exec_straight
constr 22351:22367 <> exec_straight_one
constr 22541:22558 <> exec_straight_step
R22332:22334 compcert.common.Memory <> mem syndef
R22322:22327 compcert.ia32.Asm <> regset def
R22314:22317 compcert.ia32.Asm <> code def
R22281:22283 compcert.common.Memory <> mem syndef
R22271:22276 compcert.ia32.Asm <> regset def
R22263:22266 compcert.ia32.Asm <> code def
R22497:22509 compcert.backend.Asmgenproof0 <> exec_straight ind
R22534:22535 compcert.backend.Asmgenproof0 <> m2 var
R22530:22532 compcert.backend.Asmgenproof0 <> rs2 var
R22528:22528 compcert.backend.Asmgenproof0 <> c var
R22525:22526 compcert.backend.Asmgenproof0 <> m1 var
R22521:22523 compcert.backend.Asmgenproof0 <> rs1 var
R22514:22517 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R22512:22513 compcert.backend.Asmgenproof0 <> i1 var
R22518:22518 compcert.backend.Asmgenproof0 <> c var
R22465:22467 Coq.Init.Logic <> :type_scope:x_'='_x not
R22462:22462 compcert.ia32.Asm <> ::x_'#'_x not
R22463:22464 compcert.ia32.Asm <> PC constr
R22459:22461 compcert.backend.Asmgenproof0 <> rs2 var
R22468:22474 compcert.common.Values Val add def
R22483:22486 compcert.common.Values <> Vone def
R22479:22479 compcert.ia32.Asm <> ::x_'#'_x not
R22480:22481 compcert.ia32.Asm <> PC constr
R22476:22478 compcert.backend.Asmgenproof0 <> rs1 var
R22435:22437 Coq.Init.Logic <> :type_scope:x_'='_x not
R22409:22418 compcert.ia32.Asm <> exec_instr def
R22433:22434 compcert.backend.Asmgenproof0 <> m1 var
R22429:22431 compcert.backend.Asmgenproof0 <> rs1 var
R22426:22427 compcert.backend.Asmgenproof0 <> i1 var
R22423:22424 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R22420:22421 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.ge var
R22438:22441 compcert.ia32.Asm <> Next constr
R22447:22448 compcert.backend.Asmgenproof0 <> m2 var
R22443:22445 compcert.backend.Asmgenproof0 <> rs2 var
R22738:22750 compcert.backend.Asmgenproof0 <> exec_straight ind
R22775:22776 compcert.backend.Asmgenproof0 <> m3 var
R22771:22773 compcert.backend.Asmgenproof0 <> rs3 var
R22768:22769 compcert.backend.Asmgenproof0 <> c' var
R22765:22766 compcert.backend.Asmgenproof0 <> m1 var
R22761:22763 compcert.backend.Asmgenproof0 <> rs1 var
R22754:22757 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R22753:22753 compcert.backend.Asmgenproof0 <> i var
R22758:22758 compcert.backend.Asmgenproof0 <> c var
R22696:22708 compcert.backend.Asmgenproof0 <> exec_straight ind
R22726:22727 compcert.backend.Asmgenproof0 <> m3 var
R22722:22724 compcert.backend.Asmgenproof0 <> rs3 var
R22719:22720 compcert.backend.Asmgenproof0 <> c' var
R22716:22717 compcert.backend.Asmgenproof0 <> m2 var
R22712:22714 compcert.backend.Asmgenproof0 <> rs2 var
R22710:22710 compcert.backend.Asmgenproof0 <> c var
R22664:22666 Coq.Init.Logic <> :type_scope:x_'='_x not
R22661:22661 compcert.ia32.Asm <> ::x_'#'_x not
R22662:22663 compcert.ia32.Asm <> PC constr
R22658:22660 compcert.backend.Asmgenproof0 <> rs2 var
R22667:22673 compcert.common.Values Val add def
R22682:22685 compcert.common.Values <> Vone def
R22678:22678 compcert.ia32.Asm <> ::x_'#'_x not
R22679:22680 compcert.ia32.Asm <> PC constr
R22675:22677 compcert.backend.Asmgenproof0 <> rs1 var
R22634:22636 Coq.Init.Logic <> :type_scope:x_'='_x not
R22609:22618 compcert.ia32.Asm <> exec_instr def
R22632:22633 compcert.backend.Asmgenproof0 <> m1 var
R22628:22630 compcert.backend.Asmgenproof0 <> rs1 var
R22626:22626 compcert.backend.Asmgenproof0 <> i var
R22623:22624 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R22620:22621 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.ge var
R22637:22640 compcert.ia32.Asm <> Next constr
R22646:22647 compcert.backend.Asmgenproof0 <> m2 var
R22642:22644 compcert.backend.Asmgenproof0 <> rs2 var
prf 22786:22804 <> exec_straight_trans
R22927:22939 compcert.backend.Asmgenproof0 <> exec_straight ind
R22958:22959 compcert.backend.Asmgenproof0 <> m3 var
R22954:22956 compcert.backend.Asmgenproof0 <> rs3 var
R22951:22952 compcert.backend.Asmgenproof0 <> c3 var
R22948:22949 compcert.backend.Asmgenproof0 <> m1 var
R22944:22946 compcert.backend.Asmgenproof0 <> rs1 var
R22941:22942 compcert.backend.Asmgenproof0 <> c1 var
R22888:22900 compcert.backend.Asmgenproof0 <> exec_straight ind
R22919:22920 compcert.backend.Asmgenproof0 <> m3 var
R22915:22917 compcert.backend.Asmgenproof0 <> rs3 var
R22912:22913 compcert.backend.Asmgenproof0 <> c3 var
R22909:22910 compcert.backend.Asmgenproof0 <> m2 var
R22905:22907 compcert.backend.Asmgenproof0 <> rs2 var
R22902:22903 compcert.backend.Asmgenproof0 <> c2 var
R22849:22861 compcert.backend.Asmgenproof0 <> exec_straight ind
R22880:22881 compcert.backend.Asmgenproof0 <> m2 var
R22876:22878 compcert.backend.Asmgenproof0 <> rs2 var
R22873:22874 compcert.backend.Asmgenproof0 <> c2 var
R22870:22871 compcert.backend.Asmgenproof0 <> m1 var
R22866:22868 compcert.backend.Asmgenproof0 <> rs1 var
R22863:22864 compcert.backend.Asmgenproof0 <> c1 var
R23000:23017 compcert.backend.Asmgenproof0 <> exec_straight_step constr
R23000:23017 compcert.backend.Asmgenproof0 <> exec_straight_step constr
R23046:23063 compcert.backend.Asmgenproof0 <> exec_straight_step constr
R23046:23063 compcert.backend.Asmgenproof0 <> exec_straight_step constr
prf 23096:23112 <> exec_straight_two
R23316:23328 compcert.backend.Asmgenproof0 <> exec_straight ind
R23359:23360 compcert.backend.Asmgenproof0 <> m3 var
R23355:23357 compcert.backend.Asmgenproof0 <> rs3 var
R23353:23353 compcert.backend.Asmgenproof0 <> c var
R23350:23351 compcert.backend.Asmgenproof0 <> m1 var
R23346:23348 compcert.backend.Asmgenproof0 <> rs1 var
R23333:23336 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23331:23332 compcert.backend.Asmgenproof0 <> i1 var
R23339:23342 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23337:23338 compcert.backend.Asmgenproof0 <> i2 var
R23343:23343 compcert.backend.Asmgenproof0 <> c var
R23288:23290 Coq.Init.Logic <> :type_scope:x_'='_x not
R23285:23285 compcert.ia32.Asm <> ::x_'#'_x not
R23286:23287 compcert.ia32.Asm <> PC constr
R23282:23284 compcert.backend.Asmgenproof0 <> rs3 var
R23291:23297 compcert.common.Values Val add def
R23306:23309 compcert.common.Values <> Vone def
R23302:23302 compcert.ia32.Asm <> ::x_'#'_x not
R23303:23304 compcert.ia32.Asm <> PC constr
R23299:23301 compcert.backend.Asmgenproof0 <> rs2 var
R23254:23256 Coq.Init.Logic <> :type_scope:x_'='_x not
R23251:23251 compcert.ia32.Asm <> ::x_'#'_x not
R23252:23253 compcert.ia32.Asm <> PC constr
R23248:23250 compcert.backend.Asmgenproof0 <> rs2 var
R23257:23263 compcert.common.Values Val add def
R23272:23275 compcert.common.Values <> Vone def
R23268:23268 compcert.ia32.Asm <> ::x_'#'_x not
R23269:23270 compcert.ia32.Asm <> PC constr
R23265:23267 compcert.backend.Asmgenproof0 <> rs1 var
R23228:23230 Coq.Init.Logic <> :type_scope:x_'='_x not
R23202:23211 compcert.ia32.Asm <> exec_instr def
R23226:23227 compcert.backend.Asmgenproof0 <> m2 var
R23222:23224 compcert.backend.Asmgenproof0 <> rs2 var
R23219:23220 compcert.backend.Asmgenproof0 <> i2 var
R23216:23217 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R23213:23214 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.ge var
R23231:23234 compcert.ia32.Asm <> Next constr
R23240:23241 compcert.backend.Asmgenproof0 <> m3 var
R23236:23238 compcert.backend.Asmgenproof0 <> rs3 var
R23182:23184 Coq.Init.Logic <> :type_scope:x_'='_x not
R23156:23165 compcert.ia32.Asm <> exec_instr def
R23180:23181 compcert.backend.Asmgenproof0 <> m1 var
R23176:23178 compcert.backend.Asmgenproof0 <> rs1 var
R23173:23174 compcert.backend.Asmgenproof0 <> i1 var
R23170:23171 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R23167:23168 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.ge var
R23185:23188 compcert.ia32.Asm <> Next constr
R23194:23195 compcert.backend.Asmgenproof0 <> m2 var
R23190:23192 compcert.backend.Asmgenproof0 <> rs2 var
R23386:23403 compcert.backend.Asmgenproof0 <> exec_straight_step constr
R23386:23403 compcert.backend.Asmgenproof0 <> exec_straight_step constr
R23432:23448 compcert.backend.Asmgenproof0 <> exec_straight_one constr
R23432:23448 compcert.backend.Asmgenproof0 <> exec_straight_one constr
prf 23469:23487 <> exec_straight_three
R23781:23793 compcert.backend.Asmgenproof0 <> exec_straight ind
R23830:23831 compcert.backend.Asmgenproof0 <> m4 var
R23826:23828 compcert.backend.Asmgenproof0 <> rs4 var
R23824:23824 compcert.backend.Asmgenproof0 <> c var
R23821:23822 compcert.backend.Asmgenproof0 <> m1 var
R23817:23819 compcert.backend.Asmgenproof0 <> rs1 var
R23798:23801 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23796:23797 compcert.backend.Asmgenproof0 <> i1 var
R23804:23807 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23802:23803 compcert.backend.Asmgenproof0 <> i2 var
R23810:23813 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23808:23809 compcert.backend.Asmgenproof0 <> i3 var
R23814:23814 compcert.backend.Asmgenproof0 <> c var
R23753:23755 Coq.Init.Logic <> :type_scope:x_'='_x not
R23750:23750 compcert.ia32.Asm <> ::x_'#'_x not
R23751:23752 compcert.ia32.Asm <> PC constr
R23747:23749 compcert.backend.Asmgenproof0 <> rs4 var
R23756:23762 compcert.common.Values Val add def
R23771:23774 compcert.common.Values <> Vone def
R23767:23767 compcert.ia32.Asm <> ::x_'#'_x not
R23768:23769 compcert.ia32.Asm <> PC constr
R23764:23766 compcert.backend.Asmgenproof0 <> rs3 var
R23719:23721 Coq.Init.Logic <> :type_scope:x_'='_x not
R23716:23716 compcert.ia32.Asm <> ::x_'#'_x not
R23717:23718 compcert.ia32.Asm <> PC constr
R23713:23715 compcert.backend.Asmgenproof0 <> rs3 var
R23722:23728 compcert.common.Values Val add def
R23737:23740 compcert.common.Values <> Vone def
R23733:23733 compcert.ia32.Asm <> ::x_'#'_x not
R23734:23735 compcert.ia32.Asm <> PC constr
R23730:23732 compcert.backend.Asmgenproof0 <> rs2 var
R23685:23687 Coq.Init.Logic <> :type_scope:x_'='_x not
R23682:23682 compcert.ia32.Asm <> ::x_'#'_x not
R23683:23684 compcert.ia32.Asm <> PC constr
R23679:23681 compcert.backend.Asmgenproof0 <> rs2 var
R23688:23694 compcert.common.Values Val add def
R23703:23706 compcert.common.Values <> Vone def
R23699:23699 compcert.ia32.Asm <> ::x_'#'_x not
R23700:23701 compcert.ia32.Asm <> PC constr
R23696:23698 compcert.backend.Asmgenproof0 <> rs1 var
R23659:23661 Coq.Init.Logic <> :type_scope:x_'='_x not
R23633:23642 compcert.ia32.Asm <> exec_instr def
R23657:23658 compcert.backend.Asmgenproof0 <> m3 var
R23653:23655 compcert.backend.Asmgenproof0 <> rs3 var
R23650:23651 compcert.backend.Asmgenproof0 <> i3 var
R23647:23648 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R23644:23645 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.ge var
R23662:23665 compcert.ia32.Asm <> Next constr
R23671:23672 compcert.backend.Asmgenproof0 <> m4 var
R23667:23669 compcert.backend.Asmgenproof0 <> rs4 var
R23613:23615 Coq.Init.Logic <> :type_scope:x_'='_x not
R23587:23596 compcert.ia32.Asm <> exec_instr def
R23611:23612 compcert.backend.Asmgenproof0 <> m2 var
R23607:23609 compcert.backend.Asmgenproof0 <> rs2 var
R23604:23605 compcert.backend.Asmgenproof0 <> i2 var
R23601:23602 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R23598:23599 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.ge var
R23616:23619 compcert.ia32.Asm <> Next constr
R23625:23626 compcert.backend.Asmgenproof0 <> m3 var
R23621:23623 compcert.backend.Asmgenproof0 <> rs3 var
R23567:23569 Coq.Init.Logic <> :type_scope:x_'='_x not
R23541:23550 compcert.ia32.Asm <> exec_instr def
R23565:23566 compcert.backend.Asmgenproof0 <> m1 var
R23561:23563 compcert.backend.Asmgenproof0 <> rs1 var
R23558:23559 compcert.backend.Asmgenproof0 <> i1 var
R23555:23556 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R23552:23553 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.ge var
R23570:23573 compcert.ia32.Asm <> Next constr
R23579:23580 compcert.backend.Asmgenproof0 <> m2 var
R23575:23577 compcert.backend.Asmgenproof0 <> rs2 var
R23857:23874 compcert.backend.Asmgenproof0 <> exec_straight_step constr
R23857:23874 compcert.backend.Asmgenproof0 <> exec_straight_step constr
R23904:23920 compcert.backend.Asmgenproof0 <> exec_straight_two thm
R23904:23920 compcert.backend.Asmgenproof0 <> exec_straight_two thm
prf 24074:24094 <> exec_straight_steps_1
R24354:24357 compcert.common.Smallstep <> plus ind
R24384:24388 compcert.ia32.Asm <> State constr
R24394:24395 compcert.backend.Asmgenproof0 <> m' var
R24390:24392 compcert.backend.Asmgenproof0 <> rs' var
R24380:24381 compcert.common.Events <> E0 def
R24368:24372 compcert.ia32.Asm <> State constr
R24377:24377 compcert.backend.Asmgenproof0 <> m var
R24374:24375 compcert.backend.Asmgenproof0 <> rs var
R24364:24365 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.ge var
R24359:24362 compcert.ia32.Asm <> step ind
R24305:24313 compcert.backend.Asmgenproof0 <> code_tail ind
R24347:24347 compcert.backend.Asmgenproof0 <> c var
R24335:24341 compcert.ia32.Asm <> fn_code proj
R24343:24344 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R24316:24327 compcert.lib.Integers Int unsigned def
R24329:24331 compcert.backend.Asmgenproof0 <> ofs var
R24278:24280 Coq.Init.Logic <> :type_scope:x_'='_x not
R24254:24272 compcert.common.Globalenvs Genv find_funct_ptr def
R24277:24277 compcert.backend.Asmgenproof0 <> b var
R24274:24275 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.ge var
R24281:24284 Coq.Init.Datatypes <> Some constr
R24287:24294 compcert.common.AST <> Internal constr
R24296:24297 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R24235:24237 Coq.Init.Logic <> :type_scope:x_'='_x not
R24232:24232 compcert.ia32.Asm <> ::x_'#'_x not
R24233:24234 compcert.ia32.Asm <> PC constr
R24230:24231 compcert.backend.Asmgenproof0 <> rs var
R24238:24241 compcert.common.Values <> Vptr constr
R24245:24247 compcert.backend.Asmgenproof0 <> ofs var
R24243:24243 compcert.backend.Asmgenproof0 <> b var
R24188:24191 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R24162:24174 compcert.lib.Coqlib <> list_length_z def
R24177:24183 compcert.ia32.Asm <> fn_code proj
R24185:24186 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R24192:24207 compcert.lib.Integers Int max_unsigned def
R24126:24138 compcert.backend.Asmgenproof0 <> exec_straight ind
R24154:24155 compcert.backend.Asmgenproof0 <> m' var
R24150:24152 compcert.backend.Asmgenproof0 <> rs' var
R24147:24148 compcert.backend.Asmgenproof0 <> c' var
R24145:24145 compcert.backend.Asmgenproof0 <> m var
R24142:24143 compcert.backend.Asmgenproof0 <> rs var
R24140:24140 compcert.backend.Asmgenproof0 <> c var
R24437:24444 compcert.common.Smallstep <> plus_one thm
R24437:24444 compcert.common.Smallstep <> plus_one thm
R24480:24494 compcert.backend.Asmgenproof0 <> find_instr_tail thm
R24480:24494 compcert.backend.Asmgenproof0 <> find_instr_tail thm
R24513:24522 compcert.common.Smallstep <> plus_left' thm
R24513:24522 compcert.common.Smallstep <> plus_left' thm
R24558:24572 compcert.backend.Asmgenproof0 <> find_instr_tail thm
R24558:24572 compcert.backend.Asmgenproof0 <> find_instr_tail thm
R24614:24620 compcert.lib.Integers Int add def
R24626:24632 compcert.lib.Integers Int one def
R24614:24620 compcert.lib.Integers Int add def
R24626:24632 compcert.lib.Integers Int one def
R24699:24716 compcert.backend.Asmgenproof0 <> code_tail_next_int thm
R24699:24716 compcert.backend.Asmgenproof0 <> code_tail_next_int thm
prf 24759:24779 <> exec_straight_steps_2
R25039:25045 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25050:25056 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25077:25082 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25063:25065 Coq.Init.Logic <> :type_scope:x_'='_x not
R25060:25060 compcert.ia32.Asm <> ::x_'#'_x not
R25061:25062 compcert.ia32.Asm <> PC constr
R25057:25059 compcert.backend.Asmgenproof0 <> rs' var
R25066:25069 compcert.common.Values <> Vptr constr
R25073:25076 compcert.backend.Asmgenproof0 <> ofs' var
R25071:25071 compcert.backend.Asmgenproof0 <> b var
R25083:25091 compcert.backend.Asmgenproof0 <> code_tail ind
R25126:25127 compcert.backend.Asmgenproof0 <> c' var
R25114:25120 compcert.ia32.Asm <> fn_code proj
R25122:25123 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R25094:25105 compcert.lib.Integers Int unsigned def
R25107:25110 compcert.backend.Asmgenproof0 <> ofs' var
R24990:24998 compcert.backend.Asmgenproof0 <> code_tail ind
R25032:25032 compcert.backend.Asmgenproof0 <> c var
R25020:25026 compcert.ia32.Asm <> fn_code proj
R25028:25029 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R25001:25012 compcert.lib.Integers Int unsigned def
R25014:25016 compcert.backend.Asmgenproof0 <> ofs var
R24963:24965 Coq.Init.Logic <> :type_scope:x_'='_x not
R24939:24957 compcert.common.Globalenvs Genv find_funct_ptr def
R24962:24962 compcert.backend.Asmgenproof0 <> b var
R24959:24960 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.ge var
R24966:24969 Coq.Init.Datatypes <> Some constr
R24972:24979 compcert.common.AST <> Internal constr
R24981:24982 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R24920:24922 Coq.Init.Logic <> :type_scope:x_'='_x not
R24917:24917 compcert.ia32.Asm <> ::x_'#'_x not
R24918:24919 compcert.ia32.Asm <> PC constr
R24915:24916 compcert.backend.Asmgenproof0 <> rs var
R24923:24926 compcert.common.Values <> Vptr constr
R24930:24932 compcert.backend.Asmgenproof0 <> ofs var
R24928:24928 compcert.backend.Asmgenproof0 <> b var
R24873:24876 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R24847:24859 compcert.lib.Coqlib <> list_length_z def
R24862:24868 compcert.ia32.Asm <> fn_code proj
R24870:24871 compcert.backend.Asmgenproof0 <> STRAIGHTLINE.fn var
R24877:24892 compcert.lib.Integers Int max_unsigned def
R24811:24823 compcert.backend.Asmgenproof0 <> exec_straight ind
R24839:24840 compcert.backend.Asmgenproof0 <> m' var
R24835:24837 compcert.backend.Asmgenproof0 <> rs' var
R24832:24833 compcert.backend.Asmgenproof0 <> c' var
R24830:24830 compcert.backend.Asmgenproof0 <> m var
R24827:24828 compcert.backend.Asmgenproof0 <> rs var
R24825:24825 compcert.backend.Asmgenproof0 <> c var
R25170:25176 compcert.lib.Integers Int add def
R25182:25188 compcert.lib.Integers Int one def
R25170:25176 compcert.lib.Integers Int add def
R25182:25188 compcert.lib.Integers Int one def
R25239:25256 compcert.backend.Asmgenproof0 <> code_tail_next_int thm
R25239:25256 compcert.backend.Asmgenproof0 <> code_tail_next_int thm
R25303:25309 compcert.lib.Integers Int add def
R25315:25321 compcert.lib.Integers Int one def
R25303:25309 compcert.lib.Integers Int add def
R25315:25321 compcert.lib.Integers Int one def
R25385:25402 compcert.backend.Asmgenproof0 <> code_tail_next_int thm
R25385:25402 compcert.backend.Asmgenproof0 <> code_tail_next_int thm
R25428:25439 compcert.backend.Asmgenproof0 STRAIGHTLINE <> sec
sec 25495:25505 <> MATCH_STACK
var 25518:25519 MATCH_STACK ge
R25522:25530 compcert.backend.Mach <> genv def
ind 25544:25554 <> match_stack
constr 25593:25607 <> match_stack_nil
constr 25636:25651 <> match_stack_cons
R25557:25560 Coq.Init.Datatypes <> list ind
R25562:25576 compcert.backend.Mach <> stackframe ind
R25616:25626 compcert.backend.Asmgenproof0 <> match_stack ind
R25628:25630 Coq.Init.Datatypes <> nil constr
R25841:25851 compcert.backend.Asmgenproof0 <> match_stack ind
R25875:25878 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25854:25863 compcert.backend.Mach <> Stackframe constr
R25874:25874 compcert.backend.Asmgenproof0 <> c var
R25871:25872 compcert.backend.Asmgenproof0 <> ra var
R25868:25869 compcert.backend.Asmgenproof0 <> sp var
R25865:25866 compcert.backend.Asmgenproof0 <> fb var
R25879:25879 compcert.backend.Asmgenproof0 <> s var
R25818:25828 compcert.backend.Asmgenproof0 <> match_stack ind
R25830:25830 compcert.backend.Asmgenproof0 <> s var
R25798:25801 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R25796:25797 compcert.backend.Asmgenproof0 <> sp var
R25802:25807 compcert.common.Values <> Vundef constr
R25744:25760 compcert.backend.Asmgenproof0 <> transl_code_at_pc ind
R25784:25785 compcert.backend.Asmgenproof0 <> tc var
R25781:25782 compcert.backend.Asmgenproof0 <> tf var
R25775:25779 Coq.Init.Datatypes <> false constr
R25773:25773 compcert.backend.Asmgenproof0 <> c var
R25771:25771 compcert.backend.Asmgenproof0 <> f var
R25768:25769 compcert.backend.Asmgenproof0 <> fb var
R25765:25766 compcert.backend.Asmgenproof0 <> ra var
R25762:25763 compcert.backend.Asmgenproof0 <> MATCH_STACK.ge var
R25714:25716 Coq.Init.Logic <> :type_scope:x_'='_x not
R25689:25707 compcert.common.Globalenvs Genv find_funct_ptr def
R25712:25713 compcert.backend.Asmgenproof0 <> fb var
R25709:25710 compcert.backend.Asmgenproof0 <> MATCH_STACK.ge var
R25717:25720 Coq.Init.Datatypes <> Some constr
R25723:25730 compcert.common.AST <> Internal constr
R25732:25732 compcert.backend.Asmgenproof0 <> f var
prf 25890:25902 <> parent_sp_def
R25943:25946 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R25932:25940 compcert.backend.Mach <> parent_sp def
R25942:25942 compcert.backend.Asmgenproof0 <> s var
R25947:25952 compcert.common.Values <> Vundef constr
R25915:25925 compcert.backend.Asmgenproof0 <> match_stack ind
R25927:25927 compcert.backend.Asmgenproof0 <> s var
R25989:25993 compcert.common.Values <> Vzero def
prf 26026:26038 <> parent_ra_def
R26079:26082 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R26068:26076 compcert.backend.Mach <> parent_ra def
R26078:26078 compcert.backend.Asmgenproof0 <> s var
R26083:26088 compcert.common.Values <> Vundef constr
R26051:26061 compcert.backend.Asmgenproof0 <> match_stack ind
R26063:26063 compcert.backend.Asmgenproof0 <> s var
R26125:26129 compcert.common.Values <> Vzero def
prf 26176:26192 <> lessdef_parent_sp
R26260:26262 Coq.Init.Logic <> :type_scope:x_'='_x not
R26259:26259 compcert.backend.Asmgenproof0 <> v var
R26263:26271 compcert.backend.Mach <> parent_sp def
R26273:26273 compcert.backend.Asmgenproof0 <> s var
R26228:26238 compcert.common.Values Val lessdef ind
R26254:26254 compcert.backend.Asmgenproof0 <> v var
R26241:26249 compcert.backend.Mach <> parent_sp def
R26251:26251 compcert.backend.Asmgenproof0 <> s var
R26211:26221 compcert.backend.Asmgenproof0 <> match_stack ind
R26223:26223 compcert.backend.Asmgenproof0 <> s var
R26315:26327 compcert.backend.Asmgenproof0 <> parent_sp_def thm
R0:-1 compcert.backend.Asmgenproof0 <> y var
prf 26356:26372 <> lessdef_parent_ra
R26440:26442 Coq.Init.Logic <> :type_scope:x_'='_x not
R26439:26439 compcert.backend.Asmgenproof0 <> v var
R26443:26451 compcert.backend.Mach <> parent_ra def
R26453:26453 compcert.backend.Asmgenproof0 <> s var
R26408:26418 compcert.common.Values Val lessdef ind
R26434:26434 compcert.backend.Asmgenproof0 <> v var
R26421:26429 compcert.backend.Mach <> parent_ra def
R26431:26431 compcert.backend.Asmgenproof0 <> s var
R26391:26401 compcert.backend.Asmgenproof0 <> match_stack ind
R26403:26403 compcert.backend.Asmgenproof0 <> s var
R26495:26507 compcert.backend.Asmgenproof0 <> parent_ra_def thm
R0:-1 compcert.backend.Asmgenproof0 <> y var
R26534:26544 compcert.backend.Asmgenproof0 MATCH_STACK <> sec
