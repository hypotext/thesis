DIGEST NO
Fcompcert.backend.Selectionproof
R875:880 compcert.lib.Coqlib <> <> lib
R898:901 compcert.lib.Maps <> <> lib
R919:921 compcert.common.AST <> <> lib
R939:944 compcert.common.Errors <> <> lib
R962:969 compcert.lib.Integers <> <> lib
R987:992 compcert.common.Values <> <> lib
R1010:1015 compcert.common.Memory <> <> lib
R1033:1038 compcert.common.Events <> <> lib
R1056:1065 compcert.common.Globalenvs <> <> lib
R1083:1091 compcert.common.Smallstep <> <> lib
R1109:1114 compcert.common.Switch <> <> lib
R1132:1137 compcert.backend.Cminor <> <> lib
R1155:1156 compcert.ia32.Op <> <> lib
R1174:1182 compcert.backend.CminorSel <> <> lib
R1200:1207 compcert.ia32.SelectOp <> <> lib
R1225:1233 compcert.backend.SelectDiv <> <> lib
R1251:1260 compcert.backend.SelectLong <> <> lib
R1278:1286 compcert.backend.Selection <> <> lib
R1304:1316 compcert.ia32.SelectOpproof <> <> lib
R1334:1347 compcert.backend.SelectDivproof <> <> lib
R1365:1379 compcert.backend.SelectLongproof <> <> lib
sec 1540:1551 <> PRESERVATION
var 1564:1567 PRESERVATION prog
R1570:1583 compcert.backend.Cminor <> program def
var 1595:1599 PRESERVATION tprog
R1602:1618 compcert.backend.CminorSel <> program def
var 1625:1626 PRESERVATION ge
R1631:1644 compcert.common.Globalenvs Genv globalenv def
R1646:1649 compcert.backend.Selectionproof <> PRESERVATION.prog var
var 1656:1658 PRESERVATION tge
R1663:1676 compcert.common.Globalenvs Genv globalenv def
R1678:1682 compcert.backend.Selectionproof <> PRESERVATION.tprog var
var 1694:1695 PRESERVATION hf
R1698:1713 compcert.backend.SelectLong <> helper_functions rec
var 1727:1733 PRESERVATION HELPERS
R1736:1754 compcert.backend.SelectLongproof <> i64_helpers_correct def
R1760:1761 compcert.backend.Selectionproof <> PRESERVATION.hf var
R1756:1758 compcert.backend.Selectionproof <> PRESERVATION.tge var
var 1775:1784 PRESERVATION TRANSFPROG
R1836:1838 Coq.Init.Logic <> :type_scope:x_'='_x not
R1787:1811 compcert.common.AST <> transform_partial_program def
R1832:1835 compcert.backend.Selectionproof <> PRESERVATION.prog var
R1814:1823 compcert.backend.Selection <> sel_fundef def
R1828:1829 compcert.backend.Selectionproof <> PRESERVATION.ge var
R1825:1826 compcert.backend.Selectionproof <> PRESERVATION.hf var
R1839:1840 compcert.common.Errors <> OK constr
R1842:1846 compcert.backend.Selectionproof <> PRESERVATION.tprog var
prf 1856:1872 <> symbols_preserved
R1888:1892 compcert.common.AST <> ident def
R1918:1920 Coq.Init.Logic <> :type_scope:x_'='_x not
R1896:1911 compcert.common.Globalenvs Genv find_symbol def
R1917:1917 compcert.backend.Selectionproof <> s var
R1913:1915 compcert.backend.Selectionproof <> PRESERVATION.tge var
R1921:1936 compcert.common.Globalenvs Genv find_symbol def
R1941:1941 compcert.backend.Selectionproof <> s var
R1938:1939 compcert.backend.Selectionproof <> PRESERVATION.ge var
R1968:1998 compcert.common.Globalenvs Genv find_symbol_transf_partial thm
R1968:1998 compcert.common.Globalenvs Genv find_symbol_transf_partial thm
prf 2021:2043 <> function_ptr_translated
R2059:2063 compcert.common.Values <> block def
R2070:2082 compcert.backend.Cminor <> fundef def
R2127:2133 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2136:2137 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2173:2176 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2163:2165 Coq.Init.Logic <> :type_scope:x_'='_x not
R2138:2156 compcert.common.Globalenvs Genv find_funct_ptr def
R2162:2162 compcert.backend.Selectionproof <> b var
R2158:2160 compcert.backend.Selectionproof <> PRESERVATION.tge var
R2166:2169 Coq.Init.Datatypes <> Some constr
R2171:2172 compcert.backend.Selectionproof <> tf var
R2195:2197 Coq.Init.Logic <> :type_scope:x_'='_x not
R2177:2186 compcert.backend.Selection <> sel_fundef def
R2194:2194 compcert.backend.Selectionproof <> f var
R2191:2192 compcert.backend.Selectionproof <> PRESERVATION.ge var
R2188:2189 compcert.backend.Selectionproof <> PRESERVATION.hf var
R2198:2199 compcert.common.Errors <> OK constr
R2201:2202 compcert.backend.Selectionproof <> tf var
R2112:2114 Coq.Init.Logic <> :type_scope:x_'='_x not
R2088:2106 compcert.common.Globalenvs Genv find_funct_ptr def
R2111:2111 compcert.backend.Selectionproof <> b var
R2108:2109 compcert.backend.Selectionproof <> PRESERVATION.ge var
R2115:2118 Coq.Init.Datatypes <> Some constr
R2120:2120 compcert.backend.Selectionproof <> f var
R2231:2264 compcert.common.Globalenvs Genv find_funct_ptr_transf_partial thm
R2231:2264 compcert.common.Globalenvs Genv find_funct_ptr_transf_partial thm
prf 2286:2305 <> functions_translated
R2324:2326 compcert.common.Values <> val ind
R2333:2345 compcert.backend.Cminor <> fundef def
R2408:2414 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2417:2418 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2451:2454 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2441:2443 Coq.Init.Logic <> :type_scope:x_'='_x not
R2419:2433 compcert.common.Globalenvs Genv find_funct def
R2439:2440 compcert.backend.Selectionproof <> v' var
R2435:2437 compcert.backend.Selectionproof <> PRESERVATION.tge var
R2444:2447 Coq.Init.Datatypes <> Some constr
R2449:2450 compcert.backend.Selectionproof <> tf var
R2473:2475 Coq.Init.Logic <> :type_scope:x_'='_x not
R2455:2464 compcert.backend.Selection <> sel_fundef def
R2472:2472 compcert.backend.Selectionproof <> f var
R2469:2470 compcert.backend.Selectionproof <> PRESERVATION.ge var
R2466:2467 compcert.backend.Selectionproof <> PRESERVATION.hf var
R2476:2477 compcert.common.Errors <> OK constr
R2479:2480 compcert.backend.Selectionproof <> tf var
R2386:2396 compcert.common.Values Val lessdef ind
R2400:2401 compcert.backend.Selectionproof <> v' var
R2398:2398 compcert.backend.Selectionproof <> v var
R2371:2373 Coq.Init.Logic <> :type_scope:x_'='_x not
R2351:2365 compcert.common.Globalenvs Genv find_funct def
R2370:2370 compcert.backend.Selectionproof <> v var
R2367:2368 compcert.backend.Selectionproof <> PRESERVATION.ge var
R2374:2377 Coq.Init.Datatypes <> Some constr
R2379:2379 compcert.backend.Selectionproof <> f var
R2519:2548 compcert.common.Globalenvs Genv find_funct_transf_partial thm
R2519:2548 compcert.common.Globalenvs Genv find_funct_transf_partial thm
prf 2598:2620 <> sig_function_translated
R2677:2679 Coq.Init.Logic <> :type_scope:x_'='_x not
R2668:2673 compcert.backend.CminorSel <> funsig def
R2675:2676 compcert.backend.Selectionproof <> tf var
R2680:2692 compcert.backend.Cminor <> funsig def
R2694:2694 compcert.backend.Selectionproof <> f var
R2656:2658 Coq.Init.Logic <> :type_scope:x_'='_x not
R2638:2647 compcert.backend.Selection <> sel_fundef def
R2655:2655 compcert.backend.Selectionproof <> f var
R2652:2653 compcert.backend.Selectionproof <> PRESERVATION.ge var
R2649:2650 compcert.backend.Selectionproof <> PRESERVATION.hf var
R2659:2660 compcert.common.Errors <> OK constr
R2662:2663 compcert.backend.Selectionproof <> tf var
prf 2776:2805 <> stackspace_function_translated
R2871:2873 Coq.Init.Logic <> :type_scope:x_'='_x not
R2855:2867 compcert.backend.CminorSel <> fn_stackspace proj
R2869:2870 compcert.backend.Selectionproof <> tf var
R2874:2893 compcert.backend.Cminor <> fn_stackspace proj
R2895:2895 compcert.backend.Selectionproof <> f var
R2843:2845 Coq.Init.Logic <> :type_scope:x_'='_x not
R2823:2834 compcert.backend.Selection <> sel_function def
R2842:2842 compcert.backend.Selectionproof <> f var
R2839:2840 compcert.backend.Selectionproof <> PRESERVATION.ge var
R2836:2837 compcert.backend.Selectionproof <> PRESERVATION.hf var
R2846:2847 compcert.common.Errors <> OK constr
R2849:2850 compcert.backend.Selectionproof <> tf var
prf 2946:2962 <> varinfo_preserved
R3001:3003 Coq.Init.Logic <> :type_scope:x_'='_x not
R2977:2994 compcert.common.Globalenvs Genv find_var_info def
R3000:3000 compcert.backend.Selectionproof <> b var
R2996:2998 compcert.backend.Selectionproof <> PRESERVATION.tge var
R3004:3021 compcert.common.Globalenvs Genv find_var_info def
R3026:3026 compcert.backend.Selectionproof <> b var
R3023:3024 compcert.backend.Selectionproof <> PRESERVATION.ge var
R3053:3085 compcert.common.Globalenvs Genv find_var_info_transf_partial thm
R3053:3085 compcert.common.Globalenvs Genv find_var_info_transf_partial thm
prf 3107:3133 <> helper_implements_preserved
R3208:3224 compcert.backend.SelectLongproof <> helper_implements def
R3242:3245 compcert.backend.Selectionproof <> vres var
R3236:3240 compcert.backend.Selectionproof <> vargs var
R3233:3234 compcert.backend.Selectionproof <> sg var
R3230:3231 compcert.backend.Selectionproof <> id var
R3226:3228 compcert.backend.Selectionproof <> PRESERVATION.tge var
R3165:3181 compcert.backend.SelectLongproof <> helper_implements def
R3198:3201 compcert.backend.Selectionproof <> vres var
R3192:3196 compcert.backend.Selectionproof <> vargs var
R3189:3190 compcert.backend.Selectionproof <> sg var
R3186:3187 compcert.backend.Selectionproof <> id var
R3183:3184 compcert.backend.Selectionproof <> PRESERVATION.ge var
R3315:3337 compcert.backend.Selectionproof <> function_ptr_translated thm
R3424:3440 compcert.backend.Selectionproof <> symbols_preserved thm
R3424:3440 compcert.backend.Selectionproof <> symbols_preserved thm
R3496:3526 compcert.common.Events <> external_call_symbols_preserved thm
R3496:3526 compcert.common.Events <> external_call_symbols_preserved thm
R3545:3561 compcert.backend.Selectionproof <> symbols_preserved thm
R3545:3561 compcert.backend.Selectionproof <> symbols_preserved thm
R3570:3586 compcert.backend.Selectionproof <> varinfo_preserved thm
R3570:3586 compcert.backend.Selectionproof <> varinfo_preserved thm
prf 3601:3628 <> builtin_implements_preserved
R3704:3721 compcert.backend.SelectLongproof <> builtin_implements def
R3739:3742 compcert.backend.Selectionproof <> vres var
R3733:3737 compcert.backend.Selectionproof <> vargs var
R3730:3731 compcert.backend.Selectionproof <> sg var
R3727:3728 compcert.backend.Selectionproof <> id var
R3723:3725 compcert.backend.Selectionproof <> PRESERVATION.tge var
R3660:3677 compcert.backend.SelectLongproof <> builtin_implements def
R3694:3697 compcert.backend.Selectionproof <> vres var
R3688:3692 compcert.backend.Selectionproof <> vargs var
R3685:3686 compcert.backend.Selectionproof <> sg var
R3682:3683 compcert.backend.Selectionproof <> id var
R3679:3680 compcert.backend.Selectionproof <> PRESERVATION.ge var
R3761:3778 compcert.backend.SelectLongproof <> builtin_implements def
R3798:3828 compcert.common.Events <> external_call_symbols_preserved thm
R3798:3828 compcert.common.Events <> external_call_symbols_preserved thm
R3847:3863 compcert.backend.Selectionproof <> symbols_preserved thm
R3847:3863 compcert.backend.Selectionproof <> symbols_preserved thm
R3872:3888 compcert.backend.Selectionproof <> varinfo_preserved thm
R3872:3888 compcert.backend.Selectionproof <> varinfo_preserved thm
prf 3903:3927 <> helpers_correct_preserved
R3970:3988 compcert.backend.SelectLongproof <> i64_helpers_correct def
R3994:3994 compcert.backend.Selectionproof <> h var
R3990:3992 compcert.backend.Selectionproof <> PRESERVATION.tge var
R3942:3960 compcert.backend.SelectLongproof <> i64_helpers_correct def
R3965:3965 compcert.backend.Selectionproof <> h var
R3962:3963 compcert.backend.Selectionproof <> PRESERVATION.ge var
R4013:4031 compcert.backend.SelectLongproof <> i64_helpers_correct def
R4074:4077 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4074:4077 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4084:4087 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4084:4087 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4192:4219 compcert.backend.Selectionproof <> builtin_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4141:4167 compcert.backend.Selectionproof <> helper_implements_preserved thm
R4192:4219 compcert.backend.Selectionproof <> builtin_implements_preserved thm
R4192:4219 compcert.backend.Selectionproof <> builtin_implements_preserved thm
R4192:4219 compcert.backend.Selectionproof <> builtin_implements_preserved thm
R4192:4219 compcert.backend.Selectionproof <> builtin_implements_preserved thm
sec 4244:4251 PRESERVATION CMCONSTR
var 4264:4265 PRESERVATION.CMCONSTR sp
R4268:4270 compcert.common.Values <> val ind
var 4282:4282 PRESERVATION.CMCONSTR e
R4285:4287 compcert.backend.Cminor <> env def
var 4299:4299 PRESERVATION.CMCONSTR m
R4302:4304 compcert.common.Memory <> mem syndef
prf 4314:4334 <> eval_condexpr_of_expr
R4416:4428 compcert.backend.CminorSel <> eval_condexpr ind
R4465:4465 compcert.backend.Selectionproof <> b var
R4445:4460 compcert.backend.Selection <> condexpr_of_expr def
R4462:4462 compcert.backend.Selectionproof <> a var
R4441:4442 compcert.backend.Selectionproof <> le var
R4439:4439 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R4437:4437 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R4434:4435 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R4430:4432 compcert.backend.Selectionproof <> PRESERVATION.tge var
R4391:4405 compcert.common.Values Val bool_of_val ind
R4409:4409 compcert.backend.Selectionproof <> b var
R4407:4407 compcert.backend.Selectionproof <> v var
R4358:4366 compcert.backend.CminorSel <> eval_expr ind
R4384:4384 compcert.backend.Selectionproof <> v var
R4382:4382 compcert.backend.Selectionproof <> a var
R4379:4380 compcert.backend.Selectionproof <> le var
R4377:4377 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R4375:4375 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R4372:4373 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R4368:4370 compcert.backend.Selectionproof <> PRESERVATION.tge var
R4515:4530 compcert.backend.Selection <> condexpr_of_expr def
R4515:4530 compcert.backend.Selection <> condexpr_of_expr def
R4618:4643 compcert.common.Values Val bool_of_val_of_optbool thm
R4618:4643 compcert.common.Values Val bool_of_val_of_optbool thm
prf 4864:4872 <> eval_load
R4971:4979 compcert.backend.CminorSel <> eval_expr ind
R5010:5011 compcert.backend.Selectionproof <> v' var
R4996:4999 compcert.backend.Selection <> load def
R5007:5007 compcert.backend.Selectionproof <> a var
R5001:5005 compcert.backend.Selectionproof <> chunk var
R4992:4993 compcert.backend.Selectionproof <> le var
R4990:4990 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R4988:4988 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R4985:4986 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R4981:4983 compcert.backend.Selectionproof <> PRESERVATION.tge var
R4955:4957 Coq.Init.Logic <> :type_scope:x_'='_x not
R4936:4944 compcert.common.Memory Mem loadv def
R4954:4954 compcert.backend.Selectionproof <> v var
R4952:4952 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R4946:4950 compcert.backend.Selectionproof <> chunk var
R4958:4961 Coq.Init.Datatypes <> Some constr
R4963:4964 compcert.backend.Selectionproof <> v' var
R4903:4911 compcert.backend.CminorSel <> eval_expr ind
R4929:4929 compcert.backend.Selectionproof <> v var
R4927:4927 compcert.backend.Selectionproof <> a var
R4924:4925 compcert.backend.Selectionproof <> le var
R4922:4922 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R4920:4920 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R4917:4918 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R4913:4915 compcert.backend.Selectionproof <> PRESERVATION.tge var
R5099:5102 compcert.backend.Selection <> load def
R5120:5134 compcert.ia32.SelectOpproof <> eval_addressing thm
R5163:5172 Coq.Init.Logic <> refl_equal syndef
R5120:5134 compcert.ia32.SelectOpproof <> eval_addressing thm
R5163:5172 Coq.Init.Logic <> refl_equal syndef
R5191:5200 compcert.ia32.SelectOp <> addressing def
R5191:5200 compcert.ia32.SelectOp <> addressing def
R5243:5252 compcert.backend.CminorSel <> eval_Eload constr
R5243:5252 compcert.backend.CminorSel <> eval_Eload constr
prf 5275:5284 <> eval_store
R5436:5439 compcert.backend.CminorSel <> step ind
R5496:5500 compcert.backend.CminorSel <> State constr
R5517:5518 compcert.backend.Selectionproof <> m' var
R5515:5515 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R5512:5513 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R5510:5510 compcert.backend.Selectionproof <> k var
R5504:5508 compcert.backend.CminorSel <> Sskip constr
R5502:5502 compcert.backend.Selectionproof <> f var
R5492:5493 compcert.common.Events <> E0 def
R5446:5450 compcert.backend.CminorSel <> State constr
R5481:5481 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R5479:5479 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R5476:5477 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R5474:5474 compcert.backend.Selectionproof <> k var
R5455:5459 compcert.backend.Selection <> store def
R5470:5471 compcert.backend.Selectionproof <> a2 var
R5467:5468 compcert.backend.Selectionproof <> a1 var
R5461:5465 compcert.backend.Selectionproof <> chunk var
R5452:5452 compcert.backend.Selectionproof <> f var
R5441:5443 compcert.backend.Selectionproof <> PRESERVATION.tge var
R5420:5422 Coq.Init.Logic <> :type_scope:x_'='_x not
R5396:5405 compcert.common.Memory Mem storev def
R5418:5419 compcert.backend.Selectionproof <> v2 var
R5415:5416 compcert.backend.Selectionproof <> v1 var
R5413:5413 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R5407:5411 compcert.backend.Selectionproof <> chunk var
R5423:5426 Coq.Init.Datatypes <> Some constr
R5428:5429 compcert.backend.Selectionproof <> m' var
R5360:5368 compcert.backend.CminorSel <> eval_expr ind
R5388:5389 compcert.backend.Selectionproof <> v2 var
R5385:5386 compcert.backend.Selectionproof <> a2 var
R5381:5383 Coq.Init.Datatypes <> nil constr
R5379:5379 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R5377:5377 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R5374:5375 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R5370:5372 compcert.backend.Selectionproof <> PRESERVATION.tge var
R5324:5332 compcert.backend.CminorSel <> eval_expr ind
R5352:5353 compcert.backend.Selectionproof <> v1 var
R5349:5350 compcert.backend.Selectionproof <> a1 var
R5345:5347 Coq.Init.Datatypes <> nil constr
R5343:5343 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R5341:5341 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R5338:5339 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R5334:5336 compcert.backend.Selectionproof <> PRESERVATION.tge var
R5608:5612 compcert.backend.Selection <> store def
R5629:5643 compcert.ia32.SelectOpproof <> eval_addressing thm
R5672:5681 Coq.Init.Logic <> refl_equal syndef
R5629:5643 compcert.ia32.SelectOpproof <> eval_addressing thm
R5672:5681 Coq.Init.Logic <> refl_equal syndef
R5700:5709 compcert.ia32.SelectOp <> addressing def
R5700:5709 compcert.ia32.SelectOp <> addressing def
R5753:5762 compcert.backend.CminorSel <> step_store constr
R5753:5762 compcert.backend.CminorSel <> step_store constr
prf 5844:5856 <> eval_sel_unop
R5950:5956 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5959:5960 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6007:6010 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5961:5969 compcert.backend.CminorSel <> eval_expr ind
R6005:6006 compcert.backend.Selectionproof <> v' var
R5986:5993 compcert.backend.Selection <> sel_unop def
R6001:6002 compcert.backend.Selectionproof <> a1 var
R5998:5999 compcert.backend.Selectionproof <> op var
R5995:5996 compcert.backend.Selectionproof <> PRESERVATION.hf var
R5982:5983 compcert.backend.Selectionproof <> le var
R5980:5980 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R5978:5978 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R5975:5976 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R5971:5973 compcert.backend.Selectionproof <> PRESERVATION.tge var
R6011:6021 compcert.common.Values Val lessdef ind
R6025:6026 compcert.backend.Selectionproof <> v' var
R6023:6023 compcert.backend.Selectionproof <> v var
R5935:5937 Coq.Init.Logic <> :type_scope:x_'='_x not
R5920:5928 compcert.backend.Cminor <> eval_unop def
R5933:5934 compcert.backend.Selectionproof <> v1 var
R5930:5931 compcert.backend.Selectionproof <> op var
R5938:5941 Coq.Init.Datatypes <> Some constr
R5943:5943 compcert.backend.Selectionproof <> v var
R5885:5893 compcert.backend.CminorSel <> eval_expr ind
R5912:5913 compcert.backend.Selectionproof <> v1 var
R5909:5910 compcert.backend.Selectionproof <> a1 var
R5906:5907 compcert.backend.Selectionproof <> le var
R5904:5904 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R5902:5902 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R5899:5900 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R5895:5897 compcert.backend.Selectionproof <> PRESERVATION.tge var
R6096:6113 compcert.ia32.SelectOpproof <> eval_cast8unsigned thm
R6096:6113 compcert.ia32.SelectOpproof <> eval_cast8unsigned thm
R6130:6145 compcert.ia32.SelectOpproof <> eval_cast8signed thm
R6130:6145 compcert.ia32.SelectOpproof <> eval_cast8signed thm
R6162:6180 compcert.ia32.SelectOpproof <> eval_cast16unsigned thm
R6162:6180 compcert.ia32.SelectOpproof <> eval_cast16unsigned thm
R6197:6213 compcert.ia32.SelectOpproof <> eval_cast16signed thm
R6197:6213 compcert.ia32.SelectOpproof <> eval_cast16signed thm
R6230:6240 compcert.ia32.SelectOpproof <> eval_negint thm
R6230:6240 compcert.ia32.SelectOpproof <> eval_negint thm
R6257:6267 compcert.ia32.SelectOpproof <> eval_notint thm
R6257:6267 compcert.ia32.SelectOpproof <> eval_notint thm
R6284:6292 compcert.ia32.SelectOpproof <> eval_negf thm
R6284:6292 compcert.ia32.SelectOpproof <> eval_negf thm
R6309:6317 compcert.ia32.SelectOpproof <> eval_absf thm
R6309:6317 compcert.ia32.SelectOpproof <> eval_absf thm
R6334:6343 compcert.ia32.SelectOpproof <> eval_negfs thm
R6334:6343 compcert.ia32.SelectOpproof <> eval_negfs thm
R6360:6369 compcert.ia32.SelectOpproof <> eval_absfs thm
R6360:6369 compcert.ia32.SelectOpproof <> eval_absfs thm
R6386:6403 compcert.ia32.SelectOpproof <> eval_singleoffloat thm
R6386:6403 compcert.ia32.SelectOpproof <> eval_singleoffloat thm
R6420:6437 compcert.ia32.SelectOpproof <> eval_floatofsingle thm
R6420:6437 compcert.ia32.SelectOpproof <> eval_floatofsingle thm
R6455:6469 compcert.ia32.SelectOpproof <> eval_intoffloat thm
R6455:6469 compcert.ia32.SelectOpproof <> eval_intoffloat thm
R6488:6503 compcert.ia32.SelectOpproof <> eval_intuoffloat thm
R6488:6503 compcert.ia32.SelectOpproof <> eval_intuoffloat thm
R6522:6536 compcert.ia32.SelectOpproof <> eval_floatofint thm
R6522:6536 compcert.ia32.SelectOpproof <> eval_floatofint thm
R6555:6570 compcert.ia32.SelectOpproof <> eval_floatofintu thm
R6555:6570 compcert.ia32.SelectOpproof <> eval_floatofintu thm
R6589:6604 compcert.ia32.SelectOpproof <> eval_intofsingle thm
R6589:6604 compcert.ia32.SelectOpproof <> eval_intofsingle thm
R6623:6639 compcert.ia32.SelectOpproof <> eval_intuofsingle thm
R6623:6639 compcert.ia32.SelectOpproof <> eval_intuofsingle thm
R6658:6673 compcert.ia32.SelectOpproof <> eval_singleofint thm
R6658:6673 compcert.ia32.SelectOpproof <> eval_singleofint thm
R6692:6708 compcert.ia32.SelectOpproof <> eval_singleofintu thm
R6692:6708 compcert.ia32.SelectOpproof <> eval_singleofintu thm
R6727:6735 compcert.backend.SelectLongproof <> eval_negl thm
R6727:6735 compcert.backend.SelectLongproof <> eval_negl thm
R6754:6762 compcert.backend.SelectLongproof <> eval_notl thm
R6754:6762 compcert.backend.SelectLongproof <> eval_notl thm
R6781:6794 compcert.backend.SelectLongproof <> eval_intoflong thm
R6781:6794 compcert.backend.SelectLongproof <> eval_intoflong thm
R6813:6826 compcert.backend.SelectLongproof <> eval_longofint thm
R6813:6826 compcert.backend.SelectLongproof <> eval_longofint thm
R6845:6859 compcert.backend.SelectLongproof <> eval_longofintu thm
R6845:6859 compcert.backend.SelectLongproof <> eval_longofintu thm
R6878:6893 compcert.backend.SelectLongproof <> eval_longoffloat thm
R6878:6893 compcert.backend.SelectLongproof <> eval_longoffloat thm
R6912:6928 compcert.backend.SelectLongproof <> eval_longuoffloat thm
R6912:6928 compcert.backend.SelectLongproof <> eval_longuoffloat thm
R6947:6962 compcert.backend.SelectLongproof <> eval_floatoflong thm
R6947:6962 compcert.backend.SelectLongproof <> eval_floatoflong thm
R6981:6997 compcert.backend.SelectLongproof <> eval_floatoflongu thm
R6981:6997 compcert.backend.SelectLongproof <> eval_floatoflongu thm
R7016:7032 compcert.backend.SelectLongproof <> eval_longofsingle thm
R7016:7032 compcert.backend.SelectLongproof <> eval_longofsingle thm
R7051:7068 compcert.backend.SelectLongproof <> eval_longuofsingle thm
R7051:7068 compcert.backend.SelectLongproof <> eval_longuofsingle thm
R7087:7103 compcert.backend.SelectLongproof <> eval_singleoflong thm
R7087:7103 compcert.backend.SelectLongproof <> eval_singleoflong thm
R7122:7139 compcert.backend.SelectLongproof <> eval_singleoflongu thm
R7122:7139 compcert.backend.SelectLongproof <> eval_singleoflongu thm
prf 7161:7174 <> eval_sel_binop
R7315:7321 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7324:7325 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7376:7379 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7326:7334 compcert.backend.CminorSel <> eval_expr ind
R7374:7375 compcert.backend.Selectionproof <> v' var
R7351:7359 compcert.backend.Selection <> sel_binop def
R7370:7371 compcert.backend.Selectionproof <> a2 var
R7367:7368 compcert.backend.Selectionproof <> a1 var
R7364:7365 compcert.backend.Selectionproof <> op var
R7361:7362 compcert.backend.Selectionproof <> PRESERVATION.hf var
R7347:7348 compcert.backend.Selectionproof <> le var
R7345:7345 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R7343:7343 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R7340:7341 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R7336:7338 compcert.backend.Selectionproof <> PRESERVATION.tge var
R7380:7390 compcert.common.Values Val lessdef ind
R7394:7395 compcert.backend.Selectionproof <> v' var
R7392:7392 compcert.backend.Selectionproof <> v var
R7300:7302 Coq.Init.Logic <> :type_scope:x_'='_x not
R7279:7288 compcert.backend.Cminor <> eval_binop def
R7299:7299 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R7296:7297 compcert.backend.Selectionproof <> v2 var
R7293:7294 compcert.backend.Selectionproof <> v1 var
R7290:7291 compcert.backend.Selectionproof <> op var
R7303:7306 Coq.Init.Datatypes <> Some constr
R7308:7308 compcert.backend.Selectionproof <> v var
R7244:7252 compcert.backend.CminorSel <> eval_expr ind
R7271:7272 compcert.backend.Selectionproof <> v2 var
R7268:7269 compcert.backend.Selectionproof <> a2 var
R7265:7266 compcert.backend.Selectionproof <> le var
R7263:7263 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R7261:7261 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R7258:7259 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R7254:7256 compcert.backend.Selectionproof <> PRESERVATION.tge var
R7209:7217 compcert.backend.CminorSel <> eval_expr ind
R7236:7237 compcert.backend.Selectionproof <> v1 var
R7233:7234 compcert.backend.Selectionproof <> a1 var
R7230:7231 compcert.backend.Selectionproof <> le var
R7228:7228 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.m var
R7226:7226 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.e var
R7223:7224 compcert.backend.Selectionproof <> PRESERVATION.CMCONSTR.sp var
R7219:7221 compcert.backend.Selectionproof <> PRESERVATION.tge var
R7465:7472 compcert.ia32.SelectOpproof <> eval_add thm
R7465:7472 compcert.ia32.SelectOpproof <> eval_add thm
R7489:7496 compcert.ia32.SelectOpproof <> eval_sub thm
R7489:7496 compcert.ia32.SelectOpproof <> eval_sub thm
R7513:7520 compcert.ia32.SelectOpproof <> eval_mul thm
R7513:7520 compcert.ia32.SelectOpproof <> eval_mul thm
R7538:7546 compcert.backend.SelectDivproof <> eval_divs thm
R7538:7546 compcert.backend.SelectDivproof <> eval_divs thm
R7565:7573 compcert.backend.SelectDivproof <> eval_divu thm
R7565:7573 compcert.backend.SelectDivproof <> eval_divu thm
R7592:7600 compcert.backend.SelectDivproof <> eval_mods thm
R7592:7600 compcert.backend.SelectDivproof <> eval_mods thm
R7619:7627 compcert.backend.SelectDivproof <> eval_modu thm
R7619:7627 compcert.backend.SelectDivproof <> eval_modu thm
R7645:7652 compcert.ia32.SelectOpproof <> eval_and thm
R7645:7652 compcert.ia32.SelectOpproof <> eval_and thm
R7669:7675 compcert.ia32.SelectOpproof <> eval_or thm
R7669:7675 compcert.ia32.SelectOpproof <> eval_or thm
R7692:7699 compcert.ia32.SelectOpproof <> eval_xor thm
R7692:7699 compcert.ia32.SelectOpproof <> eval_xor thm
R7716:7723 compcert.ia32.SelectOpproof <> eval_shl thm
R7716:7723 compcert.ia32.SelectOpproof <> eval_shl thm
R7740:7747 compcert.ia32.SelectOpproof <> eval_shr thm
R7740:7747 compcert.ia32.SelectOpproof <> eval_shr thm
R7764:7772 compcert.ia32.SelectOpproof <> eval_shru thm
R7764:7772 compcert.ia32.SelectOpproof <> eval_shru thm
R7789:7797 compcert.ia32.SelectOpproof <> eval_addf thm
R7789:7797 compcert.ia32.SelectOpproof <> eval_addf thm
R7814:7822 compcert.ia32.SelectOpproof <> eval_subf thm
R7814:7822 compcert.ia32.SelectOpproof <> eval_subf thm
R7839:7847 compcert.ia32.SelectOpproof <> eval_mulf thm
R7839:7847 compcert.ia32.SelectOpproof <> eval_mulf thm
R7864:7872 compcert.backend.SelectDivproof <> eval_divf thm
R7864:7872 compcert.backend.SelectDivproof <> eval_divf thm
R7889:7898 compcert.ia32.SelectOpproof <> eval_addfs thm
R7889:7898 compcert.ia32.SelectOpproof <> eval_addfs thm
R7915:7924 compcert.ia32.SelectOpproof <> eval_subfs thm
R7915:7924 compcert.ia32.SelectOpproof <> eval_subfs thm
R7941:7950 compcert.ia32.SelectOpproof <> eval_mulfs thm
R7941:7950 compcert.ia32.SelectOpproof <> eval_mulfs thm
R7967:7976 compcert.backend.SelectDivproof <> eval_divfs thm
R7967:7976 compcert.backend.SelectDivproof <> eval_divfs thm
R7994:8002 compcert.backend.SelectLongproof <> eval_addl thm
R7994:8002 compcert.backend.SelectLongproof <> eval_addl thm
R8021:8029 compcert.backend.SelectLongproof <> eval_subl thm
R8021:8029 compcert.backend.SelectLongproof <> eval_subl thm
R8048:8056 compcert.backend.SelectLongproof <> eval_mull thm
R8048:8056 compcert.backend.SelectLongproof <> eval_mull thm
R8075:8083 compcert.backend.SelectLongproof <> eval_divl thm
R8075:8083 compcert.backend.SelectLongproof <> eval_divl thm
R8102:8111 compcert.backend.SelectLongproof <> eval_divlu thm
R8102:8111 compcert.backend.SelectLongproof <> eval_divlu thm
R8130:8138 compcert.backend.SelectLongproof <> eval_modl thm
R8130:8138 compcert.backend.SelectLongproof <> eval_modl thm
R8157:8166 compcert.backend.SelectLongproof <> eval_modlu thm
R8157:8166 compcert.backend.SelectLongproof <> eval_modlu thm
R8185:8193 compcert.backend.SelectLongproof <> eval_andl thm
R8185:8193 compcert.backend.SelectLongproof <> eval_andl thm
R8212:8219 compcert.backend.SelectLongproof <> eval_orl thm
R8212:8219 compcert.backend.SelectLongproof <> eval_orl thm
R8238:8246 compcert.backend.SelectLongproof <> eval_xorl thm
R8238:8246 compcert.backend.SelectLongproof <> eval_xorl thm
R8265:8273 compcert.backend.SelectLongproof <> eval_shll thm
R8265:8273 compcert.backend.SelectLongproof <> eval_shll thm
R8292:8300 compcert.backend.SelectLongproof <> eval_shrl thm
R8292:8300 compcert.backend.SelectLongproof <> eval_shrl thm
R8319:8328 compcert.backend.SelectLongproof <> eval_shrlu thm
R8319:8328 compcert.backend.SelectLongproof <> eval_shrlu thm
R8346:8354 compcert.ia32.SelectOpproof <> eval_comp thm
R8346:8354 compcert.ia32.SelectOpproof <> eval_comp thm
R8371:8380 compcert.ia32.SelectOpproof <> eval_compu thm
R8371:8380 compcert.ia32.SelectOpproof <> eval_compu thm
R8397:8406 compcert.ia32.SelectOpproof <> eval_compf thm
R8397:8406 compcert.ia32.SelectOpproof <> eval_compf thm
R8423:8433 compcert.ia32.SelectOpproof <> eval_compfs thm
R8423:8433 compcert.ia32.SelectOpproof <> eval_compfs thm
R8474:8482 compcert.backend.SelectLongproof <> eval_cmpl thm
R8474:8482 compcert.backend.SelectLongproof <> eval_cmpl thm
R8524:8533 compcert.backend.SelectLongproof <> eval_cmplu thm
R8524:8533 compcert.backend.SelectLongproof <> eval_cmplu thm
R8553:8560 compcert.backend.Selectionproof PRESERVATION.CMCONSTR <> sec
prf 8621:8648 <> expr_is_addrof_ident_correct
R8707:8709 Coq.Init.Logic <> :type_scope:x_'='_x not
R8706:8706 compcert.backend.Selectionproof <> e var
R8710:8722 compcert.backend.Cminor <> Econst constr
R8725:8742 compcert.backend.Cminor <> Oaddrsymbol constr
R8747:8754 compcert.lib.Integers Int zero def
R8744:8745 compcert.backend.Selectionproof <> id var
R8690:8692 Coq.Init.Logic <> :type_scope:x_'='_x not
R8668:8687 compcert.backend.Selection <> expr_is_addrof_ident def
R8689:8689 compcert.backend.Selectionproof <> e var
R8693:8696 Coq.Init.Datatypes <> Some constr
R8698:8699 compcert.backend.Selectionproof <> id var
R8787:8806 compcert.backend.Selection <> expr_is_addrof_ident def
R8903:8910 compcert.lib.Integers Int zero def
R8888:8898 compcert.lib.Integers Int eq_spec thm
R8881:8886 compcert.lib.Integers Int eq def
prf 8937:8957 <> classify_call_correct
R9064:9076 compcert.backend.Selection <> classify_call def
R9081:9081 compcert.backend.Selectionproof <> a var
R9078:9079 compcert.backend.Selectionproof <> PRESERVATION.ge var
R9092:9103 compcert.backend.Selection <> Call_default constr
R9108:9111 Coq.Init.Logic <> True ind
R9117:9124 compcert.backend.Selection <> Call_imm constr
R9132:9138 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9140:9141 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9173:9176 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9164:9166 Coq.Init.Logic <> :type_scope:x_'='_x not
R9142:9157 compcert.common.Globalenvs Genv find_symbol def
R9159:9160 compcert.backend.Selectionproof <> PRESERVATION.ge var
R9167:9170 Coq.Init.Datatypes <> Some constr
R9172:9172 compcert.backend.Selectionproof <> b var
R9178:9180 Coq.Init.Logic <> :type_scope:x_'='_x not
R9177:9177 compcert.backend.Selectionproof <> v var
R9181:9184 compcert.common.Values <> Vptr constr
R9188:9195 compcert.lib.Integers Int zero def
R9186:9186 compcert.backend.Selectionproof <> b var
R9201:9212 compcert.backend.Selection <> Call_builtin constr
R9222:9224 Coq.Init.Logic <> :type_scope:x_'='_x not
R9220:9221 compcert.backend.Selectionproof <> fd var
R9225:9232 compcert.common.AST <> External constr
R9042:9044 Coq.Init.Logic <> :type_scope:x_'='_x not
R9022:9036 compcert.common.Globalenvs Genv find_funct def
R9041:9041 compcert.backend.Selectionproof <> v var
R9038:9039 compcert.backend.Selectionproof <> PRESERVATION.ge var
R9045:9048 Coq.Init.Datatypes <> Some constr
R9050:9051 compcert.backend.Selectionproof <> fd var
R8986:9001 compcert.backend.Cminor <> eval_expr ind
R9015:9015 compcert.backend.Selectionproof <> v var
R9013:9013 compcert.backend.Selectionproof <> a var
R9011:9011 compcert.backend.Selectionproof <> m var
R9009:9009 compcert.backend.Selectionproof <> e var
R9006:9007 compcert.backend.Selectionproof <> sp var
R9003:9004 compcert.backend.Selectionproof <> PRESERVATION.ge var
R9260:9272 compcert.backend.Selection <> classify_call def
R9296:9315 compcert.backend.Selection <> expr_is_addrof_ident def
R9296:9315 compcert.backend.Selection <> expr_is_addrof_ident def
R9347:9374 compcert.backend.Selectionproof <> expr_is_addrof_ident_correct thm
R9434:9449 compcert.common.Globalenvs Genv find_symbol def
R9451:9452 compcert.backend.Selectionproof <> PRESERVATION.ge var
R9434:9449 compcert.common.Globalenvs Genv find_symbol def
R9451:9452 compcert.backend.Selectionproof <> PRESERVATION.ge var
R9484:9513 compcert.common.Globalenvs Genv find_funct_find_funct_ptr thm
R9484:9513 compcert.common.Globalenvs Genv find_funct_find_funct_ptr thm
R9582:9590 compcert.common.AST <> ef_inline def
R9582:9590 compcert.common.AST <> ef_inline def
ind 9715:9718 <> Rint
constr 9745:9754 <> Rint_intro
R9726:9728 compcert.common.Values <> val ind
R9721:9721 Coq.Numbers.BinNums <> Z ind
R9767:9770 compcert.backend.Selectionproof <> Rint ind
R9790:9793 compcert.common.Values <> Vint constr
R9795:9795 compcert.backend.Selectionproof <> n var
R9773:9784 compcert.lib.Integers Int unsigned def
R9786:9786 compcert.backend.Selectionproof <> n var
ind 9810:9814 <> Rlong
constr 9841:9851 <> Rlong_intro
R9822:9824 compcert.common.Values <> val ind
R9817:9817 Coq.Numbers.BinNums <> Z ind
R9864:9868 compcert.backend.Selectionproof <> Rlong ind
R9890:9894 compcert.common.Values <> Vlong constr
R9896:9896 compcert.backend.Selectionproof <> n var
R9871:9884 compcert.lib.Integers Int64 unsigned def
R9886:9886 compcert.backend.Selectionproof <> n var
sec 9909:9918 PRESERVATION SEL_SWITCH
var 9931:9941 PRESERVATION.SEL_SWITCH make_cmp_eq
R9957:9960 compcert.backend.CminorSel <> expr ind
R9952:9952 Coq.Numbers.BinNums <> Z ind
R9944:9947 compcert.backend.CminorSel <> expr ind
var 9972:9983 PRESERVATION.SEL_SWITCH make_cmp_ltu
R9999:10002 compcert.backend.CminorSel <> expr ind
R9994:9994 Coq.Numbers.BinNums <> Z ind
R9986:9989 compcert.backend.CminorSel <> expr ind
var 10014:10021 PRESERVATION.SEL_SWITCH make_sub
R10037:10040 compcert.backend.CminorSel <> expr ind
R10032:10032 Coq.Numbers.BinNums <> Z ind
R10024:10027 compcert.backend.CminorSel <> expr ind
var 10052:10062 PRESERVATION.SEL_SWITCH make_to_int
R10073:10076 compcert.backend.CminorSel <> expr ind
R10065:10068 compcert.backend.CminorSel <> expr ind
var 10088:10094 PRESERVATION.SEL_SWITCH modulus
R10097:10097 Coq.Numbers.BinNums <> Z ind
var 10109:10109 PRESERVATION.SEL_SWITCH R
R10117:10119 compcert.common.Values <> val ind
R10112:10112 Coq.Numbers.BinNums <> Z ind
var 10142:10157 PRESERVATION.SEL_SWITCH eval_make_cmp_eq
R10250:10258 compcert.backend.CminorSel <> eval_expr ind
R10293:10303 compcert.common.Values Val of_bool def
R10306:10308 compcert.lib.Coqlib <> zeq def
R10312:10312 compcert.backend.Selectionproof <> n var
R10310:10310 compcert.backend.Selectionproof <> i var
R10275:10285 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_eq var
R10289:10289 compcert.backend.Selectionproof <> n var
R10287:10287 compcert.backend.Selectionproof <> a var
R10271:10272 compcert.backend.Selectionproof <> le var
R10269:10269 compcert.backend.Selectionproof <> m var
R10267:10267 compcert.backend.Selectionproof <> e var
R10264:10265 compcert.backend.Selectionproof <> sp var
R10260:10262 compcert.backend.Selectionproof <> PRESERVATION.tge var
R10229:10232 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R10234:10236 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R10233:10233 compcert.backend.Selectionproof <> n var
R10233:10233 compcert.backend.Selectionproof <> n var
R10237:10243 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.modulus var
R10219:10219 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.R var
R10223:10223 compcert.backend.Selectionproof <> v var
R10221:10221 compcert.backend.Selectionproof <> i var
R10188:10196 compcert.backend.CminorSel <> eval_expr ind
R10214:10214 compcert.backend.Selectionproof <> v var
R10212:10212 compcert.backend.Selectionproof <> a var
R10209:10210 compcert.backend.Selectionproof <> le var
R10207:10207 compcert.backend.Selectionproof <> m var
R10205:10205 compcert.backend.Selectionproof <> e var
R10202:10203 compcert.backend.Selectionproof <> sp var
R10198:10200 compcert.backend.Selectionproof <> PRESERVATION.tge var
var 10328:10344 PRESERVATION.SEL_SWITCH eval_make_cmp_ltu
R10437:10445 compcert.backend.CminorSel <> eval_expr ind
R10481:10491 compcert.common.Values Val of_bool def
R10494:10496 compcert.lib.Coqlib <> zlt def
R10500:10500 compcert.backend.Selectionproof <> n var
R10498:10498 compcert.backend.Selectionproof <> i var
R10462:10473 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_ltu var
R10477:10477 compcert.backend.Selectionproof <> n var
R10475:10475 compcert.backend.Selectionproof <> a var
R10458:10459 compcert.backend.Selectionproof <> le var
R10456:10456 compcert.backend.Selectionproof <> m var
R10454:10454 compcert.backend.Selectionproof <> e var
R10451:10452 compcert.backend.Selectionproof <> sp var
R10447:10449 compcert.backend.Selectionproof <> PRESERVATION.tge var
R10416:10419 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R10421:10423 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R10420:10420 compcert.backend.Selectionproof <> n var
R10420:10420 compcert.backend.Selectionproof <> n var
R10424:10430 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.modulus var
R10406:10406 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.R var
R10410:10410 compcert.backend.Selectionproof <> v var
R10408:10408 compcert.backend.Selectionproof <> i var
R10375:10383 compcert.backend.CminorSel <> eval_expr ind
R10401:10401 compcert.backend.Selectionproof <> v var
R10399:10399 compcert.backend.Selectionproof <> a var
R10396:10397 compcert.backend.Selectionproof <> le var
R10394:10394 compcert.backend.Selectionproof <> m var
R10392:10392 compcert.backend.Selectionproof <> e var
R10389:10390 compcert.backend.Selectionproof <> sp var
R10385:10387 compcert.backend.Selectionproof <> PRESERVATION.tge var
var 10516:10528 PRESERVATION.SEL_SWITCH eval_make_sub
R10621:10627 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10630:10631 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10673:10676 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10632:10640 compcert.backend.CminorSel <> eval_expr ind
R10671:10672 compcert.backend.Selectionproof <> v' var
R10657:10664 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_sub var
R10668:10668 compcert.backend.Selectionproof <> n var
R10666:10666 compcert.backend.Selectionproof <> a var
R10653:10654 compcert.backend.Selectionproof <> le var
R10651:10651 compcert.backend.Selectionproof <> m var
R10649:10649 compcert.backend.Selectionproof <> e var
R10646:10647 compcert.backend.Selectionproof <> sp var
R10642:10644 compcert.backend.Selectionproof <> PRESERVATION.tge var
R10677:10677 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.R var
R10701:10702 compcert.backend.Selectionproof <> v' var
R10680:10680 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R10686:10691 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R10682:10684 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10681:10681 compcert.backend.Selectionproof <> i var
R10685:10685 compcert.backend.Selectionproof <> n var
R10692:10698 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.modulus var
R10600:10603 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R10605:10607 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R10604:10604 compcert.backend.Selectionproof <> n var
R10604:10604 compcert.backend.Selectionproof <> n var
R10608:10614 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.modulus var
R10590:10590 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.R var
R10594:10594 compcert.backend.Selectionproof <> v var
R10592:10592 compcert.backend.Selectionproof <> i var
R10559:10567 compcert.backend.CminorSel <> eval_expr ind
R10585:10585 compcert.backend.Selectionproof <> v var
R10583:10583 compcert.backend.Selectionproof <> a var
R10580:10581 compcert.backend.Selectionproof <> le var
R10578:10578 compcert.backend.Selectionproof <> m var
R10576:10576 compcert.backend.Selectionproof <> e var
R10573:10574 compcert.backend.Selectionproof <> sp var
R10569:10571 compcert.backend.Selectionproof <> PRESERVATION.tge var
var 10716:10731 PRESERVATION.SEL_SWITCH eval_make_to_int
R10802:10808 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10811:10812 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10855:10858 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10813:10821 compcert.backend.CminorSel <> eval_expr ind
R10853:10854 compcert.backend.Selectionproof <> v' var
R10838:10848 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_to_int var
R10850:10850 compcert.backend.Selectionproof <> a var
R10834:10835 compcert.backend.Selectionproof <> le var
R10832:10832 compcert.backend.Selectionproof <> m var
R10830:10830 compcert.backend.Selectionproof <> e var
R10827:10828 compcert.backend.Selectionproof <> sp var
R10823:10825 compcert.backend.Selectionproof <> PRESERVATION.tge var
R10859:10862 compcert.backend.Selectionproof <> Rint ind
R10884:10885 compcert.backend.Selectionproof <> v' var
R10866:10870 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R10865:10865 compcert.backend.Selectionproof <> i var
R10871:10881 compcert.lib.Integers Int modulus def
R10791:10791 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.R var
R10795:10795 compcert.backend.Selectionproof <> v var
R10793:10793 compcert.backend.Selectionproof <> i var
R10760:10768 compcert.backend.CminorSel <> eval_expr ind
R10786:10786 compcert.backend.Selectionproof <> v var
R10784:10784 compcert.backend.Selectionproof <> a var
R10781:10782 compcert.backend.Selectionproof <> le var
R10779:10779 compcert.backend.Selectionproof <> m var
R10777:10777 compcert.backend.Selectionproof <> e var
R10774:10775 compcert.backend.Selectionproof <> sp var
R10770:10772 compcert.backend.Selectionproof <> PRESERVATION.tge var
prf 10895:10916 <> sel_switch_correct_rec
R11082:11094 compcert.backend.CminorSel <> eval_exitexpr ind
R11175:11175 compcert.backend.Selectionproof <> x var
R11111:11120 compcert.backend.Selection <> sel_switch def
R11172:11172 compcert.backend.Selectionproof <> t var
R11168:11170 compcert.backend.Selectionproof <> arg var
R11156:11166 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_to_int var
R11147:11154 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_sub var
R11134:11145 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_ltu var
R11122:11132 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_eq var
R11107:11108 compcert.backend.Selectionproof <> le var
R11105:11105 compcert.backend.Selectionproof <> m var
R11103:11103 compcert.backend.Selectionproof <> e var
R11100:11101 compcert.backend.Selectionproof <> sp var
R11096:11098 compcert.backend.Selectionproof <> PRESERVATION.tge var
R11067:11069 Coq.Init.Logic <> :type_scope:x_'='_x not
R11041:11054 compcert.common.Switch <> comptree_match def
R11066:11066 compcert.backend.Selectionproof <> t var
R11064:11064 compcert.backend.Selectionproof <> i var
R11056:11062 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.modulus var
R11070:11073 Coq.Init.Datatypes <> Some constr
R11075:11075 compcert.backend.Selectionproof <> x var
R11023:11025 Coq.Init.Logic <> :type_scope:x_'='_x not
R11007:11015 Coq.Lists.List <> nth_error def
R11020:11022 compcert.backend.Selectionproof <> arg var
R11017:11018 compcert.backend.Selectionproof <> le var
R11026:11029 Coq.Init.Datatypes <> Some constr
R11031:11034 compcert.backend.Selectionproof <> varg var
R10980:10990 compcert.common.Switch <> wf_comptree ind
R11000:11000 compcert.backend.Selectionproof <> t var
R10992:10998 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.modulus var
R10947:10947 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.R var
R10951:10954 compcert.backend.Selectionproof <> varg var
R10949:10949 compcert.backend.Selectionproof <> i var
R11352:11360 compcert.backend.CminorSel <> eval_expr ind
R11409:11419 compcert.common.Values Val of_bool def
R11422:11424 compcert.lib.Coqlib <> zeq def
R11377:11387 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_eq var
R11390:11396 compcert.backend.CminorSel <> Eletvar constr
R11362:11364 compcert.backend.Selectionproof <> PRESERVATION.tge var
R11352:11360 compcert.backend.CminorSel <> eval_expr ind
R11409:11419 compcert.common.Values Val of_bool def
R11422:11424 compcert.lib.Coqlib <> zeq def
R11377:11387 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_eq var
R11390:11396 compcert.backend.CminorSel <> Eletvar constr
R11362:11364 compcert.backend.Selectionproof <> PRESERVATION.tge var
R11447:11462 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.eval_make_cmp_eq var
R11447:11462 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.eval_make_cmp_eq var
R11531:11533 compcert.lib.Coqlib <> zeq def
R11502:11517 compcert.backend.CminorSel <> eval_XEcondition constr
R11531:11533 compcert.lib.Coqlib <> zeq def
R11502:11517 compcert.backend.CminorSel <> eval_XEcondition constr
R11553:11573 compcert.backend.Selectionproof <> eval_condexpr_of_expr thm
R11553:11573 compcert.backend.Selectionproof <> eval_condexpr_of_expr thm
R11593:11595 compcert.lib.Coqlib <> zeq def
R11593:11595 compcert.lib.Coqlib <> zeq def
R11637:11639 compcert.lib.Coqlib <> zeq def
R11637:11639 compcert.lib.Coqlib <> zeq def
R11744:11752 compcert.backend.CminorSel <> eval_expr ind
R11802:11812 compcert.common.Values Val of_bool def
R11815:11817 compcert.lib.Coqlib <> zlt def
R11769:11780 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_ltu var
R11783:11789 compcert.backend.CminorSel <> Eletvar constr
R11754:11756 compcert.backend.Selectionproof <> PRESERVATION.tge var
R11744:11752 compcert.backend.CminorSel <> eval_expr ind
R11802:11812 compcert.common.Values Val of_bool def
R11815:11817 compcert.lib.Coqlib <> zlt def
R11769:11780 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_ltu var
R11783:11789 compcert.backend.CminorSel <> Eletvar constr
R11754:11756 compcert.backend.Selectionproof <> PRESERVATION.tge var
R11840:11856 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.eval_make_cmp_ltu var
R11840:11856 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.eval_make_cmp_ltu var
R11925:11927 compcert.lib.Coqlib <> zlt def
R11896:11911 compcert.backend.CminorSel <> eval_XEcondition constr
R11925:11927 compcert.lib.Coqlib <> zlt def
R11896:11911 compcert.backend.CminorSel <> eval_XEcondition constr
R11947:11967 compcert.backend.Selectionproof <> eval_condexpr_of_expr thm
R11947:11967 compcert.backend.Selectionproof <> eval_condexpr_of_expr thm
R11987:11989 compcert.lib.Coqlib <> zlt def
R11987:11989 compcert.lib.Coqlib <> zlt def
R12031:12033 compcert.lib.Coqlib <> zlt def
R12031:12033 compcert.lib.Coqlib <> zlt def
R12139:12151 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.eval_make_sub var
R12139:12151 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.eval_make_sub var
R12172:12183 compcert.backend.CminorSel <> eval_Eletvar constr
R12172:12183 compcert.backend.CminorSel <> eval_Eletvar constr
R12268:12268 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R12276:12281 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R12270:12272 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R12282:12288 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.modulus var
R12268:12268 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R12276:12281 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R12270:12272 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R12282:12288 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.modulus var
R12307:12315 compcert.backend.CminorSel <> eval_expr ind
R12370:12380 compcert.common.Values Val of_bool def
R12383:12385 compcert.lib.Coqlib <> zlt def
R12340:12351 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_ltu var
R12354:12360 compcert.backend.CminorSel <> Eletvar constr
R12362:12362 Coq.Init.Datatypes <> O constr
R12331:12334 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12317:12319 compcert.backend.Selectionproof <> PRESERVATION.tge var
R12307:12315 compcert.backend.CminorSel <> eval_expr ind
R12370:12380 compcert.common.Values Val of_bool def
R12383:12385 compcert.lib.Coqlib <> zlt def
R12340:12351 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_ltu var
R12354:12360 compcert.backend.CminorSel <> Eletvar constr
R12362:12362 Coq.Init.Datatypes <> O constr
R12331:12334 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12317:12319 compcert.backend.Selectionproof <> PRESERVATION.tge var
R12408:12424 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.eval_make_cmp_ltu var
R12408:12424 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.eval_make_cmp_ltu var
R12517:12519 compcert.lib.Coqlib <> zlt def
R12488:12503 compcert.backend.CminorSel <> eval_XEcondition constr
R12517:12519 compcert.lib.Coqlib <> zlt def
R12488:12503 compcert.backend.CminorSel <> eval_XEcondition constr
R12538:12558 compcert.backend.Selectionproof <> eval_condexpr_of_expr thm
R12538:12558 compcert.backend.Selectionproof <> eval_condexpr_of_expr thm
R12578:12580 compcert.lib.Coqlib <> zlt def
R12578:12580 compcert.lib.Coqlib <> zlt def
R12621:12623 compcert.lib.Coqlib <> zlt def
R12621:12623 compcert.lib.Coqlib <> zlt def
R12653:12668 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.eval_make_to_int var
R12689:12695 compcert.backend.CminorSel <> Eletvar constr
R12697:12697 Coq.Init.Datatypes <> O constr
R12680:12683 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12653:12668 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.eval_make_to_int var
R12689:12695 compcert.backend.CminorSel <> Eletvar constr
R12697:12697 Coq.Init.Datatypes <> O constr
R12680:12683 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
prf 12843:12860 <> sel_switch_correct
R13030:13042 compcert.backend.CminorSel <> eval_exitexpr ind
R13144:13156 compcert.common.Switch <> switch_target def
R13164:13168 compcert.backend.Selectionproof <> cases var
R13160:13162 compcert.backend.Selectionproof <> dfl var
R13158:13158 compcert.backend.Selectionproof <> i var
R13064:13068 compcert.backend.CminorSel <> XElet constr
R13075:13084 compcert.backend.Selection <> sel_switch def
R13134:13134 compcert.backend.Selectionproof <> t var
R13132:13132 Coq.Init.Datatypes <> O constr
R13120:13130 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_to_int var
R13111:13118 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_sub var
R13098:13109 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_ltu var
R13086:13096 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.make_cmp_eq var
R13070:13072 compcert.backend.Selectionproof <> arg var
R13055:13056 compcert.backend.Selectionproof <> le var
R13053:13053 compcert.backend.Selectionproof <> m var
R13051:13051 compcert.backend.Selectionproof <> e var
R13048:13049 compcert.backend.Selectionproof <> sp var
R13044:13046 compcert.backend.Selectionproof <> PRESERVATION.tge var
R13009:13012 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R13014:13016 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R13013:13013 compcert.backend.Selectionproof <> i var
R13013:13013 compcert.backend.Selectionproof <> i var
R13017:13023 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.modulus var
R12994:12994 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.R var
R12998:13001 compcert.backend.Selectionproof <> varg var
R12996:12996 compcert.backend.Selectionproof <> i var
R12956:12964 compcert.backend.CminorSel <> eval_expr ind
R12984:12987 compcert.backend.Selectionproof <> varg var
R12980:12982 compcert.backend.Selectionproof <> arg var
R12977:12978 compcert.backend.Selectionproof <> le var
R12975:12975 compcert.backend.Selectionproof <> m var
R12973:12973 compcert.backend.Selectionproof <> e var
R12970:12971 compcert.backend.Selectionproof <> sp var
R12966:12968 compcert.backend.Selectionproof <> PRESERVATION.tge var
R12943:12945 Coq.Init.Logic <> :type_scope:x_'='_x not
R12908:12922 compcert.common.Switch <> validate_switch def
R12942:12942 compcert.backend.Selectionproof <> t var
R12936:12940 compcert.backend.Selectionproof <> cases var
R12932:12934 compcert.backend.Selectionproof <> dfl var
R12924:12930 compcert.backend.Selectionproof <> PRESERVATION.SEL_SWITCH.modulus var
R12946:12949 Coq.Init.Datatypes <> true constr
R13197:13219 compcert.common.Switch <> validate_switch_correct thm
R13280:13301 compcert.backend.Selectionproof <> sel_switch_correct_rec thm
R13280:13301 compcert.backend.Selectionproof <> sel_switch_correct_rec thm
R13321:13330 compcert.backend.Selectionproof PRESERVATION.SEL_SWITCH <> sec
prf 13340:13361 <> sel_switch_int_correct
R13498:13510 compcert.backend.CminorSel <> eval_exitexpr ind
R13560:13572 compcert.common.Switch <> switch_target def
R13595:13599 compcert.backend.Selectionproof <> cases var
R13591:13593 compcert.backend.Selectionproof <> dfl var
R13575:13586 compcert.lib.Integers Int unsigned def
R13588:13588 compcert.backend.Selectionproof <> i var
R13527:13531 compcert.backend.CminorSel <> XElet constr
R13538:13551 compcert.backend.Selection <> sel_switch_int def
R13555:13555 compcert.backend.Selectionproof <> t var
R13553:13553 Coq.Init.Datatypes <> O constr
R13533:13535 compcert.backend.Selectionproof <> arg var
R13523:13524 compcert.backend.Selectionproof <> le var
R13521:13521 compcert.backend.Selectionproof <> m var
R13519:13519 compcert.backend.Selectionproof <> e var
R13516:13517 compcert.backend.Selectionproof <> sp var
R13512:13514 compcert.backend.Selectionproof <> PRESERVATION.tge var
R13456:13464 compcert.backend.CminorSel <> eval_expr ind
R13485:13488 compcert.common.Values <> Vint constr
R13490:13490 compcert.backend.Selectionproof <> i var
R13480:13482 compcert.backend.Selectionproof <> arg var
R13477:13478 compcert.backend.Selectionproof <> le var
R13475:13475 compcert.backend.Selectionproof <> m var
R13473:13473 compcert.backend.Selectionproof <> e var
R13470:13471 compcert.backend.Selectionproof <> sp var
R13466:13468 compcert.backend.Selectionproof <> PRESERVATION.tge var
R13443:13445 Coq.Init.Logic <> :type_scope:x_'='_x not
R13404:13418 compcert.common.Switch <> validate_switch def
R13442:13442 compcert.backend.Selectionproof <> t var
R13436:13440 compcert.backend.Selectionproof <> cases var
R13432:13434 compcert.backend.Selectionproof <> dfl var
R13420:13430 compcert.lib.Integers Int modulus def
R13446:13449 Coq.Init.Datatypes <> true constr
R13663:13671 compcert.backend.CminorSel <> eval_expr ind
R13713:13716 compcert.common.Values <> Vint constr
R13718:13718 compcert.backend.Selectionproof <> n var
R13688:13690 compcert.backend.CminorSel <> Eop constr
R13706:13709 compcert.backend.CminorSel <> Enil constr
R13693:13701 compcert.ia32.Op <> Ointconst constr
R13703:13703 compcert.backend.Selectionproof <> n var
R13684:13685 compcert.backend.Selectionproof <> le var
R13682:13682 compcert.backend.Selectionproof <> m var
R13680:13680 compcert.backend.Selectionproof <> e var
R13677:13678 compcert.backend.Selectionproof <> sp var
R13673:13675 compcert.backend.Selectionproof <> PRESERVATION.tge var
R13663:13671 compcert.backend.CminorSel <> eval_expr ind
R13713:13716 compcert.common.Values <> Vint constr
R13718:13718 compcert.backend.Selectionproof <> n var
R13688:13690 compcert.backend.CminorSel <> Eop constr
R13706:13709 compcert.backend.CminorSel <> Enil constr
R13693:13701 compcert.ia32.Op <> Ointconst constr
R13703:13703 compcert.backend.Selectionproof <> n var
R13684:13685 compcert.backend.Selectionproof <> le var
R13682:13682 compcert.backend.Selectionproof <> m var
R13680:13680 compcert.backend.Selectionproof <> e var
R13677:13678 compcert.backend.Selectionproof <> sp var
R13673:13675 compcert.backend.Selectionproof <> PRESERVATION.tge var
R13818:13821 compcert.backend.Selectionproof <> Rint ind
R13788:13805 compcert.backend.Selectionproof <> sel_switch_correct thm
R13818:13821 compcert.backend.Selectionproof <> Rint ind
R13788:13805 compcert.backend.Selectionproof <> sel_switch_correct thm
R13881:13889 compcert.ia32.SelectOpproof <> eval_comp thm
R13922:13929 compcert.lib.Integers Int repr def
R13922:13929 compcert.lib.Integers Int repr def
R13958:13960 compcert.lib.Integers <> Ceq constr
R14002:14008 compcert.common.Values Val cmp def
R14073:14080 compcert.lib.Integers Int repr def
R14073:14080 compcert.lib.Integers Int repr def
R14057:14067 compcert.lib.Integers Int eq_spec thm
R14050:14055 compcert.lib.Integers Int eq def
R14114:14130 compcert.lib.Integers Int unsigned_repr thm
R14114:14130 compcert.lib.Integers Int unsigned_repr thm
R14140:14151 compcert.lib.Coqlib <> proj_sumbool def
R14162:14169 compcert.lib.Coqlib <> zeq_true thm
R14162:14169 compcert.lib.Coqlib <> zeq_true thm
R14188:14203 compcert.lib.Integers Int max_unsigned def
R14222:14233 compcert.lib.Coqlib <> proj_sumbool def
R14244:14252 compcert.lib.Coqlib <> zeq_false thm
R14244:14252 compcert.lib.Coqlib <> zeq_false thm
R14297:14313 compcert.lib.Integers Int repr_unsigned thm
R14297:14313 compcert.lib.Integers Int repr_unsigned thm
R14381:14390 compcert.ia32.SelectOpproof <> eval_compu thm
R14423:14430 compcert.lib.Integers Int repr def
R14423:14430 compcert.lib.Integers Int repr def
R14459:14461 compcert.lib.Integers <> Clt constr
R14503:14510 compcert.common.Values Val cmpu def
R14539:14545 compcert.lib.Integers Int ltu def
R14561:14577 compcert.lib.Integers Int unsigned_repr thm
R14561:14577 compcert.lib.Integers Int unsigned_repr thm
R14598:14600 compcert.lib.Coqlib <> zlt def
R14603:14614 compcert.lib.Integers Int unsigned def
R14598:14600 compcert.lib.Coqlib <> zlt def
R14603:14614 compcert.lib.Integers Int unsigned def
R14647:14662 compcert.lib.Integers Int max_unsigned def
R14721:14728 compcert.ia32.SelectOpproof <> eval_sub thm
R14761:14768 compcert.lib.Integers Int repr def
R14761:14768 compcert.lib.Integers Int repr def
R14864:14864 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R14884:14889 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R14880:14882 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14865:14876 compcert.lib.Integers Int unsigned def
R14890:14900 compcert.lib.Integers Int modulus def
R14914:14925 compcert.lib.Integers Int unsigned def
R14928:14934 compcert.lib.Integers Int sub def
R14940:14947 compcert.lib.Integers Int repr def
R14914:14925 compcert.lib.Integers Int unsigned def
R14928:14934 compcert.lib.Integers Int sub def
R14940:14947 compcert.lib.Integers Int repr def
R14864:14864 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R14884:14889 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R14880:14882 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14865:14876 compcert.lib.Integers Int unsigned def
R14890:14900 compcert.lib.Integers Int modulus def
R14979:14985 compcert.lib.Integers Int sub def
R14996:15015 compcert.lib.Integers Int unsigned_repr_eq thm
R14996:15015 compcert.lib.Integers Int unsigned_repr_eq thm
R15045:15061 compcert.lib.Integers Int unsigned_repr thm
R15045:15061 compcert.lib.Integers Int unsigned_repr thm
R15071:15086 compcert.lib.Integers Int max_unsigned def
R15192:15209 compcert.lib.Integers Int unsigned_range thm
R15171:15180 compcert.lib.Coqlib <> Zmod_small thm
R15171:15180 compcert.lib.Coqlib <> Zmod_small thm
R15192:15209 compcert.lib.Integers Int unsigned_range thm
R15250:15267 compcert.lib.Integers Int unsigned_range thm
R15250:15267 compcert.lib.Integers Int unsigned_range thm
prf 15282:15304 <> sel_switch_long_correct
R15444:15456 compcert.backend.CminorSel <> eval_exitexpr ind
R15510:15522 compcert.common.Switch <> switch_target def
R15547:15551 compcert.backend.Selectionproof <> cases var
R15543:15545 compcert.backend.Selectionproof <> dfl var
R15525:15538 compcert.lib.Integers Int64 unsigned def
R15540:15540 compcert.backend.Selectionproof <> i var
R15473:15477 compcert.backend.CminorSel <> XElet constr
R15484:15498 compcert.backend.Selection <> sel_switch_long def
R15505:15505 compcert.backend.Selectionproof <> t var
R15503:15503 Coq.Init.Datatypes <> O constr
R15500:15501 compcert.backend.Selectionproof <> PRESERVATION.hf var
R15479:15481 compcert.backend.Selectionproof <> arg var
R15469:15470 compcert.backend.Selectionproof <> le var
R15467:15467 compcert.backend.Selectionproof <> m var
R15465:15465 compcert.backend.Selectionproof <> e var
R15462:15463 compcert.backend.Selectionproof <> sp var
R15458:15460 compcert.backend.Selectionproof <> PRESERVATION.tge var
R15401:15409 compcert.backend.CminorSel <> eval_expr ind
R15430:15434 compcert.common.Values <> Vlong constr
R15436:15436 compcert.backend.Selectionproof <> i var
R15425:15427 compcert.backend.Selectionproof <> arg var
R15422:15423 compcert.backend.Selectionproof <> le var
R15420:15420 compcert.backend.Selectionproof <> m var
R15418:15418 compcert.backend.Selectionproof <> e var
R15415:15416 compcert.backend.Selectionproof <> sp var
R15411:15413 compcert.backend.Selectionproof <> PRESERVATION.tge var
R15388:15390 Coq.Init.Logic <> :type_scope:x_'='_x not
R15347:15361 compcert.common.Switch <> validate_switch def
R15387:15387 compcert.backend.Selectionproof <> t var
R15381:15385 compcert.backend.Selectionproof <> cases var
R15377:15379 compcert.backend.Selectionproof <> dfl var
R15363:15375 compcert.lib.Integers Int64 modulus def
R15391:15394 Coq.Init.Datatypes <> true constr
R15609:15613 compcert.backend.Selectionproof <> Rlong ind
R15579:15596 compcert.backend.Selectionproof <> sel_switch_correct thm
R15609:15613 compcert.backend.Selectionproof <> Rlong ind
R15579:15596 compcert.backend.Selectionproof <> sel_switch_correct thm
R15672:15680 compcert.backend.SelectLongproof <> eval_cmpl thm
R15672:15680 compcert.backend.SelectLongproof <> eval_cmpl thm
R15728:15737 compcert.lib.Integers Int64 repr def
R15702:15715 compcert.backend.SelectLongproof <> eval_longconst thm
R15728:15737 compcert.lib.Integers Int64 repr def
R15702:15715 compcert.backend.SelectLongproof <> eval_longconst thm
R15759:15766 compcert.common.Values Val cmpl def
R15801:15808 compcert.lib.Integers Int64 eq def
R15822:15840 compcert.lib.Integers Int64 unsigned_repr thm
R15822:15840 compcert.lib.Integers Int64 unsigned_repr thm
R15853:15855 compcert.lib.Coqlib <> zeq def
R15858:15871 compcert.lib.Integers Int64 unsigned def
R15853:15855 compcert.lib.Coqlib <> zeq def
R15858:15871 compcert.lib.Integers Int64 unsigned def
R15897:15914 compcert.lib.Integers Int64 max_unsigned def
R15973:15982 compcert.backend.SelectLongproof <> eval_cmplu thm
R15973:15982 compcert.backend.SelectLongproof <> eval_cmplu thm
R16030:16039 compcert.lib.Integers Int64 repr def
R16004:16017 compcert.backend.SelectLongproof <> eval_longconst thm
R16030:16039 compcert.lib.Integers Int64 repr def
R16004:16017 compcert.backend.SelectLongproof <> eval_longconst thm
R16061:16069 compcert.common.Values Val cmplu def
R16104:16112 compcert.lib.Integers Int64 ltu def
R16126:16144 compcert.lib.Integers Int64 unsigned_repr thm
R16126:16144 compcert.lib.Integers Int64 unsigned_repr thm
R16157:16159 compcert.lib.Coqlib <> zlt def
R16162:16175 compcert.lib.Integers Int64 unsigned def
R16157:16159 compcert.lib.Coqlib <> zlt def
R16162:16175 compcert.lib.Integers Int64 unsigned def
R16201:16218 compcert.lib.Integers Int64 max_unsigned def
R16277:16285 compcert.backend.SelectLongproof <> eval_subl thm
R16295:16301 compcert.backend.Selectionproof <> PRESERVATION.HELPERS var
R16295:16301 compcert.backend.Selectionproof <> PRESERVATION.HELPERS var
R16349:16358 compcert.lib.Integers Int64 repr def
R16323:16336 compcert.backend.SelectLongproof <> eval_longconst thm
R16349:16358 compcert.lib.Integers Int64 repr def
R16323:16336 compcert.backend.SelectLongproof <> eval_longconst thm
R16455:16455 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R16477:16482 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R16473:16475 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R16456:16469 compcert.lib.Integers Int64 unsigned def
R16483:16495 compcert.lib.Integers Int64 modulus def
R16509:16522 compcert.lib.Integers Int64 unsigned def
R16525:16533 compcert.lib.Integers Int64 sub def
R16539:16548 compcert.lib.Integers Int64 repr def
R16509:16522 compcert.lib.Integers Int64 unsigned def
R16525:16533 compcert.lib.Integers Int64 sub def
R16539:16548 compcert.lib.Integers Int64 repr def
R16455:16455 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R16477:16482 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R16473:16475 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R16456:16469 compcert.lib.Integers Int64 unsigned def
R16483:16495 compcert.lib.Integers Int64 modulus def
R16580:16588 compcert.lib.Integers Int64 sub def
R16599:16620 compcert.lib.Integers Int64 unsigned_repr_eq thm
R16599:16620 compcert.lib.Integers Int64 unsigned_repr_eq thm
R16650:16668 compcert.lib.Integers Int64 unsigned_repr thm
R16650:16668 compcert.lib.Integers Int64 unsigned_repr thm
R16678:16695 compcert.lib.Integers Int64 max_unsigned def
R16750:16761 compcert.backend.SelectLongproof <> eval_lowlong thm
R16882:16886 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R16866:16879 compcert.lib.Integers Int64 unsigned def
R16887:16897 compcert.lib.Integers Int modulus def
R16906:16917 compcert.lib.Integers Int unsigned def
R16920:16931 compcert.lib.Integers Int64 loword def
R16906:16917 compcert.lib.Integers Int unsigned def
R16920:16931 compcert.lib.Integers Int64 loword def
R16882:16886 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R16866:16879 compcert.lib.Integers Int64 unsigned def
R16887:16897 compcert.lib.Integers Int modulus def
R16962:16973 compcert.lib.Integers Int64 loword def
R16982:17001 compcert.lib.Integers Int unsigned_repr_eq thm
R16982:17001 compcert.lib.Integers Int unsigned_repr_eq thm
R17029:17048 compcert.lib.Integers Int64 unsigned_range thm
R17029:17048 compcert.lib.Integers Int64 unsigned_range thm
R17191:17197 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17199:17200 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17217:17220 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17208:17210 Coq.Init.Logic <> :type_scope:x_'='_x not
R17201:17204 Coq.Init.Datatypes <> Some constr
R17211:17214 Coq.Init.Datatypes <> Some constr
R17216:17216 compcert.backend.Selectionproof <> v var
R17191:17197 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17199:17200 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17217:17220 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17208:17210 Coq.Init.Logic <> :type_scope:x_'='_x not
R17201:17204 Coq.Init.Datatypes <> Some constr
R17211:17214 Coq.Init.Datatypes <> Some constr
R17216:17216 compcert.backend.Selectionproof <> v var
prf 17279:17295 <> eval_unop_lessdef
R17374:17380 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17383:17384 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17411:17414 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17401:17403 Coq.Init.Logic <> :type_scope:x_'='_x not
R17385:17393 compcert.backend.Cminor <> eval_unop def
R17398:17400 compcert.backend.Selectionproof <> v1' var
R17395:17396 compcert.backend.Selectionproof <> op var
R17404:17407 Coq.Init.Datatypes <> Some constr
R17409:17410 compcert.backend.Selectionproof <> v' var
R17415:17425 compcert.common.Values Val lessdef ind
R17429:17430 compcert.backend.Selectionproof <> v' var
R17427:17427 compcert.backend.Selectionproof <> v var
R17350:17360 compcert.common.Values Val lessdef ind
R17365:17367 compcert.backend.Selectionproof <> v1' var
R17362:17363 compcert.backend.Selectionproof <> v1 var
R17337:17339 Coq.Init.Logic <> :type_scope:x_'='_x not
R17322:17330 compcert.backend.Cminor <> eval_unop def
R17335:17336 compcert.backend.Selectionproof <> v1 var
R17332:17333 compcert.backend.Selectionproof <> op var
R17340:17343 Coq.Init.Datatypes <> Some constr
R17345:17345 compcert.backend.Selectionproof <> v var
prf 17561:17578 <> eval_binop_lessdef
R17720:17726 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17729:17730 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17765:17768 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17755:17757 Coq.Init.Logic <> :type_scope:x_'='_x not
R17731:17740 compcert.backend.Cminor <> eval_binop def
R17753:17754 compcert.backend.Selectionproof <> m' var
R17749:17751 compcert.backend.Selectionproof <> v2' var
R17745:17747 compcert.backend.Selectionproof <> v1' var
R17742:17743 compcert.backend.Selectionproof <> op var
R17758:17761 Coq.Init.Datatypes <> Some constr
R17763:17764 compcert.backend.Selectionproof <> v' var
R17769:17779 compcert.common.Values Val lessdef ind
R17783:17784 compcert.backend.Selectionproof <> v' var
R17781:17781 compcert.backend.Selectionproof <> v var
R17698:17708 compcert.common.Memory Mem extends def
R17712:17713 compcert.backend.Selectionproof <> m' var
R17710:17710 compcert.backend.Selectionproof <> m var
R17676:17686 compcert.common.Values Val lessdef ind
R17691:17693 compcert.backend.Selectionproof <> v2' var
R17688:17689 compcert.backend.Selectionproof <> v2 var
R17654:17664 compcert.common.Values Val lessdef ind
R17669:17671 compcert.backend.Selectionproof <> v1' var
R17666:17667 compcert.backend.Selectionproof <> v1 var
R17638:17640 Coq.Init.Logic <> :type_scope:x_'='_x not
R17617:17626 compcert.backend.Cminor <> eval_binop def
R17637:17637 compcert.backend.Selectionproof <> m var
R17634:17635 compcert.backend.Selectionproof <> v2 var
R17631:17632 compcert.backend.Selectionproof <> v1 var
R17628:17629 compcert.backend.Selectionproof <> op var
R17641:17644 Coq.Init.Datatypes <> Some constr
R17646:17646 compcert.backend.Selectionproof <> v var
R17845:17851 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17854:17855 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17889:17892 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17879:17881 Coq.Init.Logic <> :type_scope:x_'='_x not
R17856:17865 compcert.backend.Cminor <> eval_binop def
R17882:17885 Coq.Init.Datatypes <> Some constr
R17887:17888 compcert.backend.Selectionproof <> v' var
R17893:17903 compcert.common.Values Val lessdef ind
R17907:17908 compcert.backend.Selectionproof <> v' var
R17845:17851 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17854:17855 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17889:17892 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17879:17881 Coq.Init.Logic <> :type_scope:x_'='_x not
R17856:17865 compcert.backend.Cminor <> eval_binop def
R17882:17885 Coq.Init.Datatypes <> Some constr
R17887:17888 compcert.backend.Selectionproof <> v' var
R17893:17903 compcert.common.Values Val lessdef ind
R17907:17908 compcert.backend.Selectionproof <> v' var
R18137:18158 compcert.common.Values Val of_optbool_lessdef thm
R18137:18158 compcert.common.Values Val of_optbool_lessdef thm
R18206:18222 compcert.common.Memory Mem valid_pointer def
R18178:18198 compcert.common.Values Val cmpu_bool_lessdef thm
R18206:18222 compcert.common.Memory Mem valid_pointer def
R18178:18198 compcert.common.Values Val cmpu_bool_lessdef thm
R18257:18281 compcert.common.Memory Mem valid_pointer_extends thm
R18257:18281 compcert.common.Memory Mem valid_pointer_extends thm
def 18420:18430 <> env_lessdef
R18440:18442 compcert.backend.Cminor <> env def
R18490:18496 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18499:18500 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18516:18519 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18506:18508 Coq.Init.Logic <> :type_scope:x_'='_x not
R18503:18503 compcert.lib.Maps <> ::x_'!'_x not
R18504:18505 compcert.backend.Selectionproof <> id var
R18501:18502 compcert.backend.Selectionproof <> e2 var
R18509:18512 Coq.Init.Datatypes <> Some constr
R18514:18515 compcert.backend.Selectionproof <> v2 var
R18520:18530 compcert.common.Values Val lessdef ind
R18535:18536 compcert.backend.Selectionproof <> v2 var
R18532:18533 compcert.backend.Selectionproof <> v1 var
R18476:18478 Coq.Init.Logic <> :type_scope:x_'='_x not
R18473:18473 compcert.lib.Maps <> ::x_'!'_x not
R18474:18475 compcert.backend.Selectionproof <> id var
R18471:18472 compcert.backend.Selectionproof <> e1 var
R18479:18482 Coq.Init.Datatypes <> Some constr
R18484:18485 compcert.backend.Selectionproof <> v1 var
prf 18546:18560 <> set_var_lessdef
R18634:18644 compcert.backend.Selectionproof <> env_lessdef def
R18668:18676 compcert.lib.Maps PTree set def
R18684:18685 compcert.backend.Selectionproof <> e2 var
R18681:18682 compcert.backend.Selectionproof <> v2 var
R18678:18679 compcert.backend.Selectionproof <> id var
R18647:18655 compcert.lib.Maps PTree set def
R18663:18664 compcert.backend.Selectionproof <> e1 var
R18660:18661 compcert.backend.Selectionproof <> v1 var
R18657:18658 compcert.backend.Selectionproof <> id var
R18611:18621 compcert.common.Values Val lessdef ind
R18626:18627 compcert.backend.Selectionproof <> v2 var
R18623:18624 compcert.backend.Selectionproof <> v1 var
R18590:18600 compcert.backend.Selectionproof <> env_lessdef def
R18605:18606 compcert.backend.Selectionproof <> e2 var
R18602:18603 compcert.backend.Selectionproof <> e1 var
R18727:18738 compcert.lib.Maps PTree gsspec thm
R18727:18738 compcert.lib.Maps PTree gsspec thm
R18756:18758 compcert.lib.Coqlib <> peq def
R18756:18758 compcert.lib.Coqlib <> peq def
prf 18821:18838 <> set_params_lessdef
R18895:18905 compcert.backend.Selectionproof <> env_lessdef def
R18928:18937 compcert.backend.Cminor <> set_params def
R18943:18944 compcert.backend.Selectionproof <> il var
R18939:18941 compcert.backend.Selectionproof <> vl2 var
R18908:18917 compcert.backend.Cminor <> set_params def
R18923:18924 compcert.backend.Selectionproof <> il var
R18919:18921 compcert.backend.Selectionproof <> vl1 var
R18865:18880 compcert.common.Values Val lessdef_list ind
R18886:18888 compcert.backend.Selectionproof <> vl2 var
R18882:18884 compcert.backend.Selectionproof <> vl1 var
R19009:19020 compcert.lib.Maps PTree gempty thm
R19009:19020 compcert.lib.Maps PTree gempty thm
R19056:19070 compcert.backend.Selectionproof <> set_var_lessdef thm
R19056:19070 compcert.backend.Selectionproof <> set_var_lessdef thm
R19056:19070 compcert.backend.Selectionproof <> set_var_lessdef thm
prf 19091:19108 <> set_locals_lessdef
R19161:19171 compcert.backend.Selectionproof <> env_lessdef def
R19193:19202 compcert.backend.Cminor <> set_locals def
R19207:19208 compcert.backend.Selectionproof <> e2 var
R19204:19205 compcert.backend.Selectionproof <> il var
R19174:19183 compcert.backend.Cminor <> set_locals def
R19188:19189 compcert.backend.Selectionproof <> e1 var
R19185:19186 compcert.backend.Selectionproof <> il var
R19127:19137 compcert.backend.Selectionproof <> env_lessdef def
R19142:19143 compcert.backend.Selectionproof <> e2 var
R19139:19140 compcert.backend.Selectionproof <> e1 var
R19254:19268 compcert.backend.Selectionproof <> set_var_lessdef thm
R19254:19268 compcert.backend.Selectionproof <> set_var_lessdef thm
prf 19336:19351 <> sel_expr_correct
R19474:19480 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19483:19484 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19529:19532 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19485:19493 compcert.backend.CminorSel <> eval_expr ind
R19527:19528 compcert.backend.Selectionproof <> v' var
R19512:19519 compcert.backend.Selection <> sel_expr def
R19524:19524 compcert.backend.Selectionproof <> a var
R19521:19522 compcert.backend.Selectionproof <> PRESERVATION.hf var
R19508:19509 compcert.backend.Selectionproof <> le var
R19505:19506 compcert.backend.Selectionproof <> m' var
R19502:19503 compcert.backend.Selectionproof <> e' var
R19499:19500 compcert.backend.Selectionproof <> sp var
R19495:19497 compcert.backend.Selectionproof <> PRESERVATION.tge var
R19533:19543 compcert.common.Values Val lessdef ind
R19547:19548 compcert.backend.Selectionproof <> v' var
R19545:19545 compcert.backend.Selectionproof <> v var
R19452:19462 compcert.common.Memory Mem extends def
R19466:19467 compcert.backend.Selectionproof <> m' var
R19464:19464 compcert.backend.Selectionproof <> m var
R19432:19442 compcert.backend.Selectionproof <> env_lessdef def
R19446:19447 compcert.backend.Selectionproof <> e' var
R19444:19444 compcert.backend.Selectionproof <> e var
R19377:19392 compcert.backend.Cminor <> eval_expr ind
R19406:19406 compcert.backend.Selectionproof <> v var
R19404:19404 compcert.backend.Selectionproof <> a var
R19402:19402 compcert.backend.Selectionproof <> m var
R19400:19400 compcert.backend.Selectionproof <> e var
R19397:19398 compcert.backend.Selectionproof <> sp var
R19394:19395 compcert.backend.Selectionproof <> PRESERVATION.ge var
R19745:19748 compcert.common.Values <> Vint constr
R19745:19748 compcert.common.Values <> Vint constr
R19811:19816 compcert.common.Values <> Vfloat constr
R19811:19816 compcert.common.Values <> Vfloat constr
R19878:19884 compcert.common.Values <> Vsingle constr
R19878:19884 compcert.common.Values <> Vsingle constr
R19947:19961 compcert.common.Values Val longofwords def
R19988:19991 compcert.common.Values <> Vint constr
R19994:20005 compcert.lib.Integers Int64 loword def
R19964:19967 compcert.common.Values <> Vint constr
R19970:19981 compcert.lib.Integers Int64 hiword def
R19947:19961 compcert.common.Values Val longofwords def
R19988:19991 compcert.common.Values <> Vint constr
R19994:20005 compcert.lib.Integers Int64 loword def
R19964:19967 compcert.common.Values <> Vint constr
R19970:19981 compcert.lib.Integers Int64 hiword def
R20029:20036 compcert.backend.CminorSel <> eval_Eop constr
R20029:20036 compcert.backend.CminorSel <> eval_Eop constr
R20145:20167 compcert.lib.Integers Int64 ofwords_recompose thm
R20145:20167 compcert.lib.Integers Int64 ofwords_recompose thm
R20189:20205 compcert.backend.Selectionproof <> symbols_preserved thm
R20189:20205 compcert.backend.Selectionproof <> symbols_preserved thm
R20214:20232 compcert.common.Globalenvs Genv symbol_address def
R20234:20236 compcert.backend.Selectionproof <> PRESERVATION.tge var
R20214:20232 compcert.common.Globalenvs Genv symbol_address def
R20234:20236 compcert.backend.Selectionproof <> PRESERVATION.tge var
R20251:20265 compcert.ia32.SelectOpproof <> eval_addrsymbol thm
R20251:20265 compcert.ia32.SelectOpproof <> eval_addrsymbol thm
R20276:20289 compcert.ia32.SelectOpproof <> eval_addrstack thm
R20276:20289 compcert.ia32.SelectOpproof <> eval_addrstack thm
R20366:20382 compcert.backend.Selectionproof <> eval_unop_lessdef thm
R20421:20433 compcert.backend.Selectionproof <> eval_sel_unop thm
R20498:20514 compcert.common.Values Val lessdef_trans thm
R20498:20514 compcert.common.Values Val lessdef_trans thm
R20652:20669 compcert.backend.Selectionproof <> eval_binop_lessdef thm
R20708:20721 compcert.backend.Selectionproof <> eval_sel_binop thm
R20806:20822 compcert.common.Values Val lessdef_trans thm
R20806:20822 compcert.common.Values Val lessdef_trans thm
R20910:20926 compcert.common.Memory Mem loadv_extends thm
R20988:20996 compcert.backend.Selectionproof <> eval_load thm
R20988:20996 compcert.backend.Selectionproof <> eval_load thm
prf 21018:21037 <> sel_exprlist_correct
R21164:21170 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21173:21174 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21227:21230 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21175:21187 compcert.backend.CminorSel <> eval_exprlist ind
R21225:21226 compcert.backend.Selectionproof <> v' var
R21206:21217 compcert.backend.Selection <> sel_exprlist def
R21222:21222 compcert.backend.Selectionproof <> a var
R21219:21220 compcert.backend.Selectionproof <> PRESERVATION.hf var
R21202:21203 compcert.backend.Selectionproof <> le var
R21199:21200 compcert.backend.Selectionproof <> m' var
R21196:21197 compcert.backend.Selectionproof <> e' var
R21193:21194 compcert.backend.Selectionproof <> sp var
R21189:21191 compcert.backend.Selectionproof <> PRESERVATION.tge var
R21231:21246 compcert.common.Values Val lessdef_list ind
R21250:21251 compcert.backend.Selectionproof <> v' var
R21248:21248 compcert.backend.Selectionproof <> v var
R21142:21152 compcert.common.Memory Mem extends def
R21156:21157 compcert.backend.Selectionproof <> m' var
R21154:21154 compcert.backend.Selectionproof <> m var
R21122:21132 compcert.backend.Selectionproof <> env_lessdef def
R21136:21137 compcert.backend.Selectionproof <> e' var
R21134:21134 compcert.backend.Selectionproof <> e var
R21063:21082 compcert.backend.Cminor <> eval_exprlist ind
R21096:21096 compcert.backend.Selectionproof <> v var
R21094:21094 compcert.backend.Selectionproof <> a var
R21092:21092 compcert.backend.Selectionproof <> m var
R21090:21090 compcert.backend.Selectionproof <> e var
R21087:21088 compcert.backend.Selectionproof <> sp var
R21084:21085 compcert.backend.Selectionproof <> PRESERVATION.ge var
R21303:21305 Coq.Init.Datatypes <> nil constr
R21307:21309 compcert.common.Values <> val ind
R21303:21305 Coq.Init.Datatypes <> nil constr
R21307:21309 compcert.common.Values <> val ind
R21349:21364 compcert.backend.Selectionproof <> sel_expr_correct thm
R21461:21464 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R21461:21464 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
ind 21580:21589 <> match_cont
constr 21637:21651 <> match_cont_stop
constr 21694:21707 <> match_cont_seq
constr 21839:21854 <> match_cont_block
constr 21946:21960 <> match_cont_call
R21607:21620 compcert.backend.CminorSel <> cont ind
R21592:21602 compcert.backend.Cminor <> cont ind
R21660:21669 compcert.backend.Selectionproof <> match_cont ind
R21684:21688 compcert.backend.CminorSel <> Kstop constr
R21671:21682 compcert.backend.Cminor <> Kstop constr
R21793:21802 compcert.backend.Selectionproof <> match_cont ind
R21823:21826 compcert.backend.CminorSel <> Kseq constr
R21831:21832 compcert.backend.Selectionproof <> k' var
R21828:21829 compcert.backend.Selectionproof <> s' var
R21805:21815 compcert.backend.Cminor <> Kseq constr
R21819:21819 compcert.backend.Selectionproof <> k var
R21817:21817 compcert.backend.Selectionproof <> s var
R21768:21777 compcert.backend.Selectionproof <> match_cont ind
R21781:21782 compcert.backend.Selectionproof <> k' var
R21779:21779 compcert.backend.Selectionproof <> k var
R21750:21752 Coq.Init.Logic <> :type_scope:x_'='_x not
R21734:21741 compcert.backend.Selection <> sel_stmt def
R21749:21749 compcert.backend.Selectionproof <> s var
R21746:21747 compcert.backend.Selectionproof <> PRESERVATION.ge var
R21743:21744 compcert.backend.Selectionproof <> PRESERVATION.hf var
R21753:21754 compcert.common.Errors <> OK constr
R21756:21757 compcert.backend.Selectionproof <> s' var
R21901:21910 compcert.backend.Selectionproof <> match_cont ind
R21931:21936 compcert.backend.CminorSel <> Kblock constr
R21938:21939 compcert.backend.Selectionproof <> k' var
R21913:21925 compcert.backend.Cminor <> Kblock constr
R21927:21927 compcert.backend.Selectionproof <> k var
R21876:21885 compcert.backend.Selectionproof <> match_cont ind
R21889:21890 compcert.backend.Selectionproof <> k' var
R21887:21887 compcert.backend.Selectionproof <> k var
R22081:22090 compcert.backend.Selectionproof <> match_cont ind
R22120:22124 compcert.backend.CminorSel <> Kcall constr
R22138:22139 compcert.backend.Selectionproof <> k' var
R22135:22136 compcert.backend.Selectionproof <> e' var
R22132:22133 compcert.backend.Selectionproof <> sp var
R22129:22130 compcert.backend.Selectionproof <> f' var
R22126:22127 compcert.backend.Selectionproof <> id var
R22093:22104 compcert.backend.Cminor <> Kcall constr
R22116:22116 compcert.backend.Selectionproof <> k var
R22114:22114 compcert.backend.Selectionproof <> e var
R22111:22112 compcert.backend.Selectionproof <> sp var
R22109:22109 compcert.backend.Selectionproof <> f var
R22106:22107 compcert.backend.Selectionproof <> id var
R22055:22065 compcert.backend.Selectionproof <> env_lessdef def
R22069:22070 compcert.backend.Selectionproof <> e' var
R22067:22067 compcert.backend.Selectionproof <> e var
R22036:22045 compcert.backend.Selectionproof <> match_cont ind
R22049:22050 compcert.backend.Selectionproof <> k' var
R22047:22047 compcert.backend.Selectionproof <> k var
R22018:22020 Coq.Init.Logic <> :type_scope:x_'='_x not
R21998:22009 compcert.backend.Selection <> sel_function def
R22017:22017 compcert.backend.Selectionproof <> f var
R22014:22015 compcert.backend.Selectionproof <> PRESERVATION.ge var
R22011:22012 compcert.backend.Selectionproof <> PRESERVATION.hf var
R22021:22022 compcert.common.Errors <> OK constr
R22024:22025 compcert.backend.Selectionproof <> f' var
ind 22154:22165 <> match_states
constr 22215:22225 <> match_state
constr 22531:22545 <> match_callstate
constr 22822:22838 <> match_returnstate
constr 23045:23059 <> match_builtin_1
constr 23504:23518 <> match_builtin_2
R22184:22198 compcert.backend.CminorSel <> state ind
R22168:22179 compcert.backend.Cminor <> state ind
R22296:22298 Coq.Init.Logic <> :type_scope:x_'='_x not
R22276:22287 compcert.backend.Selection <> sel_function def
R22295:22295 compcert.backend.Selectionproof <> f var
R22292:22293 compcert.backend.Selectionproof <> PRESERVATION.ge var
R22289:22290 compcert.backend.Selectionproof <> PRESERVATION.hf var
R22299:22300 compcert.common.Errors <> OK constr
R22302:22303 compcert.backend.Selectionproof <> f' var
R22335:22337 Coq.Init.Logic <> :type_scope:x_'='_x not
R22319:22326 compcert.backend.Selection <> sel_stmt def
R22334:22334 compcert.backend.Selectionproof <> s var
R22331:22332 compcert.backend.Selectionproof <> PRESERVATION.ge var
R22328:22329 compcert.backend.Selectionproof <> PRESERVATION.hf var
R22338:22339 compcert.common.Errors <> OK constr
R22341:22342 compcert.backend.Selectionproof <> s' var
R22358:22367 compcert.backend.Selectionproof <> match_cont ind
R22371:22372 compcert.backend.Selectionproof <> k' var
R22369:22369 compcert.backend.Selectionproof <> k var
R22388:22398 compcert.backend.Selectionproof <> env_lessdef def
R22402:22403 compcert.backend.Selectionproof <> e' var
R22400:22400 compcert.backend.Selectionproof <> e var
R22419:22429 compcert.common.Memory Mem extends def
R22433:22434 compcert.backend.Selectionproof <> m' var
R22431:22431 compcert.backend.Selectionproof <> m var
R22444:22455 compcert.backend.Selectionproof <> match_states ind
R22502:22506 compcert.backend.CminorSel <> State constr
R22523:22524 compcert.backend.Selectionproof <> m' var
R22520:22521 compcert.backend.Selectionproof <> e' var
R22517:22518 compcert.backend.Selectionproof <> sp var
R22514:22515 compcert.backend.Selectionproof <> k' var
R22511:22512 compcert.backend.Selectionproof <> s' var
R22508:22509 compcert.backend.Selectionproof <> f' var
R22466:22477 compcert.backend.Cminor <> State constr
R22490:22490 compcert.backend.Selectionproof <> m var
R22488:22488 compcert.backend.Selectionproof <> e var
R22485:22486 compcert.backend.Selectionproof <> sp var
R22483:22483 compcert.backend.Selectionproof <> k var
R22481:22481 compcert.backend.Selectionproof <> s var
R22479:22479 compcert.backend.Selectionproof <> f var
R22612:22614 Coq.Init.Logic <> :type_scope:x_'='_x not
R22594:22603 compcert.backend.Selection <> sel_fundef def
R22611:22611 compcert.backend.Selectionproof <> f var
R22608:22609 compcert.backend.Selectionproof <> PRESERVATION.ge var
R22605:22606 compcert.backend.Selectionproof <> PRESERVATION.hf var
R22615:22616 compcert.common.Errors <> OK constr
R22618:22619 compcert.backend.Selectionproof <> f' var
R22635:22644 compcert.backend.Selectionproof <> match_cont ind
R22648:22649 compcert.backend.Selectionproof <> k' var
R22646:22646 compcert.backend.Selectionproof <> k var
R22665:22680 compcert.common.Values Val lessdef_list ind
R22687:22691 compcert.backend.Selectionproof <> args' var
R22682:22685 compcert.backend.Selectionproof <> args var
R22707:22717 compcert.common.Memory Mem extends def
R22721:22722 compcert.backend.Selectionproof <> m' var
R22719:22719 compcert.backend.Selectionproof <> m var
R22732:22743 compcert.backend.Selectionproof <> match_states ind
R22792:22800 compcert.backend.CminorSel <> Callstate constr
R22814:22815 compcert.backend.Selectionproof <> m' var
R22811:22812 compcert.backend.Selectionproof <> k' var
R22805:22809 compcert.backend.Selectionproof <> args' var
R22802:22803 compcert.backend.Selectionproof <> f' var
R22754:22769 compcert.backend.Cminor <> Callstate constr
R22780:22780 compcert.backend.Selectionproof <> m var
R22778:22778 compcert.backend.Selectionproof <> k var
R22773:22776 compcert.backend.Selectionproof <> args var
R22771:22771 compcert.backend.Selectionproof <> f var
R22876:22885 compcert.backend.Selectionproof <> match_cont ind
R22889:22890 compcert.backend.Selectionproof <> k' var
R22887:22887 compcert.backend.Selectionproof <> k var
R22906:22916 compcert.common.Values Val lessdef ind
R22920:22921 compcert.backend.Selectionproof <> v' var
R22918:22918 compcert.backend.Selectionproof <> v var
R22937:22947 compcert.common.Memory Mem extends def
R22951:22952 compcert.backend.Selectionproof <> m' var
R22949:22949 compcert.backend.Selectionproof <> m var
R22962:22973 compcert.backend.Selectionproof <> match_states ind
R23019:23029 compcert.backend.CminorSel <> Returnstate constr
R23037:23038 compcert.backend.Selectionproof <> m' var
R23034:23035 compcert.backend.Selectionproof <> k' var
R23031:23032 compcert.backend.Selectionproof <> v' var
R22984:23001 compcert.backend.Cminor <> Returnstate constr
R23007:23007 compcert.backend.Selectionproof <> m var
R23005:23005 compcert.backend.Selectionproof <> k var
R23003:23003 compcert.backend.Selectionproof <> v var
R23148:23150 Coq.Init.Logic <> :type_scope:x_'='_x not
R23128:23139 compcert.backend.Selection <> sel_function def
R23147:23147 compcert.backend.Selectionproof <> f var
R23144:23145 compcert.backend.Selectionproof <> PRESERVATION.ge var
R23141:23142 compcert.backend.Selectionproof <> PRESERVATION.hf var
R23151:23152 compcert.common.Errors <> OK constr
R23154:23155 compcert.backend.Selectionproof <> f' var
R23171:23180 compcert.backend.Selectionproof <> match_cont ind
R23184:23185 compcert.backend.Selectionproof <> k' var
R23182:23182 compcert.backend.Selectionproof <> k var
R23202:23217 compcert.common.Values Val lessdef_list ind
R23224:23228 compcert.backend.Selectionproof <> args' var
R23219:23222 compcert.backend.Selectionproof <> args var
R23245:23255 compcert.backend.Selectionproof <> env_lessdef def
R23259:23260 compcert.backend.Selectionproof <> e' var
R23257:23257 compcert.backend.Selectionproof <> e var
R23276:23286 compcert.common.Memory Mem extends def
R23290:23291 compcert.backend.Selectionproof <> m' var
R23288:23288 compcert.backend.Selectionproof <> m var
R23307:23319 compcert.backend.CminorSel <> eval_exprlist ind
R23341:23345 compcert.backend.Selectionproof <> args' var
R23338:23339 compcert.backend.Selectionproof <> al var
R23334:23336 Coq.Init.Datatypes <> nil constr
R23331:23332 compcert.backend.Selectionproof <> m' var
R23328:23329 compcert.backend.Selectionproof <> e' var
R23325:23326 compcert.backend.Selectionproof <> sp var
R23321:23323 compcert.backend.Selectionproof <> PRESERVATION.tge var
R23355:23366 compcert.backend.Selectionproof <> match_states ind
R23455:23459 compcert.backend.CminorSel <> State constr
R23496:23497 compcert.backend.Selectionproof <> m' var
R23493:23494 compcert.backend.Selectionproof <> e' var
R23490:23491 compcert.backend.Selectionproof <> sp var
R23487:23488 compcert.backend.Selectionproof <> k' var
R23465:23472 compcert.backend.CminorSel <> Sbuiltin constr
R23483:23484 compcert.backend.Selectionproof <> al var
R23480:23481 compcert.backend.Selectionproof <> ef var
R23474:23478 compcert.backend.Selectionproof <> optid var
R23461:23462 compcert.backend.Selectionproof <> f' var
R23377:23392 compcert.backend.Cminor <> Callstate constr
R23443:23443 compcert.backend.Selectionproof <> m var
R23414:23425 compcert.backend.Cminor <> Kcall constr
R23440:23440 compcert.backend.Selectionproof <> k var
R23438:23438 compcert.backend.Selectionproof <> e var
R23435:23436 compcert.backend.Selectionproof <> sp var
R23433:23433 compcert.backend.Selectionproof <> f var
R23427:23431 compcert.backend.Selectionproof <> optid var
R23408:23411 compcert.backend.Selectionproof <> args var
R23395:23402 compcert.common.AST <> External constr
R23404:23405 compcert.backend.Selectionproof <> ef var
R23595:23597 Coq.Init.Logic <> :type_scope:x_'='_x not
R23575:23586 compcert.backend.Selection <> sel_function def
R23594:23594 compcert.backend.Selectionproof <> f var
R23591:23592 compcert.backend.Selectionproof <> PRESERVATION.ge var
R23588:23589 compcert.backend.Selectionproof <> PRESERVATION.hf var
R23598:23599 compcert.common.Errors <> OK constr
R23601:23602 compcert.backend.Selectionproof <> f' var
R23618:23627 compcert.backend.Selectionproof <> match_cont ind
R23631:23632 compcert.backend.Selectionproof <> k' var
R23629:23629 compcert.backend.Selectionproof <> k var
R23649:23659 compcert.common.Values Val lessdef ind
R23663:23664 compcert.backend.Selectionproof <> v' var
R23661:23661 compcert.backend.Selectionproof <> v var
R23681:23691 compcert.backend.Selectionproof <> env_lessdef def
R23695:23696 compcert.backend.Selectionproof <> e' var
R23693:23693 compcert.backend.Selectionproof <> e var
R23712:23722 compcert.common.Memory Mem extends def
R23726:23727 compcert.backend.Selectionproof <> m' var
R23724:23724 compcert.backend.Selectionproof <> m var
R23737:23748 compcert.backend.Selectionproof <> match_states ind
R23822:23826 compcert.backend.CminorSel <> State constr
R23868:23869 compcert.backend.Selectionproof <> m' var
R23844:23853 compcert.backend.Cminor <> set_optvar def
R23864:23865 compcert.backend.Selectionproof <> e' var
R23861:23862 compcert.backend.Selectionproof <> v' var
R23855:23859 compcert.backend.Selectionproof <> optid var
R23840:23841 compcert.backend.Selectionproof <> sp var
R23837:23838 compcert.backend.Selectionproof <> k' var
R23831:23835 compcert.backend.CminorSel <> Sskip constr
R23828:23829 compcert.backend.Selectionproof <> f' var
R23759:23776 compcert.backend.Cminor <> Returnstate constr
R23810:23810 compcert.backend.Selectionproof <> m var
R23781:23792 compcert.backend.Cminor <> Kcall constr
R23807:23807 compcert.backend.Selectionproof <> k var
R23805:23805 compcert.backend.Selectionproof <> e var
R23802:23803 compcert.backend.Selectionproof <> sp var
R23800:23800 compcert.backend.Selectionproof <> f var
R23794:23798 compcert.backend.Selectionproof <> optid var
R23778:23778 compcert.backend.Selectionproof <> v var
prf 23881:23896 <> call_cont_commut
R23933:23942 compcert.backend.Selectionproof <> match_cont ind
R23966:23974 compcert.backend.CminorSel <> call_cont def
R23976:23977 compcert.backend.Selectionproof <> k' var
R23945:23960 compcert.backend.Cminor <> call_cont def
R23962:23962 compcert.backend.Selectionproof <> k var
R23914:23923 compcert.backend.Selectionproof <> match_cont ind
R23927:23928 compcert.backend.Selectionproof <> k' var
R23925:23925 compcert.backend.Selectionproof <> k var
prf 24061:24077 <> find_label_commut
R24190:24199 compcert.backend.CminorSel <> find_label def
R24208:24209 compcert.backend.Selectionproof <> k' var
R24205:24206 compcert.backend.Selectionproof <> s' var
R24201:24203 compcert.backend.Selectionproof <> lbl var
R24163:24179 compcert.backend.Cminor <> find_label def
R24187:24187 compcert.backend.Selectionproof <> k var
R24185:24185 compcert.backend.Selectionproof <> s var
R24181:24183 compcert.backend.Selectionproof <> lbl var
R24220:24223 Coq.Init.Datatypes <> None constr
R24226:24229 Coq.Init.Datatypes <> None constr
R24234:24237 Coq.Init.Logic <> True ind
R24243:24246 Coq.Init.Datatypes <> Some constr
R24247:24247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24250:24251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24254:24254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24257:24260 Coq.Init.Datatypes <> Some constr
R24261:24261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24265:24266 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24270:24270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24301:24304 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24292:24294 Coq.Init.Logic <> :type_scope:x_'='_x not
R24275:24282 compcert.backend.Selection <> sel_stmt def
R24287:24288 compcert.backend.Selectionproof <> PRESERVATION.ge var
R24284:24285 compcert.backend.Selectionproof <> PRESERVATION.hf var
R24295:24296 compcert.common.Errors <> OK constr
R24305:24314 compcert.backend.Selectionproof <> match_cont ind
R24335:24339 Coq.Init.Logic <> False ind
R24143:24145 Coq.Init.Logic <> :type_scope:x_'='_x not
R24127:24134 compcert.backend.Selection <> sel_stmt def
R24142:24142 compcert.backend.Selectionproof <> s var
R24139:24140 compcert.backend.Selectionproof <> PRESERVATION.ge var
R24136:24137 compcert.backend.Selectionproof <> PRESERVATION.hf var
R24146:24147 compcert.common.Errors <> OK constr
R24149:24150 compcert.backend.Selectionproof <> s' var
R24106:24115 compcert.backend.Selectionproof <> match_cont ind
R24119:24120 compcert.backend.Selectionproof <> k' var
R24117:24117 compcert.backend.Selectionproof <> k var
R24461:24465 compcert.backend.Selection <> store def
R24478:24487 compcert.ia32.SelectOp <> addressing def
R24492:24499 compcert.backend.Selection <> sel_expr def
R24501:24502 compcert.backend.Selectionproof <> PRESERVATION.hf var
R24478:24487 compcert.ia32.SelectOp <> addressing def
R24492:24499 compcert.backend.Selection <> sel_expr def
R24501:24502 compcert.backend.Selectionproof <> PRESERVATION.hf var
R24545:24557 compcert.backend.Selection <> classify_call def
R24559:24560 compcert.backend.Selectionproof <> PRESERVATION.ge var
R24545:24557 compcert.backend.Selection <> classify_call def
R24559:24560 compcert.backend.Selectionproof <> PRESERVATION.ge var
R24606:24618 compcert.backend.Selection <> classify_call def
R24620:24621 compcert.backend.Selectionproof <> PRESERVATION.ge var
R24606:24618 compcert.backend.Selection <> classify_call def
R24620:24621 compcert.backend.Selectionproof <> PRESERVATION.ge var
R24667:24677 compcert.backend.Cminor <> Kseq constr
R24667:24677 compcert.backend.Cminor <> Kseq constr
R24728:24744 compcert.backend.Cminor <> find_label def
R24754:24764 compcert.backend.Cminor <> Kseq constr
R24802:24811 compcert.backend.CminorSel <> find_label def
R24820:24823 compcert.backend.CminorSel <> Kseq constr
R24728:24744 compcert.backend.Cminor <> find_label def
R24754:24764 compcert.backend.Cminor <> Kseq constr
R24802:24811 compcert.backend.CminorSel <> find_label def
R24820:24823 compcert.backend.CminorSel <> Kseq constr
R24802:24811 compcert.backend.CminorSel <> find_label def
R24820:24823 compcert.backend.CminorSel <> Kseq constr
R0:-1 compcert.backend.Selectionproof <> y var
R0:-1 compcert.backend.Selectionproof <> y var
R0:-1 compcert.backend.Selectionproof <> y var
R0:-1 compcert.backend.Selectionproof <> y var
R24938:24954 compcert.backend.Cminor <> find_label def
R24995:25004 compcert.backend.CminorSel <> find_label def
R24938:24954 compcert.backend.Cminor <> find_label def
R24995:25004 compcert.backend.CminorSel <> find_label def
R24995:25004 compcert.backend.CminorSel <> find_label def
R0:-1 compcert.backend.Selectionproof <> y var
R0:-1 compcert.backend.Selectionproof <> y var
R0:-1 compcert.backend.Selectionproof <> y var
R0:-1 compcert.backend.Selectionproof <> y var
R25228:25242 compcert.common.Switch <> validate_switch def
R25263:25276 compcert.backend.Selection <> compile_switch defax
R25278:25290 compcert.lib.Integers Int64 modulus def
R25244:25256 compcert.lib.Integers Int64 modulus def
R25228:25242 compcert.common.Switch <> validate_switch def
R25263:25276 compcert.backend.Selection <> compile_switch defax
R25278:25290 compcert.lib.Integers Int64 modulus def
R25244:25256 compcert.lib.Integers Int64 modulus def
R25334:25348 compcert.common.Switch <> validate_switch def
R25367:25380 compcert.backend.Selection <> compile_switch defax
R25382:25392 compcert.lib.Integers Int modulus def
R25350:25360 compcert.lib.Integers Int modulus def
R25334:25348 compcert.common.Switch <> validate_switch def
R25367:25380 compcert.backend.Selection <> compile_switch defax
R25382:25392 compcert.lib.Integers Int modulus def
R25350:25360 compcert.lib.Integers Int modulus def
R25496:25503 compcert.common.AST <> ident_eq def
R25496:25503 compcert.common.AST <> ident_eq def
def 25553:25559 <> measure
R25565:25576 compcert.backend.Cminor <> state ind
R25581:25583 Coq.Init.Datatypes <> nat ind
R25596:25596 compcert.backend.Selectionproof <> s var
R25607:25622 compcert.backend.Cminor <> Callstate constr
R25645:25656 compcert.backend.Cminor <> State constr
R25683:25700 compcert.backend.Cminor <> Returnstate constr
prf 25731:25746 <> sel_step_correct
R25830:25830 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25880:25886 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25831:25837 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25840:25841 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25858:25861 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25842:25845 compcert.backend.CminorSel <> step ind
R25856:25857 compcert.backend.Selectionproof <> T2 var
R25854:25854 compcert.backend.Selectionproof <> t var
R25851:25852 compcert.backend.Selectionproof <> T1 var
R25847:25849 compcert.backend.Selectionproof <> PRESERVATION.tge var
R25862:25873 compcert.backend.Selectionproof <> match_states ind
R25878:25879 compcert.backend.Selectionproof <> T2 var
R25875:25876 compcert.backend.Selectionproof <> S2 var
R25911:25914 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25898:25900 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R25888:25894 compcert.backend.Selectionproof <> measure def
R25896:25897 compcert.backend.Selectionproof <> S2 var
R25901:25907 compcert.backend.Selectionproof <> measure def
R25909:25910 compcert.backend.Selectionproof <> S1 var
R25921:25924 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25916:25918 Coq.Init.Logic <> :type_scope:x_'='_x not
R25915:25915 compcert.backend.Selectionproof <> t var
R25919:25920 compcert.common.Events <> E0 def
R25925:25936 compcert.backend.Selectionproof <> match_states ind
R25941:25942 compcert.backend.Selectionproof <> T1 var
R25938:25939 compcert.backend.Selectionproof <> S2 var
R25806:25817 compcert.backend.Selectionproof <> match_states ind
R25822:25823 compcert.backend.Selectionproof <> T1 var
R25819:25820 compcert.backend.Selectionproof <> S1 var
R25767:25777 compcert.backend.Cminor <> step ind
R25787:25788 compcert.backend.Selectionproof <> S2 var
R25785:25785 compcert.backend.Selectionproof <> t var
R25782:25783 compcert.backend.Selectionproof <> S1 var
R25779:25780 compcert.backend.Selectionproof <> PRESERVATION.ge var
R26217:26241 compcert.common.Memory Mem free_parallel_extends thm
R26372:26401 compcert.backend.Selectionproof <> stackspace_function_translated thm
R26372:26401 compcert.backend.Selectionproof <> stackspace_function_translated thm
R26458:26473 compcert.backend.Selectionproof <> sel_expr_correct thm
R26581:26595 compcert.backend.Selectionproof <> set_var_lessdef thm
R26581:26595 compcert.backend.Selectionproof <> set_var_lessdef thm
R26628:26643 compcert.backend.Selectionproof <> sel_expr_correct thm
R26703:26718 compcert.backend.Selectionproof <> sel_expr_correct thm
R26775:26792 compcert.common.Memory Mem storev_extends thm
R26860:26869 compcert.backend.Selectionproof <> eval_store thm
R26860:26869 compcert.backend.Selectionproof <> eval_store thm
R26924:26943 compcert.backend.Selectionproof <> sel_exprlist_correct thm
R26986:27006 compcert.backend.Selectionproof <> classify_call_correct thm
R27029:27041 compcert.backend.Selection <> classify_call def
R27043:27044 compcert.backend.Selectionproof <> PRESERVATION.ge var
R27029:27041 compcert.backend.Selection <> classify_call def
R27043:27044 compcert.backend.Selectionproof <> PRESERVATION.ge var
R27093:27108 compcert.backend.Selectionproof <> sel_expr_correct thm
R27148:27167 compcert.backend.Selectionproof <> functions_translated thm
R27281:27303 compcert.backend.Selectionproof <> sig_function_translated thm
R27281:27303 compcert.backend.Selectionproof <> sig_function_translated thm
R27398:27417 compcert.backend.Selectionproof <> functions_translated thm
R27542:27558 compcert.backend.Selectionproof <> symbols_preserved thm
R27542:27558 compcert.backend.Selectionproof <> symbols_preserved thm
R27576:27598 compcert.backend.Selectionproof <> sig_function_translated thm
R27576:27598 compcert.backend.Selectionproof <> sig_function_translated thm
R27795:27819 compcert.common.Memory Mem free_parallel_extends thm
R27863:27892 compcert.backend.Selectionproof <> stackspace_function_translated thm
R27863:27892 compcert.backend.Selectionproof <> stackspace_function_translated thm
R27919:27934 compcert.backend.Selectionproof <> sel_expr_correct thm
R27974:27993 compcert.backend.Selectionproof <> sel_exprlist_correct thm
R28036:28055 compcert.backend.Selectionproof <> functions_translated thm
R28124:28144 compcert.backend.Selectionproof <> classify_call_correct thm
R28167:28179 compcert.backend.Selection <> classify_call def
R28181:28182 compcert.backend.Selectionproof <> PRESERVATION.ge var
R28167:28179 compcert.backend.Selection <> classify_call def
R28181:28182 compcert.backend.Selectionproof <> PRESERVATION.ge var
R28263:28285 compcert.backend.Selectionproof <> sig_function_translated thm
R28263:28285 compcert.backend.Selectionproof <> sig_function_translated thm
R28392:28408 compcert.backend.Selectionproof <> symbols_preserved thm
R28392:28408 compcert.backend.Selectionproof <> symbols_preserved thm
R28424:28446 compcert.backend.Selectionproof <> sig_function_translated thm
R28424:28446 compcert.backend.Selectionproof <> sig_function_translated thm
R28505:28527 compcert.backend.Selectionproof <> sig_function_translated thm
R28505:28527 compcert.backend.Selectionproof <> sig_function_translated thm
R28563:28578 compcert.backend.Selectionproof <> call_cont_commut thm
R28563:28578 compcert.backend.Selectionproof <> call_cont_commut thm
R28614:28633 compcert.backend.Selectionproof <> sel_exprlist_correct thm
R28676:28700 compcert.common.Events <> external_call_mem_extends def
R28807:28837 compcert.common.Events <> external_call_symbols_preserved thm
R28807:28837 compcert.common.Events <> external_call_symbols_preserved thm
R28855:28871 compcert.backend.Selectionproof <> symbols_preserved thm
R28855:28871 compcert.backend.Selectionproof <> symbols_preserved thm
R28880:28896 compcert.backend.Selectionproof <> varinfo_preserved thm
R28880:28896 compcert.backend.Selectionproof <> varinfo_preserved thm
R28957:28971 compcert.backend.Selectionproof <> set_var_lessdef thm
R28957:28971 compcert.backend.Selectionproof <> set_var_lessdef thm
R29104:29119 compcert.backend.Selectionproof <> sel_expr_correct thm
R29158:29172 compcert.common.Values Val bool_of_val ind
R29158:29172 compcert.common.Values Val bool_of_val ind
R29218:29222 compcert.backend.CminorSel <> State constr
R29218:29222 compcert.backend.CminorSel <> State constr
R29300:29320 compcert.backend.Selectionproof <> eval_condexpr_of_expr thm
R29300:29320 compcert.backend.Selectionproof <> eval_condexpr_of_expr thm
R29905:29918 compcert.backend.Selection <> compile_switch defax
R29920:29930 compcert.lib.Integers Int modulus def
R29905:29918 compcert.backend.Selection <> compile_switch defax
R29920:29930 compcert.lib.Integers Int modulus def
R29965:29979 compcert.common.Switch <> validate_switch def
R29981:29991 compcert.lib.Integers Int modulus def
R29965:29979 compcert.common.Switch <> validate_switch def
R29981:29991 compcert.lib.Integers Int modulus def
R30040:30055 compcert.backend.Selectionproof <> sel_expr_correct thm
R30144:30165 compcert.backend.Selectionproof <> sel_switch_int_correct thm
R30144:30165 compcert.backend.Selectionproof <> sel_switch_int_correct thm
R30210:30223 compcert.backend.Selection <> compile_switch defax
R30225:30237 compcert.lib.Integers Int64 modulus def
R30210:30223 compcert.backend.Selection <> compile_switch defax
R30225:30237 compcert.lib.Integers Int64 modulus def
R30272:30286 compcert.common.Switch <> validate_switch def
R30288:30300 compcert.lib.Integers Int64 modulus def
R30272:30286 compcert.common.Switch <> validate_switch def
R30288:30300 compcert.lib.Integers Int64 modulus def
R30349:30364 compcert.backend.Selectionproof <> sel_expr_correct thm
R30452:30474 compcert.backend.Selectionproof <> sel_switch_long_correct thm
R30452:30474 compcert.backend.Selectionproof <> sel_switch_long_correct thm
R30537:30561 compcert.common.Memory Mem free_parallel_extends thm
R30605:30634 compcert.backend.Selectionproof <> stackspace_function_translated thm
R30605:30634 compcert.backend.Selectionproof <> stackspace_function_translated thm
R30739:30754 compcert.backend.Selectionproof <> call_cont_commut thm
R30739:30754 compcert.backend.Selectionproof <> call_cont_commut thm
R30794:30818 compcert.common.Memory Mem free_parallel_extends thm
R30862:30891 compcert.backend.Selectionproof <> stackspace_function_translated thm
R30862:30891 compcert.backend.Selectionproof <> stackspace_function_translated thm
R30918:30933 compcert.backend.Selectionproof <> sel_expr_correct thm
R31042:31057 compcert.backend.Selectionproof <> call_cont_commut thm
R31042:31057 compcert.backend.Selectionproof <> call_cont_commut thm
R31199:31201 Coq.Init.Logic <> :type_scope:x_'='_x not
R31166:31173 compcert.backend.Selection <> sel_stmt def
R31182:31195 compcert.backend.Cminor <> fn_body proj
R31178:31179 compcert.backend.Selectionproof <> PRESERVATION.ge var
R31175:31176 compcert.backend.Selectionproof <> PRESERVATION.hf var
R31202:31203 compcert.common.Errors <> OK constr
R31206:31212 compcert.backend.CminorSel <> fn_body proj
R31199:31201 Coq.Init.Logic <> :type_scope:x_'='_x not
R31166:31173 compcert.backend.Selection <> sel_stmt def
R31182:31195 compcert.backend.Cminor <> fn_body proj
R31178:31179 compcert.backend.Selectionproof <> PRESERVATION.ge var
R31175:31176 compcert.backend.Selectionproof <> PRESERVATION.hf var
R31202:31203 compcert.common.Errors <> OK constr
R31206:31212 compcert.backend.CminorSel <> fn_body proj
R31263:31279 compcert.backend.Selectionproof <> find_label_commut thm
R31305:31320 compcert.backend.Cminor <> call_cont def
R31286:31299 compcert.backend.Cminor <> fn_body proj
R31263:31279 compcert.backend.Selectionproof <> find_label_commut thm
R31305:31320 compcert.backend.Cminor <> call_cont def
R31286:31299 compcert.backend.Cminor <> fn_body proj
R31337:31352 compcert.backend.Selectionproof <> call_cont_commut thm
R31337:31352 compcert.backend.Selectionproof <> call_cont_commut thm
R31395:31404 compcert.backend.CminorSel <> find_label def
R31424:31432 compcert.backend.CminorSel <> call_cont def
R31411:31417 compcert.backend.CminorSel <> fn_body proj
R31395:31404 compcert.backend.CminorSel <> find_label def
R31424:31432 compcert.backend.CminorSel <> call_cont def
R31411:31417 compcert.backend.CminorSel <> fn_body proj
R31672:31688 compcert.common.Memory Mem alloc_extends thm
R31711:31718 Coq.ZArith.Zorder <> Zle_refl syndef
R31711:31718 Coq.ZArith.Zorder <> Zle_refl syndef
R31727:31734 Coq.ZArith.Zorder <> Zle_refl syndef
R31727:31734 Coq.ZArith.Zorder <> Zle_refl syndef
R31853:31870 compcert.backend.Selectionproof <> set_locals_lessdef thm
R31853:31870 compcert.backend.Selectionproof <> set_locals_lessdef thm
R31879:31896 compcert.backend.Selectionproof <> set_params_lessdef thm
R31879:31896 compcert.backend.Selectionproof <> set_params_lessdef thm
R31952:31976 compcert.common.Events <> external_call_mem_extends def
R32076:32106 compcert.common.Events <> external_call_symbols_preserved thm
R32076:32106 compcert.common.Events <> external_call_symbols_preserved thm
R32124:32140 compcert.backend.Selectionproof <> symbols_preserved thm
R32124:32140 compcert.backend.Selectionproof <> symbols_preserved thm
R32149:32165 compcert.backend.Selectionproof <> varinfo_preserved thm
R32149:32165 compcert.backend.Selectionproof <> varinfo_preserved thm
R32244:32268 compcert.common.Events <> external_call_mem_extends def
R32375:32405 compcert.common.Events <> external_call_symbols_preserved thm
R32375:32405 compcert.common.Events <> external_call_symbols_preserved thm
R32423:32439 compcert.backend.Selectionproof <> symbols_preserved thm
R32423:32439 compcert.backend.Selectionproof <> symbols_preserved thm
R32448:32464 compcert.backend.Selectionproof <> varinfo_preserved thm
R32448:32464 compcert.backend.Selectionproof <> varinfo_preserved thm
R32617:32631 compcert.backend.Selectionproof <> set_var_lessdef thm
R32617:32631 compcert.backend.Selectionproof <> set_var_lessdef thm
R32798:32812 compcert.backend.Selectionproof <> set_var_lessdef thm
R32798:32812 compcert.backend.Selectionproof <> set_var_lessdef thm
prf 32833:32850 <> sel_initial_states
R32898:32904 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32906:32907 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32929:32932 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R32908:32920 compcert.backend.CminorSel <> initial_state ind
R32928:32928 compcert.backend.Selectionproof <> R var
R32922:32926 compcert.backend.Selectionproof <> PRESERVATION.tprog var
R32933:32944 compcert.backend.Selectionproof <> match_states ind
R32948:32948 compcert.backend.Selectionproof <> R var
R32946:32946 compcert.backend.Selectionproof <> S var
R32865:32884 compcert.backend.Cminor <> initial_state ind
R32891:32891 compcert.backend.Selectionproof <> S var
R32886:32889 compcert.backend.Selectionproof <> PRESERVATION.prog var
R32983:33005 compcert.backend.Selectionproof <> function_ptr_translated thm
R33084:33111 compcert.common.Globalenvs Genv init_mem_transf_partial thm
R33084:33111 compcert.common.Globalenvs Genv init_mem_transf_partial thm
R33135:33137 compcert.backend.Selectionproof <> PRESERVATION.tge var
R33135:33137 compcert.backend.Selectionproof <> PRESERVATION.tge var
R33148:33164 compcert.backend.Selectionproof <> symbols_preserved thm
R33148:33164 compcert.backend.Selectionproof <> symbols_preserved thm
R33178:33207 compcert.common.AST <> transform_partial_program_main thm
R33178:33207 compcert.common.AST <> transform_partial_program_main thm
R33262:33284 compcert.backend.Selectionproof <> sig_function_translated thm
R33262:33284 compcert.backend.Selectionproof <> sig_function_translated thm
R33333:33348 compcert.common.Memory Mem extends_refl thm
R33333:33348 compcert.common.Memory Mem extends_refl thm
prf 33363:33378 <> sel_final_states
R33445:33455 compcert.backend.CminorSel <> final_state ind
R33459:33459 compcert.backend.Selectionproof <> r var
R33457:33457 compcert.backend.Selectionproof <> R var
R33419:33436 compcert.backend.Cminor <> final_state ind
R33440:33440 compcert.backend.Selectionproof <> r var
R33438:33438 compcert.backend.Selectionproof <> S var
R33399:33410 compcert.backend.Selectionproof <> match_states ind
R33414:33414 compcert.backend.Selectionproof <> R var
R33412:33412 compcert.backend.Selectionproof <> S var
R33533:33544 compcert.backend.Selectionproof PRESERVATION <> sec
ax 33554:33572 <> get_helpers_correct
R33617:33635 compcert.backend.SelectLongproof <> i64_helpers_correct def
R33640:33641 compcert.backend.Selectionproof <> hf var
R33637:33638 compcert.backend.Selectionproof <> ge var
R33605:33607 Coq.Init.Logic <> :type_scope:x_'='_x not
R33591:33601 compcert.backend.SelectLong <> get_helpers def
R33603:33604 compcert.backend.Selectionproof <> ge var
R33608:33609 compcert.common.Errors <> OK constr
R33611:33612 compcert.backend.Selectionproof <> hf var
prf 33653:33674 <> transf_program_correct
R33733:33750 compcert.common.Smallstep <> forward_simulation rec
R33777:33795 compcert.backend.CminorSel <> semantics def
R33797:33801 compcert.backend.Selectionproof <> tprog var
R33753:33768 compcert.backend.Cminor <> semantics def
R33770:33773 compcert.backend.Selectionproof <> prog var
R33716:33718 Coq.Init.Logic <> :type_scope:x_'='_x not
R33700:33710 compcert.backend.Selection <> sel_program def
R33712:33715 compcert.backend.Selectionproof <> prog var
R33719:33720 compcert.common.Errors <> OK constr
R33722:33726 compcert.backend.Selectionproof <> tprog var
R33829:33839 compcert.backend.Selection <> sel_program def
R33860:33870 compcert.backend.SelectLong <> get_helpers def
R33873:33886 compcert.common.Globalenvs Genv globalenv def
R33860:33870 compcert.backend.SelectLong <> get_helpers def
R33873:33886 compcert.common.Globalenvs Genv globalenv def
R33994:34005 compcert.backend.Selectionproof <> match_states ind
R34034:34040 compcert.backend.Selectionproof <> measure def
R33949:33970 compcert.common.Smallstep <> forward_simulation_opt thm
R33994:34005 compcert.backend.Selectionproof <> match_states ind
R34034:34040 compcert.backend.Selectionproof <> measure def
R33949:33970 compcert.common.Smallstep <> forward_simulation_opt thm
R34054:34070 compcert.backend.Selectionproof <> symbols_preserved thm
R34054:34070 compcert.backend.Selectionproof <> symbols_preserved thm
R34088:34105 compcert.backend.Selectionproof <> sel_initial_states thm
R34088:34105 compcert.backend.Selectionproof <> sel_initial_states thm
R34122:34137 compcert.backend.Selectionproof <> sel_final_states thm
R34122:34137 compcert.backend.Selectionproof <> sel_final_states thm
R34154:34169 compcert.backend.Selectionproof <> sel_step_correct thm
R34154:34169 compcert.backend.Selectionproof <> sel_step_correct thm
R34185:34209 compcert.backend.Selectionproof <> helpers_correct_preserved thm
R34185:34209 compcert.backend.Selectionproof <> helpers_correct_preserved thm
R34225:34243 compcert.backend.Selectionproof <> get_helpers_correct prfax
R34225:34243 compcert.backend.Selectionproof <> get_helpers_correct prfax
