DIGEST NO
Fcompcert.backend.Allocation
R906:910 Coq.FSets.FSets <> <> lib
R921:931 compcert.lib.FSetAVLplus <> <> lib
R942:946 compcert.ia32.Archi <> <> lib
R964:969 compcert.lib.Coqlib <> <> lib
R987:993 compcert.lib.Ordered <> <> lib
R1011:1016 compcert.common.Errors <> <> lib
R1034:1037 compcert.lib.Maps <> <> lib
R1055:1061 compcert.lib.Lattice <> <> lib
R1079:1081 compcert.common.AST <> <> lib
R1099:1106 compcert.lib.Integers <> <> lib
R1124:1130 compcert.common.Memdata <> <> lib
R1148:1149 compcert.ia32.Op <> <> lib
R1167:1175 compcert.backend.Registers <> <> lib
R1193:1195 compcert.backend.RTL <> <> lib
R1213:1219 compcert.backend.Kildall <> <> lib
R1237:1245 compcert.backend.Locations <> <> lib
R1263:1273 compcert.backend.Conventions <> <> lib
R1291:1299 compcert.backend.RTLtyping <> <> lib
R1317:1319 compcert.backend.LTL <> <> lib
def 2226:2230 <> moves
R2235:2238 Coq.Init.Datatypes <> list ind
R2244:2246 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2241:2243 compcert.backend.Locations <> loc ind
R2247:2249 compcert.backend.Locations <> loc ind
ind 2269:2279 <> block_shape
constr 2294:2298 <> BSnop
constr 2326:2331 <> BSmove
constr 2381:2390 <> BSmakelong
constr 2446:2454 <> BSlowlong
constr 2504:2513 <> BShighlong
constr 2563:2566 <> BSop
constr 2702:2709 <> BSopdead
constr 2790:2795 <> BSload
constr 2956:2965 <> BSloaddead
constr 3071:3077 <> BSload2
constr 3281:3289 <> BSload2_1
constr 3428:3436 <> BSload2_2
constr 3581:3587 <> BSstore
constr 3735:3742 <> BSstore2
constr 3933:3938 <> BScall
constr 4073:4082 <> BStailcall
constr 4183:4191 <> BSbuiltin
constr 4340:4346 <> BSannot
constr 4467:4472 <> BScond
constr 4567:4577 <> BSjumptable
constr 4645:4652 <> BSreturn
R2305:2309 compcert.backend.Allocation <> moves def
R2316:2319 compcert.backend.LTL <> node def
R2321:2321 compcert.backend.Allocation <> block_shape ind
R2339:2341 compcert.backend.Registers <> reg def
R2350:2352 compcert.backend.Registers <> reg def
R2360:2364 compcert.backend.Allocation <> moves def
R2371:2374 compcert.backend.LTL <> node def
R2376:2376 compcert.backend.Allocation <> block_shape ind
R2404:2406 compcert.backend.Registers <> reg def
R2415:2417 compcert.backend.Registers <> reg def
R2425:2429 compcert.backend.Allocation <> moves def
R2436:2439 compcert.backend.LTL <> node def
R2441:2441 compcert.backend.Allocation <> block_shape ind
R2462:2464 compcert.backend.Registers <> reg def
R2473:2475 compcert.backend.Registers <> reg def
R2483:2487 compcert.backend.Allocation <> moves def
R2494:2497 compcert.backend.LTL <> node def
R2499:2499 compcert.backend.Allocation <> block_shape ind
R2521:2523 compcert.backend.Registers <> reg def
R2532:2534 compcert.backend.Registers <> reg def
R2542:2546 compcert.backend.Allocation <> moves def
R2553:2556 compcert.backend.LTL <> node def
R2558:2558 compcert.backend.Allocation <> block_shape ind
R2573:2581 compcert.ia32.Op <> operation ind
R2591:2594 Coq.Init.Datatypes <> list ind
R2596:2598 compcert.backend.Registers <> reg def
R2607:2609 compcert.backend.Registers <> reg def
R2627:2631 compcert.backend.Allocation <> moves def
R2642:2645 Coq.Init.Datatypes <> list ind
R2647:2650 compcert.ia32.Machregs <> mreg ind
R2660:2663 compcert.ia32.Machregs <> mreg ind
R2681:2685 compcert.backend.Allocation <> moves def
R2692:2695 compcert.backend.LTL <> node def
R2697:2697 compcert.backend.Allocation <> block_shape ind
R2716:2724 compcert.ia32.Op <> operation ind
R2734:2737 Coq.Init.Datatypes <> list ind
R2739:2741 compcert.backend.Registers <> reg def
R2750:2752 compcert.backend.Registers <> reg def
R2769:2773 compcert.backend.Allocation <> moves def
R2780:2783 compcert.backend.LTL <> node def
R2785:2785 compcert.backend.Allocation <> block_shape ind
R2805:2816 compcert.common.AST <> memory_chunk ind
R2826:2835 compcert.ia32.Op <> addressing ind
R2845:2848 Coq.Init.Datatypes <> list ind
R2850:2852 compcert.backend.Registers <> reg def
R2861:2863 compcert.backend.Registers <> reg def
R2881:2885 compcert.backend.Allocation <> moves def
R2896:2899 Coq.Init.Datatypes <> list ind
R2901:2904 compcert.ia32.Machregs <> mreg ind
R2914:2917 compcert.ia32.Machregs <> mreg ind
R2935:2939 compcert.backend.Allocation <> moves def
R2946:2949 compcert.backend.LTL <> node def
R2951:2951 compcert.backend.Allocation <> block_shape ind
R2975:2986 compcert.common.AST <> memory_chunk ind
R2996:3005 compcert.ia32.Op <> addressing ind
R3015:3018 Coq.Init.Datatypes <> list ind
R3020:3022 compcert.backend.Registers <> reg def
R3031:3033 compcert.backend.Registers <> reg def
R3050:3054 compcert.backend.Allocation <> moves def
R3061:3064 compcert.backend.LTL <> node def
R3066:3066 compcert.backend.Allocation <> block_shape ind
R3093:3102 compcert.ia32.Op <> addressing ind
R3112:3115 Coq.Init.Datatypes <> list ind
R3117:3119 compcert.backend.Registers <> reg def
R3128:3130 compcert.backend.Registers <> reg def
R3148:3152 compcert.backend.Allocation <> moves def
R3164:3167 Coq.Init.Datatypes <> list ind
R3169:3172 compcert.ia32.Machregs <> mreg ind
R3183:3186 compcert.ia32.Machregs <> mreg ind
R3204:3208 compcert.backend.Allocation <> moves def
R3220:3223 Coq.Init.Datatypes <> list ind
R3225:3228 compcert.ia32.Machregs <> mreg ind
R3239:3242 compcert.ia32.Machregs <> mreg ind
R3260:3264 compcert.backend.Allocation <> moves def
R3271:3274 compcert.backend.LTL <> node def
R3276:3276 compcert.backend.Allocation <> block_shape ind
R3298:3307 compcert.ia32.Op <> addressing ind
R3317:3320 Coq.Init.Datatypes <> list ind
R3322:3324 compcert.backend.Registers <> reg def
R3333:3335 compcert.backend.Registers <> reg def
R3353:3357 compcert.backend.Allocation <> moves def
R3368:3371 Coq.Init.Datatypes <> list ind
R3373:3376 compcert.ia32.Machregs <> mreg ind
R3386:3389 compcert.ia32.Machregs <> mreg ind
R3407:3411 compcert.backend.Allocation <> moves def
R3418:3421 compcert.backend.LTL <> node def
R3423:3423 compcert.backend.Allocation <> block_shape ind
R3451:3460 compcert.ia32.Op <> addressing ind
R3470:3473 Coq.Init.Datatypes <> list ind
R3475:3477 compcert.backend.Registers <> reg def
R3486:3488 compcert.backend.Registers <> reg def
R3506:3510 compcert.backend.Allocation <> moves def
R3521:3524 Coq.Init.Datatypes <> list ind
R3526:3529 compcert.ia32.Machregs <> mreg ind
R3539:3542 compcert.ia32.Machregs <> mreg ind
R3560:3564 compcert.backend.Allocation <> moves def
R3571:3574 compcert.backend.LTL <> node def
R3576:3576 compcert.backend.Allocation <> block_shape ind
R3597:3608 compcert.common.AST <> memory_chunk ind
R3618:3627 compcert.ia32.Op <> addressing ind
R3637:3640 Coq.Init.Datatypes <> list ind
R3642:3644 compcert.backend.Registers <> reg def
R3653:3655 compcert.backend.Registers <> reg def
R3673:3677 compcert.backend.Allocation <> moves def
R3688:3691 Coq.Init.Datatypes <> list ind
R3693:3696 compcert.ia32.Machregs <> mreg ind
R3706:3709 compcert.ia32.Machregs <> mreg ind
R3725:3728 compcert.backend.LTL <> node def
R3730:3730 compcert.backend.Allocation <> block_shape ind
R3758:3767 compcert.ia32.Op <> addressing ind
R3777:3780 Coq.Init.Datatypes <> list ind
R3782:3784 compcert.backend.Registers <> reg def
R3793:3795 compcert.backend.Registers <> reg def
R3813:3817 compcert.backend.Allocation <> moves def
R3829:3832 Coq.Init.Datatypes <> list ind
R3834:3837 compcert.ia32.Machregs <> mreg ind
R3848:3851 compcert.ia32.Machregs <> mreg ind
R3869:3873 compcert.backend.Allocation <> moves def
R3885:3888 Coq.Init.Datatypes <> list ind
R3890:3893 compcert.ia32.Machregs <> mreg ind
R3904:3907 compcert.ia32.Machregs <> mreg ind
R3923:3926 compcert.backend.LTL <> node def
R3928:3928 compcert.backend.Allocation <> block_shape ind
R3945:3953 compcert.common.AST <> signature rec
R3965:3967 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R3962:3964 compcert.backend.Registers <> reg def
R3968:3972 compcert.common.AST <> ident def
R3982:3985 Coq.Init.Datatypes <> list ind
R3987:3989 compcert.backend.Registers <> reg def
R3998:4000 compcert.backend.Registers <> reg def
R4018:4022 compcert.backend.Allocation <> moves def
R4036:4038 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R4032:4035 compcert.ia32.Machregs <> mreg ind
R4039:4043 compcert.common.AST <> ident def
R4052:4056 compcert.backend.Allocation <> moves def
R4063:4066 compcert.backend.LTL <> node def
R4068:4068 compcert.backend.Allocation <> block_shape ind
R4089:4097 compcert.common.AST <> signature rec
R4109:4111 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R4106:4108 compcert.backend.Registers <> reg def
R4112:4116 compcert.common.AST <> ident def
R4126:4129 Coq.Init.Datatypes <> list ind
R4131:4133 compcert.backend.Registers <> reg def
R4151:4155 compcert.backend.Allocation <> moves def
R4169:4171 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R4165:4168 compcert.ia32.Machregs <> mreg ind
R4172:4176 compcert.common.AST <> ident def
R4178:4178 compcert.backend.Allocation <> block_shape ind
R4198:4214 compcert.common.AST <> external_function ind
R4224:4227 Coq.Init.Datatypes <> list ind
R4229:4231 compcert.backend.Registers <> reg def
R4240:4242 compcert.backend.Registers <> reg def
R4260:4264 compcert.backend.Allocation <> moves def
R4275:4278 Coq.Init.Datatypes <> list ind
R4280:4283 compcert.ia32.Machregs <> mreg ind
R4293:4296 Coq.Init.Datatypes <> list ind
R4298:4301 compcert.ia32.Machregs <> mreg ind
R4319:4323 compcert.backend.Allocation <> moves def
R4330:4333 compcert.backend.LTL <> node def
R4335:4335 compcert.backend.Allocation <> block_shape ind
R4355:4359 compcert.common.AST <> ident def
R4370:4373 Coq.Init.Datatypes <> list ind
R4375:4383 compcert.common.AST <> annot_arg ind
R4393:4396 Coq.Init.Datatypes <> list ind
R4398:4400 compcert.backend.Registers <> reg def
R4409:4411 compcert.backend.Registers <> reg def
R4428:4432 compcert.backend.Allocation <> moves def
R4443:4446 Coq.Init.Datatypes <> list ind
R4448:4450 compcert.backend.Locations <> loc ind
R4457:4460 compcert.backend.LTL <> node def
R4462:4462 compcert.backend.Allocation <> block_shape ind
R4481:4489 compcert.ia32.Op <> condition ind
R4499:4502 Coq.Init.Datatypes <> list ind
R4504:4506 compcert.backend.Registers <> reg def
R4523:4527 compcert.backend.Allocation <> moves def
R4538:4541 Coq.Init.Datatypes <> list ind
R4543:4546 compcert.ia32.Machregs <> mreg ind
R4557:4560 compcert.backend.LTL <> node def
R4562:4562 compcert.backend.Allocation <> block_shape ind
R4585:4587 compcert.backend.Registers <> reg def
R4604:4608 compcert.backend.Allocation <> moves def
R4618:4621 compcert.ia32.Machregs <> mreg ind
R4630:4633 Coq.Init.Datatypes <> list ind
R4635:4638 compcert.backend.LTL <> node def
R4640:4640 compcert.backend.Allocation <> block_shape ind
R4660:4665 Coq.Init.Datatypes <> option ind
R4667:4669 compcert.backend.Registers <> reg def
R4686:4690 compcert.backend.Allocation <> moves def
R4692:4692 compcert.backend.Allocation <> block_shape ind
def 4839:4851 <> extract_moves
R4860:4864 compcert.backend.Allocation <> moves def
R4871:4876 compcert.backend.LTL <> bblock def
R4897:4899 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R4892:4896 compcert.backend.Allocation <> moves def
R4900:4905 compcert.backend.LTL <> bblock def
R4918:4918 compcert.backend.Allocation <> b var
R4952:4955 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R4929:4937 compcert.backend.LTL <> Lgetstack constr
R4968:4980 compcert.backend.Allocation <> extract_moves def
R5003:5006 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R4983:4983 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4995:4996 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5002:5002 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4984:4984 compcert.backend.Locations <> S constr
R4997:4997 compcert.backend.Locations <> R constr
R5007:5010 compcert.backend.Allocation <> accu var
R5043:5046 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5020:5028 compcert.backend.LTL <> Lsetstack constr
R5059:5071 compcert.backend.Allocation <> extract_moves def
R5094:5097 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5074:5074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5080:5081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5093:5093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5075:5075 compcert.backend.Locations <> R constr
R5082:5082 compcert.backend.Locations <> S constr
R5098:5101 compcert.backend.Allocation <> accu var
R5126:5129 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5111:5113 compcert.backend.LTL <> Lop constr
R5148:5164 compcert.ia32.Op <> is_move_operation def
R5187:5190 Coq.Init.Datatypes <> Some constr
R5199:5211 compcert.backend.Allocation <> extract_moves def
R5228:5231 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5214:5214 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5220:5221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5227:5227 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5215:5215 compcert.backend.Locations <> R constr
R5222:5222 compcert.backend.Locations <> R constr
R5232:5235 compcert.backend.Allocation <> accu var
R5249:5252 Coq.Init.Datatypes <> None constr
R5257:5257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5271:5272 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5274:5274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5258:5265 Coq.Lists.List <> rev def
R5267:5270 compcert.backend.Allocation <> accu var
R5273:5273 compcert.backend.Allocation <> b var
R5301:5301 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5315:5316 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5318:5318 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5302:5309 Coq.Lists.List <> rev def
R5311:5314 compcert.backend.Allocation <> accu var
R5317:5317 compcert.backend.Allocation <> b var
def 5339:5348 <> check_succ
R5354:5357 compcert.backend.LTL <> node def
R5364:5373 compcert.backend.LTL <> bblock def
R5378:5381 Coq.Init.Datatypes <> bool ind
R5394:5394 compcert.backend.Allocation <> b var
R5415:5418 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5405:5411 compcert.backend.LTL <> Lbranch constr
R5424:5426 compcert.lib.Coqlib <> peq def
R5428:5428 compcert.backend.Allocation <> s var
R5442:5446 Coq.Init.Datatypes <> false constr
R5500:5503 Coq.Init.Datatypes <> Some constr
R5514:5517 Coq.Init.Datatypes <> None constr
R5522:5525 Coq.Init.Datatypes <> None constr
not 5465 <> :option_monad_scope:'do'_x_'<-'_x_';'_x
R5679:5682 Coq.Init.Datatypes <> None constr
not 5638 <> :option_monad_scope:'assertion'_x_';'_x
ind 5931:5944 <> operation_kind
constr 5984:5998 <> operation_Omove
constr 6051:6069 <> operation_Omakelong
constr 6141:6158 <> operation_Olowlong
constr 6214:6232 <> operation_Ohighlong
constr 6289:6303 <> operation_other
R5960:5963 Coq.Init.Datatypes <> list ind
R5965:5967 compcert.backend.Registers <> reg def
R5947:5955 compcert.ia32.Op <> operation ind
R6013:6026 compcert.backend.Allocation <> operation_kind ind
R6038:6041 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6035:6037 compcert.backend.Allocation <> arg var
R6042:6044 Coq.Init.Datatypes <> nil constr
R6028:6032 compcert.ia32.Op <> Omove constr
R6090:6103 compcert.backend.Allocation <> operation_kind ind
R6120:6123 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6116:6119 compcert.backend.Allocation <> arg1 var
R6128:6131 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6124:6127 compcert.backend.Allocation <> arg2 var
R6132:6134 Coq.Init.Datatypes <> nil constr
R6105:6113 compcert.ia32.Op <> Omakelong constr
R6173:6186 compcert.backend.Allocation <> operation_kind ind
R6201:6204 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6198:6200 compcert.backend.Allocation <> arg var
R6205:6207 Coq.Init.Datatypes <> nil constr
R6188:6195 compcert.ia32.Op <> Olowlong constr
R6247:6260 compcert.backend.Allocation <> operation_kind ind
R6276:6279 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6273:6275 compcert.backend.Allocation <> arg var
R6280:6282 Coq.Init.Datatypes <> nil constr
R6262:6270 compcert.ia32.Op <> Ohighlong constr
R6322:6335 compcert.backend.Allocation <> operation_kind ind
R6340:6343 compcert.backend.Allocation <> args var
R6337:6338 compcert.backend.Allocation <> op var
def 6358:6375 <> classify_operation
R6382:6390 compcert.ia32.Op <> operation ind
R6400:6403 Coq.Init.Datatypes <> list ind
R6405:6407 compcert.backend.Registers <> reg def
R6412:6425 compcert.backend.Allocation <> operation_kind ind
R6430:6433 compcert.backend.Allocation <> args var
R6427:6428 compcert.backend.Allocation <> op var
R6450:6453 compcert.backend.Allocation <> args var
R6446:6447 compcert.backend.Allocation <> op var
R6464:6468 compcert.ia32.Op <> Omove constr
R6474:6475 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6476:6478 Coq.Init.Datatypes <> nil constr
R6483:6497 compcert.backend.Allocation <> operation_Omove constr
R6507:6515 compcert.ia32.Op <> Omakelong constr
R6522:6523 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6528:6529 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6530:6532 Coq.Init.Datatypes <> nil constr
R6537:6555 compcert.backend.Allocation <> operation_Omakelong constr
R6571:6578 compcert.ia32.Op <> Olowlong constr
R6584:6585 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6586:6588 Coq.Init.Datatypes <> nil constr
R6593:6610 compcert.backend.Allocation <> operation_Olowlong constr
R6620:6628 compcert.ia32.Op <> Ohighlong constr
R6634:6635 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6636:6638 Coq.Init.Datatypes <> nil constr
R6643:6661 compcert.backend.Allocation <> operation_Ohighlong constr
R6683:6697 compcert.backend.Allocation <> operation_other constr
R6702:6705 compcert.backend.Allocation <> args var
R6699:6700 compcert.backend.Allocation <> op var
def 6898:6913 <> pair_instr_block
R6934:6948 compcert.backend.RTL <> instruction ind
R6955:6964 compcert.backend.LTL <> bblock def
R6969:6974 Coq.Init.Datatypes <> option ind
R6976:6986 compcert.backend.Allocation <> block_shape ind
R6999:6999 compcert.backend.Allocation <> i var
R7010:7013 compcert.backend.RTL <> Inop constr
R7042:7054 compcert.backend.Allocation <> extract_moves def
R7060:7060 compcert.backend.Allocation <> b var
R7056:7058 Coq.Init.Datatypes <> nil constr
R7071:7081 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R7097:7099 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R7100:7103 Coq.Init.Datatypes <> Some constr
R7105:7109 compcert.backend.Allocation <> BSnop constr
R7111:7112 compcert.backend.Allocation <> mv var
R7082:7091 compcert.backend.Allocation <> check_succ def
R7095:7096 compcert.backend.Allocation <> b1 var
R7121:7123 compcert.backend.RTL <> Iop constr
R7154:7171 compcert.backend.Allocation <> classify_operation def
R7194:7208 compcert.backend.Allocation <> operation_Omove constr
R7243:7255 compcert.backend.Allocation <> extract_moves def
R7261:7261 compcert.backend.Allocation <> b var
R7257:7259 Coq.Init.Datatypes <> nil constr
R7276:7286 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R7302:7304 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R7305:7308 Coq.Init.Datatypes <> Some constr
R7310:7315 compcert.backend.Allocation <> BSmove constr
R7325:7326 compcert.backend.Allocation <> mv var
R7287:7296 compcert.backend.Allocation <> check_succ def
R7300:7301 compcert.backend.Allocation <> b1 var
R7339:7357 compcert.backend.Allocation <> operation_Omakelong constr
R7398:7410 compcert.backend.Allocation <> extract_moves def
R7416:7416 compcert.backend.Allocation <> b var
R7412:7414 Coq.Init.Datatypes <> nil constr
R7431:7441 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R7457:7459 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R7460:7463 Coq.Init.Datatypes <> Some constr
R7465:7474 compcert.backend.Allocation <> BSmakelong constr
R7490:7491 compcert.backend.Allocation <> mv var
R7442:7451 compcert.backend.Allocation <> check_succ def
R7455:7456 compcert.backend.Allocation <> b1 var
R7504:7521 compcert.backend.Allocation <> operation_Olowlong constr
R7556:7568 compcert.backend.Allocation <> extract_moves def
R7574:7574 compcert.backend.Allocation <> b var
R7570:7572 Coq.Init.Datatypes <> nil constr
R7589:7599 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R7615:7617 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R7618:7621 Coq.Init.Datatypes <> Some constr
R7623:7631 compcert.backend.Allocation <> BSlowlong constr
R7641:7642 compcert.backend.Allocation <> mv var
R7600:7609 compcert.backend.Allocation <> check_succ def
R7613:7614 compcert.backend.Allocation <> b1 var
R7655:7673 compcert.backend.Allocation <> operation_Ohighlong constr
R7708:7720 compcert.backend.Allocation <> extract_moves def
R7726:7726 compcert.backend.Allocation <> b var
R7722:7724 Coq.Init.Datatypes <> nil constr
R7741:7751 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R7767:7769 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R7770:7773 Coq.Init.Datatypes <> Some constr
R7775:7784 compcert.backend.Allocation <> BShighlong constr
R7794:7795 compcert.backend.Allocation <> mv var
R7752:7761 compcert.backend.Allocation <> check_succ def
R7765:7766 compcert.backend.Allocation <> b1 var
R7808:7822 compcert.backend.Allocation <> operation_other constr
R7858:7870 compcert.backend.Allocation <> extract_moves def
R7876:7876 compcert.backend.Allocation <> b var
R7872:7874 Coq.Init.Datatypes <> nil constr
R7897:7898 compcert.backend.Allocation <> b1 var
R7935:7938 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7917:7919 compcert.backend.LTL <> Lop constr
R7976:7988 compcert.backend.Allocation <> extract_moves def
R7990:7992 Coq.Init.Datatypes <> nil constr
R8014:8024 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8044:8060 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8061:8071 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8087:8103 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8104:8107 Coq.Init.Datatypes <> Some constr
R8109:8112 compcert.backend.Allocation <> BSop constr
R8141:8143 compcert.backend.Allocation <> mv2 var
R8126:8128 compcert.backend.Allocation <> mv1 var
R8072:8081 compcert.backend.Allocation <> check_succ def
R8085:8086 compcert.backend.Allocation <> b3 var
R8025:8036 compcert.ia32.Op <> eq_operation def
R8179:8189 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8205:8221 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8222:8225 Coq.Init.Datatypes <> Some constr
R8227:8234 compcert.backend.Allocation <> BSopdead constr
R8248:8250 compcert.backend.Allocation <> mv1 var
R8190:8199 compcert.backend.Allocation <> check_succ def
R8203:8204 compcert.backend.Allocation <> b1 var
R8283:8287 compcert.backend.RTL <> Iload constr
R8337:8349 compcert.backend.Allocation <> extract_moves def
R8355:8355 compcert.backend.Allocation <> b var
R8351:8353 Coq.Init.Datatypes <> nil constr
R8372:8373 compcert.backend.Allocation <> b1 var
R8417:8420 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8388:8392 compcert.backend.LTL <> Lload constr
R8440:8447 compcert.common.AST <> chunk_eq def
R8455:8460 compcert.common.AST <> Mint64 constr
R9503:9515 compcert.backend.Allocation <> extract_moves def
R9517:9519 Coq.Init.Datatypes <> nil constr
R9539:9549 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9571:9585 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9586:9596 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9621:9635 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9636:9646 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9662:9676 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9677:9680 Coq.Init.Datatypes <> Some constr
R9682:9687 compcert.backend.Allocation <> BSload constr
R9724:9726 compcert.backend.Allocation <> mv2 var
R9709:9711 compcert.backend.Allocation <> mv1 var
R9647:9656 compcert.backend.Allocation <> check_succ def
R9660:9661 compcert.backend.Allocation <> b3 var
R9597:9609 compcert.ia32.Op <> eq_addressing def
R9550:9557 compcert.common.AST <> chunk_eq def
R8479:8489 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8512:8526 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8544:8556 compcert.backend.Allocation <> extract_moves def
R8558:8560 Coq.Init.Datatypes <> nil constr
R8586:8587 compcert.backend.Allocation <> b3 var
R8641:8644 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8608:8612 compcert.backend.LTL <> Lload constr
R8684:8696 compcert.backend.Allocation <> extract_moves def
R8698:8700 Coq.Init.Datatypes <> nil constr
R8724:8734 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8758:8776 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8777:8787 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8812:8830 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8831:8841 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8917:8935 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8936:8946 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8962:8980 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R8981:8984 Coq.Init.Datatypes <> Some constr
R8986:8992 compcert.backend.Allocation <> BSload2 constr
R9047:9049 compcert.backend.Allocation <> mv3 var
R9030:9032 compcert.backend.Allocation <> mv2 var
R9015:9017 compcert.backend.Allocation <> mv1 var
R8947:8956 compcert.backend.Allocation <> check_succ def
R8960:8961 compcert.backend.Allocation <> b5 var
R8842:8850 compcert.lib.Coqlib <> option_eq def
R8905:8908 Coq.Init.Datatypes <> Some constr
R8867:8883 compcert.ia32.Op <> offset_addressing def
R8891:8898 compcert.lib.Integers Int repr def
R8852:8864 compcert.ia32.Op <> eq_addressing def
R8788:8800 compcert.ia32.Op <> eq_addressing def
R8735:8742 compcert.common.AST <> chunk_eq def
R8752:8757 compcert.common.AST <> Mint32 constr
R9089:9099 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9115:9133 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9138:9150 compcert.ia32.Op <> eq_addressing def
R9277:9287 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9362:9382 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9383:9386 Coq.Init.Datatypes <> Some constr
R9388:9396 compcert.backend.Allocation <> BSload2_2 constr
R9433:9435 compcert.backend.Allocation <> mv2 var
R9418:9420 compcert.backend.Allocation <> mv1 var
R9288:9296 compcert.lib.Coqlib <> option_eq def
R9351:9354 Coq.Init.Datatypes <> Some constr
R9313:9329 compcert.ia32.Op <> offset_addressing def
R9337:9344 compcert.lib.Integers Int repr def
R9298:9310 compcert.ia32.Op <> eq_addressing def
R9187:9190 Coq.Init.Datatypes <> Some constr
R9192:9200 compcert.backend.Allocation <> BSload2_1 constr
R9231:9233 compcert.backend.Allocation <> mv2 var
R9216:9218 compcert.backend.Allocation <> mv1 var
R9100:9109 compcert.backend.Allocation <> check_succ def
R9113:9114 compcert.backend.Allocation <> b3 var
R8490:8497 compcert.common.AST <> chunk_eq def
R8506:8511 compcert.common.AST <> Mint32 constr
R9755:9765 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9781:9793 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R9794:9797 Coq.Init.Datatypes <> Some constr
R9799:9808 compcert.backend.Allocation <> BSloaddead constr
R9830:9832 compcert.backend.Allocation <> mv1 var
R9766:9775 compcert.backend.Allocation <> check_succ def
R9779:9780 compcert.backend.Allocation <> b1 var
R9851:9856 compcert.backend.RTL <> Istore constr
R9906:9918 compcert.backend.Allocation <> extract_moves def
R9924:9924 compcert.backend.Allocation <> b var
R9920:9922 Coq.Init.Datatypes <> nil constr
R9941:9942 compcert.backend.Allocation <> b1 var
R9987:9990 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9957:9962 compcert.backend.LTL <> Lstore constr
R10010:10017 compcert.common.AST <> chunk_eq def
R10025:10030 compcert.common.AST <> Mint64 constr
R10638:10648 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10670:10684 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10685:10695 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10720:10734 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10735:10745 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10761:10775 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10776:10779 Coq.Init.Datatypes <> Some constr
R10781:10787 compcert.backend.Allocation <> BSstore constr
R10809:10811 compcert.backend.Allocation <> mv1 var
R10746:10755 compcert.backend.Allocation <> check_succ def
R10696:10708 compcert.ia32.Op <> eq_addressing def
R10649:10656 compcert.common.AST <> chunk_eq def
R10066:10078 compcert.backend.Allocation <> extract_moves def
R10080:10082 Coq.Init.Datatypes <> nil constr
R10108:10109 compcert.backend.Allocation <> b3 var
R10164:10167 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10130:10135 compcert.backend.LTL <> Lstore constr
R10190:10200 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10223:10241 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10242:10252 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10276:10294 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10295:10305 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10330:10348 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10349:10359 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10435:10453 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10454:10464 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10480:10498 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R10499:10502 Coq.Init.Datatypes <> Some constr
R10504:10511 compcert.backend.Allocation <> BSstore2 constr
R10549:10551 compcert.backend.Allocation <> mv2 var
R10534:10536 compcert.backend.Allocation <> mv1 var
R10465:10474 compcert.backend.Allocation <> check_succ def
R10360:10368 compcert.lib.Coqlib <> option_eq def
R10423:10426 Coq.Init.Datatypes <> Some constr
R10385:10401 compcert.ia32.Op <> offset_addressing def
R10409:10416 compcert.lib.Integers Int repr def
R10370:10382 compcert.ia32.Op <> eq_addressing def
R10306:10318 compcert.ia32.Op <> eq_addressing def
R10253:10260 compcert.common.AST <> chunk_eq def
R10270:10275 compcert.common.AST <> Mint32 constr
R10201:10208 compcert.common.AST <> chunk_eq def
R10217:10222 compcert.common.AST <> Mint32 constr
R10588:10591 Coq.Init.Datatypes <> None constr
R10841:10844 Coq.Init.Datatypes <> None constr
R10860:10864 compcert.backend.RTL <> Icall constr
R10910:10922 compcert.backend.Allocation <> extract_moves def
R10928:10928 compcert.backend.Allocation <> b var
R10924:10926 Coq.Init.Datatypes <> nil constr
R10945:10946 compcert.backend.Allocation <> b1 var
R10975:10978 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10961:10965 compcert.backend.LTL <> Lcall constr
R11012:11024 compcert.backend.Allocation <> extract_moves def
R11026:11028 Coq.Init.Datatypes <> nil constr
R11046:11056 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11076:11088 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11089:11099 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11115:11127 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11128:11131 Coq.Init.Datatypes <> Some constr
R11133:11138 compcert.backend.Allocation <> BScall constr
R11165:11167 compcert.backend.Allocation <> mv2 var
R11156:11158 compcert.backend.Allocation <> mv1 var
R11100:11109 compcert.backend.Allocation <> check_succ def
R11113:11114 compcert.backend.Allocation <> b3 var
R11057:11068 compcert.common.AST <> signature_eq def
R11185:11188 Coq.Init.Datatypes <> None constr
R11204:11212 compcert.backend.RTL <> Itailcall constr
R11252:11264 compcert.backend.Allocation <> extract_moves def
R11270:11270 compcert.backend.Allocation <> b var
R11266:11268 Coq.Init.Datatypes <> nil constr
R11287:11288 compcert.backend.Allocation <> b1 var
R11321:11324 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11303:11311 compcert.backend.LTL <> Ltailcall constr
R11341:11351 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11371:11383 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11384:11387 Coq.Init.Datatypes <> Some constr
R11389:11398 compcert.backend.Allocation <> BStailcall constr
R11412:11414 compcert.backend.Allocation <> mv1 var
R11352:11363 compcert.common.AST <> signature_eq def
R11435:11438 Coq.Init.Datatypes <> None constr
R11454:11461 compcert.backend.RTL <> Ibuiltin constr
R11503:11515 compcert.backend.Allocation <> extract_moves def
R11521:11521 compcert.backend.Allocation <> b var
R11517:11519 Coq.Init.Datatypes <> nil constr
R11538:11539 compcert.backend.Allocation <> b1 var
R11577:11580 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11554:11561 compcert.backend.LTL <> Lbuiltin constr
R11614:11626 compcert.backend.Allocation <> extract_moves def
R11628:11630 Coq.Init.Datatypes <> nil constr
R11648:11658 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11686:11698 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11699:11709 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11725:11737 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11738:11741 Coq.Init.Datatypes <> Some constr
R11743:11751 compcert.backend.Allocation <> BSbuiltin constr
R11780:11782 compcert.backend.Allocation <> mv2 var
R11765:11767 compcert.backend.Allocation <> mv1 var
R11710:11719 compcert.backend.Allocation <> check_succ def
R11723:11724 compcert.backend.Allocation <> b3 var
R11659:11678 compcert.common.AST <> external_function_eq def
R11811:11814 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11795:11800 compcert.backend.LTL <> Lannot constr
R11831:11841 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11869:11881 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11882:11892 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11908:11920 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R11947:11954 compcert.common.AST <> EF_annot constr
R11967:11970 Coq.Init.Datatypes <> Some constr
R11972:11978 compcert.backend.Allocation <> BSannot constr
R11997:11999 compcert.backend.Allocation <> mv1 var
R12027:12030 Coq.Init.Datatypes <> None constr
R11893:11902 compcert.backend.Allocation <> check_succ def
R11842:11861 compcert.common.AST <> external_function_eq def
R12059:12062 Coq.Init.Datatypes <> None constr
R12078:12082 compcert.backend.RTL <> Icond constr
R12126:12138 compcert.backend.Allocation <> extract_moves def
R12144:12144 compcert.backend.Allocation <> b var
R12140:12142 Coq.Init.Datatypes <> nil constr
R12161:12162 compcert.backend.Allocation <> b1 var
R12202:12205 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12177:12181 compcert.backend.LTL <> Lcond constr
R12222:12232 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R12256:12268 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R12269:12279 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R12290:12302 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R12303:12313 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R12324:12336 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R12337:12340 Coq.Init.Datatypes <> Some constr
R12342:12347 compcert.backend.Allocation <> BScond constr
R12359:12361 compcert.backend.Allocation <> mv1 var
R12314:12316 compcert.lib.Coqlib <> peq def
R12280:12282 compcert.lib.Coqlib <> peq def
R12233:12244 compcert.ia32.Op <> eq_condition def
R12389:12392 Coq.Init.Datatypes <> None constr
R12408:12417 compcert.backend.RTL <> Ijumptable constr
R12453:12465 compcert.backend.Allocation <> extract_moves def
R12471:12471 compcert.backend.Allocation <> b var
R12467:12469 Coq.Init.Datatypes <> nil constr
R12488:12489 compcert.backend.Allocation <> b1 var
R12524:12527 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12504:12513 compcert.backend.LTL <> Ljumptable constr
R12544:12554 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R12579:12591 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R12592:12595 Coq.Init.Datatypes <> Some constr
R12597:12607 compcert.backend.Allocation <> BSjumptable constr
R12613:12615 compcert.backend.Allocation <> mv1 var
R12555:12565 Coq.Lists.List <> list_eq_dec thm
R12567:12569 compcert.lib.Coqlib <> peq def
R12640:12643 Coq.Init.Datatypes <> None constr
R12659:12665 compcert.backend.RTL <> Ireturn constr
R12697:12709 compcert.backend.Allocation <> extract_moves def
R12715:12715 compcert.backend.Allocation <> b var
R12711:12713 Coq.Init.Datatypes <> nil constr
R12732:12733 compcert.backend.Allocation <> b1 var
R12755:12758 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12748:12754 compcert.backend.LTL <> Lreturn constr
R12765:12768 Coq.Init.Datatypes <> Some constr
R12770:12777 compcert.backend.Allocation <> BSreturn constr
R12783:12785 compcert.backend.Allocation <> mv1 var
R12801:12804 Coq.Init.Datatypes <> None constr
def 13008:13017 <> pair_codes
R13024:13035 compcert.backend.RTL <> function rec
R13043:13054 compcert.backend.LTL <> function rec
R13059:13065 compcert.lib.Maps PTree t def
R13067:13077 compcert.backend.Allocation <> block_shape ind
R13084:13096 compcert.lib.Maps PTree combine def
R13192:13202 compcert.backend.LTL <> fn_code proj
R13204:13205 compcert.backend.Allocation <> f2 var
R13175:13185 compcert.backend.RTL <> fn_code proj
R13187:13188 compcert.backend.Allocation <> f1 var
R13120:13122 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R13124:13127 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R13132:13133 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R13128:13131 compcert.backend.Allocation <> opti var
R13134:13136 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R13138:13141 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R13146:13147 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R13142:13145 compcert.backend.Allocation <> optb var
R13148:13163 compcert.backend.Allocation <> pair_instr_block def
def 13390:13405 <> pair_entrypoints
R13412:13423 compcert.backend.RTL <> function rec
R13431:13442 compcert.backend.LTL <> function rec
R13447:13452 Coq.Init.Datatypes <> option ind
R13454:13458 compcert.backend.Allocation <> moves def
R13465:13467 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R13469:13472 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R13512:13515 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R13473:13473 compcert.lib.Maps <> ::x_'!'_x not
R13488:13490 compcert.lib.Maps <> ::x_'!'_x not
R13511:13511 compcert.lib.Maps <> ::x_'!'_x not
R13491:13507 compcert.backend.LTL <> fn_entrypoint proj
R13509:13510 compcert.backend.Allocation <> f2 var
R13474:13484 compcert.backend.LTL <> fn_code proj
R13486:13487 compcert.backend.Allocation <> f2 var
R13532:13544 compcert.backend.Allocation <> extract_moves def
R13546:13548 Coq.Init.Datatypes <> nil constr
R13557:13567 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R13604:13608 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R13609:13612 Coq.Init.Datatypes <> Some constr
R13614:13615 compcert.backend.Allocation <> mv var
R13568:13577 compcert.backend.Allocation <> check_succ def
R13602:13603 compcert.backend.Allocation <> b1 var
R13580:13596 compcert.backend.RTL <> fn_entrypoint proj
R13598:13599 compcert.backend.Allocation <> f1 var
ind 14398:14410 <> equation_kind
constr 14422:14425 <> Full
constr 14429:14431 <> Low
constr 14435:14438 <> High
R14426:14426 compcert.backend.Allocation <> equation_kind ind
R14432:14432 compcert.backend.Allocation <> equation_kind ind
R14439:14439 compcert.backend.Allocation <> equation_kind ind
constr 14461:14462 <> Eq
rec 14449:14456 <> equation
proj 14468:14472 <> ekind
proj 14492:14495 <> ereg
proj 14505:14508 <> eloc
R14475:14487 compcert.backend.Allocation <> equation_kind ind
R14498:14500 compcert.backend.Registers <> reg def
R14511:14513 compcert.backend.Locations <> loc ind
R14678:14689 compcert.lib.Maps INDEXED_TYPE <> mod
mod 14661:14673 <> IndexedEqKind
def 14705:14705 IndexedEqKind t
R14710:14722 compcert.backend.Allocation IndexedEqKind equation_kind ind
def 14738:14742 IndexedEqKind index
R14748:14748 compcert.backend.Allocation IndexedEqKind t def
R14764:14764 compcert.backend.Allocation <> x var
R14771:14774 compcert.backend.Allocation IndexedEqKind Full constr
R14792:14794 compcert.backend.Allocation IndexedEqKind Low constr
R14812:14815 compcert.backend.Allocation IndexedEqKind High constr
prf 14844:14852 IndexedEqKind index_inj
R14889:14891 Coq.Init.Logic <> :type_scope:x_'='_x not
R14888:14888 compcert.backend.Allocation <> x var
R14892:14892 compcert.backend.Allocation <> y var
R14874:14876 Coq.Init.Logic <> :type_scope:x_'='_x not
R14867:14871 compcert.backend.Allocation IndexedEqKind index def
R14873:14873 compcert.backend.Allocation <> x var
R14877:14881 compcert.backend.Allocation IndexedEqKind index def
R14883:14883 compcert.backend.Allocation <> y var
def 14965:14966 IndexedEqKind eq
R14974:14974 compcert.backend.Allocation IndexedEqKind t def
R14979:14979 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R14983:14987 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R14992:14992 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R14981:14981 Coq.Init.Logic <> :type_scope:x_'='_x not
R14980:14980 compcert.backend.Allocation <> x var
R14982:14982 compcert.backend.Allocation <> y var
R14989:14990 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R14988:14988 compcert.backend.Allocation <> x var
R14991:14991 compcert.backend.Allocation <> y var
R15034:15046 compcert.backend.Allocation IndexedEqKind <> mod
R15074:15087 compcert.lib.Ordered OrderedIndexed <> modtype
R15089:15101 compcert.backend.Allocation IndexedEqKind <> modtype
mod 15057:15069 <> OrderedEqKind
R15234:15244 Coq.Structures.OrderedType OrderedType <> mod
mod 15215:15229 <> OrderedEquation
def 15260:15260 OrderedEquation t
R15265:15272 compcert.backend.Allocation OrderedEquation equation rec
def 15288:15289 OrderedEquation eq
R15297:15297 compcert.backend.Allocation OrderedEquation t def
R15304:15306 Coq.Init.Logic <> :type_scope:x_'='_x not
R15303:15303 compcert.backend.Allocation <> x var
R15307:15307 compcert.backend.Allocation <> y var
def 15323:15324 OrderedEquation lt
R15332:15332 compcert.backend.Allocation OrderedEquation t def
R15363:15367 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15489:15489 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15342:15344 compcert.lib.Coqlib <> Plt def
R15356:15359 compcert.backend.Allocation OrderedEquation ereg proj
R15361:15361 compcert.backend.Allocation <> y var
R15347:15350 compcert.backend.Allocation OrderedEquation ereg proj
R15352:15352 compcert.backend.Allocation <> x var
R15383:15391 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15488:15488 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15374:15376 Coq.Init.Logic <> :type_scope:x_'='_x not
R15368:15371 compcert.backend.Allocation OrderedEquation ereg proj
R15373:15373 compcert.backend.Allocation <> x var
R15377:15380 compcert.backend.Allocation OrderedEquation ereg proj
R15382:15382 compcert.backend.Allocation <> y var
R15423:15427 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15487:15487 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15392:15404 compcert.backend.Locations OrderedLoc lt def
R15416:15419 compcert.backend.Allocation OrderedEquation eloc proj
R15421:15421 compcert.backend.Allocation <> y var
R15407:15410 compcert.backend.Allocation OrderedEquation eloc proj
R15412:15412 compcert.backend.Allocation <> x var
R15443:15450 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15434:15436 Coq.Init.Logic <> :type_scope:x_'='_x not
R15428:15431 compcert.backend.Allocation OrderedEquation eloc proj
R15433:15433 compcert.backend.Allocation <> x var
R15437:15440 compcert.backend.Allocation OrderedEquation eloc proj
R15442:15442 compcert.backend.Allocation <> y var
R15451:15466 compcert.backend.Allocation OrderedEqKind lt def
R15479:15483 compcert.backend.Allocation OrderedEquation ekind proj
R15485:15485 compcert.backend.Allocation <> y var
R15469:15473 compcert.backend.Allocation OrderedEquation ekind proj
R15475:15475 compcert.backend.Allocation <> x var
prf 15500:15506 OrderedEquation eq_refl
R15521:15521 compcert.backend.Allocation OrderedEquation t def
R15524:15525 compcert.backend.Allocation OrderedEquation eq def
R15529:15529 compcert.backend.Allocation <> x var
R15527:15527 compcert.backend.Allocation <> x var
R15542:15551 Coq.Init.Logic <> refl_equal syndef
R15553:15553 compcert.backend.Allocation OrderedEquation t def
prf 15566:15571 OrderedEquation eq_sym
R15588:15588 compcert.backend.Allocation OrderedEquation t def
R15601:15602 compcert.backend.Allocation OrderedEquation eq def
R15606:15606 compcert.backend.Allocation <> x var
R15604:15604 compcert.backend.Allocation <> y var
R15591:15592 compcert.backend.Allocation OrderedEquation eq def
R15596:15596 compcert.backend.Allocation <> y var
R15594:15594 compcert.backend.Allocation <> x var
R15619:15627 Coq.Init.Logic <> sym_equal syndef
R15629:15629 compcert.backend.Allocation OrderedEquation t def
prf 15641:15648 OrderedEquation eq_trans
R15667:15667 compcert.backend.Allocation OrderedEquation t def
R15690:15691 compcert.backend.Allocation OrderedEquation eq def
R15695:15695 compcert.backend.Allocation <> z var
R15693:15693 compcert.backend.Allocation <> x var
R15680:15681 compcert.backend.Allocation OrderedEquation eq def
R15685:15685 compcert.backend.Allocation <> z var
R15683:15683 compcert.backend.Allocation <> y var
R15670:15671 compcert.backend.Allocation OrderedEquation eq def
R15675:15675 compcert.backend.Allocation <> y var
R15673:15673 compcert.backend.Allocation <> x var
R15708:15718 Coq.Init.Logic <> trans_equal syndef
R15720:15720 compcert.backend.Allocation OrderedEquation t def
prf 15732:15739 OrderedEquation lt_trans
R15758:15758 compcert.backend.Allocation OrderedEquation t def
R15781:15782 compcert.backend.Allocation OrderedEquation lt def
R15786:15786 compcert.backend.Allocation <> z var
R15784:15784 compcert.backend.Allocation <> x var
R15771:15772 compcert.backend.Allocation OrderedEquation lt def
R15776:15776 compcert.backend.Allocation <> z var
R15774:15774 compcert.backend.Allocation <> y var
R15761:15762 compcert.backend.Allocation OrderedEquation lt def
R15766:15766 compcert.backend.Allocation <> y var
R15764:15764 compcert.backend.Allocation <> x var
R15809:15810 compcert.backend.Allocation OrderedEquation lt def
R15868:15876 compcert.lib.Coqlib <> Plt_trans thm
R15868:15876 compcert.lib.Coqlib <> Plt_trans thm
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R16046:16064 compcert.backend.Locations OrderedLoc lt_trans thm
R16046:16064 compcert.backend.Locations OrderedLoc lt_trans thm
R16155:16176 compcert.backend.Allocation OrderedEqKind lt_trans thm
R16155:16176 compcert.backend.Allocation OrderedEqKind lt_trans thm
prf 16201:16209 OrderedEquation lt_not_eq
R16226:16226 compcert.backend.Allocation OrderedEquation t def
R16239:16240 Coq.Init.Logic <> :type_scope:'~'_x not
R16241:16242 compcert.backend.Allocation OrderedEquation eq def
R16246:16246 compcert.backend.Allocation <> y var
R16244:16244 compcert.backend.Allocation <> x var
R16229:16230 compcert.backend.Allocation OrderedEquation lt def
R16234:16234 compcert.backend.Allocation <> y var
R16232:16232 compcert.backend.Allocation <> x var
R16269:16270 compcert.backend.Allocation OrderedEquation lt def
R16273:16274 compcert.backend.Allocation OrderedEquation eq def
R0:-1 compcert.backend.Allocation <> y var
R16328:16337 compcert.lib.Coqlib <> Plt_strict thm
R16328:16337 compcert.lib.Coqlib <> Plt_strict thm
R16357:16376 compcert.backend.Locations OrderedLoc lt_not_eq thm
R16357:16376 compcert.backend.Locations OrderedLoc lt_not_eq thm
R16407:16429 compcert.backend.Allocation OrderedEqKind lt_not_eq thm
R16407:16429 compcert.backend.Allocation OrderedEqKind lt_not_eq thm
def 16470:16476 OrderedEquation compare
R16493:16493 compcert.backend.Allocation OrderedEquation t def
R16496:16502 Coq.Structures.OrderedType <> Compare ind
R16512:16512 compcert.backend.Allocation <> y var
R16510:16510 compcert.backend.Allocation <> x var
R16507:16508 compcert.backend.Allocation OrderedEquation eq def
R16504:16505 compcert.backend.Allocation OrderedEquation lt def
R16550:16572 compcert.lib.Ordered OrderedPositive compare defax
R16584:16587 compcert.backend.Allocation OrderedEquation ereg proj
R16575:16578 compcert.backend.Allocation OrderedEquation ereg proj
R16550:16572 compcert.lib.Ordered OrderedPositive compare defax
R16584:16587 compcert.backend.Allocation OrderedEquation ereg proj
R16575:16578 compcert.backend.Allocation OrderedEquation ereg proj
R16604:16605 Coq.Structures.OrderedType <> LT constr
R16604:16605 Coq.Structures.OrderedType <> LT constr
R16633:16650 compcert.backend.Locations OrderedLoc compare def
R16662:16665 compcert.backend.Allocation OrderedEquation eloc proj
R16653:16656 compcert.backend.Allocation OrderedEquation eloc proj
R16633:16650 compcert.backend.Locations OrderedLoc compare def
R16662:16665 compcert.backend.Allocation OrderedEquation eloc proj
R16653:16656 compcert.backend.Allocation OrderedEquation eloc proj
R16684:16685 Coq.Structures.OrderedType <> LT constr
R16684:16685 Coq.Structures.OrderedType <> LT constr
R16716:16736 compcert.backend.Allocation OrderedEqKind compare thm
R16749:16753 compcert.backend.Allocation OrderedEquation ekind proj
R16739:16743 compcert.backend.Allocation OrderedEquation ekind proj
R16716:16736 compcert.backend.Allocation OrderedEqKind compare thm
R16749:16753 compcert.backend.Allocation OrderedEquation ekind proj
R16739:16743 compcert.backend.Allocation OrderedEquation ekind proj
R16774:16775 Coq.Structures.OrderedType <> LT constr
R16774:16775 Coq.Structures.OrderedType <> LT constr
R16803:16804 Coq.Structures.OrderedType <> EQ constr
R16803:16804 Coq.Structures.OrderedType <> EQ constr
R16915:16916 Coq.Structures.OrderedType <> GT constr
R16915:16916 Coq.Structures.OrderedType <> GT constr
R16941:16942 Coq.Structures.OrderedType <> GT constr
R16941:16942 Coq.Structures.OrderedType <> GT constr
R16966:16967 Coq.Structures.OrderedType <> GT constr
R16966:16967 Coq.Structures.OrderedType <> GT constr
def 17005:17010 OrderedEquation eq_dec
R17018:17018 compcert.backend.Allocation OrderedEquation t def
R17023:17023 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R17029:17033 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R17040:17040 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R17025:17027 Coq.Init.Logic <> :type_scope:x_'='_x not
R17024:17024 compcert.backend.Allocation <> x var
R17028:17028 compcert.backend.Allocation <> y var
R17035:17038 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17034:17034 compcert.backend.Allocation <> x var
R17039:17039 compcert.backend.Allocation <> y var
R17092:17097 compcert.backend.Locations Loc eq thm
R17092:17097 compcert.backend.Locations Loc eq thm
R17110:17112 compcert.lib.Coqlib <> peq def
R17110:17112 compcert.lib.Coqlib <> peq def
R17125:17140 compcert.backend.Allocation IndexedEqKind eq def
R17125:17140 compcert.backend.Allocation IndexedEqKind eq def
R17158:17172 compcert.backend.Allocation OrderedEquation <> mod
R17314:17324 Coq.Structures.OrderedType OrderedType <> mod
mod 17294:17309 <> OrderedEquation'
def 17340:17340 OrderedEquation' t
R17345:17352 compcert.backend.Allocation OrderedEquation' equation rec
def 17368:17369 OrderedEquation' eq
R17377:17377 compcert.backend.Allocation OrderedEquation' t def
R17384:17386 Coq.Init.Logic <> :type_scope:x_'='_x not
R17383:17383 compcert.backend.Allocation <> x var
R17387:17387 compcert.backend.Allocation <> y var
def 17403:17404 OrderedEquation' lt
R17412:17412 compcert.backend.Allocation OrderedEquation' t def
R17453:17457 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17569:17569 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17422:17434 compcert.backend.Locations OrderedLoc lt def
R17446:17449 compcert.backend.Allocation OrderedEquation' eloc proj
R17451:17451 compcert.backend.Allocation <> y var
R17437:17440 compcert.backend.Allocation OrderedEquation' eloc proj
R17442:17442 compcert.backend.Allocation <> x var
R17473:17481 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17568:17568 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17464:17466 Coq.Init.Logic <> :type_scope:x_'='_x not
R17458:17461 compcert.backend.Allocation OrderedEquation' eloc proj
R17463:17463 compcert.backend.Allocation <> x var
R17467:17470 compcert.backend.Allocation OrderedEquation' eloc proj
R17472:17472 compcert.backend.Allocation <> y var
R17503:17507 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17567:17567 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17482:17484 compcert.lib.Coqlib <> Plt def
R17496:17499 compcert.backend.Allocation OrderedEquation' ereg proj
R17501:17501 compcert.backend.Allocation <> y var
R17487:17490 compcert.backend.Allocation OrderedEquation' ereg proj
R17492:17492 compcert.backend.Allocation <> x var
R17523:17530 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17514:17516 Coq.Init.Logic <> :type_scope:x_'='_x not
R17508:17511 compcert.backend.Allocation OrderedEquation' ereg proj
R17513:17513 compcert.backend.Allocation <> x var
R17517:17520 compcert.backend.Allocation OrderedEquation' ereg proj
R17522:17522 compcert.backend.Allocation <> y var
R17531:17546 compcert.backend.Allocation OrderedEqKind lt def
R17559:17563 compcert.backend.Allocation OrderedEquation' ekind proj
R17565:17565 compcert.backend.Allocation <> y var
R17549:17553 compcert.backend.Allocation OrderedEquation' ekind proj
R17555:17555 compcert.backend.Allocation <> x var
prf 17580:17586 OrderedEquation' eq_refl
R17601:17601 compcert.backend.Allocation OrderedEquation' t def
R17604:17605 compcert.backend.Allocation OrderedEquation' eq def
R17609:17609 compcert.backend.Allocation <> x var
R17607:17607 compcert.backend.Allocation <> x var
R17622:17631 Coq.Init.Logic <> refl_equal syndef
R17633:17633 compcert.backend.Allocation OrderedEquation' t def
prf 17646:17651 OrderedEquation' eq_sym
R17668:17668 compcert.backend.Allocation OrderedEquation' t def
R17681:17682 compcert.backend.Allocation OrderedEquation' eq def
R17686:17686 compcert.backend.Allocation <> x var
R17684:17684 compcert.backend.Allocation <> y var
R17671:17672 compcert.backend.Allocation OrderedEquation' eq def
R17676:17676 compcert.backend.Allocation <> y var
R17674:17674 compcert.backend.Allocation <> x var
R17699:17707 Coq.Init.Logic <> sym_equal syndef
R17709:17709 compcert.backend.Allocation OrderedEquation' t def
prf 17721:17728 OrderedEquation' eq_trans
R17747:17747 compcert.backend.Allocation OrderedEquation' t def
R17770:17771 compcert.backend.Allocation OrderedEquation' eq def
R17775:17775 compcert.backend.Allocation <> z var
R17773:17773 compcert.backend.Allocation <> x var
R17760:17761 compcert.backend.Allocation OrderedEquation' eq def
R17765:17765 compcert.backend.Allocation <> z var
R17763:17763 compcert.backend.Allocation <> y var
R17750:17751 compcert.backend.Allocation OrderedEquation' eq def
R17755:17755 compcert.backend.Allocation <> y var
R17753:17753 compcert.backend.Allocation <> x var
R17788:17798 Coq.Init.Logic <> trans_equal syndef
R17800:17800 compcert.backend.Allocation OrderedEquation' t def
prf 17812:17819 OrderedEquation' lt_trans
R17838:17838 compcert.backend.Allocation OrderedEquation' t def
R17861:17862 compcert.backend.Allocation OrderedEquation' lt def
R17866:17866 compcert.backend.Allocation <> z var
R17864:17864 compcert.backend.Allocation <> x var
R17851:17852 compcert.backend.Allocation OrderedEquation' lt def
R17856:17856 compcert.backend.Allocation <> z var
R17854:17854 compcert.backend.Allocation <> y var
R17841:17842 compcert.backend.Allocation OrderedEquation' lt def
R17846:17846 compcert.backend.Allocation <> y var
R17844:17844 compcert.backend.Allocation <> x var
R17889:17890 compcert.backend.Allocation OrderedEquation' lt def
R17948:17966 compcert.backend.Locations OrderedLoc lt_trans thm
R17948:17966 compcert.backend.Locations OrderedLoc lt_trans thm
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R18137:18145 compcert.lib.Coqlib <> Plt_trans thm
R18137:18145 compcert.lib.Coqlib <> Plt_trans thm
R18237:18258 compcert.backend.Allocation OrderedEqKind lt_trans thm
R18237:18258 compcert.backend.Allocation OrderedEqKind lt_trans thm
prf 18283:18291 OrderedEquation' lt_not_eq
R18308:18308 compcert.backend.Allocation OrderedEquation' t def
R18321:18322 Coq.Init.Logic <> :type_scope:'~'_x not
R18323:18324 compcert.backend.Allocation OrderedEquation' eq def
R18328:18328 compcert.backend.Allocation <> y var
R18326:18326 compcert.backend.Allocation <> x var
R18311:18312 compcert.backend.Allocation OrderedEquation' lt def
R18316:18316 compcert.backend.Allocation <> y var
R18314:18314 compcert.backend.Allocation <> x var
R18351:18352 compcert.backend.Allocation OrderedEquation' lt def
R18355:18356 compcert.backend.Allocation OrderedEquation' eq def
R0:-1 compcert.backend.Allocation <> y var
R18410:18429 compcert.backend.Locations OrderedLoc lt_not_eq thm
R18410:18429 compcert.backend.Locations OrderedLoc lt_not_eq thm
R18460:18469 compcert.lib.Coqlib <> Plt_strict thm
R18460:18469 compcert.lib.Coqlib <> Plt_strict thm
R18489:18511 compcert.backend.Allocation OrderedEqKind lt_not_eq thm
R18489:18511 compcert.backend.Allocation OrderedEqKind lt_not_eq thm
def 18552:18558 OrderedEquation' compare
R18575:18575 compcert.backend.Allocation OrderedEquation' t def
R18578:18584 Coq.Structures.OrderedType <> Compare ind
R18594:18594 compcert.backend.Allocation <> y var
R18592:18592 compcert.backend.Allocation <> x var
R18589:18590 compcert.backend.Allocation OrderedEquation' eq def
R18586:18587 compcert.backend.Allocation OrderedEquation' lt def
R18632:18649 compcert.backend.Locations OrderedLoc compare def
R18661:18664 compcert.backend.Allocation OrderedEquation' eloc proj
R18652:18655 compcert.backend.Allocation OrderedEquation' eloc proj
R18632:18649 compcert.backend.Locations OrderedLoc compare def
R18661:18664 compcert.backend.Allocation OrderedEquation' eloc proj
R18652:18655 compcert.backend.Allocation OrderedEquation' eloc proj
R18681:18682 Coq.Structures.OrderedType <> LT constr
R18681:18682 Coq.Structures.OrderedType <> LT constr
R18710:18732 compcert.lib.Ordered OrderedPositive compare defax
R18744:18747 compcert.backend.Allocation OrderedEquation' ereg proj
R18735:18738 compcert.backend.Allocation OrderedEquation' ereg proj
R18710:18732 compcert.lib.Ordered OrderedPositive compare defax
R18744:18747 compcert.backend.Allocation OrderedEquation' ereg proj
R18735:18738 compcert.backend.Allocation OrderedEquation' ereg proj
R18766:18767 Coq.Structures.OrderedType <> LT constr
R18766:18767 Coq.Structures.OrderedType <> LT constr
R18798:18818 compcert.backend.Allocation OrderedEqKind compare thm
R18831:18835 compcert.backend.Allocation OrderedEquation' ekind proj
R18821:18825 compcert.backend.Allocation OrderedEquation' ekind proj
R18798:18818 compcert.backend.Allocation OrderedEqKind compare thm
R18831:18835 compcert.backend.Allocation OrderedEquation' ekind proj
R18821:18825 compcert.backend.Allocation OrderedEquation' ekind proj
R18856:18857 Coq.Structures.OrderedType <> LT constr
R18856:18857 Coq.Structures.OrderedType <> LT constr
R18885:18886 Coq.Structures.OrderedType <> EQ constr
R18885:18886 Coq.Structures.OrderedType <> EQ constr
R18997:18998 Coq.Structures.OrderedType <> GT constr
R18997:18998 Coq.Structures.OrderedType <> GT constr
R19023:19024 Coq.Structures.OrderedType <> GT constr
R19023:19024 Coq.Structures.OrderedType <> GT constr
R19048:19049 Coq.Structures.OrderedType <> GT constr
R19048:19049 Coq.Structures.OrderedType <> GT constr
def 19087:19092 OrderedEquation' eq_dec
R19108:19108 compcert.backend.Allocation OrderedEquation' t def
R19112:19112 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R19118:19122 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R19129:19129 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R19114:19116 Coq.Init.Logic <> :type_scope:x_'='_x not
R19113:19113 compcert.backend.Allocation <> x var
R19117:19117 compcert.backend.Allocation <> y var
R19124:19127 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R19123:19123 compcert.backend.Allocation <> x var
R19128:19128 compcert.backend.Allocation <> y var
R19134:19155 compcert.backend.Allocation OrderedEquation eq_dec def
R19162:19177 compcert.backend.Allocation OrderedEquation' <> mod
R19197:19212 compcert.lib.FSetAVLplus Make <> modtype
R19214:19228 compcert.backend.Allocation OrderedEquation <> modtype
mod 19188:19192 <> EqSet
R19249:19264 compcert.lib.FSetAVLplus Make <> modtype
R19266:19281 compcert.backend.Allocation OrderedEquation' <> modtype
mod 19239:19244 <> EqSet2
constr 19715:19719 <> mkeqs
rec 19708:19710 <> eqs
proj 19725:19728 <> eqs1
proj 19744:19747 <> eqs2
proj 19763:19770 <> eqs_same
R19733:19739 compcert.backend.Allocation EqSet t def
R19751:19758 compcert.backend.Allocation EqSet2 t def
R19799:19803 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19783:19791 compcert.backend.Allocation EqSet2 In def
R19795:19798 compcert.backend.Allocation <> eqs2 meth
R19793:19793 compcert.backend.Allocation <> q var
R19804:19811 compcert.backend.Allocation EqSet In def
R19815:19818 compcert.backend.Allocation <> eqs1 meth
R19813:19813 compcert.backend.Allocation <> q var
def 19921:19929 <> empty_eqs
R19934:19938 compcert.backend.Allocation <> mkeqs constr
R19952:19963 compcert.backend.Allocation EqSet2 empty def
R19940:19950 compcert.backend.Allocation EqSet empty def
R20008:20021 compcert.backend.Allocation EqSet2 empty_1 def
R20008:20021 compcert.backend.Allocation EqSet2 empty_1 def
R20037:20049 compcert.backend.Allocation EqSet empty_1 def
R20037:20049 compcert.backend.Allocation EqSet empty_1 def
def 20135:20146 <> add_equation
R20152:20159 compcert.backend.Allocation <> equation rec
R20166:20168 compcert.backend.Allocation <> eqs rec
R20176:20180 compcert.backend.Allocation <> mkeqs constr
R20206:20215 compcert.backend.Allocation EqSet2 add def
R20220:20223 compcert.backend.Allocation <> eqs2 proj
R20225:20225 compcert.backend.Allocation <> e var
R20217:20217 compcert.backend.Allocation <> q var
R20183:20191 compcert.backend.Allocation EqSet add def
R20196:20199 compcert.backend.Allocation <> eqs1 proj
R20201:20201 compcert.backend.Allocation <> e var
R20193:20193 compcert.backend.Allocation <> q var
R20278:20300 compcert.backend.Allocation OrderedEquation' eq_dec defax
R20278:20300 compcert.backend.Allocation OrderedEquation' eq_dec defax
R20318:20328 compcert.backend.Allocation EqSet add_1 def
R20318:20328 compcert.backend.Allocation EqSet add_1 def
R20345:20355 compcert.backend.Allocation EqSet add_2 def
R20345:20355 compcert.backend.Allocation EqSet add_2 def
R20365:20372 compcert.backend.Allocation <> eqs_same proj
R20365:20372 compcert.backend.Allocation <> eqs_same proj
R20384:20395 compcert.backend.Allocation EqSet2 add_3 def
R20384:20395 compcert.backend.Allocation EqSet2 add_3 def
R20423:20444 compcert.backend.Allocation OrderedEquation eq_dec defax
R20423:20444 compcert.backend.Allocation OrderedEquation eq_dec defax
R20462:20473 compcert.backend.Allocation EqSet2 add_1 def
R20462:20473 compcert.backend.Allocation EqSet2 add_1 def
R20490:20501 compcert.backend.Allocation EqSet2 add_2 def
R20490:20501 compcert.backend.Allocation EqSet2 add_2 def
R20511:20518 compcert.backend.Allocation <> eqs_same proj
R20511:20518 compcert.backend.Allocation <> eqs_same proj
R20530:20540 compcert.backend.Allocation EqSet add_3 def
R20530:20540 compcert.backend.Allocation EqSet add_3 def
def 20581:20595 <> remove_equation
R20601:20608 compcert.backend.Allocation <> equation rec
R20615:20617 compcert.backend.Allocation <> eqs rec
R20625:20629 compcert.backend.Allocation <> mkeqs constr
R20658:20670 compcert.backend.Allocation EqSet2 remove def
R20675:20678 compcert.backend.Allocation <> eqs2 proj
R20680:20680 compcert.backend.Allocation <> e var
R20672:20672 compcert.backend.Allocation <> q var
R20632:20643 compcert.backend.Allocation EqSet remove def
R20648:20651 compcert.backend.Allocation <> eqs1 proj
R20653:20653 compcert.backend.Allocation <> e var
R20645:20645 compcert.backend.Allocation <> q var
R20733:20755 compcert.backend.Allocation OrderedEquation' eq_dec defax
R20733:20755 compcert.backend.Allocation OrderedEquation' eq_dec defax
R20773:20787 compcert.backend.Allocation EqSet2 remove_1 def
R20773:20787 compcert.backend.Allocation EqSet2 remove_1 def
R20805:20818 compcert.backend.Allocation EqSet remove_2 def
R20805:20818 compcert.backend.Allocation EqSet remove_2 def
R20834:20841 compcert.backend.Allocation <> eqs_same proj
R20834:20841 compcert.backend.Allocation <> eqs_same proj
R20853:20867 compcert.backend.Allocation EqSet2 remove_3 def
R20853:20867 compcert.backend.Allocation EqSet2 remove_3 def
R20895:20916 compcert.backend.Allocation OrderedEquation eq_dec defax
R20895:20916 compcert.backend.Allocation OrderedEquation eq_dec defax
R20934:20947 compcert.backend.Allocation EqSet remove_1 def
R20934:20947 compcert.backend.Allocation EqSet remove_1 def
R20965:20979 compcert.backend.Allocation EqSet2 remove_2 def
R20965:20979 compcert.backend.Allocation EqSet2 remove_2 def
R20995:21002 compcert.backend.Allocation <> eqs_same proj
R20995:21002 compcert.backend.Allocation <> eqs_same proj
R21014:21027 compcert.backend.Allocation EqSet remove_3 def
R21014:21027 compcert.backend.Allocation EqSet remove_3 def
def 21250:21261 <> select_reg_l
R21267:21269 compcert.backend.Registers <> reg def
R21276:21283 compcert.backend.Allocation <> equation rec
R21289:21295 Coq.PArith.BinPos Pos leb def
R21300:21303 compcert.backend.Allocation <> ereg proj
R21305:21305 compcert.backend.Allocation <> q var
R21297:21297 compcert.backend.Allocation <> r var
def 21320:21331 <> select_reg_h
R21337:21339 compcert.backend.Registers <> reg def
R21346:21353 compcert.backend.Allocation <> equation rec
R21359:21365 Coq.PArith.BinPos Pos leb def
R21376:21376 compcert.backend.Allocation <> r var
R21368:21371 compcert.backend.Allocation <> ereg proj
R21373:21373 compcert.backend.Allocation <> q var
def 21391:21407 <> reg_unconstrained
R21413:21415 compcert.backend.Registers <> reg def
R21422:21424 compcert.backend.Allocation <> eqs rec
R21429:21432 Coq.Init.Datatypes <> bool ind
R21439:21442 Coq.Init.Datatypes <> negb def
R21445:21461 compcert.backend.Allocation EqSet mem_between def
R21498:21501 compcert.backend.Allocation <> eqs1 proj
R21503:21503 compcert.backend.Allocation <> e var
R21481:21492 compcert.backend.Allocation <> select_reg_h def
R21494:21494 compcert.backend.Allocation <> r var
R21464:21475 compcert.backend.Allocation <> select_reg_l def
R21477:21477 compcert.backend.Allocation <> r var
def 21758:21769 <> select_loc_l
R21775:21777 compcert.backend.Locations <> loc ind
R21795:21819 compcert.backend.Locations OrderedLoc diff_low_bound def
R21821:21821 compcert.backend.Allocation <> l var
R21836:21843 compcert.backend.Allocation <> equation rec
R21855:21872 compcert.backend.Locations OrderedLoc compare def
R21883:21884 compcert.backend.Allocation <> lb var
R21875:21878 compcert.backend.Allocation <> eloc proj
R21880:21880 compcert.backend.Allocation <> q var
R21891:21892 Coq.Structures.OrderedType <> LT constr
R21899:21903 Coq.Init.Datatypes <> false constr
R21912:21915 Coq.Init.Datatypes <> true constr
def 21933:21944 <> select_loc_h
R21950:21952 compcert.backend.Locations <> loc ind
R21970:21995 compcert.backend.Locations OrderedLoc diff_high_bound def
R21997:21997 compcert.backend.Allocation <> l var
R22012:22019 compcert.backend.Allocation <> equation rec
R22031:22048 compcert.backend.Locations OrderedLoc compare def
R22059:22060 compcert.backend.Allocation <> lh var
R22051:22054 compcert.backend.Allocation <> eloc proj
R22056:22056 compcert.backend.Allocation <> q var
R22067:22068 Coq.Structures.OrderedType <> GT constr
R22075:22079 Coq.Init.Datatypes <> false constr
R22088:22091 Coq.Init.Datatypes <> true constr
def 22110:22126 <> loc_unconstrained
R22132:22134 compcert.backend.Locations <> loc ind
R22141:22143 compcert.backend.Allocation <> eqs rec
R22148:22151 Coq.Init.Datatypes <> bool ind
R22158:22161 Coq.Init.Datatypes <> negb def
R22164:22181 compcert.backend.Allocation EqSet2 mem_between def
R22218:22221 compcert.backend.Allocation <> eqs2 proj
R22223:22223 compcert.backend.Allocation <> e var
R22201:22212 compcert.backend.Allocation <> select_loc_h def
R22214:22214 compcert.backend.Allocation <> l var
R22184:22195 compcert.backend.Allocation <> select_loc_l def
R22197:22197 compcert.backend.Allocation <> l var
def 22240:22260 <> reg_loc_unconstrained
R22266:22268 compcert.backend.Registers <> reg def
R22275:22277 compcert.backend.Locations <> loc ind
R22284:22286 compcert.backend.Allocation <> eqs rec
R22291:22294 Coq.Init.Datatypes <> bool ind
R22322:22325 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R22301:22317 compcert.backend.Allocation <> reg_unconstrained def
R22321:22321 compcert.backend.Allocation <> e var
R22319:22319 compcert.backend.Allocation <> r var
R22326:22342 compcert.backend.Allocation <> loc_unconstrained def
R22346:22346 compcert.backend.Allocation <> e var
R22344:22344 compcert.backend.Allocation <> l var
def 22521:22529 <> subst_reg
R22539:22541 compcert.backend.Registers <> reg def
R22548:22550 compcert.backend.Allocation <> eqs rec
R22555:22557 compcert.backend.Allocation <> eqs rec
R22564:22573 compcert.backend.Allocation EqSet fold def
R22732:22732 compcert.backend.Allocation <> e var
R22659:22680 compcert.backend.Allocation EqSet elements_between def
R22719:22722 compcert.backend.Allocation <> eqs1 proj
R22724:22724 compcert.backend.Allocation <> e var
R22701:22712 compcert.backend.Allocation <> select_reg_h def
R22714:22715 compcert.backend.Allocation <> r1 var
R22683:22694 compcert.backend.Allocation <> select_reg_l def
R22696:22697 compcert.backend.Allocation <> r1 var
R22591:22602 compcert.backend.Allocation <> add_equation def
R22632:22646 compcert.backend.Allocation <> remove_equation def
R22650:22650 compcert.backend.Allocation <> e var
R22648:22648 compcert.backend.Allocation <> q var
R22605:22606 compcert.backend.Allocation <> Eq constr
R22622:22625 compcert.backend.Allocation <> eloc proj
R22627:22627 compcert.backend.Allocation <> q var
R22618:22619 compcert.backend.Allocation <> r2 var
R22609:22613 compcert.backend.Allocation <> ekind proj
R22615:22615 compcert.backend.Allocation <> q var
def 22950:22963 <> subst_reg_kind
R22970:22972 compcert.backend.Registers <> reg def
R22980:22992 compcert.backend.Allocation <> equation_kind ind
R23000:23002 compcert.backend.Registers <> reg def
R23010:23022 compcert.backend.Allocation <> equation_kind ind
R23029:23031 compcert.backend.Allocation <> eqs rec
R23036:23038 compcert.backend.Allocation <> eqs rec
R23045:23054 compcert.backend.Allocation EqSet fold def
R23269:23269 compcert.backend.Allocation <> e var
R23196:23217 compcert.backend.Allocation EqSet elements_between def
R23256:23259 compcert.backend.Allocation <> eqs1 proj
R23261:23261 compcert.backend.Allocation <> e var
R23238:23249 compcert.backend.Allocation <> select_reg_h def
R23251:23252 compcert.backend.Allocation <> r1 var
R23220:23231 compcert.backend.Allocation <> select_reg_l def
R23233:23234 compcert.backend.Allocation <> r1 var
R23081:23096 compcert.backend.Allocation IndexedEqKind eq def
R23108:23109 compcert.backend.Allocation <> k1 var
R23099:23103 compcert.backend.Allocation <> ekind proj
R23105:23105 compcert.backend.Allocation <> q var
R23188:23188 compcert.backend.Allocation <> e var
R23122:23133 compcert.backend.Allocation <> add_equation def
R23156:23170 compcert.backend.Allocation <> remove_equation def
R23174:23174 compcert.backend.Allocation <> e var
R23172:23172 compcert.backend.Allocation <> q var
R23136:23137 compcert.backend.Allocation <> Eq constr
R23146:23149 compcert.backend.Allocation <> eloc proj
R23151:23151 compcert.backend.Allocation <> q var
R23142:23143 compcert.backend.Allocation <> r2 var
R23139:23140 compcert.backend.Allocation <> k2 var
def 23548:23556 <> subst_loc
R23566:23568 compcert.backend.Locations <> loc ind
R23575:23577 compcert.backend.Allocation <> eqs rec
R23582:23587 Coq.Init.Datatypes <> option ind
R23589:23591 compcert.backend.Allocation <> eqs rec
R23598:23608 compcert.backend.Allocation EqSet2 fold def
R23933:23936 Coq.Init.Datatypes <> Some constr
R23938:23938 compcert.backend.Allocation <> e var
R23857:23879 compcert.backend.Allocation EqSet2 elements_between def
R23918:23921 compcert.backend.Allocation <> eqs2 proj
R23923:23923 compcert.backend.Allocation <> e var
R23900:23911 compcert.backend.Allocation <> select_loc_h def
R23913:23914 compcert.backend.Allocation <> l1 var
R23882:23893 compcert.backend.Allocation <> select_loc_l def
R23895:23896 compcert.backend.Allocation <> l1 var
R23641:23644 compcert.backend.Allocation <> opte var
R23659:23662 Coq.Init.Datatypes <> None constr
R23667:23670 Coq.Init.Datatypes <> None constr
R23680:23683 Coq.Init.Datatypes <> Some constr
R23703:23708 compcert.backend.Locations Loc eq thm
R23714:23717 compcert.backend.Allocation <> eloc proj
R23719:23719 compcert.backend.Allocation <> q var
R23710:23711 compcert.backend.Allocation <> l1 var
R23835:23838 Coq.Init.Datatypes <> None constr
R23739:23742 Coq.Init.Datatypes <> Some constr
R23745:23756 compcert.backend.Allocation <> add_equation def
R23786:23800 compcert.backend.Allocation <> remove_equation def
R23804:23804 compcert.backend.Allocation <> e var
R23802:23802 compcert.backend.Allocation <> q var
R23759:23760 compcert.backend.Allocation <> Eq constr
R23781:23782 compcert.backend.Allocation <> l2 var
R23773:23776 compcert.backend.Allocation <> ereg proj
R23778:23778 compcert.backend.Allocation <> q var
R23763:23767 compcert.backend.Allocation <> ekind proj
R23769:23769 compcert.backend.Allocation <> q var
def 24096:24103 <> sel_type
R24109:24121 compcert.backend.Allocation <> equation_kind ind
R24129:24131 compcert.common.AST <> typ ind
R24136:24138 compcert.common.AST <> typ ind
R24151:24151 compcert.backend.Allocation <> k var
R24162:24165 compcert.backend.Allocation <> Full constr
R24170:24171 compcert.backend.Allocation <> ty var
R24177:24179 compcert.backend.Allocation <> Low constr
R24183:24186 compcert.backend.Allocation <> High constr
R24191:24194 compcert.common.AST <> Tint constr
R24191:24194 compcert.common.AST <> Tint constr
def 24215:24229 <> loc_type_compat
R24237:24242 compcert.backend.RTLtyping <> regenv def
R24249:24251 compcert.backend.Locations <> loc ind
R24258:24260 compcert.backend.Allocation <> eqs rec
R24265:24268 Coq.Init.Datatypes <> bool ind
R24275:24296 compcert.backend.Allocation EqSet2 for_all_between def
R24409:24412 compcert.backend.Allocation <> eqs2 proj
R24414:24414 compcert.backend.Allocation <> e var
R24392:24403 compcert.backend.Allocation <> select_loc_h def
R24405:24405 compcert.backend.Allocation <> l var
R24375:24386 compcert.backend.Allocation <> select_loc_l def
R24388:24388 compcert.backend.Allocation <> l var
R24312:24318 compcert.common.AST <> subtype def
R24357:24364 compcert.backend.Locations Loc type def
R24366:24366 compcert.backend.Allocation <> l var
R24321:24328 compcert.backend.Allocation <> sel_type def
R24341:24343 compcert.backend.Allocation <> env var
R24346:24349 compcert.backend.Allocation <> ereg proj
R24351:24351 compcert.backend.Allocation <> q var
R24331:24335 compcert.backend.Allocation <> ekind proj
R24337:24337 compcert.backend.Allocation <> q var
def 24584:24596 <> add_equations
R24603:24606 Coq.Init.Datatypes <> list ind
R24608:24610 compcert.backend.Registers <> reg def
R24618:24621 Coq.Init.Datatypes <> list ind
R24623:24626 compcert.ia32.Machregs <> mreg ind
R24633:24635 compcert.backend.Allocation <> eqs rec
R24640:24645 Coq.Init.Datatypes <> option ind
R24647:24649 compcert.backend.Allocation <> eqs rec
R24666:24667 compcert.backend.Allocation <> ml var
R24662:24663 compcert.backend.Allocation <> rl var
R24678:24680 Coq.Init.Datatypes <> nil constr
R24683:24685 Coq.Init.Datatypes <> nil constr
R24690:24693 Coq.Init.Datatypes <> Some constr
R24695:24695 compcert.backend.Allocation <> e var
R24703:24706 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24713:24716 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24723:24735 compcert.backend.Allocation <> add_equations def
R24744:24755 compcert.backend.Allocation <> add_equation def
R24777:24777 compcert.backend.Allocation <> e var
R24758:24759 compcert.backend.Allocation <> Eq constr
R24770:24770 compcert.backend.Locations <> R constr
R24761:24764 compcert.backend.Allocation <> Full constr
R24740:24741 compcert.backend.Allocation <> ml var
R24737:24738 compcert.backend.Allocation <> rl var
R24792:24795 Coq.Init.Datatypes <> None constr
R25029:25032 Coq.Init.Datatypes <> list ind
R25034:25036 compcert.backend.Registers <> reg def
R25045:25048 Coq.Init.Datatypes <> list ind
R25050:25052 compcert.common.AST <> typ ind
R25060:25063 Coq.Init.Datatypes <> list ind
R25065:25067 compcert.backend.Locations <> loc ind
R25074:25076 compcert.backend.Allocation <> eqs rec
R25081:25086 Coq.Init.Datatypes <> option ind
R25088:25090 compcert.backend.Allocation <> eqs rec
R25112:25113 compcert.backend.Allocation <> ll var
R25107:25109 compcert.backend.Allocation <> tyl var
R25103:25104 compcert.backend.Allocation <> rl var
R25124:25126 Coq.Init.Datatypes <> nil constr
R25129:25131 Coq.Init.Datatypes <> nil constr
R25134:25136 Coq.Init.Datatypes <> nil constr
R25141:25144 Coq.Init.Datatypes <> Some constr
R25146:25146 compcert.backend.Allocation <> e var
R25154:25157 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25167:25170 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25162:25166 compcert.common.AST <> Tlong constr
R25178:25181 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25184:25187 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25200:25217 compcert.backend.Allocation <> add_equations_args def
R25230:25241 compcert.backend.Allocation <> add_equation def
R25259:25270 compcert.backend.Allocation <> add_equation def
R25288:25288 compcert.backend.Allocation <> e var
R25273:25274 compcert.backend.Allocation <> Eq constr
R25276:25279 compcert.backend.Allocation <> High constr
R25244:25245 compcert.backend.Allocation <> Eq constr
R25247:25249 compcert.backend.Allocation <> Low constr
R25226:25227 compcert.backend.Allocation <> ll var
R25222:25224 compcert.backend.Allocation <> tyl var
R25219:25220 compcert.backend.Allocation <> rl var
R25298:25301 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25306:25306 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25326:25330 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25307:25310 compcert.common.AST <> Tint constr
R25312:25317 compcert.common.AST <> Tfloat constr
R25319:25325 compcert.common.AST <> Tsingle constr
R25338:25341 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25354:25371 compcert.backend.Allocation <> add_equations_args def
R25384:25395 compcert.backend.Allocation <> add_equation def
R25413:25413 compcert.backend.Allocation <> e var
R25398:25399 compcert.backend.Allocation <> Eq constr
R25401:25404 compcert.backend.Allocation <> Full constr
R25380:25381 compcert.backend.Allocation <> ll var
R25376:25378 compcert.backend.Allocation <> tyl var
R25373:25374 compcert.backend.Allocation <> rl var
R25354:25371 compcert.backend.Allocation <> add_equations_args def
R25384:25395 compcert.backend.Allocation <> add_equation def
R25413:25413 compcert.backend.Allocation <> e var
R25398:25399 compcert.backend.Allocation <> Eq constr
R25401:25404 compcert.backend.Allocation <> Full constr
R25380:25381 compcert.backend.Allocation <> ll var
R25376:25378 compcert.backend.Allocation <> tyl var
R25373:25374 compcert.backend.Allocation <> rl var
R25354:25371 compcert.backend.Allocation <> add_equations_args def
R25384:25395 compcert.backend.Allocation <> add_equation def
R25413:25413 compcert.backend.Allocation <> e var
R25398:25399 compcert.backend.Allocation <> Eq constr
R25401:25404 compcert.backend.Allocation <> Full constr
R25380:25381 compcert.backend.Allocation <> ll var
R25376:25378 compcert.backend.Allocation <> tyl var
R25373:25374 compcert.backend.Allocation <> rl var
R25431:25434 Coq.Init.Datatypes <> None constr
R25112:25113 compcert.backend.Allocation <> ll var
R25107:25109 compcert.backend.Allocation <> tyl var
R25103:25104 compcert.backend.Allocation <> rl var
R25124:25126 Coq.Init.Datatypes <> nil constr
R25129:25131 Coq.Init.Datatypes <> nil constr
R25134:25136 Coq.Init.Datatypes <> nil constr
R25141:25144 Coq.Init.Datatypes <> Some constr
R25146:25146 compcert.backend.Allocation <> e var
R25154:25157 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25167:25170 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25162:25166 compcert.common.AST <> Tlong constr
R25178:25181 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25184:25187 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25200:25217 compcert.backend.Allocation <> add_equations_args def
R25230:25241 compcert.backend.Allocation <> add_equation def
R25259:25270 compcert.backend.Allocation <> add_equation def
R25288:25288 compcert.backend.Allocation <> e var
R25273:25274 compcert.backend.Allocation <> Eq constr
R25276:25279 compcert.backend.Allocation <> High constr
R25244:25245 compcert.backend.Allocation <> Eq constr
R25247:25249 compcert.backend.Allocation <> Low constr
R25226:25227 compcert.backend.Allocation <> ll var
R25222:25224 compcert.backend.Allocation <> tyl var
R25219:25220 compcert.backend.Allocation <> rl var
R25298:25301 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25306:25306 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25326:25330 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25307:25310 compcert.common.AST <> Tint constr
R25312:25317 compcert.common.AST <> Tfloat constr
R25319:25325 compcert.common.AST <> Tsingle constr
R25338:25341 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25354:25371 compcert.backend.Allocation <> add_equations_args def
R25384:25395 compcert.backend.Allocation <> add_equation def
R25413:25413 compcert.backend.Allocation <> e var
R25398:25399 compcert.backend.Allocation <> Eq constr
R25401:25404 compcert.backend.Allocation <> Full constr
R25380:25381 compcert.backend.Allocation <> ll var
R25376:25378 compcert.backend.Allocation <> tyl var
R25373:25374 compcert.backend.Allocation <> rl var
R25354:25371 compcert.backend.Allocation <> add_equations_args def
R25384:25395 compcert.backend.Allocation <> add_equation def
R25413:25413 compcert.backend.Allocation <> e var
R25398:25399 compcert.backend.Allocation <> Eq constr
R25401:25404 compcert.backend.Allocation <> Full constr
R25380:25381 compcert.backend.Allocation <> ll var
R25376:25378 compcert.backend.Allocation <> tyl var
R25373:25374 compcert.backend.Allocation <> rl var
R25354:25371 compcert.backend.Allocation <> add_equations_args def
R25384:25395 compcert.backend.Allocation <> add_equation def
R25413:25413 compcert.backend.Allocation <> e var
R25398:25399 compcert.backend.Allocation <> Eq constr
R25401:25404 compcert.backend.Allocation <> Full constr
R25380:25381 compcert.backend.Allocation <> ll var
R25376:25378 compcert.backend.Allocation <> tyl var
R25373:25374 compcert.backend.Allocation <> rl var
R25431:25434 Coq.Init.Datatypes <> None constr
R25112:25113 compcert.backend.Allocation <> ll var
R25107:25109 compcert.backend.Allocation <> tyl var
R25103:25104 compcert.backend.Allocation <> rl var
R25124:25126 Coq.Init.Datatypes <> nil constr
R25129:25131 Coq.Init.Datatypes <> nil constr
R25134:25136 Coq.Init.Datatypes <> nil constr
R25141:25144 Coq.Init.Datatypes <> Some constr
R25146:25146 compcert.backend.Allocation <> e var
R25154:25157 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25167:25170 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25162:25166 compcert.common.AST <> Tlong constr
R25178:25181 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25184:25187 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25200:25217 compcert.backend.Allocation <> add_equations_args def
R25230:25241 compcert.backend.Allocation <> add_equation def
R25259:25270 compcert.backend.Allocation <> add_equation def
R25288:25288 compcert.backend.Allocation <> e var
R25273:25274 compcert.backend.Allocation <> Eq constr
R25276:25279 compcert.backend.Allocation <> High constr
R25244:25245 compcert.backend.Allocation <> Eq constr
R25247:25249 compcert.backend.Allocation <> Low constr
R25226:25227 compcert.backend.Allocation <> ll var
R25222:25224 compcert.backend.Allocation <> tyl var
R25219:25220 compcert.backend.Allocation <> rl var
R25298:25301 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25306:25306 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25326:25330 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25307:25310 compcert.common.AST <> Tint constr
R25312:25317 compcert.common.AST <> Tfloat constr
R25319:25325 compcert.common.AST <> Tsingle constr
R25338:25341 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25354:25371 compcert.backend.Allocation <> add_equations_args def
R25384:25395 compcert.backend.Allocation <> add_equation def
R25413:25413 compcert.backend.Allocation <> e var
R25398:25399 compcert.backend.Allocation <> Eq constr
R25401:25404 compcert.backend.Allocation <> Full constr
R25380:25381 compcert.backend.Allocation <> ll var
R25376:25378 compcert.backend.Allocation <> tyl var
R25373:25374 compcert.backend.Allocation <> rl var
R25354:25371 compcert.backend.Allocation <> add_equations_args def
R25384:25395 compcert.backend.Allocation <> add_equation def
R25413:25413 compcert.backend.Allocation <> e var
R25398:25399 compcert.backend.Allocation <> Eq constr
R25401:25404 compcert.backend.Allocation <> Full constr
R25380:25381 compcert.backend.Allocation <> ll var
R25376:25378 compcert.backend.Allocation <> tyl var
R25373:25374 compcert.backend.Allocation <> rl var
R25354:25371 compcert.backend.Allocation <> add_equations_args def
R25384:25395 compcert.backend.Allocation <> add_equation def
R25413:25413 compcert.backend.Allocation <> e var
R25398:25399 compcert.backend.Allocation <> Eq constr
R25401:25404 compcert.backend.Allocation <> Full constr
R25380:25381 compcert.backend.Allocation <> ll var
R25376:25378 compcert.backend.Allocation <> tyl var
R25373:25374 compcert.backend.Allocation <> rl var
R25431:25434 Coq.Init.Datatypes <> None constr
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R25588:25590 compcert.backend.Registers <> reg def
R25599:25604 Coq.Init.Datatypes <> option ind
R25606:25608 compcert.common.AST <> typ ind
R25616:25619 Coq.Init.Datatypes <> list ind
R25621:25623 compcert.backend.Locations <> loc ind
R25630:25632 compcert.backend.Allocation <> eqs rec
R25637:25642 Coq.Init.Datatypes <> option ind
R25644:25646 compcert.backend.Allocation <> eqs rec
R25659:25661 compcert.backend.Allocation <> oty var
R25672:25675 Coq.Init.Datatypes <> Some constr
R25677:25681 compcert.common.AST <> Tlong constr
R25698:25699 compcert.backend.Allocation <> ll var
R25716:25719 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25722:25725 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25726:25728 Coq.Init.Datatypes <> nil constr
R25733:25736 Coq.Init.Datatypes <> Some constr
R25739:25750 compcert.backend.Allocation <> add_equation def
R25767:25778 compcert.backend.Allocation <> add_equation def
R25795:25795 compcert.backend.Allocation <> e var
R25781:25782 compcert.backend.Allocation <> Eq constr
R25789:25789 compcert.backend.Allocation <> r var
R25784:25787 compcert.backend.Allocation <> High constr
R25753:25754 compcert.backend.Allocation <> Eq constr
R25760:25760 compcert.backend.Allocation <> r var
R25756:25758 compcert.backend.Allocation <> Low constr
R25812:25815 Coq.Init.Datatypes <> None constr
R25848:25849 compcert.backend.Allocation <> ll var
R25866:25869 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25870:25872 Coq.Init.Datatypes <> nil constr
R25877:25880 Coq.Init.Datatypes <> Some constr
R25883:25894 compcert.backend.Allocation <> add_equation def
R25911:25911 compcert.backend.Allocation <> e var
R25897:25898 compcert.backend.Allocation <> Eq constr
R25905:25905 compcert.backend.Allocation <> r var
R25900:25903 compcert.backend.Allocation <> Full constr
R25927:25930 Coq.Init.Datatypes <> None constr
R25659:25661 compcert.backend.Allocation <> oty var
R25672:25675 Coq.Init.Datatypes <> Some constr
R25677:25681 compcert.common.AST <> Tlong constr
R25698:25699 compcert.backend.Allocation <> ll var
R25716:25719 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25722:25725 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25726:25728 Coq.Init.Datatypes <> nil constr
R25733:25736 Coq.Init.Datatypes <> Some constr
R25739:25750 compcert.backend.Allocation <> add_equation def
R25767:25778 compcert.backend.Allocation <> add_equation def
R25795:25795 compcert.backend.Allocation <> e var
R25781:25782 compcert.backend.Allocation <> Eq constr
R25789:25789 compcert.backend.Allocation <> r var
R25784:25787 compcert.backend.Allocation <> High constr
R25753:25754 compcert.backend.Allocation <> Eq constr
R25760:25760 compcert.backend.Allocation <> r var
R25756:25758 compcert.backend.Allocation <> Low constr
R25812:25815 Coq.Init.Datatypes <> None constr
R25848:25849 compcert.backend.Allocation <> ll var
R25866:25869 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25870:25872 Coq.Init.Datatypes <> nil constr
R25877:25880 Coq.Init.Datatypes <> Some constr
R25883:25894 compcert.backend.Allocation <> add_equation def
R25911:25911 compcert.backend.Allocation <> e var
R25897:25898 compcert.backend.Allocation <> Eq constr
R25905:25905 compcert.backend.Allocation <> r var
R25900:25903 compcert.backend.Allocation <> Full constr
R25927:25930 Coq.Init.Datatypes <> None constr
R25659:25661 compcert.backend.Allocation <> oty var
R25672:25675 Coq.Init.Datatypes <> Some constr
R25677:25681 compcert.common.AST <> Tlong constr
R25698:25699 compcert.backend.Allocation <> ll var
R25716:25719 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25722:25725 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25726:25728 Coq.Init.Datatypes <> nil constr
R25733:25736 Coq.Init.Datatypes <> Some constr
R25739:25750 compcert.backend.Allocation <> add_equation def
R25767:25778 compcert.backend.Allocation <> add_equation def
R25795:25795 compcert.backend.Allocation <> e var
R25781:25782 compcert.backend.Allocation <> Eq constr
R25789:25789 compcert.backend.Allocation <> r var
R25784:25787 compcert.backend.Allocation <> High constr
R25753:25754 compcert.backend.Allocation <> Eq constr
R25760:25760 compcert.backend.Allocation <> r var
R25756:25758 compcert.backend.Allocation <> Low constr
R25812:25815 Coq.Init.Datatypes <> None constr
R25848:25849 compcert.backend.Allocation <> ll var
R25866:25869 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25870:25872 Coq.Init.Datatypes <> nil constr
R25877:25880 Coq.Init.Datatypes <> Some constr
R25883:25894 compcert.backend.Allocation <> add_equation def
R25911:25911 compcert.backend.Allocation <> e var
R25897:25898 compcert.backend.Allocation <> Eq constr
R25905:25905 compcert.backend.Allocation <> r var
R25900:25903 compcert.backend.Allocation <> Full constr
R25927:25930 Coq.Init.Datatypes <> None constr
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R26097:26099 compcert.backend.Registers <> reg def
R26108:26113 Coq.Init.Datatypes <> option ind
R26115:26117 compcert.common.AST <> typ ind
R26125:26128 Coq.Init.Datatypes <> list ind
R26130:26132 compcert.backend.Locations <> loc ind
R26139:26141 compcert.backend.Allocation <> eqs rec
R26146:26151 Coq.Init.Datatypes <> option ind
R26153:26155 compcert.backend.Allocation <> eqs rec
R26168:26170 compcert.backend.Allocation <> oty var
R26181:26184 Coq.Init.Datatypes <> Some constr
R26186:26190 compcert.common.AST <> Tlong constr
R26207:26208 compcert.backend.Allocation <> ll var
R26225:26228 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R26231:26234 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R26235:26237 Coq.Init.Datatypes <> nil constr
R26255:26266 compcert.backend.Locations Loc diff_dec def
R26376:26379 Coq.Init.Datatypes <> None constr
R26289:26292 Coq.Init.Datatypes <> Some constr
R26295:26309 compcert.backend.Allocation <> remove_equation def
R26326:26340 compcert.backend.Allocation <> remove_equation def
R26357:26357 compcert.backend.Allocation <> e var
R26343:26344 compcert.backend.Allocation <> Eq constr
R26351:26351 compcert.backend.Allocation <> r var
R26346:26349 compcert.backend.Allocation <> High constr
R26312:26313 compcert.backend.Allocation <> Eq constr
R26319:26319 compcert.backend.Allocation <> r var
R26315:26317 compcert.backend.Allocation <> Low constr
R26394:26397 Coq.Init.Datatypes <> None constr
R26430:26431 compcert.backend.Allocation <> ll var
R26448:26451 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R26452:26454 Coq.Init.Datatypes <> nil constr
R26459:26462 Coq.Init.Datatypes <> Some constr
R26465:26479 compcert.backend.Allocation <> remove_equation def
R26496:26496 compcert.backend.Allocation <> e var
R26482:26483 compcert.backend.Allocation <> Eq constr
R26490:26490 compcert.backend.Allocation <> r var
R26485:26488 compcert.backend.Allocation <> Full constr
R26512:26515 Coq.Init.Datatypes <> None constr
R26168:26170 compcert.backend.Allocation <> oty var
R26181:26184 Coq.Init.Datatypes <> Some constr
R26186:26190 compcert.common.AST <> Tlong constr
R26207:26208 compcert.backend.Allocation <> ll var
R26225:26228 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R26231:26234 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R26235:26237 Coq.Init.Datatypes <> nil constr
R26255:26266 compcert.backend.Locations Loc diff_dec def
R26376:26379 Coq.Init.Datatypes <> None constr
R26289:26292 Coq.Init.Datatypes <> Some constr
R26295:26309 compcert.backend.Allocation <> remove_equation def
R26326:26340 compcert.backend.Allocation <> remove_equation def
R26357:26357 compcert.backend.Allocation <> e var
R26343:26344 compcert.backend.Allocation <> Eq constr
R26351:26351 compcert.backend.Allocation <> r var
R26346:26349 compcert.backend.Allocation <> High constr
R26312:26313 compcert.backend.Allocation <> Eq constr
R26319:26319 compcert.backend.Allocation <> r var
R26315:26317 compcert.backend.Allocation <> Low constr
R26394:26397 Coq.Init.Datatypes <> None constr
R26430:26431 compcert.backend.Allocation <> ll var
R26448:26451 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R26452:26454 Coq.Init.Datatypes <> nil constr
R26459:26462 Coq.Init.Datatypes <> Some constr
R26465:26479 compcert.backend.Allocation <> remove_equation def
R26496:26496 compcert.backend.Allocation <> e var
R26482:26483 compcert.backend.Allocation <> Eq constr
R26490:26490 compcert.backend.Allocation <> r var
R26485:26488 compcert.backend.Allocation <> Full constr
R26512:26515 Coq.Init.Datatypes <> None constr
R26168:26170 compcert.backend.Allocation <> oty var
R26181:26184 Coq.Init.Datatypes <> Some constr
R26186:26190 compcert.common.AST <> Tlong constr
R26207:26208 compcert.backend.Allocation <> ll var
R26225:26228 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R26231:26234 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R26235:26237 Coq.Init.Datatypes <> nil constr
R26255:26266 compcert.backend.Locations Loc diff_dec def
R26376:26379 Coq.Init.Datatypes <> None constr
R26289:26292 Coq.Init.Datatypes <> Some constr
R26295:26309 compcert.backend.Allocation <> remove_equation def
R26326:26340 compcert.backend.Allocation <> remove_equation def
R26357:26357 compcert.backend.Allocation <> e var
R26343:26344 compcert.backend.Allocation <> Eq constr
R26351:26351 compcert.backend.Allocation <> r var
R26346:26349 compcert.backend.Allocation <> High constr
R26312:26313 compcert.backend.Allocation <> Eq constr
R26319:26319 compcert.backend.Allocation <> r var
R26315:26317 compcert.backend.Allocation <> Low constr
R26394:26397 Coq.Init.Datatypes <> None constr
R26430:26431 compcert.backend.Allocation <> ll var
R26448:26451 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R26452:26454 Coq.Init.Datatypes <> nil constr
R26459:26462 Coq.Init.Datatypes <> Some constr
R26465:26479 compcert.backend.Allocation <> remove_equation def
R26496:26496 compcert.backend.Allocation <> e var
R26482:26483 compcert.backend.Allocation <> Eq constr
R26490:26490 compcert.backend.Allocation <> r var
R26485:26488 compcert.backend.Allocation <> Full constr
R26512:26515 Coq.Init.Datatypes <> None constr
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
def 26759:26774 <> add_equation_ros
R26785:26787 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R26782:26784 compcert.backend.Registers <> reg def
R26788:26792 compcert.common.AST <> ident def
R26806:26808 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R26802:26805 compcert.ia32.Machregs <> mreg ind
R26809:26813 compcert.common.AST <> ident def
R26820:26822 compcert.backend.Allocation <> eqs rec
R26827:26832 Coq.Init.Datatypes <> option ind
R26834:26836 compcert.backend.Allocation <> eqs rec
R26854:26857 compcert.backend.Allocation <> ros' var
R26849:26851 compcert.backend.Allocation <> ros var
R26868:26870 Coq.Init.Datatypes <> inl constr
R26875:26877 Coq.Init.Datatypes <> inl constr
R26885:26888 Coq.Init.Datatypes <> Some constr
R26890:26901 compcert.backend.Allocation <> add_equation def
R26922:26922 compcert.backend.Allocation <> e var
R26904:26905 compcert.backend.Allocation <> Eq constr
R26915:26915 compcert.backend.Locations <> R constr
R26907:26910 compcert.backend.Allocation <> Full constr
R26929:26931 Coq.Init.Datatypes <> inr constr
R26937:26939 Coq.Init.Datatypes <> inr constr
R26948:26958 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R26974:26976 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R26977:26980 Coq.Init.Datatypes <> Some constr
R26982:26982 compcert.backend.Allocation <> e var
R26959:26966 compcert.common.AST <> ident_eq def
R26996:26999 Coq.Init.Datatypes <> None constr
def 27140:27148 <> can_undef
R27155:27158 Coq.Init.Datatypes <> list ind
R27160:27163 compcert.ia32.Machregs <> mreg ind
R27170:27172 compcert.backend.Allocation <> eqs rec
R27177:27180 Coq.Init.Datatypes <> bool ind
R27193:27194 compcert.backend.Allocation <> ml var
R27205:27207 Coq.Init.Datatypes <> nil constr
R27212:27215 Coq.Init.Datatypes <> true constr
R27223:27226 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27259:27262 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R27233:27249 compcert.backend.Allocation <> loc_unconstrained def
R27258:27258 compcert.backend.Allocation <> e var
R27252:27252 compcert.backend.Locations <> R constr
R27263:27271 compcert.backend.Allocation <> can_undef def
R27276:27276 compcert.backend.Allocation <> e var
R27273:27274 compcert.backend.Allocation <> ml var
def 27295:27310 <> can_undef_except
R27316:27318 compcert.backend.Locations <> loc ind
R27326:27329 Coq.Init.Datatypes <> list ind
R27331:27334 compcert.ia32.Machregs <> mreg ind
R27341:27343 compcert.backend.Allocation <> eqs rec
R27348:27351 Coq.Init.Datatypes <> bool ind
R27364:27365 compcert.backend.Allocation <> ml var
R27376:27378 Coq.Init.Datatypes <> nil constr
R27383:27386 Coq.Init.Datatypes <> true constr
R27394:27397 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R27411:27411 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R27457:27461 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R27427:27430 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R27412:27417 compcert.backend.Locations Loc eq thm
R27422:27422 compcert.backend.Locations <> R constr
R27419:27419 compcert.backend.Allocation <> l var
R27431:27447 compcert.backend.Allocation <> loc_unconstrained def
R27456:27456 compcert.backend.Allocation <> e var
R27450:27450 compcert.backend.Locations <> R constr
R27462:27477 compcert.backend.Allocation <> can_undef_except def
R27484:27484 compcert.backend.Allocation <> e var
R27481:27482 compcert.backend.Allocation <> ml var
R27479:27479 compcert.backend.Allocation <> l var
def 27706:27720 <> no_caller_saves
R27726:27728 compcert.backend.Allocation <> eqs rec
R27733:27736 Coq.Init.Datatypes <> bool ind
R27743:27755 compcert.backend.Allocation EqSet for_all def
R27965:27965 compcert.backend.Allocation <> e var
R27782:27785 compcert.backend.Allocation <> eloc proj
R27787:27788 compcert.backend.Allocation <> eq var
R27804:27804 compcert.backend.Locations <> R constr
R27853:27856 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R27822:27824 compcert.lib.Coqlib <> zle def
R27829:27849 compcert.ia32.Conventions1 <> index_int_callee_save def
R27857:27859 compcert.lib.Coqlib <> zle def
R27864:27886 compcert.ia32.Conventions1 <> index_float_callee_save def
R27900:27900 compcert.backend.Locations <> S constr
R27902:27909 compcert.backend.Locations <> Outgoing constr
R27918:27922 Coq.Init.Datatypes <> false constr
R27933:27933 compcert.backend.Locations <> S constr
R27944:27947 Coq.Init.Datatypes <> true constr
def 28098:28108 <> compat_left
R28114:28116 compcert.backend.Registers <> reg def
R28123:28125 compcert.backend.Locations <> loc ind
R28132:28134 compcert.backend.Allocation <> eqs rec
R28139:28142 Coq.Init.Datatypes <> bool ind
R28149:28169 compcert.backend.Allocation EqSet for_all_between def
R28325:28328 compcert.backend.Allocation <> eqs1 proj
R28330:28330 compcert.backend.Allocation <> e var
R28304:28315 compcert.backend.Allocation <> select_reg_h def
R28317:28317 compcert.backend.Allocation <> r var
R28287:28298 compcert.backend.Allocation <> select_reg_l def
R28300:28300 compcert.backend.Allocation <> r var
R28199:28203 compcert.backend.Allocation <> ekind proj
R28205:28205 compcert.backend.Allocation <> q var
R28222:28225 compcert.backend.Allocation <> Full constr
R28230:28235 compcert.backend.Locations Loc eq thm
R28240:28243 compcert.backend.Allocation <> eloc proj
R28245:28245 compcert.backend.Allocation <> q var
R28237:28237 compcert.backend.Allocation <> l var
R28263:28267 Coq.Init.Datatypes <> false constr
def 28488:28499 <> compat_left2
R28505:28507 compcert.backend.Registers <> reg def
R28518:28520 compcert.backend.Locations <> loc ind
R28527:28529 compcert.backend.Allocation <> eqs rec
R28534:28537 Coq.Init.Datatypes <> bool ind
R28544:28564 compcert.backend.Allocation EqSet for_all_between def
R28757:28760 compcert.backend.Allocation <> eqs1 proj
R28762:28762 compcert.backend.Allocation <> e var
R28736:28747 compcert.backend.Allocation <> select_reg_h def
R28749:28749 compcert.backend.Allocation <> r var
R28719:28730 compcert.backend.Allocation <> select_reg_l def
R28732:28732 compcert.backend.Allocation <> r var
R28594:28598 compcert.backend.Allocation <> ekind proj
R28600:28600 compcert.backend.Allocation <> q var
R28617:28620 compcert.backend.Allocation <> High constr
R28625:28630 compcert.backend.Locations Loc eq thm
R28636:28639 compcert.backend.Allocation <> eloc proj
R28641:28641 compcert.backend.Allocation <> q var
R28632:28633 compcert.backend.Allocation <> l1 var
R28654:28656 compcert.backend.Allocation <> Low constr
R28661:28666 compcert.backend.Locations Loc eq thm
R28672:28675 compcert.backend.Allocation <> eloc proj
R28677:28677 compcert.backend.Allocation <> q var
R28668:28669 compcert.backend.Allocation <> l2 var
R28695:28699 Coq.Init.Datatypes <> false constr
def 28937:28959 <> ros_compatible_tailcall
R28971:28973 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R28967:28970 compcert.ia32.Machregs <> mreg ind
R28974:28978 compcert.common.AST <> ident def
R28983:28986 Coq.Init.Datatypes <> bool ind
R28999:29001 compcert.backend.Allocation <> ros var
R29012:29014 Coq.Init.Datatypes <> inl constr
R29021:29026 Coq.Lists.List <> In_dec syndef
R29038:29054 compcert.ia32.Conventions1 <> destroyed_at_call def
R29028:29034 compcert.ia32.Machregs <> mreg_eq thm
R29060:29062 Coq.Init.Datatypes <> inr constr
R29070:29073 Coq.Init.Datatypes <> true constr
def 29118:29134 <> destroyed_by_move
R29146:29148 compcert.backend.Locations <> loc ind
R29167:29169 compcert.backend.Allocation <> dst var
R29162:29164 compcert.backend.Allocation <> src var
R29180:29180 compcert.backend.Locations <> S constr
R29198:29218 compcert.backend.LTL <> destroyed_by_getstack def
R29230:29230 compcert.backend.Locations <> S constr
R29245:29265 compcert.ia32.Machregs <> destroyed_by_setstack def
R29282:29296 compcert.ia32.Machregs <> destroyed_by_op def
R29298:29302 compcert.ia32.Op <> Omove constr
def 29323:29337 <> well_typed_move
R29345:29350 compcert.backend.RTLtyping <> regenv def
R29359:29361 compcert.backend.Locations <> loc ind
R29368:29370 compcert.backend.Allocation <> eqs rec
R29375:29378 Coq.Init.Datatypes <> bool ind
R29391:29393 compcert.backend.Allocation <> dst var
R29404:29404 compcert.backend.Locations <> R constr
R29411:29414 Coq.Init.Datatypes <> true constr
R29420:29420 compcert.backend.Locations <> S constr
R29435:29449 compcert.backend.Allocation <> loc_type_compat def
R29459:29459 compcert.backend.Allocation <> e var
R29455:29457 compcert.backend.Allocation <> dst var
R29451:29453 compcert.backend.Allocation <> env var
def 29801:29811 <> track_moves
R29819:29824 compcert.backend.RTLtyping <> regenv def
R29832:29836 compcert.backend.Allocation <> moves def
R29843:29845 compcert.backend.Allocation <> eqs rec
R29850:29855 Coq.Init.Datatypes <> option ind
R29857:29859 compcert.backend.Allocation <> eqs rec
R29872:29873 compcert.backend.Allocation <> mv var
R29884:29886 Coq.Init.Datatypes <> nil constr
R29891:29894 Coq.Init.Datatypes <> Some constr
R29896:29896 compcert.backend.Allocation <> e var
R29912:29915 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29902:29902 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29906:29907 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29911:29911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29928:29930 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R29933:29936 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R29957:29964 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R29937:29947 compcert.backend.Allocation <> track_moves def
R29956:29956 compcert.backend.Allocation <> e var
R29953:29954 compcert.backend.Allocation <> mv var
R29949:29951 compcert.backend.Allocation <> env var
R29965:29974 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R30028:30035 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R30036:30046 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R30073:30081 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R30082:30090 compcert.backend.Allocation <> subst_loc def
R30047:30061 compcert.backend.Allocation <> well_typed_move def
R30063:30065 compcert.backend.Allocation <> env var
R29976:29991 compcert.backend.Allocation <> can_undef_except def
R29998:30014 compcert.backend.Allocation <> destroyed_by_move def
def 30694:30709 <> transfer_use_def
R30718:30721 Coq.Init.Datatypes <> list ind
R30723:30725 compcert.backend.Registers <> reg def
R30734:30736 compcert.backend.Registers <> reg def
R30747:30750 Coq.Init.Datatypes <> list ind
R30752:30755 compcert.ia32.Machregs <> mreg ind
R30765:30768 compcert.ia32.Machregs <> mreg ind
R30808:30811 Coq.Init.Datatypes <> list ind
R30813:30816 compcert.ia32.Machregs <> mreg ind
R30823:30825 compcert.backend.Allocation <> eqs rec
R30830:30835 Coq.Init.Datatypes <> option ind
R30837:30839 compcert.backend.Allocation <> eqs rec
R30856:30870 compcert.backend.Allocation <> remove_equation def
R30895:30895 compcert.backend.Allocation <> e var
R30873:30874 compcert.backend.Allocation <> Eq constr
R30886:30886 compcert.backend.Locations <> R constr
R30888:30891 compcert.backend.Allocation <> res' var
R30881:30883 compcert.backend.Allocation <> res var
R30876:30879 compcert.backend.Allocation <> Full constr
R30902:30912 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R30950:30954 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R30955:30965 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R30985:30989 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R30990:31002 compcert.backend.Allocation <> add_equations def
R31015:31016 compcert.backend.Allocation <> e1 var
R31009:31013 compcert.backend.Allocation <> args' var
R31004:31007 compcert.backend.Allocation <> args var
R30966:30974 compcert.backend.Allocation <> can_undef def
R30983:30984 compcert.backend.Allocation <> e1 var
R30976:30981 compcert.backend.Allocation <> undefs var
R30913:30933 compcert.backend.Allocation <> reg_loc_unconstrained def
R30948:30949 compcert.backend.Allocation <> e1 var
R30940:30940 compcert.backend.Locations <> R constr
R30942:30945 compcert.backend.Allocation <> res' var
R30935:30937 compcert.backend.Allocation <> res var
def 31031:31045 <> kind_first_word
R31053:31068 compcert.ia32.Archi <> big_endian def
R31085:31087 compcert.backend.Allocation <> Low constr
R31075:31078 compcert.backend.Allocation <> High constr
def 31101:31116 <> kind_second_word
R31124:31139 compcert.ia32.Archi <> big_endian def
R31155:31158 compcert.backend.Allocation <> High constr
R31146:31148 compcert.backend.Allocation <> Low constr
def 31476:31487 <> transfer_aux
R31493:31504 compcert.backend.RTL <> function rec
R31513:31518 compcert.backend.RTLtyping <> regenv def
R31553:31563 compcert.backend.Allocation <> block_shape ind
R31570:31572 compcert.backend.Allocation <> eqs rec
R31577:31582 Coq.Init.Datatypes <> option ind
R31584:31586 compcert.backend.Allocation <> eqs rec
R31599:31603 compcert.backend.Allocation <> shape var
R31614:31618 compcert.backend.Allocation <> BSnop constr
R31634:31644 compcert.backend.Allocation <> track_moves def
R31653:31653 compcert.backend.Allocation <> e var
R31646:31648 compcert.backend.Allocation <> env var
R31659:31664 compcert.backend.Allocation <> BSmove constr
R31688:31698 compcert.backend.Allocation <> track_moves def
R31708:31716 compcert.backend.Allocation <> subst_reg def
R31726:31726 compcert.backend.Allocation <> e var
R31700:31702 compcert.backend.Allocation <> env var
R31733:31742 compcert.backend.Allocation <> BSmakelong constr
R31782:31795 compcert.backend.Allocation <> subst_reg_kind def
R31816:31816 compcert.backend.Allocation <> e var
R31811:31814 compcert.backend.Allocation <> Full constr
R31801:31804 compcert.backend.Allocation <> High constr
R31837:31850 compcert.backend.Allocation <> subst_reg_kind def
R31870:31871 compcert.backend.Allocation <> e1 var
R31865:31868 compcert.backend.Allocation <> Full constr
R31856:31858 compcert.backend.Allocation <> Low constr
R31882:31892 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R31917:31925 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R31926:31936 compcert.backend.Allocation <> track_moves def
R31945:31946 compcert.backend.Allocation <> e2 var
R31938:31940 compcert.backend.Allocation <> env var
R31893:31909 compcert.backend.Allocation <> reg_unconstrained def
R31915:31916 compcert.backend.Allocation <> e2 var
R31952:31960 compcert.backend.Allocation <> BSlowlong constr
R31994:32007 compcert.backend.Allocation <> subst_reg_kind def
R32026:32026 compcert.backend.Allocation <> e var
R32022:32024 compcert.backend.Allocation <> Low constr
R32013:32016 compcert.backend.Allocation <> Full constr
R32037:32047 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R32072:32080 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R32081:32091 compcert.backend.Allocation <> track_moves def
R32100:32101 compcert.backend.Allocation <> e1 var
R32093:32095 compcert.backend.Allocation <> env var
R32048:32064 compcert.backend.Allocation <> reg_unconstrained def
R32070:32071 compcert.backend.Allocation <> e1 var
R32107:32116 compcert.backend.Allocation <> BShighlong constr
R32150:32163 compcert.backend.Allocation <> subst_reg_kind def
R32183:32183 compcert.backend.Allocation <> e var
R32178:32181 compcert.backend.Allocation <> High constr
R32169:32172 compcert.backend.Allocation <> Full constr
R32194:32204 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R32229:32237 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R32238:32248 compcert.backend.Allocation <> track_moves def
R32257:32258 compcert.backend.Allocation <> e1 var
R32250:32252 compcert.backend.Allocation <> env var
R32205:32221 compcert.backend.Allocation <> reg_unconstrained def
R32227:32228 compcert.backend.Allocation <> e1 var
R32264:32267 compcert.backend.Allocation <> BSop constr
R32311:32313 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32316:32319 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32341:32348 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32320:32330 compcert.backend.Allocation <> track_moves def
R32340:32340 compcert.backend.Allocation <> e var
R32332:32334 compcert.backend.Allocation <> env var
R32349:32351 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32354:32357 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32418:32425 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32358:32373 compcert.backend.Allocation <> transfer_use_def def
R32396:32410 compcert.ia32.Machregs <> destroyed_by_op def
R32426:32436 compcert.backend.Allocation <> track_moves def
R32438:32440 compcert.backend.Allocation <> env var
R32453:32460 compcert.backend.Allocation <> BSopdead constr
R32488:32498 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R32522:32530 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R32531:32541 compcert.backend.Allocation <> track_moves def
R32550:32550 compcert.backend.Allocation <> e var
R32543:32545 compcert.backend.Allocation <> env var
R32499:32515 compcert.backend.Allocation <> reg_unconstrained def
R32521:32521 compcert.backend.Allocation <> e var
R32556:32561 compcert.backend.Allocation <> BSload constr
R32613:32615 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32618:32621 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32643:32650 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32622:32632 compcert.backend.Allocation <> track_moves def
R32642:32642 compcert.backend.Allocation <> e var
R32634:32636 compcert.backend.Allocation <> env var
R32651:32653 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32656:32659 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32730:32737 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32660:32675 compcert.backend.Allocation <> transfer_use_def def
R32698:32714 compcert.ia32.Machregs <> destroyed_by_load def
R32738:32748 compcert.backend.Allocation <> track_moves def
R32750:32752 compcert.backend.Allocation <> env var
R32765:32771 compcert.backend.Allocation <> BSload2 constr
R32842:32844 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32847:32850 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32872:32879 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R32851:32861 compcert.backend.Allocation <> track_moves def
R32871:32871 compcert.backend.Allocation <> e var
R32863:32865 compcert.backend.Allocation <> env var
R32890:32904 compcert.backend.Allocation <> remove_equation def
R32907:32908 compcert.backend.Allocation <> Eq constr
R32932:32932 compcert.backend.Locations <> R constr
R32910:32925 compcert.backend.Allocation <> kind_second_word def
R32954:32964 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R32995:33003 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33004:33014 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33060:33068 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33069:33071 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33074:33077 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33106:33113 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33078:33090 compcert.backend.Allocation <> add_equations def
R33104:33105 compcert.backend.Allocation <> e2 var
R33114:33116 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33119:33122 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33145:33152 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33123:33133 compcert.backend.Allocation <> track_moves def
R33135:33137 compcert.backend.Allocation <> env var
R33163:33177 compcert.backend.Allocation <> remove_equation def
R33180:33181 compcert.backend.Allocation <> Eq constr
R33204:33204 compcert.backend.Locations <> R constr
R33183:33197 compcert.backend.Allocation <> kind_first_word def
R33226:33236 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33267:33275 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33276:33286 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33331:33339 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33340:33350 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33375:33383 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33384:33386 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33389:33392 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33421:33428 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33393:33405 compcert.backend.Allocation <> add_equations def
R33419:33420 compcert.backend.Allocation <> e5 var
R33429:33439 compcert.backend.Allocation <> track_moves def
R33441:33443 compcert.backend.Allocation <> env var
R33351:33367 compcert.backend.Allocation <> reg_unconstrained def
R33373:33374 compcert.backend.Allocation <> e5 var
R33287:33295 compcert.backend.Allocation <> can_undef def
R33329:33330 compcert.backend.Allocation <> e5 var
R33298:33314 compcert.ia32.Machregs <> destroyed_by_load def
R33316:33321 compcert.common.AST <> Mint32 constr
R33237:33253 compcert.backend.Allocation <> loc_unconstrained def
R33265:33266 compcert.backend.Allocation <> e5 var
R33256:33256 compcert.backend.Locations <> R constr
R33015:33023 compcert.backend.Allocation <> can_undef def
R33058:33059 compcert.backend.Allocation <> e2 var
R33026:33042 compcert.ia32.Machregs <> destroyed_by_load def
R33044:33049 compcert.common.AST <> Mint32 constr
R32965:32981 compcert.backend.Allocation <> loc_unconstrained def
R32993:32994 compcert.backend.Allocation <> e2 var
R32984:32984 compcert.backend.Locations <> R constr
R33456:33464 compcert.backend.Allocation <> BSload2_1 constr
R33510:33512 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33515:33518 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33540:33547 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33519:33529 compcert.backend.Allocation <> track_moves def
R33539:33539 compcert.backend.Allocation <> e var
R33531:33533 compcert.backend.Allocation <> env var
R33558:33572 compcert.backend.Allocation <> remove_equation def
R33575:33576 compcert.backend.Allocation <> Eq constr
R33599:33599 compcert.backend.Locations <> R constr
R33578:33592 compcert.backend.Allocation <> kind_first_word def
R33620:33630 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33668:33676 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33677:33687 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33732:33740 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R33741:33743 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33746:33749 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33777:33784 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33750:33762 compcert.backend.Allocation <> add_equations def
R33775:33776 compcert.backend.Allocation <> e2 var
R33785:33795 compcert.backend.Allocation <> track_moves def
R33797:33799 compcert.backend.Allocation <> env var
R33688:33696 compcert.backend.Allocation <> can_undef def
R33730:33731 compcert.backend.Allocation <> e2 var
R33699:33715 compcert.ia32.Machregs <> destroyed_by_load def
R33717:33722 compcert.common.AST <> Mint32 constr
R33631:33651 compcert.backend.Allocation <> reg_loc_unconstrained def
R33666:33667 compcert.backend.Allocation <> e2 var
R33658:33658 compcert.backend.Locations <> R constr
R33812:33820 compcert.backend.Allocation <> BSload2_2 constr
R33872:33874 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33877:33880 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33902:33909 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R33881:33891 compcert.backend.Allocation <> track_moves def
R33901:33901 compcert.backend.Allocation <> e var
R33893:33895 compcert.backend.Allocation <> env var
R33920:33934 compcert.backend.Allocation <> remove_equation def
R33937:33938 compcert.backend.Allocation <> Eq constr
R33962:33962 compcert.backend.Locations <> R constr
R33940:33955 compcert.backend.Allocation <> kind_second_word def
R33983:33993 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34031:34039 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34040:34050 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34096:34104 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34105:34107 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34110:34113 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34141:34148 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34114:34126 compcert.backend.Allocation <> add_equations def
R34139:34140 compcert.backend.Allocation <> e2 var
R34149:34159 compcert.backend.Allocation <> track_moves def
R34161:34163 compcert.backend.Allocation <> env var
R34051:34059 compcert.backend.Allocation <> can_undef def
R34094:34095 compcert.backend.Allocation <> e2 var
R34062:34078 compcert.ia32.Machregs <> destroyed_by_load def
R34080:34085 compcert.common.AST <> Mint32 constr
R33994:34014 compcert.backend.Allocation <> reg_loc_unconstrained def
R34029:34030 compcert.backend.Allocation <> e2 var
R34021:34021 compcert.backend.Locations <> R constr
R34176:34185 compcert.backend.Allocation <> BSloaddead constr
R34221:34231 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34255:34263 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34264:34274 compcert.backend.Allocation <> track_moves def
R34283:34283 compcert.backend.Allocation <> e var
R34276:34278 compcert.backend.Allocation <> env var
R34232:34248 compcert.backend.Allocation <> reg_unconstrained def
R34254:34254 compcert.backend.Allocation <> e var
R34289:34295 compcert.backend.Allocation <> BSstore constr
R34342:34352 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34396:34404 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34405:34407 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34410:34413 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34459:34466 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34414:34426 compcert.backend.Allocation <> add_equations def
R34458:34458 compcert.backend.Allocation <> e var
R34447:34450 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R34432:34435 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R34467:34477 compcert.backend.Allocation <> track_moves def
R34479:34481 compcert.backend.Allocation <> env var
R34353:34361 compcert.backend.Allocation <> can_undef def
R34395:34395 compcert.backend.Allocation <> e var
R34364:34381 compcert.ia32.Machregs <> destroyed_by_store def
R34493:34500 compcert.backend.Allocation <> BSstore2 constr
R34567:34577 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34623:34631 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34632:34634 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34637:34640 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34738:34745 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34641:34653 compcert.backend.Allocation <> add_equations def
R34687:34698 compcert.backend.Allocation <> add_equation def
R34736:34736 compcert.backend.Allocation <> e var
R34701:34702 compcert.backend.Allocation <> Eq constr
R34726:34726 compcert.backend.Locations <> R constr
R34704:34719 compcert.backend.Allocation <> kind_second_word def
R34746:34748 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34751:34754 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34777:34784 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34755:34765 compcert.backend.Allocation <> track_moves def
R34767:34769 compcert.backend.Allocation <> env var
R34785:34795 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34841:34849 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R34850:34852 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34855:34858 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34956:34963 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R34859:34871 compcert.backend.Allocation <> add_equations def
R34905:34916 compcert.backend.Allocation <> add_equation def
R34919:34920 compcert.backend.Allocation <> Eq constr
R34943:34943 compcert.backend.Locations <> R constr
R34922:34936 compcert.backend.Allocation <> kind_first_word def
R34964:34974 compcert.backend.Allocation <> track_moves def
R34976:34978 compcert.backend.Allocation <> env var
R34796:34804 compcert.backend.Allocation <> can_undef def
R34807:34824 compcert.ia32.Machregs <> destroyed_by_store def
R34826:34831 compcert.common.AST <> Mint32 constr
R34578:34586 compcert.backend.Allocation <> can_undef def
R34622:34622 compcert.backend.Allocation <> e var
R34589:34606 compcert.ia32.Machregs <> destroyed_by_store def
R34608:34613 compcert.common.AST <> Mint32 constr
R34991:34996 compcert.backend.Allocation <> BScall constr
R35051:35063 compcert.ia32.Conventions1 <> loc_arguments def
R35089:35091 Coq.Lists.List <> map def
R35096:35105 compcert.ia32.Conventions1 <> loc_result def
R35093:35093 compcert.backend.Locations <> R constr
R35120:35122 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35125:35128 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35150:35157 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35129:35139 compcert.backend.Allocation <> track_moves def
R35149:35149 compcert.backend.Allocation <> e var
R35141:35143 compcert.backend.Allocation <> env var
R35158:35160 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35163:35166 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35212:35219 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35167:35186 compcert.backend.Allocation <> remove_equations_res def
R35205:35208 compcert.backend.Allocation <> res' var
R35193:35199 compcert.common.AST <> sig_res proj
R35220:35230 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R35285:35293 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R35294:35304 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R35323:35331 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R35332:35334 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35337:35340 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35369:35376 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35341:35356 compcert.backend.Allocation <> add_equation_ros def
R35377:35379 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35382:35385 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35432:35439 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35386:35403 compcert.backend.Allocation <> add_equations_args def
R35424:35428 compcert.backend.Allocation <> args' var
R35411:35418 compcert.common.AST <> sig_args proj
R35440:35450 compcert.backend.Allocation <> track_moves def
R35452:35454 compcert.backend.Allocation <> env var
R35305:35319 compcert.backend.Allocation <> no_caller_saves def
R35231:35237 Coq.Lists.List <> forallb def
R35281:35284 compcert.backend.Allocation <> res' var
R35249:35269 compcert.backend.Allocation <> reg_loc_unconstrained def
R35275:35275 compcert.backend.Allocation <> l var
R35467:35476 compcert.backend.Allocation <> BStailcall constr
R35521:35533 compcert.ia32.Conventions1 <> loc_arguments def
R35547:35557 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R35581:35589 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R35590:35600 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R35649:35657 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R35658:35668 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R35697:35705 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R35706:35708 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35711:35714 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35750:35757 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35715:35730 compcert.backend.Allocation <> add_equation_ros def
R35741:35749 compcert.backend.Allocation <> empty_eqs def
R35758:35760 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35763:35766 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35813:35820 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35767:35784 compcert.backend.Allocation <> add_equations_args def
R35805:35809 compcert.backend.Allocation <> args' var
R35792:35799 compcert.common.AST <> sig_args proj
R35821:35831 compcert.backend.Allocation <> track_moves def
R35833:35835 compcert.backend.Allocation <> env var
R35669:35691 compcert.backend.Allocation <> ros_compatible_tailcall def
R35601:35610 compcert.common.AST <> opt_typ_eq def
R35641:35647 compcert.common.AST <> sig_res proj
R35628:35637 compcert.backend.RTL <> fn_sig proj
R35625:35625 compcert.backend.Allocation <> f var
R35616:35622 compcert.common.AST <> sig_res proj
R35558:35577 compcert.backend.Conventions <> tailcall_is_possible def
R35848:35856 compcert.backend.Allocation <> BSbuiltin constr
R35900:35902 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35905:35908 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35930:35937 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R35909:35919 compcert.backend.Allocation <> track_moves def
R35929:35929 compcert.backend.Allocation <> e var
R35921:35923 compcert.backend.Allocation <> env var
R35951:35953 Coq.Lists.List <> map def
R35955:35955 compcert.backend.Locations <> R constr
R35984:35986 Coq.Lists.List <> map def
R35988:35988 compcert.backend.Locations <> R constr
R36004:36006 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36009:36012 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36067:36074 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36013:36032 compcert.backend.Allocation <> remove_equations_res def
R36060:36063 compcert.backend.Allocation <> res' var
R36039:36045 compcert.common.AST <> sig_res proj
R36048:36053 compcert.common.AST <> ef_sig def
R36075:36085 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R36110:36118 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R36119:36129 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R36176:36184 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R36185:36195 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R36234:36242 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R36243:36245 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36248:36251 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36307:36314 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36252:36269 compcert.backend.Allocation <> add_equations_args def
R36299:36303 compcert.backend.Allocation <> args' var
R36277:36284 compcert.common.AST <> sig_args proj
R36287:36292 compcert.common.AST <> ef_sig def
R36315:36325 compcert.backend.Allocation <> track_moves def
R36327:36329 compcert.backend.Allocation <> env var
R36196:36204 compcert.backend.Allocation <> can_undef def
R36207:36226 compcert.ia32.Machregs <> destroyed_by_builtin def
R36130:36136 Coq.Lists.List <> forallb def
R36172:36175 compcert.backend.Allocation <> res' var
R36148:36164 compcert.backend.Allocation <> loc_unconstrained def
R36166:36166 compcert.backend.Allocation <> l var
R36086:36102 compcert.backend.Allocation <> reg_unconstrained def
R36342:36348 compcert.backend.Allocation <> BSannot constr
R36388:36390 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36393:36396 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36449:36456 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36397:36414 compcert.backend.Allocation <> add_equations_args def
R36448:36448 compcert.backend.Allocation <> e var
R36422:36435 compcert.common.AST <> annot_args_typ def
R36457:36467 compcert.backend.Allocation <> track_moves def
R36469:36471 compcert.backend.Allocation <> env var
R36484:36489 compcert.backend.Allocation <> BScond constr
R36525:36535 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R36572:36580 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R36581:36583 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36586:36589 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36616:36623 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36590:36602 compcert.backend.Allocation <> add_equations def
R36615:36615 compcert.backend.Allocation <> e var
R36624:36634 compcert.backend.Allocation <> track_moves def
R36636:36638 compcert.backend.Allocation <> env var
R36536:36544 compcert.backend.Allocation <> can_undef def
R36571:36571 compcert.backend.Allocation <> e var
R36547:36563 compcert.ia32.Machregs <> destroyed_by_cond def
R36650:36660 compcert.backend.Allocation <> BSjumptable constr
R36687:36697 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R36732:36740 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R36741:36751 compcert.backend.Allocation <> track_moves def
R36761:36772 compcert.backend.Allocation <> add_equation def
R36797:36797 compcert.backend.Allocation <> e var
R36775:36776 compcert.backend.Allocation <> Eq constr
R36788:36788 compcert.backend.Locations <> R constr
R36778:36781 compcert.backend.Allocation <> Full constr
R36753:36755 compcert.backend.Allocation <> env var
R36698:36706 compcert.backend.Allocation <> can_undef def
R36731:36731 compcert.backend.Allocation <> e var
R36708:36729 compcert.ia32.Machregs <> destroyed_by_jumptable def
R36804:36811 compcert.backend.Allocation <> BSreturn constr
R36813:36816 Coq.Init.Datatypes <> None constr
R36830:36840 compcert.backend.Allocation <> track_moves def
R36849:36857 compcert.backend.Allocation <> empty_eqs def
R36842:36844 compcert.backend.Allocation <> env var
R36863:36870 compcert.backend.Allocation <> BSreturn constr
R36873:36876 Coq.Init.Datatypes <> Some constr
R36907:36909 Coq.Lists.List <> map def
R36914:36923 compcert.ia32.Conventions1 <> loc_result def
R36926:36935 compcert.backend.RTL <> fn_sig proj
R36937:36937 compcert.backend.Allocation <> f var
R36911:36911 compcert.backend.Locations <> R constr
R36950:36952 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36955:36958 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R37020:37027 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R36959:36975 compcert.backend.Allocation <> add_equations_res def
R37011:37019 compcert.backend.Allocation <> empty_eqs def
R37006:37009 compcert.backend.Allocation <> arg' var
R36982:36988 compcert.common.AST <> sig_res proj
R36991:37000 compcert.backend.RTL <> fn_sig proj
R37002:37002 compcert.backend.Allocation <> f var
R37028:37038 compcert.backend.Allocation <> track_moves def
R37040:37042 compcert.backend.Allocation <> env var
def 37312:37319 <> transfer
R37325:37336 compcert.backend.RTL <> function rec
R37345:37350 compcert.backend.RTLtyping <> regenv def
R37362:37368 compcert.lib.Maps PTree t def
R37370:37380 compcert.backend.Allocation <> block_shape ind
R37408:37411 compcert.backend.LTL <> node def
R37422:37424 compcert.common.Errors <> res ind
R37426:37428 compcert.backend.Allocation <> eqs rec
R37433:37435 compcert.common.Errors <> res ind
R37437:37439 compcert.backend.Allocation <> eqs rec
R37452:37456 compcert.backend.Allocation <> after var
R37467:37471 compcert.common.Errors <> Error constr
R37478:37482 compcert.backend.Allocation <> after var
R37488:37489 compcert.common.Errors <> OK constr
R37514:37514 compcert.lib.Maps <> ::x_'!'_x not
R37515:37516 compcert.backend.Allocation <> pc var
R37508:37513 compcert.backend.Allocation <> shapes var
R37531:37534 Coq.Init.Datatypes <> None constr
R37539:37543 compcert.common.Errors <> Error constr
R37557:37560 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R37545:37547 compcert.common.Errors <> MSG constr
R37567:37570 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R37561:37563 compcert.common.Errors <> POS constr
R37565:37566 compcert.backend.Allocation <> pc var
R37594:37597 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R37571:37573 compcert.common.Errors <> MSG constr
R37598:37600 Coq.Init.Datatypes <> nil constr
R37611:37614 Coq.Init.Datatypes <> Some constr
R37641:37652 compcert.backend.Allocation <> transfer_aux def
R37656:37658 compcert.backend.Allocation <> env var
R37654:37654 compcert.backend.Allocation <> f var
R37685:37688 Coq.Init.Datatypes <> None constr
R37693:37697 compcert.common.Errors <> Error constr
R37711:37714 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R37699:37701 compcert.common.Errors <> MSG constr
R37721:37724 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R37715:37717 compcert.common.Errors <> POS constr
R37719:37720 compcert.backend.Allocation <> pc var
R37760:37763 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R37725:37727 compcert.common.Errors <> MSG constr
R37764:37766 Coq.Init.Datatypes <> nil constr
R37781:37784 Coq.Init.Datatypes <> Some constr
R37792:37793 compcert.common.Errors <> OK constr
R38076:38086 compcert.lib.Lattice SEMILATTICE <> mod
mod 38069:38071 <> LEq
def 38103:38103 LEq t
R38108:38110 compcert.common.Errors <> res ind
R38112:38114 compcert.backend.Allocation LEq eqs rec
def 38131:38132 LEq eq
R38140:38140 compcert.backend.Allocation LEq t def
R38159:38159 compcert.backend.Allocation <> y var
R38156:38156 compcert.backend.Allocation <> x var
R38172:38173 compcert.common.Errors <> OK constr
R38178:38179 compcert.common.Errors <> OK constr
R38186:38196 compcert.backend.Allocation EqSet Equal def
R38208:38212 compcert.common.Errors <> Error constr
R38217:38221 compcert.common.Errors <> Error constr
R38228:38231 Coq.Init.Logic <> True ind
R38247:38251 Coq.Init.Logic <> False ind
prf 38271:38277 LEq eq_refl
R38290:38291 compcert.backend.Allocation LEq eq def
R38295:38295 compcert.backend.Allocation <> x var
R38293:38293 compcert.backend.Allocation <> x var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
prf 38373:38378 LEq eq_sym
R38403:38404 compcert.backend.Allocation LEq eq def
R38408:38408 compcert.backend.Allocation <> x var
R38406:38406 compcert.backend.Allocation <> y var
R38393:38394 compcert.backend.Allocation LEq eq def
R38398:38398 compcert.backend.Allocation <> y var
R38396:38396 compcert.backend.Allocation <> x var
R38431:38432 compcert.backend.Allocation LEq eq def
R0:-1 compcert.backend.Allocation <> y var
prf 38536:38543 LEq eq_trans
R38580:38581 compcert.backend.Allocation LEq eq def
R38585:38585 compcert.backend.Allocation <> z var
R38583:38583 compcert.backend.Allocation <> x var
R38570:38571 compcert.backend.Allocation LEq eq def
R38575:38575 compcert.backend.Allocation <> z var
R38573:38573 compcert.backend.Allocation <> y var
R38560:38561 compcert.backend.Allocation LEq eq def
R38565:38565 compcert.backend.Allocation <> y var
R38563:38563 compcert.backend.Allocation <> x var
R38608:38609 compcert.backend.Allocation LEq eq def
def 38758:38760 LEq beq
R38768:38768 compcert.backend.Allocation LEq t def
R38788:38788 compcert.backend.Allocation <> y var
R38785:38785 compcert.backend.Allocation <> x var
R38801:38802 compcert.common.Errors <> OK constr
R38807:38808 compcert.common.Errors <> OK constr
R38815:38825 compcert.backend.Allocation EqSet equal def
R38837:38841 compcert.common.Errors <> Error constr
R38846:38850 compcert.common.Errors <> Error constr
R38857:38860 Coq.Init.Datatypes <> true constr
R38876:38880 Coq.Init.Datatypes <> false constr
prf 38900:38910 LEq beq_correct
R38943:38944 compcert.backend.Allocation LEq eq def
R38948:38948 compcert.backend.Allocation <> y var
R38946:38946 compcert.backend.Allocation <> x var
R38932:38934 Coq.Init.Logic <> :type_scope:x_'='_x not
R38925:38927 compcert.backend.Allocation LEq beq def
R38931:38931 compcert.backend.Allocation <> y var
R38929:38929 compcert.backend.Allocation <> x var
R38935:38938 Coq.Init.Datatypes <> true constr
R38971:38973 compcert.backend.Allocation LEq beq def
R38976:38977 compcert.backend.Allocation LEq eq def
R39023:39035 compcert.backend.Allocation EqSet equal_2 def
R39023:39035 compcert.backend.Allocation EqSet equal_2 def
def 39111:39112 LEq ge
R39120:39120 compcert.backend.Allocation LEq t def
R39140:39140 compcert.backend.Allocation <> y var
R39137:39137 compcert.backend.Allocation <> x var
R39153:39154 compcert.common.Errors <> OK constr
R39159:39160 compcert.common.Errors <> OK constr
R39167:39178 compcert.backend.Allocation EqSet Subset def
R39190:39194 compcert.common.Errors <> Error constr
R39204:39207 Coq.Init.Logic <> True ind
R39218:39222 compcert.common.Errors <> Error constr
R39229:39233 Coq.Init.Logic <> False ind
prf 39253:39259 LEq ge_refl
R39284:39285 compcert.backend.Allocation LEq ge def
R39289:39289 compcert.backend.Allocation <> y var
R39287:39287 compcert.backend.Allocation <> x var
R39274:39275 compcert.backend.Allocation LEq eq def
R39279:39279 compcert.backend.Allocation <> y var
R39277:39277 compcert.backend.Allocation <> x var
R39312:39313 compcert.backend.Allocation LEq eq def
R39316:39317 compcert.backend.Allocation LEq ge def
R39320:39330 compcert.backend.Allocation EqSet Equal def
R39333:39344 compcert.backend.Allocation EqSet Subset def
prf 39430:39437 LEq ge_trans
R39474:39475 compcert.backend.Allocation LEq ge def
R39479:39479 compcert.backend.Allocation <> z var
R39477:39477 compcert.backend.Allocation <> x var
R39464:39465 compcert.backend.Allocation LEq ge def
R39469:39469 compcert.backend.Allocation <> z var
R39467:39467 compcert.backend.Allocation <> y var
R39454:39455 compcert.backend.Allocation LEq ge def
R39459:39459 compcert.backend.Allocation <> y var
R39457:39457 compcert.backend.Allocation <> x var
R39502:39503 compcert.backend.Allocation LEq ge def
R39506:39517 compcert.backend.Allocation EqSet Subset def
def 39626:39628 LEq bot
R39631:39631 compcert.backend.Allocation LEq t def
R39636:39637 compcert.common.Errors <> OK constr
R39639:39647 compcert.backend.Allocation LEq empty_eqs def
prf 39660:39665 LEq ge_bot
R39678:39679 compcert.backend.Allocation LEq ge def
R39683:39685 compcert.backend.Allocation LEq bot def
R39681:39681 compcert.backend.Allocation <> x var
R39708:39709 compcert.backend.Allocation LEq ge def
R39712:39714 compcert.backend.Allocation LEq bot def
R39717:39728 compcert.backend.Allocation EqSet Subset def
R39782:39794 compcert.backend.Allocation EqSet empty_1 def
R39782:39794 compcert.backend.Allocation EqSet empty_1 def
def 39829:39831 LEq lub
R39839:39839 compcert.backend.Allocation LEq t def
R39839:39839 compcert.backend.Allocation LEq t def
R39844:39844 compcert.backend.Allocation LEq t def
R39839:39839 compcert.backend.Allocation LEq t def
R39839:39839 compcert.backend.Allocation LEq t def
R39862:39862 compcert.backend.Allocation <> y var
R39859:39859 compcert.backend.Allocation <> x var
R39884:39885 compcert.common.Errors <> OK constr
R39890:39891 compcert.common.Errors <> OK constr
R39906:39907 compcert.common.Errors <> OK constr
R39910:39914 compcert.backend.Allocation LEq mkeqs constr
R39967:39978 compcert.backend.Allocation EqSet2 union def
R39990:39993 compcert.backend.Allocation LEq eqs2 proj
R39981:39984 compcert.backend.Allocation LEq eqs2 proj
R39917:39927 compcert.backend.Allocation EqSet union def
R39939:39942 compcert.backend.Allocation LEq eqs1 proj
R39930:39933 compcert.backend.Allocation LEq eqs1 proj
R40008:40009 compcert.common.Errors <> OK constr
R40014:40018 compcert.common.Errors <> Error constr
R40025:40025 compcert.backend.Allocation <> y var
R40033:40037 compcert.common.Errors <> Error constr
R40047:40047 compcert.backend.Allocation <> x var
R40107:40120 compcert.backend.Allocation EqSet2 union_1 def
R40107:40120 compcert.backend.Allocation EqSet2 union_1 def
R40148:40155 compcert.backend.Allocation LEq eqs_same proj
R40148:40155 compcert.backend.Allocation LEq eqs_same proj
R40148:40155 compcert.backend.Allocation LEq eqs_same proj
R40174:40186 compcert.backend.Allocation EqSet union_2 def
R40174:40186 compcert.backend.Allocation EqSet union_2 def
R40201:40213 compcert.backend.Allocation EqSet union_3 def
R40201:40213 compcert.backend.Allocation EqSet union_3 def
R40232:40244 compcert.backend.Allocation EqSet union_1 def
R40232:40244 compcert.backend.Allocation EqSet union_1 def
R40275:40282 compcert.backend.Allocation LEq eqs_same proj
R40275:40282 compcert.backend.Allocation LEq eqs_same proj
R40275:40282 compcert.backend.Allocation LEq eqs_same proj
R40301:40314 compcert.backend.Allocation EqSet2 union_2 def
R40301:40314 compcert.backend.Allocation EqSet2 union_2 def
R40329:40342 compcert.backend.Allocation EqSet2 union_3 def
R40329:40342 compcert.backend.Allocation EqSet2 union_3 def
prf 40367:40377 LEq ge_lub_left
R40392:40393 compcert.backend.Allocation LEq ge def
R40405:40405 compcert.backend.Allocation <> x var
R40396:40398 compcert.backend.Allocation LEq lub def
R40402:40402 compcert.backend.Allocation <> y var
R40400:40400 compcert.backend.Allocation <> x var
R40428:40430 compcert.backend.Allocation LEq lub def
R40433:40434 compcert.backend.Allocation LEq ge def
R40437:40448 compcert.backend.Allocation EqSet Subset def
R40513:40525 compcert.backend.Allocation EqSet union_2 def
R40513:40525 compcert.backend.Allocation EqSet union_2 def
prf 40551:40562 LEq ge_lub_right
R40577:40578 compcert.backend.Allocation LEq ge def
R40590:40590 compcert.backend.Allocation <> y var
R40581:40583 compcert.backend.Allocation LEq lub def
R40587:40587 compcert.backend.Allocation <> y var
R40585:40585 compcert.backend.Allocation <> x var
R40613:40615 compcert.backend.Allocation LEq lub def
R40618:40619 compcert.backend.Allocation LEq ge def
R40622:40633 compcert.backend.Allocation EqSet Subset def
R40698:40710 compcert.backend.Allocation EqSet union_3 def
R40698:40710 compcert.backend.Allocation EqSet union_3 def
R40732:40734 compcert.backend.Allocation LEq <> mod
R40832:40855 compcert.backend.Kildall Backward_Dataflow_Solver <> modtype
R40857:40859 compcert.backend.Allocation LEq <> modtype
R40862:40876 compcert.backend.Kildall NodeSetBackward <> modtype
mod 40826:40827 <> DS
def 41054:41075 <> successors_block_shape
R41083:41093 compcert.backend.Allocation <> block_shape ind
R41098:41101 Coq.Init.Datatypes <> list ind
R41103:41106 compcert.backend.LTL <> node def
R41119:41121 compcert.backend.Allocation <> bsh var
R41132:41136 compcert.backend.Allocation <> BSnop constr
R41147:41150 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41151:41153 Coq.Init.Datatypes <> nil constr
R41159:41164 compcert.backend.Allocation <> BSmove constr
R41183:41186 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41187:41189 Coq.Init.Datatypes <> nil constr
R41195:41204 compcert.backend.Allocation <> BSmakelong constr
R41229:41232 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41233:41235 Coq.Init.Datatypes <> nil constr
R41241:41249 compcert.backend.Allocation <> BSlowlong constr
R41268:41271 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41272:41274 Coq.Init.Datatypes <> nil constr
R41280:41289 compcert.backend.Allocation <> BShighlong constr
R41308:41311 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41312:41314 Coq.Init.Datatypes <> nil constr
R41320:41323 compcert.backend.Allocation <> BSop constr
R41362:41365 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41366:41368 Coq.Init.Datatypes <> nil constr
R41374:41381 compcert.backend.Allocation <> BSopdead constr
R41404:41407 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41408:41410 Coq.Init.Datatypes <> nil constr
R41416:41421 compcert.backend.Allocation <> BSload constr
R41468:41471 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41472:41474 Coq.Init.Datatypes <> nil constr
R41480:41486 compcert.backend.Allocation <> BSload2 constr
R41552:41555 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41556:41558 Coq.Init.Datatypes <> nil constr
R41564:41572 compcert.backend.Allocation <> BSload2_1 constr
R41613:41616 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41617:41619 Coq.Init.Datatypes <> nil constr
R41625:41633 compcert.backend.Allocation <> BSload2_2 constr
R41680:41683 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41684:41686 Coq.Init.Datatypes <> nil constr
R41692:41701 compcert.backend.Allocation <> BSloaddead constr
R41732:41735 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41736:41738 Coq.Init.Datatypes <> nil constr
R41744:41750 compcert.backend.Allocation <> BSstore constr
R41793:41796 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41797:41799 Coq.Init.Datatypes <> nil constr
R41805:41812 compcert.backend.Allocation <> BSstore2 constr
R41874:41877 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41878:41880 Coq.Init.Datatypes <> nil constr
R41886:41891 compcert.backend.Allocation <> BScall constr
R41928:41931 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41932:41934 Coq.Init.Datatypes <> nil constr
R41940:41949 compcert.backend.Allocation <> BStailcall constr
R41975:41977 Coq.Init.Datatypes <> nil constr
R41983:41991 compcert.backend.Allocation <> BSbuiltin constr
R42030:42033 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R42034:42036 Coq.Init.Datatypes <> nil constr
R42042:42048 compcert.backend.Allocation <> BSannot constr
R42083:42086 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R42087:42089 Coq.Init.Datatypes <> nil constr
R42095:42100 compcert.backend.Allocation <> BScond constr
R42132:42135 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R42138:42141 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R42142:42144 Coq.Init.Datatypes <> nil constr
R42150:42160 compcert.backend.Allocation <> BSjumptable constr
R42189:42196 compcert.backend.Allocation <> BSreturn constr
R42211:42213 Coq.Init.Datatypes <> nil constr
def 42234:42240 <> analyze
R42246:42257 compcert.backend.RTL <> function rec
R42266:42271 compcert.backend.RTLtyping <> regenv def
R42280:42286 compcert.lib.Maps PTree t def
R42288:42298 compcert.backend.Allocation <> block_shape ind
R42306:42325 compcert.backend.Allocation DS fixpoint_allnodes defax
R42355:42362 compcert.backend.Allocation <> transfer def
R42370:42372 compcert.backend.Allocation <> bsh var
R42366:42368 compcert.backend.Allocation <> env var
R42364:42364 compcert.backend.Allocation <> f var
R42331:42352 compcert.backend.Allocation <> successors_block_shape def
R42327:42329 compcert.backend.Allocation <> bsh var
R43313:43316 Coq.Init.Datatypes <> list ind
R43318:43320 compcert.backend.Registers <> reg def
R43329:43332 Coq.Init.Datatypes <> list ind
R43334:43336 compcert.common.AST <> typ ind
R43349:43352 Coq.Init.Datatypes <> list ind
R43354:43356 compcert.backend.Locations <> loc ind
R43363:43365 compcert.backend.Allocation <> eqs rec
R43409:43412 Coq.Init.Datatypes <> bool ind
R43439:43445 compcert.backend.Allocation <> lparams var
R43434:43436 compcert.backend.Allocation <> tys var
R43425:43431 compcert.backend.Allocation <> rparams var
R43456:43458 Coq.Init.Datatypes <> nil constr
R43461:43463 Coq.Init.Datatypes <> nil constr
R43466:43468 Coq.Init.Datatypes <> nil constr
R43473:43476 Coq.Init.Datatypes <> true constr
R43484:43487 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43497:43500 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43492:43496 compcert.common.AST <> Tlong constr
R43508:43511 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43514:43517 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43553:43556 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43530:43541 compcert.backend.Allocation <> compat_left2 def
R43552:43552 compcert.backend.Allocation <> e var
R43557:43568 compcert.backend.Allocation <> compat_entry def
R43580:43580 compcert.backend.Allocation <> e var
R43588:43591 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43596:43596 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43616:43620 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43597:43600 compcert.common.AST <> Tint constr
R43602:43607 compcert.common.AST <> Tfloat constr
R43609:43615 compcert.common.AST <> Tsingle constr
R43628:43631 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43663:43666 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43644:43654 compcert.backend.Allocation <> compat_left def
R43662:43662 compcert.backend.Allocation <> e var
R43667:43678 compcert.backend.Allocation <> compat_entry def
R43690:43690 compcert.backend.Allocation <> e var
R43663:43666 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43644:43654 compcert.backend.Allocation <> compat_left def
R43662:43662 compcert.backend.Allocation <> e var
R43667:43678 compcert.backend.Allocation <> compat_entry def
R43690:43690 compcert.backend.Allocation <> e var
R43663:43666 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43644:43654 compcert.backend.Allocation <> compat_left def
R43662:43662 compcert.backend.Allocation <> e var
R43667:43678 compcert.backend.Allocation <> compat_entry def
R43690:43690 compcert.backend.Allocation <> e var
R43707:43711 Coq.Init.Datatypes <> false constr
R43439:43445 compcert.backend.Allocation <> lparams var
R43434:43436 compcert.backend.Allocation <> tys var
R43425:43431 compcert.backend.Allocation <> rparams var
R43456:43458 Coq.Init.Datatypes <> nil constr
R43461:43463 Coq.Init.Datatypes <> nil constr
R43466:43468 Coq.Init.Datatypes <> nil constr
R43473:43476 Coq.Init.Datatypes <> true constr
R43484:43487 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43497:43500 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43492:43496 compcert.common.AST <> Tlong constr
R43508:43511 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43514:43517 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43553:43556 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43530:43541 compcert.backend.Allocation <> compat_left2 def
R43552:43552 compcert.backend.Allocation <> e var
R43557:43568 compcert.backend.Allocation <> compat_entry def
R43580:43580 compcert.backend.Allocation <> e var
R43588:43591 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43596:43596 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43616:43620 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43597:43600 compcert.common.AST <> Tint constr
R43602:43607 compcert.common.AST <> Tfloat constr
R43609:43615 compcert.common.AST <> Tsingle constr
R43628:43631 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43663:43666 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43644:43654 compcert.backend.Allocation <> compat_left def
R43662:43662 compcert.backend.Allocation <> e var
R43667:43678 compcert.backend.Allocation <> compat_entry def
R43690:43690 compcert.backend.Allocation <> e var
R43663:43666 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43644:43654 compcert.backend.Allocation <> compat_left def
R43662:43662 compcert.backend.Allocation <> e var
R43667:43678 compcert.backend.Allocation <> compat_entry def
R43690:43690 compcert.backend.Allocation <> e var
R43663:43666 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43644:43654 compcert.backend.Allocation <> compat_left def
R43662:43662 compcert.backend.Allocation <> e var
R43667:43678 compcert.backend.Allocation <> compat_entry def
R43690:43690 compcert.backend.Allocation <> e var
R43707:43711 Coq.Init.Datatypes <> false constr
R43439:43445 compcert.backend.Allocation <> lparams var
R43434:43436 compcert.backend.Allocation <> tys var
R43425:43431 compcert.backend.Allocation <> rparams var
R43456:43458 Coq.Init.Datatypes <> nil constr
R43461:43463 Coq.Init.Datatypes <> nil constr
R43466:43468 Coq.Init.Datatypes <> nil constr
R43473:43476 Coq.Init.Datatypes <> true constr
R43484:43487 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43497:43500 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43492:43496 compcert.common.AST <> Tlong constr
R43508:43511 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43514:43517 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43553:43556 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43530:43541 compcert.backend.Allocation <> compat_left2 def
R43552:43552 compcert.backend.Allocation <> e var
R43557:43568 compcert.backend.Allocation <> compat_entry def
R43580:43580 compcert.backend.Allocation <> e var
R43588:43591 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43596:43596 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43616:43620 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43597:43600 compcert.common.AST <> Tint constr
R43602:43607 compcert.common.AST <> Tfloat constr
R43609:43615 compcert.common.AST <> Tsingle constr
R43628:43631 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43663:43666 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43644:43654 compcert.backend.Allocation <> compat_left def
R43662:43662 compcert.backend.Allocation <> e var
R43667:43678 compcert.backend.Allocation <> compat_entry def
R43690:43690 compcert.backend.Allocation <> e var
R43663:43666 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43644:43654 compcert.backend.Allocation <> compat_left def
R43662:43662 compcert.backend.Allocation <> e var
R43667:43678 compcert.backend.Allocation <> compat_entry def
R43690:43690 compcert.backend.Allocation <> e var
R43663:43666 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43644:43654 compcert.backend.Allocation <> compat_left def
R43662:43662 compcert.backend.Allocation <> e var
R43667:43678 compcert.backend.Allocation <> compat_entry def
R43690:43690 compcert.backend.Allocation <> e var
R43707:43711 Coq.Init.Datatypes <> false constr
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
R0:-1 compcert.backend.Allocation <> y var
def 43900:43920 <> check_entrypoints_aux
R43928:43939 compcert.backend.RTL <> function rec
R43948:43959 compcert.backend.LTL <> function rec
R44001:44006 compcert.backend.RTLtyping <> regenv def
R44014:44016 compcert.backend.Allocation <> eqs rec
R44021:44026 Coq.Init.Datatypes <> option ind
R44028:44031 Coq.Init.Datatypes <> unit ind
R44038:44040 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R44043:44046 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R44071:44074 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R44047:44062 compcert.backend.Allocation <> pair_entrypoints def
R44068:44070 compcert.backend.Allocation <> ltl var
R44064:44066 compcert.backend.Allocation <> rtl var
R44075:44077 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R44080:44083 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R44105:44108 compcert.backend.Allocation <> :option_monad_scope:'do'_x_'<-'_x_';'_x not
R44084:44094 compcert.backend.Allocation <> track_moves def
R44103:44104 compcert.backend.Allocation <> e1 var
R44096:44098 compcert.backend.Allocation <> env var
R44109:44119 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R44269:44273 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R44274:44284 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R44325:44329 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R44330:44340 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R44390:44394 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R44395:44405 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R44452:44456 compcert.backend.Allocation <> :option_monad_scope:'assertion'_x_';'_x not
R44457:44460 Coq.Init.Datatypes <> Some constr
R44462:44463 Coq.Init.Datatypes <> tt constr
R44406:44417 compcert.common.AST <> signature_eq def
R44437:44446 compcert.backend.LTL <> fn_sig proj
R44448:44450 compcert.backend.Allocation <> ltl var
R44420:44429 compcert.backend.RTL <> fn_sig proj
R44431:44433 compcert.backend.Allocation <> rtl var
R44341:44343 compcert.lib.Coqlib <> zeq def
R44369:44384 compcert.backend.LTL <> fn_stacksize proj
R44386:44388 compcert.backend.Allocation <> ltl var
R44346:44361 compcert.backend.RTL <> fn_stacksize proj
R44363:44365 compcert.backend.Allocation <> rtl var
R44285:44293 compcert.backend.Allocation <> can_undef def
R44295:44321 compcert.ia32.Machregs <> destroyed_at_function_entry def
R44120:44131 compcert.backend.Allocation <> compat_entry def
R44234:44247 compcert.backend.Conventions <> loc_parameters def
R44250:44259 compcert.backend.RTL <> fn_sig proj
R44261:44263 compcert.backend.Allocation <> rtl var
R44180:44187 compcert.common.AST <> sig_args proj
R44190:44199 compcert.backend.RTL <> fn_sig proj
R44201:44203 compcert.backend.Allocation <> rtl var
R44134:44146 compcert.backend.RTL <> fn_params proj
R44148:44150 compcert.backend.Allocation <> rtl var
def 44553:44569 <> check_entrypoints
R44577:44588 compcert.backend.RTL <> function rec
R44597:44608 compcert.backend.LTL <> function rec
R44646:44651 compcert.backend.RTLtyping <> regenv def
R44660:44666 compcert.lib.Maps PTree t def
R44668:44678 compcert.backend.Allocation <> block_shape ind
R44714:44719 compcert.lib.Maps PMap t def
R44721:44725 compcert.backend.Allocation LEq t defax
R44729:44731 compcert.common.Errors <> res ind
R44733:44736 Coq.Init.Datatypes <> unit ind
R44743:44745 compcert.common.Errors <> :error_monad_scope:'do'_x_'<-'_x_';'_x not
R44748:44751 compcert.common.Errors <> :error_monad_scope:'do'_x_'<-'_x_';'_x not
R44823:44826 compcert.common.Errors <> :error_monad_scope:'do'_x_'<-'_x_';'_x not
R44752:44759 compcert.backend.Allocation <> transfer def
R44798:44800 compcert.lib.Maps <> ::x_'!!'_x not
R44822:44822 compcert.lib.Maps <> ::x_'!!'_x not
R44801:44817 compcert.backend.RTL <> fn_entrypoint proj
R44819:44821 compcert.backend.Allocation <> rtl var
R44797:44797 compcert.backend.Allocation <> a var
R44774:44790 compcert.backend.RTL <> fn_entrypoint proj
R44792:44794 compcert.backend.Allocation <> rtl var
R44769:44771 compcert.backend.Allocation <> bsh var
R44765:44767 compcert.backend.Allocation <> env var
R44761:44763 compcert.backend.Allocation <> rtl var
R44833:44853 compcert.backend.Allocation <> check_entrypoints_aux def
R44863:44865 compcert.backend.Allocation <> env var
R44859:44861 compcert.backend.Allocation <> ltl var
R44855:44857 compcert.backend.Allocation <> rtl var
R44879:44882 Coq.Init.Datatypes <> None constr
R44887:44891 compcert.common.Errors <> Error constr
R44894:44896 compcert.common.Errors <> msg def
R44948:44951 Coq.Init.Datatypes <> Some constr
R44958:44959 compcert.common.Errors <> OK constr
R44961:44962 Coq.Init.Datatypes <> tt constr
def 45144:45157 <> check_function
R45165:45176 compcert.backend.RTL <> function rec
R45185:45196 compcert.backend.LTL <> function rec
R45205:45210 compcert.backend.RTLtyping <> regenv def
R45214:45216 compcert.common.Errors <> res ind
R45218:45221 Coq.Init.Datatypes <> unit ind
R45239:45248 compcert.backend.Allocation <> pair_codes def
R45254:45256 compcert.backend.Allocation <> ltl var
R45250:45252 compcert.backend.Allocation <> rtl var
R45269:45275 compcert.backend.Allocation <> analyze def
R45285:45287 compcert.backend.Allocation <> bsh var
R45281:45283 compcert.backend.Allocation <> env var
R45277:45279 compcert.backend.Allocation <> rtl var
R45298:45301 Coq.Init.Datatypes <> None constr
R45306:45310 compcert.common.Errors <> Error constr
R45313:45315 compcert.common.Errors <> msg def
R45353:45356 Coq.Init.Datatypes <> Some constr
R45363:45379 compcert.backend.Allocation <> check_entrypoints def
R45393:45395 compcert.backend.Allocation <> bsh var
R45389:45391 compcert.backend.Allocation <> env var
R45385:45387 compcert.backend.Allocation <> ltl var
R45381:45383 compcert.backend.Allocation <> rtl var
ax 45529:45536 <> regalloc
R45555:45557 compcert.common.Errors <> res ind
R45559:45570 compcert.backend.LTL <> function rec
R45539:45550 compcert.backend.RTL <> function rec
def 45637:45651 <> transf_function
R45657:45668 compcert.backend.RTL <> function rec
R45673:45675 compcert.common.Errors <> res ind
R45677:45688 compcert.backend.LTL <> function rec
R45701:45713 compcert.backend.RTLtyping <> type_function def
R45715:45715 compcert.backend.Allocation <> f var
R45726:45730 compcert.common.Errors <> Error constr
R45737:45741 compcert.common.Errors <> Error constr
R45749:45750 compcert.common.Errors <> OK constr
R45771:45778 compcert.backend.Allocation <> regalloc defax
R45780:45780 compcert.backend.Allocation <> f var
R45795:45799 compcert.common.Errors <> Error constr
R45806:45810 compcert.common.Errors <> Error constr
R45822:45823 compcert.common.Errors <> OK constr
R45831:45833 compcert.common.Errors <> :error_monad_scope:'do'_x_'<-'_x_';'_x not
R45835:45838 compcert.common.Errors <> :error_monad_scope:'do'_x_'<-'_x_';'_x not
R45862:45863 compcert.common.Errors <> :error_monad_scope:'do'_x_'<-'_x_';'_x not
R45839:45852 compcert.backend.Allocation <> check_function def
R45854:45854 compcert.backend.Allocation <> f var
R45864:45865 compcert.common.Errors <> OK constr
def 45899:45911 <> transf_fundef
R45918:45927 compcert.backend.RTL <> fundef def
R45932:45934 compcert.common.Errors <> res ind
R45936:45945 compcert.backend.LTL <> fundef def
R45952:45976 compcert.common.AST <> transf_partial_fundef def
R45994:45995 compcert.backend.Allocation <> fd var
R45978:45992 compcert.backend.Allocation <> transf_function def
def 46010:46023 <> transf_program
R46029:46039 compcert.backend.RTL <> program def
R46044:46046 compcert.common.Errors <> res ind
R46048:46058 compcert.backend.LTL <> program def
R46065:46089 compcert.common.AST <> transform_partial_program def
R46105:46105 compcert.backend.Allocation <> p var
R46091:46103 compcert.backend.Allocation <> transf_fundef def
