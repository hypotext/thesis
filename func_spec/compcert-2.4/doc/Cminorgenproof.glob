DIGEST NO
Fcompcert.cfrontend.Cminorgenproof
R879:898 Coq.Program.Equality <> <> lib
R916:920 Coq.FSets.FSets <> <> lib
R938:948 Coq.Sorting.Permutation <> <> lib
R966:971 compcert.lib.Coqlib <> <> lib
R982:985 compcert.lib.Intv <> <> lib
R1003:1008 compcert.common.Errors <> <> lib
R1026:1029 compcert.lib.Maps <> <> lib
R1047:1049 compcert.common.AST <> <> lib
R1067:1074 compcert.lib.Integers <> <> lib
R1092:1097 compcert.lib.Floats <> <> lib
R1115:1120 compcert.common.Values <> <> lib
R1138:1143 compcert.common.Memory <> <> lib
R1161:1166 compcert.common.Events <> <> lib
R1184:1193 compcert.common.Globalenvs <> <> lib
R1211:1219 compcert.common.Smallstep <> <> lib
R1237:1242 compcert.common.Switch <> <> lib
R1260:1270 compcert.cfrontend.Csharpminor <> <> lib
R1288:1293 compcert.backend.Cminor <> <> lib
R1311:1319 compcert.cfrontend.Cminorgen <> <> lib
sec 1368:1378 <> TRANSLATION
var 1391:1394 TRANSLATION prog
R1397:1415 compcert.cfrontend.Csharpminor <> program def
var 1427:1431 TRANSLATION tprog
R1434:1440 compcert.backend.Cminor <> program def
var 1454:1459 TRANSLATION TRANSL
R1481:1483 Coq.Init.Logic <> :type_scope:x_'='_x not
R1462:1475 compcert.cfrontend.Cminorgen <> transl_program def
R1477:1480 compcert.cfrontend.Cminorgenproof <> TRANSLATION.prog var
R1484:1485 compcert.common.Errors <> OK constr
R1487:1491 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tprog var
var 1498:1499 TRANSLATION ge
R1503:1518 compcert.cfrontend.Csharpminor <> genv def
R1523:1536 compcert.common.Globalenvs Genv globalenv def
R1538:1541 compcert.cfrontend.Cminorgenproof <> TRANSLATION.prog var
var 1548:1550 TRANSLATION tge
R1553:1556 compcert.backend.Cminor <> genv def
R1561:1574 compcert.common.Globalenvs Genv globalenv def
R1576:1580 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tprog var
prf 1590:1606 <> symbols_preserved
R1622:1626 compcert.common.AST <> ident def
R1652:1654 Coq.Init.Logic <> :type_scope:x_'='_x not
R1630:1645 compcert.common.Globalenvs Genv find_symbol def
R1651:1651 compcert.cfrontend.Cminorgenproof <> s var
R1647:1649 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R1655:1670 compcert.common.Globalenvs Genv find_symbol def
R1675:1675 compcert.cfrontend.Cminorgenproof <> s var
R1672:1673 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R1685:1715 compcert.common.Globalenvs Genv find_symbol_transf_partial thm
R1733:1738 compcert.cfrontend.Cminorgenproof <> TRANSLATION.TRANSL var
R1717:1729 compcert.cfrontend.Cminorgen <> transl_fundef def
prf 1749:1771 <> function_ptr_translated
R1787:1791 compcert.common.Values <> block def
R1798:1815 compcert.cfrontend.Csharpminor <> fundef def
R1860:1866 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1869:1872 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1908:1911 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1898:1900 Coq.Init.Logic <> :type_scope:x_'='_x not
R1873:1891 compcert.common.Globalenvs Genv find_funct_ptr def
R1897:1897 compcert.cfrontend.Cminorgenproof <> b var
R1893:1895 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R1901:1904 Coq.Init.Datatypes <> Some constr
R1906:1907 compcert.cfrontend.Cminorgenproof <> tf var
R1927:1929 Coq.Init.Logic <> :type_scope:x_'='_x not
R1912:1924 compcert.cfrontend.Cminorgen <> transl_fundef def
R1926:1926 compcert.cfrontend.Cminorgenproof <> f var
R1930:1931 compcert.common.Errors <> OK constr
R1933:1934 compcert.cfrontend.Cminorgenproof <> tf var
R1845:1847 Coq.Init.Logic <> :type_scope:x_'='_x not
R1821:1839 compcert.common.Globalenvs Genv find_funct_ptr def
R1844:1844 compcert.cfrontend.Cminorgenproof <> b var
R1841:1842 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R1848:1851 Coq.Init.Datatypes <> Some constr
R1853:1853 compcert.cfrontend.Cminorgenproof <> f var
R1944:1977 compcert.common.Globalenvs Genv find_funct_ptr_transf_partial thm
R1995:2000 compcert.cfrontend.Cminorgenproof <> TRANSLATION.TRANSL var
R1979:1991 compcert.cfrontend.Cminorgen <> transl_fundef def
prf 2011:2030 <> functions_translated
R2046:2048 compcert.common.Values <> val ind
R2055:2072 compcert.cfrontend.Csharpminor <> fundef def
R2113:2119 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2122:2125 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R2157:2160 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2147:2149 Coq.Init.Logic <> :type_scope:x_'='_x not
R2126:2140 compcert.common.Globalenvs Genv find_funct def
R2146:2146 compcert.cfrontend.Cminorgenproof <> v var
R2142:2144 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R2150:2153 Coq.Init.Datatypes <> Some constr
R2155:2156 compcert.cfrontend.Cminorgenproof <> tf var
R2176:2178 Coq.Init.Logic <> :type_scope:x_'='_x not
R2161:2173 compcert.cfrontend.Cminorgen <> transl_fundef def
R2175:2175 compcert.cfrontend.Cminorgenproof <> f var
R2179:2180 compcert.common.Errors <> OK constr
R2182:2183 compcert.cfrontend.Cminorgenproof <> tf var
R2098:2100 Coq.Init.Logic <> :type_scope:x_'='_x not
R2078:2092 compcert.common.Globalenvs Genv find_funct def
R2097:2097 compcert.cfrontend.Cminorgenproof <> v var
R2094:2095 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R2101:2104 Coq.Init.Datatypes <> Some constr
R2106:2106 compcert.cfrontend.Cminorgenproof <> f var
R2193:2222 compcert.common.Globalenvs Genv find_funct_transf_partial thm
R2240:2245 compcert.cfrontend.Cminorgenproof <> TRANSLATION.TRANSL var
R2224:2236 compcert.cfrontend.Cminorgen <> transl_fundef def
prf 2256:2272 <> varinfo_preserved
R2311:2313 Coq.Init.Logic <> :type_scope:x_'='_x not
R2287:2304 compcert.common.Globalenvs Genv find_var_info def
R2310:2310 compcert.cfrontend.Cminorgenproof <> b var
R2306:2308 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R2314:2331 compcert.common.Globalenvs Genv find_var_info def
R2336:2336 compcert.cfrontend.Cminorgenproof <> b var
R2333:2334 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R2346:2378 compcert.common.Globalenvs Genv find_var_info_transf_partial thm
R2396:2401 compcert.cfrontend.Cminorgenproof <> TRANSLATION.TRANSL var
R2380:2392 compcert.cfrontend.Cminorgen <> transl_fundef def
prf 2412:2429 <> sig_preserved_body
R2511:2513 Coq.Init.Logic <> :type_scope:x_'='_x not
R2504:2509 compcert.backend.Cminor <> fn_sig proj
R2500:2501 compcert.cfrontend.Cminorgenproof <> tf var
R2514:2531 compcert.cfrontend.Csharpminor <> fn_sig proj
R2533:2533 compcert.cfrontend.Cminorgenproof <> f var
R2485:2487 Coq.Init.Logic <> :type_scope:x_'='_x not
R2459:2472 compcert.cfrontend.Cminorgen <> transl_funbody def
R2484:2484 compcert.cfrontend.Cminorgenproof <> f var
R2479:2482 compcert.cfrontend.Cminorgenproof <> size var
R2474:2477 compcert.cfrontend.Cminorgenproof <> cenv var
R2488:2489 compcert.common.Errors <> OK constr
R2491:2492 compcert.cfrontend.Cminorgenproof <> tf var
R2560:2573 compcert.cfrontend.Cminorgen <> transl_funbody def
prf 2618:2630 <> sig_preserved
R2696:2698 Coq.Init.Logic <> :type_scope:x_'='_x not
R2680:2692 compcert.backend.Cminor <> funsig def
R2694:2695 compcert.cfrontend.Cminorgenproof <> tf var
R2699:2716 compcert.cfrontend.Csharpminor <> funsig def
R2718:2718 compcert.cfrontend.Cminorgenproof <> f var
R2665:2667 Coq.Init.Logic <> :type_scope:x_'='_x not
R2650:2662 compcert.cfrontend.Cminorgen <> transl_fundef def
R2664:2664 compcert.cfrontend.Cminorgenproof <> f var
R2668:2669 compcert.common.Errors <> OK constr
R2671:2672 compcert.cfrontend.Cminorgenproof <> tf var
R2775:2789 compcert.cfrontend.Cminorgen <> transl_function def
R2802:2816 compcert.cfrontend.Cminorgen <> build_compilenv def
R2802:2816 compcert.cfrontend.Cminorgen <> build_compilenv def
R2830:2832 compcert.lib.Coqlib <> zle def
R2836:2851 compcert.lib.Integers Int max_unsigned def
R2861:2864 compcert.common.Errors <> bind def
R2830:2832 compcert.lib.Coqlib <> zle def
R2836:2851 compcert.lib.Integers Int max_unsigned def
R2861:2864 compcert.common.Errors <> bind def
R2861:2864 compcert.common.Errors <> bind def
R2919:2936 compcert.cfrontend.Cminorgenproof <> sig_preserved_body thm
R2919:2936 compcert.cfrontend.Cminorgenproof <> sig_preserved_body thm
prf 3038:3050 <> load_freelist
R3200:3202 Coq.Init.Logic <> :type_scope:x_'='_x not
R3177:3184 compcert.common.Memory Mem load def
R3197:3199 compcert.cfrontend.Cminorgenproof <> ofs var
R3195:3195 compcert.cfrontend.Cminorgenproof <> b var
R3192:3193 compcert.cfrontend.Cminorgenproof <> m' var
R3186:3190 compcert.cfrontend.Cminorgenproof <> chunk var
R3203:3210 compcert.common.Memory Mem load def
R3222:3224 compcert.cfrontend.Cminorgenproof <> ofs var
R3220:3220 compcert.cfrontend.Cminorgenproof <> b var
R3218:3218 compcert.cfrontend.Cminorgenproof <> m var
R3212:3216 compcert.cfrontend.Cminorgenproof <> chunk var
R3161:3163 Coq.Init.Logic <> :type_scope:x_'='_x not
R3142:3154 compcert.common.Memory Mem free_list def
R3158:3160 compcert.cfrontend.Cminorgenproof <> fbl var
R3156:3156 compcert.cfrontend.Cminorgenproof <> m var
R3164:3167 Coq.Init.Datatypes <> Some constr
R3169:3170 compcert.cfrontend.Cminorgenproof <> m' var
R3129:3132 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3127:3128 compcert.cfrontend.Cminorgenproof <> b' var
R3133:3133 compcert.cfrontend.Cminorgenproof <> b var
R3104:3105 Coq.Lists.List <> In def
R3120:3122 compcert.cfrontend.Cminorgenproof <> fbl var
R3107:3107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3110:3111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3114:3115 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3118:3118 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3108:3109 compcert.cfrontend.Cminorgenproof <> b' var
R3112:3113 compcert.cfrontend.Cminorgenproof <> lo var
R3116:3117 compcert.cfrontend.Cminorgenproof <> hi var
R3349:3356 compcert.common.Memory Mem free def
R3349:3356 compcert.common.Memory Mem free def
R3425:3432 compcert.common.Memory Mem load def
R3425:3432 compcert.common.Memory Mem load def
R3521:3533 compcert.common.Memory Mem load_free thm
R3521:3533 compcert.common.Memory Mem load_free thm
R3555:3567 Coq.Init.Logic <> sym_not_equal syndef
R3555:3567 Coq.Init.Logic <> sym_not_equal syndef
prf 3611:3623 <> perm_freelist
R3719:3726 compcert.common.Memory Mem perm def
R3738:3738 compcert.cfrontend.Cminorgenproof <> p var
R3736:3736 compcert.cfrontend.Cminorgenproof <> k var
R3732:3734 compcert.cfrontend.Cminorgenproof <> ofs var
R3730:3730 compcert.cfrontend.Cminorgenproof <> b var
R3728:3728 compcert.cfrontend.Cminorgenproof <> m var
R3692:3699 compcert.common.Memory Mem perm def
R3712:3712 compcert.cfrontend.Cminorgenproof <> p var
R3710:3710 compcert.cfrontend.Cminorgenproof <> k var
R3706:3708 compcert.cfrontend.Cminorgenproof <> ofs var
R3704:3704 compcert.cfrontend.Cminorgenproof <> b var
R3701:3702 compcert.cfrontend.Cminorgenproof <> m' var
R3676:3678 Coq.Init.Logic <> :type_scope:x_'='_x not
R3657:3669 compcert.common.Memory Mem free_list def
R3673:3675 compcert.cfrontend.Cminorgenproof <> fbl var
R3671:3671 compcert.cfrontend.Cminorgenproof <> m var
R3679:3682 Coq.Init.Datatypes <> Some constr
R3684:3685 compcert.cfrontend.Cminorgenproof <> m' var
R3841:3848 compcert.common.Memory Mem free def
R3841:3848 compcert.common.Memory Mem free def
prf 3917:3934 <> nextblock_freelist
R4009:4011 Coq.Init.Logic <> :type_scope:x_'='_x not
R3993:4005 compcert.common.Memory Mem nextblock proj
R4007:4008 compcert.cfrontend.Cminorgenproof <> m' var
R4012:4024 compcert.common.Memory Mem nextblock proj
R4026:4026 compcert.cfrontend.Cminorgenproof <> m var
R3977:3979 Coq.Init.Logic <> :type_scope:x_'='_x not
R3958:3970 compcert.common.Memory Mem free_list def
R3974:3976 compcert.cfrontend.Cminorgenproof <> fbl var
R3972:3972 compcert.cfrontend.Cminorgenproof <> m var
R3980:3983 Coq.Init.Datatypes <> Some constr
R3985:3986 compcert.cfrontend.Cminorgenproof <> m' var
R4132:4139 compcert.common.Memory Mem free def
R4132:4139 compcert.common.Memory Mem free def
R4193:4205 compcert.common.Memory Mem nextblock proj
R4193:4205 compcert.common.Memory Mem nextblock proj
R4226:4243 compcert.common.Memory Mem nextblock_free thm
R4226:4243 compcert.common.Memory Mem nextblock_free thm
prf 4265:4282 <> free_list_freeable
R4375:4388 compcert.common.Memory Mem range_perm def
R4404:4411 compcert.common.Memtype <> Freeable constr
R4400:4402 compcert.common.Memtype <> Cur constr
R4397:4398 compcert.cfrontend.Cminorgenproof <> hi var
R4394:4395 compcert.cfrontend.Cminorgenproof <> lo var
R4392:4392 compcert.cfrontend.Cminorgenproof <> b var
R4390:4390 compcert.cfrontend.Cminorgenproof <> m var
R4355:4356 Coq.Lists.List <> In def
R4370:4370 compcert.cfrontend.Cminorgenproof <> l var
R4358:4358 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4360:4361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4364:4365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4368:4368 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4359:4359 compcert.cfrontend.Cminorgenproof <> b var
R4362:4363 compcert.cfrontend.Cminorgenproof <> lo var
R4366:4367 compcert.cfrontend.Cminorgenproof <> hi var
R4321:4323 Coq.Init.Logic <> :type_scope:x_'='_x not
R4304:4316 compcert.common.Memory Mem free_list def
R4320:4320 compcert.cfrontend.Cminorgenproof <> l var
R4318:4318 compcert.cfrontend.Cminorgenproof <> m var
R4324:4327 Coq.Init.Datatypes <> Some constr
R4329:4330 compcert.cfrontend.Cminorgenproof <> m' var
R4520:4527 compcert.common.Memory Mem free def
R4520:4527 compcert.common.Memory Mem free def
R4648:4662 compcert.common.Memory Mem perm_free_3 thm
R4648:4662 compcert.common.Memory Mem perm_free_3 thm
prf 4704:4719 <> nextblock_storev
R4807:4809 Coq.Init.Logic <> :type_scope:x_'='_x not
R4791:4803 compcert.common.Memory Mem nextblock proj
R4805:4806 compcert.cfrontend.Cminorgenproof <> m' var
R4810:4822 compcert.common.Memory Mem nextblock proj
R4824:4824 compcert.cfrontend.Cminorgenproof <> m var
R4777:4779 Coq.Init.Logic <> :type_scope:x_'='_x not
R4752:4761 compcert.common.Memory Mem storev def
R4776:4776 compcert.cfrontend.Cminorgenproof <> v var
R4771:4774 compcert.cfrontend.Cminorgenproof <> addr var
R4769:4769 compcert.cfrontend.Cminorgenproof <> m var
R4763:4767 compcert.cfrontend.Cminorgenproof <> chunk var
R4780:4783 Coq.Init.Datatypes <> Some constr
R4785:4786 compcert.cfrontend.Cminorgenproof <> m' var
R4843:4852 compcert.common.Memory Mem storev def
R4906:4924 compcert.common.Memory Mem nextblock_store thm
R4906:4924 compcert.common.Memory Mem nextblock_store thm
def 5713:5723 <> match_temps
R5729:5734 compcert.common.Values <> meminj def
R5742:5761 compcert.cfrontend.Csharpminor <> temp_env def
R5769:5771 compcert.backend.Cminor <> env def
R5817:5823 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5826:5827 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5845:5848 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5835:5837 Coq.Init.Logic <> :type_scope:x_'='_x not
R5830:5831 compcert.lib.Maps <> ::x_'!'_x not
R5834:5834 compcert.lib.Maps <> ::x_'!'_x not
R5832:5833 compcert.cfrontend.Cminorgenproof <> id var
R5828:5829 compcert.cfrontend.Cminorgenproof <> te var
R5838:5841 Coq.Init.Datatypes <> Some constr
R5843:5844 compcert.cfrontend.Cminorgenproof <> v' var
R5849:5858 compcert.common.Values <> val_inject ind
R5864:5865 compcert.cfrontend.Cminorgenproof <> v' var
R5862:5862 compcert.cfrontend.Cminorgenproof <> v var
R5860:5860 compcert.cfrontend.Cminorgenproof <> f var
R5804:5806 Coq.Init.Logic <> :type_scope:x_'='_x not
R5801:5801 compcert.lib.Maps <> ::x_'!'_x not
R5802:5803 compcert.cfrontend.Cminorgenproof <> id var
R5799:5800 compcert.cfrontend.Cminorgenproof <> le var
R5807:5810 Coq.Init.Datatypes <> Some constr
R5812:5812 compcert.cfrontend.Cminorgenproof <> v var
prf 5875:5895 <> match_temps_invariant
R5968:5978 compcert.cfrontend.Cminorgenproof <> match_temps def
R5986:5987 compcert.cfrontend.Cminorgenproof <> te var
R5983:5984 compcert.cfrontend.Cminorgenproof <> le var
R5980:5981 compcert.cfrontend.Cminorgenproof <> f' var
R5946:5956 compcert.common.Values <> inject_incr def
R5960:5961 compcert.cfrontend.Cminorgenproof <> f' var
R5958:5958 compcert.cfrontend.Cminorgenproof <> f var
R5921:5931 compcert.cfrontend.Cminorgenproof <> match_temps def
R5938:5939 compcert.cfrontend.Cminorgenproof <> te var
R5935:5936 compcert.cfrontend.Cminorgenproof <> le var
R5933:5933 compcert.cfrontend.Cminorgenproof <> f var
prf 6085:6102 <> match_temps_assign
R6181:6191 compcert.cfrontend.Cminorgenproof <> match_temps def
R6216:6224 compcert.lib.Maps PTree set def
R6232:6233 compcert.cfrontend.Cminorgenproof <> te var
R6229:6230 compcert.cfrontend.Cminorgenproof <> tv var
R6226:6227 compcert.cfrontend.Cminorgenproof <> id var
R6196:6204 compcert.lib.Maps PTree set def
R6211:6212 compcert.cfrontend.Cminorgenproof <> le var
R6209:6209 compcert.cfrontend.Cminorgenproof <> v var
R6206:6207 compcert.cfrontend.Cminorgenproof <> id var
R6193:6193 compcert.cfrontend.Cminorgenproof <> f var
R6158:6167 compcert.common.Values <> val_inject ind
R6173:6174 compcert.cfrontend.Cminorgenproof <> tv var
R6171:6171 compcert.cfrontend.Cminorgenproof <> v var
R6169:6169 compcert.cfrontend.Cminorgenproof <> f var
R6133:6143 compcert.cfrontend.Cminorgenproof <> match_temps def
R6150:6151 compcert.cfrontend.Cminorgenproof <> te var
R6147:6148 compcert.cfrontend.Cminorgenproof <> le var
R6145:6145 compcert.cfrontend.Cminorgenproof <> f var
R6275:6286 compcert.lib.Maps PTree gsspec thm
R6275:6286 compcert.lib.Maps PTree gsspec thm
R6304:6306 compcert.lib.Coqlib <> peq def
R6304:6306 compcert.lib.Coqlib <> peq def
ind 6455:6463 <> match_var
constr 6536:6550 <> match_var_local
constr 6685:6700 <> match_var_global
R6469:6474 compcert.common.Values <> meminj def
R6482:6486 compcert.common.Values <> block def
R6512:6517 Coq.Init.Datatypes <> option ind
R6519:6519 Coq.Numbers.BinNums <> Z ind
R6490:6495 Coq.Init.Datatypes <> option ind
R6503:6505 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6498:6502 compcert.common.Values <> block def
R6506:6506 Coq.Numbers.BinNums <> Z ind
R6641:6649 compcert.cfrontend.Cminorgenproof <> match_var ind
R6671:6674 Coq.Init.Datatypes <> Some constr
R6676:6678 compcert.cfrontend.Cminorgenproof <> ofs var
R6657:6660 Coq.Init.Datatypes <> Some constr
R6661:6661 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6663:6664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6667:6667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6662:6662 compcert.cfrontend.Cminorgenproof <> b var
R6665:6666 compcert.cfrontend.Cminorgenproof <> sz var
R6576:6585 compcert.common.Values <> val_inject ind
R6608:6611 compcert.common.Values <> Vptr constr
R6617:6624 compcert.lib.Integers Int repr def
R6626:6628 compcert.cfrontend.Cminorgenproof <> ofs var
R6590:6593 compcert.common.Values <> Vptr constr
R6597:6604 compcert.lib.Integers Int zero def
R6595:6595 compcert.cfrontend.Cminorgenproof <> b var
R6709:6717 compcert.cfrontend.Cminorgenproof <> match_var ind
R6729:6732 Coq.Init.Datatypes <> None constr
R6724:6727 Coq.Init.Datatypes <> None constr
constr 7062:7073 <> mk_match_env
rec 6928:6936 <> match_env
proj 7162:7168 <> me_vars
proj 7264:7274 <> me_low_high
proj 7392:7401 <> me_bounded
proj 7614:7619 <> me_inv
proj 7945:7951 <> me_incr
R6942:6947 compcert.common.Values <> meminj def
R6957:6965 compcert.cfrontend.Cminorgen <> compilenv def
R6989:7003 compcert.cfrontend.Csharpminor <> env def
R7011:7015 compcert.common.Values <> block def
R7043:7047 compcert.common.Values <> block def
R7188:7196 compcert.cfrontend.Cminorgenproof <> match_var ind
R7215:7215 compcert.lib.Maps <> ::x_'!'_x not
R7216:7217 compcert.cfrontend.Cminorgenproof <> id var
R7211:7214 compcert.cfrontend.Cminorgenproof <> cenv var
R7205:7205 compcert.lib.Maps <> ::x_'!'_x not
R7206:7207 compcert.cfrontend.Cminorgenproof <> id var
R7204:7204 compcert.cfrontend.Cminorgenproof <> e var
R7200:7201 compcert.cfrontend.Cminorgenproof <> sp var
R7198:7198 compcert.cfrontend.Cminorgenproof <> f var
R7283:7285 compcert.lib.Coqlib <> Ple def
R7290:7291 compcert.cfrontend.Cminorgenproof <> hi var
R7287:7288 compcert.cfrontend.Cminorgenproof <> lo var
R7466:7469 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7458:7460 compcert.lib.Coqlib <> Ple def
R7465:7465 compcert.cfrontend.Cminorgenproof <> b var
R7462:7463 compcert.cfrontend.Cminorgenproof <> lo var
R7470:7472 compcert.lib.Coqlib <> Plt def
R7476:7477 compcert.cfrontend.Cminorgenproof <> hi var
R7474:7474 compcert.cfrontend.Cminorgenproof <> b var
R7440:7442 Coq.Init.Logic <> :type_scope:x_'='_x not
R7426:7434 compcert.lib.Maps PTree get def
R7439:7439 compcert.cfrontend.Cminorgenproof <> e var
R7436:7437 compcert.cfrontend.Cminorgenproof <> id var
R7443:7446 Coq.Init.Datatypes <> Some constr
R7447:7447 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7449:7450 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7453:7453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7448:7448 compcert.cfrontend.Cminorgenproof <> b var
R7451:7452 compcert.cfrontend.Cminorgenproof <> sz var
R7681:7687 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7690:7691 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7692:7698 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7701:7702 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7717:7719 Coq.Init.Logic <> :type_scope:x_'='_x not
R7703:7711 compcert.lib.Maps PTree get def
R7716:7716 compcert.cfrontend.Cminorgenproof <> e var
R7713:7714 compcert.cfrontend.Cminorgenproof <> id var
R7720:7723 Coq.Init.Datatypes <> Some constr
R7724:7724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7726:7727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7730:7730 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7725:7725 compcert.cfrontend.Cminorgenproof <> b var
R7728:7729 compcert.cfrontend.Cminorgenproof <> sz var
R7653:7655 Coq.Init.Logic <> :type_scope:x_'='_x not
R7650:7650 compcert.cfrontend.Cminorgenproof <> f var
R7652:7652 compcert.cfrontend.Cminorgenproof <> b var
R7656:7659 Coq.Init.Datatypes <> Some constr
R7660:7660 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7663:7664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7670:7670 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7661:7662 compcert.cfrontend.Cminorgenproof <> sp var
R7665:7669 compcert.cfrontend.Cminorgenproof <> delta var
R8022:8024 compcert.lib.Coqlib <> Plt def
R8029:8030 compcert.cfrontend.Cminorgenproof <> sp var
R8026:8027 compcert.cfrontend.Cminorgenproof <> tb var
R8010:8012 compcert.lib.Coqlib <> Plt def
R8016:8017 compcert.cfrontend.Cminorgenproof <> lo var
R8014:8014 compcert.cfrontend.Cminorgenproof <> b var
R7988:7990 Coq.Init.Logic <> :type_scope:x_'='_x not
R7985:7985 compcert.cfrontend.Cminorgenproof <> f var
R7987:7987 compcert.cfrontend.Cminorgenproof <> b var
R7991:7994 Coq.Init.Datatypes <> Some constr
R7995:7995 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7998:7999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8005:8005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7996:7997 compcert.cfrontend.Cminorgenproof <> tb var
R8000:8004 compcert.cfrontend.Cminorgenproof <> delta var
prf 8115:8133 <> match_env_invariant
R8340:8348 compcert.cfrontend.Cminorgenproof <> match_env rec
R8366:8367 compcert.cfrontend.Cminorgenproof <> hi var
R8363:8364 compcert.cfrontend.Cminorgenproof <> lo var
R8360:8361 compcert.cfrontend.Cminorgenproof <> sp var
R8358:8358 compcert.cfrontend.Cminorgenproof <> e var
R8353:8356 compcert.cfrontend.Cminorgenproof <> cenv var
R8350:8351 compcert.cfrontend.Cminorgenproof <> f2 var
R8326:8328 Coq.Init.Logic <> :type_scope:x_'='_x not
R8322:8323 compcert.cfrontend.Cminorgenproof <> f2 var
R8325:8325 compcert.cfrontend.Cminorgenproof <> b var
R8329:8330 compcert.cfrontend.Cminorgenproof <> f1 var
R8332:8332 compcert.cfrontend.Cminorgenproof <> b var
R8310:8312 compcert.lib.Coqlib <> Plt def
R8316:8317 compcert.cfrontend.Cminorgenproof <> lo var
R8314:8314 compcert.cfrontend.Cminorgenproof <> b var
R8274:8276 Coq.Init.Logic <> :type_scope:x_'='_x not
R8270:8271 compcert.cfrontend.Cminorgenproof <> f1 var
R8273:8273 compcert.cfrontend.Cminorgenproof <> b var
R8277:8280 Coq.Init.Datatypes <> Some constr
R8281:8281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8284:8285 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8291:8291 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8282:8283 compcert.cfrontend.Cminorgenproof <> sp var
R8286:8290 compcert.cfrontend.Cminorgenproof <> delta var
R8248:8250 Coq.Init.Logic <> :type_scope:x_'='_x not
R8244:8245 compcert.cfrontend.Cminorgenproof <> f2 var
R8247:8247 compcert.cfrontend.Cminorgenproof <> b var
R8251:8254 Coq.Init.Datatypes <> Some constr
R8255:8255 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8258:8259 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8265:8265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8256:8257 compcert.cfrontend.Cminorgenproof <> sp var
R8260:8264 compcert.cfrontend.Cminorgenproof <> delta var
R8204:8214 compcert.common.Values <> inject_incr def
R8219:8220 compcert.cfrontend.Cminorgenproof <> f2 var
R8216:8217 compcert.cfrontend.Cminorgenproof <> f1 var
R8170:8178 compcert.cfrontend.Cminorgenproof <> match_env rec
R8196:8197 compcert.cfrontend.Cminorgenproof <> hi var
R8193:8194 compcert.cfrontend.Cminorgenproof <> lo var
R8190:8191 compcert.cfrontend.Cminorgenproof <> sp var
R8188:8188 compcert.cfrontend.Cminorgenproof <> e var
R8183:8186 compcert.cfrontend.Cminorgenproof <> cenv var
R8180:8181 compcert.cfrontend.Cminorgenproof <> f1 var
prf 8612:8637 <> inject_incr_separated_same
R8759:8761 Coq.Init.Logic <> :type_scope:x_'='_x not
R8755:8756 compcert.cfrontend.Cminorgenproof <> f2 var
R8758:8758 compcert.cfrontend.Cminorgenproof <> b var
R8762:8763 compcert.cfrontend.Cminorgenproof <> f1 var
R8765:8765 compcert.cfrontend.Cminorgenproof <> b var
R8731:8745 compcert.common.Memory Mem valid_block def
R8750:8750 compcert.cfrontend.Cminorgenproof <> b var
R8747:8748 compcert.cfrontend.Cminorgenproof <> m1 var
R8686:8701 compcert.common.Events <> inject_separated def
R8712:8714 compcert.cfrontend.Cminorgenproof <> m1' var
R8709:8710 compcert.cfrontend.Cminorgenproof <> m1 var
R8706:8707 compcert.cfrontend.Cminorgenproof <> f2 var
R8703:8704 compcert.cfrontend.Cminorgenproof <> f1 var
R8665:8675 compcert.common.Values <> inject_incr def
R8680:8681 compcert.cfrontend.Cminorgenproof <> f2 var
R8677:8678 compcert.cfrontend.Cminorgenproof <> f1 var
prf 8966:8992 <> inject_incr_separated_same'
R9153:9155 Coq.Init.Logic <> :type_scope:x_'='_x not
R9149:9150 compcert.cfrontend.Cminorgenproof <> f1 var
R9152:9152 compcert.cfrontend.Cminorgenproof <> b var
R9156:9159 Coq.Init.Datatypes <> Some constr
R9160:9160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9163:9164 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9170:9170 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9161:9162 compcert.cfrontend.Cminorgenproof <> b' var
R9165:9169 compcert.cfrontend.Cminorgenproof <> delta var
R9123:9137 compcert.common.Memory Mem valid_block def
R9143:9144 compcert.cfrontend.Cminorgenproof <> b' var
R9139:9141 compcert.cfrontend.Cminorgenproof <> m1' var
R9101:9103 Coq.Init.Logic <> :type_scope:x_'='_x not
R9097:9098 compcert.cfrontend.Cminorgenproof <> f2 var
R9100:9100 compcert.cfrontend.Cminorgenproof <> b var
R9104:9107 Coq.Init.Datatypes <> Some constr
R9108:9108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9111:9112 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9118:9118 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9109:9110 compcert.cfrontend.Cminorgenproof <> b' var
R9113:9117 compcert.cfrontend.Cminorgenproof <> delta var
R9041:9056 compcert.common.Events <> inject_separated def
R9067:9069 compcert.cfrontend.Cminorgenproof <> m1' var
R9064:9065 compcert.cfrontend.Cminorgenproof <> m1 var
R9061:9062 compcert.cfrontend.Cminorgenproof <> f2 var
R9058:9059 compcert.cfrontend.Cminorgenproof <> f1 var
R9020:9030 compcert.common.Values <> inject_incr def
R9035:9036 compcert.cfrontend.Cminorgenproof <> f2 var
R9032:9033 compcert.cfrontend.Cminorgenproof <> f1 var
prf 9332:9354 <> match_env_external_call
R9551:9559 compcert.cfrontend.Cminorgenproof <> match_env rec
R9577:9578 compcert.cfrontend.Cminorgenproof <> hi var
R9574:9575 compcert.cfrontend.Cminorgenproof <> lo var
R9571:9572 compcert.cfrontend.Cminorgenproof <> sp var
R9569:9569 compcert.cfrontend.Cminorgenproof <> e var
R9564:9567 compcert.cfrontend.Cminorgenproof <> cenv var
R9561:9562 compcert.cfrontend.Cminorgenproof <> f2 var
R9519:9521 compcert.lib.Coqlib <> Plt def
R9527:9539 compcert.common.Memory Mem nextblock proj
R9541:9543 compcert.cfrontend.Cminorgenproof <> m1' var
R9523:9524 compcert.cfrontend.Cminorgenproof <> sp var
R9490:9492 compcert.lib.Coqlib <> Ple def
R9498:9510 compcert.common.Memory Mem nextblock proj
R9512:9513 compcert.cfrontend.Cminorgenproof <> m1 var
R9494:9495 compcert.cfrontend.Cminorgenproof <> hi var
R9455:9470 compcert.common.Events <> inject_separated def
R9481:9483 compcert.cfrontend.Cminorgenproof <> m1' var
R9478:9479 compcert.cfrontend.Cminorgenproof <> m1 var
R9475:9476 compcert.cfrontend.Cminorgenproof <> f2 var
R9472:9473 compcert.cfrontend.Cminorgenproof <> f1 var
R9432:9442 compcert.common.Values <> inject_incr def
R9447:9448 compcert.cfrontend.Cminorgenproof <> f2 var
R9444:9445 compcert.cfrontend.Cminorgenproof <> f1 var
R9398:9406 compcert.cfrontend.Cminorgenproof <> match_env rec
R9424:9425 compcert.cfrontend.Cminorgenproof <> hi var
R9421:9422 compcert.cfrontend.Cminorgenproof <> lo var
R9418:9419 compcert.cfrontend.Cminorgenproof <> sp var
R9416:9416 compcert.cfrontend.Cminorgenproof <> e var
R9411:9414 compcert.cfrontend.Cminorgenproof <> cenv var
R9408:9409 compcert.cfrontend.Cminorgenproof <> f1 var
R9604:9622 compcert.cfrontend.Cminorgenproof <> match_env_invariant thm
R9604:9622 compcert.cfrontend.Cminorgenproof <> match_env_invariant thm
R9656:9682 compcert.cfrontend.Cminorgenproof <> inject_incr_separated_same' thm
R9656:9682 compcert.cfrontend.Cminorgenproof <> inject_incr_separated_same' thm
R9709:9734 compcert.cfrontend.Cminorgenproof <> inject_incr_separated_same thm
R9709:9734 compcert.cfrontend.Cminorgenproof <> inject_incr_separated_same thm
prf 9818:9832 <> match_env_alloc
R10118:10126 compcert.cfrontend.Cminorgenproof <> match_env rec
R10168:10180 compcert.common.Memory Mem nextblock proj
R10182:10183 compcert.cfrontend.Cminorgenproof <> m2 var
R10164:10165 compcert.cfrontend.Cminorgenproof <> lo var
R10161:10162 compcert.cfrontend.Cminorgenproof <> sp var
R10137:10145 compcert.lib.Maps PTree set def
R10158:10158 compcert.cfrontend.Cminorgenproof <> e var
R10150:10150 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10152:10153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10156:10156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10151:10151 compcert.cfrontend.Cminorgenproof <> b var
R10154:10155 compcert.cfrontend.Cminorgenproof <> sz var
R10147:10148 compcert.cfrontend.Cminorgenproof <> id var
R10131:10134 compcert.cfrontend.Cminorgenproof <> cenv var
R10128:10129 compcert.cfrontend.Cminorgenproof <> f2 var
R10105:10107 Coq.Init.Logic <> :type_scope:x_'='_x not
R10102:10102 compcert.lib.Maps <> ::x_'!'_x not
R10103:10104 compcert.cfrontend.Cminorgenproof <> id var
R10101:10101 compcert.cfrontend.Cminorgenproof <> e var
R10108:10111 Coq.Init.Datatypes <> None constr
R10086:10088 Coq.Init.Logic <> :type_scope:x_'='_x not
R10081:10082 compcert.cfrontend.Cminorgenproof <> f2 var
R10084:10085 compcert.cfrontend.Cminorgenproof <> b' var
R10089:10090 compcert.cfrontend.Cminorgenproof <> f1 var
R10092:10093 compcert.cfrontend.Cminorgenproof <> b' var
R10072:10075 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R10070:10071 compcert.cfrontend.Cminorgenproof <> b' var
R10076:10076 compcert.cfrontend.Cminorgenproof <> b var
R10036:10038 Coq.Init.Logic <> :type_scope:x_'='_x not
R10032:10033 compcert.cfrontend.Cminorgenproof <> f2 var
R10035:10035 compcert.cfrontend.Cminorgenproof <> b var
R10039:10042 Coq.Init.Datatypes <> Some constr
R10043:10043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10046:10047 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10051:10051 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10044:10045 compcert.cfrontend.Cminorgenproof <> sp var
R10048:10050 compcert.cfrontend.Cminorgenproof <> ofs var
R10009:10019 compcert.common.Values <> inject_incr def
R10024:10025 compcert.cfrontend.Cminorgenproof <> f2 var
R10021:10022 compcert.cfrontend.Cminorgenproof <> f1 var
R9992:9994 Coq.Init.Logic <> :type_scope:x_'='_x not
R9989:9989 compcert.lib.Maps <> ::x_'!'_x not
R9990:9991 compcert.cfrontend.Cminorgenproof <> id var
R9985:9988 compcert.cfrontend.Cminorgenproof <> cenv var
R9995:9998 Coq.Init.Datatypes <> Some constr
R10000:10002 compcert.cfrontend.Cminorgenproof <> ofs var
R9969:9971 Coq.Init.Logic <> :type_scope:x_'='_x not
R9952:9960 compcert.common.Memory Mem alloc def
R9967:9968 compcert.cfrontend.Cminorgenproof <> sz var
R9962:9963 compcert.cfrontend.Cminorgenproof <> m1 var
R9972:9972 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9975:9976 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9978:9978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9973:9974 compcert.cfrontend.Cminorgenproof <> m2 var
R9977:9977 compcert.cfrontend.Cminorgenproof <> b var
R9884:9892 compcert.cfrontend.Cminorgenproof <> match_env rec
R9929:9941 compcert.common.Memory Mem nextblock proj
R9943:9944 compcert.cfrontend.Cminorgenproof <> m1 var
R9925:9926 compcert.cfrontend.Cminorgenproof <> lo var
R9922:9923 compcert.cfrontend.Cminorgenproof <> sp var
R9920:9920 compcert.cfrontend.Cminorgenproof <> e var
R9898:9909 compcert.lib.Maps PTree remove def
R9914:9917 compcert.cfrontend.Cminorgenproof <> cenv var
R9911:9912 compcert.cfrontend.Cminorgenproof <> id var
R9894:9895 compcert.cfrontend.Cminorgenproof <> f1 var
R10265:10283 compcert.common.Memory Mem nextblock_alloc thm
R10321:10336 compcert.common.Memory Mem alloc_result thm
R10410:10421 compcert.lib.Maps PTree gsspec thm
R10410:10421 compcert.lib.Maps PTree gsspec thm
R10434:10436 compcert.lib.Coqlib <> peq def
R10434:10436 compcert.lib.Coqlib <> peq def
R10539:10552 compcert.lib.Integers Int add_commut thm
R10563:10574 compcert.lib.Integers Int add_zero thm
R10539:10552 compcert.lib.Integers Int add_commut thm
R10563:10574 compcert.lib.Integers Int add_zero thm
R10637:10645 compcert.lib.Maps PTree gro thm
R10637:10645 compcert.lib.Maps PTree gro thm
R10784:10795 compcert.lib.Maps PTree gsspec thm
R10784:10795 compcert.lib.Maps PTree gsspec thm
R10813:10815 compcert.lib.Coqlib <> peq def
R10813:10815 compcert.lib.Coqlib <> peq def
R10949:10956 compcert.common.Values <> eq_block def
R10961:10973 compcert.common.Memory Mem nextblock proj
R10949:10956 compcert.common.Values <> eq_block def
R10961:10973 compcert.common.Memory Mem nextblock proj
R11046:11054 compcert.lib.Maps PTree gss thm
R11046:11054 compcert.lib.Maps PTree gss thm
R11168:11176 compcert.lib.Maps PTree gso thm
R11168:11176 compcert.lib.Maps PTree gso thm
R11252:11256 compcert.common.Values <> block def
def 11349:11360 <> match_bounds
R11366:11380 compcert.cfrontend.Csharpminor <> env def
R11387:11389 compcert.common.Memory <> mem syndef
R11487:11490 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R11494:11496 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R11491:11493 compcert.cfrontend.Cminorgenproof <> ofs var
R11491:11493 compcert.cfrontend.Cminorgenproof <> ofs var
R11497:11498 compcert.cfrontend.Cminorgenproof <> sz var
R11460:11467 compcert.common.Memory Mem perm def
R11481:11481 compcert.cfrontend.Cminorgenproof <> p var
R11477:11479 compcert.common.Memtype <> Max constr
R11473:11475 compcert.cfrontend.Cminorgenproof <> ofs var
R11471:11471 compcert.cfrontend.Cminorgenproof <> b var
R11469:11469 compcert.cfrontend.Cminorgenproof <> m var
R11442:11444 Coq.Init.Logic <> :type_scope:x_'='_x not
R11428:11436 compcert.lib.Maps PTree get def
R11441:11441 compcert.cfrontend.Cminorgenproof <> e var
R11438:11439 compcert.cfrontend.Cminorgenproof <> id var
R11445:11448 Coq.Init.Datatypes <> Some constr
R11449:11449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11451:11452 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11455:11455 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11450:11450 compcert.cfrontend.Cminorgenproof <> b var
R11453:11454 compcert.cfrontend.Cminorgenproof <> sz var
prf 11508:11529 <> match_bounds_invariant
R11690:11701 compcert.cfrontend.Cminorgenproof <> match_bounds def
R11705:11706 compcert.cfrontend.Cminorgenproof <> m2 var
R11703:11703 compcert.cfrontend.Cminorgenproof <> e var
R11660:11667 compcert.common.Memory Mem perm def
R11682:11682 compcert.cfrontend.Cminorgenproof <> p var
R11678:11680 compcert.common.Memtype <> Max constr
R11674:11676 compcert.cfrontend.Cminorgenproof <> ofs var
R11672:11672 compcert.cfrontend.Cminorgenproof <> b var
R11669:11670 compcert.cfrontend.Cminorgenproof <> m1 var
R11633:11640 compcert.common.Memory Mem perm def
R11655:11655 compcert.cfrontend.Cminorgenproof <> p var
R11651:11653 compcert.common.Memtype <> Max constr
R11647:11649 compcert.cfrontend.Cminorgenproof <> ofs var
R11645:11645 compcert.cfrontend.Cminorgenproof <> b var
R11642:11643 compcert.cfrontend.Cminorgenproof <> m2 var
R11615:11617 Coq.Init.Logic <> :type_scope:x_'='_x not
R11601:11609 compcert.lib.Maps PTree get def
R11614:11614 compcert.cfrontend.Cminorgenproof <> e var
R11611:11612 compcert.cfrontend.Cminorgenproof <> id var
R11618:11621 Coq.Init.Datatypes <> Some constr
R11622:11622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11624:11625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11628:11628 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11623:11623 compcert.cfrontend.Cminorgenproof <> b var
R11626:11627 compcert.cfrontend.Cminorgenproof <> sz var
R11552:11563 compcert.cfrontend.Cminorgenproof <> match_bounds def
R11567:11568 compcert.cfrontend.Cminorgenproof <> m1 var
R11565:11565 compcert.cfrontend.Cminorgenproof <> e var
ind 11958:11978 <> is_reachable_from_env
constr 12048:12065 <> is_reachable_intro
R11984:11989 compcert.common.Values <> meminj def
R11996:12010 compcert.cfrontend.Csharpminor <> env def
R12018:12022 compcert.common.Values <> block def
R12031:12031 Coq.Numbers.BinNums <> Z ind
R12190:12210 compcert.cfrontend.Cminorgenproof <> is_reachable_from_env ind
R12160:12163 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R12167:12169 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R12155:12159 compcert.cfrontend.Cminorgenproof <> delta var
R12175:12177 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R12170:12174 compcert.cfrontend.Cminorgenproof <> delta var
R12178:12179 compcert.cfrontend.Cminorgenproof <> sz var
R12127:12129 Coq.Init.Logic <> :type_scope:x_'='_x not
R12126:12126 compcert.cfrontend.Cminorgenproof <> b var
R12130:12133 Coq.Init.Datatypes <> Some constr
R12134:12134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12137:12138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12144:12144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12139:12143 compcert.cfrontend.Cminorgenproof <> delta var
R12100:12102 Coq.Init.Logic <> :type_scope:x_'='_x not
R12097:12097 compcert.lib.Maps <> ::x_'!'_x not
R12098:12099 compcert.cfrontend.Cminorgenproof <> id var
R12103:12106 Coq.Init.Datatypes <> Some constr
R12107:12107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12109:12110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12113:12113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12108:12108 compcert.cfrontend.Cminorgenproof <> b var
R12111:12112 compcert.cfrontend.Cminorgenproof <> sz var
def 12236:12251 <> padding_freeable
R12257:12262 compcert.common.Values <> meminj def
R12269:12283 compcert.cfrontend.Csharpminor <> env def
R12291:12293 compcert.common.Memory <> mem syndef
R12301:12305 compcert.common.Values <> block def
R12313:12313 Coq.Numbers.BinNums <> Z ind
R12391:12394 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12360:12367 compcert.common.Memory Mem perm def
R12383:12390 compcert.common.Memtype <> Freeable constr
R12379:12381 compcert.common.Memtype <> Cur constr
R12375:12377 compcert.cfrontend.Cminorgenproof <> ofs var
R12372:12373 compcert.cfrontend.Cminorgenproof <> sp var
R12369:12370 compcert.cfrontend.Cminorgenproof <> tm var
R12395:12415 compcert.cfrontend.Cminorgenproof <> is_reachable_from_env ind
R12424:12426 compcert.cfrontend.Cminorgenproof <> ofs var
R12421:12422 compcert.cfrontend.Cminorgenproof <> sp var
R12419:12419 compcert.cfrontend.Cminorgenproof <> e var
R12417:12417 compcert.cfrontend.Cminorgenproof <> f var
R12344:12347 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R12351:12353 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R12348:12350 compcert.cfrontend.Cminorgenproof <> ofs var
R12348:12350 compcert.cfrontend.Cminorgenproof <> ofs var
R12354:12355 compcert.cfrontend.Cminorgenproof <> sz var
prf 12436:12461 <> padding_freeable_invariant
R12709:12724 compcert.cfrontend.Cminorgenproof <> padding_freeable def
R12738:12739 compcert.cfrontend.Cminorgenproof <> sz var
R12735:12736 compcert.cfrontend.Cminorgenproof <> sp var
R12731:12733 compcert.cfrontend.Cminorgenproof <> tm2 var
R12729:12729 compcert.cfrontend.Cminorgenproof <> e var
R12726:12727 compcert.cfrontend.Cminorgenproof <> f2 var
R12695:12697 Coq.Init.Logic <> :type_scope:x_'='_x not
R12691:12692 compcert.cfrontend.Cminorgenproof <> f2 var
R12694:12694 compcert.cfrontend.Cminorgenproof <> b var
R12698:12699 compcert.cfrontend.Cminorgenproof <> f1 var
R12701:12701 compcert.cfrontend.Cminorgenproof <> b var
R12679:12681 compcert.lib.Coqlib <> Plt def
R12685:12686 compcert.cfrontend.Cminorgenproof <> hi var
R12683:12683 compcert.cfrontend.Cminorgenproof <> b var
R12629:12636 compcert.common.Memory Mem perm def
R12653:12660 compcert.common.Memtype <> Freeable constr
R12649:12651 compcert.common.Memtype <> Cur constr
R12645:12647 compcert.cfrontend.Cminorgenproof <> ofs var
R12642:12643 compcert.cfrontend.Cminorgenproof <> sp var
R12638:12640 compcert.cfrontend.Cminorgenproof <> tm2 var
R12593:12600 compcert.common.Memory Mem perm def
R12617:12624 compcert.common.Memtype <> Freeable constr
R12613:12615 compcert.common.Memtype <> Cur constr
R12609:12611 compcert.cfrontend.Cminorgenproof <> ofs var
R12606:12607 compcert.cfrontend.Cminorgenproof <> sp var
R12602:12604 compcert.cfrontend.Cminorgenproof <> tm1 var
R12546:12554 compcert.cfrontend.Cminorgenproof <> match_env rec
R12572:12573 compcert.cfrontend.Cminorgenproof <> hi var
R12569:12570 compcert.cfrontend.Cminorgenproof <> lo var
R12566:12567 compcert.cfrontend.Cminorgenproof <> sp var
R12564:12564 compcert.cfrontend.Cminorgenproof <> e var
R12559:12562 compcert.cfrontend.Cminorgenproof <> cenv var
R12556:12557 compcert.cfrontend.Cminorgenproof <> f1 var
R12509:12524 compcert.cfrontend.Cminorgenproof <> padding_freeable def
R12538:12539 compcert.cfrontend.Cminorgenproof <> sz var
R12535:12536 compcert.cfrontend.Cminorgenproof <> sp var
R12531:12533 compcert.cfrontend.Cminorgenproof <> tm1 var
R12529:12529 compcert.cfrontend.Cminorgenproof <> e var
R12526:12527 compcert.cfrontend.Cminorgenproof <> f1 var
R12846:12855 compcert.cfrontend.Cminorgenproof <> me_bounded proj
prf 12996:13020 <> is_reachable_from_env_dec
R13076:13079 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R13044:13064 compcert.cfrontend.Cminorgenproof <> is_reachable_from_env ind
R13073:13075 compcert.cfrontend.Cminorgenproof <> ofs var
R13070:13071 compcert.cfrontend.Cminorgenproof <> sp var
R13068:13068 compcert.cfrontend.Cminorgenproof <> e var
R13066:13066 compcert.cfrontend.Cminorgenproof <> f var
R13080:13080 Coq.Init.Logic <> :type_scope:'~'_x not
R13081:13101 compcert.cfrontend.Cminorgenproof <> is_reachable_from_env ind
R13110:13112 compcert.cfrontend.Cminorgenproof <> ofs var
R13107:13108 compcert.cfrontend.Cminorgenproof <> sp var
R13105:13105 compcert.cfrontend.Cminorgenproof <> e var
R13103:13103 compcert.cfrontend.Cminorgenproof <> f var
R13167:13170 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R13180:13180 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R13162:13166 compcert.common.AST <> ident def
R13176:13178 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R13171:13175 compcert.common.Values <> block def
R13179:13179 Coq.Numbers.BinNums <> Z ind
R13208:13214 compcert.cfrontend.Cminorgenproof <> id_b_sz var
R13240:13240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13243:13244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13252:13252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13245:13245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13247:13248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13251:13251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13323:13326 Coq.Init.Datatypes <> None constr
R13331:13335 Coq.Init.Datatypes <> false constr
R13366:13369 Coq.Init.Datatypes <> Some constr
R13370:13370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13374:13375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13381:13381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13420:13427 compcert.common.Values <> eq_block def
R13546:13550 Coq.Init.Datatypes <> false constr
R13485:13488 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13472:13474 compcert.lib.Coqlib <> zle def
R13489:13491 compcert.lib.Coqlib <> zlt def
R13503:13505 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13167:13170 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R13180:13180 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R13162:13166 compcert.common.AST <> ident def
R13176:13178 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R13171:13175 compcert.common.Values <> block def
R13179:13179 Coq.Numbers.BinNums <> Z ind
R13208:13214 compcert.cfrontend.Cminorgenproof <> id_b_sz var
R13240:13240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13243:13244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13252:13252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13245:13245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13247:13248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13251:13251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13323:13326 Coq.Init.Datatypes <> None constr
R13331:13335 Coq.Init.Datatypes <> false constr
R13366:13369 Coq.Init.Datatypes <> Some constr
R13370:13370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13374:13375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13381:13381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13420:13427 compcert.common.Values <> eq_block def
R13546:13550 Coq.Init.Datatypes <> false constr
R13485:13488 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13472:13474 compcert.lib.Coqlib <> zle def
R13489:13491 compcert.lib.Coqlib <> zlt def
R13503:13505 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13613:13624 Coq.Lists.List <> existsb def
R13632:13645 compcert.lib.Maps PTree elements def
R13613:13624 Coq.Lists.List <> existsb def
R13632:13645 compcert.lib.Maps PTree elements def
R13680:13698 Coq.Lists.List <> existsb_exists thm
R13680:13698 Coq.Lists.List <> existsb_exists thm
R13835:13842 compcert.common.Values <> eq_block def
R13835:13842 compcert.common.Values <> eq_block def
R13883:13891 Coq.Init.Datatypes <> andb_prop thm
R13883:13891 Coq.Init.Datatypes <> andb_prop thm
R13915:13932 compcert.cfrontend.Cminorgenproof <> is_reachable_intro constr
R13915:13932 compcert.cfrontend.Cminorgenproof <> is_reachable_intro constr
R13962:13984 compcert.lib.Maps PTree elements_complete thm
R13962:13984 compcert.lib.Maps PTree elements_complete thm
R14024:14040 compcert.lib.Coqlib <> proj_sumbool_true thm
R14024:14040 compcert.lib.Coqlib <> proj_sumbool_true thm
R14024:14040 compcert.lib.Coqlib <> proj_sumbool_true thm
R14135:14137 Coq.Init.Logic <> :type_scope:x_'='_x not
R14104:14110 Coq.Lists.List <> existsb def
R14118:14131 compcert.lib.Maps PTree elements def
R14138:14141 Coq.Init.Datatypes <> true constr
R14135:14137 Coq.Init.Logic <> :type_scope:x_'='_x not
R14104:14110 Coq.Lists.List <> existsb def
R14118:14131 compcert.lib.Maps PTree elements def
R14138:14141 Coq.Init.Datatypes <> true constr
R14155:14173 Coq.Lists.List <> existsb_exists thm
R14155:14173 Coq.Lists.List <> existsb_exists thm
R14183:14183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14186:14187 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14195:14195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14188:14188 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14190:14191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14194:14194 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14183:14183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14186:14187 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14195:14195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14188:14188 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14190:14191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14194:14194 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14213:14234 compcert.lib.Maps PTree elements_correct thm
R14213:14234 compcert.lib.Maps PTree elements_correct thm
R14273:14283 compcert.lib.Coqlib <> dec_eq_true thm
R14273:14283 compcert.lib.Coqlib <> dec_eq_true thm
R14295:14306 compcert.lib.Coqlib <> proj_sumbool def
R14330:14337 compcert.lib.Coqlib <> zle_true thm
R14330:14337 compcert.lib.Coqlib <> zle_true thm
R14354:14361 compcert.lib.Coqlib <> zlt_true thm
R14354:14361 compcert.lib.Coqlib <> zlt_true thm
ind 14583:14598 <> match_globalenvs
constr 14640:14658 <> mk_match_globalenvs
R14604:14609 compcert.common.Values <> meminj def
R14620:14624 compcert.common.Values <> block def
R14703:14705 Coq.Init.Logic <> :type_scope:x_'='_x not
R14702:14702 compcert.cfrontend.Cminorgenproof <> b var
R14706:14709 Coq.Init.Datatypes <> Some constr
R14710:14710 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14712:14713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14715:14715 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14711:14711 compcert.cfrontend.Cminorgenproof <> b var
R14685:14687 compcert.lib.Coqlib <> Plt def
R14689:14689 compcert.cfrontend.Cminorgenproof <> b var
R14796:14798 Coq.Init.Logic <> :type_scope:x_'='_x not
R14794:14795 compcert.cfrontend.Cminorgenproof <> b1 var
R14799:14800 compcert.cfrontend.Cminorgenproof <> b2 var
R14778:14780 compcert.lib.Coqlib <> Plt def
R14782:14783 compcert.cfrontend.Cminorgenproof <> b2 var
R14756:14758 Coq.Init.Logic <> :type_scope:x_'='_x not
R14754:14755 compcert.cfrontend.Cminorgenproof <> b1 var
R14759:14762 Coq.Init.Datatypes <> Some constr
R14763:14763 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14766:14767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14773:14773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14764:14765 compcert.cfrontend.Cminorgenproof <> b2 var
R14768:14772 compcert.cfrontend.Cminorgenproof <> delta var
R14867:14869 compcert.lib.Coqlib <> Plt def
R14871:14871 compcert.cfrontend.Cminorgenproof <> b var
R14854:14856 Coq.Init.Logic <> :type_scope:x_'='_x not
R14832:14847 compcert.common.Globalenvs Genv find_symbol def
R14852:14853 compcert.cfrontend.Cminorgenproof <> id var
R14849:14850 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R14857:14860 Coq.Init.Datatypes <> Some constr
R14862:14862 compcert.cfrontend.Cminorgenproof <> b var
R14949:14951 compcert.lib.Coqlib <> Plt def
R14953:14953 compcert.cfrontend.Cminorgenproof <> b var
R14935:14937 Coq.Init.Logic <> :type_scope:x_'='_x not
R14911:14929 compcert.common.Globalenvs Genv find_funct_ptr def
R14934:14934 compcert.cfrontend.Cminorgenproof <> b var
R14931:14932 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R14938:14941 Coq.Init.Datatypes <> Some constr
R14943:14944 compcert.cfrontend.Cminorgenproof <> fd var
R15029:15031 compcert.lib.Coqlib <> Plt def
R15033:15033 compcert.cfrontend.Cminorgenproof <> b var
R15015:15017 Coq.Init.Logic <> :type_scope:x_'='_x not
R14992:15009 compcert.common.Globalenvs Genv find_var_info def
R15014:15014 compcert.cfrontend.Cminorgenproof <> b var
R15011:15012 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R15018:15021 Coq.Init.Datatypes <> Some constr
R15023:15024 compcert.cfrontend.Cminorgenproof <> gv var
R15041:15041 compcert.cfrontend.Cminorgenproof <> match_globalenvs ind
prf 15051:15071 <> inj_preserves_globals
R15118:15141 compcert.common.Events <> meminj_preserves_globals def
R15146:15146 compcert.cfrontend.Cminorgenproof <> f var
R15143:15144 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R15091:15106 compcert.cfrontend.Cminorgenproof <> match_globalenvs ind
R15110:15111 compcert.cfrontend.Cminorgenproof <> hi var
R15108:15108 compcert.cfrontend.Cminorgenproof <> f var
ind 15698:15702 <> frame
constr 15716:15720 <> Frame
R15728:15736 compcert.cfrontend.Cminorgen <> compilenv def
R15751:15765 compcert.backend.Cminor <> function rec
R15779:15793 compcert.cfrontend.Csharpminor <> env def
R15808:15827 compcert.cfrontend.Csharpminor <> temp_env def
R15842:15851 compcert.backend.Cminor <> env def
R15866:15870 compcert.common.Values <> block def
R15888:15892 compcert.common.Values <> block def
R15894:15894 compcert.cfrontend.Cminorgenproof <> frame ind
def 15908:15916 <> callstack
R15928:15931 Coq.Init.Datatypes <> list ind
R15933:15937 compcert.cfrontend.Cminorgenproof <> frame ind
ind 16368:16382 <> match_callstack
constr 16485:16491 <> mcs_nil
constr 16645:16652 <> mcs_cons
R16388:16393 compcert.common.Values <> meminj def
R16400:16402 compcert.common.Memory <> mem syndef
R16410:16412 compcert.common.Memory <> mem syndef
R16464:16468 compcert.common.Values <> block def
R16455:16459 compcert.common.Values <> block def
R16442:16450 compcert.cfrontend.Cminorgenproof <> callstack def
R16600:16614 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R16633:16638 compcert.cfrontend.Cminorgenproof <> tbound var
R16627:16631 compcert.cfrontend.Cminorgenproof <> bound var
R16623:16625 Coq.Init.Datatypes <> nil constr
R16577:16579 compcert.lib.Coqlib <> Ple def
R16584:16589 compcert.cfrontend.Cminorgenproof <> tbound var
R16581:16582 compcert.cfrontend.Cminorgenproof <> hi var
R16561:16563 compcert.lib.Coqlib <> Ple def
R16568:16572 compcert.cfrontend.Cminorgenproof <> bound var
R16565:16566 compcert.cfrontend.Cminorgenproof <> hi var
R16530:16545 compcert.cfrontend.Cminorgenproof <> match_globalenvs ind
R16549:16550 compcert.cfrontend.Cminorgenproof <> hi var
R16725:16727 compcert.lib.Coqlib <> Ple def
R16732:16736 compcert.cfrontend.Cminorgenproof <> bound var
R16729:16730 compcert.cfrontend.Cminorgenproof <> hi var
R16756:16758 compcert.lib.Coqlib <> Plt def
R16763:16768 compcert.cfrontend.Cminorgenproof <> tbound var
R16760:16761 compcert.cfrontend.Cminorgenproof <> sp var
R16786:16796 compcert.cfrontend.Cminorgenproof <> match_temps def
R16803:16804 compcert.cfrontend.Cminorgenproof <> te var
R16800:16801 compcert.cfrontend.Cminorgenproof <> le var
R16822:16830 compcert.cfrontend.Cminorgenproof <> match_env rec
R16847:16848 compcert.cfrontend.Cminorgenproof <> hi var
R16844:16845 compcert.cfrontend.Cminorgenproof <> lo var
R16841:16842 compcert.cfrontend.Cminorgenproof <> sp var
R16839:16839 compcert.cfrontend.Cminorgenproof <> e var
R16834:16837 compcert.cfrontend.Cminorgenproof <> cenv var
R16867:16878 compcert.cfrontend.Cminorgenproof <> match_bounds def
R16880:16880 compcert.cfrontend.Cminorgenproof <> e var
R16900:16915 compcert.cfrontend.Cminorgenproof <> padding_freeable def
R16931:16943 compcert.backend.Cminor <> fn_stackspace proj
R16927:16928 compcert.cfrontend.Cminorgenproof <> tf var
R16924:16925 compcert.cfrontend.Cminorgenproof <> sp var
R16919:16919 compcert.cfrontend.Cminorgenproof <> e var
R16961:16975 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R16990:16991 compcert.cfrontend.Cminorgenproof <> sp var
R16987:16988 compcert.cfrontend.Cminorgenproof <> lo var
R16984:16985 compcert.cfrontend.Cminorgenproof <> cs var
R17001:17015 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R17069:17074 compcert.cfrontend.Cminorgenproof <> tbound var
R17063:17067 compcert.cfrontend.Cminorgenproof <> bound var
R17055:17058 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R17025:17029 compcert.cfrontend.Cminorgenproof <> Frame constr
R17053:17054 compcert.cfrontend.Cminorgenproof <> hi var
R17050:17051 compcert.cfrontend.Cminorgenproof <> lo var
R17047:17048 compcert.cfrontend.Cminorgenproof <> sp var
R17044:17045 compcert.cfrontend.Cminorgenproof <> te var
R17041:17042 compcert.cfrontend.Cminorgenproof <> le var
R17039:17039 compcert.cfrontend.Cminorgenproof <> e var
R17036:17037 compcert.cfrontend.Cminorgenproof <> tf var
R17031:17034 compcert.cfrontend.Cminorgenproof <> cenv var
R17059:17060 compcert.cfrontend.Cminorgenproof <> cs var
prf 17138:17169 <> match_callstack_match_globalenvs
R17251:17257 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17260:17261 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17262:17277 compcert.cfrontend.Cminorgenproof <> match_globalenvs ind
R17281:17282 compcert.cfrontend.Cminorgenproof <> hi var
R17279:17279 compcert.cfrontend.Cminorgenproof <> f var
R17207:17221 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R17239:17244 compcert.cfrontend.Cminorgenproof <> tbound var
R17233:17237 compcert.cfrontend.Cminorgenproof <> bound var
R17230:17231 compcert.cfrontend.Cminorgenproof <> cs var
R17227:17228 compcert.cfrontend.Cminorgenproof <> tm var
R17225:17225 compcert.cfrontend.Cminorgenproof <> m var
R17223:17223 compcert.cfrontend.Cminorgenproof <> f var
prf 17379:17403 <> match_callstack_invariant
R17857:17871 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R17892:17897 compcert.cfrontend.Cminorgenproof <> tbound var
R17886:17890 compcert.cfrontend.Cminorgenproof <> bound var
R17883:17884 compcert.cfrontend.Cminorgenproof <> cs var
R17879:17881 compcert.cfrontend.Cminorgenproof <> tm2 var
R17876:17877 compcert.cfrontend.Cminorgenproof <> m2 var
R17873:17874 compcert.cfrontend.Cminorgenproof <> f2 var
R17832:17834 Coq.Init.Logic <> :type_scope:x_'='_x not
R17828:17829 compcert.cfrontend.Cminorgenproof <> f1 var
R17831:17831 compcert.cfrontend.Cminorgenproof <> b var
R17835:17838 Coq.Init.Datatypes <> Some constr
R17839:17839 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17842:17843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17849:17849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17840:17841 compcert.cfrontend.Cminorgenproof <> b' var
R17844:17848 compcert.cfrontend.Cminorgenproof <> delta var
R17811:17813 compcert.lib.Coqlib <> Plt def
R17818:17823 compcert.cfrontend.Cminorgenproof <> tbound var
R17815:17816 compcert.cfrontend.Cminorgenproof <> b' var
R17789:17791 Coq.Init.Logic <> :type_scope:x_'='_x not
R17785:17786 compcert.cfrontend.Cminorgenproof <> f2 var
R17788:17788 compcert.cfrontend.Cminorgenproof <> b var
R17792:17795 Coq.Init.Datatypes <> Some constr
R17796:17796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17799:17800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17806:17806 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17797:17798 compcert.cfrontend.Cminorgenproof <> b' var
R17801:17805 compcert.cfrontend.Cminorgenproof <> delta var
R17751:17753 Coq.Init.Logic <> :type_scope:x_'='_x not
R17747:17748 compcert.cfrontend.Cminorgenproof <> f2 var
R17750:17750 compcert.cfrontend.Cminorgenproof <> b var
R17754:17755 compcert.cfrontend.Cminorgenproof <> f1 var
R17757:17757 compcert.cfrontend.Cminorgenproof <> b var
R17732:17734 compcert.lib.Coqlib <> Plt def
R17738:17742 compcert.cfrontend.Cminorgenproof <> bound var
R17736:17736 compcert.cfrontend.Cminorgenproof <> b var
R17682:17689 compcert.common.Memory Mem perm def
R17706:17713 compcert.common.Memtype <> Freeable constr
R17702:17704 compcert.common.Memtype <> Cur constr
R17698:17700 compcert.cfrontend.Cminorgenproof <> ofs var
R17695:17696 compcert.cfrontend.Cminorgenproof <> sp var
R17691:17693 compcert.cfrontend.Cminorgenproof <> tm2 var
R17646:17653 compcert.common.Memory Mem perm def
R17670:17677 compcert.common.Memtype <> Freeable constr
R17666:17668 compcert.common.Memtype <> Cur constr
R17662:17664 compcert.cfrontend.Cminorgenproof <> ofs var
R17659:17660 compcert.cfrontend.Cminorgenproof <> sp var
R17655:17657 compcert.cfrontend.Cminorgenproof <> tm1 var
R17629:17631 compcert.lib.Coqlib <> Plt def
R17636:17641 compcert.cfrontend.Cminorgenproof <> tbound var
R17633:17634 compcert.cfrontend.Cminorgenproof <> sp var
R17583:17590 compcert.common.Memory Mem perm def
R17605:17605 compcert.cfrontend.Cminorgenproof <> p var
R17601:17603 compcert.common.Memtype <> Max constr
R17597:17599 compcert.cfrontend.Cminorgenproof <> ofs var
R17595:17595 compcert.cfrontend.Cminorgenproof <> b var
R17592:17593 compcert.cfrontend.Cminorgenproof <> m1 var
R17556:17563 compcert.common.Memory Mem perm def
R17578:17578 compcert.cfrontend.Cminorgenproof <> p var
R17574:17576 compcert.common.Memtype <> Max constr
R17570:17572 compcert.cfrontend.Cminorgenproof <> ofs var
R17568:17568 compcert.cfrontend.Cminorgenproof <> b var
R17565:17566 compcert.cfrontend.Cminorgenproof <> m2 var
R17541:17543 compcert.lib.Coqlib <> Plt def
R17547:17551 compcert.cfrontend.Cminorgenproof <> bound var
R17545:17545 compcert.cfrontend.Cminorgenproof <> b var
R17501:17511 compcert.common.Values <> inject_incr def
R17516:17517 compcert.cfrontend.Cminorgenproof <> f2 var
R17513:17514 compcert.cfrontend.Cminorgenproof <> f1 var
R17454:17468 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R17489:17494 compcert.cfrontend.Cminorgenproof <> tbound var
R17483:17487 compcert.cfrontend.Cminorgenproof <> bound var
R17480:17481 compcert.cfrontend.Cminorgenproof <> cs var
R17476:17478 compcert.cfrontend.Cminorgenproof <> tm1 var
R17473:17474 compcert.cfrontend.Cminorgenproof <> m1 var
R17470:17471 compcert.cfrontend.Cminorgenproof <> f1 var
R18090:18092 compcert.lib.Coqlib <> Ple def
R18112:18122 compcert.cfrontend.Cminorgenproof <> me_low_high proj
R18090:18092 compcert.lib.Coqlib <> Ple def
R18112:18122 compcert.cfrontend.Cminorgenproof <> me_low_high proj
R18165:18185 compcert.cfrontend.Cminorgenproof <> match_temps_invariant thm
R18165:18185 compcert.cfrontend.Cminorgenproof <> match_temps_invariant thm
R18204:18222 compcert.cfrontend.Cminorgenproof <> match_env_invariant thm
R18204:18222 compcert.cfrontend.Cminorgenproof <> match_env_invariant thm
R18272:18293 compcert.cfrontend.Cminorgenproof <> match_bounds_invariant thm
R18272:18293 compcert.cfrontend.Cminorgenproof <> match_bounds_invariant thm
R18346:18355 compcert.cfrontend.Cminorgenproof <> me_bounded proj
R18383:18408 compcert.cfrontend.Cminorgenproof <> padding_freeable_invariant thm
R18383:18408 compcert.cfrontend.Cminorgenproof <> padding_freeable_invariant thm
prf 18652:18677 <> match_callstack_incr_bound
R18818:18832 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R18851:18857 compcert.cfrontend.Cminorgenproof <> tbound' var
R18844:18849 compcert.cfrontend.Cminorgenproof <> bound' var
R18841:18842 compcert.cfrontend.Cminorgenproof <> cs var
R18838:18839 compcert.cfrontend.Cminorgenproof <> tm var
R18836:18836 compcert.cfrontend.Cminorgenproof <> m var
R18834:18834 compcert.cfrontend.Cminorgenproof <> f var
R18794:18796 compcert.lib.Coqlib <> Ple def
R18805:18811 compcert.cfrontend.Cminorgenproof <> tbound' var
R18798:18803 compcert.cfrontend.Cminorgenproof <> tbound var
R18774:18776 compcert.lib.Coqlib <> Ple def
R18784:18789 compcert.cfrontend.Cminorgenproof <> bound' var
R18778:18782 compcert.cfrontend.Cminorgenproof <> bound var
R18730:18744 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R18762:18767 compcert.cfrontend.Cminorgenproof <> tbound var
R18756:18760 compcert.cfrontend.Cminorgenproof <> bound var
R18753:18754 compcert.cfrontend.Cminorgenproof <> cs var
R18750:18751 compcert.cfrontend.Cminorgenproof <> tm var
R18748:18748 compcert.cfrontend.Cminorgenproof <> m var
R18746:18746 compcert.cfrontend.Cminorgenproof <> f var
prf 19013:19036 <> match_callstack_set_temp
R19210:19224 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R19313:19318 compcert.cfrontend.Cminorgenproof <> tbound var
R19307:19311 compcert.cfrontend.Cminorgenproof <> bound var
R19299:19302 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19234:19238 compcert.cfrontend.Cminorgenproof <> Frame constr
R19297:19298 compcert.cfrontend.Cminorgenproof <> hi var
R19294:19295 compcert.cfrontend.Cminorgenproof <> lo var
R19291:19292 compcert.cfrontend.Cminorgenproof <> sp var
R19271:19279 compcert.lib.Maps PTree set def
R19287:19288 compcert.cfrontend.Cminorgenproof <> te var
R19284:19285 compcert.cfrontend.Cminorgenproof <> tv var
R19281:19282 compcert.cfrontend.Cminorgenproof <> id var
R19251:19259 compcert.lib.Maps PTree set def
R19266:19267 compcert.cfrontend.Cminorgenproof <> le var
R19264:19264 compcert.cfrontend.Cminorgenproof <> v var
R19261:19262 compcert.cfrontend.Cminorgenproof <> id var
R19248:19248 compcert.cfrontend.Cminorgenproof <> e var
R19245:19246 compcert.cfrontend.Cminorgenproof <> tf var
R19240:19243 compcert.cfrontend.Cminorgenproof <> cenv var
R19303:19304 compcert.cfrontend.Cminorgenproof <> cs var
R19230:19231 compcert.cfrontend.Cminorgenproof <> tm var
R19228:19228 compcert.cfrontend.Cminorgenproof <> m var
R19226:19226 compcert.cfrontend.Cminorgenproof <> f var
R19130:19144 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R19198:19203 compcert.cfrontend.Cminorgenproof <> tbound var
R19192:19196 compcert.cfrontend.Cminorgenproof <> bound var
R19184:19187 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19154:19158 compcert.cfrontend.Cminorgenproof <> Frame constr
R19182:19183 compcert.cfrontend.Cminorgenproof <> hi var
R19179:19180 compcert.cfrontend.Cminorgenproof <> lo var
R19176:19177 compcert.cfrontend.Cminorgenproof <> sp var
R19173:19174 compcert.cfrontend.Cminorgenproof <> te var
R19170:19171 compcert.cfrontend.Cminorgenproof <> le var
R19168:19168 compcert.cfrontend.Cminorgenproof <> e var
R19165:19166 compcert.cfrontend.Cminorgenproof <> tf var
R19160:19163 compcert.cfrontend.Cminorgenproof <> cenv var
R19188:19189 compcert.cfrontend.Cminorgenproof <> cs var
R19150:19151 compcert.cfrontend.Cminorgenproof <> tm var
R19148:19148 compcert.cfrontend.Cminorgenproof <> m var
R19146:19146 compcert.cfrontend.Cminorgenproof <> f var
R19107:19116 compcert.common.Values <> val_inject ind
R19122:19123 compcert.cfrontend.Cminorgenproof <> tv var
R19120:19120 compcert.cfrontend.Cminorgenproof <> v var
R19118:19118 compcert.cfrontend.Cminorgenproof <> f var
R19374:19391 compcert.cfrontend.Cminorgenproof <> match_temps_assign thm
R19374:19391 compcert.cfrontend.Cminorgenproof <> match_temps_assign thm
prf 19608:19623 <> in_blocks_of_env
R19670:19671 Coq.Lists.List <> In def
R19685:19697 compcert.cfrontend.Csharpminor <> blocks_of_env def
R19699:19699 compcert.cfrontend.Cminorgenproof <> e var
R19673:19673 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19675:19676 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19678:19679 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19682:19682 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19674:19674 compcert.cfrontend.Cminorgenproof <> b var
R19680:19681 compcert.cfrontend.Cminorgenproof <> sz var
R19652:19654 Coq.Init.Logic <> :type_scope:x_'='_x not
R19649:19649 compcert.lib.Maps <> ::x_'!'_x not
R19650:19651 compcert.cfrontend.Cminorgenproof <> id var
R19648:19648 compcert.cfrontend.Cminorgenproof <> e var
R19655:19658 Coq.Init.Datatypes <> Some constr
R19659:19659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19661:19662 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19665:19665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19660:19660 compcert.cfrontend.Cminorgenproof <> b var
R19663:19664 compcert.cfrontend.Cminorgenproof <> sz var
R19719:19731 compcert.cfrontend.Csharpminor <> blocks_of_env def
R19769:19784 compcert.cfrontend.Csharpminor <> block_of_binding def
R19786:19786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19789:19790 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19798:19798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19791:19791 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19793:19794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19797:19797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19752:19752 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19754:19755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19757:19758 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19761:19761 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19752:19752 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19754:19755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19757:19758 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19761:19761 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19769:19784 compcert.cfrontend.Csharpminor <> block_of_binding def
R19786:19786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19789:19790 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19798:19798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19791:19791 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19793:19794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19797:19797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19810:19820 Coq.Lists.List <> in_map thm
R19810:19820 Coq.Lists.List <> in_map thm
R19829:19850 compcert.lib.Maps PTree elements_correct thm
R19829:19850 compcert.lib.Maps PTree elements_correct thm
prf 19871:19890 <> in_blocks_of_env_inv
R19953:19959 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19962:19963 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19982:19985 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19968:19970 Coq.Init.Logic <> :type_scope:x_'='_x not
R19965:19965 compcert.lib.Maps <> ::x_'!'_x not
R19966:19967 compcert.cfrontend.Cminorgenproof <> id var
R19964:19964 compcert.cfrontend.Cminorgenproof <> e var
R19971:19974 Coq.Init.Datatypes <> Some constr
R19975:19975 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19977:19978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19981:19981 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19976:19976 compcert.cfrontend.Cminorgenproof <> b var
R19979:19980 compcert.cfrontend.Cminorgenproof <> hi var
R19988:19990 Coq.Init.Logic <> :type_scope:x_'='_x not
R19986:19987 compcert.cfrontend.Cminorgenproof <> lo var
R19915:19916 Coq.Lists.List <> In def
R19931:19943 compcert.cfrontend.Csharpminor <> blocks_of_env def
R19945:19945 compcert.cfrontend.Cminorgenproof <> e var
R19918:19918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19920:19921 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19924:19925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19928:19928 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19919:19919 compcert.cfrontend.Cminorgenproof <> b var
R19922:19923 compcert.cfrontend.Cminorgenproof <> lo var
R19926:19927 compcert.cfrontend.Cminorgenproof <> hi var
R20010:20022 compcert.cfrontend.Csharpminor <> blocks_of_env def
R20044:20058 compcert.lib.Coqlib <> list_in_map_inv thm
R20106:20121 compcert.cfrontend.Csharpminor <> block_of_binding def
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R20167:20189 compcert.lib.Maps PTree elements_complete thm
R20167:20189 compcert.lib.Maps PTree elements_complete thm
prf 20210:20233 <> match_callstack_freelist
R20462:20468 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20472:20475 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20522:20527 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20511:20513 Coq.Init.Logic <> :type_scope:x_'='_x not
R20476:20483 compcert.common.Memory Mem free def
R20497:20509 compcert.backend.Cminor <> fn_stackspace proj
R20493:20494 compcert.cfrontend.Cminorgenproof <> tf var
R20488:20489 compcert.cfrontend.Cminorgenproof <> sp var
R20485:20486 compcert.cfrontend.Cminorgenproof <> tm var
R20514:20517 Coq.Init.Datatypes <> Some constr
R20519:20521 compcert.cfrontend.Cminorgenproof <> tm' var
R20594:20599 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R20528:20542 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R20576:20588 compcert.common.Memory Mem nextblock proj
R20590:20592 compcert.cfrontend.Cminorgenproof <> tm' var
R20557:20569 compcert.common.Memory Mem nextblock proj
R20571:20572 compcert.cfrontend.Cminorgenproof <> m' var
R20553:20554 compcert.cfrontend.Cminorgenproof <> cs var
R20549:20551 compcert.cfrontend.Cminorgenproof <> tm' var
R20546:20547 compcert.cfrontend.Cminorgenproof <> m' var
R20544:20544 compcert.cfrontend.Cminorgenproof <> f var
R20600:20609 compcert.common.Memory Mem inject def
R20616:20618 compcert.cfrontend.Cminorgenproof <> tm' var
R20613:20614 compcert.cfrontend.Cminorgenproof <> m' var
R20611:20611 compcert.cfrontend.Cminorgenproof <> f var
R20358:20372 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R20439:20451 compcert.common.Memory Mem nextblock proj
R20453:20454 compcert.cfrontend.Cminorgenproof <> tm var
R20421:20433 compcert.common.Memory Mem nextblock proj
R20435:20435 compcert.cfrontend.Cminorgenproof <> m var
R20412:20415 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R20382:20386 compcert.cfrontend.Cminorgenproof <> Frame constr
R20410:20411 compcert.cfrontend.Cminorgenproof <> hi var
R20407:20408 compcert.cfrontend.Cminorgenproof <> lo var
R20404:20405 compcert.cfrontend.Cminorgenproof <> sp var
R20401:20402 compcert.cfrontend.Cminorgenproof <> te var
R20398:20399 compcert.cfrontend.Cminorgenproof <> le var
R20396:20396 compcert.cfrontend.Cminorgenproof <> e var
R20393:20394 compcert.cfrontend.Cminorgenproof <> tf var
R20388:20391 compcert.cfrontend.Cminorgenproof <> cenv var
R20416:20417 compcert.cfrontend.Cminorgenproof <> cs var
R20378:20379 compcert.cfrontend.Cminorgenproof <> tm var
R20376:20376 compcert.cfrontend.Cminorgenproof <> m var
R20374:20374 compcert.cfrontend.Cminorgenproof <> f var
R20342:20344 Coq.Init.Logic <> :type_scope:x_'='_x not
R20309:20321 compcert.common.Memory Mem free_list def
R20326:20338 compcert.cfrontend.Csharpminor <> blocks_of_env def
R20340:20340 compcert.cfrontend.Cminorgenproof <> e var
R20323:20323 compcert.cfrontend.Cminorgenproof <> m var
R20345:20348 Coq.Init.Datatypes <> Some constr
R20350:20351 compcert.cfrontend.Cminorgenproof <> m' var
R20286:20295 compcert.common.Memory Mem inject def
R20301:20302 compcert.cfrontend.Cminorgenproof <> tm var
R20299:20299 compcert.cfrontend.Cminorgenproof <> m var
R20297:20297 compcert.cfrontend.Cminorgenproof <> f var
R20701:20701 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R20705:20707 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R20754:20754 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R20743:20745 Coq.Init.Logic <> :type_scope:x_'='_x not
R20708:20715 compcert.common.Memory Mem free def
R20726:20738 compcert.backend.Cminor <> fn_stackspace proj
R20746:20749 Coq.Init.Datatypes <> Some constr
R20701:20701 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R20705:20707 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R20754:20754 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R20743:20745 Coq.Init.Logic <> :type_scope:x_'='_x not
R20708:20715 compcert.common.Memory Mem free def
R20726:20738 compcert.backend.Cminor <> fn_stackspace proj
R20746:20749 Coq.Init.Datatypes <> Some constr
R20766:20784 compcert.common.Memory Mem range_perm_free thm
R20766:20784 compcert.common.Memory Mem range_perm_free thm
R20866:20879 compcert.common.Memory Mem range_perm def
R20894:20901 compcert.common.Memtype <> Freeable constr
R20890:20892 compcert.common.Memtype <> Cur constr
R20866:20879 compcert.common.Memory Mem range_perm def
R20894:20901 compcert.common.Memtype <> Freeable constr
R20890:20892 compcert.common.Memtype <> Cur constr
R20915:20932 compcert.cfrontend.Cminorgenproof <> free_list_freeable thm
R20915:20932 compcert.cfrontend.Cminorgenproof <> free_list_freeable thm
R20949:20964 compcert.cfrontend.Cminorgenproof <> in_blocks_of_env thm
R20949:20964 compcert.cfrontend.Cminorgenproof <> in_blocks_of_env thm
R20994:20994 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21006:21009 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20998:21000 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R20994:20994 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21006:21009 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20998:21000 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R21037:21051 compcert.common.Memory Mem perm_inject thm
R21037:21051 compcert.common.Memory Mem perm_inject thm
R21118:21135 compcert.cfrontend.Cminorgenproof <> nextblock_freelist thm
R21167:21184 compcert.common.Memory Mem nextblock_free thm
R21280:21305 compcert.cfrontend.Cminorgenproof <> match_callstack_incr_bound thm
R21280:21305 compcert.cfrontend.Cminorgenproof <> match_callstack_incr_bound thm
R21338:21362 compcert.cfrontend.Cminorgenproof <> match_callstack_invariant thm
R21338:21362 compcert.cfrontend.Cminorgenproof <> match_callstack_invariant thm
R21400:21412 compcert.cfrontend.Cminorgenproof <> perm_freelist thm
R21400:21412 compcert.cfrontend.Cminorgenproof <> perm_freelist thm
R21439:21453 compcert.common.Memory Mem perm_free_1 thm
R21439:21453 compcert.common.Memory Mem perm_free_1 thm
R21476:21480 compcert.common.Values <> block def
R21516:21530 compcert.common.Memory Mem free_inject thm
R21516:21530 compcert.common.Memory Mem free_inject thm
R21634:21649 compcert.cfrontend.Cminorgenproof <> in_blocks_of_env thm
R21634:21649 compcert.cfrontend.Cminorgenproof <> in_blocks_of_env thm
R21690:21701 compcert.common.Memory Mem perm_max thm
R21690:21701 compcert.common.Memory Mem perm_max thm
prf 21785:21813 <> match_callstack_external_call
R22246:22260 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R22281:22286 compcert.cfrontend.Cminorgenproof <> tbound var
R22275:22279 compcert.cfrontend.Cminorgenproof <> bound var
R22272:22273 compcert.cfrontend.Cminorgenproof <> cs var
R22268:22270 compcert.cfrontend.Cminorgenproof <> m2' var
R22265:22266 compcert.cfrontend.Cminorgenproof <> m2 var
R22262:22263 compcert.cfrontend.Cminorgenproof <> f2 var
R22210:22212 compcert.lib.Coqlib <> Ple def
R22222:22234 compcert.common.Memory Mem nextblock proj
R22236:22238 compcert.cfrontend.Cminorgenproof <> m1' var
R22214:22219 compcert.cfrontend.Cminorgenproof <> tbound var
R22178:22180 compcert.lib.Coqlib <> Ple def
R22189:22201 compcert.common.Memory Mem nextblock proj
R22203:22204 compcert.cfrontend.Cminorgenproof <> m1 var
R22182:22186 compcert.cfrontend.Cminorgenproof <> bound var
R22131:22145 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R22166:22171 compcert.cfrontend.Cminorgenproof <> tbound var
R22160:22164 compcert.cfrontend.Cminorgenproof <> bound var
R22157:22158 compcert.cfrontend.Cminorgenproof <> cs var
R22153:22155 compcert.cfrontend.Cminorgenproof <> m1' var
R22150:22151 compcert.cfrontend.Cminorgenproof <> m1 var
R22147:22148 compcert.cfrontend.Cminorgenproof <> f1 var
R22075:22082 compcert.common.Memory Mem perm def
R22097:22097 compcert.cfrontend.Cminorgenproof <> p var
R22093:22095 compcert.common.Memtype <> Max constr
R22089:22091 compcert.cfrontend.Cminorgenproof <> ofs var
R22087:22087 compcert.cfrontend.Cminorgenproof <> b var
R22084:22085 compcert.cfrontend.Cminorgenproof <> m1 var
R22048:22055 compcert.common.Memory Mem perm def
R22070:22070 compcert.cfrontend.Cminorgenproof <> p var
R22066:22068 compcert.common.Memtype <> Max constr
R22062:22064 compcert.cfrontend.Cminorgenproof <> ofs var
R22060:22060 compcert.cfrontend.Cminorgenproof <> b var
R22057:22058 compcert.cfrontend.Cminorgenproof <> m2 var
R22024:22038 compcert.common.Memory Mem valid_block def
R22043:22043 compcert.cfrontend.Cminorgenproof <> b var
R22040:22041 compcert.cfrontend.Cminorgenproof <> m1 var
R21972:21987 compcert.common.Events <> inject_separated def
R21998:22000 compcert.cfrontend.Cminorgenproof <> m1' var
R21995:21996 compcert.cfrontend.Cminorgenproof <> m1 var
R21992:21993 compcert.cfrontend.Cminorgenproof <> f2 var
R21989:21990 compcert.cfrontend.Cminorgenproof <> f1 var
R21949:21959 compcert.common.Values <> inject_incr def
R21964:21965 compcert.cfrontend.Cminorgenproof <> f2 var
R21961:21962 compcert.cfrontend.Cminorgenproof <> f1 var
R21894:21909 compcert.common.Memory Mem unchanged_on rec
R21940:21942 compcert.cfrontend.Cminorgenproof <> m2' var
R21936:21938 compcert.cfrontend.Cminorgenproof <> m1' var
R21912:21927 compcert.common.Events <> loc_out_of_reach def
R21932:21933 compcert.cfrontend.Cminorgenproof <> m1 var
R21929:21930 compcert.cfrontend.Cminorgenproof <> f1 var
R21848:21863 compcert.common.Memory Mem unchanged_on rec
R21886:21887 compcert.cfrontend.Cminorgenproof <> m2 var
R21883:21884 compcert.cfrontend.Cminorgenproof <> m1 var
R21866:21877 compcert.common.Events <> loc_unmapped def
R21879:21880 compcert.cfrontend.Cminorgenproof <> f1 var
R22418:22424 compcert.cfrontend.Cminorgenproof <> mcs_nil constr
R22418:22424 compcert.cfrontend.Cminorgenproof <> mcs_nil constr
R22700:22720 compcert.cfrontend.Cminorgenproof <> match_temps_invariant thm
R22700:22720 compcert.cfrontend.Cminorgenproof <> match_temps_invariant thm
R22739:22757 compcert.cfrontend.Cminorgenproof <> match_env_invariant thm
R22739:22757 compcert.cfrontend.Cminorgenproof <> match_env_invariant thm
R22955:22957 compcert.lib.Coqlib <> Ple def
R22977:22987 compcert.cfrontend.Cminorgenproof <> me_low_high proj
R22955:22957 compcert.lib.Coqlib <> Ple def
R22977:22987 compcert.cfrontend.Cminorgenproof <> me_low_high proj
R23184:23205 compcert.cfrontend.Cminorgenproof <> match_bounds_invariant thm
R23184:23205 compcert.cfrontend.Cminorgenproof <> match_bounds_invariant thm
R23263:23272 compcert.cfrontend.Cminorgenproof <> me_bounded proj
R23343:23367 compcert.cfrontend.Cminorgenproof <> is_reachable_from_env_dec thm
R23343:23367 compcert.cfrontend.Cminorgenproof <> is_reachable_from_env_dec thm
R23406:23423 compcert.cfrontend.Cminorgenproof <> is_reachable_intro constr
R23406:23423 compcert.cfrontend.Cminorgenproof <> is_reachable_intro constr
R23523:23543 compcert.common.Memory Mem perm_unchanged_on thm
R23523:23543 compcert.common.Memory Mem perm_unchanged_on thm
R23600:23605 compcert.cfrontend.Cminorgenproof <> me_inv proj
R23678:23695 compcert.cfrontend.Cminorgenproof <> is_reachable_intro constr
R23678:23695 compcert.cfrontend.Cminorgenproof <> is_reachable_intro constr
prf 23882:23908 <> match_callstack_alloc_right
R24154:24168 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R24286:24298 compcert.common.Memory Mem nextblock proj
R24300:24302 compcert.cfrontend.Cminorgenproof <> tm' var
R24268:24280 compcert.common.Memory Mem nextblock proj
R24282:24282 compcert.cfrontend.Cminorgenproof <> m var
R24253:24256 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R24185:24189 compcert.cfrontend.Cminorgenproof <> Frame constr
R24237:24249 compcert.common.Memory Mem nextblock proj
R24251:24251 compcert.cfrontend.Cminorgenproof <> m var
R24219:24231 compcert.common.Memory Mem nextblock proj
R24233:24233 compcert.cfrontend.Cminorgenproof <> m var
R24215:24216 compcert.cfrontend.Cminorgenproof <> sp var
R24212:24213 compcert.cfrontend.Cminorgenproof <> te var
R24209:24210 compcert.cfrontend.Cminorgenproof <> le var
R24199:24207 compcert.cfrontend.Csharpminor <> empty_env def
R24196:24197 compcert.cfrontend.Cminorgenproof <> tf var
R24191:24194 compcert.cfrontend.Cminorgenproof <> cenv var
R24257:24258 compcert.cfrontend.Cminorgenproof <> cs var
R24174:24176 compcert.cfrontend.Cminorgenproof <> tm' var
R24172:24172 compcert.cfrontend.Cminorgenproof <> m var
R24170:24170 compcert.cfrontend.Cminorgenproof <> f var
R24140:24142 Coq.Init.Logic <> :type_scope:x_'='_x not
R24137:24137 compcert.lib.Maps <> ::x_'!'_x not
R24138:24139 compcert.cfrontend.Cminorgenproof <> id var
R24133:24136 compcert.cfrontend.Cminorgenproof <> cenv var
R24143:24146 Coq.Init.Datatypes <> None constr
R24096:24106 compcert.cfrontend.Cminorgenproof <> match_temps def
R24113:24114 compcert.cfrontend.Cminorgenproof <> te var
R24110:24111 compcert.cfrontend.Cminorgenproof <> le var
R24108:24108 compcert.cfrontend.Cminorgenproof <> f var
R24073:24082 compcert.common.Memory Mem inject def
R24088:24089 compcert.cfrontend.Cminorgenproof <> tm var
R24086:24086 compcert.cfrontend.Cminorgenproof <> m var
R24084:24084 compcert.cfrontend.Cminorgenproof <> f var
R24055:24057 Coq.Init.Logic <> :type_scope:x_'='_x not
R24022:24030 compcert.common.Memory Mem alloc def
R24041:24053 compcert.backend.Cminor <> fn_stackspace proj
R24037:24038 compcert.cfrontend.Cminorgenproof <> tf var
R24032:24033 compcert.cfrontend.Cminorgenproof <> tm var
R24058:24058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24062:24063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24066:24066 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24059:24061 compcert.cfrontend.Cminorgenproof <> tm' var
R24064:24065 compcert.cfrontend.Cminorgenproof <> sp var
R23954:23968 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R23999:24011 compcert.common.Memory Mem nextblock proj
R24013:24014 compcert.cfrontend.Cminorgenproof <> tm var
R23981:23993 compcert.common.Memory Mem nextblock proj
R23995:23995 compcert.cfrontend.Cminorgenproof <> m var
R23977:23978 compcert.cfrontend.Cminorgenproof <> cs var
R23974:23975 compcert.cfrontend.Cminorgenproof <> tm var
R23972:23972 compcert.cfrontend.Cminorgenproof <> m var
R23970:23970 compcert.cfrontend.Cminorgenproof <> f var
R24333:24351 compcert.common.Memory Mem nextblock_alloc thm
R24389:24404 compcert.common.Memory Mem alloc_result thm
R24460:24464 compcert.common.Values <> block def
R24535:24546 compcert.lib.Maps PTree gempty thm
R24535:24546 compcert.lib.Maps PTree gempty thm
R24586:24597 compcert.lib.Maps PTree gempty thm
R24586:24597 compcert.lib.Maps PTree gempty thm
R24630:24650 compcert.common.Memory Mem fresh_block_alloc thm
R24630:24650 compcert.common.Memory Mem fresh_block_alloc thm
R24667:24690 compcert.common.Memory Mem valid_block_inject_2 thm
R24667:24690 compcert.common.Memory Mem valid_block_inject_2 thm
R24725:24739 compcert.common.Memory Mem valid_block def
R24725:24739 compcert.common.Memory Mem valid_block def
R24756:24779 compcert.common.Memory Mem valid_block_inject_2 thm
R24756:24779 compcert.common.Memory Mem valid_block_inject_2 thm
R24813:24824 compcert.lib.Maps PTree gempty thm
R24813:24824 compcert.lib.Maps PTree gempty thm
R24875:24890 compcert.common.Memory Mem perm_alloc_2 thm
R24875:24890 compcert.common.Memory Mem perm_alloc_2 thm
R24910:24934 compcert.cfrontend.Cminorgenproof <> match_callstack_invariant thm
R24910:24934 compcert.cfrontend.Cminorgenproof <> match_callstack_invariant thm
R25000:25015 compcert.common.Memory Mem perm_alloc_1 thm
R25000:25015 compcert.common.Memory Mem perm_alloc_1 thm
prf 25037:25062 <> match_callstack_alloc_left
R25444:25458 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R25575:25587 compcert.common.Memory Mem nextblock proj
R25589:25590 compcert.cfrontend.Cminorgenproof <> tm var
R25556:25568 compcert.common.Memory Mem nextblock proj
R25570:25571 compcert.cfrontend.Cminorgenproof <> m2 var
R25543:25546 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25474:25478 compcert.cfrontend.Cminorgenproof <> Frame constr
R25526:25538 compcert.common.Memory Mem nextblock proj
R25540:25541 compcert.cfrontend.Cminorgenproof <> m2 var
R25522:25523 compcert.cfrontend.Cminorgenproof <> lo var
R25519:25520 compcert.cfrontend.Cminorgenproof <> sp var
R25516:25517 compcert.cfrontend.Cminorgenproof <> te var
R25513:25514 compcert.cfrontend.Cminorgenproof <> le var
R25489:25497 compcert.lib.Maps PTree set def
R25510:25510 compcert.cfrontend.Cminorgenproof <> e var
R25502:25502 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25504:25505 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25508:25508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25503:25503 compcert.cfrontend.Cminorgenproof <> b var
R25506:25507 compcert.cfrontend.Cminorgenproof <> sz var
R25499:25500 compcert.cfrontend.Cminorgenproof <> id var
R25485:25486 compcert.cfrontend.Cminorgenproof <> tf var
R25480:25483 compcert.cfrontend.Cminorgenproof <> cenv var
R25547:25548 compcert.cfrontend.Cminorgenproof <> cs var
R25466:25467 compcert.cfrontend.Cminorgenproof <> tm var
R25463:25464 compcert.cfrontend.Cminorgenproof <> m2 var
R25460:25461 compcert.cfrontend.Cminorgenproof <> f2 var
R25431:25433 Coq.Init.Logic <> :type_scope:x_'='_x not
R25428:25428 compcert.lib.Maps <> ::x_'!'_x not
R25429:25430 compcert.cfrontend.Cminorgenproof <> id var
R25427:25427 compcert.cfrontend.Cminorgenproof <> e var
R25434:25437 Coq.Init.Datatypes <> None constr
R25412:25414 Coq.Init.Logic <> :type_scope:x_'='_x not
R25407:25408 compcert.cfrontend.Cminorgenproof <> f2 var
R25410:25411 compcert.cfrontend.Cminorgenproof <> b' var
R25415:25416 compcert.cfrontend.Cminorgenproof <> f1 var
R25418:25419 compcert.cfrontend.Cminorgenproof <> b' var
R25398:25401 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R25396:25397 compcert.cfrontend.Cminorgenproof <> b' var
R25402:25402 compcert.cfrontend.Cminorgenproof <> b var
R25362:25364 Coq.Init.Logic <> :type_scope:x_'='_x not
R25358:25359 compcert.cfrontend.Cminorgenproof <> f2 var
R25361:25361 compcert.cfrontend.Cminorgenproof <> b var
R25365:25368 Coq.Init.Datatypes <> Some constr
R25369:25369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25372:25373 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25377:25377 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25370:25371 compcert.cfrontend.Cminorgenproof <> sp var
R25374:25376 compcert.cfrontend.Cminorgenproof <> ofs var
R25335:25345 compcert.common.Values <> inject_incr def
R25350:25351 compcert.cfrontend.Cminorgenproof <> f2 var
R25347:25348 compcert.cfrontend.Cminorgenproof <> f1 var
R25318:25320 Coq.Init.Logic <> :type_scope:x_'='_x not
R25315:25315 compcert.lib.Maps <> ::x_'!'_x not
R25316:25317 compcert.cfrontend.Cminorgenproof <> id var
R25311:25314 compcert.cfrontend.Cminorgenproof <> cenv var
R25321:25324 Coq.Init.Datatypes <> Some constr
R25326:25328 compcert.cfrontend.Cminorgenproof <> ofs var
R25295:25297 Coq.Init.Logic <> :type_scope:x_'='_x not
R25278:25286 compcert.common.Memory Mem alloc def
R25293:25294 compcert.cfrontend.Cminorgenproof <> sz var
R25288:25289 compcert.cfrontend.Cminorgenproof <> m1 var
R25298:25298 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25301:25302 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25304:25304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25299:25300 compcert.cfrontend.Cminorgenproof <> m2 var
R25303:25303 compcert.cfrontend.Cminorgenproof <> b var
R25129:25143 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R25255:25267 compcert.common.Memory Mem nextblock proj
R25269:25270 compcert.cfrontend.Cminorgenproof <> tm var
R25236:25248 compcert.common.Memory Mem nextblock proj
R25250:25251 compcert.cfrontend.Cminorgenproof <> m1 var
R25223:25226 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25159:25163 compcert.cfrontend.Cminorgenproof <> Frame constr
R25206:25218 compcert.common.Memory Mem nextblock proj
R25220:25221 compcert.cfrontend.Cminorgenproof <> m1 var
R25202:25203 compcert.cfrontend.Cminorgenproof <> lo var
R25199:25200 compcert.cfrontend.Cminorgenproof <> sp var
R25196:25197 compcert.cfrontend.Cminorgenproof <> te var
R25193:25194 compcert.cfrontend.Cminorgenproof <> le var
R25191:25191 compcert.cfrontend.Cminorgenproof <> e var
R25188:25189 compcert.cfrontend.Cminorgenproof <> tf var
R25166:25177 compcert.lib.Maps PTree remove def
R25182:25185 compcert.cfrontend.Cminorgenproof <> cenv var
R25179:25180 compcert.cfrontend.Cminorgenproof <> id var
R25227:25228 compcert.cfrontend.Cminorgenproof <> cs var
R25151:25152 compcert.cfrontend.Cminorgenproof <> tm var
R25148:25149 compcert.cfrontend.Cminorgenproof <> m1 var
R25145:25146 compcert.cfrontend.Cminorgenproof <> f1 var
R25629:25647 compcert.common.Memory Mem nextblock_alloc thm
R25685:25700 compcert.common.Memory Mem alloc_result thm
R25736:25738 compcert.lib.Coqlib <> Ple def
R25744:25756 compcert.common.Memory Mem nextblock proj
R25774:25784 compcert.cfrontend.Cminorgenproof <> me_low_high proj
R25736:25738 compcert.lib.Coqlib <> Ple def
R25744:25756 compcert.common.Memory Mem nextblock proj
R25774:25784 compcert.cfrontend.Cminorgenproof <> me_low_high proj
R25838:25858 compcert.cfrontend.Cminorgenproof <> match_temps_invariant thm
R25838:25858 compcert.cfrontend.Cminorgenproof <> match_temps_invariant thm
R25877:25891 compcert.cfrontend.Cminorgenproof <> match_env_alloc thm
R25877:25891 compcert.cfrontend.Cminorgenproof <> match_env_alloc thm
R25924:25935 compcert.lib.Maps PTree gsspec thm
R25924:25935 compcert.lib.Maps PTree gsspec thm
R25953:25955 compcert.lib.Coqlib <> peq def
R25953:25955 compcert.lib.Coqlib <> peq def
R26006:26021 compcert.common.Memory Mem perm_alloc_3 thm
R26006:26021 compcert.common.Memory Mem perm_alloc_3 thm
R26062:26077 compcert.common.Memory Mem perm_alloc_4 thm
R26062:26077 compcert.common.Memory Mem perm_alloc_4 thm
R26098:26107 compcert.cfrontend.Cminorgenproof <> me_bounded proj
R26124:26128 compcert.common.Values <> block def
R26223:26240 compcert.cfrontend.Cminorgenproof <> is_reachable_intro constr
R26223:26240 compcert.cfrontend.Cminorgenproof <> is_reachable_intro constr
R26281:26289 compcert.lib.Maps PTree gso thm
R26281:26289 compcert.lib.Maps PTree gso thm
R26319:26343 compcert.cfrontend.Cminorgenproof <> match_callstack_invariant thm
R26319:26343 compcert.cfrontend.Cminorgenproof <> match_callstack_invariant thm
R26387:26402 compcert.common.Memory Mem perm_alloc_4 thm
R26387:26402 compcert.common.Memory Mem perm_alloc_4 thm
R26421:26425 compcert.common.Values <> block def
R26468:26472 compcert.common.Values <> block def
R26508:26515 compcert.common.Values <> eq_block def
R26508:26515 compcert.common.Values <> eq_block def
def 26868:26878 <> cenv_remove
R26887:26895 compcert.cfrontend.Cminorgen <> compilenv def
R26905:26908 Coq.Init.Datatypes <> list ind
R26916:26918 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R26911:26915 compcert.common.AST <> ident def
R26919:26919 Coq.Numbers.BinNums <> Z ind
R26925:26933 compcert.cfrontend.Cminorgen <> compilenv def
R26940:26949 Coq.Lists.List <> fold_right def
R27002:27005 compcert.cfrontend.Cminorgenproof <> vars var
R26997:27000 compcert.cfrontend.Cminorgenproof <> cenv var
R26968:26979 compcert.lib.Maps PTree remove def
R26993:26994 compcert.cfrontend.Cminorgenproof <> ce var
R26982:26984 Coq.Init.Datatypes <> fst def
R26986:26990 compcert.cfrontend.Cminorgenproof <> id_lv var
prf 27016:27030 <> cenv_remove_gso
R27121:27123 Coq.Init.Logic <> :type_scope:x_'='_x not
R27085:27093 compcert.lib.Maps PTree get def
R27099:27109 compcert.cfrontend.Cminorgenproof <> cenv_remove def
R27116:27119 compcert.cfrontend.Cminorgenproof <> vars var
R27111:27114 compcert.cfrontend.Cminorgenproof <> cenv var
R27095:27096 compcert.cfrontend.Cminorgenproof <> id var
R27124:27132 compcert.lib.Maps PTree get def
R27137:27140 compcert.cfrontend.Cminorgenproof <> cenv var
R27134:27135 compcert.cfrontend.Cminorgenproof <> id var
R27058:27058 Coq.Init.Logic <> :type_scope:'~'_x not
R27059:27060 Coq.Lists.List <> In def
R27066:27068 Coq.Lists.List <> map def
R27074:27077 compcert.cfrontend.Cminorgenproof <> vars var
R27070:27072 Coq.Init.Datatypes <> fst def
R27062:27063 compcert.cfrontend.Cminorgenproof <> id var
R27201:27209 compcert.lib.Maps PTree gro thm
R27201:27209 compcert.lib.Maps PTree gro thm
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
prf 27263:27277 <> cenv_remove_gss
R27367:27369 Coq.Init.Logic <> :type_scope:x_'='_x not
R27331:27339 compcert.lib.Maps PTree get def
R27345:27355 compcert.cfrontend.Cminorgenproof <> cenv_remove def
R27362:27365 compcert.cfrontend.Cminorgenproof <> vars var
R27357:27360 compcert.cfrontend.Cminorgenproof <> cenv var
R27341:27342 compcert.cfrontend.Cminorgenproof <> id var
R27370:27373 Coq.Init.Datatypes <> None constr
R27305:27306 Coq.Lists.List <> In def
R27312:27314 Coq.Lists.List <> map def
R27320:27323 compcert.cfrontend.Cminorgenproof <> vars var
R27316:27318 Coq.Init.Datatypes <> fst def
R27308:27309 compcert.cfrontend.Cminorgenproof <> id var
R27443:27454 compcert.lib.Maps PTree grspec thm
R27443:27454 compcert.lib.Maps PTree grspec thm
R27467:27478 compcert.lib.Maps PTree elt_eq def
R27484:27486 Coq.Init.Datatypes <> fst def
R27467:27478 compcert.lib.Maps PTree elt_eq def
R27484:27486 Coq.Init.Datatypes <> fst def
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
def 27548:27558 <> cenv_compat
R27567:27575 compcert.cfrontend.Cminorgen <> compilenv def
R27585:27588 Coq.Init.Datatypes <> list ind
R27596:27598 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R27591:27595 compcert.common.AST <> ident def
R27599:27599 Coq.Numbers.BinNums <> Z ind
R27609:27609 Coq.Numbers.BinNums <> Z ind
R27662:27668 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27672:27680 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27709:27716 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27698:27700 Coq.Init.Logic <> :type_scope:x_'='_x not
R27681:27689 compcert.lib.Maps PTree get def
R27694:27697 compcert.cfrontend.Cminorgenproof <> cenv var
R27691:27692 compcert.cfrontend.Cminorgenproof <> id var
R27701:27704 Coq.Init.Datatypes <> Some constr
R27706:27708 compcert.cfrontend.Cminorgenproof <> ofs var
R27746:27752 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27717:27738 compcert.common.Memory Mem inj_offset_aligned def
R27744:27745 compcert.cfrontend.Cminorgenproof <> sz var
R27740:27742 compcert.cfrontend.Cminorgenproof <> ofs var
R27761:27767 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27754:27757 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27758:27760 compcert.cfrontend.Cminorgenproof <> ofs var
R27783:27786 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27771:27773 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27768:27770 compcert.cfrontend.Cminorgenproof <> ofs var
R27774:27777 Coq.ZArith.BinInt <> Zmax syndef
R27781:27782 compcert.cfrontend.Cminorgenproof <> sz var
R27787:27789 compcert.cfrontend.Cminorgenproof <> tsz var
R27640:27641 Coq.Lists.List <> In def
R27652:27655 compcert.cfrontend.Cminorgenproof <> vars var
R27643:27643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27646:27647 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27650:27650 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27644:27645 compcert.cfrontend.Cminorgenproof <> id var
R27648:27649 compcert.cfrontend.Cminorgenproof <> sz var
def 27804:27817 <> cenv_separated
R27826:27834 compcert.cfrontend.Cminorgen <> compilenv def
R27844:27847 Coq.Init.Datatypes <> list ind
R27855:27857 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R27850:27854 compcert.common.AST <> ident def
R27858:27858 Coq.Numbers.BinNums <> Z ind
R28060:28063 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28052:28055 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28046:28048 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28042:28045 compcert.cfrontend.Cminorgenproof <> ofs1 var
R28049:28051 compcert.cfrontend.Cminorgenproof <> sz1 var
R28056:28059 compcert.cfrontend.Cminorgenproof <> ofs2 var
R28074:28077 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28068:28070 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28064:28067 compcert.cfrontend.Cminorgenproof <> ofs2 var
R28071:28073 compcert.cfrontend.Cminorgenproof <> sz2 var
R28078:28081 compcert.cfrontend.Cminorgenproof <> ofs1 var
R28029:28032 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R28026:28028 compcert.cfrontend.Cminorgenproof <> id1 var
R28033:28035 compcert.cfrontend.Cminorgenproof <> id2 var
R28008:28010 Coq.Init.Logic <> :type_scope:x_'='_x not
R27990:27998 compcert.lib.Maps PTree get def
R28004:28007 compcert.cfrontend.Cminorgenproof <> cenv var
R28000:28002 compcert.cfrontend.Cminorgenproof <> id2 var
R28011:28014 Coq.Init.Datatypes <> Some constr
R28016:28019 compcert.cfrontend.Cminorgenproof <> ofs2 var
R27974:27976 Coq.Init.Logic <> :type_scope:x_'='_x not
R27956:27964 compcert.lib.Maps PTree get def
R27970:27973 compcert.cfrontend.Cminorgenproof <> cenv var
R27966:27968 compcert.cfrontend.Cminorgenproof <> id1 var
R27977:27980 Coq.Init.Datatypes <> Some constr
R27982:27985 compcert.cfrontend.Cminorgenproof <> ofs1 var
R27932:27933 Coq.Lists.List <> In def
R27946:27949 compcert.cfrontend.Cminorgenproof <> vars var
R27935:27935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27939:27940 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27944:27944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27936:27938 compcert.cfrontend.Cminorgenproof <> id2 var
R27941:27943 compcert.cfrontend.Cminorgenproof <> sz2 var
R27910:27911 Coq.Lists.List <> In def
R27924:27927 compcert.cfrontend.Cminorgenproof <> vars var
R27913:27913 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27917:27918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27922:27922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27914:27916 compcert.cfrontend.Cminorgenproof <> id1 var
R27919:27921 compcert.cfrontend.Cminorgenproof <> sz1 var
def 28096:28113 <> cenv_mem_separated
R28122:28130 compcert.cfrontend.Cminorgen <> compilenv def
R28140:28143 Coq.Init.Datatypes <> list ind
R28151:28153 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R28146:28150 compcert.common.AST <> ident def
R28154:28154 Coq.Numbers.BinNums <> Z ind
R28162:28167 compcert.common.Values <> meminj def
R28175:28179 compcert.common.Values <> block def
R28186:28188 compcert.common.Memory <> mem syndef
R28384:28388 Coq.Init.Logic <> False ind
R28353:28356 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R28369:28371 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R28350:28352 compcert.cfrontend.Cminorgenproof <> ofs var
R28361:28363 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28357:28360 compcert.cfrontend.Cminorgenproof <> ofs' var
R28364:28368 compcert.cfrontend.Cminorgenproof <> delta var
R28361:28363 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28357:28360 compcert.cfrontend.Cminorgenproof <> ofs' var
R28364:28368 compcert.cfrontend.Cminorgenproof <> delta var
R28374:28376 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28372:28373 compcert.cfrontend.Cminorgenproof <> sz var
R28377:28379 compcert.cfrontend.Cminorgenproof <> ofs var
R28323:28330 compcert.common.Memory Mem perm def
R28343:28343 compcert.cfrontend.Cminorgenproof <> p var
R28341:28341 compcert.cfrontend.Cminorgenproof <> k var
R28336:28339 compcert.cfrontend.Cminorgenproof <> ofs' var
R28334:28334 compcert.cfrontend.Cminorgenproof <> b var
R28332:28332 compcert.cfrontend.Cminorgenproof <> m var
R28297:28299 Coq.Init.Logic <> :type_scope:x_'='_x not
R28294:28294 compcert.cfrontend.Cminorgenproof <> f var
R28296:28296 compcert.cfrontend.Cminorgenproof <> b var
R28300:28303 Coq.Init.Datatypes <> Some constr
R28305:28305 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28308:28309 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28315:28315 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28306:28307 compcert.cfrontend.Cminorgenproof <> sp var
R28310:28314 compcert.cfrontend.Cminorgenproof <> delta var
R28277:28279 Coq.Init.Logic <> :type_scope:x_'='_x not
R28260:28268 compcert.lib.Maps PTree get def
R28273:28276 compcert.cfrontend.Cminorgenproof <> cenv var
R28270:28271 compcert.cfrontend.Cminorgenproof <> id var
R28280:28283 Coq.Init.Datatypes <> Some constr
R28285:28287 compcert.cfrontend.Cminorgenproof <> ofs var
R28240:28241 Coq.Lists.List <> In def
R28252:28255 compcert.cfrontend.Cminorgenproof <> vars var
R28243:28243 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28246:28247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28250:28250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28244:28245 compcert.cfrontend.Cminorgenproof <> id var
R28248:28249 compcert.cfrontend.Cminorgenproof <> sz var
prf 28398:28432 <> match_callstack_alloc_variables_rec
R29156:29162 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29165:29170 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29301:29306 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29171:29185 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R29284:29296 compcert.common.Memory Mem nextblock proj
R29298:29299 compcert.cfrontend.Cminorgenproof <> tm var
R29265:29277 compcert.common.Memory Mem nextblock proj
R29279:29280 compcert.cfrontend.Cminorgenproof <> m2 var
R29250:29253 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29203:29207 compcert.cfrontend.Cminorgenproof <> Frame constr
R29233:29245 compcert.common.Memory Mem nextblock proj
R29247:29248 compcert.cfrontend.Cminorgenproof <> m2 var
R29229:29230 compcert.cfrontend.Cminorgenproof <> lo var
R29226:29227 compcert.cfrontend.Cminorgenproof <> sp var
R29223:29224 compcert.cfrontend.Cminorgenproof <> te var
R29220:29221 compcert.cfrontend.Cminorgenproof <> le var
R29217:29218 compcert.cfrontend.Cminorgenproof <> e2 var
R29214:29215 compcert.cfrontend.Cminorgenproof <> tf var
R29209:29212 compcert.cfrontend.Cminorgenproof <> cenv var
R29254:29255 compcert.cfrontend.Cminorgenproof <> cs var
R29193:29194 compcert.cfrontend.Cminorgenproof <> tm var
R29190:29191 compcert.cfrontend.Cminorgenproof <> m2 var
R29187:29188 compcert.cfrontend.Cminorgenproof <> f2 var
R29307:29316 compcert.common.Memory Mem inject def
R29324:29325 compcert.cfrontend.Cminorgenproof <> tm var
R29321:29322 compcert.cfrontend.Cminorgenproof <> m2 var
R29318:29319 compcert.cfrontend.Cminorgenproof <> f2 var
R29131:29140 compcert.common.Memory Mem inject def
R29148:29149 compcert.cfrontend.Cminorgenproof <> tm var
R29145:29146 compcert.cfrontend.Cminorgenproof <> m1 var
R29142:29143 compcert.cfrontend.Cminorgenproof <> f1 var
R28980:28994 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R29108:29120 compcert.common.Memory Mem nextblock proj
R29122:29123 compcert.cfrontend.Cminorgenproof <> tm var
R29089:29101 compcert.common.Memory Mem nextblock proj
R29103:29104 compcert.cfrontend.Cminorgenproof <> m1 var
R29076:29079 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R29010:29014 compcert.cfrontend.Cminorgenproof <> Frame constr
R29059:29071 compcert.common.Memory Mem nextblock proj
R29073:29074 compcert.cfrontend.Cminorgenproof <> m1 var
R29055:29056 compcert.cfrontend.Cminorgenproof <> lo var
R29052:29053 compcert.cfrontend.Cminorgenproof <> sp var
R29049:29050 compcert.cfrontend.Cminorgenproof <> te var
R29046:29047 compcert.cfrontend.Cminorgenproof <> le var
R29043:29044 compcert.cfrontend.Cminorgenproof <> e1 var
R29040:29041 compcert.cfrontend.Cminorgenproof <> tf var
R29017:29027 compcert.cfrontend.Cminorgenproof <> cenv_remove def
R29034:29037 compcert.cfrontend.Cminorgenproof <> vars var
R29029:29032 compcert.cfrontend.Cminorgenproof <> cenv var
R29080:29081 compcert.cfrontend.Cminorgenproof <> cs var
R29002:29003 compcert.cfrontend.Cminorgenproof <> tm var
R28999:29000 compcert.cfrontend.Cminorgenproof <> m1 var
R28996:28997 compcert.cfrontend.Cminorgenproof <> f1 var
R28966:28968 Coq.Init.Logic <> :type_scope:x_'='_x not
R28963:28963 compcert.lib.Maps <> ::x_'!'_x not
R28964:28965 compcert.cfrontend.Cminorgenproof <> id var
R28961:28962 compcert.cfrontend.Cminorgenproof <> e1 var
R28969:28972 Coq.Init.Datatypes <> None constr
R28941:28942 Coq.Lists.List <> In def
R28953:28956 compcert.cfrontend.Cminorgenproof <> vars var
R28944:28944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28947:28948 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28951:28951 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28945:28946 compcert.cfrontend.Cminorgenproof <> id var
R28949:28950 compcert.cfrontend.Cminorgenproof <> sz var
R28883:28900 compcert.cfrontend.Cminorgenproof <> cenv_mem_separated def
R28918:28919 compcert.cfrontend.Cminorgenproof <> m1 var
R28915:28916 compcert.cfrontend.Cminorgenproof <> sp var
R28912:28913 compcert.cfrontend.Cminorgenproof <> f1 var
R28907:28910 compcert.cfrontend.Cminorgenproof <> vars var
R28902:28905 compcert.cfrontend.Cminorgenproof <> cenv var
R28853:28866 compcert.cfrontend.Cminorgenproof <> cenv_separated def
R28873:28876 compcert.cfrontend.Cminorgenproof <> vars var
R28868:28871 compcert.cfrontend.Cminorgenproof <> cenv var
R28807:28817 compcert.cfrontend.Cminorgenproof <> cenv_compat def
R28830:28842 compcert.backend.Cminor <> fn_stackspace proj
R28844:28845 compcert.cfrontend.Cminorgenproof <> tf var
R28824:28827 compcert.cfrontend.Cminorgenproof <> vars var
R28819:28822 compcert.cfrontend.Cminorgenproof <> cenv var
R28774:28785 compcert.lib.Coqlib <> list_norepet ind
R28788:28790 Coq.Lists.List <> map def
R28796:28799 compcert.cfrontend.Cminorgenproof <> vars var
R28792:28794 Coq.Init.Datatypes <> fst def
R28723:28737 compcert.cfrontend.Csharpminor <> alloc_variables ind
R28753:28754 compcert.cfrontend.Cminorgenproof <> m2 var
R28750:28751 compcert.cfrontend.Cminorgenproof <> e2 var
R28745:28748 compcert.cfrontend.Cminorgenproof <> vars var
R28742:28743 compcert.cfrontend.Cminorgenproof <> m1 var
R28739:28740 compcert.cfrontend.Cminorgenproof <> e1 var
R28667:28674 compcert.common.Memory Mem perm def
R28688:28688 compcert.cfrontend.Cminorgenproof <> p var
R28686:28686 compcert.cfrontend.Cminorgenproof <> k var
R28682:28684 compcert.cfrontend.Cminorgenproof <> ofs var
R28679:28680 compcert.cfrontend.Cminorgenproof <> sp var
R28676:28677 compcert.cfrontend.Cminorgenproof <> tm var
R28637:28640 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R28644:28646 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R28641:28643 compcert.cfrontend.Cminorgenproof <> ofs var
R28641:28643 compcert.cfrontend.Cminorgenproof <> ofs var
R28647:28659 compcert.backend.Cminor <> fn_stackspace proj
R28661:28662 compcert.cfrontend.Cminorgenproof <> tf var
R28586:28589 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R28593:28595 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R28590:28592 compcert.cfrontend.Cminorgenproof <> ofs var
R28590:28592 compcert.cfrontend.Cminorgenproof <> ofs var
R28596:28608 compcert.backend.Cminor <> fn_stackspace proj
R28610:28611 compcert.cfrontend.Cminorgenproof <> tf var
R28559:28566 compcert.common.Memory Mem perm def
R28580:28580 compcert.cfrontend.Cminorgenproof <> p var
R28578:28578 compcert.cfrontend.Cminorgenproof <> k var
R28574:28576 compcert.cfrontend.Cminorgenproof <> ofs var
R28571:28572 compcert.cfrontend.Cminorgenproof <> sp var
R28568:28569 compcert.cfrontend.Cminorgenproof <> tm var
R28516:28519 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28500:28512 compcert.backend.Cminor <> fn_stackspace proj
R28514:28515 compcert.cfrontend.Cminorgenproof <> tf var
R28520:28535 compcert.lib.Integers Int max_unsigned def
R28473:28487 compcert.common.Memory Mem valid_block def
R28492:28493 compcert.cfrontend.Cminorgenproof <> sp var
R28489:28490 compcert.cfrontend.Cminorgenproof <> tm var
R29762:29789 compcert.common.Memory Mem alloc_left_mapped_inject thm
R29984:29986 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R29984:29986 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30287:30304 compcert.common.Memory Mem perm_alloc_inv thm
R30324:30331 compcert.common.Values <> eq_block def
R30324:30331 compcert.common.Values <> eq_block def
R30414:30418 Coq.Lists.List <> in_eq thm
R30414:30418 Coq.Lists.List <> in_eq thm
R30428:30434 Coq.Lists.List <> in_cons thm
R30428:30434 Coq.Lists.List <> in_cons thm
R30512:30514 Coq.Init.Datatypes <> fst def
R30516:30516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30519:30520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30524:30524 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30512:30514 Coq.Init.Datatypes <> fst def
R30516:30516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30519:30520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30524:30524 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30534:30539 Coq.Lists.List <> in_map thm
R30534:30539 Coq.Lists.List <> in_map thm
R30583:30589 Coq.Lists.List <> in_cons thm
R30583:30589 Coq.Lists.List <> in_cons thm
R30669:30677 compcert.lib.Maps PTree gso thm
R30669:30677 compcert.lib.Maps PTree gso thm
R30769:30771 Coq.Init.Datatypes <> fst def
R30773:30773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30776:30777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30781:30781 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30769:30771 Coq.Init.Datatypes <> fst def
R30773:30773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30776:30777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30781:30781 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30791:30796 Coq.Lists.List <> in_map thm
R30791:30796 Coq.Lists.List <> in_map thm
R30816:30841 compcert.cfrontend.Cminorgenproof <> match_callstack_alloc_left thm
R30816:30841 compcert.cfrontend.Cminorgenproof <> match_callstack_alloc_left thm
R30864:30878 compcert.cfrontend.Cminorgenproof <> cenv_remove_gso thm
R30864:30878 compcert.cfrontend.Cminorgenproof <> cenv_remove_gso thm
prf 30945:30975 <> match_callstack_alloc_variables
R31471:31477 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31480:31485 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31641:31646 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31486:31500 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R31623:31635 compcert.common.Memory Mem nextblock proj
R31637:31639 compcert.cfrontend.Cminorgenproof <> tm2 var
R31604:31616 compcert.common.Memory Mem nextblock proj
R31618:31619 compcert.cfrontend.Cminorgenproof <> m2 var
R31575:31578 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R31513:31517 compcert.cfrontend.Cminorgenproof <> Frame constr
R31558:31570 compcert.common.Memory Mem nextblock proj
R31572:31573 compcert.cfrontend.Cminorgenproof <> m2 var
R31539:31551 compcert.common.Memory Mem nextblock proj
R31553:31554 compcert.cfrontend.Cminorgenproof <> m1 var
R31535:31536 compcert.cfrontend.Cminorgenproof <> sp var
R31532:31533 compcert.cfrontend.Cminorgenproof <> te var
R31529:31530 compcert.cfrontend.Cminorgenproof <> le var
R31527:31527 compcert.cfrontend.Cminorgenproof <> e var
R31524:31525 compcert.cfrontend.Cminorgenproof <> fn var
R31519:31522 compcert.cfrontend.Cminorgenproof <> cenv var
R31579:31580 compcert.cfrontend.Cminorgenproof <> cs var
R31508:31510 compcert.cfrontend.Cminorgenproof <> tm2 var
R31505:31506 compcert.cfrontend.Cminorgenproof <> m2 var
R31502:31503 compcert.cfrontend.Cminorgenproof <> f2 var
R31647:31656 compcert.common.Memory Mem inject def
R31664:31666 compcert.cfrontend.Cminorgenproof <> tm2 var
R31661:31662 compcert.cfrontend.Cminorgenproof <> m2 var
R31658:31659 compcert.cfrontend.Cminorgenproof <> f2 var
R31445:31455 compcert.cfrontend.Cminorgenproof <> match_temps def
R31463:31464 compcert.cfrontend.Cminorgenproof <> te var
R31460:31461 compcert.cfrontend.Cminorgenproof <> le var
R31457:31458 compcert.cfrontend.Cminorgenproof <> f1 var
R31372:31386 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R31421:31433 compcert.common.Memory Mem nextblock proj
R31435:31437 compcert.cfrontend.Cminorgenproof <> tm1 var
R31402:31414 compcert.common.Memory Mem nextblock proj
R31416:31417 compcert.cfrontend.Cminorgenproof <> m1 var
R31398:31399 compcert.cfrontend.Cminorgenproof <> cs var
R31394:31396 compcert.cfrontend.Cminorgenproof <> tm1 var
R31391:31392 compcert.cfrontend.Cminorgenproof <> m1 var
R31388:31389 compcert.cfrontend.Cminorgenproof <> f1 var
R31346:31355 compcert.common.Memory Mem inject def
R31363:31365 compcert.cfrontend.Cminorgenproof <> tm1 var
R31360:31361 compcert.cfrontend.Cminorgenproof <> m1 var
R31357:31358 compcert.cfrontend.Cminorgenproof <> f1 var
R31319:31320 Coq.Lists.List <> In def
R31326:31328 Coq.Lists.List <> map def
R31334:31337 compcert.cfrontend.Cminorgenproof <> vars var
R31330:31332 Coq.Init.Datatypes <> fst def
R31322:31323 compcert.cfrontend.Cminorgenproof <> id var
R31304:31306 Coq.Init.Logic <> :type_scope:x_'='_x not
R31301:31301 compcert.lib.Maps <> ::x_'!'_x not
R31302:31303 compcert.cfrontend.Cminorgenproof <> id var
R31297:31300 compcert.cfrontend.Cminorgenproof <> cenv var
R31307:31310 Coq.Init.Datatypes <> Some constr
R31312:31314 compcert.cfrontend.Cminorgenproof <> ofs var
R31251:31264 compcert.cfrontend.Cminorgenproof <> cenv_separated def
R31271:31274 compcert.cfrontend.Cminorgenproof <> vars var
R31266:31269 compcert.cfrontend.Cminorgenproof <> cenv var
R31205:31215 compcert.cfrontend.Cminorgenproof <> cenv_compat def
R31228:31240 compcert.backend.Cminor <> fn_stackspace proj
R31242:31243 compcert.cfrontend.Cminorgenproof <> fn var
R31222:31225 compcert.cfrontend.Cminorgenproof <> vars var
R31217:31220 compcert.cfrontend.Cminorgenproof <> cenv var
R31172:31183 compcert.lib.Coqlib <> list_norepet ind
R31186:31188 Coq.Lists.List <> map def
R31194:31197 compcert.cfrontend.Cminorgenproof <> vars var
R31190:31192 Coq.Init.Datatypes <> fst def
R31128:31142 compcert.cfrontend.Csharpminor <> alloc_variables ind
R31164:31165 compcert.cfrontend.Cminorgenproof <> m2 var
R31162:31162 compcert.cfrontend.Cminorgenproof <> e var
R31157:31160 compcert.cfrontend.Cminorgenproof <> vars var
R31154:31155 compcert.cfrontend.Cminorgenproof <> m1 var
R31144:31152 compcert.cfrontend.Csharpminor <> empty_env def
R31102:31105 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R31086:31098 compcert.backend.Cminor <> fn_stackspace proj
R31100:31101 compcert.cfrontend.Cminorgenproof <> fn var
R31106:31121 compcert.lib.Integers Int max_unsigned def
R31068:31070 Coq.Init.Logic <> :type_scope:x_'='_x not
R31034:31042 compcert.common.Memory Mem alloc def
R31051:31063 compcert.backend.Cminor <> fn_stackspace proj
R31065:31066 compcert.cfrontend.Cminorgenproof <> fn var
R31044:31046 compcert.cfrontend.Cminorgenproof <> tm1 var
R31071:31071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31075:31076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31079:31079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31072:31074 compcert.cfrontend.Cminorgenproof <> tm2 var
R31077:31078 compcert.cfrontend.Cminorgenproof <> sp var
R31695:31729 compcert.cfrontend.Cminorgenproof <> match_callstack_alloc_variables_rec thm
R31695:31729 compcert.cfrontend.Cminorgenproof <> match_callstack_alloc_variables_rec thm
R31748:31766 compcert.common.Memory Mem valid_new_block thm
R31748:31766 compcert.common.Memory Mem valid_new_block thm
R31793:31808 compcert.common.Memory Mem perm_alloc_3 thm
R31793:31808 compcert.common.Memory Mem perm_alloc_3 thm
R31856:31863 compcert.common.Memtype <> Freeable constr
R31834:31849 compcert.common.Memory Mem perm_implies thm
R31856:31863 compcert.common.Memtype <> Freeable constr
R31834:31849 compcert.common.Memory Mem perm_implies thm
R31888:31903 compcert.common.Memory Mem perm_alloc_2 thm
R31888:31903 compcert.common.Memory Mem perm_alloc_2 thm
R31957:31977 compcert.common.Memory Mem fresh_block_alloc thm
R31957:31977 compcert.common.Memory Mem fresh_block_alloc thm
R31996:32019 compcert.common.Memory Mem valid_block_inject_2 thm
R31996:32019 compcert.common.Memory Mem valid_block_inject_2 thm
R32046:32057 compcert.lib.Maps PTree gempty thm
R32046:32057 compcert.lib.Maps PTree gempty thm
R32069:32095 compcert.cfrontend.Cminorgenproof <> match_callstack_alloc_right thm
R32069:32095 compcert.cfrontend.Cminorgenproof <> match_callstack_alloc_right thm
R32126:32131 Coq.Lists.List <> In_dec syndef
R32141:32143 Coq.Lists.List <> map def
R32145:32147 Coq.Init.Datatypes <> fst def
R32133:32135 compcert.lib.Coqlib <> peq def
R32126:32131 Coq.Lists.List <> In_dec syndef
R32141:32143 Coq.Lists.List <> map def
R32145:32147 Coq.Init.Datatypes <> fst def
R32133:32135 compcert.lib.Coqlib <> peq def
R32165:32179 compcert.cfrontend.Cminorgenproof <> cenv_remove_gss thm
R32165:32179 compcert.cfrontend.Cminorgenproof <> cenv_remove_gss thm
R32198:32212 compcert.cfrontend.Cminorgenproof <> cenv_remove_gso thm
R32198:32212 compcert.cfrontend.Cminorgenproof <> cenv_remove_gso thm
R32237:32237 compcert.lib.Maps <> ::x_'!'_x not
R32237:32237 compcert.lib.Maps <> ::x_'!'_x not
R32290:32311 compcert.common.Memory Mem alloc_right_inject thm
R32290:32311 compcert.common.Memory Mem alloc_right_inject thm
prf 32415:32433 <> block_alignment_pos
R32467:32469 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R32449:32463 compcert.cfrontend.Cminorgen <> block_alignment def
R32465:32466 compcert.cfrontend.Cminorgenproof <> sz var
R32489:32503 compcert.cfrontend.Cminorgen <> block_alignment def
R32527:32529 compcert.lib.Coqlib <> zlt def
R32527:32529 compcert.lib.Coqlib <> zlt def
R32558:32560 compcert.lib.Coqlib <> zlt def
R32558:32560 compcert.lib.Coqlib <> zlt def
R32588:32590 compcert.lib.Coqlib <> zlt def
R32588:32590 compcert.lib.Coqlib <> zlt def
prf 32619:32638 <> assign_variable_incr
R32748:32751 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R32743:32747 compcert.cfrontend.Cminorgenproof <> stksz var
R32752:32757 compcert.cfrontend.Cminorgenproof <> stksz' var
R32721:32723 Coq.Init.Logic <> :type_scope:x_'='_x not
R32683:32697 compcert.cfrontend.Cminorgen <> assign_variable def
R32713:32713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32716:32717 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32720:32720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32714:32715 compcert.cfrontend.Cminorgenproof <> id var
R32718:32719 compcert.cfrontend.Cminorgenproof <> sz var
R32699:32699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32704:32705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32711:32711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32700:32703 compcert.cfrontend.Cminorgenproof <> cenv var
R32706:32710 compcert.cfrontend.Cminorgenproof <> stksz var
R32724:32724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32730:32731 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32738:32738 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32725:32729 compcert.cfrontend.Cminorgenproof <> cenv' var
R32732:32737 compcert.cfrontend.Cminorgenproof <> stksz' var
R32806:32813 compcert.lib.Coqlib <> align_le thm
R32843:32861 compcert.cfrontend.Cminorgenproof <> block_alignment_pos thm
R32822:32836 compcert.cfrontend.Cminorgen <> block_alignment def
R32806:32813 compcert.lib.Coqlib <> align_le thm
R32843:32861 compcert.cfrontend.Cminorgenproof <> block_alignment_pos thm
R32822:32836 compcert.cfrontend.Cminorgen <> block_alignment def
R32880:32883 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R32884:32887 Coq.ZArith.BinInt <> Zmax syndef
R32880:32883 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R32884:32887 Coq.ZArith.BinInt <> Zmax syndef
R32902:32913 compcert.lib.Coqlib <> Zmax_bound_l thm
R32902:32913 compcert.lib.Coqlib <> Zmax_bound_l thm
prf 32945:32965 <> assign_variables_incr
R33056:33059 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R33054:33055 compcert.cfrontend.Cminorgenproof <> sz var
R33060:33062 compcert.cfrontend.Cminorgenproof <> sz' var
R33035:33037 Coq.Init.Logic <> :type_scope:x_'='_x not
R33003:33018 compcert.cfrontend.Cminorgen <> assign_variables def
R33031:33034 compcert.cfrontend.Cminorgenproof <> vars var
R33020:33020 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33025:33026 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33029:33029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33021:33024 compcert.cfrontend.Cminorgenproof <> cenv var
R33027:33028 compcert.cfrontend.Cminorgenproof <> sz var
R33038:33038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33044:33045 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33049:33049 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33039:33043 compcert.cfrontend.Cminorgenproof <> cenv' var
R33046:33048 compcert.cfrontend.Cminorgenproof <> sz' var
R33146:33160 compcert.cfrontend.Cminorgen <> assign_variable def
R33214:33228 compcert.cfrontend.Cminorgen <> assign_variable def
R33241:33241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33244:33245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33247:33247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33230:33230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33235:33236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33239:33239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33214:33228 compcert.cfrontend.Cminorgen <> assign_variable def
R33241:33241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33244:33245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33247:33247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33230:33230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33235:33236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33239:33239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33281:33289 Coq.ZArith.Zorder <> Zle_trans syndef
R33281:33289 Coq.ZArith.Zorder <> Zle_trans syndef
R33308:33327 compcert.cfrontend.Cminorgenproof <> assign_variable_incr thm
R33308:33327 compcert.cfrontend.Cminorgenproof <> assign_variable_incr thm
R33356:33370 compcert.cfrontend.Cminorgen <> assign_variable def
prf 33386:33409 <> inj_offset_aligned_block
R33437:33458 compcert.common.Memory Mem inj_offset_aligned def
R33499:33500 compcert.cfrontend.Cminorgenproof <> sz var
R33461:33465 compcert.lib.Coqlib <> align def
R33478:33492 compcert.cfrontend.Cminorgen <> block_alignment def
R33494:33495 compcert.cfrontend.Cminorgenproof <> sz var
R33467:33475 compcert.cfrontend.Cminorgenproof <> stacksize var
R33562:33576 compcert.cfrontend.Cminorgen <> block_alignment def
R33541:33554 compcert.lib.Coqlib <> Zdivides_trans thm
R33562:33576 compcert.cfrontend.Cminorgen <> block_alignment def
R33541:33554 compcert.lib.Coqlib <> Zdivides_trans thm
R33592:33602 compcert.common.Memdata <> align_chunk def
R33613:33627 compcert.cfrontend.Cminorgen <> block_alignment def
R33643:33653 Coq.ZArith.Znumtheory <> Zone_divide syndef
R33643:33653 Coq.ZArith.Znumtheory <> Zone_divide syndef
R33676:33687 Coq.ZArith.Znumtheory <> Zdivide_refl syndef
R33676:33687 Coq.ZArith.Znumtheory <> Zdivide_refl syndef
R33706:33706 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33708:33710 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33712:33712 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33706:33706 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33708:33710 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33712:33712 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33740:33740 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33742:33744 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33746:33746 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33740:33740 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33742:33744 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33746:33746 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33774:33774 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33776:33778 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33780:33780 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33774:33774 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33776:33778 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33780:33780 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R33811:33813 compcert.lib.Coqlib <> zlt def
R33811:33813 compcert.lib.Coqlib <> zlt def
R33890:33892 compcert.lib.Coqlib <> zlt def
R33890:33892 compcert.lib.Coqlib <> zlt def
R33969:33971 compcert.lib.Coqlib <> zlt def
R33969:33971 compcert.lib.Coqlib <> zlt def
R34075:34087 compcert.lib.Coqlib <> align_divides thm
R34075:34087 compcert.lib.Coqlib <> align_divides thm
R34096:34114 compcert.cfrontend.Cminorgenproof <> block_alignment_pos thm
R34096:34114 compcert.cfrontend.Cminorgenproof <> block_alignment_pos thm
prf 34130:34154 <> inj_offset_aligned_block'
R34182:34203 compcert.common.Memory Mem inj_offset_aligned def
R34245:34248 Coq.ZArith.BinInt <> Zmax syndef
R34252:34253 compcert.cfrontend.Cminorgenproof <> sz var
R34206:34210 compcert.lib.Coqlib <> align def
R34223:34237 compcert.cfrontend.Cminorgen <> block_alignment def
R34239:34240 compcert.cfrontend.Cminorgenproof <> sz var
R34212:34220 compcert.cfrontend.Cminorgenproof <> stacksize var
R34286:34300 compcert.cfrontend.Cminorgen <> block_alignment def
R34312:34326 compcert.cfrontend.Cminorgen <> block_alignment def
R34329:34332 Coq.ZArith.BinInt <> Zmax syndef
R34312:34326 compcert.cfrontend.Cminorgen <> block_alignment def
R34329:34332 Coq.ZArith.BinInt <> Zmax syndef
R34286:34300 compcert.cfrontend.Cminorgen <> block_alignment def
R34350:34373 compcert.cfrontend.Cminorgenproof <> inj_offset_aligned_block thm
R34350:34373 compcert.cfrontend.Cminorgenproof <> inj_offset_aligned_block thm
R34387:34395 compcert.lib.Coqlib <> Zmax_spec thm
R34387:34395 compcert.lib.Coqlib <> Zmax_spec thm
R34408:34410 compcert.lib.Coqlib <> zlt def
R34408:34410 compcert.lib.Coqlib <> zlt def
R34463:34477 compcert.cfrontend.Cminorgen <> block_alignment def
R34488:34495 compcert.lib.Coqlib <> zlt_true thm
R34488:34495 compcert.lib.Coqlib <> zlt_true thm
prf 34523:34543 <> assign_variable_sound
R34798:34803 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R34751:34761 compcert.cfrontend.Cminorgenproof <> cenv_compat def
R34795:34797 compcert.cfrontend.Cminorgenproof <> sz2 var
R34774:34777 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R34770:34773 compcert.cfrontend.Cminorgenproof <> vars var
R34786:34789 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R34778:34778 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34781:34782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34785:34785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34779:34780 compcert.cfrontend.Cminorgenproof <> id var
R34783:34784 compcert.cfrontend.Cminorgenproof <> sz var
R34790:34792 Coq.Init.Datatypes <> nil constr
R34763:34767 compcert.cfrontend.Cminorgenproof <> cenv2 var
R34804:34817 compcert.cfrontend.Cminorgenproof <> cenv_separated def
R34830:34833 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R34826:34829 compcert.cfrontend.Cminorgenproof <> vars var
R34842:34845 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R34834:34834 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34837:34838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34841:34841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34835:34836 compcert.cfrontend.Cminorgenproof <> id var
R34839:34840 compcert.cfrontend.Cminorgenproof <> sz var
R34846:34848 Coq.Init.Datatypes <> nil constr
R34819:34823 compcert.cfrontend.Cminorgenproof <> cenv2 var
R34720:34733 compcert.cfrontend.Cminorgenproof <> cenv_separated def
R34741:34744 compcert.cfrontend.Cminorgenproof <> vars var
R34735:34739 compcert.cfrontend.Cminorgenproof <> cenv1 var
R34688:34698 compcert.cfrontend.Cminorgenproof <> cenv_compat def
R34711:34713 compcert.cfrontend.Cminorgenproof <> sz1 var
R34706:34709 compcert.cfrontend.Cminorgenproof <> vars var
R34700:34704 compcert.cfrontend.Cminorgenproof <> cenv1 var
R34675:34678 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R34679:34681 compcert.cfrontend.Cminorgenproof <> sz1 var
R34647:34647 Coq.Init.Logic <> :type_scope:'~'_x not
R34648:34649 Coq.Lists.List <> In def
R34655:34657 Coq.Lists.List <> map def
R34663:34666 compcert.cfrontend.Cminorgenproof <> vars var
R34659:34661 Coq.Init.Datatypes <> fst def
R34651:34652 compcert.cfrontend.Cminorgenproof <> id var
R34626:34628 Coq.Init.Logic <> :type_scope:x_'='_x not
R34589:34603 compcert.cfrontend.Cminorgen <> assign_variable def
R34618:34618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34621:34622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34625:34625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34619:34620 compcert.cfrontend.Cminorgenproof <> id var
R34623:34624 compcert.cfrontend.Cminorgenproof <> sz var
R34605:34605 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34611:34612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34616:34616 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34606:34610 compcert.cfrontend.Cminorgenproof <> cenv1 var
R34613:34615 compcert.cfrontend.Cminorgenproof <> sz1 var
R34629:34629 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34635:34636 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34640:34640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34630:34634 compcert.cfrontend.Cminorgenproof <> cenv2 var
R34637:34639 compcert.cfrontend.Cminorgenproof <> sz2 var
R34868:34882 compcert.cfrontend.Cminorgen <> assign_variable def
R34967:34970 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R34971:34975 compcert.lib.Coqlib <> align def
R34982:34996 compcert.cfrontend.Cminorgen <> block_alignment def
R34967:34970 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R34971:34975 compcert.lib.Coqlib <> align def
R34982:34996 compcert.cfrontend.Cminorgen <> block_alignment def
R35010:35017 compcert.lib.Coqlib <> align_le thm
R35010:35017 compcert.lib.Coqlib <> align_le thm
R35026:35044 compcert.cfrontend.Cminorgenproof <> block_alignment_pos thm
R35026:35044 compcert.cfrontend.Cminorgenproof <> block_alignment_pos thm
R35181:35184 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R35168:35171 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R35150:35151 Coq.Lists.List <> In def
R35153:35153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35157:35158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35162:35162 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35154:35156 compcert.cfrontend.Cminorgenproof <> id' var
R35159:35161 compcert.cfrontend.Cminorgenproof <> sz' var
R35175:35178 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R35172:35174 compcert.cfrontend.Cminorgenproof <> id' var
R35195:35197 Coq.Init.Logic <> :type_scope:x_'='_x not
R35185:35185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35189:35190 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35194:35194 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35186:35188 compcert.cfrontend.Cminorgenproof <> id' var
R35191:35193 compcert.cfrontend.Cminorgenproof <> sz' var
R35198:35198 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35201:35202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35205:35205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35094:35095 Coq.Lists.List <> In def
R35113:35116 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R35125:35128 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R35117:35117 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35120:35121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35124:35124 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35129:35131 Coq.Init.Datatypes <> nil constr
R35097:35097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35101:35102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35106:35106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35098:35100 compcert.cfrontend.Cminorgenproof <> id' var
R35103:35105 compcert.cfrontend.Cminorgenproof <> sz' var
R35181:35184 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R35168:35171 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R35150:35151 Coq.Lists.List <> In def
R35153:35153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35157:35158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35162:35162 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35154:35156 compcert.cfrontend.Cminorgenproof <> id' var
R35159:35161 compcert.cfrontend.Cminorgenproof <> sz' var
R35175:35178 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R35172:35174 compcert.cfrontend.Cminorgenproof <> id' var
R35195:35197 Coq.Init.Logic <> :type_scope:x_'='_x not
R35185:35185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35189:35190 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35194:35194 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35186:35188 compcert.cfrontend.Cminorgenproof <> id' var
R35191:35193 compcert.cfrontend.Cminorgenproof <> sz' var
R35198:35198 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35201:35202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35205:35205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35094:35095 Coq.Lists.List <> In def
R35113:35116 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R35125:35128 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R35117:35117 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35120:35121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35124:35124 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35129:35131 Coq.Init.Datatypes <> nil constr
R35097:35097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35101:35102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35106:35106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35098:35100 compcert.cfrontend.Cminorgenproof <> id' var
R35103:35105 compcert.cfrontend.Cminorgenproof <> sz' var
R35229:35234 compcert.lib.Coqlib <> in_app thm
R35229:35234 compcert.lib.Coqlib <> in_app thm
R35337:35339 Coq.Init.Datatypes <> fst def
R35341:35341 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35344:35345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35349:35349 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35337:35339 Coq.Init.Datatypes <> fst def
R35341:35341 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35344:35345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35349:35349 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35359:35364 Coq.Lists.List <> in_map thm
R35359:35364 Coq.Lists.List <> in_map thm
R35577:35585 compcert.lib.Maps PTree gso thm
R35577:35585 compcert.lib.Maps PTree gso thm
R35653:35657 compcert.lib.Coqlib <> align def
R35664:35678 compcert.cfrontend.Cminorgen <> block_alignment def
R35653:35657 compcert.lib.Coqlib <> align def
R35664:35678 compcert.cfrontend.Cminorgen <> block_alignment def
R35701:35709 compcert.lib.Maps PTree gss thm
R35701:35709 compcert.lib.Maps PTree gss thm
R35727:35750 compcert.cfrontend.Cminorgenproof <> inj_offset_aligned_block thm
R35727:35750 compcert.cfrontend.Cminorgenproof <> inj_offset_aligned_block thm
R35887:35895 compcert.lib.Maps PTree gso thm
R35887:35895 compcert.lib.Maps PTree gso thm
R35946:35954 compcert.lib.Maps PTree gso thm
R35946:35954 compcert.lib.Maps PTree gso thm
R35977:35985 compcert.lib.Maps PTree gss thm
R35977:35985 compcert.lib.Maps PTree gss thm
R36069:36071 Coq.Init.Logic <> :type_scope:x_'='_x not
R36069:36071 Coq.Init.Logic <> :type_scope:x_'='_x not
R36144:36152 compcert.lib.Maps PTree gso thm
R36144:36152 compcert.lib.Maps PTree gso thm
R36175:36183 compcert.lib.Maps PTree gss thm
R36175:36183 compcert.lib.Maps PTree gss thm
R36267:36269 Coq.Init.Logic <> :type_scope:x_'='_x not
R36267:36269 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 36351:36372 <> assign_variables_sound
R36638:36641 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36601:36611 compcert.cfrontend.Cminorgenproof <> cenv_compat def
R36635:36637 compcert.cfrontend.Cminorgenproof <> sz2 var
R36624:36627 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R36620:36623 compcert.cfrontend.Cminorgenproof <> vars var
R36628:36632 compcert.cfrontend.Cminorgenproof <> vars' var
R36613:36617 compcert.cfrontend.Cminorgenproof <> cenv2 var
R36642:36655 compcert.cfrontend.Cminorgenproof <> cenv_separated def
R36668:36671 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R36664:36667 compcert.cfrontend.Cminorgenproof <> vars var
R36672:36676 compcert.cfrontend.Cminorgenproof <> vars' var
R36657:36661 compcert.cfrontend.Cminorgenproof <> cenv2 var
R36570:36583 compcert.cfrontend.Cminorgenproof <> cenv_separated def
R36591:36594 compcert.cfrontend.Cminorgenproof <> vars var
R36585:36589 compcert.cfrontend.Cminorgenproof <> cenv1 var
R36538:36548 compcert.cfrontend.Cminorgenproof <> cenv_compat def
R36561:36563 compcert.cfrontend.Cminorgenproof <> sz1 var
R36556:36559 compcert.cfrontend.Cminorgenproof <> vars var
R36550:36554 compcert.cfrontend.Cminorgenproof <> cenv1 var
R36525:36528 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R36529:36531 compcert.cfrontend.Cminorgenproof <> sz1 var
R36474:36485 compcert.lib.Coqlib <> list_norepet ind
R36501:36504 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R36488:36490 Coq.Lists.List <> map def
R36496:36500 compcert.cfrontend.Cminorgenproof <> vars' var
R36492:36494 Coq.Init.Datatypes <> fst def
R36505:36507 Coq.Lists.List <> map def
R36513:36516 compcert.cfrontend.Cminorgenproof <> vars var
R36509:36511 Coq.Init.Datatypes <> fst def
R36453:36455 Coq.Init.Logic <> :type_scope:x_'='_x not
R36418:36433 compcert.cfrontend.Cminorgen <> assign_variables def
R36448:36452 compcert.cfrontend.Cminorgenproof <> vars' var
R36435:36435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36441:36442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36446:36446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36436:36440 compcert.cfrontend.Cminorgenproof <> cenv1 var
R36443:36445 compcert.cfrontend.Cminorgenproof <> sz1 var
R36456:36456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36462:36463 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36467:36467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36457:36461 compcert.cfrontend.Cminorgenproof <> cenv2 var
R36464:36466 compcert.cfrontend.Cminorgenproof <> sz2 var
R36731:36739 Coq.Lists.List <> app_nil_r thm
R36731:36739 Coq.Lists.List <> app_nil_r thm
R36811:36816 compcert.lib.Coqlib <> in_app thm
R36811:36816 compcert.lib.Coqlib <> in_app thm
R36835:36850 compcert.lib.Coqlib <> list_norepet_app thm
R36835:36850 compcert.lib.Coqlib <> list_norepet_app thm
R36897:36911 compcert.cfrontend.Cminorgen <> assign_variable def
R36926:36926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36929:36930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36933:36933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36913:36913 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36919:36920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36924:36924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36897:36911 compcert.cfrontend.Cminorgen <> assign_variable def
R36926:36926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36929:36930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36933:36933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36913:36913 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36919:36920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36924:36924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36968:36988 compcert.cfrontend.Cminorgenproof <> assign_variable_sound thm
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R37132:37136 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37152:37152 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R37145:37148 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R37137:37137 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37140:37141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37144:37144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37149:37151 Coq.Init.Datatypes <> nil constr
R37168:37183 compcert.lib.Coqlib <> list_norepet_app thm
R37168:37183 compcert.lib.Coqlib <> list_norepet_app thm
R37219:37225 Coq.Lists.List <> map_app thm
R37219:37225 Coq.Lists.List <> map_app thm
R37234:37259 compcert.lib.Coqlib <> list_norepet_append_commut thm
R37234:37259 compcert.lib.Coqlib <> list_norepet_append_commut thm
R37301:37307 Coq.Lists.List <> map_app thm
R37301:37307 Coq.Lists.List <> map_app thm
R37338:37343 compcert.lib.Coqlib <> in_app thm
R37338:37343 compcert.lib.Coqlib <> in_app thm
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R37464:37483 compcert.cfrontend.Cminorgenproof <> assign_variable_incr thm
R37464:37483 compcert.cfrontend.Cminorgenproof <> assign_variable_incr thm
R37537:37543 Coq.Lists.List <> app_ass syndef
R37537:37543 Coq.Lists.List <> app_ass syndef
prf 37566:37584 <> permutation_norepet
R37613:37616 Coq.Init.Datatypes <> list ind
R37618:37618 compcert.cfrontend.Cminorgenproof <> A var
R37660:37671 compcert.lib.Coqlib <> list_norepet ind
R37673:37674 compcert.cfrontend.Cminorgenproof <> l' var
R37642:37653 compcert.lib.Coqlib <> list_norepet ind
R37655:37655 compcert.cfrontend.Cminorgenproof <> l var
R37622:37632 Coq.Sorting.Permutation <> Permutation ind
R37636:37637 compcert.cfrontend.Cminorgenproof <> l' var
R37634:37634 compcert.cfrontend.Cminorgenproof <> l var
R37779:37792 Coq.Sorting.Permutation <> Permutation_in thm
R37779:37792 Coq.Sorting.Permutation <> Permutation_in thm
R37815:37829 Coq.Sorting.Permutation <> Permutation_sym thm
R37815:37829 Coq.Sorting.Permutation <> Permutation_sym thm
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
prf 37950:37970 <> build_compilenv_sound
R38126:38129 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38083:38093 compcert.cfrontend.Cminorgenproof <> cenv_compat def
R38124:38125 compcert.cfrontend.Cminorgenproof <> sz var
R38101:38119 compcert.cfrontend.Csharpminor <> fn_vars proj
R38121:38121 compcert.cfrontend.Cminorgenproof <> f var
R38095:38098 compcert.cfrontend.Cminorgenproof <> cenv var
R38130:38143 compcert.cfrontend.Cminorgenproof <> cenv_separated def
R38151:38169 compcert.cfrontend.Csharpminor <> fn_vars proj
R38171:38171 compcert.cfrontend.Cminorgenproof <> f var
R38145:38148 compcert.cfrontend.Cminorgenproof <> cenv var
R38031:38042 compcert.lib.Coqlib <> list_norepet ind
R38045:38047 Coq.Lists.List <> map def
R38054:38072 compcert.cfrontend.Csharpminor <> fn_vars proj
R38074:38074 compcert.cfrontend.Cminorgenproof <> f var
R38049:38051 Coq.Init.Datatypes <> fst def
R38012:38014 Coq.Init.Logic <> :type_scope:x_'='_x not
R37995:38009 compcert.cfrontend.Cminorgen <> build_compilenv def
R38011:38011 compcert.cfrontend.Cminorgenproof <> f var
R38015:38015 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38020:38021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38024:38024 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38016:38019 compcert.cfrontend.Cminorgenproof <> cenv var
R38022:38023 compcert.cfrontend.Cminorgenproof <> sz var
R38191:38205 compcert.cfrontend.Cminorgen <> build_compilenv def
R38233:38251 compcert.cfrontend.Csharpminor <> fn_vars proj
R38233:38251 compcert.cfrontend.Csharpminor <> fn_vars proj
R38276:38296 compcert.cfrontend.Cminorgen VarSort Permuted_sort thm
R38276:38296 compcert.cfrontend.Cminorgen VarSort Permuted_sort thm
R38332:38343 compcert.cfrontend.Cminorgen VarSort sort def
R38332:38343 compcert.cfrontend.Cminorgen VarSort sort def
R38393:38396 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38368:38378 compcert.cfrontend.Cminorgenproof <> cenv_compat def
R38397:38410 compcert.cfrontend.Cminorgenproof <> cenv_separated def
R38393:38396 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38368:38378 compcert.cfrontend.Cminorgenproof <> cenv_compat def
R38397:38410 compcert.cfrontend.Cminorgenproof <> cenv_separated def
R38451:38454 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R38448:38450 Coq.Init.Datatypes <> nil constr
R38451:38454 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R38448:38450 Coq.Init.Datatypes <> nil constr
R38474:38495 compcert.cfrontend.Cminorgenproof <> assign_variables_sound thm
R38474:38495 compcert.cfrontend.Cminorgenproof <> assign_variables_sound thm
R38531:38539 Coq.Lists.List <> app_nil_r thm
R38531:38539 Coq.Lists.List <> app_nil_r thm
R38574:38576 Coq.Lists.List <> map def
R38578:38580 Coq.Init.Datatypes <> fst def
R38548:38566 compcert.cfrontend.Cminorgenproof <> permutation_norepet thm
R38574:38576 Coq.Lists.List <> map def
R38578:38580 Coq.Init.Datatypes <> fst def
R38548:38566 compcert.cfrontend.Cminorgenproof <> permutation_norepet thm
R38606:38620 Coq.Sorting.Permutation <> Permutation_map thm
R38606:38620 Coq.Sorting.Permutation <> Permutation_map thm
R38766:38779 Coq.Sorting.Permutation <> Permutation_in thm
R38766:38779 Coq.Sorting.Permutation <> Permutation_in thm
R38838:38851 Coq.Sorting.Permutation <> Permutation_in thm
R38838:38851 Coq.Sorting.Permutation <> Permutation_in thm
R38838:38851 Coq.Sorting.Permutation <> Permutation_in thm
prf 38883:38905 <> assign_variables_domain
R39005:39008 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R38997:39000 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38984:38984 compcert.lib.Maps <> ::x_'!'_x not
R38993:38994 compcert.lib.Maps <> ::x_'!'_x not
R38995:38996 compcert.cfrontend.Cminorgenproof <> id var
R38985:38987 Coq.Init.Datatypes <> fst def
R38989:38992 compcert.cfrontend.Cminorgenproof <> cesz var
R39001:39004 Coq.Init.Datatypes <> None constr
R39009:39010 Coq.Lists.List <> In def
R39016:39018 Coq.Lists.List <> map def
R39024:39027 compcert.cfrontend.Cminorgenproof <> vars var
R39020:39022 Coq.Init.Datatypes <> fst def
R39012:39013 compcert.cfrontend.Cminorgenproof <> id var
R38970:38973 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38933:38933 compcert.lib.Maps <> ::x_'!'_x not
R38966:38967 compcert.lib.Maps <> ::x_'!'_x not
R38968:38969 compcert.cfrontend.Cminorgenproof <> id var
R38934:38936 Coq.Init.Datatypes <> fst def
R38939:38954 compcert.cfrontend.Cminorgen <> assign_variables def
R38961:38964 compcert.cfrontend.Cminorgenproof <> vars var
R38956:38959 compcert.cfrontend.Cminorgenproof <> cesz var
R38974:38977 Coq.Init.Datatypes <> None constr
R39111:39125 compcert.cfrontend.Cminorgen <> assign_variable def
R39204:39215 compcert.lib.Maps PTree gsspec thm
R39204:39215 compcert.lib.Maps PTree gsspec thm
R39228:39230 compcert.lib.Coqlib <> peq def
R39228:39230 compcert.lib.Coqlib <> peq def
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
prf 39266:39287 <> build_compilenv_domain
R39377:39378 Coq.Lists.List <> In def
R39384:39386 Coq.Lists.List <> map def
R39393:39411 compcert.cfrontend.Csharpminor <> fn_vars proj
R39413:39413 compcert.cfrontend.Cminorgenproof <> f var
R39388:39390 Coq.Init.Datatypes <> fst def
R39380:39381 compcert.cfrontend.Cminorgenproof <> id var
R39362:39364 Coq.Init.Logic <> :type_scope:x_'='_x not
R39359:39359 compcert.lib.Maps <> ::x_'!'_x not
R39360:39361 compcert.cfrontend.Cminorgenproof <> id var
R39355:39358 compcert.cfrontend.Cminorgenproof <> cenv var
R39365:39368 Coq.Init.Datatypes <> Some constr
R39370:39372 compcert.cfrontend.Cminorgenproof <> ofs var
R39336:39338 Coq.Init.Logic <> :type_scope:x_'='_x not
R39319:39333 compcert.cfrontend.Cminorgen <> build_compilenv def
R39335:39335 compcert.cfrontend.Cminorgenproof <> f var
R39339:39339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39344:39345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39348:39348 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39340:39343 compcert.cfrontend.Cminorgenproof <> cenv var
R39346:39347 compcert.cfrontend.Cminorgenproof <> sz var
R39434:39448 compcert.cfrontend.Cminorgen <> build_compilenv def
R39476:39494 compcert.cfrontend.Csharpminor <> fn_vars proj
R39476:39494 compcert.cfrontend.Csharpminor <> fn_vars proj
R39519:39539 compcert.cfrontend.Cminorgen VarSort Permuted_sort thm
R39519:39539 compcert.cfrontend.Cminorgen VarSort Permuted_sort thm
R39575:39586 compcert.cfrontend.Cminorgen VarSort sort def
R39575:39586 compcert.cfrontend.Cminorgen VarSort sort def
R39615:39637 compcert.cfrontend.Cminorgenproof <> assign_variables_domain thm
R39648:39648 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39662:39663 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39665:39665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39649:39659 compcert.lib.Maps PTree empty def
R39661:39661 Coq.Numbers.BinNums <> Z ind
R39615:39637 compcert.cfrontend.Cminorgenproof <> assign_variables_domain thm
R39648:39648 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39662:39663 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39665:39665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39649:39659 compcert.lib.Maps PTree empty def
R39661:39661 Coq.Numbers.BinNums <> Z ind
R39733:39744 compcert.lib.Maps PTree gempty thm
R39733:39744 compcert.lib.Maps PTree gempty thm
R39794:39796 Coq.Lists.List <> map def
R39798:39800 Coq.Init.Datatypes <> fst def
R39773:39786 Coq.Sorting.Permutation <> Permutation_in thm
R39794:39796 Coq.Lists.List <> map def
R39798:39800 Coq.Init.Datatypes <> fst def
R39773:39786 Coq.Sorting.Permutation <> Permutation_in thm
R39824:39838 Coq.Sorting.Permutation <> Permutation_map thm
R39824:39838 Coq.Sorting.Permutation <> Permutation_map thm
R39847:39861 Coq.Sorting.Permutation <> Permutation_sym thm
R39847:39861 Coq.Sorting.Permutation <> Permutation_sym thm
prf 39956:39977 <> create_undef_temps_val
R40054:40057 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40043:40044 Coq.Lists.List <> In def
R40049:40053 compcert.cfrontend.Cminorgenproof <> temps var
R40046:40047 compcert.cfrontend.Cminorgenproof <> id var
R40059:40061 Coq.Init.Logic <> :type_scope:x_'='_x not
R40058:40058 compcert.cfrontend.Cminorgenproof <> v var
R40062:40067 compcert.common.Values <> Vundef constr
R40030:40032 Coq.Init.Logic <> :type_scope:x_'='_x not
R40001:40001 compcert.lib.Maps <> ::x_'!'_x not
R40026:40027 compcert.lib.Maps <> ::x_'!'_x not
R40028:40029 compcert.cfrontend.Cminorgenproof <> id var
R40002:40019 compcert.cfrontend.Csharpminor <> create_undef_temps def
R40021:40025 compcert.cfrontend.Cminorgenproof <> temps var
R40033:40036 Coq.Init.Datatypes <> Some constr
R40038:40038 compcert.cfrontend.Cminorgenproof <> v var
R40121:40132 compcert.lib.Maps PTree gempty thm
R40121:40132 compcert.lib.Maps PTree gempty thm
R40162:40173 compcert.lib.Maps PTree gsspec thm
R40162:40173 compcert.lib.Maps PTree gsspec thm
R40191:40193 compcert.lib.Coqlib <> peq def
R40191:40193 compcert.lib.Coqlib <> peq def
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
def 40278:40288 <> set_params'
R40295:40298 Coq.Init.Datatypes <> list ind
R40300:40302 compcert.common.Values <> val ind
R40310:40313 Coq.Init.Datatypes <> list ind
R40315:40319 compcert.common.AST <> ident def
R40327:40336 compcert.backend.Cminor <> env def
R40341:40350 compcert.backend.Cminor <> env def
R40367:40368 compcert.cfrontend.Cminorgenproof <> vl var
R40363:40364 compcert.cfrontend.Cminorgenproof <> il var
R40381:40384 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40391:40394 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40401:40411 compcert.cfrontend.Cminorgenproof <> set_params' def
R40420:40428 compcert.lib.Maps PTree set def
R40436:40437 compcert.cfrontend.Cminorgenproof <> te var
R40446:40449 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40454:40456 Coq.Init.Datatypes <> nil constr
R40461:40471 compcert.cfrontend.Cminorgenproof <> set_params' def
R40481:40489 compcert.lib.Maps PTree set def
R40501:40502 compcert.cfrontend.Cminorgenproof <> te var
R40494:40499 compcert.common.Values <> Vundef constr
R40473:40475 Coq.Init.Datatypes <> nil constr
R40517:40518 compcert.cfrontend.Cminorgenproof <> te var
prf 40534:40558 <> bind_parameters_agree_rec
R40708:40718 compcert.cfrontend.Cminorgenproof <> match_temps def
R40727:40737 compcert.cfrontend.Cminorgenproof <> set_params' def
R40750:40751 compcert.cfrontend.Cminorgenproof <> te var
R40745:40748 compcert.cfrontend.Cminorgenproof <> vars var
R40739:40743 compcert.cfrontend.Cminorgenproof <> tvals var
R40722:40724 compcert.cfrontend.Cminorgenproof <> le2 var
R40720:40720 compcert.cfrontend.Cminorgenproof <> f var
R40682:40692 compcert.cfrontend.Cminorgenproof <> match_temps def
R40700:40701 compcert.cfrontend.Cminorgenproof <> te var
R40696:40698 compcert.cfrontend.Cminorgenproof <> le1 var
R40694:40694 compcert.cfrontend.Cminorgenproof <> f var
R40648:40662 compcert.common.Values <> val_list_inject ind
R40671:40675 compcert.cfrontend.Cminorgenproof <> tvals var
R40666:40669 compcert.cfrontend.Cminorgenproof <> vals var
R40664:40664 compcert.cfrontend.Cminorgenproof <> f var
R40631:40633 Coq.Init.Logic <> :type_scope:x_'='_x not
R40602:40616 compcert.cfrontend.Csharpminor <> bind_parameters def
R40628:40630 compcert.cfrontend.Cminorgenproof <> le1 var
R40623:40626 compcert.cfrontend.Cminorgenproof <> vals var
R40618:40621 compcert.cfrontend.Cminorgenproof <> vars var
R40634:40637 Coq.Init.Datatypes <> Some constr
R40639:40641 compcert.cfrontend.Cminorgenproof <> le2 var
R40769:40777 compcert.lib.Maps PTree set def
R40959:40970 compcert.lib.Maps PTree gsspec thm
R40959:40970 compcert.lib.Maps PTree gsspec thm
R40988:40990 compcert.lib.Coqlib <> peq def
R40988:40990 compcert.lib.Coqlib <> peq def
prf 41057:41075 <> set_params'_outside
R41138:41140 Coq.Init.Logic <> :type_scope:x_'='_x not
R41113:41113 compcert.lib.Maps <> ::x_'!'_x not
R41134:41135 compcert.lib.Maps <> ::x_'!'_x not
R41136:41137 compcert.cfrontend.Cminorgenproof <> id var
R41114:41124 compcert.cfrontend.Cminorgenproof <> set_params' def
R41132:41133 compcert.cfrontend.Cminorgenproof <> te var
R41129:41130 compcert.cfrontend.Cminorgenproof <> il var
R41126:41127 compcert.cfrontend.Cminorgenproof <> vl var
R41143:41143 compcert.lib.Maps <> ::x_'!'_x not
R41144:41145 compcert.cfrontend.Cminorgenproof <> id var
R41141:41142 compcert.cfrontend.Cminorgenproof <> te var
R41100:41100 Coq.Init.Logic <> :type_scope:'~'_x not
R41101:41102 Coq.Lists.List <> In def
R41107:41108 compcert.cfrontend.Cminorgenproof <> il var
R41104:41105 compcert.cfrontend.Cminorgenproof <> id var
R41230:41238 compcert.lib.Maps PTree gso thm
R41230:41238 compcert.lib.Maps PTree gso thm
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R41271:41279 compcert.lib.Maps PTree gso thm
R41271:41279 compcert.lib.Maps PTree gso thm
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
prf 41316:41333 <> set_params'_inside
R41405:41407 Coq.Init.Logic <> :type_scope:x_'='_x not
R41379:41379 compcert.lib.Maps <> ::x_'!'_x not
R41401:41402 compcert.lib.Maps <> ::x_'!'_x not
R41403:41404 compcert.cfrontend.Cminorgenproof <> id var
R41380:41390 compcert.cfrontend.Cminorgenproof <> set_params' def
R41398:41400 compcert.cfrontend.Cminorgenproof <> te1 var
R41395:41396 compcert.cfrontend.Cminorgenproof <> il var
R41392:41393 compcert.cfrontend.Cminorgenproof <> vl var
R41408:41408 compcert.lib.Maps <> ::x_'!'_x not
R41430:41431 compcert.lib.Maps <> ::x_'!'_x not
R41432:41433 compcert.cfrontend.Cminorgenproof <> id var
R41409:41419 compcert.cfrontend.Cminorgenproof <> set_params' def
R41427:41429 compcert.cfrontend.Cminorgenproof <> te2 var
R41424:41425 compcert.cfrontend.Cminorgenproof <> il var
R41421:41422 compcert.cfrontend.Cminorgenproof <> vl var
R41365:41366 Coq.Lists.List <> In def
R41371:41372 compcert.cfrontend.Cminorgenproof <> il var
R41368:41369 compcert.cfrontend.Cminorgenproof <> id var
R41516:41526 Coq.Lists.List <> in_dec thm
R41528:41530 compcert.lib.Coqlib <> peq def
R41563:41581 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41601:41603 Coq.Init.Logic <> :type_scope:x_'='_x not
R41646:41654 compcert.lib.Maps PTree gss thm
R41516:41526 Coq.Lists.List <> in_dec thm
R41528:41530 compcert.lib.Coqlib <> peq def
R41516:41526 Coq.Lists.List <> in_dec thm
R41528:41530 compcert.lib.Coqlib <> peq def
R41563:41581 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41563:41581 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41563:41581 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41563:41581 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41563:41581 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41563:41581 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41563:41581 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41563:41581 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41563:41581 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41563:41581 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41601:41603 Coq.Init.Logic <> :type_scope:x_'='_x not
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R41601:41603 Coq.Init.Logic <> :type_scope:x_'='_x not
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R41646:41654 compcert.lib.Maps PTree gss thm
R41646:41654 compcert.lib.Maps PTree gss thm
R41646:41654 compcert.lib.Maps PTree gss thm
R41646:41654 compcert.lib.Maps PTree gss thm
R41646:41654 compcert.lib.Maps PTree gss thm
R41646:41654 compcert.lib.Maps PTree gss thm
prf 41675:41696 <> set_params_set_params'
R41762:41764 Coq.Init.Logic <> :type_scope:x_'='_x not
R41741:41741 compcert.lib.Maps <> ::x_'!'_x not
R41758:41759 compcert.lib.Maps <> ::x_'!'_x not
R41760:41761 compcert.cfrontend.Cminorgenproof <> id var
R41742:41751 compcert.backend.Cminor <> set_params def
R41756:41757 compcert.cfrontend.Cminorgenproof <> il var
R41753:41754 compcert.cfrontend.Cminorgenproof <> vl var
R41765:41765 compcert.lib.Maps <> ::x_'!'_x not
R41801:41802 compcert.lib.Maps <> ::x_'!'_x not
R41803:41804 compcert.cfrontend.Cminorgenproof <> id var
R41766:41776 compcert.cfrontend.Cminorgenproof <> set_params' def
R41785:41795 compcert.lib.Maps PTree empty def
R41797:41799 compcert.common.Values <> val ind
R41781:41782 compcert.cfrontend.Cminorgenproof <> il var
R41778:41779 compcert.cfrontend.Cminorgenproof <> vl var
R41720:41731 compcert.lib.Coqlib <> list_norepet ind
R41733:41734 compcert.cfrontend.Cminorgenproof <> il var
R41886:41897 compcert.lib.Maps PTree gsspec thm
R41886:41897 compcert.lib.Maps PTree gsspec thm
R41910:41912 compcert.lib.Coqlib <> peq def
R41910:41912 compcert.lib.Coqlib <> peq def
R41941:41959 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41941:41959 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R41976:41984 compcert.lib.Maps PTree gss thm
R41976:41984 compcert.lib.Maps PTree gss thm
R42027:42037 Coq.Lists.List <> in_dec thm
R42039:42041 compcert.lib.Coqlib <> peq def
R42027:42037 Coq.Lists.List <> in_dec thm
R42039:42041 compcert.lib.Coqlib <> peq def
R42057:42074 compcert.cfrontend.Cminorgenproof <> set_params'_inside thm
R42057:42074 compcert.cfrontend.Cminorgenproof <> set_params'_inside thm
R42100:42118 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42100:42118 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42100:42118 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42100:42118 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42100:42118 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42100:42118 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42135:42143 compcert.lib.Maps PTree gso thm
R42135:42143 compcert.lib.Maps PTree gso thm
R42163:42174 compcert.lib.Maps PTree gsspec thm
R42163:42174 compcert.lib.Maps PTree gsspec thm
R42187:42189 compcert.lib.Coqlib <> peq def
R42187:42189 compcert.lib.Coqlib <> peq def
R42218:42236 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42218:42236 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42253:42261 compcert.lib.Maps PTree gss thm
R42253:42261 compcert.lib.Maps PTree gss thm
R42304:42314 Coq.Lists.List <> in_dec thm
R42316:42318 compcert.lib.Coqlib <> peq def
R42304:42314 Coq.Lists.List <> in_dec thm
R42316:42318 compcert.lib.Coqlib <> peq def
R42334:42351 compcert.cfrontend.Cminorgenproof <> set_params'_inside thm
R42334:42351 compcert.cfrontend.Cminorgenproof <> set_params'_inside thm
R42377:42395 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42377:42395 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42377:42395 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42377:42395 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42377:42395 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42377:42395 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R42412:42420 compcert.lib.Maps PTree gso thm
R42412:42420 compcert.lib.Maps PTree gso thm
prf 42442:42459 <> set_locals_outside
R42515:42517 Coq.Init.Logic <> :type_scope:x_'='_x not
R42495:42495 compcert.lib.Maps <> ::x_'!'_x not
R42511:42512 compcert.lib.Maps <> ::x_'!'_x not
R42513:42514 compcert.cfrontend.Cminorgenproof <> id var
R42496:42505 compcert.backend.Cminor <> set_locals def
R42510:42510 compcert.cfrontend.Cminorgenproof <> e var
R42507:42508 compcert.cfrontend.Cminorgenproof <> il var
R42519:42519 compcert.lib.Maps <> ::x_'!'_x not
R42520:42521 compcert.cfrontend.Cminorgenproof <> id var
R42518:42518 compcert.cfrontend.Cminorgenproof <> e var
R42482:42482 Coq.Init.Logic <> :type_scope:'~'_x not
R42483:42484 Coq.Lists.List <> In def
R42489:42490 compcert.cfrontend.Cminorgenproof <> il var
R42486:42487 compcert.cfrontend.Cminorgenproof <> id var
R42580:42588 compcert.lib.Maps PTree gso thm
R42580:42588 compcert.lib.Maps PTree gso thm
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
prf 42634:42650 <> set_locals_inside
R42705:42707 Coq.Init.Logic <> :type_scope:x_'='_x not
R42685:42685 compcert.lib.Maps <> ::x_'!'_x not
R42701:42702 compcert.lib.Maps <> ::x_'!'_x not
R42703:42704 compcert.cfrontend.Cminorgenproof <> id var
R42686:42695 compcert.backend.Cminor <> set_locals def
R42700:42700 compcert.cfrontend.Cminorgenproof <> e var
R42697:42698 compcert.cfrontend.Cminorgenproof <> il var
R42708:42711 Coq.Init.Datatypes <> Some constr
R42713:42718 compcert.common.Values <> Vundef constr
R42673:42674 Coq.Lists.List <> In def
R42679:42680 compcert.cfrontend.Cminorgenproof <> il var
R42676:42677 compcert.cfrontend.Cminorgenproof <> id var
R42805:42813 compcert.lib.Maps PTree gss thm
R42805:42813 compcert.lib.Maps PTree gss thm
R42827:42838 compcert.lib.Maps PTree gsspec thm
R42827:42838 compcert.lib.Maps PTree gsspec thm
R42851:42853 compcert.lib.Coqlib <> peq def
R42851:42853 compcert.lib.Coqlib <> peq def
prf 42887:42908 <> set_locals_set_params'
R43046:43050 Coq.Init.Logic <> :type_scope:x_'='_x not
R42999:42999 compcert.lib.Maps <> ::x_'!'_x not
R43040:43043 compcert.lib.Maps <> ::x_'!'_x not
R43044:43045 compcert.cfrontend.Cminorgenproof <> id var
R43000:43009 compcert.backend.Cminor <> set_locals def
R43017:43026 compcert.backend.Cminor <> set_params def
R43033:43038 compcert.cfrontend.Cminorgenproof <> params var
R43028:43031 compcert.cfrontend.Cminorgenproof <> vals var
R43011:43014 compcert.cfrontend.Cminorgenproof <> vars var
R43051:43051 compcert.lib.Maps <> ::x_'!'_x not
R43111:43114 compcert.lib.Maps <> ::x_'!'_x not
R43115:43116 compcert.cfrontend.Cminorgenproof <> id var
R43052:43062 compcert.cfrontend.Cminorgenproof <> set_params' def
R43077:43086 compcert.backend.Cminor <> set_locals def
R43094:43104 compcert.lib.Maps PTree empty def
R43106:43108 compcert.common.Values <> val ind
R43088:43091 compcert.cfrontend.Cminorgenproof <> vars var
R43069:43074 compcert.cfrontend.Cminorgenproof <> params var
R43064:43067 compcert.cfrontend.Cminorgenproof <> vals var
R42968:42980 compcert.lib.Coqlib <> list_disjoint def
R42989:42992 compcert.cfrontend.Cminorgenproof <> vars var
R42982:42987 compcert.cfrontend.Cminorgenproof <> params var
R42943:42954 compcert.lib.Coqlib <> list_norepet ind
R42956:42961 compcert.cfrontend.Cminorgenproof <> params var
R43146:43151 Coq.Lists.List <> in_dec thm
R43153:43155 compcert.lib.Coqlib <> peq def
R43146:43151 Coq.Lists.List <> in_dec thm
R43153:43155 compcert.lib.Coqlib <> peq def
R43177:43177 Coq.Init.Logic <> :type_scope:'~'_x not
R43178:43179 Coq.Lists.List <> In def
R43177:43177 Coq.Init.Logic <> :type_scope:'~'_x not
R43178:43179 Coq.Lists.List <> In def
R43199:43217 compcert.lib.Coqlib <> list_disjoint_notin thm
R43199:43217 compcert.lib.Coqlib <> list_disjoint_notin thm
R43242:43258 compcert.lib.Coqlib <> list_disjoint_sym thm
R43242:43258 compcert.lib.Coqlib <> list_disjoint_sym thm
R43277:43293 compcert.cfrontend.Cminorgenproof <> set_locals_inside thm
R43277:43293 compcert.cfrontend.Cminorgenproof <> set_locals_inside thm
R43310:43328 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R43310:43328 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R43345:43361 compcert.cfrontend.Cminorgenproof <> set_locals_inside thm
R43345:43361 compcert.cfrontend.Cminorgenproof <> set_locals_inside thm
R43380:43397 compcert.cfrontend.Cminorgenproof <> set_locals_outside thm
R43380:43397 compcert.cfrontend.Cminorgenproof <> set_locals_outside thm
R43414:43435 compcert.cfrontend.Cminorgenproof <> set_params_set_params' thm
R43414:43435 compcert.cfrontend.Cminorgenproof <> set_params_set_params' thm
R43457:43462 Coq.Lists.List <> in_dec thm
R43464:43466 compcert.lib.Coqlib <> peq def
R43457:43462 Coq.Lists.List <> in_dec thm
R43464:43466 compcert.lib.Coqlib <> peq def
R43489:43506 compcert.cfrontend.Cminorgenproof <> set_params'_inside thm
R43489:43506 compcert.cfrontend.Cminorgenproof <> set_params'_inside thm
R43532:43550 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R43532:43550 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R43532:43550 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R43532:43550 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R43532:43550 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R43532:43550 compcert.cfrontend.Cminorgenproof <> set_params'_outside thm
R43570:43587 compcert.cfrontend.Cminorgenproof <> set_locals_outside thm
R43570:43587 compcert.cfrontend.Cminorgenproof <> set_locals_outside thm
prf 43609:43629 <> bind_parameters_agree
R43834:43844 compcert.cfrontend.Cminorgenproof <> match_temps def
R43852:43861 compcert.backend.Cminor <> set_locals def
R43870:43879 compcert.backend.Cminor <> set_params def
R43887:43892 compcert.cfrontend.Cminorgenproof <> params var
R43881:43885 compcert.cfrontend.Cminorgenproof <> tvals var
R43863:43867 compcert.cfrontend.Cminorgenproof <> temps var
R43848:43849 compcert.cfrontend.Cminorgenproof <> le var
R43846:43846 compcert.cfrontend.Cminorgenproof <> f var
R43802:43814 compcert.lib.Coqlib <> list_disjoint def
R43823:43827 compcert.cfrontend.Cminorgenproof <> temps var
R43816:43821 compcert.cfrontend.Cminorgenproof <> params var
R43777:43788 compcert.lib.Coqlib <> list_norepet ind
R43790:43795 compcert.cfrontend.Cminorgenproof <> params var
R43743:43757 compcert.common.Values <> val_list_inject ind
R43766:43770 compcert.cfrontend.Cminorgenproof <> tvals var
R43761:43764 compcert.cfrontend.Cminorgenproof <> vals var
R43759:43759 compcert.cfrontend.Cminorgenproof <> f var
R43727:43729 Coq.Init.Logic <> :type_scope:x_'='_x not
R43673:43687 compcert.cfrontend.Csharpminor <> bind_parameters def
R43702:43719 compcert.cfrontend.Csharpminor <> create_undef_temps def
R43721:43725 compcert.cfrontend.Cminorgenproof <> temps var
R43696:43699 compcert.cfrontend.Cminorgenproof <> vals var
R43689:43694 compcert.cfrontend.Cminorgenproof <> params var
R43730:43733 Coq.Init.Datatypes <> Some constr
R43735:43736 compcert.cfrontend.Cminorgenproof <> le var
R43937:43961 compcert.cfrontend.Cminorgenproof <> bind_parameters_agree_rec thm
R43991:44000 compcert.backend.Cminor <> set_locals def
R44009:44019 compcert.lib.Maps PTree empty def
R44021:44023 compcert.common.Values <> val ind
R44051:44072 compcert.cfrontend.Cminorgenproof <> create_undef_temps_val thm
R44115:44120 compcert.common.Values <> Vundef constr
R44115:44120 compcert.common.Values <> Vundef constr
R44136:44152 compcert.cfrontend.Cminorgenproof <> set_locals_inside thm
R44136:44152 compcert.cfrontend.Cminorgenproof <> set_locals_inside thm
R44234:44255 compcert.cfrontend.Cminorgenproof <> set_locals_set_params' thm
R44234:44255 compcert.cfrontend.Cminorgenproof <> set_locals_set_params' thm
prf 44319:44348 <> match_callstack_function_entry
R45036:45045 compcert.backend.Cminor <> set_locals def
R45074:45083 compcert.backend.Cminor <> set_params def
R45092:45112 compcert.cfrontend.Csharpminor <> fn_params proj
R45114:45115 compcert.cfrontend.Cminorgenproof <> fn var
R45085:45089 compcert.cfrontend.Cminorgenproof <> targs var
R45048:45067 compcert.cfrontend.Csharpminor <> fn_temps proj
R45069:45070 compcert.cfrontend.Cminorgenproof <> fn var
R45124:45130 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R45133:45139 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R45316:45321 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45140:45154 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R45298:45310 compcert.common.Memory Mem nextblock proj
R45312:45314 compcert.cfrontend.Cminorgenproof <> tm' var
R45279:45291 compcert.common.Memory Mem nextblock proj
R45293:45294 compcert.cfrontend.Cminorgenproof <> m' var
R45249:45252 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45188:45192 compcert.cfrontend.Cminorgenproof <> Frame constr
R45232:45244 compcert.common.Memory Mem nextblock proj
R45246:45247 compcert.cfrontend.Cminorgenproof <> m' var
R45214:45226 compcert.common.Memory Mem nextblock proj
R45228:45228 compcert.cfrontend.Cminorgenproof <> m var
R45210:45211 compcert.cfrontend.Cminorgenproof <> sp var
R45207:45208 compcert.cfrontend.Cminorgenproof <> te var
R45204:45205 compcert.cfrontend.Cminorgenproof <> le var
R45202:45202 compcert.cfrontend.Cminorgenproof <> e var
R45199:45200 compcert.cfrontend.Cminorgenproof <> tf var
R45194:45197 compcert.cfrontend.Cminorgenproof <> cenv var
R45253:45254 compcert.cfrontend.Cminorgenproof <> cs var
R45162:45164 compcert.cfrontend.Cminorgenproof <> tm' var
R45159:45160 compcert.cfrontend.Cminorgenproof <> m' var
R45156:45157 compcert.cfrontend.Cminorgenproof <> f' var
R45322:45331 compcert.common.Memory Mem inject def
R45339:45341 compcert.cfrontend.Cminorgenproof <> tm' var
R45336:45337 compcert.cfrontend.Cminorgenproof <> m' var
R45333:45334 compcert.cfrontend.Cminorgenproof <> f' var
R45003:45012 compcert.common.Memory Mem inject def
R45018:45019 compcert.cfrontend.Cminorgenproof <> tm var
R45016:45016 compcert.cfrontend.Cminorgenproof <> m var
R45014:45014 compcert.cfrontend.Cminorgenproof <> f var
R44935:44949 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R44980:44992 compcert.common.Memory Mem nextblock proj
R44994:44995 compcert.cfrontend.Cminorgenproof <> tm var
R44962:44974 compcert.common.Memory Mem nextblock proj
R44976:44976 compcert.cfrontend.Cminorgenproof <> m var
R44958:44959 compcert.cfrontend.Cminorgenproof <> cs var
R44955:44956 compcert.cfrontend.Cminorgenproof <> tm var
R44953:44953 compcert.cfrontend.Cminorgenproof <> m var
R44951:44951 compcert.cfrontend.Cminorgenproof <> f var
R44917:44919 Coq.Init.Logic <> :type_scope:x_'='_x not
R44884:44892 compcert.common.Memory Mem alloc def
R44903:44915 compcert.backend.Cminor <> fn_stackspace proj
R44899:44900 compcert.cfrontend.Cminorgenproof <> tf var
R44894:44895 compcert.cfrontend.Cminorgenproof <> tm var
R44920:44920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44924:44925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44928:44928 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44921:44923 compcert.cfrontend.Cminorgenproof <> tm' var
R44926:44927 compcert.cfrontend.Cminorgenproof <> sp var
R44850:44864 compcert.common.Values <> val_list_inject ind
R44873:44877 compcert.cfrontend.Cminorgenproof <> targs var
R44868:44871 compcert.cfrontend.Cminorgenproof <> args var
R44866:44866 compcert.cfrontend.Cminorgenproof <> f var
R44834:44836 Coq.Init.Logic <> :type_scope:x_'='_x not
R44752:44766 compcert.cfrontend.Csharpminor <> bind_parameters def
R44801:44818 compcert.cfrontend.Csharpminor <> create_undef_temps def
R44824:44831 compcert.cfrontend.Csharpminor <> fn_temps proj
R44820:44821 compcert.cfrontend.Cminorgenproof <> fn var
R44795:44798 compcert.cfrontend.Cminorgenproof <> args var
R44769:44789 compcert.cfrontend.Csharpminor <> fn_params proj
R44791:44792 compcert.cfrontend.Cminorgenproof <> fn var
R44837:44840 Coq.Init.Datatypes <> Some constr
R44842:44843 compcert.cfrontend.Cminorgenproof <> le var
R44677:44691 compcert.cfrontend.Csharpminor <> alloc_variables ind
R44744:44745 compcert.cfrontend.Cminorgenproof <> m' var
R44742:44742 compcert.cfrontend.Cminorgenproof <> e var
R44718:44736 compcert.cfrontend.Csharpminor <> fn_vars proj
R44738:44739 compcert.cfrontend.Cminorgenproof <> fn var
R44715:44715 compcert.cfrontend.Cminorgenproof <> m var
R44693:44713 compcert.cfrontend.Csharpminor <> empty_env def
R44605:44617 compcert.lib.Coqlib <> list_disjoint def
R44647:44666 compcert.cfrontend.Csharpminor <> fn_temps proj
R44668:44669 compcert.cfrontend.Cminorgenproof <> fn var
R44620:44640 compcert.cfrontend.Csharpminor <> fn_params proj
R44642:44643 compcert.cfrontend.Cminorgenproof <> fn var
R44560:44571 compcert.lib.Coqlib <> list_norepet ind
R44574:44594 compcert.cfrontend.Csharpminor <> fn_params proj
R44596:44597 compcert.cfrontend.Cminorgenproof <> fn var
R44507:44518 compcert.lib.Coqlib <> list_norepet ind
R44521:44523 Coq.Lists.List <> map def
R44530:44548 compcert.cfrontend.Csharpminor <> fn_vars proj
R44550:44551 compcert.cfrontend.Cminorgenproof <> fn var
R44525:44527 Coq.Init.Datatypes <> fst def
R44481:44484 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R44467:44479 compcert.backend.Cminor <> fn_stackspace proj
R44463:44464 compcert.cfrontend.Cminorgenproof <> tf var
R44485:44500 compcert.lib.Integers Int max_unsigned def
R44428:44430 Coq.Init.Logic <> :type_scope:x_'='_x not
R44410:44424 compcert.cfrontend.Cminorgen <> build_compilenv def
R44426:44427 compcert.cfrontend.Cminorgenproof <> fn var
R44431:44431 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44436:44437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44456:44456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44432:44435 compcert.cfrontend.Cminorgenproof <> cenv var
R44442:44454 compcert.backend.Cminor <> fn_stackspace proj
R44438:44439 compcert.cfrontend.Cminorgenproof <> tf var
R45371:45391 compcert.cfrontend.Cminorgenproof <> build_compilenv_sound thm
R45426:45456 compcert.cfrontend.Cminorgenproof <> match_callstack_alloc_variables thm
R45426:45456 compcert.cfrontend.Cminorgenproof <> match_callstack_alloc_variables thm
R45483:45504 compcert.cfrontend.Cminorgenproof <> build_compilenv_domain thm
R45483:45504 compcert.cfrontend.Cminorgenproof <> build_compilenv_domain thm
R45523:45543 compcert.cfrontend.Cminorgenproof <> bind_parameters_agree thm
R45523:45543 compcert.cfrontend.Cminorgenproof <> bind_parameters_agree thm
prf 45650:45671 <> val_inject_val_of_bool
R45688:45697 compcert.common.Values <> val_inject ind
R45718:45728 compcert.common.Values Val of_bool def
R45730:45730 compcert.cfrontend.Cminorgenproof <> b var
R45702:45712 compcert.common.Values Val of_bool def
R45714:45714 compcert.cfrontend.Cminorgenproof <> b var
R45699:45699 compcert.cfrontend.Cminorgenproof <> f var
prf 45789:45813 <> val_inject_val_of_optbool
R45831:45840 compcert.common.Values <> val_inject ind
R45865:45878 compcert.common.Values Val of_optbool def
R45880:45881 compcert.cfrontend.Cminorgenproof <> ob var
R45845:45858 compcert.common.Values Val of_optbool def
R45860:45861 compcert.cfrontend.Cminorgenproof <> ob var
R45842:45842 compcert.cfrontend.Cminorgenproof <> f var
R46015:46021 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46023:46024 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46041:46044 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46032:46034 Coq.Init.Logic <> :type_scope:x_'='_x not
R46025:46028 Coq.Init.Datatypes <> Some constr
R46035:46038 Coq.Init.Datatypes <> Some constr
R46040:46040 compcert.cfrontend.Cminorgenproof <> y var
R46045:46054 compcert.common.Values <> val_inject ind
R46015:46021 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46023:46024 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46041:46044 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46032:46034 Coq.Init.Logic <> :type_scope:x_'='_x not
R46025:46028 Coq.Init.Datatypes <> Some constr
R46035:46038 Coq.Init.Datatypes <> Some constr
R46040:46040 compcert.cfrontend.Cminorgenproof <> y var
R46045:46054 compcert.common.Values <> val_inject ind
R46133:46139 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46141:46142 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46144:46147 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46148:46157 compcert.common.Values <> val_inject ind
R46162:46165 compcert.common.Values <> Vint constr
R46133:46139 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46141:46142 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46144:46147 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46148:46157 compcert.common.Values <> val_inject ind
R46162:46165 compcert.common.Values <> Vint constr
R46253:46259 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46261:46262 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46264:46267 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46268:46277 compcert.common.Values <> val_inject ind
R46282:46287 compcert.common.Values <> Vfloat constr
R46253:46259 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46261:46262 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46264:46267 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46268:46277 compcert.common.Values <> val_inject ind
R46282:46287 compcert.common.Values <> Vfloat constr
R46377:46383 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46385:46386 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46388:46391 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46392:46401 compcert.common.Values <> val_inject ind
R46406:46410 compcert.common.Values <> Vlong constr
R46377:46383 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46385:46386 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46388:46391 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46392:46401 compcert.common.Values <> val_inject ind
R46406:46410 compcert.common.Values <> Vlong constr
R46437:46441 compcert.common.Values <> Vlong constr
R46314:46319 compcert.common.Values <> Vfloat constr
R46192:46195 compcert.common.Values <> Vint constr
prf 46586:46601 <> eval_unop_compat
R46685:46691 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46694:46700 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46727:46732 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46717:46719 Coq.Init.Logic <> :type_scope:x_'='_x not
R46701:46709 compcert.backend.Cminor <> eval_unop def
R46714:46716 compcert.cfrontend.Cminorgenproof <> tv1 var
R46711:46712 compcert.cfrontend.Cminorgenproof <> op var
R46720:46723 Coq.Init.Datatypes <> Some constr
R46725:46726 compcert.cfrontend.Cminorgenproof <> tv var
R46733:46742 compcert.common.Values <> val_inject ind
R46748:46749 compcert.cfrontend.Cminorgenproof <> tv var
R46746:46746 compcert.cfrontend.Cminorgenproof <> v var
R46744:46744 compcert.cfrontend.Cminorgenproof <> f var
R46660:46669 compcert.common.Values <> val_inject ind
R46676:46678 compcert.cfrontend.Cminorgenproof <> tv1 var
R46673:46674 compcert.cfrontend.Cminorgenproof <> v1 var
R46671:46671 compcert.cfrontend.Cminorgenproof <> f var
R46645:46647 Coq.Init.Logic <> :type_scope:x_'='_x not
R46630:46638 compcert.backend.Cminor <> eval_unop def
R46643:46644 compcert.cfrontend.Cminorgenproof <> v1 var
R46640:46641 compcert.cfrontend.Cminorgenproof <> op var
R46648:46651 Coq.Init.Datatypes <> Some constr
R46653:46653 compcert.cfrontend.Cminorgenproof <> v var
R47303:47314 compcert.lib.Floats Float to_int def
R47303:47314 compcert.lib.Floats Float to_int def
R47402:47414 compcert.lib.Floats Float to_intu def
R47402:47414 compcert.lib.Floats Float to_intu def
R47604:47617 compcert.lib.Floats Float32 to_int def
R47604:47617 compcert.lib.Floats Float32 to_int def
R47705:47719 compcert.lib.Floats Float32 to_intu def
R47705:47719 compcert.lib.Floats Float32 to_intu def
R48104:48116 compcert.lib.Floats Float to_long def
R48104:48116 compcert.lib.Floats Float to_long def
R48204:48217 compcert.lib.Floats Float to_longu def
R48204:48217 compcert.lib.Floats Float to_longu def
R48407:48421 compcert.lib.Floats Float32 to_long def
R48407:48421 compcert.lib.Floats Float32 to_long def
R48509:48524 compcert.lib.Floats Float32 to_longu def
R48509:48524 compcert.lib.Floats Float32 to_longu def
prf 48748:48764 <> eval_binop_compat
R48914:48920 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48923:48929 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R48964:48969 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R48954:48956 Coq.Init.Logic <> :type_scope:x_'='_x not
R48930:48939 compcert.backend.Cminor <> eval_binop def
R48952:48953 compcert.cfrontend.Cminorgenproof <> tm var
R48948:48950 compcert.cfrontend.Cminorgenproof <> tv2 var
R48944:48946 compcert.cfrontend.Cminorgenproof <> tv1 var
R48941:48942 compcert.cfrontend.Cminorgenproof <> op var
R48957:48960 Coq.Init.Datatypes <> Some constr
R48962:48963 compcert.cfrontend.Cminorgenproof <> tv var
R48970:48979 compcert.common.Values <> val_inject ind
R48985:48986 compcert.cfrontend.Cminorgenproof <> tv var
R48983:48983 compcert.cfrontend.Cminorgenproof <> v var
R48981:48981 compcert.cfrontend.Cminorgenproof <> f var
R48891:48900 compcert.common.Memory Mem inject def
R48906:48907 compcert.cfrontend.Cminorgenproof <> tm var
R48904:48904 compcert.cfrontend.Cminorgenproof <> m var
R48902:48902 compcert.cfrontend.Cminorgenproof <> f var
R48866:48875 compcert.common.Values <> val_inject ind
R48882:48884 compcert.cfrontend.Cminorgenproof <> tv2 var
R48879:48880 compcert.cfrontend.Cminorgenproof <> v2 var
R48877:48877 compcert.cfrontend.Cminorgenproof <> f var
R48841:48850 compcert.common.Values <> val_inject ind
R48857:48859 compcert.cfrontend.Cminorgenproof <> tv1 var
R48854:48855 compcert.cfrontend.Cminorgenproof <> v1 var
R48852:48852 compcert.cfrontend.Cminorgenproof <> f var
R48826:48828 Coq.Init.Logic <> :type_scope:x_'='_x not
R48805:48814 compcert.backend.Cminor <> eval_binop def
R48825:48825 compcert.cfrontend.Cminorgenproof <> m var
R48822:48823 compcert.cfrontend.Cminorgenproof <> v2 var
R48819:48820 compcert.cfrontend.Cminorgenproof <> v1 var
R48816:48817 compcert.cfrontend.Cminorgenproof <> op var
R48829:48832 Coq.Init.Datatypes <> Some constr
R48834:48834 compcert.cfrontend.Cminorgenproof <> v var
R49085:49097 compcert.lib.Integers Int add_assoc thm
R49085:49097 compcert.lib.Integers Int add_assoc thm
R49085:49097 compcert.lib.Integers Int add_assoc thm
R49085:49097 compcert.lib.Integers Int add_assoc thm
R49113:49126 compcert.lib.Integers Int add_commut thm
R49113:49126 compcert.lib.Integers Int add_commut thm
R49148:49160 compcert.lib.Integers Int add_assoc thm
R49148:49160 compcert.lib.Integers Int add_assoc thm
R49148:49160 compcert.lib.Integers Int add_assoc thm
R49148:49160 compcert.lib.Integers Int add_assoc thm
R49176:49189 compcert.lib.Integers Int add_commut thm
R49176:49189 compcert.lib.Integers Int add_commut thm
R49242:49254 compcert.lib.Integers Int sub_add_l thm
R49242:49254 compcert.lib.Integers Int sub_add_l thm
R49278:49285 compcert.common.Values <> eq_block def
R49278:49285 compcert.common.Values <> eq_block def
R49353:49363 compcert.lib.Coqlib <> dec_eq_true thm
R49353:49363 compcert.lib.Coqlib <> dec_eq_true thm
R49374:49388 compcert.lib.Integers Int sub_shifted thm
R49374:49388 compcert.lib.Integers Int sub_shifted thm
R49536:49545 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49518:49523 compcert.lib.Integers Int eq def
R49528:49535 compcert.lib.Integers Int zero def
R49580:49583 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49546:49551 compcert.lib.Integers Int eq def
R49556:49563 compcert.lib.Integers Int repr def
R49565:49578 compcert.lib.Integers Int min_signed def
R49584:49589 compcert.lib.Integers Int eq def
R49594:49601 compcert.lib.Integers Int mone def
R49536:49545 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49518:49523 compcert.lib.Integers Int eq def
R49528:49535 compcert.lib.Integers Int zero def
R49580:49583 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49546:49551 compcert.lib.Integers Int eq def
R49556:49563 compcert.lib.Integers Int repr def
R49565:49578 compcert.lib.Integers Int min_signed def
R49584:49589 compcert.lib.Integers Int eq def
R49594:49601 compcert.lib.Integers Int mone def
R49708:49713 compcert.lib.Integers Int eq def
R49718:49725 compcert.lib.Integers Int zero def
R49708:49713 compcert.lib.Integers Int eq def
R49718:49725 compcert.lib.Integers Int zero def
R49850:49859 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49832:49837 compcert.lib.Integers Int eq def
R49842:49849 compcert.lib.Integers Int zero def
R49894:49897 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49860:49865 compcert.lib.Integers Int eq def
R49870:49877 compcert.lib.Integers Int repr def
R49879:49892 compcert.lib.Integers Int min_signed def
R49898:49903 compcert.lib.Integers Int eq def
R49908:49915 compcert.lib.Integers Int mone def
R49850:49859 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49832:49837 compcert.lib.Integers Int eq def
R49842:49849 compcert.lib.Integers Int zero def
R49894:49897 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49860:49865 compcert.lib.Integers Int eq def
R49870:49877 compcert.lib.Integers Int repr def
R49879:49892 compcert.lib.Integers Int min_signed def
R49898:49903 compcert.lib.Integers Int eq def
R49908:49915 compcert.lib.Integers Int mone def
R50022:50027 compcert.lib.Integers Int eq def
R50032:50039 compcert.lib.Integers Int zero def
R50022:50027 compcert.lib.Integers Int eq def
R50032:50039 compcert.lib.Integers Int zero def
R50242:50248 compcert.lib.Integers Int ltu def
R50253:50265 compcert.lib.Integers Int iwordsize def
R50242:50248 compcert.lib.Integers Int ltu def
R50253:50265 compcert.lib.Integers Int iwordsize def
R50332:50338 compcert.lib.Integers Int ltu def
R50343:50355 compcert.lib.Integers Int iwordsize def
R50332:50338 compcert.lib.Integers Int ltu def
R50343:50355 compcert.lib.Integers Int iwordsize def
R50422:50428 compcert.lib.Integers Int ltu def
R50433:50445 compcert.lib.Integers Int iwordsize def
R50422:50428 compcert.lib.Integers Int ltu def
R50433:50445 compcert.lib.Integers Int iwordsize def
R50998:51007 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R50976:50983 compcert.lib.Integers Int64 eq def
R50988:50997 compcert.lib.Integers Int64 zero def
R51048:51051 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R51008:51015 compcert.lib.Integers Int64 eq def
R51020:51029 compcert.lib.Integers Int64 repr def
R51031:51046 compcert.lib.Integers Int64 min_signed def
R51052:51059 compcert.lib.Integers Int64 eq def
R51064:51073 compcert.lib.Integers Int64 mone def
R50998:51007 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R50976:50983 compcert.lib.Integers Int64 eq def
R50988:50997 compcert.lib.Integers Int64 zero def
R51048:51051 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R51008:51015 compcert.lib.Integers Int64 eq def
R51020:51029 compcert.lib.Integers Int64 repr def
R51031:51046 compcert.lib.Integers Int64 min_signed def
R51052:51059 compcert.lib.Integers Int64 eq def
R51064:51073 compcert.lib.Integers Int64 mone def
R51180:51187 compcert.lib.Integers Int64 eq def
R51192:51201 compcert.lib.Integers Int64 zero def
R51180:51187 compcert.lib.Integers Int64 eq def
R51192:51201 compcert.lib.Integers Int64 zero def
R51330:51339 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R51308:51315 compcert.lib.Integers Int64 eq def
R51320:51329 compcert.lib.Integers Int64 zero def
R51380:51383 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R51340:51347 compcert.lib.Integers Int64 eq def
R51352:51361 compcert.lib.Integers Int64 repr def
R51363:51378 compcert.lib.Integers Int64 min_signed def
R51384:51391 compcert.lib.Integers Int64 eq def
R51396:51405 compcert.lib.Integers Int64 mone def
R51330:51339 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R51308:51315 compcert.lib.Integers Int64 eq def
R51320:51329 compcert.lib.Integers Int64 zero def
R51380:51383 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R51340:51347 compcert.lib.Integers Int64 eq def
R51352:51361 compcert.lib.Integers Int64 repr def
R51363:51378 compcert.lib.Integers Int64 min_signed def
R51384:51391 compcert.lib.Integers Int64 eq def
R51396:51405 compcert.lib.Integers Int64 mone def
R51512:51519 compcert.lib.Integers Int64 eq def
R51524:51533 compcert.lib.Integers Int64 zero def
R51512:51519 compcert.lib.Integers Int64 eq def
R51524:51533 compcert.lib.Integers Int64 zero def
R51736:51742 compcert.lib.Integers Int ltu def
R51747:51762 compcert.lib.Integers Int64 iwordsize' def
R51736:51742 compcert.lib.Integers Int ltu def
R51747:51762 compcert.lib.Integers Int64 iwordsize' def
R51829:51835 compcert.lib.Integers Int ltu def
R51840:51855 compcert.lib.Integers Int64 iwordsize' def
R51829:51835 compcert.lib.Integers Int ltu def
R51840:51855 compcert.lib.Integers Int64 iwordsize' def
R51922:51928 compcert.lib.Integers Int ltu def
R51933:51948 compcert.lib.Integers Int64 iwordsize' def
R51922:51928 compcert.lib.Integers Int ltu def
R51933:51948 compcert.lib.Integers Int64 iwordsize' def
R52004:52028 compcert.cfrontend.Cminorgenproof <> val_inject_val_of_optbool thm
R52004:52028 compcert.cfrontend.Cminorgenproof <> val_inject_val_of_optbool thm
R52089:52096 compcert.common.Values Val cmpu def
R52112:52124 compcert.common.Values Val cmpu_bool def
R52127:52143 compcert.common.Memory Mem valid_pointer def
R52112:52124 compcert.common.Values Val cmpu_bool def
R52127:52143 compcert.common.Memory Mem valid_pointer def
R52183:52195 compcert.common.Values Val cmpu_bool def
R52198:52214 compcert.common.Memory Mem valid_pointer def
R52237:52240 Coq.Init.Datatypes <> Some constr
R52237:52240 Coq.Init.Datatypes <> Some constr
R52183:52195 compcert.common.Values Val cmpu_bool def
R52198:52214 compcert.common.Memory Mem valid_pointer def
R52299:52318 compcert.common.Values <> val_cmpu_bool_inject thm
R52299:52318 compcert.common.Values <> val_cmpu_bool_inject thm
R52345:52372 compcert.common.Memory Mem valid_pointer_inject_val thm
R52345:52372 compcert.common.Memory Mem valid_pointer_inject_val thm
R52399:52431 compcert.common.Memory Mem weak_valid_pointer_inject_val thm
R52399:52431 compcert.common.Memory Mem weak_valid_pointer_inject_val thm
R52458:52498 compcert.common.Memory Mem weak_valid_pointer_inject_no_overflow thm
R52458:52498 compcert.common.Memory Mem weak_valid_pointer_inject_no_overflow thm
R52525:52553 compcert.common.Memory Mem different_pointers_inject thm
R52525:52553 compcert.common.Memory Mem different_pointers_inject thm
R52635:52659 compcert.cfrontend.Cminorgenproof <> val_inject_val_of_optbool thm
R52635:52659 compcert.cfrontend.Cminorgenproof <> val_inject_val_of_optbool thm
R52720:52744 compcert.cfrontend.Cminorgenproof <> val_inject_val_of_optbool thm
R52720:52744 compcert.cfrontend.Cminorgenproof <> val_inject_val_of_optbool thm
R52767:52774 compcert.common.Values Val cmpl def
R52860:52881 compcert.cfrontend.Cminorgenproof <> val_inject_val_of_bool thm
R52860:52881 compcert.cfrontend.Cminorgenproof <> val_inject_val_of_bool thm
R52905:52913 compcert.common.Values Val cmplu def
R52999:53020 compcert.cfrontend.Cminorgenproof <> val_inject_val_of_bool thm
R52999:53020 compcert.cfrontend.Cminorgenproof <> val_inject_val_of_bool thm
prf 53146:53161 <> var_addr_correct
R53349:53355 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53358:53364 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53425:53430 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53365:53373 compcert.backend.Cminor <> eval_expr ind
R53423:53424 compcert.cfrontend.Cminorgenproof <> tv var
R53405:53412 compcert.cfrontend.Cminorgen <> var_addr def
R53419:53420 compcert.cfrontend.Cminorgenproof <> id var
R53414:53417 compcert.cfrontend.Cminorgenproof <> cenv var
R53401:53402 compcert.cfrontend.Cminorgenproof <> tm var
R53398:53399 compcert.cfrontend.Cminorgenproof <> te var
R53380:53383 compcert.common.Values <> Vptr constr
R53388:53395 compcert.lib.Integers Int zero def
R53385:53386 compcert.cfrontend.Cminorgenproof <> sp var
R53375:53377 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R53431:53440 compcert.common.Values <> val_inject ind
R53462:53463 compcert.cfrontend.Cminorgenproof <> tv var
R53445:53448 compcert.common.Values <> Vptr constr
R53452:53459 compcert.lib.Integers Int zero def
R53450:53450 compcert.cfrontend.Cminorgenproof <> b var
R53442:53442 compcert.cfrontend.Cminorgenproof <> f var
R53320:53332 compcert.cfrontend.Csharpminor <> eval_var_addr ind
R53342:53342 compcert.cfrontend.Cminorgenproof <> b var
R53339:53340 compcert.cfrontend.Cminorgenproof <> id var
R53337:53337 compcert.cfrontend.Cminorgenproof <> e var
R53334:53335 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R53216:53230 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R53297:53309 compcert.common.Memory Mem nextblock proj
R53311:53312 compcert.cfrontend.Cminorgenproof <> tm var
R53279:53291 compcert.common.Memory Mem nextblock proj
R53293:53293 compcert.cfrontend.Cminorgenproof <> m var
R53270:53273 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R53240:53244 compcert.cfrontend.Cminorgenproof <> Frame constr
R53268:53269 compcert.cfrontend.Cminorgenproof <> hi var
R53265:53266 compcert.cfrontend.Cminorgenproof <> lo var
R53262:53263 compcert.cfrontend.Cminorgenproof <> sp var
R53259:53260 compcert.cfrontend.Cminorgenproof <> te var
R53256:53257 compcert.cfrontend.Cminorgenproof <> le var
R53254:53254 compcert.cfrontend.Cminorgenproof <> e var
R53251:53252 compcert.cfrontend.Cminorgenproof <> tf var
R53246:53249 compcert.cfrontend.Cminorgenproof <> cenv var
R53274:53275 compcert.cfrontend.Cminorgenproof <> cs var
R53236:53237 compcert.cfrontend.Cminorgenproof <> tm var
R53234:53234 compcert.cfrontend.Cminorgenproof <> m var
R53232:53232 compcert.cfrontend.Cminorgenproof <> f var
R53482:53489 compcert.cfrontend.Cminorgen <> var_addr def
R53510:53518 compcert.cfrontend.Cminorgenproof <> match_var ind
R53534:53534 compcert.lib.Maps <> ::x_'!'_x not
R53526:53526 compcert.lib.Maps <> ::x_'!'_x not
R53510:53518 compcert.cfrontend.Cminorgenproof <> match_var ind
R53534:53534 compcert.lib.Maps <> ::x_'!'_x not
R53526:53526 compcert.lib.Maps <> ::x_'!'_x not
R53625:53628 compcert.common.Values <> Vptr constr
R53634:53641 compcert.lib.Integers Int repr def
R53625:53628 compcert.common.Values <> Vptr constr
R53634:53641 compcert.lib.Integers Int repr def
R53687:53700 compcert.lib.Integers Int add_zero_l thm
R53687:53700 compcert.lib.Integers Int add_zero_l thm
R53749:53780 compcert.cfrontend.Cminorgenproof <> match_callstack_match_globalenvs thm
R53825:53828 compcert.common.Values <> Vptr constr
R53832:53839 compcert.lib.Integers Int zero def
R53825:53828 compcert.common.Values <> Vptr constr
R53832:53839 compcert.lib.Integers Int zero def
R53880:53896 compcert.cfrontend.Cminorgenproof <> symbols_preserved thm
R53880:53896 compcert.cfrontend.Cminorgenproof <> symbols_preserved thm
prf 55138:55155 <> bool_of_val_inject
R55223:55237 compcert.common.Values Val bool_of_val ind
R55242:55242 compcert.cfrontend.Cminorgenproof <> b var
R55239:55240 compcert.cfrontend.Cminorgenproof <> tv var
R55202:55211 compcert.common.Values <> val_inject ind
R55217:55218 compcert.cfrontend.Cminorgenproof <> tv var
R55215:55215 compcert.cfrontend.Cminorgenproof <> v var
R55213:55213 compcert.cfrontend.Cminorgenproof <> f var
R55179:55193 compcert.common.Values Val bool_of_val ind
R55197:55197 compcert.cfrontend.Cminorgenproof <> b var
R55195:55195 compcert.cfrontend.Cminorgenproof <> v var
prf 55308:55330 <> transl_constant_correct
R55400:55406 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55409:55415 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55468:55473 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R55458:55460 Coq.Init.Logic <> :type_scope:x_'='_x not
R55416:55428 compcert.backend.Cminor <> eval_constant def
R55438:55452 compcert.cfrontend.Cminorgen <> transl_constant def
R55454:55456 compcert.cfrontend.Cminorgenproof <> cst var
R55434:55435 compcert.cfrontend.Cminorgenproof <> sp var
R55430:55432 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R55461:55464 Coq.Init.Datatypes <> Some constr
R55466:55467 compcert.cfrontend.Cminorgenproof <> tv var
R55474:55483 compcert.common.Values <> val_inject ind
R55489:55490 compcert.cfrontend.Cminorgenproof <> tv var
R55487:55487 compcert.cfrontend.Cminorgenproof <> v var
R55485:55485 compcert.cfrontend.Cminorgenproof <> f var
R55385:55387 Coq.Init.Logic <> :type_scope:x_'='_x not
R55356:55380 compcert.cfrontend.Csharpminor <> eval_constant def
R55382:55384 compcert.cfrontend.Cminorgenproof <> cst var
R55388:55391 Coq.Init.Datatypes <> Some constr
R55393:55393 compcert.cfrontend.Cminorgenproof <> v var
R55549:55552 compcert.common.Values <> Vint constr
R55549:55552 compcert.common.Values <> Vint constr
R55574:55579 compcert.common.Values <> Vfloat constr
R55574:55579 compcert.common.Values <> Vfloat constr
R55602:55608 compcert.common.Values <> Vsingle constr
R55602:55608 compcert.common.Values <> Vsingle constr
R55631:55635 compcert.common.Values <> Vlong constr
R55631:55635 compcert.common.Values <> Vlong constr
prf 55659:55677 <> transl_expr_correct
R55735:55744 compcert.common.Memory Mem inject def
R55750:55751 compcert.cfrontend.Cminorgenproof <> tm var
R55748:55748 compcert.cfrontend.Cminorgenproof <> m var
R55746:55746 compcert.cfrontend.Cminorgenproof <> f var
R55766:55780 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R55873:55885 compcert.common.Memory Mem nextblock proj
R55887:55888 compcert.cfrontend.Cminorgenproof <> tm var
R55855:55867 compcert.common.Memory Mem nextblock proj
R55869:55869 compcert.cfrontend.Cminorgenproof <> m var
R55833:55836 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R55803:55807 compcert.cfrontend.Cminorgenproof <> Frame constr
R55831:55832 compcert.cfrontend.Cminorgenproof <> hi var
R55828:55829 compcert.cfrontend.Cminorgenproof <> lo var
R55825:55826 compcert.cfrontend.Cminorgenproof <> sp var
R55822:55823 compcert.cfrontend.Cminorgenproof <> te var
R55819:55820 compcert.cfrontend.Cminorgenproof <> le var
R55817:55817 compcert.cfrontend.Cminorgenproof <> e var
R55814:55815 compcert.cfrontend.Cminorgenproof <> tf var
R55809:55812 compcert.cfrontend.Cminorgenproof <> cenv var
R55837:55838 compcert.cfrontend.Cminorgenproof <> cs var
R55786:55787 compcert.cfrontend.Cminorgenproof <> tm var
R55784:55784 compcert.cfrontend.Cminorgenproof <> m var
R55782:55782 compcert.cfrontend.Cminorgenproof <> f var
R55987:55989 Coq.Init.Logic <> :type_scope:x_'='_x not
R55969:55979 compcert.cfrontend.Cminorgen <> transl_expr def
R55986:55986 compcert.cfrontend.Cminorgenproof <> a var
R55981:55984 compcert.cfrontend.Cminorgenproof <> cenv var
R55990:55991 compcert.common.Errors <> OK constr
R55993:55994 compcert.cfrontend.Cminorgenproof <> ta var
R56000:56006 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56009:56015 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56060:56065 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R56016:56024 compcert.backend.Cminor <> eval_expr ind
R56058:56059 compcert.cfrontend.Cminorgenproof <> tv var
R56055:56056 compcert.cfrontend.Cminorgenproof <> ta var
R56052:56053 compcert.cfrontend.Cminorgenproof <> tm var
R56049:56050 compcert.cfrontend.Cminorgenproof <> te var
R56031:56034 compcert.common.Values <> Vptr constr
R56039:56046 compcert.lib.Integers Int zero def
R56036:56037 compcert.cfrontend.Cminorgenproof <> sp var
R56026:56028 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R56066:56075 compcert.common.Values <> val_inject ind
R56081:56082 compcert.cfrontend.Cminorgenproof <> tv var
R56079:56079 compcert.cfrontend.Cminorgenproof <> v var
R56077:56077 compcert.cfrontend.Cminorgenproof <> f var
R55909:55929 compcert.cfrontend.Csharpminor <> eval_expr ind
R55943:55943 compcert.cfrontend.Cminorgenproof <> v var
R55941:55941 compcert.cfrontend.Cminorgenproof <> a var
R55939:55939 compcert.cfrontend.Cminorgenproof <> m var
R55936:55937 compcert.cfrontend.Cminorgenproof <> le var
R55934:55934 compcert.cfrontend.Cminorgenproof <> e var
R55931:55932 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R56288:56303 compcert.cfrontend.Cminorgenproof <> var_addr_correct thm
R56288:56303 compcert.cfrontend.Cminorgenproof <> var_addr_correct thm
R56338:56360 compcert.cfrontend.Cminorgenproof <> transl_constant_correct thm
R56518:56533 compcert.cfrontend.Cminorgenproof <> eval_unop_compat thm
R56757:56773 compcert.cfrontend.Cminorgenproof <> eval_binop_compat thm
R56935:56950 compcert.common.Memory Mem loadv_inject thm
prf 57043:57065 <> transl_exprlist_correct
R57123:57132 compcert.common.Memory Mem inject def
R57138:57139 compcert.cfrontend.Cminorgenproof <> tm var
R57136:57136 compcert.cfrontend.Cminorgenproof <> m var
R57134:57134 compcert.cfrontend.Cminorgenproof <> f var
R57154:57168 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R57261:57273 compcert.common.Memory Mem nextblock proj
R57275:57276 compcert.cfrontend.Cminorgenproof <> tm var
R57243:57255 compcert.common.Memory Mem nextblock proj
R57257:57257 compcert.cfrontend.Cminorgenproof <> m var
R57221:57224 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R57191:57195 compcert.cfrontend.Cminorgenproof <> Frame constr
R57219:57220 compcert.cfrontend.Cminorgenproof <> hi var
R57216:57217 compcert.cfrontend.Cminorgenproof <> lo var
R57213:57214 compcert.cfrontend.Cminorgenproof <> sp var
R57210:57211 compcert.cfrontend.Cminorgenproof <> te var
R57207:57208 compcert.cfrontend.Cminorgenproof <> le var
R57205:57205 compcert.cfrontend.Cminorgenproof <> e var
R57202:57203 compcert.cfrontend.Cminorgenproof <> tf var
R57197:57200 compcert.cfrontend.Cminorgenproof <> cenv var
R57225:57226 compcert.cfrontend.Cminorgenproof <> cs var
R57174:57175 compcert.cfrontend.Cminorgenproof <> tm var
R57172:57172 compcert.cfrontend.Cminorgenproof <> m var
R57170:57170 compcert.cfrontend.Cminorgenproof <> f var
R57383:57385 Coq.Init.Logic <> :type_scope:x_'='_x not
R57361:57375 compcert.cfrontend.Cminorgen <> transl_exprlist def
R57382:57382 compcert.cfrontend.Cminorgenproof <> a var
R57377:57380 compcert.cfrontend.Cminorgenproof <> cenv var
R57386:57387 compcert.common.Errors <> OK constr
R57389:57390 compcert.cfrontend.Cminorgenproof <> ta var
R57396:57402 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57405:57411 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57460:57465 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57412:57424 compcert.backend.Cminor <> eval_exprlist ind
R57458:57459 compcert.cfrontend.Cminorgenproof <> tv var
R57455:57456 compcert.cfrontend.Cminorgenproof <> ta var
R57452:57453 compcert.cfrontend.Cminorgenproof <> tm var
R57449:57450 compcert.cfrontend.Cminorgenproof <> te var
R57431:57434 compcert.common.Values <> Vptr constr
R57439:57446 compcert.lib.Integers Int zero def
R57436:57437 compcert.cfrontend.Cminorgenproof <> sp var
R57426:57428 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R57466:57480 compcert.common.Values <> val_list_inject ind
R57486:57487 compcert.cfrontend.Cminorgenproof <> tv var
R57484:57484 compcert.cfrontend.Cminorgenproof <> v var
R57482:57482 compcert.cfrontend.Cminorgenproof <> f var
R57297:57321 compcert.cfrontend.Csharpminor <> eval_exprlist ind
R57335:57335 compcert.cfrontend.Cminorgenproof <> v var
R57333:57333 compcert.cfrontend.Cminorgenproof <> a var
R57331:57331 compcert.cfrontend.Cminorgenproof <> m var
R57328:57329 compcert.cfrontend.Cminorgenproof <> le var
R57326:57326 compcert.cfrontend.Cminorgenproof <> e var
R57323:57324 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R57544:57546 Coq.Init.Datatypes <> nil constr
R57548:57550 compcert.common.Values <> val ind
R57544:57546 Coq.Init.Datatypes <> nil constr
R57548:57550 compcert.common.Values <> val ind
R57597:57615 compcert.cfrontend.Cminorgenproof <> transl_expr_correct thm
R57728:57731 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R57728:57731 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
ind 57861:57870 <> match_cont
constr 57958:57968 <> match_Kstop
constr 58048:58057 <> match_Kseq
constr 58240:58250 <> match_Kseq2
constr 58503:58514 <> match_Kblock
constr 58660:58672 <> match_Kblock2
constr 58798:58808 <> match_Kcall
R57933:57941 compcert.cfrontend.Cminorgenproof <> callstack def
R57921:57928 compcert.cfrontend.Cminorgen <> exit_env def
R57908:57916 compcert.cfrontend.Cminorgen <> compilenv def
R57893:57903 compcert.backend.Cminor <> cont ind
R57873:57888 compcert.cfrontend.Csharpminor <> cont ind
R57995:58004 compcert.cfrontend.Cminorgenproof <> match_cont ind
R58040:58042 Coq.Init.Datatypes <> nil constr
R58035:58038 compcert.cfrontend.Cminorgenproof <> xenv var
R58030:58033 compcert.cfrontend.Cminorgenproof <> cenv var
R58024:58028 compcert.backend.Cminor <> Kstop constr
R58006:58022 compcert.cfrontend.Csharpminor <> Kstop constr
R58176:58185 compcert.cfrontend.Cminorgenproof <> match_cont ind
R58233:58234 compcert.cfrontend.Cminorgenproof <> cs var
R58228:58231 compcert.cfrontend.Cminorgenproof <> xenv var
R58223:58226 compcert.cfrontend.Cminorgenproof <> cenv var
R58211:58214 compcert.backend.Cminor <> Kseq constr
R58219:58220 compcert.cfrontend.Cminorgenproof <> tk var
R58216:58217 compcert.cfrontend.Cminorgenproof <> ts var
R58188:58203 compcert.cfrontend.Csharpminor <> Kseq constr
R58207:58207 compcert.cfrontend.Cminorgenproof <> k var
R58205:58205 compcert.cfrontend.Cminorgenproof <> s var
R58138:58147 compcert.cfrontend.Cminorgenproof <> match_cont ind
R58164:58165 compcert.cfrontend.Cminorgenproof <> cs var
R58159:58162 compcert.cfrontend.Cminorgenproof <> xenv var
R58154:58157 compcert.cfrontend.Cminorgenproof <> cenv var
R58151:58152 compcert.cfrontend.Cminorgenproof <> tk var
R58149:58149 compcert.cfrontend.Cminorgenproof <> k var
R58120:58122 Coq.Init.Logic <> :type_scope:x_'='_x not
R58097:58107 compcert.cfrontend.Cminorgen <> transl_stmt def
R58119:58119 compcert.cfrontend.Cminorgenproof <> s var
R58114:58117 compcert.cfrontend.Cminorgenproof <> xenv var
R58109:58112 compcert.cfrontend.Cminorgenproof <> cenv var
R58123:58124 compcert.common.Errors <> OK constr
R58126:58127 compcert.cfrontend.Cminorgenproof <> ts var
R58398:58407 compcert.cfrontend.Cminorgenproof <> match_cont ind
R58496:58497 compcert.cfrontend.Cminorgenproof <> cs var
R58491:58494 compcert.cfrontend.Cminorgenproof <> xenv var
R58486:58489 compcert.cfrontend.Cminorgenproof <> cenv var
R58473:58476 compcert.backend.Cminor <> Kseq constr
R58482:58483 compcert.cfrontend.Cminorgenproof <> tk var
R58478:58480 compcert.cfrontend.Cminorgenproof <> ts1 var
R58410:58425 compcert.cfrontend.Csharpminor <> Kseq constr
R58452:58452 compcert.cfrontend.Cminorgenproof <> k var
R58428:58443 compcert.cfrontend.Csharpminor <> Sseq constr
R58448:58449 compcert.cfrontend.Cminorgenproof <> s2 var
R58445:58446 compcert.cfrontend.Cminorgenproof <> s1 var
R58338:58347 compcert.cfrontend.Cminorgenproof <> match_cont ind
R58386:58387 compcert.cfrontend.Cminorgenproof <> cs var
R58381:58384 compcert.cfrontend.Cminorgenproof <> xenv var
R58376:58379 compcert.cfrontend.Cminorgenproof <> cenv var
R58373:58374 compcert.cfrontend.Cminorgenproof <> tk var
R58350:58365 compcert.cfrontend.Csharpminor <> Kseq constr
R58370:58370 compcert.cfrontend.Cminorgenproof <> k var
R58367:58368 compcert.cfrontend.Cminorgenproof <> s2 var
R58319:58321 Coq.Init.Logic <> :type_scope:x_'='_x not
R58295:58305 compcert.cfrontend.Cminorgen <> transl_stmt def
R58317:58318 compcert.cfrontend.Cminorgenproof <> s1 var
R58312:58315 compcert.cfrontend.Cminorgenproof <> xenv var
R58307:58310 compcert.cfrontend.Cminorgenproof <> cenv var
R58322:58323 compcert.common.Errors <> OK constr
R58325:58327 compcert.cfrontend.Cminorgenproof <> ts1 var
R58587:58596 compcert.cfrontend.Cminorgenproof <> match_cont ind
R58653:58654 compcert.cfrontend.Cminorgenproof <> cs var
R58643:58646 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58639:58642 Coq.Init.Datatypes <> true constr
R58647:58650 compcert.cfrontend.Cminorgenproof <> xenv var
R58633:58636 compcert.cfrontend.Cminorgenproof <> cenv var
R58622:58627 compcert.backend.Cminor <> Kblock constr
R58629:58630 compcert.cfrontend.Cminorgenproof <> tk var
R58599:58616 compcert.cfrontend.Csharpminor <> Kblock constr
R58618:58618 compcert.cfrontend.Cminorgenproof <> k var
R58549:58558 compcert.cfrontend.Cminorgenproof <> match_cont ind
R58575:58576 compcert.cfrontend.Cminorgenproof <> cs var
R58570:58573 compcert.cfrontend.Cminorgenproof <> xenv var
R58565:58568 compcert.cfrontend.Cminorgenproof <> cenv var
R58562:58563 compcert.cfrontend.Cminorgenproof <> tk var
R58560:58560 compcert.cfrontend.Cminorgenproof <> k var
R58745:58754 compcert.cfrontend.Cminorgenproof <> match_cont ind
R58791:58792 compcert.cfrontend.Cminorgenproof <> cs var
R58781:58784 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58776:58780 Coq.Init.Datatypes <> false constr
R58785:58788 compcert.cfrontend.Cminorgenproof <> xenv var
R58770:58773 compcert.cfrontend.Cminorgenproof <> cenv var
R58759:58764 compcert.backend.Cminor <> Kblock constr
R58766:58767 compcert.cfrontend.Cminorgenproof <> tk var
R58756:58756 compcert.cfrontend.Cminorgenproof <> k var
R58707:58716 compcert.cfrontend.Cminorgenproof <> match_cont ind
R58733:58734 compcert.cfrontend.Cminorgenproof <> cs var
R58728:58731 compcert.cfrontend.Cminorgenproof <> xenv var
R58723:58726 compcert.cfrontend.Cminorgenproof <> cenv var
R58720:58721 compcert.cfrontend.Cminorgenproof <> tk var
R58718:58718 compcert.cfrontend.Cminorgenproof <> k var
R58964:58973 compcert.cfrontend.Cminorgenproof <> match_cont ind
R59147:59150 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59116:59120 compcert.cfrontend.Cminorgenproof <> Frame constr
R59145:59146 compcert.cfrontend.Cminorgenproof <> hi var
R59142:59143 compcert.cfrontend.Cminorgenproof <> lo var
R59139:59140 compcert.cfrontend.Cminorgenproof <> sp var
R59136:59137 compcert.cfrontend.Cminorgenproof <> te var
R59133:59134 compcert.cfrontend.Cminorgenproof <> le var
R59131:59131 compcert.cfrontend.Cminorgenproof <> e var
R59127:59129 compcert.cfrontend.Cminorgenproof <> tfn var
R59122:59125 compcert.cfrontend.Cminorgenproof <> cenv var
R59151:59152 compcert.cfrontend.Cminorgenproof <> cs var
R59094:59096 Coq.Init.Datatypes <> nil constr
R59088:59092 compcert.cfrontend.Cminorgenproof <> cenv' var
R59029:59033 compcert.backend.Cminor <> Kcall constr
R59067:59068 compcert.cfrontend.Cminorgenproof <> tk var
R59064:59065 compcert.cfrontend.Cminorgenproof <> te var
R59046:59049 compcert.common.Values <> Vptr constr
R59054:59061 compcert.lib.Integers Int zero def
R59051:59052 compcert.cfrontend.Cminorgenproof <> sp var
R59041:59043 compcert.cfrontend.Cminorgenproof <> tfn var
R59035:59039 compcert.cfrontend.Cminorgenproof <> optid var
R58976:58992 compcert.cfrontend.Csharpminor <> Kcall constr
R59008:59008 compcert.cfrontend.Cminorgenproof <> k var
R59005:59006 compcert.cfrontend.Cminorgenproof <> le var
R59003:59003 compcert.cfrontend.Cminorgenproof <> e var
R59000:59001 compcert.cfrontend.Cminorgenproof <> fn var
R58994:58998 compcert.cfrontend.Cminorgenproof <> optid var
R58926:58935 compcert.cfrontend.Cminorgenproof <> match_cont ind
R58952:58953 compcert.cfrontend.Cminorgenproof <> cs var
R58947:58950 compcert.cfrontend.Cminorgenproof <> xenv var
R58942:58945 compcert.cfrontend.Cminorgenproof <> cenv var
R58939:58940 compcert.cfrontend.Cminorgenproof <> tk var
R58937:58937 compcert.cfrontend.Cminorgenproof <> k var
R58907:58909 Coq.Init.Logic <> :type_scope:x_'='_x not
R58882:58895 compcert.cfrontend.Cminorgen <> transl_funbody def
R58905:58906 compcert.cfrontend.Cminorgenproof <> fn var
R58902:58903 compcert.cfrontend.Cminorgenproof <> sz var
R58897:58900 compcert.cfrontend.Cminorgenproof <> cenv var
R58910:58911 compcert.common.Errors <> OK constr
R58913:58915 compcert.cfrontend.Cminorgenproof <> tfn var
ind 59167:59178 <> match_states
constr 59230:59240 <> match_state
constr 59741:59755 <> match_state_seq
constr 60309:60323 <> match_callstate
constr 60757:60773 <> match_returnstate
R59202:59213 compcert.backend.Cminor <> state ind
R59181:59197 compcert.cfrontend.Csharpminor <> state ind
R59350:59352 Coq.Init.Logic <> :type_scope:x_'='_x not
R59325:59338 compcert.cfrontend.Cminorgen <> transl_funbody def
R59348:59349 compcert.cfrontend.Cminorgenproof <> fn var
R59345:59346 compcert.cfrontend.Cminorgenproof <> sz var
R59340:59343 compcert.cfrontend.Cminorgenproof <> cenv var
R59353:59354 compcert.common.Errors <> OK constr
R59356:59358 compcert.cfrontend.Cminorgenproof <> tfn var
R59395:59397 Coq.Init.Logic <> :type_scope:x_'='_x not
R59372:59382 compcert.cfrontend.Cminorgen <> transl_stmt def
R59394:59394 compcert.cfrontend.Cminorgenproof <> s var
R59389:59392 compcert.cfrontend.Cminorgenproof <> xenv var
R59384:59387 compcert.cfrontend.Cminorgenproof <> cenv var
R59398:59399 compcert.common.Errors <> OK constr
R59401:59402 compcert.cfrontend.Cminorgenproof <> ts var
R59418:59427 compcert.common.Memory Mem inject def
R59433:59434 compcert.cfrontend.Cminorgenproof <> tm var
R59431:59431 compcert.cfrontend.Cminorgenproof <> m var
R59429:59429 compcert.cfrontend.Cminorgenproof <> f var
R59449:59463 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R59561:59573 compcert.common.Memory Mem nextblock proj
R59575:59576 compcert.cfrontend.Cminorgenproof <> tm var
R59543:59555 compcert.common.Memory Mem nextblock proj
R59557:59557 compcert.cfrontend.Cminorgenproof <> m var
R59519:59522 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59488:59492 compcert.cfrontend.Cminorgenproof <> Frame constr
R59517:59518 compcert.cfrontend.Cminorgenproof <> hi var
R59514:59515 compcert.cfrontend.Cminorgenproof <> lo var
R59511:59512 compcert.cfrontend.Cminorgenproof <> sp var
R59508:59509 compcert.cfrontend.Cminorgenproof <> te var
R59505:59506 compcert.cfrontend.Cminorgenproof <> le var
R59503:59503 compcert.cfrontend.Cminorgenproof <> e var
R59499:59501 compcert.cfrontend.Cminorgenproof <> tfn var
R59494:59497 compcert.cfrontend.Cminorgenproof <> cenv var
R59523:59524 compcert.cfrontend.Cminorgenproof <> cs var
R59469:59470 compcert.cfrontend.Cminorgenproof <> tm var
R59467:59467 compcert.cfrontend.Cminorgenproof <> m var
R59465:59465 compcert.cfrontend.Cminorgenproof <> f var
R59591:59600 compcert.cfrontend.Cminorgenproof <> match_cont ind
R59617:59618 compcert.cfrontend.Cminorgenproof <> cs var
R59612:59615 compcert.cfrontend.Cminorgenproof <> xenv var
R59607:59610 compcert.cfrontend.Cminorgenproof <> cenv var
R59604:59605 compcert.cfrontend.Cminorgenproof <> tk var
R59602:59602 compcert.cfrontend.Cminorgenproof <> k var
R59628:59639 compcert.cfrontend.Cminorgenproof <> match_states ind
R59695:59699 compcert.backend.Cminor <> State constr
R59733:59734 compcert.cfrontend.Cminorgenproof <> tm var
R59730:59731 compcert.cfrontend.Cminorgenproof <> te var
R59712:59715 compcert.common.Values <> Vptr constr
R59720:59727 compcert.lib.Integers Int zero def
R59717:59718 compcert.cfrontend.Cminorgenproof <> sp var
R59708:59709 compcert.cfrontend.Cminorgenproof <> tk var
R59705:59706 compcert.cfrontend.Cminorgenproof <> ts var
R59701:59703 compcert.cfrontend.Cminorgenproof <> tfn var
R59642:59658 compcert.cfrontend.Csharpminor <> State constr
R59672:59672 compcert.cfrontend.Cminorgenproof <> m var
R59669:59670 compcert.cfrontend.Cminorgenproof <> le var
R59667:59667 compcert.cfrontend.Cminorgenproof <> e var
R59665:59665 compcert.cfrontend.Cminorgenproof <> k var
R59663:59663 compcert.cfrontend.Cminorgenproof <> s var
R59660:59661 compcert.cfrontend.Cminorgenproof <> fn var
R59870:59872 Coq.Init.Logic <> :type_scope:x_'='_x not
R59845:59858 compcert.cfrontend.Cminorgen <> transl_funbody def
R59868:59869 compcert.cfrontend.Cminorgenproof <> fn var
R59865:59866 compcert.cfrontend.Cminorgenproof <> sz var
R59860:59863 compcert.cfrontend.Cminorgenproof <> cenv var
R59873:59874 compcert.common.Errors <> OK constr
R59876:59878 compcert.cfrontend.Cminorgenproof <> tfn var
R59916:59918 Coq.Init.Logic <> :type_scope:x_'='_x not
R59892:59902 compcert.cfrontend.Cminorgen <> transl_stmt def
R59914:59915 compcert.cfrontend.Cminorgenproof <> s1 var
R59909:59912 compcert.cfrontend.Cminorgenproof <> xenv var
R59904:59907 compcert.cfrontend.Cminorgenproof <> cenv var
R59919:59920 compcert.common.Errors <> OK constr
R59922:59924 compcert.cfrontend.Cminorgenproof <> ts1 var
R59940:59949 compcert.common.Memory Mem inject def
R59955:59956 compcert.cfrontend.Cminorgenproof <> tm var
R59953:59953 compcert.cfrontend.Cminorgenproof <> m var
R59951:59951 compcert.cfrontend.Cminorgenproof <> f var
R59971:59985 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R60083:60095 compcert.common.Memory Mem nextblock proj
R60097:60098 compcert.cfrontend.Cminorgenproof <> tm var
R60065:60077 compcert.common.Memory Mem nextblock proj
R60079:60079 compcert.cfrontend.Cminorgenproof <> m var
R60041:60044 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R60010:60014 compcert.cfrontend.Cminorgenproof <> Frame constr
R60039:60040 compcert.cfrontend.Cminorgenproof <> hi var
R60036:60037 compcert.cfrontend.Cminorgenproof <> lo var
R60033:60034 compcert.cfrontend.Cminorgenproof <> sp var
R60030:60031 compcert.cfrontend.Cminorgenproof <> te var
R60027:60028 compcert.cfrontend.Cminorgenproof <> le var
R60025:60025 compcert.cfrontend.Cminorgenproof <> e var
R60021:60023 compcert.cfrontend.Cminorgenproof <> tfn var
R60016:60019 compcert.cfrontend.Cminorgenproof <> cenv var
R60045:60046 compcert.cfrontend.Cminorgenproof <> cs var
R59991:59992 compcert.cfrontend.Cminorgenproof <> tm var
R59989:59989 compcert.cfrontend.Cminorgenproof <> m var
R59987:59987 compcert.cfrontend.Cminorgenproof <> f var
R60113:60122 compcert.cfrontend.Cminorgenproof <> match_cont ind
R60161:60162 compcert.cfrontend.Cminorgenproof <> cs var
R60156:60159 compcert.cfrontend.Cminorgenproof <> xenv var
R60151:60154 compcert.cfrontend.Cminorgenproof <> cenv var
R60148:60149 compcert.cfrontend.Cminorgenproof <> tk var
R60125:60140 compcert.cfrontend.Csharpminor <> Kseq constr
R60145:60145 compcert.cfrontend.Cminorgenproof <> k var
R60142:60143 compcert.cfrontend.Cminorgenproof <> s2 var
R60172:60183 compcert.cfrontend.Cminorgenproof <> match_states ind
R60262:60266 compcert.backend.Cminor <> State constr
R60301:60302 compcert.cfrontend.Cminorgenproof <> tm var
R60298:60299 compcert.cfrontend.Cminorgenproof <> te var
R60280:60283 compcert.common.Values <> Vptr constr
R60288:60295 compcert.lib.Integers Int zero def
R60285:60286 compcert.cfrontend.Cminorgenproof <> sp var
R60276:60277 compcert.cfrontend.Cminorgenproof <> tk var
R60272:60274 compcert.cfrontend.Cminorgenproof <> ts1 var
R60268:60270 compcert.cfrontend.Cminorgenproof <> tfn var
R60186:60202 compcert.cfrontend.Csharpminor <> State constr
R60239:60239 compcert.cfrontend.Cminorgenproof <> m var
R60236:60237 compcert.cfrontend.Cminorgenproof <> le var
R60234:60234 compcert.cfrontend.Cminorgenproof <> e var
R60232:60232 compcert.cfrontend.Cminorgenproof <> k var
R60208:60223 compcert.cfrontend.Csharpminor <> Sseq constr
R60228:60229 compcert.cfrontend.Cminorgenproof <> s2 var
R60225:60226 compcert.cfrontend.Cminorgenproof <> s1 var
R60204:60205 compcert.cfrontend.Cminorgenproof <> fn var
R60404:60406 Coq.Init.Logic <> :type_scope:x_'='_x not
R60388:60400 compcert.cfrontend.Cminorgen <> transl_fundef def
R60402:60403 compcert.cfrontend.Cminorgenproof <> fd var
R60407:60408 compcert.common.Errors <> OK constr
R60410:60412 compcert.cfrontend.Cminorgenproof <> tfd var
R60428:60437 compcert.common.Memory Mem inject def
R60443:60444 compcert.cfrontend.Cminorgenproof <> tm var
R60441:60441 compcert.cfrontend.Cminorgenproof <> m var
R60439:60439 compcert.cfrontend.Cminorgenproof <> f var
R60459:60473 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R60504:60516 compcert.common.Memory Mem nextblock proj
R60518:60519 compcert.cfrontend.Cminorgenproof <> tm var
R60486:60498 compcert.common.Memory Mem nextblock proj
R60500:60500 compcert.cfrontend.Cminorgenproof <> m var
R60482:60483 compcert.cfrontend.Cminorgenproof <> cs var
R60479:60480 compcert.cfrontend.Cminorgenproof <> tm var
R60477:60477 compcert.cfrontend.Cminorgenproof <> m var
R60475:60475 compcert.cfrontend.Cminorgenproof <> f var
R60534:60543 compcert.cfrontend.Cminorgenproof <> match_cont ind
R60559:60560 compcert.cfrontend.Cminorgenproof <> cs var
R60555:60557 Coq.Init.Datatypes <> nil constr
R60550:60553 compcert.cfrontend.Cminorgenproof <> cenv var
R60547:60548 compcert.cfrontend.Cminorgenproof <> tk var
R60545:60545 compcert.cfrontend.Cminorgenproof <> k var
R60576:60599 compcert.cfrontend.Csharpminor <> is_call_cont def
R60601:60601 compcert.cfrontend.Cminorgenproof <> k var
R60620:60634 compcert.common.Values <> val_list_inject ind
R60643:60647 compcert.cfrontend.Cminorgenproof <> targs var
R60638:60641 compcert.cfrontend.Cminorgenproof <> args var
R60636:60636 compcert.cfrontend.Cminorgenproof <> f var
R60657:60668 compcert.cfrontend.Cminorgenproof <> match_states ind
R60726:60734 compcert.backend.Cminor <> Callstate constr
R60749:60750 compcert.cfrontend.Cminorgenproof <> tm var
R60746:60747 compcert.cfrontend.Cminorgenproof <> tk var
R60740:60744 compcert.cfrontend.Cminorgenproof <> targs var
R60736:60738 compcert.cfrontend.Cminorgenproof <> tfd var
R60671:60691 compcert.cfrontend.Csharpminor <> Callstate constr
R60703:60703 compcert.cfrontend.Cminorgenproof <> m var
R60701:60701 compcert.cfrontend.Cminorgenproof <> k var
R60696:60699 compcert.cfrontend.Cminorgenproof <> args var
R60693:60694 compcert.cfrontend.Cminorgenproof <> fd var
R60827:60836 compcert.common.Memory Mem inject def
R60842:60843 compcert.cfrontend.Cminorgenproof <> tm var
R60840:60840 compcert.cfrontend.Cminorgenproof <> m var
R60838:60838 compcert.cfrontend.Cminorgenproof <> f var
R60858:60872 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R60903:60915 compcert.common.Memory Mem nextblock proj
R60917:60918 compcert.cfrontend.Cminorgenproof <> tm var
R60885:60897 compcert.common.Memory Mem nextblock proj
R60899:60899 compcert.cfrontend.Cminorgenproof <> m var
R60881:60882 compcert.cfrontend.Cminorgenproof <> cs var
R60878:60879 compcert.cfrontend.Cminorgenproof <> tm var
R60876:60876 compcert.cfrontend.Cminorgenproof <> m var
R60874:60874 compcert.cfrontend.Cminorgenproof <> f var
R60933:60942 compcert.cfrontend.Cminorgenproof <> match_cont ind
R60958:60959 compcert.cfrontend.Cminorgenproof <> cs var
R60954:60956 Coq.Init.Datatypes <> nil constr
R60949:60952 compcert.cfrontend.Cminorgenproof <> cenv var
R60946:60947 compcert.cfrontend.Cminorgenproof <> tk var
R60944:60944 compcert.cfrontend.Cminorgenproof <> k var
R60977:60986 compcert.common.Values <> val_inject ind
R60992:60993 compcert.cfrontend.Cminorgenproof <> tv var
R60990:60990 compcert.cfrontend.Cminorgenproof <> v var
R60988:60988 compcert.cfrontend.Cminorgenproof <> f var
R61003:61014 compcert.cfrontend.Cminorgenproof <> match_states ind
R61068:61078 compcert.backend.Cminor <> Returnstate constr
R61086:61087 compcert.cfrontend.Cminorgenproof <> tm var
R61083:61084 compcert.cfrontend.Cminorgenproof <> tk var
R61080:61081 compcert.cfrontend.Cminorgenproof <> tv var
R61017:61039 compcert.cfrontend.Csharpminor <> Returnstate constr
R61045:61045 compcert.cfrontend.Cminorgenproof <> m var
R61043:61043 compcert.cfrontend.Cminorgenproof <> k var
R61041:61041 compcert.cfrontend.Cminorgenproof <> v var
prf 61099:61125 <> val_inject_function_pointer
R61247:61249 Coq.Init.Logic <> :type_scope:x_'='_x not
R61245:61246 compcert.cfrontend.Cminorgenproof <> tv var
R61250:61250 compcert.cfrontend.Cminorgenproof <> v var
R61222:61231 compcert.common.Values <> val_inject ind
R61237:61238 compcert.cfrontend.Cminorgenproof <> tv var
R61235:61235 compcert.cfrontend.Cminorgenproof <> v var
R61233:61233 compcert.cfrontend.Cminorgenproof <> f var
R61192:61207 compcert.cfrontend.Cminorgenproof <> match_globalenvs ind
R61211:61215 compcert.cfrontend.Cminorgenproof <> bound var
R61209:61209 compcert.cfrontend.Cminorgenproof <> f var
R61176:61178 Coq.Init.Logic <> :type_scope:x_'='_x not
R61156:61170 compcert.common.Globalenvs Genv find_funct def
R61175:61175 compcert.cfrontend.Cminorgenproof <> v var
R61172:61173 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R61179:61182 Coq.Init.Datatypes <> Some constr
R61184:61185 compcert.cfrontend.Cminorgenproof <> fd var
R61278:61296 compcert.common.Globalenvs Genv find_funct_inv thm
R61340:61369 compcert.common.Globalenvs Genv find_funct_find_funct_ptr thm
R61340:61369 compcert.common.Globalenvs Genv find_funct_find_funct_ptr thm
R61390:61392 Coq.Init.Logic <> :type_scope:x_'='_x not
R61393:61396 Coq.Init.Datatypes <> Some constr
R61397:61397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61399:61400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61402:61402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61390:61392 Coq.Init.Logic <> :type_scope:x_'='_x not
R61393:61396 Coq.Init.Datatypes <> Some constr
R61397:61397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61399:61400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61402:61402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 61514:61528 <> match_call_cont
R61595:61604 compcert.cfrontend.Cminorgenproof <> match_cont ind
R61656:61657 compcert.cfrontend.Cminorgenproof <> cs var
R61652:61654 Coq.Init.Datatypes <> nil constr
R61647:61650 compcert.cfrontend.Cminorgenproof <> cenv var
R61633:61641 compcert.backend.Cminor <> call_cont def
R61643:61644 compcert.cfrontend.Cminorgenproof <> tk var
R61607:61627 compcert.cfrontend.Csharpminor <> call_cont def
R61629:61629 compcert.cfrontend.Cminorgenproof <> k var
R61561:61570 compcert.cfrontend.Cminorgenproof <> match_cont ind
R61587:61588 compcert.cfrontend.Cminorgenproof <> cs var
R61582:61585 compcert.cfrontend.Cminorgenproof <> xenv var
R61577:61580 compcert.cfrontend.Cminorgenproof <> cenv var
R61574:61575 compcert.cfrontend.Cminorgenproof <> tk var
R61572:61572 compcert.cfrontend.Cminorgenproof <> k var
prf 61728:61745 <> match_is_call_cont
R61857:61863 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R61867:61872 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R61965:61972 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61873:61876 compcert.common.Smallstep <> star ind
R61936:61940 compcert.backend.Cminor <> State constr
R61962:61963 compcert.cfrontend.Cminorgenproof <> tm var
R61959:61960 compcert.cfrontend.Cminorgenproof <> te var
R61956:61957 compcert.cfrontend.Cminorgenproof <> sp var
R61952:61954 compcert.cfrontend.Cminorgenproof <> tk' var
R61946:61950 compcert.backend.Cminor <> Sskip constr
R61942:61944 compcert.cfrontend.Cminorgenproof <> tfn var
R61932:61933 compcert.common.Events <> E0 def
R61888:61892 compcert.backend.Cminor <> State constr
R61913:61914 compcert.cfrontend.Cminorgenproof <> tm var
R61910:61911 compcert.cfrontend.Cminorgenproof <> te var
R61907:61908 compcert.cfrontend.Cminorgenproof <> sp var
R61904:61905 compcert.cfrontend.Cminorgenproof <> tk var
R61898:61902 compcert.backend.Cminor <> Sskip constr
R61894:61896 compcert.cfrontend.Cminorgenproof <> tfn var
R61883:61885 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R61878:61881 compcert.backend.Cminor <> step ind
R61989:61996 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61973:61984 compcert.backend.Cminor <> is_call_cont def
R61986:61988 compcert.cfrontend.Cminorgenproof <> tk' var
R61997:62006 compcert.cfrontend.Cminorgenproof <> match_cont ind
R62023:62024 compcert.cfrontend.Cminorgenproof <> cs var
R62019:62021 Coq.Init.Datatypes <> nil constr
R62014:62017 compcert.cfrontend.Cminorgenproof <> cenv var
R62010:62012 compcert.cfrontend.Cminorgenproof <> tk' var
R62008:62008 compcert.cfrontend.Cminorgenproof <> k var
R61825:61848 compcert.cfrontend.Csharpminor <> is_call_cont def
R61850:61850 compcert.cfrontend.Cminorgenproof <> k var
R61791:61800 compcert.cfrontend.Cminorgenproof <> match_cont ind
R61817:61818 compcert.cfrontend.Cminorgenproof <> cs var
R61812:61815 compcert.cfrontend.Cminorgenproof <> xenv var
R61807:61810 compcert.cfrontend.Cminorgenproof <> cenv var
R61804:61805 compcert.cfrontend.Cminorgenproof <> tk var
R61802:61802 compcert.cfrontend.Cminorgenproof <> k var
R62112:62120 compcert.common.Smallstep <> star_refl constr
R62112:62120 compcert.common.Smallstep <> star_refl constr
R62136:62136 Coq.Init.Logic <> I constr
R62136:62136 Coq.Init.Logic <> I constr
R62241:62249 compcert.common.Smallstep <> star_left thm
R62241:62249 compcert.common.Smallstep <> star_left thm
R62316:62324 compcert.common.Smallstep <> star_refl constr
R62316:62324 compcert.common.Smallstep <> star_refl constr
R62340:62340 Coq.Init.Logic <> I constr
R62340:62340 Coq.Init.Logic <> I constr
ind 62423:62435 <> lbl_stmt_tail
constr 62481:62488 <> lstail_O
constr 62534:62541 <> lstail_S
R62457:62464 compcert.cfrontend.Csharpminor <> lbl_stmt ind
R62450:62452 Coq.Init.Datatypes <> nat ind
R62438:62445 compcert.cfrontend.Csharpminor <> lbl_stmt ind
R62508:62520 compcert.cfrontend.Cminorgenproof <> lbl_stmt_tail ind
R62527:62528 compcert.cfrontend.Cminorgenproof <> sl var
R62525:62525 Coq.Init.Datatypes <> O constr
R62522:62523 compcert.cfrontend.Cminorgenproof <> sl var
R62603:62615 compcert.cfrontend.Cminorgenproof <> lbl_stmt_tail ind
R62639:62641 compcert.cfrontend.Cminorgenproof <> sl' var
R62634:62634 Coq.Init.Datatypes <> S constr
R62636:62636 compcert.cfrontend.Cminorgenproof <> n var
R62618:62623 compcert.cfrontend.Csharpminor <> LScons constr
R62629:62630 compcert.cfrontend.Cminorgenproof <> sl var
R62627:62627 compcert.cfrontend.Cminorgenproof <> s var
R62625:62625 compcert.cfrontend.Cminorgenproof <> c var
R62571:62583 compcert.cfrontend.Cminorgenproof <> lbl_stmt_tail ind
R62590:62592 compcert.cfrontend.Cminorgenproof <> sl' var
R62588:62588 compcert.cfrontend.Cminorgenproof <> n var
R62585:62586 compcert.cfrontend.Cminorgenproof <> sl var
prf 62651:62670 <> switch_table_default
R62693:62699 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R62701:62708 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R62754:62759 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R62709:62721 compcert.cfrontend.Cminorgenproof <> lbl_stmt_tail ind
R62729:62749 compcert.cfrontend.Csharpminor <> select_switch_default def
R62751:62752 compcert.cfrontend.Cminorgenproof <> sl var
R62726:62726 compcert.cfrontend.Cminorgenproof <> n var
R62723:62724 compcert.cfrontend.Cminorgenproof <> sl var
R62786:62788 Coq.Init.Logic <> :type_scope:x_'='_x not
R62760:62762 Coq.Init.Datatypes <> snd def
R62765:62776 compcert.cfrontend.Cminorgen <> switch_table def
R62781:62784 compcert.cfrontend.Cminorgenproof <> base var
R62778:62779 compcert.cfrontend.Cminorgenproof <> sl var
R62791:62793 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R62790:62790 compcert.cfrontend.Cminorgenproof <> n var
R62794:62797 compcert.cfrontend.Cminorgenproof <> base var
R62852:62852 Coq.Init.Datatypes <> O constr
R62852:62852 Coq.Init.Datatypes <> O constr
R62917:62917 Coq.Init.Datatypes <> S constr
R62917:62917 Coq.Init.Datatypes <> S constr
R62950:62950 Coq.Init.Datatypes <> S constr
R62950:62950 Coq.Init.Datatypes <> S constr
R63002:63013 compcert.cfrontend.Cminorgen <> switch_table def
R63019:63019 Coq.Init.Datatypes <> S constr
R63002:63013 compcert.cfrontend.Cminorgen <> switch_table def
R63019:63019 Coq.Init.Datatypes <> S constr
R63072:63072 Coq.Init.Datatypes <> O constr
R63072:63072 Coq.Init.Datatypes <> O constr
R63110:63121 compcert.cfrontend.Cminorgen <> switch_table def
R63127:63127 Coq.Init.Datatypes <> S constr
R63110:63121 compcert.cfrontend.Cminorgen <> switch_table def
R63127:63127 Coq.Init.Datatypes <> S constr
prf 63180:63196 <> switch_table_case
R63231:63248 compcert.cfrontend.Csharpminor <> select_switch_case def
R63252:63253 compcert.cfrontend.Cminorgenproof <> sl var
R63250:63250 compcert.cfrontend.Cminorgenproof <> i var
R63264:63267 Coq.Init.Datatypes <> None constr
R63326:63328 Coq.Init.Logic <> :type_scope:x_'='_x not
R63278:63290 compcert.common.Switch <> switch_target def
R63299:63301 Coq.Init.Datatypes <> fst def
R63304:63315 compcert.cfrontend.Cminorgen <> switch_table def
R63320:63323 compcert.cfrontend.Cminorgenproof <> base var
R63317:63318 compcert.cfrontend.Cminorgenproof <> sl var
R63294:63296 compcert.cfrontend.Cminorgenproof <> dfl var
R63292:63292 compcert.cfrontend.Cminorgenproof <> i var
R63329:63331 compcert.cfrontend.Cminorgenproof <> dfl var
R63337:63340 Coq.Init.Datatypes <> Some constr
R63355:63361 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63363:63373 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63396:63405 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R63374:63386 compcert.cfrontend.Cminorgenproof <> lbl_stmt_tail ind
R63391:63391 compcert.cfrontend.Cminorgenproof <> n var
R63388:63389 compcert.cfrontend.Cminorgenproof <> sl var
R63454:63456 Coq.Init.Logic <> :type_scope:x_'='_x not
R63406:63418 compcert.common.Switch <> switch_target def
R63427:63429 Coq.Init.Datatypes <> fst def
R63432:63443 compcert.cfrontend.Cminorgen <> switch_table def
R63448:63451 compcert.cfrontend.Cminorgenproof <> base var
R63445:63446 compcert.cfrontend.Cminorgenproof <> sl var
R63422:63424 compcert.cfrontend.Cminorgenproof <> dfl var
R63420:63420 compcert.cfrontend.Cminorgenproof <> i var
R63459:63461 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R63458:63458 compcert.cfrontend.Cminorgenproof <> n var
R63462:63465 compcert.cfrontend.Cminorgenproof <> base var
R63537:63548 compcert.cfrontend.Cminorgen <> switch_table def
R63554:63554 Coq.Init.Datatypes <> S constr
R63537:63548 compcert.cfrontend.Cminorgen <> switch_table def
R63554:63554 Coq.Init.Datatypes <> S constr
R63618:63627 compcert.lib.Coqlib <> dec_eq_sym thm
R63618:63627 compcert.lib.Coqlib <> dec_eq_sym thm
R63640:63642 compcert.lib.Coqlib <> zeq def
R63640:63642 compcert.lib.Coqlib <> zeq def
R63659:63659 Coq.Init.Datatypes <> O constr
R63659:63659 Coq.Init.Datatypes <> O constr
R63708:63708 Coq.Init.Datatypes <> S constr
R63708:63708 Coq.Init.Datatypes <> S constr
R63766:63783 compcert.cfrontend.Csharpminor <> select_switch_case def
R63766:63783 compcert.cfrontend.Csharpminor <> select_switch_case def
R63832:63832 Coq.Init.Datatypes <> S constr
R63832:63832 Coq.Init.Datatypes <> S constr
R63900:63900 Coq.Init.Datatypes <> S constr
R63900:63900 Coq.Init.Datatypes <> S constr
R63958:63975 compcert.cfrontend.Csharpminor <> select_switch_case def
R63958:63975 compcert.cfrontend.Csharpminor <> select_switch_case def
R64024:64024 Coq.Init.Datatypes <> S constr
R64024:64024 Coq.Init.Datatypes <> S constr
prf 64084:64102 <> switch_table_select
R64122:64134 compcert.cfrontend.Cminorgenproof <> lbl_stmt_tail ind
R64242:64254 compcert.cfrontend.Csharpminor <> select_switch def
R64258:64259 compcert.cfrontend.Cminorgenproof <> sl var
R64256:64256 compcert.cfrontend.Cminorgenproof <> i var
R64156:64168 compcert.common.Switch <> switch_target def
R64199:64201 Coq.Init.Datatypes <> fst def
R64204:64215 compcert.cfrontend.Cminorgen <> switch_table def
R64220:64220 Coq.Init.Datatypes <> O constr
R64217:64218 compcert.cfrontend.Cminorgenproof <> sl var
R64173:64175 Coq.Init.Datatypes <> snd def
R64178:64189 compcert.cfrontend.Cminorgen <> switch_table def
R64194:64194 Coq.Init.Datatypes <> O constr
R64191:64192 compcert.cfrontend.Cminorgenproof <> sl var
R64170:64170 compcert.cfrontend.Cminorgenproof <> i var
R64136:64137 compcert.cfrontend.Cminorgenproof <> sl var
R64279:64291 compcert.cfrontend.Csharpminor <> select_switch def
R64316:64332 compcert.cfrontend.Cminorgenproof <> switch_table_case thm
R64342:64344 Coq.Init.Datatypes <> snd def
R64347:64358 compcert.cfrontend.Cminorgen <> switch_table def
R64363:64363 Coq.Init.Datatypes <> O constr
R64339:64339 Coq.Init.Datatypes <> O constr
R64316:64332 compcert.cfrontend.Cminorgenproof <> switch_table_case thm
R64342:64344 Coq.Init.Datatypes <> snd def
R64347:64358 compcert.cfrontend.Cminorgen <> switch_table def
R64363:64363 Coq.Init.Datatypes <> O constr
R64339:64339 Coq.Init.Datatypes <> O constr
R64382:64399 compcert.cfrontend.Csharpminor <> select_switch_case def
R64382:64399 compcert.cfrontend.Csharpminor <> select_switch_case def
R64450:64452 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R64453:64453 Coq.Init.Datatypes <> O constr
R64450:64452 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R64453:64453 Coq.Init.Datatypes <> O constr
R64529:64548 compcert.cfrontend.Cminorgenproof <> switch_table_default thm
R64553:64553 Coq.Init.Datatypes <> O constr
R64529:64548 compcert.cfrontend.Cminorgenproof <> switch_table_default thm
R64553:64553 Coq.Init.Datatypes <> O constr
R64584:64586 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R64587:64587 Coq.Init.Datatypes <> O constr
R64584:64586 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R64587:64587 Coq.Init.Datatypes <> O constr
ind 64644:64662 <> transl_lblstmt_cont
constr 64739:64750 <> tlsc_default
constr 64835:64843 <> tlsc_case
R64670:64678 compcert.cfrontend.Cminorgen <> compilenv def
R64688:64695 compcert.cfrontend.Cminorgen <> exit_env def
R64719:64722 compcert.backend.Cminor <> cont ind
R64711:64714 compcert.backend.Cminor <> cont ind
R64699:64706 compcert.cfrontend.Csharpminor <> lbl_stmt ind
R64769:64787 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_cont ind
R64808:64813 compcert.backend.Cminor <> Kblock constr
R64816:64819 compcert.backend.Cminor <> Kseq constr
R64827:64827 compcert.cfrontend.Cminorgenproof <> k var
R64821:64825 compcert.backend.Cminor <> Sskip constr
R64805:64805 compcert.cfrontend.Cminorgenproof <> k var
R64799:64803 compcert.cfrontend.Csharpminor <> LSnil constr
R64992:65010 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_cont ind
R65041:65046 compcert.backend.Cminor <> Kblock constr
R65049:65052 compcert.backend.Cminor <> Kseq constr
R65057:65058 compcert.cfrontend.Cminorgenproof <> k' var
R65054:65055 compcert.cfrontend.Cminorgenproof <> ts var
R65038:65038 compcert.cfrontend.Cminorgenproof <> k var
R65023:65028 compcert.cfrontend.Csharpminor <> LScons constr
R65034:65035 compcert.cfrontend.Cminorgenproof <> ls var
R65032:65032 compcert.cfrontend.Cminorgenproof <> s var
R65030:65030 compcert.cfrontend.Cminorgenproof <> i var
R64945:64963 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_cont ind
R64980:64981 compcert.cfrontend.Cminorgenproof <> k' var
R64978:64978 compcert.cfrontend.Cminorgenproof <> k var
R64975:64976 compcert.cfrontend.Cminorgenproof <> ls var
R64927:64929 Coq.Init.Logic <> :type_scope:x_'='_x not
R64875:64885 compcert.cfrontend.Cminorgen <> transl_stmt def
R64926:64926 compcert.cfrontend.Cminorgenproof <> s var
R64893:64902 compcert.cfrontend.Cminorgen <> switch_env def
R64905:64910 compcert.cfrontend.Csharpminor <> LScons constr
R64916:64917 compcert.cfrontend.Cminorgenproof <> ls var
R64914:64914 compcert.cfrontend.Cminorgenproof <> s var
R64912:64912 compcert.cfrontend.Cminorgenproof <> i var
R64930:64931 compcert.common.Errors <> OK constr
R64933:64934 compcert.cfrontend.Cminorgenproof <> ts var
prf 65070:65083 <> switch_descent
R65181:65187 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R65190:65193 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R65231:65237 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R65323:65323 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R65194:65212 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_cont ind
R65229:65230 compcert.cfrontend.Cminorgenproof <> k' var
R65227:65227 compcert.cfrontend.Cminorgenproof <> k var
R65224:65225 compcert.cfrontend.Cminorgenproof <> ls var
R65219:65222 compcert.cfrontend.Cminorgenproof <> xenv var
R65214:65217 compcert.cfrontend.Cminorgenproof <> cenv var
R65261:65264 compcert.common.Smallstep <> plus ind
R65300:65304 compcert.backend.Cminor <> State constr
R65321:65321 compcert.cfrontend.Cminorgenproof <> m var
R65319:65319 compcert.cfrontend.Cminorgenproof <> e var
R65316:65317 compcert.cfrontend.Cminorgenproof <> sp var
R65313:65314 compcert.cfrontend.Cminorgenproof <> k' var
R65308:65311 compcert.cfrontend.Cminorgenproof <> body var
R65306:65306 compcert.cfrontend.Cminorgenproof <> f var
R65296:65297 compcert.common.Events <> E0 def
R65276:65280 compcert.backend.Cminor <> State constr
R65293:65293 compcert.cfrontend.Cminorgenproof <> m var
R65291:65291 compcert.cfrontend.Cminorgenproof <> e var
R65288:65289 compcert.cfrontend.Cminorgenproof <> sp var
R65286:65286 compcert.cfrontend.Cminorgenproof <> k var
R65284:65284 compcert.cfrontend.Cminorgenproof <> s var
R65282:65282 compcert.cfrontend.Cminorgenproof <> f var
R65271:65273 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R65266:65269 compcert.backend.Cminor <> step ind
R65168:65170 Coq.Init.Logic <> :type_scope:x_'='_x not
R65120:65133 compcert.cfrontend.Cminorgen <> transl_lblstmt def
R65164:65167 compcert.cfrontend.Cminorgenproof <> body var
R65161:65162 compcert.cfrontend.Cminorgenproof <> ls var
R65141:65150 compcert.cfrontend.Cminorgen <> switch_env def
R65155:65158 compcert.cfrontend.Cminorgenproof <> xenv var
R65152:65153 compcert.cfrontend.Cminorgenproof <> ls var
R65135:65138 compcert.cfrontend.Cminorgenproof <> cenv var
R65171:65172 compcert.common.Errors <> OK constr
R65174:65174 compcert.cfrontend.Cminorgenproof <> s var
R65426:65433 compcert.common.Smallstep <> plus_two thm
R65426:65433 compcert.common.Smallstep <> plus_two thm
R65587:65601 compcert.common.Smallstep <> plus_star_trans thm
R65587:65601 compcert.common.Smallstep <> plus_star_trans thm
R65621:65629 compcert.common.Smallstep <> star_left thm
R65621:65629 compcert.common.Smallstep <> star_left thm
R65651:65658 compcert.common.Smallstep <> star_one thm
R65651:65658 compcert.common.Smallstep <> star_one thm
prf 65711:65723 <> switch_ascent
R65852:65858 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R65861:65864 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R65954:65959 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R65865:65868 compcert.common.Smallstep <> star ind
R65926:65930 compcert.backend.Cminor <> State constr
R65952:65952 compcert.cfrontend.Cminorgenproof <> m var
R65950:65950 compcert.cfrontend.Cminorgenproof <> e var
R65947:65948 compcert.cfrontend.Cminorgenproof <> sp var
R65944:65945 compcert.cfrontend.Cminorgenproof <> k2 var
R65935:65939 compcert.backend.Cminor <> Sexit constr
R65941:65941 Coq.Init.Datatypes <> O constr
R65932:65932 compcert.cfrontend.Cminorgenproof <> f var
R65922:65923 compcert.common.Events <> E0 def
R65880:65884 compcert.backend.Cminor <> State constr
R65906:65906 compcert.cfrontend.Cminorgenproof <> m var
R65904:65904 compcert.cfrontend.Cminorgenproof <> e var
R65901:65902 compcert.cfrontend.Cminorgenproof <> sp var
R65898:65899 compcert.cfrontend.Cminorgenproof <> k1 var
R65889:65893 compcert.backend.Cminor <> Sexit constr
R65895:65895 compcert.cfrontend.Cminorgenproof <> n var
R65886:65886 compcert.cfrontend.Cminorgenproof <> f var
R65875:65877 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R65870:65873 compcert.backend.Cminor <> step ind
R65960:65978 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_cont ind
R65996:65997 compcert.cfrontend.Cminorgenproof <> k2 var
R65994:65994 compcert.cfrontend.Cminorgenproof <> k var
R65990:65992 compcert.cfrontend.Cminorgenproof <> ls' var
R65985:65988 compcert.cfrontend.Cminorgenproof <> xenv var
R65980:65983 compcert.cfrontend.Cminorgenproof <> cenv var
R65809:65827 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_cont ind
R65844:65845 compcert.cfrontend.Cminorgenproof <> k1 var
R65842:65842 compcert.cfrontend.Cminorgenproof <> k var
R65839:65840 compcert.cfrontend.Cminorgenproof <> ls var
R65834:65837 compcert.cfrontend.Cminorgenproof <> xenv var
R65829:65832 compcert.cfrontend.Cminorgenproof <> cenv var
R65766:65778 compcert.cfrontend.Cminorgenproof <> lbl_stmt_tail ind
R65785:65787 compcert.cfrontend.Cminorgenproof <> ls' var
R65783:65783 compcert.cfrontend.Cminorgenproof <> n var
R65780:65781 compcert.cfrontend.Cminorgenproof <> ls var
R66063:66071 compcert.common.Smallstep <> star_refl constr
R66063:66071 compcert.common.Smallstep <> star_refl constr
R66173:66181 compcert.common.Smallstep <> star_left thm
R66173:66181 compcert.common.Smallstep <> star_left thm
R66204:66212 compcert.common.Smallstep <> star_left thm
R66204:66212 compcert.common.Smallstep <> star_left thm
prf 66266:66282 <> switch_match_cont
R66401:66410 compcert.cfrontend.Cminorgenproof <> match_cont ind
R66493:66494 compcert.cfrontend.Cminorgenproof <> cs var
R66469:66472 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66464:66468 Coq.Init.Datatypes <> false constr
R66473:66482 compcert.cfrontend.Cminorgen <> switch_env def
R66487:66490 compcert.cfrontend.Cminorgenproof <> xenv var
R66484:66485 compcert.cfrontend.Cminorgenproof <> ls var
R66458:66461 compcert.cfrontend.Cminorgenproof <> cenv var
R66454:66456 compcert.cfrontend.Cminorgenproof <> tk' var
R66413:66428 compcert.cfrontend.Csharpminor <> Kseq constr
R66451:66451 compcert.cfrontend.Cminorgenproof <> k var
R66431:66445 compcert.cfrontend.Csharpminor <> seq_of_lbl_stmt def
R66447:66448 compcert.cfrontend.Cminorgenproof <> ls var
R66356:66374 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_cont ind
R66392:66394 compcert.cfrontend.Cminorgenproof <> tk' var
R66389:66390 compcert.cfrontend.Cminorgenproof <> tk var
R66386:66387 compcert.cfrontend.Cminorgenproof <> ls var
R66381:66384 compcert.cfrontend.Cminorgenproof <> xenv var
R66376:66379 compcert.cfrontend.Cminorgenproof <> cenv var
R66322:66331 compcert.cfrontend.Cminorgenproof <> match_cont ind
R66348:66349 compcert.cfrontend.Cminorgenproof <> cs var
R66343:66346 compcert.cfrontend.Cminorgenproof <> xenv var
R66338:66341 compcert.cfrontend.Cminorgenproof <> cenv var
R66335:66336 compcert.cfrontend.Cminorgenproof <> tk var
R66333:66333 compcert.cfrontend.Cminorgenproof <> k var
R66551:66563 compcert.cfrontend.Cminorgenproof <> match_Kblock2 constr
R66551:66563 compcert.cfrontend.Cminorgenproof <> match_Kblock2 constr
R66603:66615 compcert.cfrontend.Cminorgenproof <> match_Kblock2 constr
R66603:66615 compcert.cfrontend.Cminorgenproof <> match_Kblock2 constr
R66625:66635 compcert.cfrontend.Cminorgenproof <> match_Kseq2 constr
R66625:66635 compcert.cfrontend.Cminorgenproof <> match_Kseq2 constr
prf 66664:66682 <> switch_match_states
R66796:66798 Coq.Init.Logic <> :type_scope:x_'='_x not
R66771:66784 compcert.cfrontend.Cminorgen <> transl_funbody def
R66794:66795 compcert.cfrontend.Cminorgenproof <> fn var
R66791:66792 compcert.cfrontend.Cminorgenproof <> sz var
R66786:66789 compcert.cfrontend.Cminorgenproof <> cenv var
R66799:66800 compcert.common.Errors <> OK constr
R66802:66804 compcert.cfrontend.Cminorgenproof <> tfn var
R66864:66866 Coq.Init.Logic <> :type_scope:x_'='_x not
R66816:66829 compcert.cfrontend.Cminorgen <> transl_lblstmt def
R66860:66863 compcert.cfrontend.Cminorgenproof <> body var
R66857:66858 compcert.cfrontend.Cminorgenproof <> ls var
R66837:66846 compcert.cfrontend.Cminorgen <> switch_env def
R66851:66854 compcert.cfrontend.Cminorgenproof <> xenv var
R66848:66849 compcert.cfrontend.Cminorgenproof <> ls var
R66831:66834 compcert.cfrontend.Cminorgenproof <> cenv var
R66867:66868 compcert.common.Errors <> OK constr
R66870:66871 compcert.cfrontend.Cminorgenproof <> ts var
R66885:66894 compcert.common.Memory Mem inject def
R66900:66901 compcert.cfrontend.Cminorgenproof <> tm var
R66898:66898 compcert.cfrontend.Cminorgenproof <> m var
R66896:66896 compcert.cfrontend.Cminorgenproof <> f var
R66914:66928 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R67026:67038 compcert.common.Memory Mem nextblock proj
R67040:67041 compcert.cfrontend.Cminorgenproof <> tm var
R67008:67020 compcert.common.Memory Mem nextblock proj
R67022:67022 compcert.cfrontend.Cminorgenproof <> m var
R66984:66987 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66953:66957 compcert.cfrontend.Cminorgenproof <> Frame constr
R66982:66983 compcert.cfrontend.Cminorgenproof <> hi var
R66979:66980 compcert.cfrontend.Cminorgenproof <> lo var
R66976:66977 compcert.cfrontend.Cminorgenproof <> sp var
R66973:66974 compcert.cfrontend.Cminorgenproof <> te var
R66970:66971 compcert.cfrontend.Cminorgenproof <> le var
R66968:66968 compcert.cfrontend.Cminorgenproof <> e var
R66964:66966 compcert.cfrontend.Cminorgenproof <> tfn var
R66959:66962 compcert.cfrontend.Cminorgenproof <> cenv var
R66988:66989 compcert.cfrontend.Cminorgenproof <> cs var
R66934:66935 compcert.cfrontend.Cminorgenproof <> tm var
R66932:66932 compcert.cfrontend.Cminorgenproof <> m var
R66930:66930 compcert.cfrontend.Cminorgenproof <> f var
R67054:67063 compcert.cfrontend.Cminorgenproof <> match_cont ind
R67080:67081 compcert.cfrontend.Cminorgenproof <> cs var
R67075:67078 compcert.cfrontend.Cminorgenproof <> xenv var
R67070:67073 compcert.cfrontend.Cminorgenproof <> cenv var
R67067:67068 compcert.cfrontend.Cminorgenproof <> tk var
R67065:67065 compcert.cfrontend.Cminorgenproof <> k var
R67093:67111 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_cont ind
R67129:67131 compcert.cfrontend.Cminorgenproof <> tk' var
R67126:67127 compcert.cfrontend.Cminorgenproof <> tk var
R67123:67124 compcert.cfrontend.Cminorgenproof <> ls var
R67118:67121 compcert.cfrontend.Cminorgenproof <> xenv var
R67113:67116 compcert.cfrontend.Cminorgenproof <> cenv var
R67137:67143 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R67145:67148 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R67218:67223 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R67149:67152 compcert.common.Smallstep <> plus ind
R67217:67217 compcert.cfrontend.Cminorgenproof <> S var
R67214:67215 compcert.common.Events <> E0 def
R67164:67168 compcert.backend.Cminor <> State constr
R67210:67211 compcert.cfrontend.Cminorgenproof <> tm var
R67207:67208 compcert.cfrontend.Cminorgenproof <> te var
R67189:67192 compcert.common.Values <> Vptr constr
R67197:67204 compcert.lib.Integers Int zero def
R67194:67195 compcert.cfrontend.Cminorgenproof <> sp var
R67184:67186 compcert.cfrontend.Cminorgenproof <> tk' var
R67175:67179 compcert.backend.Cminor <> Sexit constr
R67181:67181 Coq.Init.Datatypes <> O constr
R67170:67172 compcert.cfrontend.Cminorgenproof <> tfn var
R67159:67161 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R67154:67157 compcert.backend.Cminor <> step ind
R67224:67235 compcert.cfrontend.Cminorgenproof <> match_states ind
R67290:67290 compcert.cfrontend.Cminorgenproof <> S var
R67238:67254 compcert.cfrontend.Csharpminor <> State constr
R67287:67287 compcert.cfrontend.Cminorgenproof <> m var
R67284:67285 compcert.cfrontend.Cminorgenproof <> le var
R67282:67282 compcert.cfrontend.Cminorgenproof <> e var
R67280:67280 compcert.cfrontend.Cminorgenproof <> k var
R67260:67274 compcert.cfrontend.Csharpminor <> seq_of_lbl_stmt def
R67276:67277 compcert.cfrontend.Cminorgenproof <> ls var
R67256:67257 compcert.cfrontend.Cminorgenproof <> fn var
R67349:67356 compcert.common.Smallstep <> plus_two thm
R67349:67356 compcert.common.Smallstep <> plus_two thm
R67401:67411 compcert.cfrontend.Cminorgenproof <> match_state constr
R67401:67411 compcert.cfrontend.Cminorgenproof <> match_state constr
R67452:67460 compcert.common.Smallstep <> plus_left constr
R67452:67460 compcert.common.Smallstep <> plus_left constr
R67482:67489 compcert.common.Smallstep <> star_one thm
R67482:67489 compcert.common.Smallstep <> star_one thm
R67527:67541 compcert.cfrontend.Cminorgenproof <> match_state_seq constr
R67527:67541 compcert.cfrontend.Cminorgenproof <> match_state_seq constr
R67565:67581 compcert.cfrontend.Cminorgenproof <> switch_match_cont thm
R67565:67581 compcert.cfrontend.Cminorgenproof <> switch_match_cont thm
prf 67603:67623 <> transl_lblstmt_suffix
R67763:67769 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R67775:67776 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R67777:67783 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R67787:67788 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R67840:67842 Coq.Init.Logic <> :type_scope:x_'='_x not
R67789:67802 compcert.cfrontend.Cminorgen <> transl_lblstmt def
R67835:67839 compcert.cfrontend.Cminorgenproof <> body' var
R67831:67833 compcert.cfrontend.Cminorgenproof <> ls' var
R67810:67819 compcert.cfrontend.Cminorgen <> switch_env def
R67825:67828 compcert.cfrontend.Cminorgenproof <> xenv var
R67821:67823 compcert.cfrontend.Cminorgenproof <> ls' var
R67804:67807 compcert.cfrontend.Cminorgenproof <> cenv var
R67843:67844 compcert.common.Errors <> OK constr
R67846:67848 compcert.cfrontend.Cminorgenproof <> ts' var
R67749:67751 Coq.Init.Logic <> :type_scope:x_'='_x not
R67701:67714 compcert.cfrontend.Cminorgen <> transl_lblstmt def
R67745:67748 compcert.cfrontend.Cminorgenproof <> body var
R67742:67743 compcert.cfrontend.Cminorgenproof <> ls var
R67722:67731 compcert.cfrontend.Cminorgen <> switch_env def
R67736:67739 compcert.cfrontend.Cminorgenproof <> xenv var
R67733:67734 compcert.cfrontend.Cminorgenproof <> ls var
R67716:67719 compcert.cfrontend.Cminorgenproof <> cenv var
R67752:67753 compcert.common.Errors <> OK constr
R67755:67756 compcert.cfrontend.Cminorgenproof <> ts var
R67657:67669 compcert.cfrontend.Cminorgenproof <> lbl_stmt_tail ind
R67676:67678 compcert.cfrontend.Cminorgenproof <> ls' var
R67674:67674 compcert.cfrontend.Cminorgenproof <> n var
R67671:67672 compcert.cfrontend.Cminorgenproof <> ls var
sec 68001:68010 TRANSLATION FIND_LABEL
var 68023:68025 TRANSLATION.FIND_LABEL lbl
R68028:68032 compcert.backend.Cminor <> label def
var 68044:68047 TRANSLATION.FIND_LABEL cenv
R68050:68058 compcert.cfrontend.Cminorgen <> compilenv def
var 68070:68071 TRANSLATION.FIND_LABEL cs
R68074:68082 compcert.cfrontend.Cminorgenproof <> callstack def
prf 68092:68124 <> transl_lblstmt_find_label_context
R68347:68349 Coq.Init.Logic <> :type_scope:x_'='_x not
R68326:68335 compcert.backend.Cminor <> find_label def
R68344:68346 compcert.cfrontend.Cminorgenproof <> tk1 var
R68341:68342 compcert.cfrontend.Cminorgenproof <> ts var
R68337:68339 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R68350:68353 Coq.Init.Datatypes <> Some constr
R68355:68355 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68359:68360 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68364:68364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68356:68358 compcert.cfrontend.Cminorgenproof <> ts' var
R68361:68363 compcert.cfrontend.Cminorgenproof <> tk' var
R68302:68304 Coq.Init.Logic <> :type_scope:x_'='_x not
R68279:68288 compcert.backend.Cminor <> find_label def
R68299:68301 compcert.cfrontend.Cminorgenproof <> tk2 var
R68294:68297 compcert.cfrontend.Cminorgenproof <> body var
R68290:68292 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R68305:68308 Coq.Init.Datatypes <> Some constr
R68310:68310 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68314:68315 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68319:68319 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68311:68313 compcert.cfrontend.Cminorgenproof <> ts' var
R68316:68318 compcert.cfrontend.Cminorgenproof <> tk' var
R68233:68251 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_cont ind
R68270:68272 compcert.cfrontend.Cminorgenproof <> tk2 var
R68266:68268 compcert.cfrontend.Cminorgenproof <> tk1 var
R68263:68264 compcert.cfrontend.Cminorgenproof <> ls var
R68258:68261 compcert.cfrontend.Cminorgenproof <> xenv var
R68253:68256 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cenv var
R68219:68221 Coq.Init.Logic <> :type_scope:x_'='_x not
R68171:68184 compcert.cfrontend.Cminorgen <> transl_lblstmt def
R68215:68218 compcert.cfrontend.Cminorgenproof <> body var
R68212:68213 compcert.cfrontend.Cminorgenproof <> ls var
R68192:68201 compcert.cfrontend.Cminorgen <> switch_env def
R68206:68209 compcert.cfrontend.Cminorgenproof <> xenv var
R68203:68204 compcert.cfrontend.Cminorgenproof <> ls var
R68186:68189 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cenv var
R68222:68223 compcert.common.Errors <> OK constr
R68225:68226 compcert.cfrontend.Cminorgenproof <> ts var
prf 68574:68590 <> transl_find_label
prf 68978:69002 <> transl_lblstmt_find_label
R68697:68718 compcert.cfrontend.Csharpminor <> find_label def
R68726:68726 compcert.cfrontend.Cminorgenproof <> k var
R68724:68724 compcert.cfrontend.Cminorgenproof <> s var
R68720:68722 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R68737:68740 Coq.Init.Datatypes <> None constr
R68765:68767 Coq.Init.Logic <> :type_scope:x_'='_x not
R68745:68754 compcert.backend.Cminor <> find_label def
R68763:68764 compcert.cfrontend.Cminorgenproof <> tk var
R68760:68761 compcert.cfrontend.Cminorgenproof <> ts var
R68756:68758 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R68768:68771 Coq.Init.Datatypes <> None constr
R68777:68780 Coq.Init.Datatypes <> Some constr
R68781:68781 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68784:68785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68788:68788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68799:68805 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R68809:68810 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R68811:68817 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R68821:68822 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R68823:68829 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R68835:68844 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R68882:68890 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R68865:68867 Coq.Init.Logic <> :type_scope:x_'='_x not
R68845:68854 compcert.backend.Cminor <> find_label def
R68863:68864 compcert.cfrontend.Cminorgenproof <> tk var
R68860:68861 compcert.cfrontend.Cminorgenproof <> ts var
R68856:68858 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R68868:68871 Coq.Init.Datatypes <> Some constr
R68872:68872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68876:68877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68881:68881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68873:68875 compcert.cfrontend.Cminorgenproof <> ts' var
R68878:68880 compcert.cfrontend.Cminorgenproof <> tk' var
R68925:68933 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R68916:68918 Coq.Init.Logic <> :type_scope:x_'='_x not
R68891:68901 compcert.cfrontend.Cminorgen <> transl_stmt def
R68908:68912 compcert.cfrontend.Cminorgenproof <> xenv' var
R68903:68906 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cenv var
R68919:68920 compcert.common.Errors <> OK constr
R68922:68924 compcert.cfrontend.Cminorgenproof <> ts' var
R68934:68943 compcert.cfrontend.Cminorgenproof <> match_cont ind
R68963:68964 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cs var
R68957:68961 compcert.cfrontend.Cminorgenproof <> xenv' var
R68952:68955 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cenv var
R68948:68950 compcert.cfrontend.Cminorgenproof <> tk' var
R68657:68666 compcert.cfrontend.Cminorgenproof <> match_cont ind
R68683:68684 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cs var
R68678:68681 compcert.cfrontend.Cminorgenproof <> xenv var
R68673:68676 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cenv var
R68670:68671 compcert.cfrontend.Cminorgenproof <> tk var
R68668:68668 compcert.cfrontend.Cminorgenproof <> k var
R68643:68645 Coq.Init.Logic <> :type_scope:x_'='_x not
R68620:68630 compcert.cfrontend.Cminorgen <> transl_stmt def
R68642:68642 compcert.cfrontend.Cminorgenproof <> s var
R68637:68640 compcert.cfrontend.Cminorgenproof <> xenv var
R68632:68635 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cenv var
R68646:68647 compcert.common.Errors <> OK constr
R68649:68650 compcert.cfrontend.Cminorgenproof <> ts var
R69225:69249 compcert.cfrontend.Csharpminor <> find_label_ls def
R69258:69258 compcert.cfrontend.Cminorgenproof <> k var
R69255:69256 compcert.cfrontend.Cminorgenproof <> ls var
R69251:69253 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R69269:69272 Coq.Init.Datatypes <> None constr
R69297:69299 Coq.Init.Logic <> :type_scope:x_'='_x not
R69277:69286 compcert.backend.Cminor <> find_label def
R69295:69296 compcert.cfrontend.Cminorgenproof <> tk var
R69292:69293 compcert.cfrontend.Cminorgenproof <> ts var
R69288:69290 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R69300:69303 Coq.Init.Datatypes <> None constr
R69309:69312 Coq.Init.Datatypes <> Some constr
R69313:69313 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69316:69317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69320:69320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69331:69337 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R69341:69342 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R69343:69349 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R69353:69354 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R69355:69361 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R69367:69376 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R69414:69422 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R69397:69399 Coq.Init.Logic <> :type_scope:x_'='_x not
R69377:69386 compcert.backend.Cminor <> find_label def
R69395:69396 compcert.cfrontend.Cminorgenproof <> tk var
R69392:69393 compcert.cfrontend.Cminorgenproof <> ts var
R69388:69390 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R69400:69403 Coq.Init.Datatypes <> Some constr
R69404:69404 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69408:69409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69413:69413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69405:69407 compcert.cfrontend.Cminorgenproof <> ts' var
R69410:69412 compcert.cfrontend.Cminorgenproof <> tk' var
R69457:69465 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R69448:69450 Coq.Init.Logic <> :type_scope:x_'='_x not
R69423:69433 compcert.cfrontend.Cminorgen <> transl_stmt def
R69440:69444 compcert.cfrontend.Cminorgenproof <> xenv' var
R69435:69438 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cenv var
R69451:69452 compcert.common.Errors <> OK constr
R69454:69456 compcert.cfrontend.Cminorgenproof <> ts' var
R69466:69475 compcert.cfrontend.Cminorgenproof <> match_cont ind
R69495:69496 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cs var
R69489:69493 compcert.cfrontend.Cminorgenproof <> xenv' var
R69484:69487 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cenv var
R69480:69482 compcert.cfrontend.Cminorgenproof <> tk' var
R69206:69208 Coq.Init.Logic <> :type_scope:x_'='_x not
R69183:69192 compcert.backend.Cminor <> find_label def
R69203:69205 compcert.cfrontend.Cminorgenproof <> tk1 var
R69198:69201 compcert.cfrontend.Cminorgenproof <> body var
R69194:69196 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R69209:69212 Coq.Init.Datatypes <> None constr
R69138:69156 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_cont ind
R69174:69176 compcert.cfrontend.Cminorgenproof <> tk1 var
R69171:69172 compcert.cfrontend.Cminorgenproof <> tk var
R69168:69169 compcert.cfrontend.Cminorgenproof <> ls var
R69163:69166 compcert.cfrontend.Cminorgenproof <> xenv var
R69158:69161 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cenv var
R69104:69113 compcert.cfrontend.Cminorgenproof <> match_cont ind
R69130:69131 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cs var
R69125:69128 compcert.cfrontend.Cminorgenproof <> xenv var
R69120:69123 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cenv var
R69117:69118 compcert.cfrontend.Cminorgenproof <> tk var
R69115:69115 compcert.cfrontend.Cminorgenproof <> k var
R69090:69092 Coq.Init.Logic <> :type_scope:x_'='_x not
R69042:69055 compcert.cfrontend.Cminorgen <> transl_lblstmt def
R69086:69089 compcert.cfrontend.Cminorgenproof <> body var
R69083:69084 compcert.cfrontend.Cminorgenproof <> ls var
R69063:69072 compcert.cfrontend.Cminorgen <> switch_env def
R69077:69080 compcert.cfrontend.Cminorgenproof <> xenv var
R69074:69075 compcert.cfrontend.Cminorgenproof <> ls var
R69057:69060 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.cenv var
R69093:69094 compcert.common.Errors <> OK constr
R69096:69097 compcert.cfrontend.Cminorgenproof <> ts var
R69625:69634 compcert.cfrontend.Cminorgenproof <> match_Kseq constr
R69625:69634 compcert.cfrontend.Cminorgenproof <> match_Kseq constr
R69670:69691 compcert.cfrontend.Csharpminor <> find_label def
R69701:69716 compcert.cfrontend.Csharpminor <> Kseq constr
R69693:69695 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R69670:69691 compcert.cfrontend.Csharpminor <> find_label def
R69701:69716 compcert.cfrontend.Csharpminor <> Kseq constr
R69693:69695 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R69994:70015 compcert.cfrontend.Csharpminor <> find_label def
R70017:70019 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R69994:70015 compcert.cfrontend.Csharpminor <> find_label def
R70017:70019 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R70367:70370 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R70363:70366 Coq.Init.Datatypes <> true constr
R70367:70370 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R70363:70366 Coq.Init.Datatypes <> true constr
R70443:70454 compcert.cfrontend.Cminorgen <> switch_table def
R70458:70458 Coq.Init.Datatypes <> O constr
R70443:70454 compcert.cfrontend.Cminorgen <> switch_table def
R70458:70458 Coq.Init.Datatypes <> O constr
R70498:70511 compcert.cfrontend.Cminorgenproof <> switch_descent thm
R70685:70692 compcert.common.AST <> ident_eq def
R70694:70696 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R70685:70692 compcert.common.AST <> ident_eq def
R70694:70696 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R70953:70969 compcert.cfrontend.Cminorgenproof <> switch_match_cont thm
R70953:70969 compcert.cfrontend.Cminorgenproof <> switch_match_cont thm
R70992:71013 compcert.cfrontend.Csharpminor <> find_label def
R71022:71037 compcert.cfrontend.Csharpminor <> Kseq constr
R71040:71054 compcert.cfrontend.Csharpminor <> seq_of_lbl_stmt def
R71015:71017 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R70992:71013 compcert.cfrontend.Csharpminor <> find_label def
R71022:71037 compcert.cfrontend.Csharpminor <> Kseq constr
R71040:71054 compcert.cfrontend.Csharpminor <> seq_of_lbl_stmt def
R71015:71017 compcert.cfrontend.Cminorgenproof <> TRANSLATION.FIND_LABEL.lbl var
R0:-1 compcert.cfrontend.Cminorgenproof <> y var
R71183:71215 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_find_label_context thm
R71183:71215 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_find_label_context thm
R71423:71432 compcert.cfrontend.Cminorgenproof TRANSLATION.FIND_LABEL <> sec
prf 71442:71463 <> transl_find_label_body
R71688:71694 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71698:71699 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71700:71706 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71710:71711 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71712:71718 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71724:71730 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71790:71795 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71773:71775 Coq.Init.Logic <> :type_scope:x_'='_x not
R71731:71740 compcert.backend.Cminor <> find_label def
R71760:71768 compcert.backend.Cminor <> call_cont def
R71770:71771 compcert.cfrontend.Cminorgenproof <> tk var
R71750:71756 compcert.backend.Cminor <> fn_body proj
R71746:71747 compcert.cfrontend.Cminorgenproof <> tf var
R71742:71744 compcert.cfrontend.Cminorgenproof <> lbl var
R71776:71779 Coq.Init.Datatypes <> Some constr
R71780:71780 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71784:71785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71789:71789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71781:71783 compcert.cfrontend.Cminorgenproof <> ts' var
R71786:71788 compcert.cfrontend.Cminorgenproof <> tk' var
R71830:71835 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71821:71823 Coq.Init.Logic <> :type_scope:x_'='_x not
R71796:71806 compcert.cfrontend.Cminorgen <> transl_stmt def
R71819:71820 compcert.cfrontend.Cminorgenproof <> s' var
R71813:71817 compcert.cfrontend.Cminorgenproof <> xenv' var
R71808:71811 compcert.cfrontend.Cminorgenproof <> cenv var
R71824:71825 compcert.common.Errors <> OK constr
R71827:71829 compcert.cfrontend.Cminorgenproof <> ts' var
R71836:71845 compcert.cfrontend.Cminorgenproof <> match_cont ind
R71865:71866 compcert.cfrontend.Cminorgenproof <> cs var
R71859:71863 compcert.cfrontend.Cminorgenproof <> xenv' var
R71854:71857 compcert.cfrontend.Cminorgenproof <> cenv var
R71850:71852 compcert.cfrontend.Cminorgenproof <> tk' var
R71847:71848 compcert.cfrontend.Cminorgenproof <> k' var
R71666:71668 Coq.Init.Logic <> :type_scope:x_'='_x not
R71590:71611 compcert.cfrontend.Csharpminor <> find_label def
R71642:71662 compcert.cfrontend.Csharpminor <> call_cont def
R71664:71664 compcert.cfrontend.Cminorgenproof <> k var
R71620:71638 compcert.cfrontend.Csharpminor <> fn_body proj
R71617:71617 compcert.cfrontend.Cminorgenproof <> f var
R71613:71615 compcert.cfrontend.Cminorgenproof <> lbl var
R71669:71672 Coq.Init.Datatypes <> Some constr
R71674:71674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71677:71678 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71681:71681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71675:71676 compcert.cfrontend.Cminorgenproof <> s' var
R71679:71680 compcert.cfrontend.Cminorgenproof <> k' var
R71556:71565 compcert.cfrontend.Cminorgenproof <> match_cont ind
R71582:71583 compcert.cfrontend.Cminorgenproof <> cs var
R71577:71580 compcert.cfrontend.Cminorgenproof <> xenv var
R71572:71575 compcert.cfrontend.Cminorgenproof <> cenv var
R71569:71570 compcert.cfrontend.Cminorgenproof <> tk var
R71567:71567 compcert.cfrontend.Cminorgenproof <> k var
R71542:71544 Coq.Init.Logic <> :type_scope:x_'='_x not
R71516:71529 compcert.cfrontend.Cminorgen <> transl_funbody def
R71541:71541 compcert.cfrontend.Cminorgenproof <> f var
R71536:71539 compcert.cfrontend.Cminorgenproof <> size var
R71531:71534 compcert.cfrontend.Cminorgenproof <> cenv var
R71545:71546 compcert.common.Errors <> OK constr
R71548:71549 compcert.cfrontend.Cminorgenproof <> tf var
R71916:71932 compcert.cfrontend.Cminorgenproof <> transl_find_label thm
R71953:71967 compcert.cfrontend.Cminorgenproof <> match_call_cont thm
R71953:71967 compcert.cfrontend.Cminorgenproof <> match_call_cont thm
def 72072:72085 <> seq_left_depth
R72091:72106 compcert.cfrontend.Csharpminor <> stmt ind
R72111:72113 Coq.Init.Datatypes <> nat ind
R72126:72126 compcert.cfrontend.Cminorgenproof <> s var
R72137:72152 compcert.cfrontend.Csharpminor <> Sseq constr
R72163:72163 Coq.Init.Datatypes <> S constr
R72166:72179 compcert.cfrontend.Cminorgenproof <> seq_left_depth def
R72194:72194 Coq.Init.Datatypes <> O constr
def 72215:72221 <> measure
R72227:72243 compcert.cfrontend.Csharpminor <> state ind
R72248:72250 Coq.Init.Datatypes <> nat ind
R72263:72263 compcert.cfrontend.Cminorgenproof <> S var
R72274:72290 compcert.cfrontend.Csharpminor <> State constr
R72309:72322 compcert.cfrontend.Cminorgenproof <> seq_left_depth def
R72335:72335 Coq.Init.Datatypes <> O constr
prf 72351:72369 <> transl_step_correct
R72458:72458 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R72513:72519 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R72459:72465 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R72468:72469 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R72491:72494 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72470:72473 compcert.common.Smallstep <> plus ind
R72489:72490 compcert.cfrontend.Cminorgenproof <> T2 var
R72487:72487 compcert.cfrontend.Cminorgenproof <> t var
R72484:72485 compcert.cfrontend.Cminorgenproof <> T1 var
R72480:72482 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R72475:72478 compcert.backend.Cminor <> step ind
R72495:72506 compcert.cfrontend.Cminorgenproof <> match_states ind
R72511:72512 compcert.cfrontend.Cminorgenproof <> T2 var
R72508:72509 compcert.cfrontend.Cminorgenproof <> S2 var
R72544:72547 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72531:72533 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R72521:72527 compcert.cfrontend.Cminorgenproof <> measure def
R72529:72530 compcert.cfrontend.Cminorgenproof <> S2 var
R72534:72540 compcert.cfrontend.Cminorgenproof <> measure def
R72542:72543 compcert.cfrontend.Cminorgenproof <> S1 var
R72554:72557 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72549:72551 Coq.Init.Logic <> :type_scope:x_'='_x not
R72548:72548 compcert.cfrontend.Cminorgenproof <> t var
R72552:72553 compcert.common.Events <> E0 def
R72558:72569 compcert.cfrontend.Cminorgenproof <> match_states ind
R72574:72575 compcert.cfrontend.Cminorgenproof <> T1 var
R72571:72572 compcert.cfrontend.Cminorgenproof <> S2 var
R72434:72445 compcert.cfrontend.Cminorgenproof <> match_states ind
R72450:72451 compcert.cfrontend.Cminorgenproof <> T1 var
R72447:72448 compcert.cfrontend.Cminorgenproof <> S1 var
R72390:72405 compcert.cfrontend.Csharpminor <> step ind
R72415:72416 compcert.cfrontend.Cminorgenproof <> S2 var
R72413:72413 compcert.cfrontend.Cminorgenproof <> t var
R72410:72411 compcert.cfrontend.Cminorgenproof <> S1 var
R72407:72408 compcert.cfrontend.Cminorgenproof <> TRANSLATION.ge var
R72730:72737 compcert.common.Smallstep <> plus_one thm
R72730:72737 compcert.common.Smallstep <> plus_one thm
R72807:72814 compcert.common.Smallstep <> plus_one thm
R72807:72814 compcert.common.Smallstep <> plus_one thm
R72839:72853 compcert.cfrontend.Cminorgenproof <> match_state_seq constr
R72839:72853 compcert.cfrontend.Cminorgenproof <> match_state_seq constr
R72933:72941 compcert.common.Smallstep <> plus_left constr
R72933:72941 compcert.common.Smallstep <> plus_left constr
R72963:72971 compcert.common.Smallstep <> plus_star thm
R72963:72971 compcert.common.Smallstep <> plus_star thm
R73093:73100 compcert.common.Smallstep <> plus_one thm
R73093:73100 compcert.common.Smallstep <> plus_one thm
R73208:73216 compcert.common.Smallstep <> plus_left constr
R73208:73216 compcert.common.Smallstep <> plus_left constr
R73238:73246 compcert.common.Smallstep <> plus_star thm
R73238:73246 compcert.common.Smallstep <> plus_star thm
R73320:73337 compcert.cfrontend.Cminorgenproof <> match_is_call_cont thm
R73382:73405 compcert.cfrontend.Cminorgenproof <> match_callstack_freelist thm
R73471:73480 compcert.common.Smallstep <> plus_right thm
R73471:73480 compcert.common.Smallstep <> plus_right thm
R73499:73512 compcert.backend.Cminor <> step_skip_call constr
R73499:73512 compcert.backend.Cminor <> step_skip_call constr
R73596:73614 compcert.cfrontend.Cminorgenproof <> transl_expr_correct thm
R73686:73693 compcert.common.Smallstep <> plus_one thm
R73686:73693 compcert.common.Smallstep <> plus_one thm
R73751:73774 compcert.cfrontend.Cminorgenproof <> match_callstack_set_temp thm
R73751:73774 compcert.cfrontend.Cminorgenproof <> match_callstack_set_temp thm
R73823:73841 compcert.cfrontend.Cminorgenproof <> transl_expr_correct thm
R73916:73934 compcert.cfrontend.Cminorgenproof <> transl_expr_correct thm
R74010:74033 compcert.common.Memory Mem storev_mapped_inject thm
R74110:74117 compcert.common.Smallstep <> plus_one thm
R74110:74117 compcert.common.Smallstep <> plus_one thm
R74216:74225 compcert.common.Memory Mem storev def
R74249:74267 compcert.common.Memory Mem nextblock_store thm
R74249:74267 compcert.common.Memory Mem nextblock_store thm
R74297:74315 compcert.common.Memory Mem nextblock_store thm
R74297:74315 compcert.common.Memory Mem nextblock_store thm
R74347:74371 compcert.cfrontend.Cminorgenproof <> match_callstack_invariant thm
R74347:74371 compcert.cfrontend.Cminorgenproof <> match_callstack_invariant thm
R74411:74426 compcert.common.Memory Mem perm_store_2 thm
R74411:74426 compcert.common.Memory Mem perm_store_2 thm
R74454:74469 compcert.common.Memory Mem perm_store_1 thm
R74454:74469 compcert.common.Memory Mem perm_store_1 thm
R74514:74533 compcert.cfrontend.Cminorgenproof <> functions_translated thm
R74595:74613 compcert.cfrontend.Cminorgenproof <> transl_expr_correct thm
R74664:74666 Coq.Init.Logic <> :type_scope:x_'='_x not
R74664:74666 Coq.Init.Logic <> :type_scope:x_'='_x not
R74684:74715 compcert.cfrontend.Cminorgenproof <> match_callstack_match_globalenvs thm
R74753:74779 compcert.cfrontend.Cminorgenproof <> val_inject_function_pointer thm
R74753:74779 compcert.cfrontend.Cminorgenproof <> val_inject_function_pointer thm
R74812:74834 compcert.cfrontend.Cminorgenproof <> transl_exprlist_correct thm
R74914:74921 compcert.common.Smallstep <> plus_one thm
R74914:74921 compcert.common.Smallstep <> plus_one thm
R74931:74939 compcert.backend.Cminor <> step_call constr
R74931:74939 compcert.backend.Cminor <> step_call constr
R74957:74969 compcert.cfrontend.Cminorgenproof <> sig_preserved thm
R74957:74969 compcert.cfrontend.Cminorgenproof <> sig_preserved thm
R75011:75021 compcert.cfrontend.Cminorgenproof <> match_Kcall constr
R75011:75021 compcert.cfrontend.Cminorgenproof <> match_Kcall constr
R75105:75127 compcert.cfrontend.Cminorgenproof <> transl_exprlist_correct thm
R75180:75211 compcert.cfrontend.Cminorgenproof <> match_callstack_match_globalenvs thm
R75248:75271 compcert.common.Events <> external_call_mem_inject def
R75291:75311 compcert.cfrontend.Cminorgenproof <> inj_preserves_globals thm
R75291:75311 compcert.cfrontend.Cminorgenproof <> inj_preserves_globals thm
R75448:75455 compcert.common.Smallstep <> plus_one thm
R75448:75455 compcert.common.Smallstep <> plus_one thm
R75489:75519 compcert.common.Events <> external_call_symbols_preserved thm
R75489:75519 compcert.common.Events <> external_call_symbols_preserved thm
R75537:75553 compcert.cfrontend.Cminorgenproof <> symbols_preserved thm
R75537:75553 compcert.cfrontend.Cminorgenproof <> symbols_preserved thm
R75563:75579 compcert.cfrontend.Cminorgenproof <> varinfo_preserved thm
R75563:75579 compcert.cfrontend.Cminorgenproof <> varinfo_preserved thm
R75598:75612 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R75718:75730 compcert.common.Memory Mem nextblock proj
R75699:75711 compcert.common.Memory Mem nextblock proj
R75673:75676 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R75642:75646 compcert.cfrontend.Cminorgenproof <> Frame constr
R75598:75612 compcert.cfrontend.Cminorgenproof <> match_callstack ind
R75718:75730 compcert.common.Memory Mem nextblock proj
R75699:75711 compcert.common.Memory Mem nextblock proj
R75673:75676 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R75642:75646 compcert.cfrontend.Cminorgenproof <> Frame constr
R75782:75794 compcert.common.Memory Mem nextblock proj
R75800:75812 compcert.common.Memory Mem nextblock proj
R75749:75774 compcert.cfrontend.Cminorgenproof <> match_callstack_incr_bound thm
R75782:75794 compcert.common.Memory Mem nextblock proj
R75800:75812 compcert.common.Memory Mem nextblock proj
R75749:75774 compcert.cfrontend.Cminorgenproof <> match_callstack_incr_bound thm
R75830:75858 compcert.cfrontend.Cminorgenproof <> match_callstack_external_call thm
R75830:75858 compcert.cfrontend.Cminorgenproof <> match_callstack_external_call thm
R75887:75908 compcert.common.Events <> external_call_max_perm def
R75887:75908 compcert.common.Events <> external_call_max_perm def
R75950:75972 compcert.common.Events <> external_call_nextblock thm
R75950:75972 compcert.common.Events <> external_call_nextblock thm
R75993:76015 compcert.common.Events <> external_call_nextblock thm
R75993:76015 compcert.common.Events <> external_call_nextblock thm
R76055:76063 compcert.lib.Maps PTree set def
R76075:76084 compcert.backend.Cminor <> set_optvar def
R76120:76143 compcert.cfrontend.Cminorgenproof <> match_callstack_set_temp thm
R76120:76143 compcert.cfrontend.Cminorgenproof <> match_callstack_set_temp thm
R76226:76233 compcert.common.Smallstep <> plus_one thm
R76226:76233 compcert.common.Smallstep <> plus_one thm
R76408:76426 compcert.cfrontend.Cminorgenproof <> transl_expr_correct thm
R76477:76481 compcert.backend.Cminor <> State constr
R76514:76517 compcert.common.Values <> Vptr constr
R76522:76529 compcert.lib.Integers Int zero def
R76477:76481 compcert.backend.Cminor <> State constr
R76514:76517 compcert.common.Values <> Vptr constr
R76522:76529 compcert.lib.Integers Int zero def
R76555:76562 compcert.common.Smallstep <> plus_one thm
R76555:76562 compcert.common.Smallstep <> plus_one thm
R76572:76586 compcert.backend.Cminor <> step_ifthenelse constr
R76572:76586 compcert.backend.Cminor <> step_ifthenelse constr
R76603:76620 compcert.cfrontend.Cminorgenproof <> bool_of_val_inject thm
R76603:76620 compcert.cfrontend.Cminorgenproof <> bool_of_val_inject thm
R76735:76742 compcert.common.Smallstep <> plus_one thm
R76735:76742 compcert.common.Smallstep <> plus_one thm
R76896:76903 compcert.common.Smallstep <> plus_one thm
R76896:76903 compcert.common.Smallstep <> plus_one thm
R77061:77068 compcert.common.Smallstep <> plus_one thm
R77061:77068 compcert.common.Smallstep <> plus_one thm
R77195:77203 compcert.common.Smallstep <> plus_left constr
R77195:77203 compcert.common.Smallstep <> plus_left constr
R77225:77233 compcert.common.Smallstep <> plus_star thm
R77225:77233 compcert.common.Smallstep <> plus_star thm
R77327:77335 compcert.common.Smallstep <> plus_left constr
R77327:77335 compcert.common.Smallstep <> plus_left constr
R77366:77374 compcert.common.Smallstep <> plus_star thm
R77366:77374 compcert.common.Smallstep <> plus_star thm
R77498:77505 compcert.common.Smallstep <> plus_one thm
R77498:77505 compcert.common.Smallstep <> plus_one thm
R77630:77638 compcert.common.Smallstep <> plus_left constr
R77630:77638 compcert.common.Smallstep <> plus_left constr
R77660:77668 compcert.common.Smallstep <> plus_star thm
R77660:77668 compcert.common.Smallstep <> plus_star thm
R77794:77801 compcert.common.Smallstep <> plus_one thm
R77794:77801 compcert.common.Smallstep <> plus_one thm
R77933:77941 compcert.common.Smallstep <> plus_left constr
R77933:77941 compcert.common.Smallstep <> plus_left constr
R77963:77971 compcert.common.Smallstep <> plus_star thm
R77963:77971 compcert.common.Smallstep <> plus_star thm
R78029:78040 compcert.cfrontend.Cminorgen <> switch_table def
R78048:78048 Coq.Init.Datatypes <> O constr
R78029:78040 compcert.cfrontend.Cminorgen <> switch_table def
R78048:78048 Coq.Init.Datatypes <> O constr
R78097:78115 compcert.cfrontend.Cminorgenproof <> transl_expr_correct thm
R78164:78178 compcert.common.Switch <> switch_argument ind
R78164:78178 compcert.common.Switch <> switch_argument ind
R78241:78254 compcert.cfrontend.Cminorgenproof <> switch_descent thm
R78293:78305 compcert.cfrontend.Cminorgenproof <> switch_ascent thm
R78323:78341 compcert.cfrontend.Cminorgenproof <> switch_table_select thm
R78323:78341 compcert.cfrontend.Cminorgenproof <> switch_table_select thm
R78399:78419 compcert.cfrontend.Cminorgenproof <> transl_lblstmt_suffix thm
R78437:78455 compcert.cfrontend.Cminorgenproof <> switch_table_select thm
R78437:78455 compcert.cfrontend.Cminorgenproof <> switch_table_select thm
R78504:78522 compcert.cfrontend.Cminorgenproof <> switch_match_states thm
R78586:78600 compcert.common.Smallstep <> plus_star_trans thm
R78586:78600 compcert.common.Smallstep <> plus_star_trans thm
R78624:78632 compcert.common.Smallstep <> star_left thm
R78624:78632 compcert.common.Smallstep <> star_left thm
R78666:78675 compcert.common.Smallstep <> star_trans thm
R78666:78675 compcert.common.Smallstep <> star_trans thm
R78697:78705 compcert.common.Smallstep <> plus_star thm
R78697:78705 compcert.common.Smallstep <> plus_star thm
R78813:78836 compcert.cfrontend.Cminorgenproof <> match_callstack_freelist thm
R78901:78908 compcert.common.Smallstep <> plus_one thm
R78901:78908 compcert.common.Smallstep <> plus_one thm
R78918:78930 compcert.backend.Cminor <> step_return_0 constr
R78918:78930 compcert.backend.Cminor <> step_return_0 constr
R78970:78984 compcert.cfrontend.Cminorgenproof <> match_call_cont thm
R78970:78984 compcert.cfrontend.Cminorgenproof <> match_call_cont thm
R79060:79078 compcert.cfrontend.Cminorgenproof <> transl_expr_correct thm
R79123:79146 compcert.cfrontend.Cminorgenproof <> match_callstack_freelist thm
R79211:79218 compcert.common.Smallstep <> plus_one thm
R79211:79218 compcert.common.Smallstep <> plus_one thm
R79228:79240 compcert.backend.Cminor <> step_return_1 constr
R79228:79240 compcert.backend.Cminor <> step_return_1 constr
R79288:79302 compcert.cfrontend.Cminorgenproof <> match_call_cont thm
R79288:79302 compcert.cfrontend.Cminorgenproof <> match_call_cont thm
R79377:79384 compcert.common.Smallstep <> plus_one thm
R79377:79384 compcert.common.Smallstep <> plus_one thm
R79460:79481 compcert.cfrontend.Cminorgenproof <> transl_find_label_body thm
R79569:79576 compcert.common.Smallstep <> plus_one thm
R79569:79576 compcert.common.Smallstep <> plus_one thm
R79585:79593 compcert.backend.Cminor <> step_goto constr
R79585:79593 compcert.backend.Cminor <> step_goto constr
R79698:79712 compcert.cfrontend.Cminorgen <> transl_function def
R79725:79739 compcert.cfrontend.Cminorgen <> build_compilenv def
R79725:79739 compcert.cfrontend.Cminorgen <> build_compilenv def
R79774:79776 compcert.lib.Coqlib <> zle def
R79781:79796 compcert.lib.Integers Int max_unsigned def
R79774:79776 compcert.lib.Coqlib <> zle def
R79781:79796 compcert.lib.Integers Int max_unsigned def
R79891:79900 compcert.backend.Cminor <> mkfunction constr
R80001:80020 compcert.cfrontend.Csharpminor <> fn_temps proj
R79951:79971 compcert.cfrontend.Csharpminor <> fn_params proj
R79903:79920 compcert.cfrontend.Csharpminor <> fn_sig proj
R79891:79900 compcert.backend.Cminor <> mkfunction constr
R80001:80020 compcert.cfrontend.Csharpminor <> fn_temps proj
R79951:79971 compcert.cfrontend.Csharpminor <> fn_params proj
R79903:79920 compcert.cfrontend.Csharpminor <> fn_sig proj
R80096:80104 compcert.common.Memory Mem alloc def
R80112:80124 compcert.backend.Cminor <> fn_stackspace proj
R80096:80104 compcert.common.Memory Mem alloc def
R80112:80124 compcert.backend.Cminor <> fn_stackspace proj
R80164:80193 compcert.cfrontend.Cminorgenproof <> match_callstack_function_entry thm
R80295:80302 compcert.common.Smallstep <> plus_one thm
R80295:80302 compcert.common.Smallstep <> plus_one thm
R80508:80539 compcert.cfrontend.Cminorgenproof <> match_callstack_match_globalenvs thm
R80575:80598 compcert.common.Events <> external_call_mem_inject def
R80618:80638 compcert.cfrontend.Cminorgenproof <> inj_preserves_globals thm
R80618:80638 compcert.cfrontend.Cminorgenproof <> inj_preserves_globals thm
R80775:80782 compcert.common.Smallstep <> plus_one thm
R80775:80782 compcert.common.Smallstep <> plus_one thm
R80808:80838 compcert.common.Events <> external_call_symbols_preserved thm
R80808:80838 compcert.common.Events <> external_call_symbols_preserved thm
R80856:80872 compcert.cfrontend.Cminorgenproof <> symbols_preserved thm
R80856:80872 compcert.cfrontend.Cminorgenproof <> symbols_preserved thm
R80882:80898 compcert.cfrontend.Cminorgenproof <> varinfo_preserved thm
R80882:80898 compcert.cfrontend.Cminorgenproof <> varinfo_preserved thm
R80965:80977 compcert.common.Memory Mem nextblock proj
R80983:80995 compcert.common.Memory Mem nextblock proj
R80932:80957 compcert.cfrontend.Cminorgenproof <> match_callstack_incr_bound thm
R80965:80977 compcert.common.Memory Mem nextblock proj
R80983:80995 compcert.common.Memory Mem nextblock proj
R80932:80957 compcert.cfrontend.Cminorgenproof <> match_callstack_incr_bound thm
R81011:81039 compcert.cfrontend.Cminorgenproof <> match_callstack_external_call thm
R81011:81039 compcert.cfrontend.Cminorgenproof <> match_callstack_external_call thm
R81066:81087 compcert.common.Events <> external_call_max_perm def
R81066:81087 compcert.common.Events <> external_call_max_perm def
R81124:81146 compcert.common.Events <> external_call_nextblock thm
R81124:81146 compcert.common.Events <> external_call_nextblock thm
R81165:81187 compcert.common.Events <> external_call_nextblock thm
R81165:81187 compcert.common.Events <> external_call_nextblock thm
R81265:81272 compcert.common.Smallstep <> plus_one thm
R81265:81272 compcert.common.Smallstep <> plus_one thm
R81306:81315 compcert.backend.Cminor <> set_optvar def
R81371:81394 compcert.cfrontend.Cminorgenproof <> match_callstack_set_temp thm
R81371:81394 compcert.cfrontend.Cminorgenproof <> match_callstack_set_temp thm
prf 81417:81437 <> match_globalenvs_init
R81487:81502 compcert.cfrontend.Cminorgenproof <> match_globalenvs ind
R81538:81550 compcert.common.Memory Mem nextblock proj
R81552:81552 compcert.cfrontend.Cminorgenproof <> m var
R81505:81516 compcert.common.Memory Mem flat_inj def
R81519:81531 compcert.common.Memory Mem nextblock proj
R81533:81533 compcert.cfrontend.Cminorgenproof <> m var
R81472:81474 Coq.Init.Logic <> :type_scope:x_'='_x not
R81454:81466 compcert.common.Globalenvs Genv init_mem def
R81468:81471 compcert.cfrontend.Cminorgenproof <> TRANSLATION.prog var
R81475:81478 Coq.Init.Datatypes <> Some constr
R81480:81480 compcert.cfrontend.Cminorgenproof <> m var
R81603:81614 compcert.common.Memory Mem flat_inj def
R81623:81635 compcert.lib.Coqlib <> pred_dec_true thm
R81623:81635 compcert.lib.Coqlib <> pred_dec_true thm
R81662:81673 compcert.common.Memory Mem flat_inj def
R81695:81697 compcert.lib.Coqlib <> plt def
R81703:81715 compcert.common.Memory Mem nextblock proj
R81695:81697 compcert.lib.Coqlib <> plt def
R81703:81715 compcert.common.Memory Mem nextblock proj
R81751:81776 compcert.common.Globalenvs Genv find_symbol_not_fresh thm
R81751:81776 compcert.common.Globalenvs Genv find_symbol_not_fresh thm
R81803:81831 compcert.common.Globalenvs Genv find_funct_ptr_not_fresh thm
R81803:81831 compcert.common.Globalenvs Genv find_funct_ptr_not_fresh thm
R81858:81885 compcert.common.Globalenvs Genv find_var_info_not_fresh thm
R81858:81885 compcert.common.Globalenvs Genv find_var_info_not_fresh thm
prf 81908:81928 <> transl_initial_states
R81981:81987 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R81989:81990 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R82019:82022 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R81991:82010 compcert.backend.Cminor <> initial_state ind
R82018:82018 compcert.cfrontend.Cminorgenproof <> R var
R82012:82016 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tprog var
R82023:82034 compcert.cfrontend.Cminorgenproof <> match_states ind
R82038:82038 compcert.cfrontend.Cminorgenproof <> R var
R82036:82036 compcert.cfrontend.Cminorgenproof <> S var
R81943:81967 compcert.cfrontend.Csharpminor <> initial_state ind
R81974:81974 compcert.cfrontend.Cminorgenproof <> S var
R81969:81972 compcert.cfrontend.Cminorgenproof <> TRANSLATION.prog var
R82073:82095 compcert.cfrontend.Cminorgenproof <> function_ptr_translated thm
R82176:82203 compcert.common.Globalenvs Genv init_mem_transf_partial thm
R82209:82214 compcert.cfrontend.Cminorgenproof <> TRANSLATION.TRANSL var
R82176:82203 compcert.common.Globalenvs Genv init_mem_transf_partial thm
R82209:82214 compcert.cfrontend.Cminorgenproof <> TRANSLATION.TRANSL var
R82240:82242 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R82240:82242 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tge var
R82253:82269 compcert.cfrontend.Cminorgenproof <> symbols_preserved thm
R82253:82269 compcert.cfrontend.Cminorgenproof <> symbols_preserved thm
R82283:82291 compcert.common.AST <> prog_main proj
R82293:82297 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tprog var
R82306:82314 compcert.common.AST <> prog_main proj
R82316:82319 compcert.cfrontend.Cminorgenproof <> TRANSLATION.prog var
R82306:82314 compcert.common.AST <> prog_main proj
R82316:82319 compcert.cfrontend.Cminorgenproof <> TRANSLATION.prog var
R82283:82291 compcert.common.AST <> prog_main proj
R82293:82297 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tprog var
R82353:82366 compcert.cfrontend.Cminorgen <> transl_program def
R82388:82417 compcert.common.AST <> transform_partial_program_main thm
R82388:82417 compcert.common.AST <> transform_partial_program_main thm
R82466:82478 compcert.cfrontend.Cminorgenproof <> sig_preserved thm
R82466:82478 compcert.cfrontend.Cminorgenproof <> sig_preserved thm
R82523:82534 compcert.common.Memory Mem flat_inj def
R82537:82549 compcert.common.Memory Mem nextblock proj
R82564:82566 Coq.Init.Datatypes <> nil constr
R82568:82572 compcert.cfrontend.Cminorgenproof <> frame ind
R82584:82594 compcert.lib.Maps PTree empty def
R82596:82596 Coq.Numbers.BinNums <> Z ind
R82496:82510 compcert.cfrontend.Cminorgenproof <> match_callstate constr
R82523:82534 compcert.common.Memory Mem flat_inj def
R82537:82549 compcert.common.Memory Mem nextblock proj
R82564:82566 Coq.Init.Datatypes <> nil constr
R82568:82572 compcert.cfrontend.Cminorgenproof <> frame ind
R82584:82594 compcert.lib.Maps PTree empty def
R82596:82596 Coq.Numbers.BinNums <> Z ind
R82496:82510 compcert.cfrontend.Cminorgenproof <> match_callstate constr
R82617:82635 compcert.common.Globalenvs Genv initmem_inject thm
R82617:82635 compcert.common.Globalenvs Genv initmem_inject thm
R82667:82679 compcert.common.Memory Mem nextblock proj
R82653:82659 compcert.cfrontend.Cminorgenproof <> mcs_nil constr
R82667:82679 compcert.common.Memory Mem nextblock proj
R82653:82659 compcert.cfrontend.Cminorgenproof <> mcs_nil constr
R82692:82712 compcert.cfrontend.Cminorgenproof <> match_globalenvs_init thm
R82692:82712 compcert.cfrontend.Cminorgenproof <> match_globalenvs_init thm
prf 82791:82809 <> transl_final_states
R82881:82898 compcert.backend.Cminor <> final_state ind
R82902:82902 compcert.cfrontend.Cminorgenproof <> r var
R82900:82900 compcert.cfrontend.Cminorgenproof <> R var
R82850:82872 compcert.cfrontend.Csharpminor <> final_state ind
R82876:82876 compcert.cfrontend.Cminorgenproof <> r var
R82874:82874 compcert.cfrontend.Cminorgenproof <> S var
R82830:82841 compcert.cfrontend.Cminorgenproof <> match_states ind
R82845:82845 compcert.cfrontend.Cminorgenproof <> R var
R82843:82843 compcert.cfrontend.Cminorgenproof <> S var
prf 82984:83005 <> transl_program_correct
R83010:83027 compcert.common.Smallstep <> forward_simulation rec
R83059:83074 compcert.backend.Cminor <> semantics def
R83076:83080 compcert.cfrontend.Cminorgenproof <> TRANSLATION.tprog var
R83030:83050 compcert.cfrontend.Csharpminor <> semantics def
R83052:83055 compcert.cfrontend.Cminorgenproof <> TRANSLATION.prog var
R83100:83122 compcert.common.Smallstep <> forward_simulation_star thm
R83100:83122 compcert.common.Smallstep <> forward_simulation_star thm
R83141:83157 compcert.cfrontend.Cminorgenproof <> symbols_preserved thm
R83141:83157 compcert.cfrontend.Cminorgenproof <> symbols_preserved thm
R83169:83189 compcert.cfrontend.Cminorgenproof <> transl_initial_states thm
R83169:83189 compcert.cfrontend.Cminorgenproof <> transl_initial_states thm
R83201:83219 compcert.cfrontend.Cminorgenproof <> transl_final_states thm
R83201:83219 compcert.cfrontend.Cminorgenproof <> transl_final_states thm
R83231:83249 compcert.cfrontend.Cminorgenproof <> transl_step_correct thm
R83231:83249 compcert.cfrontend.Cminorgenproof <> transl_step_correct thm
R83263:83273 compcert.cfrontend.Cminorgenproof TRANSLATION <> sec
