DIGEST NO
Fcompcert.backend.Stackingproof
R969:974 compcert.lib.Coqlib <> <> lib
R992:997 compcert.common.Errors <> <> lib
R1015:1017 compcert.common.AST <> <> lib
R1035:1042 compcert.lib.Integers <> <> lib
R1060:1065 compcert.common.Values <> <> lib
R1083:1084 compcert.ia32.Op <> <> lib
R1102:1107 compcert.common.Memory <> <> lib
R1125:1130 compcert.common.Events <> <> lib
R1148:1157 compcert.common.Globalenvs <> <> lib
R1175:1183 compcert.common.Smallstep <> <> lib
R1201:1209 compcert.backend.Locations <> <> lib
R1227:1229 compcert.backend.LTL <> <> lib
R1247:1252 compcert.backend.Linear <> <> lib
R1270:1281 compcert.backend.Lineartyping <> <> lib
R1299:1302 compcert.backend.Mach <> <> lib
R1320:1325 compcert.backend.Bounds <> <> lib
R1343:1353 compcert.backend.Conventions <> <> lib
R1371:1381 compcert.ia32.Stacklayout <> <> lib
R1399:1406 compcert.backend.Stacking <> <> lib
prf 1454:1470 <> typesize_typesize
R1501:1503 Coq.Init.Logic <> :type_scope:x_'='_x not
R1486:1497 compcert.common.AST <> typesize def
R1499:1500 compcert.backend.Stackingproof <> ty var
R1505:1507 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R1508:1525 compcert.backend.Locations <> typesize def
R1527:1528 compcert.backend.Stackingproof <> ty var
prf 1572:1586 <> size_type_chunk
R1631:1633 Coq.Init.Logic <> :type_scope:x_'='_x not
R1602:1611 compcert.common.Memdata <> size_chunk def
R1614:1626 compcert.common.AST <> chunk_of_type def
R1628:1629 compcert.backend.Stackingproof <> ty var
R1634:1645 compcert.common.AST <> typesize def
R1647:1648 compcert.backend.Stackingproof <> ty var
sec 1700:1711 <> PRESERVATION
var 1724:1744 PRESERVATION return_address_offset
R1777:1779 compcert.lib.Integers <> int syndef
R1764:1772 compcert.backend.Mach <> code def
R1747:1759 compcert.backend.Mach <> function rec
var 1802:1829 PRESERVATION return_address_offset_exists
R1900:1906 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1910:1911 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1912:1932 compcert.backend.Stackingproof <> PRESERVATION.return_address_offset var
R1938:1940 compcert.backend.Stackingproof <> ofs var
R1936:1936 compcert.backend.Stackingproof <> c var
R1934:1934 compcert.backend.Stackingproof <> f var
R1855:1861 compcert.lib.Coqlib <> is_tail ind
R1884:1890 compcert.backend.Mach <> fn_code proj
R1892:1892 compcert.backend.Stackingproof <> f var
R1876:1879 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1864:1868 compcert.backend.Mach <> Mcall constr
R1873:1875 compcert.backend.Stackingproof <> ros var
R1870:1871 compcert.backend.Stackingproof <> sg var
R1880:1880 compcert.backend.Stackingproof <> c var
var 1948:1951 PRESERVATION step
R1956:1964 compcert.backend.Mach <> step ind
R1966:1986 compcert.backend.Stackingproof <> PRESERVATION.return_address_offset var
var 1999:2002 PRESERVATION prog
R2005:2018 compcert.backend.Linear <> program def
var 2030:2034 PRESERVATION tprog
R2037:2048 compcert.backend.Mach <> program def
var 2062:2067 PRESERVATION TRANSF
R2089:2091 Coq.Init.Logic <> :type_scope:x_'='_x not
R2070:2083 compcert.backend.Stacking <> transf_program def
R2085:2088 compcert.backend.Stackingproof <> PRESERVATION.prog var
R2092:2093 compcert.common.Errors <> OK constr
R2095:2099 compcert.backend.Stackingproof <> PRESERVATION.tprog var
var 2106:2107 PRESERVATION ge
R2112:2125 compcert.common.Globalenvs Genv globalenv def
R2127:2130 compcert.backend.Stackingproof <> PRESERVATION.prog var
var 2137:2139 PRESERVATION tge
R2144:2157 compcert.common.Globalenvs Genv globalenv def
R2159:2163 compcert.backend.Stackingproof <> PRESERVATION.tprog var
sec 2176:2191 PRESERVATION FRAME_PROPERTIES
var 2204:2204 PRESERVATION.FRAME_PROPERTIES f
R2207:2221 compcert.backend.Linear <> function rec
var 2228:2228 PRESERVATION.FRAME_PROPERTIES b
R2233:2247 compcert.backend.Bounds <> function_bounds def
R2249:2249 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
var 2256:2257 PRESERVATION.FRAME_PROPERTIES fe
R2262:2269 compcert.ia32.Stacklayout <> make_env def
R2271:2271 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
var 2283:2284 PRESERVATION.FRAME_PROPERTIES tf
R2287:2299 compcert.backend.Mach <> function rec
var 2313:2320 PRESERVATION.FRAME_PROPERTIES TRANSF_F
R2340:2342 Coq.Init.Logic <> :type_scope:x_'='_x not
R2323:2337 compcert.backend.Stacking <> transf_function def
R2339:2339 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R2343:2344 compcert.common.Errors <> OK constr
R2346:2347 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.tf var
prf 2357:2378 <> unfold_transf_function
R2385:2387 Coq.Init.Logic <> :type_scope:x_'='_x not
R2383:2384 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.tf var
R2388:2402 compcert.backend.Mach <> mkfunction constr
R2528:2535 compcert.lib.Integers Int repr def
R2541:2554 compcert.ia32.Stacklayout <> fe_ofs_retaddr proj
R2537:2538 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R2491:2498 compcert.lib.Integers Int repr def
R2504:2514 compcert.ia32.Stacklayout <> fe_ofs_link proj
R2500:2501 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R2472:2478 compcert.ia32.Stacklayout <> fe_size proj
R2468:2469 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R2441:2451 compcert.backend.Stacking <> transl_body def
R2455:2456 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R2453:2453 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R2416:2428 compcert.backend.Linear <> fn_sig proj
R2413:2413 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R2579:2586 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.TRANSF_F var
R2579:2586 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.TRANSF_F var
R2596:2610 compcert.backend.Stacking <> transf_function def
R2625:2635 compcert.backend.Lineartyping <> wt_function def
R2637:2637 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R2647:2650 Coq.Init.Datatypes <> negb def
R2625:2635 compcert.backend.Lineartyping <> wt_function def
R2637:2637 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R2647:2650 Coq.Init.Datatypes <> negb def
R2647:2650 Coq.Init.Datatypes <> negb def
R2665:2667 compcert.lib.Coqlib <> zlt def
R2687:2693 compcert.ia32.Stacklayout <> fe_size proj
R2696:2703 compcert.ia32.Stacklayout <> make_env def
R2706:2720 compcert.backend.Bounds <> function_bounds def
R2722:2722 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R2669:2684 compcert.lib.Integers Int max_unsigned def
R2665:2667 compcert.lib.Coqlib <> zlt def
R2687:2693 compcert.ia32.Stacklayout <> fe_size proj
R2696:2703 compcert.ia32.Stacklayout <> make_env def
R2706:2720 compcert.backend.Bounds <> function_bounds def
R2722:2722 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R2669:2684 compcert.lib.Integers Int max_unsigned def
R2770:2771 compcert.backend.Stackingproof <> fe vardef
R2781:2781 compcert.backend.Stackingproof <> b vardef
prf 2832:2857 <> transf_function_well_typed
R2875:2877 Coq.Init.Logic <> :type_scope:x_'='_x not
R2862:2872 compcert.backend.Lineartyping <> wt_function def
R2874:2874 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R2878:2881 Coq.Init.Datatypes <> true constr
R2904:2911 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.TRANSF_F var
R2904:2911 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.TRANSF_F var
R2921:2935 compcert.backend.Stacking <> transf_function def
R2950:2960 compcert.backend.Lineartyping <> wt_function def
R2962:2962 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R2972:2975 Coq.Init.Datatypes <> negb def
R2950:2960 compcert.backend.Lineartyping <> wt_function def
R2962:2962 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R2972:2975 Coq.Init.Datatypes <> negb def
R2972:2975 Coq.Init.Datatypes <> negb def
prf 3018:3033 <> size_no_overflow
R3048:3051 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R3040:3046 compcert.ia32.Stacklayout <> fe_size proj
R3036:3037 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R3052:3067 compcert.lib.Integers Int max_unsigned def
R3090:3097 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.TRANSF_F var
R3090:3097 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.TRANSF_F var
R3107:3121 compcert.backend.Stacking <> transf_function def
R3136:3146 compcert.backend.Lineartyping <> wt_function def
R3148:3148 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R3158:3161 Coq.Init.Datatypes <> negb def
R3136:3146 compcert.backend.Lineartyping <> wt_function def
R3148:3148 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R3158:3161 Coq.Init.Datatypes <> negb def
R3158:3161 Coq.Init.Datatypes <> negb def
R3176:3178 compcert.lib.Coqlib <> zlt def
R3198:3204 compcert.ia32.Stacklayout <> fe_size proj
R3207:3214 compcert.ia32.Stacklayout <> make_env def
R3217:3231 compcert.backend.Bounds <> function_bounds def
R3233:3233 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R3180:3195 compcert.lib.Integers Int max_unsigned def
R3176:3178 compcert.lib.Coqlib <> zlt def
R3198:3204 compcert.ia32.Stacklayout <> fe_size proj
R3207:3214 compcert.ia32.Stacklayout <> make_env def
R3217:3231 compcert.backend.Bounds <> function_bounds def
R3233:3233 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R3180:3195 compcert.lib.Integers Int max_unsigned def
R3281:3282 compcert.backend.Stackingproof <> fe vardef
R3292:3292 compcert.backend.Stackingproof <> b vardef
prf 3339:3364 <> bound_stack_data_stacksize
R3392:3395 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R3372:3390 compcert.backend.Linear <> fn_stacksize proj
R3369:3369 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R3399:3414 compcert.backend.Bounds <> bound_stack_data proj
R3396:3396 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R3434:3434 compcert.backend.Stackingproof <> b vardef
R3437:3451 compcert.backend.Bounds <> function_bounds def
R3454:3469 compcert.backend.Bounds <> bound_stack_data proj
R3478:3482 Coq.ZArith.Zmax <> Zmax1 syndef
R3478:3482 Coq.ZArith.Zmax <> Zmax1 syndef
def 3600:3610 <> index_valid
R3618:3628 compcert.backend.Stacking <> frame_index ind
R3642:3644 compcert.backend.Stackingproof <> idx var
R3655:3661 compcert.backend.Stacking <> FI_link constr
R3666:3669 Coq.Init.Logic <> True ind
R3675:3684 compcert.backend.Stacking <> FI_retaddr constr
R3689:3692 Coq.Init.Logic <> True ind
R3698:3705 compcert.backend.Stacking <> FI_local constr
R3726:3729 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3717:3720 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3721:3725 compcert.common.AST <> Tlong constr
R3736:3739 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3731:3734 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R3755:3758 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R3741:3743 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R3744:3751 compcert.backend.Locations <> typesize def
R3762:3772 compcert.backend.Bounds <> bound_local proj
R3759:3759 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R3779:3784 compcert.backend.Stacking <> FI_arg constr
R3805:3808 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3796:3799 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3800:3804 compcert.common.AST <> Tlong constr
R3815:3818 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3810:3813 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R3834:3837 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R3820:3822 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R3823:3830 compcert.backend.Locations <> typesize def
R3841:3854 compcert.backend.Bounds <> bound_outgoing proj
R3838:3838 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R3861:3872 compcert.backend.Stacking <> FI_saved_int constr
R3880:3883 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3885:3887 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3891:3911 compcert.backend.Bounds <> bound_int_callee_save proj
R3888:3888 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R3918:3931 compcert.backend.Stacking <> FI_saved_float constr
R3939:3942 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3944:3946 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3950:3972 compcert.backend.Bounds <> bound_float_callee_save proj
R3947:3947 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
def 3994:4006 <> type_of_index
R4014:4024 compcert.backend.Stacking <> frame_index ind
R4038:4040 compcert.backend.Stackingproof <> idx var
R4051:4057 compcert.backend.Stacking <> FI_link constr
R4062:4065 compcert.common.AST <> Tint constr
R4071:4080 compcert.backend.Stacking <> FI_retaddr constr
R4085:4088 compcert.common.AST <> Tint constr
R4094:4101 compcert.backend.Stacking <> FI_local constr
R4118:4123 compcert.backend.Stacking <> FI_arg constr
R4140:4151 compcert.backend.Stacking <> FI_saved_int constr
R4158:4163 compcert.common.AST <> Tany32 constr
R4169:4182 compcert.backend.Stacking <> FI_saved_float constr
R4189:4194 compcert.common.AST <> Tany64 constr
def 4298:4307 <> index_diff
R4321:4331 compcert.backend.Stacking <> frame_index ind
R4358:4361 compcert.backend.Stackingproof <> idx2 var
R4352:4355 compcert.backend.Stackingproof <> idx1 var
R4372:4378 compcert.backend.Stacking <> FI_link constr
R4381:4387 compcert.backend.Stacking <> FI_link constr
R4392:4396 Coq.Init.Logic <> False ind
R4402:4411 compcert.backend.Stacking <> FI_retaddr constr
R4414:4423 compcert.backend.Stacking <> FI_retaddr constr
R4428:4432 Coq.Init.Logic <> False ind
R4438:4445 compcert.backend.Stacking <> FI_local constr
R4455:4462 compcert.backend.Stacking <> FI_local constr
R4503:4506 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4497:4500 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R4482:4484 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4485:4492 compcert.backend.Locations <> typesize def
R4524:4527 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R4509:4511 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4512:4519 compcert.backend.Locations <> typesize def
R4535:4540 compcert.backend.Stacking <> FI_arg constr
R4550:4555 compcert.backend.Stacking <> FI_arg constr
R4596:4599 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4590:4593 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R4575:4577 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4578:4585 compcert.backend.Locations <> typesize def
R4617:4620 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R4602:4604 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4605:4612 compcert.backend.Locations <> typesize def
R4628:4639 compcert.backend.Stacking <> FI_saved_int constr
R4645:4656 compcert.backend.Stacking <> FI_saved_int constr
R4666:4669 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4677:4690 compcert.backend.Stacking <> FI_saved_float constr
R4696:4709 compcert.backend.Stacking <> FI_saved_float constr
R4719:4722 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4738:4741 Coq.Init.Logic <> True ind
prf 4757:4770 <> index_diff_sym
R4817:4826 compcert.backend.Stackingproof <> index_diff def
R4833:4836 compcert.backend.Stackingproof <> idx1 var
R4828:4831 compcert.backend.Stackingproof <> idx2 var
R4793:4802 compcert.backend.Stackingproof <> index_diff def
R4809:4812 compcert.backend.Stackingproof <> idx2 var
R4804:4807 compcert.backend.Stackingproof <> idx1 var
R4855:4864 compcert.backend.Stackingproof <> index_diff def
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R4959:4973 compcert.backend.Bounds <> bound_local_pos proj
R4975:4975 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R5000:5024 compcert.backend.Bounds <> bound_int_callee_save_pos proj
R5026:5026 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R5051:5077 compcert.backend.Bounds <> bound_float_callee_save_pos proj
R5079:5079 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R5104:5121 compcert.backend.Bounds <> bound_outgoing_pos proj
R5123:5123 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R5148:5167 compcert.backend.Bounds <> bound_stack_data_pos proj
R5169:5169 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
prf 5187:5194 <> size_pos
R5198:5201 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R5206:5212 compcert.ia32.Stacklayout <> fe_size proj
R5202:5203 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R5237:5255 compcert.ia32.Stacklayout <> frame_env_separated thm
R5257:5257 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R5237:5255 compcert.ia32.Stacklayout <> frame_env_separated thm
R5257:5257 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R0:-1 compcert.backend.Stackingproof <> y var
R5296:5297 compcert.backend.Stackingproof <> fe vardef
R5320:5334 compcert.backend.Bounds <> function_bounds def
R5399:5402 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5390:5393 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R5394:5398 compcert.common.AST <> Tlong constr
R5399:5402 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5390:5393 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R5394:5398 compcert.common.AST <> Tlong constr
R5446:5457 compcert.backend.Locations <> typesize_pos thm
R5464:5480 compcert.backend.Stackingproof <> typesize_typesize thm
prf 5508:5527 <> offset_of_index_disj
R5706:5711 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R5679:5682 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R5643:5645 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R5620:5634 compcert.backend.Stacking <> offset_of_index def
R5639:5642 compcert.backend.Stackingproof <> idx1 var
R5636:5637 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R5646:5657 compcert.common.AST <> typesize def
R5660:5672 compcert.backend.Stackingproof <> type_of_index def
R5674:5677 compcert.backend.Stackingproof <> idx1 var
R5683:5697 compcert.backend.Stacking <> offset_of_index def
R5702:5705 compcert.backend.Stackingproof <> idx2 var
R5699:5700 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R5771:5774 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R5735:5737 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R5712:5726 compcert.backend.Stacking <> offset_of_index def
R5731:5734 compcert.backend.Stackingproof <> idx2 var
R5728:5729 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R5738:5749 compcert.common.AST <> typesize def
R5752:5764 compcert.backend.Stackingproof <> type_of_index def
R5766:5769 compcert.backend.Stackingproof <> idx2 var
R5775:5789 compcert.backend.Stacking <> offset_of_index def
R5794:5797 compcert.backend.Stackingproof <> idx1 var
R5791:5792 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R5594:5603 compcert.backend.Stackingproof <> index_diff def
R5610:5613 compcert.backend.Stackingproof <> idx2 var
R5605:5608 compcert.backend.Stackingproof <> idx1 var
R5572:5582 compcert.backend.Stackingproof <> index_valid def
R5584:5587 compcert.backend.Stackingproof <> idx2 var
R5552:5562 compcert.backend.Stackingproof <> index_valid def
R5564:5567 compcert.backend.Stackingproof <> idx1 var
R5852:5870 compcert.ia32.Stacklayout <> frame_env_separated thm
R5872:5872 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R5852:5870 compcert.ia32.Stacklayout <> frame_env_separated thm
R5872:5872 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R5892:5893 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R5892:5893 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R6022:6036 compcert.backend.Stacking <> offset_of_index def
R6039:6051 compcert.backend.Stackingproof <> type_of_index def
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6064:6075 compcert.common.AST <> typesize def
R6077:6082 compcert.common.AST <> Tany32 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6101:6112 compcert.common.AST <> typesize def
R6114:6119 compcert.common.AST <> Tany64 constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
R6140:6151 compcert.common.AST <> typesize def
R6153:6156 compcert.common.AST <> Tint constr
prf 6188:6220 <> offset_of_index_disj_stack_data_1
R6339:6344 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6317:6320 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R6282:6284 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6260:6274 compcert.backend.Stacking <> offset_of_index def
R6279:6281 compcert.backend.Stackingproof <> idx var
R6276:6277 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R6285:6296 compcert.common.AST <> typesize def
R6299:6311 compcert.backend.Stackingproof <> type_of_index def
R6313:6315 compcert.backend.Stackingproof <> idx var
R6325:6337 compcert.ia32.Stacklayout <> fe_stack_data proj
R6321:6322 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R6386:6389 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R6363:6365 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6349:6361 compcert.ia32.Stacklayout <> fe_stack_data proj
R6345:6346 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R6369:6384 compcert.backend.Bounds <> bound_stack_data proj
R6366:6366 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R6390:6404 compcert.backend.Stacking <> offset_of_index def
R6409:6411 compcert.backend.Stackingproof <> idx var
R6406:6407 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R6239:6249 compcert.backend.Stackingproof <> index_valid def
R6251:6253 compcert.backend.Stackingproof <> idx var
R6451:6469 compcert.ia32.Stacklayout <> frame_env_separated thm
R6471:6471 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R6451:6469 compcert.ia32.Stacklayout <> frame_env_separated thm
R6471:6471 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R6491:6492 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R6491:6492 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R6576:6590 compcert.backend.Stacking <> offset_of_index def
R6593:6605 compcert.backend.Stackingproof <> type_of_index def
R6618:6629 compcert.common.AST <> typesize def
R6631:6636 compcert.common.AST <> Tany32 constr
R6655:6666 compcert.common.AST <> typesize def
R6668:6673 compcert.common.AST <> Tany64 constr
R6694:6705 compcert.common.AST <> typesize def
R6707:6710 compcert.common.AST <> Tint constr
R6618:6629 compcert.common.AST <> typesize def
R6631:6636 compcert.common.AST <> Tany32 constr
R6618:6629 compcert.common.AST <> typesize def
R6631:6636 compcert.common.AST <> Tany32 constr
R6618:6629 compcert.common.AST <> typesize def
R6631:6636 compcert.common.AST <> Tany32 constr
R6618:6629 compcert.common.AST <> typesize def
R6631:6636 compcert.common.AST <> Tany32 constr
R6618:6629 compcert.common.AST <> typesize def
R6631:6636 compcert.common.AST <> Tany32 constr
R6618:6629 compcert.common.AST <> typesize def
R6631:6636 compcert.common.AST <> Tany32 constr
R6655:6666 compcert.common.AST <> typesize def
R6668:6673 compcert.common.AST <> Tany64 constr
R6655:6666 compcert.common.AST <> typesize def
R6668:6673 compcert.common.AST <> Tany64 constr
R6655:6666 compcert.common.AST <> typesize def
R6668:6673 compcert.common.AST <> Tany64 constr
R6655:6666 compcert.common.AST <> typesize def
R6668:6673 compcert.common.AST <> Tany64 constr
R6655:6666 compcert.common.AST <> typesize def
R6668:6673 compcert.common.AST <> Tany64 constr
R6655:6666 compcert.common.AST <> typesize def
R6668:6673 compcert.common.AST <> Tany64 constr
R6694:6705 compcert.common.AST <> typesize def
R6707:6710 compcert.common.AST <> Tint constr
R6694:6705 compcert.common.AST <> typesize def
R6707:6710 compcert.common.AST <> Tint constr
R6694:6705 compcert.common.AST <> typesize def
R6707:6710 compcert.common.AST <> Tint constr
R6694:6705 compcert.common.AST <> typesize def
R6707:6710 compcert.common.AST <> Tint constr
R6694:6705 compcert.common.AST <> typesize def
R6707:6710 compcert.common.AST <> Tint constr
R6694:6705 compcert.common.AST <> typesize def
R6707:6710 compcert.common.AST <> Tint constr
prf 6742:6774 <> offset_of_index_disj_stack_data_2
R6893:6898 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6871:6874 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R6836:6838 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6814:6828 compcert.backend.Stacking <> offset_of_index def
R6833:6835 compcert.backend.Stackingproof <> idx var
R6830:6831 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R6839:6850 compcert.common.AST <> typesize def
R6853:6865 compcert.backend.Stackingproof <> type_of_index def
R6867:6869 compcert.backend.Stackingproof <> idx var
R6879:6891 compcert.ia32.Stacklayout <> fe_stack_data proj
R6875:6876 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R6943:6946 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R6917:6919 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6903:6915 compcert.ia32.Stacklayout <> fe_stack_data proj
R6899:6900 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R6923:6941 compcert.backend.Linear <> fn_stacksize proj
R6920:6920 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R6947:6961 compcert.backend.Stacking <> offset_of_index def
R6966:6968 compcert.backend.Stackingproof <> idx var
R6963:6964 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R6793:6803 compcert.backend.Stackingproof <> index_valid def
R6805:6807 compcert.backend.Stackingproof <> idx var
R6999:7031 compcert.backend.Stackingproof <> offset_of_index_disj_stack_data_1 thm
R7054:7079 compcert.backend.Stackingproof <> bound_stack_data_stacksize thm
R7054:7079 compcert.backend.Stackingproof <> bound_stack_data_stacksize thm
prf 7134:7145 <> aligned_4_4x
R7158:7158 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7160:7162 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7168:7168 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7164:7166 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R7167:7167 compcert.backend.Stackingproof <> x var
prf 7214:7225 <> aligned_4_8x
R7238:7238 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7240:7242 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7248:7248 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7244:7246 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R7247:7247 compcert.backend.Stackingproof <> x var
R7274:7276 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R7274:7276 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
prf 7300:7310 <> aligned_8_4
R7336:7336 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7338:7340 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7342:7342 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7341:7341 compcert.backend.Stackingproof <> x var
R7325:7325 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7327:7329 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7331:7331 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7330:7330 compcert.backend.Stackingproof <> x var
R7366:7379 compcert.lib.Coqlib <> Zdivides_trans thm
R7366:7379 compcert.lib.Coqlib <> Zdivides_trans thm
R7430:7438 Coq.ZArith.Znumtheory <> Zdivide_0 syndef
R7440:7451 Coq.ZArith.Znumtheory <> Zdivide_refl syndef
R7453:7466 Coq.ZArith.Znumtheory <> Zdivide_plus_r syndef
R7482:7493 compcert.backend.Stackingproof <> aligned_4_4x thm
R7495:7506 compcert.backend.Stackingproof <> aligned_4_8x thm
R7508:7518 compcert.backend.Stackingproof <> aligned_8_4 thm
R7544:7545 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7547:7550 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7552:7552 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7567:7567 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
prf 7603:7625 <> offset_of_index_aligned
R7642:7642 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7644:7646 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7669:7669 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7647:7661 compcert.backend.Stacking <> offset_of_index def
R7666:7668 compcert.backend.Stackingproof <> idx var
R7663:7664 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R7703:7719 compcert.ia32.Stacklayout <> frame_env_aligned thm
R7721:7721 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R7703:7719 compcert.ia32.Stacklayout <> frame_env_aligned thm
R7721:7721 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R0:-1 compcert.backend.Stackingproof <> y var
R7741:7742 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R7741:7742 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R0:-1 compcert.backend.Stackingproof <> y var
R7804:7818 compcert.backend.Stacking <> offset_of_index def
R7821:7833 compcert.backend.Stackingproof <> type_of_index def
R7836:7847 compcert.common.AST <> typesize def
prf 7883:7907 <> offset_of_index_aligned_2
R7945:7945 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7993:7995 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R8018:8018 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R7946:7956 compcert.common.Memdata <> align_chunk def
R7959:7971 compcert.common.AST <> chunk_of_type def
R7974:7986 compcert.backend.Stackingproof <> type_of_index def
R7988:7990 compcert.backend.Stackingproof <> idx var
R7996:8010 compcert.backend.Stacking <> offset_of_index def
R8015:8017 compcert.backend.Stackingproof <> idx var
R8012:8013 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R7924:7934 compcert.backend.Stackingproof <> index_valid def
R7936:7938 compcert.backend.Stackingproof <> idx var
R8047:8057 compcert.common.Memdata <> align_chunk def
R8060:8072 compcert.common.AST <> chunk_of_type def
R8075:8087 compcert.backend.Stackingproof <> type_of_index def
R8047:8057 compcert.common.Memdata <> align_chunk def
R8060:8072 compcert.common.AST <> chunk_of_type def
R8075:8087 compcert.backend.Stackingproof <> type_of_index def
R8112:8134 compcert.backend.Stackingproof <> offset_of_index_aligned thm
R8112:8134 compcert.backend.Stackingproof <> offset_of_index_aligned thm
R8164:8167 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R8147:8159 compcert.backend.Stackingproof <> type_of_index def
R8168:8172 compcert.common.AST <> Tlong constr
R8164:8167 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R8147:8159 compcert.backend.Stackingproof <> type_of_index def
R8168:8172 compcert.common.AST <> Tlong constr
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R8251:8263 compcert.backend.Stackingproof <> type_of_index def
R8251:8263 compcert.backend.Stackingproof <> type_of_index def
prf 8301:8321 <> fe_stack_data_aligned
R8326:8326 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R8328:8330 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R8347:8347 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R8331:8343 compcert.ia32.Stacklayout <> fe_stack_data proj
R8345:8346 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R8381:8397 compcert.ia32.Stacklayout <> frame_env_aligned thm
R8399:8399 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R8381:8397 compcert.ia32.Stacklayout <> frame_env_aligned thm
R8399:8399 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R0:-1 compcert.backend.Stackingproof <> y var
R8419:8420 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R8419:8420 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R0:-1 compcert.backend.Stackingproof <> y var
prf 8551:8567 <> index_local_valid
R8664:8674 compcert.backend.Stackingproof <> index_valid def
R8677:8684 compcert.backend.Stacking <> FI_local constr
R8690:8691 compcert.backend.Stackingproof <> ty var
R8686:8688 compcert.backend.Stackingproof <> ofs var
R8651:8653 Coq.Init.Logic <> :type_scope:x_'='_x not
R8626:8635 compcert.backend.Lineartyping <> slot_valid def
R8649:8650 compcert.backend.Stackingproof <> ty var
R8645:8647 compcert.backend.Stackingproof <> ofs var
R8639:8643 compcert.backend.Locations <> Local constr
R8637:8637 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R8654:8657 Coq.Init.Datatypes <> true constr
R8589:8606 compcert.backend.Bounds <> slot_within_bounds def
R8620:8621 compcert.backend.Stackingproof <> ty var
R8616:8618 compcert.backend.Stackingproof <> ofs var
R8610:8614 compcert.backend.Locations <> Local constr
R8608:8608 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R8711:8728 compcert.backend.Bounds <> slot_within_bounds def
R8731:8740 compcert.backend.Lineartyping <> slot_valid def
R8743:8753 compcert.backend.Stackingproof <> index_valid def
prf 8843:8857 <> index_arg_valid
R8960:8970 compcert.backend.Stackingproof <> index_valid def
R8973:8978 compcert.backend.Stacking <> FI_arg constr
R8984:8985 compcert.backend.Stackingproof <> ty var
R8980:8982 compcert.backend.Stackingproof <> ofs var
R8947:8949 Coq.Init.Logic <> :type_scope:x_'='_x not
R8919:8928 compcert.backend.Lineartyping <> slot_valid def
R8945:8946 compcert.backend.Stackingproof <> ty var
R8941:8943 compcert.backend.Stackingproof <> ofs var
R8932:8939 compcert.backend.Locations <> Outgoing constr
R8930:8930 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R8950:8953 Coq.Init.Datatypes <> true constr
R8879:8896 compcert.backend.Bounds <> slot_within_bounds def
R8913:8914 compcert.backend.Stackingproof <> ty var
R8909:8911 compcert.backend.Stackingproof <> ofs var
R8900:8907 compcert.backend.Locations <> Outgoing constr
R8898:8898 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R9005:9022 compcert.backend.Bounds <> slot_within_bounds def
R9025:9034 compcert.backend.Lineartyping <> slot_valid def
R9037:9047 compcert.backend.Stackingproof <> index_valid def
prf 9138:9158 <> index_saved_int_valid
R9263:9273 compcert.backend.Stackingproof <> index_valid def
R9276:9287 compcert.backend.Stacking <> FI_saved_int constr
R9290:9310 compcert.ia32.Conventions1 <> index_int_callee_save def
R9312:9312 compcert.backend.Stackingproof <> r var
R9229:9231 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R9206:9226 compcert.ia32.Conventions1 <> index_int_callee_save def
R9228:9228 compcert.backend.Stackingproof <> r var
R9235:9255 compcert.backend.Bounds <> bound_int_callee_save proj
R9232:9232 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R9175:9176 Coq.Lists.List <> In def
R9180:9199 compcert.ia32.Conventions1 <> int_callee_save_regs def
R9178:9178 compcert.backend.Stackingproof <> r var
R9355:9360 Coq.ZArith.Zorder <> Zge_le syndef
R9355:9360 Coq.ZArith.Zorder <> Zge_le syndef
R9369:9393 compcert.ia32.Conventions1 <> index_int_callee_save_pos thm
R9369:9393 compcert.ia32.Conventions1 <> index_int_callee_save_pos thm
prf 9423:9445 <> index_saved_float_valid
R9556:9566 compcert.backend.Stackingproof <> index_valid def
R9569:9582 compcert.backend.Stacking <> FI_saved_float constr
R9585:9607 compcert.ia32.Conventions1 <> index_float_callee_save def
R9609:9609 compcert.backend.Stackingproof <> r var
R9520:9522 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R9495:9517 compcert.ia32.Conventions1 <> index_float_callee_save def
R9519:9519 compcert.backend.Stackingproof <> r var
R9526:9548 compcert.backend.Bounds <> bound_float_callee_save proj
R9523:9523 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R9462:9463 Coq.Lists.List <> In def
R9467:9488 compcert.ia32.Conventions1 <> float_callee_save_regs def
R9465:9465 compcert.backend.Stackingproof <> r var
R9652:9657 Coq.ZArith.Zorder <> Zge_le syndef
R9652:9657 Coq.ZArith.Zorder <> Zge_le syndef
R9666:9692 compcert.ia32.Conventions1 <> index_float_callee_save_pos thm
R9666:9692 compcert.ia32.Conventions1 <> index_float_callee_save_pos thm
R9729:9745 compcert.backend.Stackingproof <> index_local_valid thm
R9747:9761 compcert.backend.Stackingproof <> index_arg_valid thm
R9776:9796 compcert.backend.Stackingproof <> index_saved_int_valid thm
R9798:9820 compcert.backend.Stackingproof <> index_saved_float_valid thm
prf 9913:9933 <> offset_of_index_valid
R10000:10005 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9974:9977 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R9978:9992 compcert.backend.Stacking <> offset_of_index def
R9997:9999 compcert.backend.Stackingproof <> idx var
R9994:9995 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10063:10066 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R10028:10030 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R10006:10020 compcert.backend.Stacking <> offset_of_index def
R10025:10027 compcert.backend.Stackingproof <> idx var
R10022:10023 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10031:10042 compcert.common.AST <> typesize def
R10045:10057 compcert.backend.Stackingproof <> type_of_index def
R10059:10061 compcert.backend.Stackingproof <> idx var
R10071:10077 compcert.ia32.Stacklayout <> fe_size proj
R10067:10068 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R9952:9962 compcert.backend.Stackingproof <> index_valid def
R9964:9966 compcert.backend.Stackingproof <> idx var
R10118:10136 compcert.ia32.Stacklayout <> frame_env_separated thm
R10138:10138 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R10118:10136 compcert.ia32.Stacklayout <> frame_env_separated thm
R10138:10138 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R10161:10162 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10161:10162 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10175:10176 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10175:10176 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10258:10272 compcert.backend.Stacking <> offset_of_index def
R10275:10287 compcert.backend.Stackingproof <> type_of_index def
R10300:10311 compcert.common.AST <> typesize def
R10313:10318 compcert.common.AST <> Tany32 constr
R10337:10348 compcert.common.AST <> typesize def
R10350:10355 compcert.common.AST <> Tany64 constr
R10376:10387 compcert.common.AST <> typesize def
R10389:10392 compcert.common.AST <> Tint constr
R10300:10311 compcert.common.AST <> typesize def
R10313:10318 compcert.common.AST <> Tany32 constr
R10300:10311 compcert.common.AST <> typesize def
R10313:10318 compcert.common.AST <> Tany32 constr
R10300:10311 compcert.common.AST <> typesize def
R10313:10318 compcert.common.AST <> Tany32 constr
R10300:10311 compcert.common.AST <> typesize def
R10313:10318 compcert.common.AST <> Tany32 constr
R10300:10311 compcert.common.AST <> typesize def
R10313:10318 compcert.common.AST <> Tany32 constr
R10300:10311 compcert.common.AST <> typesize def
R10313:10318 compcert.common.AST <> Tany32 constr
R10337:10348 compcert.common.AST <> typesize def
R10350:10355 compcert.common.AST <> Tany64 constr
R10337:10348 compcert.common.AST <> typesize def
R10350:10355 compcert.common.AST <> Tany64 constr
R10337:10348 compcert.common.AST <> typesize def
R10350:10355 compcert.common.AST <> Tany64 constr
R10337:10348 compcert.common.AST <> typesize def
R10350:10355 compcert.common.AST <> Tany64 constr
R10337:10348 compcert.common.AST <> typesize def
R10350:10355 compcert.common.AST <> Tany64 constr
R10337:10348 compcert.common.AST <> typesize def
R10350:10355 compcert.common.AST <> Tany64 constr
R10376:10387 compcert.common.AST <> typesize def
R10389:10392 compcert.common.AST <> Tint constr
R10376:10387 compcert.common.AST <> typesize def
R10389:10392 compcert.common.AST <> Tint constr
R10376:10387 compcert.common.AST <> typesize def
R10389:10392 compcert.common.AST <> Tint constr
R10376:10387 compcert.common.AST <> typesize def
R10389:10392 compcert.common.AST <> Tint constr
R10376:10387 compcert.common.AST <> typesize def
R10389:10392 compcert.common.AST <> Tint constr
R10376:10387 compcert.common.AST <> typesize def
R10389:10392 compcert.common.AST <> Tint constr
prf 10510:10532 <> stack_data_offset_valid
R10560:10563 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10538:10541 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R10546:10558 compcert.ia32.Stacklayout <> fe_stack_data proj
R10542:10543 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10605:10608 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R10582:10584 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R10568:10580 compcert.ia32.Stacklayout <> fe_stack_data proj
R10564:10565 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10588:10603 compcert.backend.Bounds <> bound_stack_data proj
R10585:10585 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R10613:10619 compcert.ia32.Stacklayout <> fe_size proj
R10609:10610 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10644:10662 compcert.ia32.Stacklayout <> frame_env_separated thm
R10664:10664 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R10644:10662 compcert.ia32.Stacklayout <> frame_env_separated thm
R10664:10664 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R10687:10688 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10687:10688 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10701:10702 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10701:10702 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
prf 10852:10878 <> offset_of_index_no_overflow
R10966:10968 Coq.Init.Logic <> :type_scope:x_'='_x not
R10918:10929 compcert.lib.Integers Int unsigned def
R10932:10939 compcert.lib.Integers Int repr def
R10942:10956 compcert.backend.Stacking <> offset_of_index def
R10961:10963 compcert.backend.Stackingproof <> idx var
R10958:10959 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10969:10983 compcert.backend.Stacking <> offset_of_index def
R10988:10990 compcert.backend.Stackingproof <> idx var
R10985:10986 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R10897:10907 compcert.backend.Stackingproof <> index_valid def
R10909:10911 compcert.backend.Stackingproof <> idx var
R11024:11044 compcert.backend.Stackingproof <> offset_of_index_valid thm
R11024:11044 compcert.backend.Stackingproof <> offset_of_index_valid thm
R11076:11092 compcert.lib.Integers Int unsigned_repr thm
R11076:11092 compcert.lib.Integers Int unsigned_repr thm
R11109:11124 compcert.common.AST <> typesize_pos thm
R11127:11139 compcert.backend.Stackingproof <> type_of_index def
R11109:11124 compcert.common.AST <> typesize_pos thm
R11127:11139 compcert.backend.Stackingproof <> type_of_index def
R11161:11176 compcert.backend.Stackingproof <> size_no_overflow thm
R11161:11176 compcert.backend.Stackingproof <> size_no_overflow thm
prf 11277:11308 <> shifted_stack_offset_no_overflow
R11434:11439 Coq.Init.Logic <> :type_scope:x_'='_x not
R11378:11389 compcert.lib.Integers Int unsigned def
R11392:11398 compcert.lib.Integers Int add def
R11405:11412 compcert.lib.Integers Int repr def
R11418:11430 compcert.ia32.Stacklayout <> fe_stack_data proj
R11414:11415 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R11400:11402 compcert.backend.Stackingproof <> ofs var
R11456:11458 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11440:11451 compcert.lib.Integers Int unsigned def
R11453:11455 compcert.backend.Stackingproof <> ofs var
R11463:11475 compcert.ia32.Stacklayout <> fe_stack_data proj
R11459:11460 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R11328:11331 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R11348:11350 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R11332:11343 compcert.lib.Integers Int unsigned def
R11345:11347 compcert.backend.Stackingproof <> ofs var
R11332:11343 compcert.lib.Integers Int unsigned def
R11345:11347 compcert.backend.Stackingproof <> ofs var
R11351:11369 compcert.backend.Linear <> fn_stacksize proj
R11371:11371 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R11503:11509 compcert.lib.Integers Int add def
R11525:11540 compcert.backend.Stackingproof <> size_no_overflow thm
R11542:11564 compcert.backend.Stackingproof <> stack_data_offset_valid thm
R11566:11591 compcert.backend.Stackingproof <> bound_stack_data_stacksize thm
R11525:11540 compcert.backend.Stackingproof <> size_no_overflow thm
R11542:11564 compcert.backend.Stackingproof <> stack_data_offset_valid thm
R11566:11591 compcert.backend.Stackingproof <> bound_stack_data_stacksize thm
R11628:11639 compcert.lib.Integers Int unsigned def
R11642:11649 compcert.lib.Integers Int repr def
R11652:11664 compcert.ia32.Stacklayout <> fe_stack_data proj
R11666:11667 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R11678:11690 compcert.ia32.Stacklayout <> fe_stack_data proj
R11692:11693 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R11678:11690 compcert.ia32.Stacklayout <> fe_stack_data proj
R11692:11693 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R11628:11639 compcert.lib.Integers Int unsigned def
R11642:11649 compcert.lib.Integers Int repr def
R11652:11664 compcert.ia32.Stacklayout <> fe_stack_data proj
R11666:11667 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R11705:11721 compcert.lib.Integers Int unsigned_repr thm
R11705:11721 compcert.lib.Integers Int unsigned_repr thm
R11750:11766 compcert.lib.Integers Int unsigned_repr thm
R11750:11766 compcert.lib.Integers Int unsigned_repr thm
ind 11826:11839 <> index_contains
constr 11904:11923 <> index_contains_intro
R11845:11847 compcert.common.Memory <> mem syndef
R11855:11859 compcert.common.Values <> block def
R11868:11878 compcert.backend.Stacking <> frame_index ind
R11885:11887 compcert.common.Values <> val ind
R12050:12063 compcert.backend.Stackingproof <> index_contains ind
R12031:12033 Coq.Init.Logic <> :type_scope:x_'='_x not
R11957:11964 compcert.common.Memory Mem load def
R12008:12022 compcert.backend.Stacking <> offset_of_index def
R12024:12025 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R11967:11979 compcert.common.AST <> chunk_of_type def
R11982:11994 compcert.backend.Stackingproof <> type_of_index def
R12034:12037 Coq.Init.Datatypes <> Some constr
R11932:11942 compcert.backend.Stackingproof <> index_valid def
prf 12084:12108 <> index_contains_load_stack
R12266:12268 Coq.Init.Logic <> :type_scope:x_'='_x not
R12165:12174 compcert.backend.Mach <> load_stack def
R12232:12239 compcert.lib.Integers Int repr def
R12242:12256 compcert.backend.Stacking <> offset_of_index def
R12261:12263 compcert.backend.Stackingproof <> idx var
R12258:12259 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R12198:12210 compcert.backend.Stackingproof <> type_of_index def
R12212:12214 compcert.backend.Stackingproof <> idx var
R12179:12182 compcert.common.Values <> Vptr constr
R12187:12194 compcert.lib.Integers Int zero def
R12184:12185 compcert.backend.Stackingproof <> sp var
R12176:12176 compcert.backend.Stackingproof <> m var
R12269:12272 Coq.Init.Datatypes <> Some constr
R12274:12274 compcert.backend.Stackingproof <> v var
R12134:12147 compcert.backend.Stackingproof <> index_contains ind
R12158:12158 compcert.backend.Stackingproof <> v var
R12154:12156 compcert.backend.Stackingproof <> idx var
R12151:12152 compcert.backend.Stackingproof <> sp var
R12149:12149 compcert.backend.Stackingproof <> m var
R12311:12320 compcert.backend.Mach <> load_stack def
R12323:12331 compcert.common.Memory Mem loadv def
R12334:12340 compcert.common.Values Val add def
R12351:12364 compcert.lib.Integers Int add_commut thm
R12351:12364 compcert.lib.Integers Int add_commut thm
R12375:12386 compcert.lib.Integers Int add_zero thm
R12375:12386 compcert.lib.Integers Int add_zero thm
R12399:12425 compcert.backend.Stackingproof <> offset_of_index_no_overflow thm
R12399:12425 compcert.backend.Stackingproof <> offset_of_index_no_overflow thm
prf 12500:12522 <> gss_index_contains_base
R12665:12671 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12674:12680 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12708:12713 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12681:12694 compcert.backend.Stackingproof <> index_contains ind
R12706:12707 compcert.backend.Stackingproof <> v' var
R12702:12704 compcert.backend.Stackingproof <> idx var
R12699:12700 compcert.backend.Stackingproof <> sp var
R12696:12697 compcert.backend.Stackingproof <> m' var
R12714:12730 compcert.common.Memdata <> decode_encode_val def
R12806:12807 compcert.backend.Stackingproof <> v' var
R12771:12783 compcert.common.AST <> chunk_of_type def
R12786:12798 compcert.backend.Stackingproof <> type_of_index def
R12800:12802 compcert.backend.Stackingproof <> idx var
R12735:12747 compcert.common.AST <> chunk_of_type def
R12750:12762 compcert.backend.Stackingproof <> type_of_index def
R12764:12766 compcert.backend.Stackingproof <> idx var
R12732:12732 compcert.backend.Stackingproof <> v var
R12644:12654 compcert.backend.Stackingproof <> index_valid def
R12656:12658 compcert.backend.Stackingproof <> idx var
R12628:12630 Coq.Init.Logic <> :type_scope:x_'='_x not
R12551:12559 compcert.common.Memory Mem store def
R12627:12627 compcert.backend.Stackingproof <> v var
R12603:12617 compcert.backend.Stacking <> offset_of_index def
R12622:12624 compcert.backend.Stackingproof <> idx var
R12619:12620 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R12599:12600 compcert.backend.Stackingproof <> sp var
R12597:12597 compcert.backend.Stackingproof <> m var
R12562:12574 compcert.common.AST <> chunk_of_type def
R12577:12589 compcert.backend.Stackingproof <> type_of_index def
R12591:12593 compcert.backend.Stackingproof <> idx var
R12631:12634 Coq.Init.Datatypes <> Some constr
R12636:12637 compcert.backend.Stackingproof <> m' var
R12838:12859 compcert.common.Memory Mem load_store_similar thm
prf 12968:12985 <> gss_index_contains
R13168:13181 compcert.backend.Stackingproof <> index_contains ind
R13193:13193 compcert.backend.Stackingproof <> v var
R13189:13191 compcert.backend.Stackingproof <> idx var
R13186:13187 compcert.backend.Stackingproof <> sp var
R13183:13184 compcert.backend.Stackingproof <> m' var
R13128:13139 compcert.common.Values Val has_type def
R13144:13156 compcert.backend.Stackingproof <> type_of_index def
R13158:13160 compcert.backend.Stackingproof <> idx var
R13141:13141 compcert.backend.Stackingproof <> v var
R13107:13117 compcert.backend.Stackingproof <> index_valid def
R13119:13121 compcert.backend.Stackingproof <> idx var
R13091:13093 Coq.Init.Logic <> :type_scope:x_'='_x not
R13014:13022 compcert.common.Memory Mem store def
R13090:13090 compcert.backend.Stackingproof <> v var
R13066:13080 compcert.backend.Stacking <> offset_of_index def
R13085:13087 compcert.backend.Stackingproof <> idx var
R13082:13083 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R13062:13063 compcert.backend.Stackingproof <> sp var
R13060:13060 compcert.backend.Stackingproof <> m var
R13025:13037 compcert.common.AST <> chunk_of_type def
R13040:13052 compcert.backend.Stackingproof <> type_of_index def
R13054:13056 compcert.backend.Stackingproof <> idx var
R13094:13097 Coq.Init.Datatypes <> Some constr
R13099:13100 compcert.backend.Stackingproof <> m' var
R13221:13243 compcert.backend.Stackingproof <> gss_index_contains_base thm
R13284:13286 Coq.Init.Logic <> :type_scope:x_'='_x not
R13284:13286 Coq.Init.Logic <> :type_scope:x_'='_x not
R13317:13329 compcert.backend.Stackingproof <> type_of_index def
R13317:13329 compcert.backend.Stackingproof <> type_of_index def
R13317:13329 compcert.backend.Stackingproof <> type_of_index def
R13317:13329 compcert.backend.Stackingproof <> type_of_index def
R13317:13329 compcert.backend.Stackingproof <> type_of_index def
R13317:13329 compcert.backend.Stackingproof <> type_of_index def
R13317:13329 compcert.backend.Stackingproof <> type_of_index def
prf 13408:13425 <> gso_index_contains
R13634:13647 compcert.backend.Stackingproof <> index_contains ind
R13660:13661 compcert.backend.Stackingproof <> v' var
R13655:13658 compcert.backend.Stackingproof <> idx' var
R13652:13653 compcert.backend.Stackingproof <> sp var
R13649:13650 compcert.backend.Stackingproof <> m' var
R13609:13618 compcert.backend.Stackingproof <> index_diff def
R13624:13627 compcert.backend.Stackingproof <> idx' var
R13620:13622 compcert.backend.Stackingproof <> idx var
R13576:13589 compcert.backend.Stackingproof <> index_contains ind
R13601:13602 compcert.backend.Stackingproof <> v' var
R13596:13599 compcert.backend.Stackingproof <> idx' var
R13593:13594 compcert.backend.Stackingproof <> sp var
R13591:13591 compcert.backend.Stackingproof <> m var
R13555:13565 compcert.backend.Stackingproof <> index_valid def
R13567:13569 compcert.backend.Stackingproof <> idx var
R13539:13541 Coq.Init.Logic <> :type_scope:x_'='_x not
R13462:13470 compcert.common.Memory Mem store def
R13538:13538 compcert.backend.Stackingproof <> v var
R13514:13528 compcert.backend.Stacking <> offset_of_index def
R13533:13535 compcert.backend.Stackingproof <> idx var
R13530:13531 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R13510:13511 compcert.backend.Stackingproof <> sp var
R13508:13508 compcert.backend.Stackingproof <> m var
R13473:13485 compcert.common.AST <> chunk_of_type def
R13488:13500 compcert.backend.Stackingproof <> type_of_index def
R13502:13504 compcert.backend.Stackingproof <> idx var
R13542:13545 Coq.Init.Datatypes <> Some constr
R13547:13548 compcert.backend.Stackingproof <> m' var
R13733:13752 compcert.common.Memory Mem load_store_other thm
R13733:13752 compcert.common.Memory Mem load_store_other thm
R13786:13800 compcert.backend.Stackingproof <> size_type_chunk thm
R13786:13800 compcert.backend.Stackingproof <> size_type_chunk thm
R13786:13800 compcert.backend.Stackingproof <> size_type_chunk thm
R13786:13800 compcert.backend.Stackingproof <> size_type_chunk thm
R13812:13831 compcert.backend.Stackingproof <> offset_of_index_disj thm
R13812:13831 compcert.backend.Stackingproof <> offset_of_index_disj thm
R13846:13859 compcert.backend.Stackingproof <> index_diff_sym thm
R13846:13859 compcert.backend.Stackingproof <> index_diff_sym thm
prf 13880:13905 <> store_other_index_contains
R14150:14163 compcert.backend.Stackingproof <> index_contains ind
R14175:14175 compcert.backend.Stackingproof <> v var
R14171:14173 compcert.backend.Stackingproof <> idx var
R14168:14169 compcert.backend.Stackingproof <> sp var
R14165:14166 compcert.backend.Stackingproof <> m' var
R14119:14132 compcert.backend.Stackingproof <> index_contains ind
R14143:14143 compcert.backend.Stackingproof <> v var
R14139:14141 compcert.backend.Stackingproof <> idx var
R14136:14137 compcert.backend.Stackingproof <> sp var
R14134:14134 compcert.backend.Stackingproof <> m var
R14004:14012 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R14112:14112 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R13998:14001 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R13995:13997 compcert.backend.Stackingproof <> blk var
R14002:14003 compcert.backend.Stackingproof <> sp var
R14038:14041 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14031:14034 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R14017:14029 compcert.ia32.Stacklayout <> fe_stack_data proj
R14013:14014 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R14035:14037 compcert.backend.Stackingproof <> ofs var
R14064:14067 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R14045:14047 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14042:14044 compcert.backend.Stackingproof <> ofs var
R14048:14057 compcert.common.Memdata <> size_chunk def
R14059:14063 compcert.backend.Stackingproof <> chunk var
R14086:14088 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14072:14084 compcert.ia32.Stacklayout <> fe_stack_data proj
R14068:14069 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R14092:14110 compcert.backend.Linear <> fn_stacksize proj
R14089:14089 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R13979:13981 Coq.Init.Logic <> :type_scope:x_'='_x not
R13951:13959 compcert.common.Memory Mem store def
R13977:13978 compcert.backend.Stackingproof <> v' var
R13973:13975 compcert.backend.Stackingproof <> ofs var
R13969:13971 compcert.backend.Stackingproof <> blk var
R13967:13967 compcert.backend.Stackingproof <> m var
R13961:13965 compcert.backend.Stackingproof <> chunk var
R13982:13985 Coq.Init.Datatypes <> Some constr
R13987:13988 compcert.backend.Stackingproof <> m' var
R14247:14266 compcert.common.Memory Mem load_store_other thm
R14247:14266 compcert.common.Memory Mem load_store_other thm
R14316:14348 compcert.backend.Stackingproof <> offset_of_index_disj_stack_data_2 thm
R14376:14390 compcert.backend.Stackingproof <> size_type_chunk thm
R14376:14390 compcert.backend.Stackingproof <> size_type_chunk thm
def 14419:14437 <> frame_perm_freeable
R14443:14445 compcert.common.Memory <> mem syndef
R14453:14457 compcert.common.Values <> block def
R14599:14606 compcert.common.Memory Mem perm def
R14621:14628 compcert.common.Memtype <> Freeable constr
R14617:14619 compcert.common.Memtype <> Cur constr
R14613:14615 compcert.backend.Stackingproof <> ofs var
R14610:14611 compcert.backend.Stackingproof <> sp var
R14608:14608 compcert.backend.Stackingproof <> m var
R14538:14541 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R14517:14519 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14514:14516 compcert.backend.Stackingproof <> ofs var
R14524:14536 compcert.ia32.Stacklayout <> fe_stack_data proj
R14520:14521 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R14586:14589 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R14560:14562 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14546:14558 compcert.ia32.Stacklayout <> fe_stack_data proj
R14542:14543 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R14566:14584 compcert.backend.Linear <> fn_stacksize proj
R14563:14563 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R14590:14592 compcert.backend.Stackingproof <> ofs var
R14486:14489 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R14493:14495 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R14490:14492 compcert.backend.Stackingproof <> ofs var
R14490:14492 compcert.backend.Stackingproof <> ofs var
R14500:14506 compcert.ia32.Stacklayout <> fe_size proj
R14496:14497 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
prf 14638:14657 <> offset_of_index_perm
R14732:14745 compcert.common.Memory Mem range_perm def
R14841:14848 compcert.common.Memtype <> Freeable constr
R14837:14839 compcert.common.Memtype <> Cur constr
R14800:14802 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14778:14792 compcert.backend.Stacking <> offset_of_index def
R14797:14799 compcert.backend.Stackingproof <> idx var
R14794:14795 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R14803:14814 compcert.common.AST <> typesize def
R14817:14829 compcert.backend.Stackingproof <> type_of_index def
R14831:14833 compcert.backend.Stackingproof <> idx var
R14753:14767 compcert.backend.Stacking <> offset_of_index def
R14772:14774 compcert.backend.Stackingproof <> idx var
R14769:14770 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R14749:14750 compcert.backend.Stackingproof <> sp var
R14747:14747 compcert.backend.Stackingproof <> m var
R14702:14720 compcert.backend.Stackingproof <> frame_perm_freeable def
R14724:14725 compcert.backend.Stackingproof <> sp var
R14722:14722 compcert.backend.Stackingproof <> m var
R14681:14691 compcert.backend.Stackingproof <> index_valid def
R14693:14695 compcert.backend.Stackingproof <> idx var
R14878:14898 compcert.backend.Stackingproof <> offset_of_index_valid thm
R14932:14964 compcert.backend.Stackingproof <> offset_of_index_disj_stack_data_2 thm
prf 15033:15052 <> store_index_succeeds
R15129:15135 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15138:15141 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15219:15221 Coq.Init.Logic <> :type_scope:x_'='_x not
R15142:15150 compcert.common.Memory Mem store def
R15218:15218 compcert.backend.Stackingproof <> v var
R15194:15208 compcert.backend.Stacking <> offset_of_index def
R15213:15215 compcert.backend.Stackingproof <> idx var
R15210:15211 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R15190:15191 compcert.backend.Stackingproof <> sp var
R15188:15188 compcert.backend.Stackingproof <> m var
R15153:15165 compcert.common.AST <> chunk_of_type def
R15168:15180 compcert.backend.Stackingproof <> type_of_index def
R15182:15184 compcert.backend.Stackingproof <> idx var
R15222:15225 Coq.Init.Datatypes <> Some constr
R15227:15228 compcert.backend.Stackingproof <> m' var
R15099:15117 compcert.backend.Stackingproof <> frame_perm_freeable def
R15121:15122 compcert.backend.Stackingproof <> sp var
R15119:15119 compcert.backend.Stackingproof <> m var
R15078:15088 compcert.backend.Stackingproof <> index_valid def
R15090:15092 compcert.backend.Stackingproof <> idx var
R15260:15281 compcert.common.Memory Mem valid_access_store thm
R15325:15339 compcert.backend.Stacking <> offset_of_index def
R15341:15342 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R15286:15298 compcert.common.AST <> chunk_of_type def
R15301:15313 compcert.backend.Stackingproof <> type_of_index def
R15260:15281 compcert.common.Memory Mem valid_access_store thm
R15325:15339 compcert.backend.Stacking <> offset_of_index def
R15341:15342 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R15286:15298 compcert.common.AST <> chunk_of_type def
R15301:15313 compcert.backend.Stackingproof <> type_of_index def
R15389:15403 compcert.backend.Stackingproof <> size_type_chunk thm
R15389:15403 compcert.backend.Stackingproof <> size_type_chunk thm
R15443:15450 compcert.common.Memtype <> Freeable constr
R15415:15436 compcert.common.Memory Mem range_perm_implies thm
R15443:15450 compcert.common.Memtype <> Freeable constr
R15415:15436 compcert.common.Memory Mem range_perm_implies thm
R15476:15495 compcert.backend.Stackingproof <> offset_of_index_perm thm
R15476:15495 compcert.backend.Stackingproof <> offset_of_index_perm thm
R15512:15536 compcert.backend.Stackingproof <> offset_of_index_aligned_2 thm
R15512:15536 compcert.backend.Stackingproof <> offset_of_index_aligned_2 thm
prf 15576:15595 <> store_stack_succeeds
R15828:15830 Coq.Init.Logic <> :type_scope:x_'='_x not
R15738:15748 compcert.backend.Mach <> store_stack def
R15827:15827 compcert.backend.Stackingproof <> v var
R15792:15799 compcert.lib.Integers Int repr def
R15802:15816 compcert.backend.Stacking <> offset_of_index def
R15821:15823 compcert.backend.Stackingproof <> idx var
R15818:15819 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R15772:15784 compcert.backend.Stackingproof <> type_of_index def
R15786:15788 compcert.backend.Stackingproof <> idx var
R15753:15756 compcert.common.Values <> Vptr constr
R15761:15768 compcert.lib.Integers Int zero def
R15758:15759 compcert.backend.Stackingproof <> sp var
R15750:15750 compcert.backend.Stackingproof <> m var
R15831:15834 Coq.Init.Datatypes <> Some constr
R15836:15837 compcert.backend.Stackingproof <> m' var
R15722:15724 Coq.Init.Logic <> :type_scope:x_'='_x not
R15645:15653 compcert.common.Memory Mem store def
R15721:15721 compcert.backend.Stackingproof <> v var
R15697:15711 compcert.backend.Stacking <> offset_of_index def
R15716:15718 compcert.backend.Stackingproof <> idx var
R15713:15714 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R15693:15694 compcert.backend.Stackingproof <> sp var
R15691:15691 compcert.backend.Stackingproof <> m var
R15656:15668 compcert.common.AST <> chunk_of_type def
R15671:15683 compcert.backend.Stackingproof <> type_of_index def
R15685:15687 compcert.backend.Stackingproof <> idx var
R15725:15728 Coq.Init.Datatypes <> Some constr
R15730:15731 compcert.backend.Stackingproof <> m' var
R15624:15634 compcert.backend.Stackingproof <> index_valid def
R15636:15638 compcert.backend.Stackingproof <> idx var
R15864:15874 compcert.backend.Mach <> store_stack def
R15877:15886 compcert.common.Memory Mem storev def
R15889:15895 compcert.common.Values Val add def
R15908:15921 compcert.lib.Integers Int add_commut thm
R15908:15921 compcert.lib.Integers Int add_commut thm
R15932:15943 compcert.lib.Integers Int add_zero thm
R15932:15943 compcert.lib.Integers Int add_zero thm
R15956:15982 compcert.backend.Stackingproof <> offset_of_index_no_overflow thm
R15956:15982 compcert.backend.Stackingproof <> offset_of_index_no_overflow thm
def 16073:16090 <> index_contains_inj
R16096:16101 compcert.common.Values <> meminj def
R16108:16110 compcert.common.Memory <> mem syndef
R16118:16122 compcert.common.Values <> block def
R16131:16141 compcert.backend.Stacking <> frame_index ind
R16148:16150 compcert.common.Values <> val ind
R16165:16171 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16174:16175 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16202:16205 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16176:16189 compcert.backend.Stackingproof <> index_contains ind
R16200:16201 compcert.backend.Stackingproof <> v' var
R16196:16198 compcert.backend.Stackingproof <> idx var
R16193:16194 compcert.backend.Stackingproof <> sp var
R16191:16191 compcert.backend.Stackingproof <> m var
R16206:16215 compcert.common.Values <> val_inject ind
R16221:16222 compcert.backend.Stackingproof <> v' var
R16219:16219 compcert.backend.Stackingproof <> v var
R16217:16217 compcert.backend.Stackingproof <> j var
prf 16232:16253 <> gss_index_contains_inj
R16465:16482 compcert.backend.Stackingproof <> index_contains_inj def
R16496:16496 compcert.backend.Stackingproof <> v var
R16492:16494 compcert.backend.Stackingproof <> idx var
R16489:16490 compcert.backend.Stackingproof <> sp var
R16486:16487 compcert.backend.Stackingproof <> m' var
R16484:16484 compcert.backend.Stackingproof <> j var
R16442:16451 compcert.common.Values <> val_inject ind
R16457:16458 compcert.backend.Stackingproof <> v' var
R16455:16455 compcert.backend.Stackingproof <> v var
R16453:16453 compcert.backend.Stackingproof <> j var
R16402:16413 compcert.common.Values Val has_type def
R16418:16430 compcert.backend.Stackingproof <> type_of_index def
R16432:16434 compcert.backend.Stackingproof <> idx var
R16415:16415 compcert.backend.Stackingproof <> v var
R16381:16391 compcert.backend.Stackingproof <> index_valid def
R16393:16395 compcert.backend.Stackingproof <> idx var
R16365:16367 Coq.Init.Logic <> :type_scope:x_'='_x not
R16287:16295 compcert.common.Memory Mem store def
R16363:16364 compcert.backend.Stackingproof <> v' var
R16339:16353 compcert.backend.Stacking <> offset_of_index def
R16358:16360 compcert.backend.Stackingproof <> idx var
R16355:16356 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R16335:16336 compcert.backend.Stackingproof <> sp var
R16333:16333 compcert.backend.Stackingproof <> m var
R16298:16310 compcert.common.AST <> chunk_of_type def
R16313:16325 compcert.backend.Stackingproof <> type_of_index def
R16327:16329 compcert.backend.Stackingproof <> idx var
R16368:16371 Coq.Init.Datatypes <> Some constr
R16373:16374 compcert.backend.Stackingproof <> m' var
R16524:16546 compcert.backend.Stackingproof <> gss_index_contains_base thm
R16623:16635 compcert.backend.Stackingproof <> type_of_index def
R16623:16635 compcert.backend.Stackingproof <> type_of_index def
R16623:16635 compcert.backend.Stackingproof <> type_of_index def
R16623:16635 compcert.backend.Stackingproof <> type_of_index def
R16623:16635 compcert.backend.Stackingproof <> type_of_index def
R16623:16635 compcert.backend.Stackingproof <> type_of_index def
R16623:16635 compcert.backend.Stackingproof <> type_of_index def
prf 16768:16790 <> gss_index_contains_inj'
R16962:16979 compcert.backend.Stackingproof <> index_contains_inj def
R16994:17008 compcert.common.Values Val load_result def
R17046:17046 compcert.backend.Stackingproof <> v var
R17011:17023 compcert.common.AST <> chunk_of_type def
R17026:17038 compcert.backend.Stackingproof <> type_of_index def
R17040:17042 compcert.backend.Stackingproof <> idx var
R16989:16991 compcert.backend.Stackingproof <> idx var
R16986:16987 compcert.backend.Stackingproof <> sp var
R16983:16984 compcert.backend.Stackingproof <> m' var
R16981:16981 compcert.backend.Stackingproof <> j var
R16939:16948 compcert.common.Values <> val_inject ind
R16954:16955 compcert.backend.Stackingproof <> v' var
R16952:16952 compcert.backend.Stackingproof <> v var
R16950:16950 compcert.backend.Stackingproof <> j var
R16918:16928 compcert.backend.Stackingproof <> index_valid def
R16930:16932 compcert.backend.Stackingproof <> idx var
R16902:16904 Coq.Init.Logic <> :type_scope:x_'='_x not
R16824:16832 compcert.common.Memory Mem store def
R16900:16901 compcert.backend.Stackingproof <> v' var
R16876:16890 compcert.backend.Stacking <> offset_of_index def
R16895:16897 compcert.backend.Stackingproof <> idx var
R16892:16893 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R16872:16873 compcert.backend.Stackingproof <> sp var
R16870:16870 compcert.backend.Stackingproof <> m var
R16835:16847 compcert.common.AST <> chunk_of_type def
R16850:16862 compcert.backend.Stackingproof <> type_of_index def
R16864:16866 compcert.backend.Stackingproof <> idx var
R16905:16908 Coq.Init.Datatypes <> Some constr
R16910:16911 compcert.backend.Stackingproof <> m' var
R17075:17097 compcert.backend.Stackingproof <> gss_index_contains_base thm
R17174:17186 compcert.backend.Stackingproof <> type_of_index def
R17174:17186 compcert.backend.Stackingproof <> type_of_index def
R17174:17186 compcert.backend.Stackingproof <> type_of_index def
R17174:17186 compcert.backend.Stackingproof <> type_of_index def
R17174:17186 compcert.backend.Stackingproof <> type_of_index def
R17174:17186 compcert.backend.Stackingproof <> type_of_index def
R17174:17186 compcert.backend.Stackingproof <> type_of_index def
prf 17320:17341 <> gso_index_contains_inj
R17558:17575 compcert.backend.Stackingproof <> index_contains_inj def
R17590:17591 compcert.backend.Stackingproof <> v' var
R17585:17588 compcert.backend.Stackingproof <> idx' var
R17582:17583 compcert.backend.Stackingproof <> sp var
R17579:17580 compcert.backend.Stackingproof <> m' var
R17577:17577 compcert.backend.Stackingproof <> j var
R17533:17542 compcert.backend.Stackingproof <> index_diff def
R17548:17551 compcert.backend.Stackingproof <> idx' var
R17544:17546 compcert.backend.Stackingproof <> idx var
R17494:17511 compcert.backend.Stackingproof <> index_contains_inj def
R17525:17526 compcert.backend.Stackingproof <> v' var
R17520:17523 compcert.backend.Stackingproof <> idx' var
R17517:17518 compcert.backend.Stackingproof <> sp var
R17515:17515 compcert.backend.Stackingproof <> m var
R17513:17513 compcert.backend.Stackingproof <> j var
R17473:17483 compcert.backend.Stackingproof <> index_valid def
R17485:17487 compcert.backend.Stackingproof <> idx var
R17457:17459 Coq.Init.Logic <> :type_scope:x_'='_x not
R17380:17388 compcert.common.Memory Mem store def
R17456:17456 compcert.backend.Stackingproof <> v var
R17432:17446 compcert.backend.Stacking <> offset_of_index def
R17451:17453 compcert.backend.Stackingproof <> idx var
R17448:17449 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R17428:17429 compcert.backend.Stackingproof <> sp var
R17426:17426 compcert.backend.Stackingproof <> m var
R17391:17403 compcert.common.AST <> chunk_of_type def
R17406:17418 compcert.backend.Stackingproof <> type_of_index def
R17420:17422 compcert.backend.Stackingproof <> idx var
R17460:17463 Coq.Init.Datatypes <> Some constr
R17465:17466 compcert.backend.Stackingproof <> m' var
R17673:17690 compcert.backend.Stackingproof <> gso_index_contains thm
R17673:17690 compcert.backend.Stackingproof <> gso_index_contains thm
prf 17712:17741 <> store_other_index_contains_inj
R17988:18005 compcert.backend.Stackingproof <> index_contains_inj def
R18019:18019 compcert.backend.Stackingproof <> v var
R18015:18017 compcert.backend.Stackingproof <> idx var
R18012:18013 compcert.backend.Stackingproof <> sp var
R18009:18010 compcert.backend.Stackingproof <> m' var
R18007:18007 compcert.backend.Stackingproof <> j var
R17951:17968 compcert.backend.Stackingproof <> index_contains_inj def
R17981:17981 compcert.backend.Stackingproof <> v var
R17977:17979 compcert.backend.Stackingproof <> idx var
R17974:17975 compcert.backend.Stackingproof <> sp var
R17972:17972 compcert.backend.Stackingproof <> m var
R17970:17970 compcert.backend.Stackingproof <> j var
R17836:17844 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17944:17944 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17830:17833 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17829:17829 compcert.backend.Stackingproof <> b var
R17834:17835 compcert.backend.Stackingproof <> sp var
R17870:17873 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17863:17866 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R17849:17861 compcert.ia32.Stacklayout <> fe_stack_data proj
R17845:17846 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R17867:17869 compcert.backend.Stackingproof <> ofs var
R17896:17899 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R17877:17879 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17874:17876 compcert.backend.Stackingproof <> ofs var
R17880:17889 compcert.common.Memdata <> size_chunk def
R17891:17895 compcert.backend.Stackingproof <> chunk var
R17918:17920 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17904:17916 compcert.ia32.Stacklayout <> fe_stack_data proj
R17900:17901 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R17924:17942 compcert.backend.Linear <> fn_stacksize proj
R17921:17921 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R17813:17815 Coq.Init.Logic <> :type_scope:x_'='_x not
R17787:17795 compcert.common.Memory Mem store def
R17811:17812 compcert.backend.Stackingproof <> v' var
R17807:17809 compcert.backend.Stackingproof <> ofs var
R17805:17805 compcert.backend.Stackingproof <> b var
R17803:17803 compcert.backend.Stackingproof <> m var
R17797:17801 compcert.backend.Stackingproof <> chunk var
R17816:17819 Coq.Init.Datatypes <> Some constr
R17821:17822 compcert.backend.Stackingproof <> m' var
R18101:18126 compcert.backend.Stackingproof <> store_other_index_contains thm
R18101:18126 compcert.backend.Stackingproof <> store_other_index_contains thm
prf 18148:18170 <> index_contains_inj_incr
R18260:18277 compcert.backend.Stackingproof <> index_contains_inj def
R18291:18291 compcert.backend.Stackingproof <> v var
R18287:18289 compcert.backend.Stackingproof <> idx var
R18284:18285 compcert.backend.Stackingproof <> sp var
R18282:18282 compcert.backend.Stackingproof <> m var
R18279:18280 compcert.backend.Stackingproof <> j' var
R18238:18248 compcert.common.Values <> inject_incr def
R18252:18253 compcert.backend.Stackingproof <> j' var
R18250:18250 compcert.backend.Stackingproof <> j var
R18201:18218 compcert.backend.Stackingproof <> index_contains_inj def
R18231:18231 compcert.backend.Stackingproof <> v var
R18227:18229 compcert.backend.Stackingproof <> idx var
R18224:18225 compcert.backend.Stackingproof <> sp var
R18222:18222 compcert.backend.Stackingproof <> m var
R18220:18220 compcert.backend.Stackingproof <> j var
prf 18383:18406 <> index_contains_inj_undef
R18483:18500 compcert.backend.Stackingproof <> index_contains_inj def
R18513:18518 compcert.common.Values <> Vundef constr
R18509:18511 compcert.backend.Stackingproof <> idx var
R18506:18507 compcert.backend.Stackingproof <> sp var
R18504:18504 compcert.backend.Stackingproof <> m var
R18502:18502 compcert.backend.Stackingproof <> j var
R18453:18471 compcert.backend.Stackingproof <> frame_perm_freeable def
R18475:18476 compcert.backend.Stackingproof <> sp var
R18473:18473 compcert.backend.Stackingproof <> m var
R18432:18442 compcert.backend.Stackingproof <> index_valid def
R18444:18446 compcert.backend.Stackingproof <> idx var
R18550:18570 compcert.common.Memory Mem valid_access_load thm
R18614:18628 compcert.backend.Stacking <> offset_of_index def
R18630:18631 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R18575:18587 compcert.common.AST <> chunk_of_type def
R18590:18602 compcert.backend.Stackingproof <> type_of_index def
R18550:18570 compcert.common.Memory Mem valid_access_load thm
R18614:18628 compcert.backend.Stacking <> offset_of_index def
R18630:18631 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R18575:18587 compcert.common.AST <> chunk_of_type def
R18590:18602 compcert.backend.Stackingproof <> type_of_index def
R18666:18680 compcert.backend.Stackingproof <> size_type_chunk thm
R18666:18680 compcert.backend.Stackingproof <> size_type_chunk thm
R18719:18726 compcert.common.Memtype <> Freeable constr
R18691:18712 compcert.common.Memory Mem range_perm_implies thm
R18719:18726 compcert.common.Memtype <> Freeable constr
R18691:18712 compcert.common.Memory Mem range_perm_implies thm
R18752:18771 compcert.backend.Stackingproof <> offset_of_index_perm thm
R18752:18771 compcert.backend.Stackingproof <> offset_of_index_perm thm
R18789:18813 compcert.backend.Stackingproof <> offset_of_index_aligned_2 thm
R18789:18813 compcert.backend.Stackingproof <> offset_of_index_aligned_2 thm
R18903:18932 compcert.backend.Stackingproof <> store_other_index_contains_inj thm
R18934:18956 compcert.backend.Stackingproof <> index_contains_inj_incr thm
def 19083:19092 <> agree_regs
R19098:19103 compcert.common.Values <> meminj def
R19111:19116 compcert.backend.Linear <> locset def
R19124:19129 compcert.backend.Mach <> regset def
R19154:19163 compcert.common.Values <> val_inject ind
R19179:19180 compcert.backend.Stackingproof <> rs var
R19182:19182 compcert.backend.Stackingproof <> r var
R19168:19169 compcert.backend.Stackingproof <> ls var
R19172:19172 compcert.backend.Locations <> R constr
R19174:19174 compcert.backend.Stackingproof <> r var
R19165:19165 compcert.backend.Stackingproof <> j var
constr 19415:19428 <> mk_agree_frame
rec 19239:19249 <> agree_frame
proj 19502:19517 <> agree_unused_reg
proj 19770:19781 <> agree_locals
proj 19964:19977 <> agree_outgoing
proj 20284:20297 <> agree_incoming
proj 20586:20595 <> agree_link
proj 20646:20658 <> agree_retaddr
proj 20877:20891 <> agree_saved_int
proj 21098:21114 <> agree_saved_float
proj 21411:21419 <> agree_inj
proj 21470:21485 <> agree_inj_unique
proj 21635:21652 <> agree_valid_linear
proj 21687:21702 <> agree_valid_mach
proj 21789:21800 <> agree_bounds
proj 21956:21965 <> agree_perm
R19255:19260 compcert.common.Values <> meminj def
R19272:19277 compcert.backend.Linear <> locset def
R19303:19305 compcert.common.Memory <> mem syndef
R19313:19317 compcert.common.Values <> block def
R19344:19346 compcert.common.Memory <> mem syndef
R19355:19359 compcert.common.Values <> block def
R19398:19400 compcert.common.Values <> val ind
R19574:19576 Coq.Init.Logic <> :type_scope:x_'='_x not
R19566:19567 compcert.backend.Stackingproof <> ls var
R19570:19570 compcert.backend.Locations <> R constr
R19572:19572 compcert.backend.Stackingproof <> r var
R19577:19579 compcert.backend.Stackingproof <> ls0 var
R19582:19582 compcert.backend.Locations <> R constr
R19584:19584 compcert.backend.Stackingproof <> r var
R19537:19538 Coq.Init.Logic <> :type_scope:'~'_x not
R19561:19561 Coq.Init.Logic <> :type_scope:'~'_x not
R19539:19556 compcert.backend.Bounds <> mreg_within_bounds def
R19560:19560 compcert.backend.Stackingproof <> r var
R19558:19558 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R19891:19908 compcert.backend.Stackingproof <> index_contains_inj def
R19938:19939 compcert.backend.Stackingproof <> ls var
R19942:19942 compcert.backend.Locations <> S constr
R19954:19955 compcert.backend.Stackingproof <> ty var
R19950:19952 compcert.backend.Stackingproof <> ofs var
R19944:19948 compcert.backend.Locations <> Local constr
R19920:19927 compcert.backend.Stacking <> FI_local constr
R19933:19934 compcert.backend.Stackingproof <> ty var
R19929:19931 compcert.backend.Stackingproof <> ofs var
R19915:19917 compcert.backend.Stackingproof <> sp' var
R19912:19913 compcert.backend.Stackingproof <> m' var
R19910:19910 compcert.backend.Stackingproof <> j var
R19874:19876 Coq.Init.Logic <> :type_scope:x_'='_x not
R19849:19858 compcert.backend.Lineartyping <> slot_valid def
R19872:19873 compcert.backend.Stackingproof <> ty var
R19868:19870 compcert.backend.Stackingproof <> ofs var
R19862:19866 compcert.backend.Locations <> Local constr
R19860:19860 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R19877:19880 Coq.Init.Datatypes <> true constr
R19812:19829 compcert.backend.Bounds <> slot_within_bounds def
R19843:19844 compcert.backend.Stackingproof <> ty var
R19839:19841 compcert.backend.Stackingproof <> ofs var
R19833:19837 compcert.backend.Locations <> Local constr
R19831:19831 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R20093:20110 compcert.backend.Stackingproof <> index_contains_inj def
R20138:20139 compcert.backend.Stackingproof <> ls var
R20142:20142 compcert.backend.Locations <> S constr
R20157:20158 compcert.backend.Stackingproof <> ty var
R20153:20155 compcert.backend.Stackingproof <> ofs var
R20144:20151 compcert.backend.Locations <> Outgoing constr
R20122:20127 compcert.backend.Stacking <> FI_arg constr
R20133:20134 compcert.backend.Stackingproof <> ty var
R20129:20131 compcert.backend.Stackingproof <> ofs var
R20117:20119 compcert.backend.Stackingproof <> sp' var
R20114:20115 compcert.backend.Stackingproof <> m' var
R20112:20112 compcert.backend.Stackingproof <> j var
R20076:20078 Coq.Init.Logic <> :type_scope:x_'='_x not
R20048:20057 compcert.backend.Lineartyping <> slot_valid def
R20074:20075 compcert.backend.Stackingproof <> ty var
R20070:20072 compcert.backend.Stackingproof <> ofs var
R20061:20068 compcert.backend.Locations <> Outgoing constr
R20059:20059 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R20079:20082 Coq.Init.Datatypes <> true constr
R20008:20025 compcert.backend.Bounds <> slot_within_bounds def
R20042:20043 compcert.backend.Stackingproof <> ty var
R20038:20040 compcert.backend.Stackingproof <> ofs var
R20029:20036 compcert.backend.Locations <> Outgoing constr
R20027:20027 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R20420:20422 Coq.Init.Logic <> :type_scope:x_'='_x not
R20398:20399 compcert.backend.Stackingproof <> ls var
R20402:20402 compcert.backend.Locations <> S constr
R20417:20418 compcert.backend.Stackingproof <> ty var
R20413:20415 compcert.backend.Stackingproof <> ofs var
R20404:20411 compcert.backend.Locations <> Incoming constr
R20423:20425 compcert.backend.Stackingproof <> ls0 var
R20428:20428 compcert.backend.Locations <> S constr
R20443:20444 compcert.backend.Stackingproof <> ty var
R20439:20441 compcert.backend.Stackingproof <> ofs var
R20430:20437 compcert.backend.Locations <> Outgoing constr
R20330:20331 Coq.Lists.List <> In def
R20354:20367 compcert.backend.Conventions <> loc_parameters def
R20372:20384 compcert.backend.Linear <> fn_sig proj
R20369:20369 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R20334:20334 compcert.backend.Locations <> S constr
R20349:20350 compcert.backend.Stackingproof <> ty var
R20345:20347 compcert.backend.Stackingproof <> ofs var
R20336:20343 compcert.backend.Locations <> Incoming constr
R20604:20617 compcert.backend.Stackingproof <> index_contains ind
R20634:20639 compcert.backend.Stackingproof <> parent var
R20626:20632 compcert.backend.Stacking <> FI_link constr
R20622:20624 compcert.backend.Stackingproof <> sp' var
R20619:20620 compcert.backend.Stackingproof <> m' var
R20667:20680 compcert.backend.Stackingproof <> index_contains ind
R20700:20706 compcert.backend.Stackingproof <> retaddr var
R20689:20698 compcert.backend.Stacking <> FI_retaddr constr
R20685:20687 compcert.backend.Stackingproof <> sp' var
R20682:20683 compcert.backend.Stackingproof <> m' var
R21012:21029 compcert.backend.Stackingproof <> index_contains_inj def
R21082:21084 compcert.backend.Stackingproof <> ls0 var
R21087:21087 compcert.backend.Locations <> R constr
R21089:21089 compcert.backend.Stackingproof <> r var
R21041:21052 compcert.backend.Stacking <> FI_saved_int constr
R21055:21075 compcert.ia32.Conventions1 <> index_int_callee_save def
R21077:21077 compcert.backend.Stackingproof <> r var
R21036:21038 compcert.backend.Stackingproof <> sp' var
R21033:21034 compcert.backend.Stackingproof <> m' var
R21031:21031 compcert.backend.Stackingproof <> j var
R20974:20976 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R20951:20971 compcert.ia32.Conventions1 <> index_int_callee_save def
R20973:20973 compcert.backend.Stackingproof <> r var
R20980:21000 compcert.backend.Bounds <> bound_int_callee_save proj
R20977:20977 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R20916:20917 Coq.Lists.List <> In def
R20921:20940 compcert.ia32.Conventions1 <> int_callee_save_regs def
R20919:20919 compcert.backend.Stackingproof <> r var
R21241:21258 compcert.backend.Stackingproof <> index_contains_inj def
R21315:21317 compcert.backend.Stackingproof <> ls0 var
R21320:21320 compcert.backend.Locations <> R constr
R21322:21322 compcert.backend.Stackingproof <> r var
R21270:21283 compcert.backend.Stacking <> FI_saved_float constr
R21286:21308 compcert.ia32.Conventions1 <> index_float_callee_save def
R21310:21310 compcert.backend.Stackingproof <> r var
R21265:21267 compcert.backend.Stackingproof <> sp' var
R21262:21263 compcert.backend.Stackingproof <> m' var
R21260:21260 compcert.backend.Stackingproof <> j var
R21201:21203 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R21176:21198 compcert.ia32.Conventions1 <> index_float_callee_save def
R21200:21200 compcert.backend.Stackingproof <> r var
R21207:21229 compcert.backend.Bounds <> bound_float_callee_save proj
R21204:21204 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R21139:21140 Coq.Lists.List <> In def
R21144:21165 compcert.ia32.Conventions1 <> float_callee_save_regs def
R21142:21142 compcert.backend.Stackingproof <> r var
R21432:21434 Coq.Init.Logic <> :type_scope:x_'='_x not
R21428:21428 compcert.backend.Stackingproof <> j var
R21430:21431 compcert.backend.Stackingproof <> sp var
R21435:21438 Coq.Init.Datatypes <> Some constr
R21439:21439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21443:21444 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21463:21463 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21440:21442 compcert.backend.Stackingproof <> sp' var
R21449:21461 compcert.ia32.Stacklayout <> fe_stack_data proj
R21445:21446 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R21542:21545 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21537:21539 Coq.Init.Logic <> :type_scope:x_'='_x not
R21536:21536 compcert.backend.Stackingproof <> b var
R21540:21541 compcert.backend.Stackingproof <> sp var
R21551:21553 Coq.Init.Logic <> :type_scope:x_'='_x not
R21546:21550 compcert.backend.Stackingproof <> delta var
R21558:21570 compcert.ia32.Stacklayout <> fe_stack_data proj
R21554:21555 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R21513:21515 Coq.Init.Logic <> :type_scope:x_'='_x not
R21510:21510 compcert.backend.Stackingproof <> j var
R21512:21512 compcert.backend.Stackingproof <> b var
R21516:21519 Coq.Init.Datatypes <> Some constr
R21520:21520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21524:21525 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21531:21531 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21521:21523 compcert.backend.Stackingproof <> sp' var
R21526:21530 compcert.backend.Stackingproof <> delta var
R21661:21675 compcert.common.Memory Mem valid_block def
R21679:21680 compcert.backend.Stackingproof <> sp var
R21677:21677 compcert.backend.Stackingproof <> m var
R21711:21725 compcert.common.Memory Mem valid_block def
R21730:21732 compcert.backend.Stackingproof <> sp' var
R21727:21728 compcert.backend.Stackingproof <> m' var
R21851:21854 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R21858:21860 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R21855:21857 compcert.backend.Stackingproof <> ofs var
R21855:21857 compcert.backend.Stackingproof <> ofs var
R21864:21882 compcert.backend.Linear <> fn_stacksize proj
R21861:21861 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R21823:21830 compcert.common.Memory Mem perm def
R21845:21845 compcert.backend.Stackingproof <> p var
R21841:21843 compcert.common.Memtype <> Max constr
R21837:21839 compcert.backend.Stackingproof <> ofs var
R21834:21835 compcert.backend.Stackingproof <> sp var
R21832:21832 compcert.backend.Stackingproof <> m var
R21974:21992 compcert.backend.Stackingproof <> frame_perm_freeable def
R21997:21999 compcert.backend.Stackingproof <> sp' var
R21994:21995 compcert.backend.Stackingproof <> m' var
R22020:22035 compcert.backend.Stackingproof <> agree_unused_reg proj
R22037:22048 compcert.backend.Stackingproof <> agree_locals proj
R22050:22063 compcert.backend.Stackingproof <> agree_outgoing proj
R22065:22078 compcert.backend.Stackingproof <> agree_incoming proj
R22093:22102 compcert.backend.Stackingproof <> agree_link proj
R22104:22116 compcert.backend.Stackingproof <> agree_retaddr proj
R22118:22132 compcert.backend.Stackingproof <> agree_saved_int proj
R22134:22150 compcert.backend.Stackingproof <> agree_saved_float proj
R22165:22182 compcert.backend.Stackingproof <> agree_valid_linear proj
R22184:22199 compcert.backend.Stackingproof <> agree_valid_mach proj
R22201:22210 compcert.backend.Stackingproof <> agree_perm proj
def 22283:22299 <> agree_callee_save
R22310:22315 compcert.backend.Linear <> locset def
R22425:22427 Coq.Init.Logic <> :type_scope:x_'='_x not
R22421:22422 compcert.backend.Stackingproof <> ls var
R22424:22424 compcert.backend.Stackingproof <> l var
R22428:22430 compcert.backend.Stackingproof <> ls0 var
R22432:22432 compcert.backend.Stackingproof <> l var
R22348:22348 compcert.backend.Stackingproof <> l var
R22359:22359 compcert.backend.Locations <> R constr
R22366:22366 Coq.Init.Logic <> :type_scope:'~'_x not
R22367:22368 Coq.Lists.List <> In def
R22372:22388 compcert.ia32.Conventions1 <> destroyed_at_call def
R22394:22394 compcert.backend.Locations <> S constr
R22405:22408 Coq.Init.Logic <> True ind
prf 22509:22517 <> agree_reg
R22564:22573 compcert.common.Values <> val_inject ind
R22589:22590 compcert.backend.Stackingproof <> rs var
R22592:22592 compcert.backend.Stackingproof <> r var
R22578:22579 compcert.backend.Stackingproof <> ls var
R22582:22582 compcert.backend.Locations <> R constr
R22584:22584 compcert.backend.Stackingproof <> r var
R22575:22575 compcert.backend.Stackingproof <> j var
R22542:22551 compcert.backend.Stackingproof <> agree_regs def
R22558:22559 compcert.backend.Stackingproof <> rs var
R22555:22556 compcert.backend.Stackingproof <> ls var
R22553:22553 compcert.backend.Stackingproof <> j var
prf 22632:22644 <> agree_reglist
R22692:22706 compcert.common.Values <> val_list_inject ind
R22729:22730 compcert.backend.Mach <> ::x_'##'_x not
R22727:22728 compcert.backend.Stackingproof <> rs var
R22731:22732 compcert.backend.Stackingproof <> rl var
R22711:22717 compcert.backend.LTL <> reglist def
R22722:22723 compcert.backend.Stackingproof <> rl var
R22719:22720 compcert.backend.Stackingproof <> ls var
R22708:22708 compcert.backend.Stackingproof <> j var
R22670:22679 compcert.backend.Stackingproof <> agree_regs def
R22686:22687 compcert.backend.Stackingproof <> rs var
R22683:22684 compcert.backend.Stackingproof <> ls var
R22681:22681 compcert.backend.Stackingproof <> j var
R22842:22850 compcert.backend.Stackingproof <> agree_reg thm
R22852:22864 compcert.backend.Stackingproof <> agree_reglist thm
prf 22945:22962 <> agree_regs_set_reg
R23039:23048 compcert.backend.Stackingproof <> agree_regs def
R23077:23086 compcert.backend.Mach Regmap set def
R23093:23094 compcert.backend.Stackingproof <> rs var
R23090:23091 compcert.backend.Stackingproof <> v' var
R23088:23088 compcert.backend.Stackingproof <> r var
R23053:23062 compcert.backend.Locations Locmap set def
R23072:23073 compcert.backend.Stackingproof <> ls var
R23070:23070 compcert.backend.Stackingproof <> v var
R23065:23065 compcert.backend.Locations <> R constr
R23067:23067 compcert.backend.Stackingproof <> r var
R23050:23050 compcert.backend.Stackingproof <> j var
R23016:23025 compcert.common.Values <> val_inject ind
R23031:23032 compcert.backend.Stackingproof <> v' var
R23029:23029 compcert.backend.Stackingproof <> v var
R23027:23027 compcert.backend.Stackingproof <> j var
R22992:23001 compcert.backend.Stackingproof <> agree_regs def
R23008:23009 compcert.backend.Stackingproof <> rs var
R23005:23006 compcert.backend.Stackingproof <> ls var
R23003:23003 compcert.backend.Stackingproof <> j var
R23138:23147 compcert.backend.Mach Regmap set def
R23160:23167 compcert.backend.Mach RegEq eq def
R23160:23167 compcert.backend.Mach RegEq eq def
R23197:23206 compcert.backend.Locations Locmap gss thm
R23197:23206 compcert.backend.Locations Locmap gss thm
R23225:23234 compcert.backend.Locations Locmap gso thm
R23225:23234 compcert.backend.Locations Locmap gso thm
prf 23266:23284 <> agree_regs_set_regs
R23371:23380 compcert.backend.Stackingproof <> agree_regs def
R23419:23426 compcert.backend.Mach <> set_regs def
R23435:23436 compcert.backend.Stackingproof <> rs var
R23431:23433 compcert.backend.Stackingproof <> vl' var
R23428:23429 compcert.backend.Stackingproof <> rl var
R23385:23398 compcert.backend.Locations Locmap setlist def
R23414:23415 compcert.backend.Stackingproof <> ls var
R23411:23412 compcert.backend.Stackingproof <> vl var
R23401:23403 Coq.Lists.List <> map def
R23407:23408 compcert.backend.Stackingproof <> rl var
R23405:23405 compcert.backend.Locations <> R constr
R23382:23382 compcert.backend.Stackingproof <> j var
R23341:23355 compcert.common.Values <> val_list_inject ind
R23362:23364 compcert.backend.Stackingproof <> vl' var
R23359:23360 compcert.backend.Stackingproof <> vl var
R23357:23357 compcert.backend.Stackingproof <> j var
R23317:23326 compcert.backend.Stackingproof <> agree_regs def
R23333:23334 compcert.backend.Stackingproof <> rs var
R23330:23331 compcert.backend.Stackingproof <> ls var
R23328:23328 compcert.backend.Stackingproof <> j var
R23529:23546 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R23529:23546 compcert.backend.Stackingproof <> agree_regs_set_reg thm
prf 23568:23583 <> agree_regs_exten
R23714:23723 compcert.backend.Stackingproof <> agree_regs def
R23731:23733 compcert.backend.Stackingproof <> rs' var
R23727:23729 compcert.backend.Stackingproof <> ls' var
R23725:23725 compcert.backend.Stackingproof <> j var
R23667:23670 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R23658:23660 Coq.Init.Logic <> :type_scope:x_'='_x not
R23649:23651 compcert.backend.Stackingproof <> ls' var
R23654:23654 compcert.backend.Locations <> R constr
R23656:23656 compcert.backend.Stackingproof <> r var
R23661:23666 compcert.common.Values <> Vundef constr
R23691:23694 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23680:23682 Coq.Init.Logic <> :type_scope:x_'='_x not
R23671:23673 compcert.backend.Stackingproof <> ls' var
R23676:23676 compcert.backend.Locations <> R constr
R23678:23678 compcert.backend.Stackingproof <> r var
R23683:23684 compcert.backend.Stackingproof <> ls var
R23687:23687 compcert.backend.Locations <> R constr
R23689:23689 compcert.backend.Stackingproof <> r var
R23700:23702 Coq.Init.Logic <> :type_scope:x_'='_x not
R23695:23697 compcert.backend.Stackingproof <> rs' var
R23699:23699 compcert.backend.Stackingproof <> r var
R23703:23704 compcert.backend.Stackingproof <> rs var
R23706:23706 compcert.backend.Stackingproof <> r var
R23614:23623 compcert.backend.Stackingproof <> agree_regs def
R23630:23631 compcert.backend.Stackingproof <> rs var
R23627:23628 compcert.backend.Stackingproof <> ls var
R23625:23625 compcert.backend.Stackingproof <> j var
prf 23870:23890 <> agree_regs_undef_regs
R23940:23949 compcert.backend.Stackingproof <> agree_regs def
R23977:23991 compcert.backend.Mach <> undef_regs def
R23996:23997 compcert.backend.Stackingproof <> rs var
R23993:23994 compcert.backend.Stackingproof <> rl var
R23954:23967 compcert.backend.LTL <> undef_regs def
R23972:23973 compcert.backend.Stackingproof <> ls var
R23969:23970 compcert.backend.Stackingproof <> rl var
R23951:23951 compcert.backend.Stackingproof <> j var
R23916:23925 compcert.backend.Stackingproof <> agree_regs def
R23932:23933 compcert.backend.Stackingproof <> rs var
R23929:23930 compcert.backend.Stackingproof <> ls var
R23927:23927 compcert.backend.Stackingproof <> j var
R24055:24072 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R24055:24072 compcert.backend.Stackingproof <> agree_regs_set_reg thm
prf 24146:24164 <> agree_regs_set_slot
R24223:24232 compcert.backend.Stackingproof <> agree_regs def
R24268:24269 compcert.backend.Stackingproof <> rs var
R24237:24246 compcert.backend.Locations Locmap set def
R24264:24265 compcert.backend.Stackingproof <> ls var
R24262:24262 compcert.backend.Stackingproof <> v var
R24249:24249 compcert.backend.Locations <> S constr
R24258:24259 compcert.backend.Stackingproof <> ty var
R24254:24256 compcert.backend.Stackingproof <> ofs var
R24251:24252 compcert.backend.Stackingproof <> sl var
R24234:24234 compcert.backend.Stackingproof <> j var
R24199:24208 compcert.backend.Stackingproof <> agree_regs def
R24215:24216 compcert.backend.Stackingproof <> rs var
R24212:24213 compcert.backend.Stackingproof <> ls var
R24210:24210 compcert.backend.Stackingproof <> j var
R24310:24319 compcert.backend.Locations Locmap gso thm
R24310:24319 compcert.backend.Locations Locmap gso thm
prf 24404:24425 <> agree_regs_inject_incr
R24493:24502 compcert.backend.Stackingproof <> agree_regs def
R24510:24511 compcert.backend.Stackingproof <> rs var
R24507:24508 compcert.backend.Stackingproof <> ls var
R24504:24505 compcert.backend.Stackingproof <> j' var
R24473:24483 compcert.common.Values <> inject_incr def
R24487:24488 compcert.backend.Stackingproof <> j' var
R24485:24485 compcert.backend.Stackingproof <> j var
R24451:24460 compcert.backend.Stackingproof <> agree_regs def
R24467:24468 compcert.backend.Stackingproof <> rs var
R24464:24465 compcert.backend.Stackingproof <> ls var
R24462:24462 compcert.backend.Stackingproof <> j var
prf 24617:24636 <> agree_regs_call_regs
R24683:24692 compcert.backend.Stackingproof <> agree_regs def
R24711:24712 compcert.backend.Stackingproof <> rs var
R24697:24705 compcert.backend.LTL <> call_regs def
R24707:24708 compcert.backend.Stackingproof <> ls var
R24694:24694 compcert.backend.Stackingproof <> j var
R24659:24668 compcert.backend.Stackingproof <> agree_regs def
R24675:24676 compcert.backend.Stackingproof <> rs var
R24672:24673 compcert.backend.Stackingproof <> ls var
R24670:24670 compcert.backend.Stackingproof <> j var
R24741:24749 compcert.backend.LTL <> call_regs def
prf 24889:24907 <> agree_frame_set_reg
R25033:25043 compcert.backend.Stackingproof <> agree_frame rec
R25094:25095 compcert.backend.Stackingproof <> ra var
R25087:25092 compcert.backend.Stackingproof <> parent var
R25083:25085 compcert.backend.Stackingproof <> sp' var
R25080:25081 compcert.backend.Stackingproof <> m' var
R25077:25078 compcert.backend.Stackingproof <> sp var
R25075:25075 compcert.backend.Stackingproof <> m var
R25071:25073 compcert.backend.Stackingproof <> ls0 var
R25048:25057 compcert.backend.Locations Locmap set def
R25067:25068 compcert.backend.Stackingproof <> ls var
R25065:25065 compcert.backend.Stackingproof <> v var
R25060:25060 compcert.backend.Locations <> R constr
R25062:25062 compcert.backend.Stackingproof <> r var
R25045:25045 compcert.backend.Stackingproof <> j var
R25005:25022 compcert.backend.Bounds <> mreg_within_bounds def
R25026:25026 compcert.backend.Stackingproof <> r var
R25024:25024 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R24957:24967 compcert.backend.Stackingproof <> agree_frame rec
R24997:24998 compcert.backend.Stackingproof <> ra var
R24990:24995 compcert.backend.Stackingproof <> parent var
R24986:24988 compcert.backend.Stackingproof <> sp' var
R24983:24984 compcert.backend.Stackingproof <> m' var
R24980:24981 compcert.backend.Stackingproof <> sp var
R24978:24978 compcert.backend.Stackingproof <> m var
R24974:24976 compcert.backend.Stackingproof <> ls0 var
R24971:24972 compcert.backend.Stackingproof <> ls var
R24969:24969 compcert.backend.Stackingproof <> j var
R25159:25168 compcert.backend.Locations Locmap gso thm
R25159:25168 compcert.backend.Locations Locmap gso thm
R0:-1 compcert.backend.Stackingproof <> y var
prf 25216:25235 <> agree_frame_set_regs
R25386:25396 compcert.backend.Stackingproof <> agree_frame rec
R25457:25458 compcert.backend.Stackingproof <> ra var
R25450:25455 compcert.backend.Stackingproof <> parent var
R25446:25448 compcert.backend.Stackingproof <> sp' var
R25443:25444 compcert.backend.Stackingproof <> m' var
R25440:25441 compcert.backend.Stackingproof <> sp var
R25438:25438 compcert.backend.Stackingproof <> m var
R25434:25436 compcert.backend.Stackingproof <> ls0 var
R25401:25414 compcert.backend.Locations Locmap setlist def
R25430:25431 compcert.backend.Stackingproof <> ls var
R25427:25428 compcert.backend.Stackingproof <> vl var
R25417:25419 Coq.Lists.List <> map def
R25423:25424 compcert.backend.Stackingproof <> rl var
R25421:25421 compcert.backend.Locations <> R constr
R25398:25398 compcert.backend.Stackingproof <> j var
R25357:25374 compcert.backend.Bounds <> mreg_within_bounds def
R25378:25378 compcert.backend.Stackingproof <> r var
R25376:25376 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R25346:25347 Coq.Lists.List <> In def
R25351:25352 compcert.backend.Stackingproof <> rl var
R25349:25349 compcert.backend.Stackingproof <> r var
R25287:25297 compcert.backend.Stackingproof <> agree_frame rec
R25327:25328 compcert.backend.Stackingproof <> ra var
R25320:25325 compcert.backend.Stackingproof <> parent var
R25316:25318 compcert.backend.Stackingproof <> sp' var
R25313:25314 compcert.backend.Stackingproof <> m' var
R25310:25311 compcert.backend.Stackingproof <> sp var
R25308:25308 compcert.backend.Stackingproof <> m var
R25304:25306 compcert.backend.Stackingproof <> ls0 var
R25301:25302 compcert.backend.Stackingproof <> ls var
R25299:25299 compcert.backend.Stackingproof <> j var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R25553:25571 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R25553:25571 compcert.backend.Stackingproof <> agree_frame_set_reg thm
prf 25594:25615 <> agree_frame_undef_regs
R25767:25777 compcert.backend.Stackingproof <> agree_frame rec
R25829:25830 compcert.backend.Stackingproof <> ra var
R25822:25827 compcert.backend.Stackingproof <> parent var
R25818:25820 compcert.backend.Stackingproof <> sp' var
R25815:25816 compcert.backend.Stackingproof <> m' var
R25812:25813 compcert.backend.Stackingproof <> sp var
R25810:25810 compcert.backend.Stackingproof <> m var
R25806:25808 compcert.backend.Stackingproof <> ls0 var
R25782:25795 compcert.backend.LTL <> undef_regs def
R25802:25803 compcert.backend.Stackingproof <> ls var
R25797:25800 compcert.backend.Stackingproof <> regs var
R25779:25779 compcert.backend.Stackingproof <> j var
R25738:25755 compcert.backend.Bounds <> mreg_within_bounds def
R25759:25759 compcert.backend.Stackingproof <> r var
R25757:25757 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R25725:25726 Coq.Lists.List <> In def
R25730:25733 compcert.backend.Stackingproof <> regs var
R25728:25728 compcert.backend.Stackingproof <> r var
R25666:25676 compcert.backend.Stackingproof <> agree_frame rec
R25706:25707 compcert.backend.Stackingproof <> ra var
R25699:25704 compcert.backend.Stackingproof <> parent var
R25695:25697 compcert.backend.Stackingproof <> sp' var
R25692:25693 compcert.backend.Stackingproof <> m' var
R25689:25690 compcert.backend.Stackingproof <> sp var
R25687:25687 compcert.backend.Stackingproof <> m var
R25683:25685 compcert.backend.Stackingproof <> ls0 var
R25680:25681 compcert.backend.Stackingproof <> ls var
R25678:25678 compcert.backend.Stackingproof <> j var
R25889:25907 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R25889:25907 compcert.backend.Stackingproof <> agree_frame_set_reg thm
prf 25928:25956 <> caller_save_reg_within_bounds
R25999:26016 compcert.backend.Bounds <> mreg_within_bounds def
R26020:26020 compcert.backend.Stackingproof <> r var
R26018:26018 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R25973:25974 Coq.Lists.List <> In def
R25978:25994 compcert.ia32.Conventions1 <> destroyed_at_call def
R25976:25976 compcert.backend.Stackingproof <> r var
R26057:26059 compcert.lib.Coqlib <> zlt def
R26062:26082 compcert.ia32.Conventions1 <> index_int_callee_save def
R26057:26059 compcert.lib.Coqlib <> zlt def
R26062:26082 compcert.ia32.Conventions1 <> index_int_callee_save def
R26103:26105 compcert.lib.Coqlib <> zlt def
R26108:26130 compcert.ia32.Conventions1 <> index_float_callee_save def
R26103:26105 compcert.lib.Coqlib <> zlt def
R26108:26130 compcert.ia32.Conventions1 <> index_float_callee_save def
R26153:26177 compcert.backend.Bounds <> bound_int_callee_save_pos proj
R26179:26179 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R26183:26209 compcert.backend.Bounds <> bound_float_callee_save_pos proj
R26211:26211 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R26153:26177 compcert.backend.Bounds <> bound_int_callee_save_pos proj
R26179:26179 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R26183:26209 compcert.backend.Bounds <> bound_float_callee_save_pos proj
R26211:26211 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R26240:26270 compcert.ia32.Conventions1 <> float_callee_save_not_destroyed thm
R26240:26270 compcert.ia32.Conventions1 <> float_callee_save_not_destroyed thm
R26287:26314 compcert.ia32.Conventions1 <> index_float_callee_save_pos2 thm
R26287:26314 compcert.ia32.Conventions1 <> index_float_callee_save_pos2 thm
R26342:26370 compcert.ia32.Conventions1 <> int_callee_save_not_destroyed thm
R26342:26370 compcert.ia32.Conventions1 <> int_callee_save_not_destroyed thm
R26387:26412 compcert.ia32.Conventions1 <> index_int_callee_save_pos2 thm
R26387:26412 compcert.ia32.Conventions1 <> index_int_callee_save_pos2 thm
prf 26434:26455 <> agree_frame_undef_locs
R26587:26597 compcert.backend.Stackingproof <> agree_frame rec
R26649:26650 compcert.backend.Stackingproof <> ra var
R26642:26647 compcert.backend.Stackingproof <> parent var
R26638:26640 compcert.backend.Stackingproof <> sp' var
R26635:26636 compcert.backend.Stackingproof <> m' var
R26632:26633 compcert.backend.Stackingproof <> sp var
R26630:26630 compcert.backend.Stackingproof <> m var
R26626:26628 compcert.backend.Stackingproof <> ls0 var
R26602:26615 compcert.backend.LTL <> undef_regs def
R26622:26623 compcert.backend.Stackingproof <> ls var
R26617:26620 compcert.backend.Stackingproof <> regs var
R26599:26599 compcert.backend.Stackingproof <> j var
R26554:26557 Coq.Lists.List <> incl def
R26564:26580 compcert.ia32.Conventions1 <> destroyed_at_call def
R26559:26562 compcert.backend.Stackingproof <> regs var
R26506:26516 compcert.backend.Stackingproof <> agree_frame rec
R26546:26547 compcert.backend.Stackingproof <> ra var
R26539:26544 compcert.backend.Stackingproof <> parent var
R26535:26537 compcert.backend.Stackingproof <> sp' var
R26532:26533 compcert.backend.Stackingproof <> m' var
R26529:26530 compcert.backend.Stackingproof <> sp var
R26527:26527 compcert.backend.Stackingproof <> m var
R26523:26525 compcert.backend.Stackingproof <> ls0 var
R26520:26521 compcert.backend.Stackingproof <> ls var
R26518:26518 compcert.backend.Stackingproof <> j var
R26677:26698 compcert.backend.Stackingproof <> agree_frame_undef_regs thm
R26677:26698 compcert.backend.Stackingproof <> agree_frame_undef_regs thm
R26725:26753 compcert.backend.Stackingproof <> caller_save_reg_within_bounds thm
R26725:26753 compcert.backend.Stackingproof <> caller_save_reg_within_bounds thm
prf 26824:26844 <> agree_frame_set_local
R27156:27166 compcert.backend.Stackingproof <> agree_frame rec
R27229:27235 compcert.backend.Stackingproof <> retaddr var
R27222:27227 compcert.backend.Stackingproof <> parent var
R27218:27220 compcert.backend.Stackingproof <> sp' var
R27214:27216 compcert.backend.Stackingproof <> m'' var
R27211:27212 compcert.backend.Stackingproof <> sp var
R27209:27209 compcert.backend.Stackingproof <> m var
R27205:27207 compcert.backend.Stackingproof <> ls0 var
R27171:27180 compcert.backend.Locations Locmap set def
R27201:27202 compcert.backend.Stackingproof <> ls var
R27199:27199 compcert.backend.Stackingproof <> v var
R27183:27183 compcert.backend.Locations <> S constr
R27195:27196 compcert.backend.Stackingproof <> ty var
R27191:27193 compcert.backend.Stackingproof <> ofs var
R27185:27189 compcert.backend.Locations <> Local constr
R27168:27168 compcert.backend.Stackingproof <> j var
R27139:27141 Coq.Init.Logic <> :type_scope:x_'='_x not
R27062:27070 compcert.common.Memory Mem store def
R27137:27138 compcert.backend.Stackingproof <> v' var
R27099:27113 compcert.backend.Stacking <> offset_of_index def
R27119:27126 compcert.backend.Stacking <> FI_local constr
R27132:27133 compcert.backend.Stackingproof <> ty var
R27128:27130 compcert.backend.Stackingproof <> ofs var
R27115:27116 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R27094:27096 compcert.backend.Stackingproof <> sp' var
R27091:27092 compcert.backend.Stackingproof <> m' var
R27073:27085 compcert.common.AST <> chunk_of_type def
R27087:27088 compcert.backend.Stackingproof <> ty var
R27142:27145 Coq.Init.Datatypes <> Some constr
R27147:27149 compcert.backend.Stackingproof <> m'' var
R27039:27048 compcert.common.Values <> val_inject ind
R27054:27055 compcert.backend.Stackingproof <> v' var
R27052:27052 compcert.backend.Stackingproof <> v var
R27050:27050 compcert.backend.Stackingproof <> j var
R27026:27028 Coq.Init.Logic <> :type_scope:x_'='_x not
R27001:27010 compcert.backend.Lineartyping <> slot_valid def
R27024:27025 compcert.backend.Stackingproof <> ty var
R27020:27022 compcert.backend.Stackingproof <> ofs var
R27014:27018 compcert.backend.Locations <> Local constr
R27012:27012 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R27029:27032 Coq.Init.Datatypes <> true constr
R26964:26981 compcert.backend.Bounds <> slot_within_bounds def
R26995:26996 compcert.backend.Stackingproof <> ty var
R26991:26993 compcert.backend.Stackingproof <> ofs var
R26985:26989 compcert.backend.Locations <> Local constr
R26983:26983 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R26911:26921 compcert.backend.Stackingproof <> agree_frame rec
R26951:26957 compcert.backend.Stackingproof <> retaddr var
R26944:26949 compcert.backend.Stackingproof <> parent var
R26940:26942 compcert.backend.Stackingproof <> sp' var
R26937:26938 compcert.backend.Stackingproof <> m' var
R26934:26935 compcert.backend.Stackingproof <> sp var
R26932:26932 compcert.backend.Stackingproof <> m var
R26928:26930 compcert.backend.Stackingproof <> ls0 var
R26925:26926 compcert.backend.Stackingproof <> ls var
R26923:26923 compcert.backend.Stackingproof <> j var
R27297:27309 compcert.common.AST <> chunk_of_type def
R27312:27324 compcert.backend.Stackingproof <> type_of_index def
R27327:27334 compcert.backend.Stacking <> FI_local constr
R27273:27285 compcert.common.AST <> chunk_of_type def
R27273:27285 compcert.common.AST <> chunk_of_type def
R27297:27309 compcert.common.AST <> chunk_of_type def
R27312:27324 compcert.backend.Stackingproof <> type_of_index def
R27327:27334 compcert.backend.Stacking <> FI_local constr
R27403:27412 compcert.backend.Locations Locmap set def
R27427:27432 compcert.backend.Locations Loc eq thm
R27452:27452 compcert.backend.Locations <> S constr
R27454:27458 compcert.backend.Locations <> Local constr
R27435:27435 compcert.backend.Locations <> S constr
R27437:27441 compcert.backend.Locations <> Local constr
R27427:27432 compcert.backend.Locations Loc eq thm
R27452:27452 compcert.backend.Locations <> S constr
R27454:27458 compcert.backend.Locations <> Local constr
R27435:27435 compcert.backend.Locations <> S constr
R27437:27441 compcert.backend.Locations <> Local constr
R27488:27510 compcert.backend.Stackingproof <> gss_index_contains_inj' thm
R27488:27510 compcert.backend.Stackingproof <> gss_index_contains_inj' thm
R27546:27557 compcert.backend.Locations Loc diff_dec def
R27577:27577 compcert.backend.Locations <> S constr
R27579:27583 compcert.backend.Locations <> Local constr
R27560:27560 compcert.backend.Locations <> S constr
R27562:27566 compcert.backend.Locations <> Local constr
R27546:27557 compcert.backend.Locations Loc diff_dec def
R27577:27577 compcert.backend.Locations <> S constr
R27579:27583 compcert.backend.Locations <> Local constr
R27560:27560 compcert.backend.Locations <> S constr
R27562:27566 compcert.backend.Locations <> Local constr
R27606:27627 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R27606:27627 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R27706:27729 compcert.backend.Stackingproof <> index_contains_inj_undef thm
R27706:27729 compcert.backend.Stackingproof <> index_contains_inj_undef thm
R27774:27789 compcert.common.Memory Mem perm_store_1 thm
R27774:27789 compcert.common.Memory Mem perm_store_1 thm
R27824:27833 compcert.backend.Locations Locmap gso thm
R27824:27833 compcert.backend.Locations Locmap gso thm
R27843:27864 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R27843:27864 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R27947:27964 compcert.backend.Stackingproof <> gso_index_contains thm
R27947:27964 compcert.backend.Stackingproof <> gso_index_contains thm
R28022:28039 compcert.backend.Stackingproof <> gso_index_contains thm
R28022:28039 compcert.backend.Stackingproof <> gso_index_contains thm
R28105:28126 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R28105:28126 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R28197:28218 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R28197:28218 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R28318:28333 compcert.common.Memory Mem perm_store_1 thm
R28318:28333 compcert.common.Memory Mem perm_store_1 thm
prf 28407:28430 <> agree_frame_set_outgoing
R28746:28756 compcert.backend.Stackingproof <> agree_frame rec
R28822:28828 compcert.backend.Stackingproof <> retaddr var
R28815:28820 compcert.backend.Stackingproof <> parent var
R28811:28813 compcert.backend.Stackingproof <> sp' var
R28807:28809 compcert.backend.Stackingproof <> m'' var
R28804:28805 compcert.backend.Stackingproof <> sp var
R28802:28802 compcert.backend.Stackingproof <> m var
R28798:28800 compcert.backend.Stackingproof <> ls0 var
R28761:28770 compcert.backend.Locations Locmap set def
R28794:28795 compcert.backend.Stackingproof <> ls var
R28792:28792 compcert.backend.Stackingproof <> v var
R28773:28773 compcert.backend.Locations <> S constr
R28788:28789 compcert.backend.Stackingproof <> ty var
R28784:28786 compcert.backend.Stackingproof <> ofs var
R28775:28782 compcert.backend.Locations <> Outgoing constr
R28758:28758 compcert.backend.Stackingproof <> j var
R28729:28731 Coq.Init.Logic <> :type_scope:x_'='_x not
R28654:28662 compcert.common.Memory Mem store def
R28727:28728 compcert.backend.Stackingproof <> v' var
R28691:28705 compcert.backend.Stacking <> offset_of_index def
R28711:28716 compcert.backend.Stacking <> FI_arg constr
R28722:28723 compcert.backend.Stackingproof <> ty var
R28718:28720 compcert.backend.Stackingproof <> ofs var
R28707:28708 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R28686:28688 compcert.backend.Stackingproof <> sp' var
R28683:28684 compcert.backend.Stackingproof <> m' var
R28665:28677 compcert.common.AST <> chunk_of_type def
R28679:28680 compcert.backend.Stackingproof <> ty var
R28732:28735 Coq.Init.Datatypes <> Some constr
R28737:28739 compcert.backend.Stackingproof <> m'' var
R28631:28640 compcert.common.Values <> val_inject ind
R28646:28647 compcert.backend.Stackingproof <> v' var
R28644:28644 compcert.backend.Stackingproof <> v var
R28642:28642 compcert.backend.Stackingproof <> j var
R28618:28620 Coq.Init.Logic <> :type_scope:x_'='_x not
R28590:28599 compcert.backend.Lineartyping <> slot_valid def
R28616:28617 compcert.backend.Stackingproof <> ty var
R28612:28614 compcert.backend.Stackingproof <> ofs var
R28603:28610 compcert.backend.Locations <> Outgoing constr
R28601:28601 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R28621:28624 Coq.Init.Datatypes <> true constr
R28550:28567 compcert.backend.Bounds <> slot_within_bounds def
R28584:28585 compcert.backend.Stackingproof <> ty var
R28580:28582 compcert.backend.Stackingproof <> ofs var
R28571:28578 compcert.backend.Locations <> Outgoing constr
R28569:28569 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R28497:28507 compcert.backend.Stackingproof <> agree_frame rec
R28537:28543 compcert.backend.Stackingproof <> retaddr var
R28530:28535 compcert.backend.Stackingproof <> parent var
R28526:28528 compcert.backend.Stackingproof <> sp' var
R28523:28524 compcert.backend.Stackingproof <> m' var
R28520:28521 compcert.backend.Stackingproof <> sp var
R28518:28518 compcert.backend.Stackingproof <> m var
R28514:28516 compcert.backend.Stackingproof <> ls0 var
R28511:28512 compcert.backend.Stackingproof <> ls var
R28509:28509 compcert.backend.Stackingproof <> j var
R28890:28902 compcert.common.AST <> chunk_of_type def
R28905:28917 compcert.backend.Stackingproof <> type_of_index def
R28920:28925 compcert.backend.Stacking <> FI_arg constr
R28866:28878 compcert.common.AST <> chunk_of_type def
R28866:28878 compcert.common.AST <> chunk_of_type def
R28890:28902 compcert.common.AST <> chunk_of_type def
R28905:28917 compcert.backend.Stackingproof <> type_of_index def
R28920:28925 compcert.backend.Stacking <> FI_arg constr
R28995:29004 compcert.backend.Locations Locmap gso thm
R28995:29004 compcert.backend.Locations Locmap gso thm
R29014:29035 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R29014:29035 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R29119:29128 compcert.backend.Locations Locmap set def
R29141:29146 compcert.backend.Locations Loc eq thm
R29169:29169 compcert.backend.Locations <> S constr
R29171:29178 compcert.backend.Locations <> Outgoing constr
R29149:29149 compcert.backend.Locations <> S constr
R29151:29158 compcert.backend.Locations <> Outgoing constr
R29141:29146 compcert.backend.Locations Loc eq thm
R29169:29169 compcert.backend.Locations <> S constr
R29171:29178 compcert.backend.Locations <> Outgoing constr
R29149:29149 compcert.backend.Locations <> S constr
R29151:29158 compcert.backend.Locations <> Outgoing constr
R29208:29230 compcert.backend.Stackingproof <> gss_index_contains_inj' thm
R29208:29230 compcert.backend.Stackingproof <> gss_index_contains_inj' thm
R29266:29277 compcert.backend.Locations Loc diff_dec def
R29300:29300 compcert.backend.Locations <> S constr
R29302:29309 compcert.backend.Locations <> Outgoing constr
R29280:29280 compcert.backend.Locations <> S constr
R29282:29289 compcert.backend.Locations <> Outgoing constr
R29266:29277 compcert.backend.Locations Loc diff_dec def
R29300:29300 compcert.backend.Locations <> S constr
R29302:29309 compcert.backend.Locations <> Outgoing constr
R29280:29280 compcert.backend.Locations <> S constr
R29282:29289 compcert.backend.Locations <> Outgoing constr
R29332:29353 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R29332:29353 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R29414:29437 compcert.backend.Stackingproof <> index_contains_inj_undef thm
R29414:29437 compcert.backend.Stackingproof <> index_contains_inj_undef thm
R29482:29497 compcert.common.Memory Mem perm_store_1 thm
R29482:29497 compcert.common.Memory Mem perm_store_1 thm
R29529:29546 compcert.backend.Stackingproof <> gso_index_contains thm
R29529:29546 compcert.backend.Stackingproof <> gso_index_contains thm
R29604:29621 compcert.backend.Stackingproof <> gso_index_contains thm
R29604:29621 compcert.backend.Stackingproof <> gso_index_contains thm
R29687:29708 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R29687:29708 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R29779:29800 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R29779:29800 compcert.backend.Stackingproof <> gso_index_contains_inj thm
R29909:29924 compcert.common.Memory Mem perm_store_1 thm
R29909:29924 compcert.common.Memory Mem perm_store_1 thm
prf 30014:30034 <> agree_frame_invariant
R30720:30730 compcert.backend.Stackingproof <> agree_frame rec
R30762:30768 compcert.backend.Stackingproof <> retaddr var
R30755:30760 compcert.backend.Stackingproof <> parent var
R30751:30753 compcert.backend.Stackingproof <> sp' var
R30747:30749 compcert.backend.Stackingproof <> m1' var
R30744:30745 compcert.backend.Stackingproof <> sp var
R30741:30742 compcert.backend.Stackingproof <> m1 var
R30737:30739 compcert.backend.Stackingproof <> ls0 var
R30734:30735 compcert.backend.Stackingproof <> ls var
R30732:30732 compcert.backend.Stackingproof <> j var
R30689:30696 compcert.common.Memory Mem perm def
R30712:30712 compcert.backend.Stackingproof <> p var
R30710:30710 compcert.backend.Stackingproof <> k var
R30706:30708 compcert.backend.Stackingproof <> ofs var
R30702:30704 compcert.backend.Stackingproof <> sp' var
R30698:30700 compcert.backend.Stackingproof <> m1' var
R30662:30669 compcert.common.Memory Mem perm def
R30684:30684 compcert.backend.Stackingproof <> p var
R30682:30682 compcert.backend.Stackingproof <> k var
R30678:30680 compcert.backend.Stackingproof <> ofs var
R30674:30676 compcert.backend.Stackingproof <> sp' var
R30671:30672 compcert.backend.Stackingproof <> m' var
R30598:30601 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30577:30579 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R30574:30576 compcert.backend.Stackingproof <> ofs var
R30584:30596 compcert.ia32.Stacklayout <> fe_stack_data proj
R30580:30581 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R30646:30649 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R30620:30622 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30606:30618 compcert.ia32.Stacklayout <> fe_stack_data proj
R30602:30603 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R30626:30644 compcert.backend.Linear <> fn_stacksize proj
R30623:30623 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R30650:30652 compcert.backend.Stackingproof <> ofs var
R30536:30538 Coq.Init.Logic <> :type_scope:x_'='_x not
R30510:30517 compcert.common.Memory Mem load def
R30533:30535 compcert.backend.Stackingproof <> ofs var
R30529:30531 compcert.backend.Stackingproof <> sp' var
R30525:30527 compcert.backend.Stackingproof <> m1' var
R30519:30523 compcert.backend.Stackingproof <> chunk var
R30539:30542 Coq.Init.Datatypes <> Some constr
R30544:30544 compcert.backend.Stackingproof <> v var
R30492:30494 Coq.Init.Logic <> :type_scope:x_'='_x not
R30467:30474 compcert.common.Memory Mem load def
R30489:30491 compcert.backend.Stackingproof <> ofs var
R30485:30487 compcert.backend.Stackingproof <> sp' var
R30482:30483 compcert.backend.Stackingproof <> m' var
R30476:30480 compcert.backend.Stackingproof <> chunk var
R30495:30498 Coq.Init.Datatypes <> Some constr
R30500:30500 compcert.backend.Stackingproof <> v var
R30398:30406 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30376:30379 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R30357:30359 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30354:30356 compcert.backend.Stackingproof <> ofs var
R30360:30369 compcert.common.Memdata <> size_chunk def
R30371:30375 compcert.backend.Stackingproof <> chunk var
R30384:30396 compcert.ia32.Stacklayout <> fe_stack_data proj
R30380:30381 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R30451:30454 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R30425:30427 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30411:30423 compcert.ia32.Stacklayout <> fe_stack_data proj
R30407:30408 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R30431:30449 compcert.backend.Linear <> fn_stacksize proj
R30428:30428 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R30455:30457 compcert.backend.Stackingproof <> ofs var
R30298:30312 compcert.common.Memory Mem valid_block def
R30318:30320 compcert.backend.Stackingproof <> sp' var
R30314:30316 compcert.backend.Stackingproof <> m1' var
R30272:30286 compcert.common.Memory Mem valid_block def
R30291:30293 compcert.backend.Stackingproof <> sp' var
R30288:30289 compcert.backend.Stackingproof <> m' var
R30241:30248 compcert.common.Memory Mem perm def
R30263:30263 compcert.backend.Stackingproof <> p var
R30259:30261 compcert.common.Memtype <> Max constr
R30255:30257 compcert.backend.Stackingproof <> ofs var
R30252:30253 compcert.backend.Stackingproof <> sp var
R30250:30250 compcert.backend.Stackingproof <> m var
R30213:30220 compcert.common.Memory Mem perm def
R30236:30236 compcert.backend.Stackingproof <> p var
R30232:30234 compcert.common.Memtype <> Max constr
R30228:30230 compcert.backend.Stackingproof <> ofs var
R30225:30226 compcert.backend.Stackingproof <> sp var
R30222:30223 compcert.backend.Stackingproof <> m1 var
R30170:30184 compcert.common.Memory Mem valid_block def
R30189:30190 compcert.backend.Stackingproof <> sp var
R30186:30187 compcert.backend.Stackingproof <> m1 var
R30146:30160 compcert.common.Memory Mem valid_block def
R30164:30165 compcert.backend.Stackingproof <> sp var
R30162:30162 compcert.backend.Stackingproof <> m var
R30092:30102 compcert.backend.Stackingproof <> agree_frame rec
R30132:30138 compcert.backend.Stackingproof <> retaddr var
R30125:30130 compcert.backend.Stackingproof <> parent var
R30121:30123 compcert.backend.Stackingproof <> sp' var
R30118:30119 compcert.backend.Stackingproof <> m' var
R30115:30116 compcert.backend.Stackingproof <> sp var
R30113:30113 compcert.backend.Stackingproof <> m var
R30109:30111 compcert.backend.Stackingproof <> ls0 var
R30106:30107 compcert.backend.Stackingproof <> ls var
R30104:30104 compcert.backend.Stackingproof <> j var
R30861:30874 compcert.backend.Stackingproof <> index_contains ind
R30888:30888 compcert.backend.Stackingproof <> v var
R30884:30886 compcert.backend.Stackingproof <> idx var
R30830:30843 compcert.backend.Stackingproof <> index_contains ind
R30856:30856 compcert.backend.Stackingproof <> v var
R30852:30854 compcert.backend.Stackingproof <> idx var
R30861:30874 compcert.backend.Stackingproof <> index_contains ind
R30888:30888 compcert.backend.Stackingproof <> v var
R30884:30886 compcert.backend.Stackingproof <> idx var
R30830:30843 compcert.backend.Stackingproof <> index_contains ind
R30856:30856 compcert.backend.Stackingproof <> v var
R30852:30854 compcert.backend.Stackingproof <> idx var
R30924:30956 compcert.backend.Stackingproof <> offset_of_index_disj_stack_data_2 thm
R31023:31037 compcert.backend.Stackingproof <> size_type_chunk thm
R31023:31037 compcert.backend.Stackingproof <> size_type_chunk thm
R31126:31143 compcert.backend.Stackingproof <> index_contains_inj def
R31159:31159 compcert.backend.Stackingproof <> v var
R31155:31157 compcert.backend.Stackingproof <> idx var
R31089:31106 compcert.backend.Stackingproof <> index_contains_inj def
R31121:31121 compcert.backend.Stackingproof <> v var
R31117:31119 compcert.backend.Stackingproof <> idx var
R31126:31143 compcert.backend.Stackingproof <> index_contains_inj def
R31159:31159 compcert.backend.Stackingproof <> v var
R31155:31157 compcert.backend.Stackingproof <> idx var
R31089:31106 compcert.backend.Stackingproof <> index_contains_inj def
R31121:31121 compcert.backend.Stackingproof <> v var
R31117:31119 compcert.backend.Stackingproof <> idx var
prf 31376:31404 <> agree_frame_extcall_invariant
R31750:31760 compcert.backend.Stackingproof <> agree_frame rec
R31792:31798 compcert.backend.Stackingproof <> retaddr var
R31785:31790 compcert.backend.Stackingproof <> parent var
R31781:31783 compcert.backend.Stackingproof <> sp' var
R31777:31779 compcert.backend.Stackingproof <> m1' var
R31774:31775 compcert.backend.Stackingproof <> sp var
R31771:31772 compcert.backend.Stackingproof <> m1 var
R31767:31769 compcert.backend.Stackingproof <> ls0 var
R31764:31765 compcert.backend.Stackingproof <> ls var
R31762:31762 compcert.backend.Stackingproof <> j var
R31698:31713 compcert.common.Memory Mem unchanged_on rec
R31741:31743 compcert.backend.Stackingproof <> m1' var
R31738:31739 compcert.backend.Stackingproof <> m' var
R31716:31731 compcert.common.Events <> loc_out_of_reach def
R31735:31735 compcert.backend.Stackingproof <> m var
R31733:31733 compcert.backend.Stackingproof <> j var
R31668:31682 compcert.common.Memory Mem valid_block def
R31688:31690 compcert.backend.Stackingproof <> sp' var
R31684:31686 compcert.backend.Stackingproof <> m1' var
R31642:31656 compcert.common.Memory Mem valid_block def
R31661:31663 compcert.backend.Stackingproof <> sp' var
R31658:31659 compcert.backend.Stackingproof <> m' var
R31611:31618 compcert.common.Memory Mem perm def
R31633:31633 compcert.backend.Stackingproof <> p var
R31629:31631 compcert.common.Memtype <> Max constr
R31625:31627 compcert.backend.Stackingproof <> ofs var
R31622:31623 compcert.backend.Stackingproof <> sp var
R31620:31620 compcert.backend.Stackingproof <> m var
R31583:31590 compcert.common.Memory Mem perm def
R31606:31606 compcert.backend.Stackingproof <> p var
R31602:31604 compcert.common.Memtype <> Max constr
R31598:31600 compcert.backend.Stackingproof <> ofs var
R31595:31596 compcert.backend.Stackingproof <> sp var
R31592:31593 compcert.backend.Stackingproof <> m1 var
R31540:31554 compcert.common.Memory Mem valid_block def
R31559:31560 compcert.backend.Stackingproof <> sp var
R31556:31557 compcert.backend.Stackingproof <> m1 var
R31516:31530 compcert.common.Memory Mem valid_block def
R31534:31535 compcert.backend.Stackingproof <> sp var
R31532:31532 compcert.backend.Stackingproof <> m var
R31462:31472 compcert.backend.Stackingproof <> agree_frame rec
R31502:31508 compcert.backend.Stackingproof <> retaddr var
R31495:31500 compcert.backend.Stackingproof <> parent var
R31491:31493 compcert.backend.Stackingproof <> sp' var
R31488:31489 compcert.backend.Stackingproof <> m' var
R31485:31486 compcert.backend.Stackingproof <> sp var
R31483:31483 compcert.backend.Stackingproof <> m var
R31479:31481 compcert.backend.Stackingproof <> ls0 var
R31476:31477 compcert.backend.Stackingproof <> ls var
R31474:31474 compcert.backend.Stackingproof <> j var
R31939:31954 compcert.common.Events <> loc_out_of_reach def
R31964:31966 compcert.backend.Stackingproof <> ofs var
R31876:31879 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R31855:31857 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R31852:31854 compcert.backend.Stackingproof <> ofs var
R31862:31874 compcert.ia32.Stacklayout <> fe_stack_data proj
R31858:31859 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R31924:31927 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R31898:31900 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31884:31896 compcert.ia32.Stacklayout <> fe_stack_data proj
R31880:31881 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R31904:31922 compcert.backend.Linear <> fn_stacksize proj
R31901:31901 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R31928:31930 compcert.backend.Stackingproof <> ofs var
R31939:31954 compcert.common.Events <> loc_out_of_reach def
R31964:31966 compcert.backend.Stackingproof <> ofs var
R31876:31879 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R31855:31857 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R31852:31854 compcert.backend.Stackingproof <> ofs var
R31862:31874 compcert.ia32.Stacklayout <> fe_stack_data proj
R31858:31859 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R31924:31927 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R31898:31900 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31884:31896 compcert.ia32.Stacklayout <> fe_stack_data proj
R31880:31881 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R31904:31922 compcert.backend.Linear <> fn_stacksize proj
R31901:31901 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R31928:31930 compcert.backend.Stackingproof <> ofs var
R32001:32016 compcert.backend.Stackingproof <> agree_inj_unique proj
R32074:32085 compcert.backend.Stackingproof <> agree_bounds proj
R32112:32132 compcert.backend.Stackingproof <> agree_frame_invariant thm
R32112:32132 compcert.backend.Stackingproof <> agree_frame_invariant thm
R32159:32179 compcert.common.Memory Mem load_unchanged_on thm
R32159:32179 compcert.common.Memory Mem load_unchanged_on thm
R32241:32261 compcert.common.Memory Mem perm_unchanged_on thm
R32241:32261 compcert.common.Memory Mem perm_unchanged_on thm
prf 32368:32394 <> agree_frame_parallel_stores
R32665:32675 compcert.backend.Stackingproof <> agree_frame rec
R32707:32713 compcert.backend.Stackingproof <> retaddr var
R32700:32705 compcert.backend.Stackingproof <> parent var
R32696:32698 compcert.backend.Stackingproof <> sp' var
R32692:32694 compcert.backend.Stackingproof <> m1' var
R32689:32690 compcert.backend.Stackingproof <> sp var
R32686:32687 compcert.backend.Stackingproof <> m1 var
R32682:32684 compcert.backend.Stackingproof <> ls0 var
R32679:32680 compcert.backend.Stackingproof <> ls var
R32677:32677 compcert.backend.Stackingproof <> j var
R32648:32650 Coq.Init.Logic <> :type_scope:x_'='_x not
R32620:32629 compcert.common.Memory Mem storev def
R32646:32647 compcert.backend.Stackingproof <> v' var
R32640:32644 compcert.backend.Stackingproof <> addr' var
R32637:32638 compcert.backend.Stackingproof <> m' var
R32631:32635 compcert.backend.Stackingproof <> chunk var
R32651:32654 Coq.Init.Datatypes <> Some constr
R32656:32658 compcert.backend.Stackingproof <> m1' var
R32604:32606 Coq.Init.Logic <> :type_scope:x_'='_x not
R32579:32588 compcert.common.Memory Mem storev def
R32603:32603 compcert.backend.Stackingproof <> v var
R32598:32601 compcert.backend.Stackingproof <> addr var
R32596:32596 compcert.backend.Stackingproof <> m var
R32590:32594 compcert.backend.Stackingproof <> chunk var
R32607:32610 Coq.Init.Datatypes <> Some constr
R32612:32613 compcert.backend.Stackingproof <> m1 var
R32550:32559 compcert.common.Values <> val_inject ind
R32568:32572 compcert.backend.Stackingproof <> addr' var
R32563:32566 compcert.backend.Stackingproof <> addr var
R32561:32561 compcert.backend.Stackingproof <> j var
R32527:32536 compcert.common.Memory Mem inject def
R32542:32543 compcert.backend.Stackingproof <> m' var
R32540:32540 compcert.backend.Stackingproof <> m var
R32538:32538 compcert.backend.Stackingproof <> j var
R32474:32484 compcert.backend.Stackingproof <> agree_frame rec
R32514:32520 compcert.backend.Stackingproof <> retaddr var
R32507:32512 compcert.backend.Stackingproof <> parent var
R32503:32505 compcert.backend.Stackingproof <> sp' var
R32500:32501 compcert.backend.Stackingproof <> m' var
R32497:32498 compcert.backend.Stackingproof <> sp var
R32495:32495 compcert.backend.Stackingproof <> m var
R32491:32493 compcert.backend.Stackingproof <> ls0 var
R32488:32489 compcert.backend.Stackingproof <> ls var
R32486:32486 compcert.backend.Stackingproof <> j var
R32730:32736 compcert.lib.Integers Int add def
R32845:32865 compcert.backend.Stackingproof <> agree_frame_invariant thm
R32845:32865 compcert.backend.Stackingproof <> agree_frame_invariant thm
R32961:32980 compcert.common.Memory Mem load_store_other thm
R32961:32980 compcert.common.Memory Mem load_store_other thm
R33005:33012 compcert.common.Values <> eq_block def
R33005:33012 compcert.common.Values <> eq_block def
R33062:33077 compcert.backend.Stackingproof <> agree_inj_unique proj
R33129:33152 compcert.common.Memory Mem store_valid_access_3 thm
R33196:33227 compcert.backend.Stackingproof <> shifted_stack_offset_no_overflow thm
R33196:33227 compcert.backend.Stackingproof <> shifted_stack_offset_no_overflow thm
R33242:33253 compcert.backend.Stackingproof <> agree_bounds proj
R33269:33284 compcert.common.Memory Mem perm_cur_max thm
R33269:33284 compcert.common.Memory Mem perm_cur_max thm
R33319:33330 compcert.lib.Integers Int unsigned def
R33351:33364 compcert.common.Memdata <> size_chunk_pos thm
R33351:33364 compcert.common.Memdata <> size_chunk_pos thm
R33407:33418 compcert.backend.Stackingproof <> agree_bounds proj
R33434:33449 compcert.common.Memory Mem perm_cur_max thm
R33434:33449 compcert.common.Memory Mem perm_cur_max thm
R33520:33522 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R33501:33503 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R33484:33495 compcert.lib.Integers Int unsigned def
R33504:33513 compcert.common.Memdata <> size_chunk def
R33539:33552 compcert.common.Memdata <> size_chunk_pos thm
R33539:33552 compcert.common.Memdata <> size_chunk_pos thm
R33605:33616 compcert.backend.Stackingproof <> agree_bounds proj
R33605:33616 compcert.backend.Stackingproof <> agree_bounds proj
R33632:33647 compcert.common.Memory Mem perm_cur_max thm
R33632:33647 compcert.common.Memory Mem perm_cur_max thm
R33676:33689 compcert.common.Memdata <> size_chunk_pos thm
R33676:33689 compcert.common.Memdata <> size_chunk_pos thm
prf 33830:33852 <> agree_frame_inject_incr
R34049:34059 compcert.backend.Stackingproof <> agree_frame rec
R34090:34096 compcert.backend.Stackingproof <> retaddr var
R34083:34088 compcert.backend.Stackingproof <> parent var
R34079:34081 compcert.backend.Stackingproof <> sp' var
R34076:34077 compcert.backend.Stackingproof <> m' var
R34073:34074 compcert.backend.Stackingproof <> sp var
R34071:34071 compcert.backend.Stackingproof <> m var
R34067:34069 compcert.backend.Stackingproof <> ls0 var
R34064:34065 compcert.backend.Stackingproof <> ls var
R34061:34062 compcert.backend.Stackingproof <> j' var
R34020:34034 compcert.common.Memory Mem valid_block def
R34040:34042 compcert.backend.Stackingproof <> sp' var
R34036:34038 compcert.backend.Stackingproof <> m1' var
R33986:34001 compcert.common.Events <> inject_separated def
R34011:34013 compcert.backend.Stackingproof <> m1' var
R34008:34009 compcert.backend.Stackingproof <> m1 var
R34005:34006 compcert.backend.Stackingproof <> j' var
R34003:34003 compcert.backend.Stackingproof <> j var
R33966:33976 compcert.common.Values <> inject_incr def
R33980:33981 compcert.backend.Stackingproof <> j' var
R33978:33978 compcert.backend.Stackingproof <> j var
R33913:33923 compcert.backend.Stackingproof <> agree_frame rec
R33953:33959 compcert.backend.Stackingproof <> retaddr var
R33946:33951 compcert.backend.Stackingproof <> parent var
R33942:33944 compcert.backend.Stackingproof <> sp' var
R33939:33940 compcert.backend.Stackingproof <> m' var
R33936:33937 compcert.backend.Stackingproof <> sp var
R33934:33934 compcert.backend.Stackingproof <> m var
R33930:33932 compcert.backend.Stackingproof <> ls0 var
R33927:33928 compcert.backend.Stackingproof <> ls var
R33925:33925 compcert.backend.Stackingproof <> j var
prf 34338:34359 <> inject_alloc_separated
R34541:34556 compcert.common.Events <> inject_separated def
R34566:34567 compcert.backend.Stackingproof <> m2 var
R34563:34564 compcert.backend.Stackingproof <> m1 var
R34560:34561 compcert.backend.Stackingproof <> j' var
R34558:34558 compcert.backend.Stackingproof <> j var
R34513:34513 Coq.Init.Logic <> :type_scope:'~'_x not
R34514:34528 compcert.common.Memory Mem valid_block def
R34533:34534 compcert.backend.Stackingproof <> b2 var
R34530:34531 compcert.backend.Stackingproof <> m2 var
R34487:34487 Coq.Init.Logic <> :type_scope:'~'_x not
R34488:34502 compcert.common.Memory Mem valid_block def
R34507:34508 compcert.backend.Stackingproof <> b1 var
R34504:34505 compcert.backend.Stackingproof <> m1 var
R34474:34476 Coq.Init.Logic <> :type_scope:x_'='_x not
R34470:34471 compcert.backend.Stackingproof <> j' var
R34473:34473 compcert.backend.Stackingproof <> b var
R34477:34477 compcert.backend.Stackingproof <> j var
R34479:34479 compcert.backend.Stackingproof <> b var
R34460:34463 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R34459:34459 compcert.backend.Stackingproof <> b var
R34464:34465 compcert.backend.Stackingproof <> b1 var
R34424:34426 Coq.Init.Logic <> :type_scope:x_'='_x not
R34419:34420 compcert.backend.Stackingproof <> j' var
R34422:34423 compcert.backend.Stackingproof <> b1 var
R34427:34430 Coq.Init.Datatypes <> Some constr
R34431:34431 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34434:34435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34441:34441 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34432:34433 compcert.backend.Stackingproof <> b2 var
R34436:34440 compcert.backend.Stackingproof <> delta var
R34397:34407 compcert.common.Values <> inject_incr def
R34411:34412 compcert.backend.Stackingproof <> j' var
R34409:34409 compcert.backend.Stackingproof <> j var
R34612:34619 compcert.common.Values <> eq_block def
R34612:34619 compcert.common.Values <> eq_block def
R0:-1 compcert.backend.Stackingproof <> y var
prf 34798:34815 <> agree_frame_return
R34953:34963 compcert.backend.Stackingproof <> agree_frame rec
R34994:35000 compcert.backend.Stackingproof <> retaddr var
R34987:34992 compcert.backend.Stackingproof <> parent var
R34983:34985 compcert.backend.Stackingproof <> sp' var
R34980:34981 compcert.backend.Stackingproof <> m' var
R34977:34978 compcert.backend.Stackingproof <> sp var
R34975:34975 compcert.backend.Stackingproof <> m var
R34971:34973 compcert.backend.Stackingproof <> ls0 var
R34967:34969 compcert.backend.Stackingproof <> ls' var
R34965:34965 compcert.backend.Stackingproof <> j var
R34923:34939 compcert.backend.Stackingproof <> agree_callee_save def
R34945:34946 compcert.backend.Stackingproof <> ls var
R34941:34943 compcert.backend.Stackingproof <> ls' var
R34870:34880 compcert.backend.Stackingproof <> agree_frame rec
R34910:34916 compcert.backend.Stackingproof <> retaddr var
R34903:34908 compcert.backend.Stackingproof <> parent var
R34899:34901 compcert.backend.Stackingproof <> sp' var
R34896:34897 compcert.backend.Stackingproof <> m' var
R34893:34894 compcert.backend.Stackingproof <> sp var
R34891:34891 compcert.backend.Stackingproof <> m var
R34887:34889 compcert.backend.Stackingproof <> ls0 var
R34884:34885 compcert.backend.Stackingproof <> ls var
R34882:34882 compcert.backend.Stackingproof <> j var
R35112:35140 compcert.backend.Stackingproof <> caller_save_reg_within_bounds thm
R35112:35140 compcert.backend.Stackingproof <> caller_save_reg_within_bounds thm
prf 35294:35313 <> agree_frame_tailcall
R35454:35464 compcert.backend.Stackingproof <> agree_frame rec
R35495:35501 compcert.backend.Stackingproof <> retaddr var
R35488:35493 compcert.backend.Stackingproof <> parent var
R35484:35486 compcert.backend.Stackingproof <> sp' var
R35481:35482 compcert.backend.Stackingproof <> m' var
R35478:35479 compcert.backend.Stackingproof <> sp var
R35476:35476 compcert.backend.Stackingproof <> m var
R35471:35474 compcert.backend.Stackingproof <> ls0' var
R35468:35469 compcert.backend.Stackingproof <> ls var
R35466:35466 compcert.backend.Stackingproof <> j var
R35422:35438 compcert.backend.Stackingproof <> agree_callee_save def
R35444:35447 compcert.backend.Stackingproof <> ls0' var
R35440:35442 compcert.backend.Stackingproof <> ls0 var
R35369:35379 compcert.backend.Stackingproof <> agree_frame rec
R35409:35415 compcert.backend.Stackingproof <> retaddr var
R35402:35407 compcert.backend.Stackingproof <> parent var
R35398:35400 compcert.backend.Stackingproof <> sp' var
R35395:35396 compcert.backend.Stackingproof <> m' var
R35392:35393 compcert.backend.Stackingproof <> sp var
R35390:35390 compcert.backend.Stackingproof <> m var
R35386:35388 compcert.backend.Stackingproof <> ls0 var
R35383:35384 compcert.backend.Stackingproof <> ls var
R35381:35381 compcert.backend.Stackingproof <> j var
R35616:35644 compcert.backend.Stackingproof <> caller_save_reg_within_bounds thm
R35616:35644 compcert.backend.Stackingproof <> caller_save_reg_within_bounds thm
R35720:35748 compcert.ia32.Conventions1 <> int_callee_save_not_destroyed thm
R35720:35748 compcert.ia32.Conventions1 <> int_callee_save_not_destroyed thm
R35802:35832 compcert.ia32.Conventions1 <> float_callee_save_not_destroyed thm
R35802:35832 compcert.ia32.Conventions1 <> float_callee_save_not_destroyed thm
prf 35898:35926 <> agree_callee_save_return_regs
R35949:35965 compcert.backend.Stackingproof <> agree_callee_save def
R35989:35991 compcert.backend.Stackingproof <> ls1 var
R35968:35978 compcert.backend.LTL <> return_regs def
R35984:35986 compcert.backend.Stackingproof <> ls2 var
R35980:35982 compcert.backend.Stackingproof <> ls1 var
R36033:36043 compcert.backend.LTL <> return_regs def
R36074:36087 compcert.lib.Coqlib <> pred_dec_false thm
R36074:36087 compcert.lib.Coqlib <> pred_dec_false thm
prf 36109:36136 <> agree_callee_save_set_result
R36196:36212 compcert.backend.Stackingproof <> agree_callee_save def
R36262:36264 compcert.backend.Stackingproof <> ls2 var
R36215:36228 compcert.backend.Locations Locmap setlist def
R36257:36259 compcert.backend.Stackingproof <> ls1 var
R36254:36255 compcert.backend.Stackingproof <> vl var
R36231:36233 Coq.Lists.List <> map def
R36238:36247 compcert.ia32.Conventions1 <> loc_result def
R36249:36250 compcert.backend.Stackingproof <> sg var
R36235:36235 compcert.backend.Locations <> R constr
R36165:36181 compcert.backend.Stackingproof <> agree_callee_save def
R36187:36189 compcert.backend.Stackingproof <> ls2 var
R36183:36185 compcert.backend.Stackingproof <> ls1 var
R36299:36320 compcert.ia32.Conventions1 <> loc_result_caller_save thm
R36299:36320 compcert.ia32.Conventions1 <> loc_result_caller_save thm
R36341:36350 compcert.ia32.Conventions1 <> loc_result def
R36341:36350 compcert.ia32.Conventions1 <> loc_result def
R36364:36380 compcert.ia32.Conventions1 <> destroyed_at_call def
R36485:36494 compcert.backend.Locations Locmap gso thm
R36485:36494 compcert.backend.Locations Locmap gso thm
prf 36598:36617 <> check_mreg_list_incl
R36692:36695 Coq.Lists.List <> incl def
R36700:36701 compcert.backend.Stackingproof <> l2 var
R36697:36698 compcert.backend.Stackingproof <> l1 var
R36679:36681 Coq.Init.Logic <> :type_scope:x_'='_x not
R36638:36644 Coq.Lists.List <> forallb def
R36677:36678 compcert.backend.Stackingproof <> l1 var
R36656:36661 Coq.Lists.List <> In_dec syndef
R36673:36674 compcert.backend.Stackingproof <> l2 var
R36671:36671 compcert.backend.Stackingproof <> r var
R36663:36669 compcert.ia32.Machregs <> mreg_eq thm
R36682:36685 Coq.Init.Datatypes <> true constr
R36745:36758 Coq.Lists.List <> forallb_forall thm
R36745:36758 Coq.Lists.List <> forallb_forall thm
R36773:36789 compcert.lib.Coqlib <> proj_sumbool_true thm
R36773:36789 compcert.lib.Coqlib <> proj_sumbool_true thm
prf 36813:36839 <> destroyed_by_op_caller_save
R36855:36858 Coq.Lists.List <> incl def
R36881:36897 compcert.ia32.Conventions1 <> destroyed_at_call def
R36861:36875 compcert.ia32.Machregs <> destroyed_by_op def
R36877:36878 compcert.backend.Stackingproof <> op var
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R36928:36947 compcert.backend.Stackingproof <> check_mreg_list_incl thm
prf 36978:37006 <> destroyed_by_load_caller_save
R37030:37033 Coq.Lists.List <> incl def
R37066:37082 compcert.ia32.Conventions1 <> destroyed_at_call def
R37036:37052 compcert.ia32.Machregs <> destroyed_by_load def
R37060:37063 compcert.backend.Stackingproof <> addr var
R37054:37058 compcert.backend.Stackingproof <> chunk var
R37124:37143 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37124:37143 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37124:37143 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37124:37143 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37124:37143 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37124:37143 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37124:37143 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37124:37143 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37124:37143 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37124:37143 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37124:37143 compcert.backend.Stackingproof <> check_mreg_list_incl thm
prf 37174:37203 <> destroyed_by_store_caller_save
R37227:37230 Coq.Lists.List <> incl def
R37264:37280 compcert.ia32.Conventions1 <> destroyed_at_call def
R37233:37250 compcert.ia32.Machregs <> destroyed_by_store def
R37258:37261 compcert.backend.Stackingproof <> addr var
R37252:37256 compcert.backend.Stackingproof <> chunk var
R37322:37341 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37322:37341 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37322:37341 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37322:37341 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37322:37341 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37322:37341 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37322:37341 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37322:37341 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37322:37341 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37322:37341 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37322:37341 compcert.backend.Stackingproof <> check_mreg_list_incl thm
prf 37372:37400 <> destroyed_by_cond_caller_save
R37418:37421 Coq.Lists.List <> incl def
R37448:37464 compcert.ia32.Conventions1 <> destroyed_at_call def
R37424:37440 compcert.ia32.Machregs <> destroyed_by_cond def
R37442:37445 compcert.backend.Stackingproof <> cond var
R37497:37516 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37497:37516 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37497:37516 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37497:37516 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37497:37516 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37497:37516 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37497:37516 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37497:37516 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37497:37516 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37497:37516 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37497:37516 compcert.backend.Stackingproof <> check_mreg_list_incl thm
prf 37547:37580 <> destroyed_by_jumptable_caller_save
R37585:37588 Coq.Lists.List <> incl def
R37613:37629 compcert.ia32.Conventions1 <> destroyed_at_call def
R37590:37611 compcert.ia32.Machregs <> destroyed_by_jumptable def
R37647:37666 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37647:37666 compcert.backend.Stackingproof <> check_mreg_list_incl thm
prf 37697:37729 <> destroyed_by_setstack_caller_save
R37745:37748 Coq.Lists.List <> incl def
R37777:37793 compcert.ia32.Conventions1 <> destroyed_at_call def
R37751:37771 compcert.ia32.Machregs <> destroyed_by_setstack def
R37773:37774 compcert.backend.Stackingproof <> ty var
R37824:37843 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37824:37843 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37824:37843 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37824:37843 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37824:37843 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37824:37843 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37824:37843 compcert.backend.Stackingproof <> check_mreg_list_incl thm
prf 37874:37912 <> destroyed_at_function_entry_caller_save
R37917:37920 Coq.Lists.List <> incl def
R37950:37966 compcert.ia32.Conventions1 <> destroyed_at_call def
R37922:37948 compcert.ia32.Machregs <> destroyed_at_function_entry def
R37984:38003 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R37984:38003 compcert.backend.Stackingproof <> check_mreg_list_incl thm
prf 38034:38066 <> temp_for_parent_frame_caller_save
R38071:38072 Coq.Lists.List <> In def
R38096:38112 compcert.ia32.Conventions1 <> destroyed_at_call def
R38074:38094 compcert.ia32.Machregs <> temp_for_parent_frame def
R38136:38156 compcert.ia32.Machregs <> temp_for_parent_frame def
R38173:38189 compcert.ia32.Conventions1 <> destroyed_at_call def
R38201:38221 compcert.ia32.Machregs <> temp_for_parent_frame def
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R38257:38283 compcert.backend.Stackingproof <> destroyed_by_op_caller_save thm
R38285:38313 compcert.backend.Stackingproof <> destroyed_by_load_caller_save thm
R38319:38348 compcert.backend.Stackingproof <> destroyed_by_store_caller_save thm
R38354:38382 compcert.backend.Stackingproof <> destroyed_by_cond_caller_save thm
R38384:38417 compcert.backend.Stackingproof <> destroyed_by_jumptable_caller_save thm
R38423:38461 compcert.backend.Stackingproof <> destroyed_at_function_entry_caller_save thm
prf 38482:38517 <> destroyed_by_setstack_function_entry
R38533:38536 Coq.Lists.List <> incl def
R38565:38591 compcert.ia32.Machregs <> destroyed_at_function_entry def
R38539:38559 compcert.ia32.Machregs <> destroyed_by_setstack def
R38561:38562 compcert.backend.Stackingproof <> ty var
R38622:38641 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R38622:38641 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R38622:38641 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R38622:38641 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R38622:38641 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R38622:38641 compcert.backend.Stackingproof <> check_mreg_list_incl thm
R38622:38641 compcert.backend.Stackingproof <> check_mreg_list_incl thm
prf 38673:38694 <> transl_destroyed_by_op
R38744:38746 Coq.Init.Logic <> :type_scope:x_'='_x not
R38712:38726 compcert.ia32.Machregs <> destroyed_by_op def
R38729:38737 compcert.backend.Stacking <> transl_op def
R38741:38742 compcert.backend.Stackingproof <> op var
R38739:38739 compcert.backend.Stackingproof <> e var
R38747:38761 compcert.ia32.Machregs <> destroyed_by_op def
R38763:38764 compcert.backend.Stackingproof <> op var
prf 38823:38846 <> transl_destroyed_by_load
R38916:38918 Coq.Init.Logic <> :type_scope:x_'='_x not
R38872:38888 compcert.ia32.Machregs <> destroyed_by_load def
R38897:38907 compcert.backend.Stacking <> transl_addr def
R38911:38914 compcert.backend.Stackingproof <> addr var
R38909:38909 compcert.backend.Stackingproof <> e var
R38890:38894 compcert.backend.Stackingproof <> chunk var
R38919:38935 compcert.ia32.Machregs <> destroyed_by_load def
R38943:38946 compcert.backend.Stackingproof <> addr var
R38937:38941 compcert.backend.Stackingproof <> chunk var
prf 39008:39032 <> transl_destroyed_by_store
R39103:39105 Coq.Init.Logic <> :type_scope:x_'='_x not
R39058:39075 compcert.ia32.Machregs <> destroyed_by_store def
R39084:39094 compcert.backend.Stacking <> transl_addr def
R39098:39101 compcert.backend.Stackingproof <> addr var
R39096:39096 compcert.backend.Stackingproof <> e var
R39077:39081 compcert.backend.Stackingproof <> chunk var
R39106:39123 compcert.ia32.Machregs <> destroyed_by_store def
R39131:39134 compcert.backend.Stackingproof <> addr var
R39125:39129 compcert.backend.Stackingproof <> chunk var
sec 39533:39548 PRESERVATION.FRAME_PROPERTIES SAVE_CALLEE_SAVE
var 39561:39565 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE bound
R39581:39581 Coq.Numbers.BinNums <> Z ind
R39568:39576 compcert.ia32.Stacklayout <> frame_env rec
var 39593:39598 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE number
R39609:39609 Coq.Numbers.BinNums <> Z ind
R39601:39604 compcert.ia32.Machregs <> mreg ind
var 39621:39627 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE mkindex
R39635:39645 compcert.backend.Stacking <> frame_index ind
R39630:39630 Coq.Numbers.BinNums <> Z ind
var 39657:39658 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE ty
R39661:39663 compcert.common.AST <> typ ind
var 39675:39675 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE j
R39678:39683 compcert.common.Values <> meminj def
var 39695:39696 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE cs
R39699:39702 Coq.Init.Datatypes <> list ind
R39704:39713 compcert.backend.Mach <> stackframe ind
var 39725:39726 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE fb
R39729:39733 compcert.common.Values <> block def
var 39745:39746 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE sp
R39749:39753 compcert.common.Values <> block def
var 39765:39770 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE csregs
R39773:39776 Coq.Init.Datatypes <> list ind
R39778:39781 compcert.ia32.Machregs <> mreg ind
var 39793:39794 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE ls
R39797:39802 compcert.backend.Linear <> locset def
ind 39816:39830 <> stores_in_frame
constr 39859:39878 <> stores_in_frame_refl
constr 39921:39940 <> stores_in_frame_step
R39840:39842 compcert.common.Memory <> mem syndef
R39833:39835 compcert.common.Memory <> mem syndef
R39897:39911 compcert.backend.Stackingproof <> stores_in_frame ind
R39915:39915 compcert.backend.Stackingproof <> m var
R39913:39913 compcert.backend.Stackingproof <> m var
R40176:40190 compcert.backend.Stackingproof <> stores_in_frame ind
R40195:40196 compcert.backend.Stackingproof <> m3 var
R40192:40193 compcert.backend.Stackingproof <> m1 var
R40144:40158 compcert.backend.Stackingproof <> stores_in_frame ind
R40163:40164 compcert.backend.Stackingproof <> m3 var
R40160:40161 compcert.backend.Stackingproof <> m2 var
R40123:40125 Coq.Init.Logic <> :type_scope:x_'='_x not
R40096:40104 compcert.common.Memory Mem store def
R40122:40122 compcert.backend.Stackingproof <> v var
R40118:40120 compcert.backend.Stackingproof <> ofs var
R40115:40116 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.sp var
R40112:40113 compcert.backend.Stackingproof <> m1 var
R40106:40110 compcert.backend.Stackingproof <> chunk var
R40126:40129 Coq.Init.Datatypes <> Some constr
R40131:40132 compcert.backend.Stackingproof <> m2 var
R40023:40033 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R40001:40004 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R39982:39984 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39979:39981 compcert.backend.Stackingproof <> ofs var
R39985:39994 compcert.common.Memdata <> size_chunk def
R39996:40000 compcert.backend.Stackingproof <> chunk var
R40009:40021 compcert.ia32.Stacklayout <> fe_stack_data proj
R40005:40006 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R40078:40081 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R40052:40054 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40038:40050 compcert.ia32.Stacklayout <> fe_stack_data proj
R40034:40035 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R40058:40076 compcert.backend.Linear <> fn_stacksize proj
R40055:40055 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R40082:40084 compcert.backend.Stackingproof <> ofs var
prf 40207:40227 <> stores_in_frame_trans
R40309:40323 compcert.backend.Stackingproof <> stores_in_frame ind
R40328:40329 compcert.backend.Stackingproof <> m3 var
R40325:40326 compcert.backend.Stackingproof <> m1 var
R40284:40298 compcert.backend.Stackingproof <> stores_in_frame ind
R40303:40304 compcert.backend.Stackingproof <> m3 var
R40300:40301 compcert.backend.Stackingproof <> m2 var
R40246:40260 compcert.backend.Stackingproof <> stores_in_frame ind
R40265:40266 compcert.backend.Stackingproof <> m2 var
R40262:40263 compcert.backend.Stackingproof <> m1 var
var 40406:40415 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE number_inj
R40488:40491 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40479:40484 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R40486:40487 compcert.backend.Stackingproof <> r1 var
R40492:40497 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R40499:40500 compcert.backend.Stackingproof <> r2 var
R40469:40472 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40467:40468 compcert.backend.Stackingproof <> r1 var
R40473:40474 compcert.backend.Stackingproof <> r2 var
R40451:40452 Coq.Lists.List <> In def
R40457:40462 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.csregs var
R40454:40455 compcert.backend.Stackingproof <> r2 var
R40435:40436 Coq.Lists.List <> In def
R40441:40446 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.csregs var
R40438:40439 compcert.backend.Stackingproof <> r1 var
var 40514:40526 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE mkindex_valid
R40579:40589 compcert.backend.Stackingproof <> index_valid def
R40592:40598 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex var
R40601:40606 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R40608:40608 compcert.backend.Stackingproof <> r var
R40564:40566 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R40556:40561 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R40563:40563 compcert.backend.Stackingproof <> r var
R40567:40571 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.bound var
R40573:40574 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R40541:40542 Coq.Lists.List <> In def
R40546:40551 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.csregs var
R40544:40544 compcert.backend.Stackingproof <> r var
var 40624:40634 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE mkindex_typ
R40674:40676 Coq.Init.Logic <> :type_scope:x_'='_x not
R40649:40661 compcert.backend.Stackingproof <> type_of_index def
R40664:40670 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex var
R40672:40672 compcert.backend.Stackingproof <> z var
R40677:40678 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ty var
var 40692:40702 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE mkindex_inj
R40743:40746 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40733:40739 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex var
R40741:40742 compcert.backend.Stackingproof <> z1 var
R40747:40753 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex var
R40755:40756 compcert.backend.Stackingproof <> z2 var
R40723:40726 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40721:40722 compcert.backend.Stackingproof <> z1 var
R40727:40728 compcert.backend.Stackingproof <> z2 var
var 40770:40781 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE mkindex_diff
R40831:40840 compcert.backend.Stackingproof <> index_diff def
R40863:40865 compcert.backend.Stackingproof <> idx var
R40843:40849 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex var
R40852:40857 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R40859:40859 compcert.backend.Stackingproof <> r var
R40805:40808 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40802:40804 compcert.backend.Stackingproof <> idx var
R40809:40815 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex var
R40818:40823 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R40825:40825 compcert.backend.Stackingproof <> r var
var 40879:40888 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE csregs_typ
R40929:40931 Coq.Init.Logic <> :type_scope:x_'='_x not
R40918:40926 compcert.ia32.Machregs <> mreg_type def
R40928:40928 compcert.backend.Stackingproof <> r var
R40932:40933 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ty var
R40903:40904 Coq.Lists.List <> In def
R40908:40913 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.csregs var
R40906:40906 compcert.backend.Stackingproof <> r var
var 40948:40960 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE ls_temp_undef
R41018:41020 Coq.Init.Logic <> :type_scope:x_'='_x not
R41010:41011 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ls var
R41014:41014 compcert.backend.Locations <> R constr
R41016:41016 compcert.backend.Stackingproof <> r var
R41021:41026 compcert.common.Values <> Vundef constr
R40975:40976 Coq.Lists.List <> In def
R40981:41001 compcert.ia32.Machregs <> destroyed_by_setstack def
R41003:41004 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ty var
R40978:40978 compcert.backend.Stackingproof <> r var
var 41041:41045 PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE wt_ls
R41058:41069 compcert.common.Values Val has_type def
R41083:41091 compcert.ia32.Machregs <> mreg_type def
R41093:41093 compcert.backend.Stackingproof <> r var
R41072:41073 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ls var
R41076:41076 compcert.backend.Locations <> R constr
R41078:41078 compcert.backend.Stackingproof <> r var
prf 41104:41132 <> save_callee_save_regs_correct
R41249:41255 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41259:41260 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41261:41267 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41270:41275 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41448:41453 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41276:41279 compcert.common.Smallstep <> star ind
R41408:41412 compcert.backend.Mach <> State constr
R41445:41446 compcert.backend.Stackingproof <> m' var
R41441:41443 compcert.backend.Stackingproof <> rs' var
R41439:41439 compcert.backend.Stackingproof <> k var
R41421:41424 compcert.common.Values <> Vptr constr
R41429:41436 compcert.lib.Integers Int zero def
R41426:41427 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.sp var
R41417:41418 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.fb var
R41414:41415 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.cs var
R41404:41405 compcert.common.Events <> E0 def
R41299:41303 compcert.backend.Mach <> State constr
R41397:41397 compcert.backend.Stackingproof <> m var
R41394:41395 compcert.backend.Stackingproof <> rs var
R41340:41360 compcert.backend.Stacking <> save_callee_save_regs def
R41391:41391 compcert.backend.Stackingproof <> k var
R41389:41389 compcert.backend.Stackingproof <> l var
R41386:41387 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R41383:41384 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ty var
R41375:41381 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex var
R41368:41373 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R41362:41366 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.bound var
R41312:41315 compcert.common.Values <> Vptr constr
R41320:41327 compcert.lib.Integers Int zero def
R41317:41318 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.sp var
R41308:41309 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.fb var
R41305:41306 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.cs var
R41286:41288 compcert.backend.Stackingproof <> PRESERVATION.tge var
R41281:41284 compcert.backend.Stackingproof <> PRESERVATION.step var
R41454:41454 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41570:41576 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41512:41529 compcert.backend.Stackingproof <> index_contains_inj def
R41561:41562 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ls var
R41565:41565 compcert.backend.Locations <> R constr
R41567:41567 compcert.backend.Stackingproof <> r var
R41540:41546 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex var
R41549:41554 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R41556:41556 compcert.backend.Stackingproof <> r var
R41536:41537 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.sp var
R41533:41534 compcert.backend.Stackingproof <> m' var
R41531:41531 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.j var
R41490:41492 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R41482:41487 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R41489:41489 compcert.backend.Stackingproof <> r var
R41493:41497 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.bound var
R41499:41500 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R41472:41473 Coq.Lists.List <> In def
R41477:41477 compcert.backend.Stackingproof <> l var
R41475:41475 compcert.backend.Stackingproof <> r var
R41577:41577 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41777:41783 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41751:41764 compcert.backend.Stackingproof <> index_contains ind
R41776:41776 compcert.backend.Stackingproof <> v var
R41772:41774 compcert.backend.Stackingproof <> idx var
R41769:41770 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.sp var
R41766:41767 compcert.backend.Stackingproof <> m' var
R41715:41728 compcert.backend.Stackingproof <> index_contains ind
R41739:41739 compcert.backend.Stackingproof <> v var
R41735:41737 compcert.backend.Stackingproof <> idx var
R41732:41733 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.sp var
R41730:41730 compcert.backend.Stackingproof <> m var
R41681:41684 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41678:41680 compcert.backend.Stackingproof <> idx var
R41685:41691 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex var
R41694:41699 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R41701:41701 compcert.backend.Stackingproof <> r var
R41663:41665 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R41655:41660 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R41662:41662 compcert.backend.Stackingproof <> r var
R41666:41670 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.bound var
R41672:41673 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R41645:41646 Coq.Lists.List <> In def
R41650:41650 compcert.backend.Stackingproof <> l var
R41648:41648 compcert.backend.Stackingproof <> r var
R41599:41609 compcert.backend.Stackingproof <> index_valid def
R41611:41613 compcert.backend.Stackingproof <> idx var
R41804:41809 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41784:41798 compcert.backend.Stackingproof <> stores_in_frame ind
R41802:41803 compcert.backend.Stackingproof <> m' var
R41800:41800 compcert.backend.Stackingproof <> m var
R41835:41840 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41810:41828 compcert.backend.Stackingproof <> frame_perm_freeable def
R41833:41834 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.sp var
R41830:41831 compcert.backend.Stackingproof <> m' var
R41841:41850 compcert.backend.Stackingproof <> agree_regs def
R41857:41859 compcert.backend.Stackingproof <> rs' var
R41854:41855 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ls var
R41852:41852 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.j var
R41225:41234 compcert.backend.Stackingproof <> agree_regs def
R41241:41242 compcert.backend.Stackingproof <> rs var
R41238:41239 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ls var
R41236:41236 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.j var
R41195:41213 compcert.backend.Stackingproof <> frame_perm_freeable def
R41217:41218 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.sp var
R41215:41215 compcert.backend.Stackingproof <> m var
R41175:41186 compcert.lib.Coqlib <> list_norepet ind
R41188:41188 compcert.backend.Stackingproof <> l var
R41156:41159 Coq.Lists.List <> incl def
R41163:41168 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.csregs var
R41161:41161 compcert.backend.Stackingproof <> l var
R41898:41918 compcert.backend.Stacking <> save_callee_save_regs def
R41898:41918 compcert.backend.Stacking <> save_callee_save_regs def
R41898:41918 compcert.backend.Stacking <> save_callee_save_regs def
R41975:41983 compcert.common.Smallstep <> star_refl constr
R41975:41983 compcert.common.Smallstep <> star_refl constr
R42095:42098 Coq.Lists.List <> incl def
R42102:42107 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.csregs var
R42095:42098 Coq.Lists.List <> incl def
R42102:42107 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.csregs var
R42144:42155 compcert.lib.Coqlib <> list_norepet ind
R42144:42155 compcert.lib.Coqlib <> list_norepet ind
R42190:42209 compcert.backend.Stacking <> save_callee_save_reg def
R42224:42226 compcert.lib.Coqlib <> zlt def
R42240:42244 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.bound var
R42246:42247 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R42229:42234 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R42224:42226 compcert.lib.Coqlib <> zlt def
R42240:42244 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.bound var
R42246:42247 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R42229:42234 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R42290:42309 compcert.backend.Stackingproof <> store_index_succeeds thm
R42319:42331 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex_valid var
R42319:42331 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex_valid var
R42424:42433 compcert.backend.Mach <> undef_regs def
R42436:42456 compcert.ia32.Machregs <> destroyed_by_setstack def
R42458:42459 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ty var
R42424:42433 compcert.backend.Mach <> undef_regs def
R42436:42456 compcert.ia32.Machregs <> destroyed_by_setstack def
R42458:42459 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ty var
R42550:42551 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ls var
R42528:42543 compcert.backend.Stackingproof <> agree_regs_exten thm
R42550:42551 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ls var
R42528:42543 compcert.backend.Stackingproof <> agree_regs_exten thm
R42583:42588 Coq.Lists.List <> In_dec syndef
R42601:42621 compcert.ia32.Machregs <> destroyed_by_setstack def
R42623:42624 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ty var
R42590:42596 compcert.ia32.Machregs <> mreg_eq thm
R42583:42588 Coq.Lists.List <> In_dec syndef
R42601:42621 compcert.ia32.Machregs <> destroyed_by_setstack def
R42623:42624 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ty var
R42590:42596 compcert.ia32.Machregs <> mreg_eq thm
R42643:42655 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ls_temp_undef var
R42643:42655 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ls_temp_undef var
R42693:42708 compcert.backend.Mach <> undef_regs_other thm
R42693:42708 compcert.backend.Mach <> undef_regs_other thm
R42802:42810 compcert.common.Smallstep <> star_left thm
R42802:42810 compcert.common.Smallstep <> star_left thm
R42849:42859 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex_typ var
R42862:42867 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R42849:42859 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex_typ var
R42862:42867 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R42883:42902 compcert.backend.Stackingproof <> store_stack_succeeds thm
R42883:42902 compcert.backend.Stackingproof <> store_stack_succeeds thm
R42982:42988 compcert.ia32.Machregs <> mreg_eq thm
R42982:42988 compcert.ia32.Machregs <> mreg_eq thm
R43015:43032 compcert.backend.Stackingproof <> index_contains_inj def
R43064:43065 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ls var
R43068:43068 compcert.backend.Locations <> R constr
R43043:43049 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex var
R43052:43057 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R43039:43040 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.sp var
R43034:43034 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.j var
R43015:43032 compcert.backend.Stackingproof <> index_contains_inj def
R43064:43065 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.ls var
R43068:43068 compcert.backend.Locations <> R constr
R43043:43049 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex var
R43052:43057 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number var
R43039:43040 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.sp var
R43034:43034 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.j var
R43087:43108 compcert.backend.Stackingproof <> gss_index_contains_inj thm
R43087:43108 compcert.backend.Stackingproof <> gss_index_contains_inj thm
R43130:43140 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex_typ var
R43130:43140 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex_typ var
R43155:43164 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.csregs_typ var
R43155:43164 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.csregs_typ var
R43176:43180 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.wt_ls var
R43176:43180 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.wt_ls var
R43293:43303 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex_inj var
R43293:43303 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.mkindex_inj var
R43312:43321 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number_inj var
R43312:43321 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE.number_inj var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R43484:43501 compcert.backend.Stackingproof <> gso_index_contains thm
R43484:43501 compcert.backend.Stackingproof <> gso_index_contains thm
R43564:43578 compcert.backend.Stackingproof <> size_type_chunk thm
R43564:43578 compcert.backend.Stackingproof <> size_type_chunk thm
R43587:43619 compcert.backend.Stackingproof <> offset_of_index_disj_stack_data_2 thm
R43587:43619 compcert.backend.Stackingproof <> offset_of_index_disj_stack_data_2 thm
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R43958:43973 compcert.backend.Stackingproof PRESERVATION.FRAME_PROPERTIES.SAVE_CALLEE_SAVE <> sec
prf 43984:44002 <> LTL_undef_regs_same
R44060:44062 Coq.Init.Logic <> :type_scope:x_'='_x not
R44034:44047 compcert.backend.LTL <> undef_regs def
R44056:44056 compcert.backend.Locations <> R constr
R44058:44058 compcert.backend.Stackingproof <> r var
R44052:44053 compcert.backend.Stackingproof <> ls var
R44049:44050 compcert.backend.Stackingproof <> rl var
R44063:44068 compcert.common.Values <> Vundef constr
R44023:44024 Coq.Lists.List <> In def
R44028:44029 compcert.backend.Stackingproof <> rl var
R44026:44026 compcert.backend.Stackingproof <> r var
R44134:44143 compcert.backend.Locations Locmap set def
R44156:44161 compcert.backend.Locations Loc eq thm
R44170:44170 compcert.backend.Locations <> R constr
R44164:44164 compcert.backend.Locations <> R constr
R44156:44161 compcert.backend.Locations Loc eq thm
R44170:44170 compcert.backend.Locations <> R constr
R44164:44164 compcert.backend.Locations <> R constr
R44196:44207 compcert.backend.Locations Loc diff_dec def
R44216:44216 compcert.backend.Locations <> R constr
R44210:44210 compcert.backend.Locations <> R constr
R44196:44207 compcert.backend.Locations Loc diff_dec def
R44216:44216 compcert.backend.Locations <> R constr
R44210:44210 compcert.backend.Locations <> R constr
R0:-1 compcert.backend.Stackingproof <> y var
prf 44279:44299 <> LTL_undef_regs_others
R44358:44360 Coq.Init.Logic <> :type_scope:x_'='_x not
R44332:44345 compcert.backend.LTL <> undef_regs def
R44354:44354 compcert.backend.Locations <> R constr
R44356:44356 compcert.backend.Stackingproof <> r var
R44350:44351 compcert.backend.Stackingproof <> ls var
R44347:44348 compcert.backend.Stackingproof <> rl var
R44361:44362 compcert.backend.Stackingproof <> ls var
R44365:44365 compcert.backend.Locations <> R constr
R44367:44367 compcert.backend.Stackingproof <> r var
R44320:44320 Coq.Init.Logic <> :type_scope:'~'_x not
R44321:44322 Coq.Lists.List <> In def
R44326:44327 compcert.backend.Stackingproof <> rl var
R44324:44324 compcert.backend.Stackingproof <> r var
R44425:44434 compcert.backend.Locations Locmap gso thm
R44425:44434 compcert.backend.Locations Locmap gso thm
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
prf 44490:44508 <> LTL_undef_regs_slot
R44571:44573 Coq.Init.Logic <> :type_scope:x_'='_x not
R44537:44550 compcert.backend.LTL <> undef_regs def
R44559:44559 compcert.backend.Locations <> S constr
R44568:44569 compcert.backend.Stackingproof <> ty var
R44564:44566 compcert.backend.Stackingproof <> ofs var
R44561:44562 compcert.backend.Stackingproof <> sl var
R44555:44556 compcert.backend.Stackingproof <> ls var
R44552:44553 compcert.backend.Stackingproof <> rl var
R44574:44575 compcert.backend.Stackingproof <> ls var
R44578:44578 compcert.backend.Locations <> S constr
R44587:44588 compcert.backend.Stackingproof <> ty var
R44583:44585 compcert.backend.Stackingproof <> ofs var
R44580:44581 compcert.backend.Stackingproof <> sl var
R44646:44655 compcert.backend.Locations Locmap gso thm
R44646:44655 compcert.backend.Locations Locmap gso thm
prf 44694:44717 <> save_callee_save_correct
R44764:44777 compcert.backend.LTL <> undef_regs def
R44807:44809 compcert.backend.Stackingproof <> ls0 var
R44779:44805 compcert.ia32.Machregs <> destroyed_at_function_entry def
R44925:44931 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44935:44936 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44937:44943 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44946:44951 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R45084:45089 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44952:44955 compcert.common.Smallstep <> star ind
R45044:45048 compcert.backend.Mach <> State constr
R45081:45082 compcert.backend.Stackingproof <> m' var
R45077:45079 compcert.backend.Stackingproof <> rs' var
R45075:45075 compcert.backend.Stackingproof <> k var
R45057:45060 compcert.common.Values <> Vptr constr
R45065:45072 compcert.lib.Integers Int zero def
R45062:45063 compcert.backend.Stackingproof <> sp var
R45053:45054 compcert.backend.Stackingproof <> fb var
R45050:45051 compcert.backend.Stackingproof <> cs var
R45040:45041 compcert.common.Events <> E0 def
R44975:44979 compcert.backend.Mach <> State constr
R45033:45033 compcert.backend.Stackingproof <> m var
R45030:45031 compcert.backend.Stackingproof <> rs var
R45007:45022 compcert.backend.Stacking <> save_callee_save def
R45027:45027 compcert.backend.Stackingproof <> k var
R45024:45025 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R44988:44991 compcert.common.Values <> Vptr constr
R44996:45003 compcert.lib.Integers Int zero def
R44993:44994 compcert.backend.Stackingproof <> sp var
R44984:44985 compcert.backend.Stackingproof <> fb var
R44981:44982 compcert.backend.Stackingproof <> cs var
R44962:44964 compcert.backend.Stackingproof <> PRESERVATION.tge var
R44957:44960 compcert.backend.Stackingproof <> PRESERVATION.step var
R45090:45090 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45277:45283 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45199:45216 compcert.backend.Stackingproof <> index_contains_inj def
R45268:45269 compcert.backend.Stackingproof <> ls var
R45272:45272 compcert.backend.Locations <> R constr
R45274:45274 compcert.backend.Stackingproof <> r var
R45227:45238 compcert.backend.Stacking <> FI_saved_int constr
R45241:45261 compcert.ia32.Conventions1 <> index_int_callee_save def
R45263:45263 compcert.backend.Stackingproof <> r var
R45223:45224 compcert.backend.Stackingproof <> sp var
R45220:45221 compcert.backend.Stackingproof <> m' var
R45218:45218 compcert.backend.Stackingproof <> j var
R45160:45162 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R45137:45157 compcert.ia32.Conventions1 <> index_int_callee_save def
R45159:45159 compcert.backend.Stackingproof <> r var
R45166:45186 compcert.backend.Bounds <> bound_int_callee_save proj
R45163:45163 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R45108:45109 Coq.Lists.List <> In def
R45113:45132 compcert.ia32.Conventions1 <> int_callee_save_regs def
R45111:45111 compcert.backend.Stackingproof <> r var
R45284:45284 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45481:45487 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45399:45416 compcert.backend.Stackingproof <> index_contains_inj def
R45472:45473 compcert.backend.Stackingproof <> ls var
R45476:45476 compcert.backend.Locations <> R constr
R45478:45478 compcert.backend.Stackingproof <> r var
R45427:45440 compcert.backend.Stacking <> FI_saved_float constr
R45443:45465 compcert.ia32.Conventions1 <> index_float_callee_save def
R45467:45467 compcert.backend.Stackingproof <> r var
R45423:45424 compcert.backend.Stackingproof <> sp var
R45420:45421 compcert.backend.Stackingproof <> m' var
R45418:45418 compcert.backend.Stackingproof <> j var
R45358:45360 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R45333:45355 compcert.ia32.Conventions1 <> index_float_callee_save def
R45357:45357 compcert.backend.Stackingproof <> r var
R45364:45386 compcert.backend.Bounds <> bound_float_callee_save proj
R45361:45361 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R45302:45303 Coq.Lists.List <> In def
R45307:45328 compcert.ia32.Conventions1 <> float_callee_save_regs def
R45305:45305 compcert.backend.Stackingproof <> r var
R45488:45488 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45691:45697 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45665:45678 compcert.backend.Stackingproof <> index_contains ind
R45690:45690 compcert.backend.Stackingproof <> v var
R45686:45688 compcert.backend.Stackingproof <> idx var
R45683:45684 compcert.backend.Stackingproof <> sp var
R45680:45681 compcert.backend.Stackingproof <> m' var
R45629:45642 compcert.backend.Stackingproof <> index_contains ind
R45653:45653 compcert.backend.Stackingproof <> v var
R45649:45651 compcert.backend.Stackingproof <> idx var
R45646:45647 compcert.backend.Stackingproof <> sp var
R45644:45644 compcert.backend.Stackingproof <> m var
R45542:45544 compcert.backend.Stackingproof <> idx var
R45551:45562 compcert.backend.Stacking <> FI_saved_int constr
R45569:45573 Coq.Init.Logic <> False ind
R45577:45590 compcert.backend.Stacking <> FI_saved_float constr
R45597:45601 Coq.Init.Logic <> False ind
R45610:45613 Coq.Init.Logic <> True ind
R45510:45520 compcert.backend.Stackingproof <> index_valid def
R45522:45524 compcert.backend.Stackingproof <> idx var
R45721:45726 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45698:45712 compcert.backend.Stackingproof <> stores_in_frame ind
R45719:45720 compcert.backend.Stackingproof <> m' var
R45717:45717 compcert.backend.Stackingproof <> m var
R45714:45715 compcert.backend.Stackingproof <> sp var
R45752:45757 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45727:45745 compcert.backend.Stackingproof <> frame_perm_freeable def
R45750:45751 compcert.backend.Stackingproof <> sp var
R45747:45748 compcert.backend.Stackingproof <> m' var
R45758:45767 compcert.backend.Stackingproof <> agree_regs def
R45774:45776 compcert.backend.Stackingproof <> rs' var
R45771:45772 compcert.backend.Stackingproof <> ls var
R45769:45769 compcert.backend.Stackingproof <> j var
R44895:44913 compcert.backend.Stackingproof <> frame_perm_freeable def
R44917:44918 compcert.backend.Stackingproof <> sp var
R44915:44915 compcert.backend.Stackingproof <> m var
R44851:44862 compcert.common.Values Val has_type def
R44876:44884 compcert.ia32.Machregs <> mreg_type def
R44886:44886 compcert.backend.Stackingproof <> r var
R44865:44866 compcert.backend.Stackingproof <> ls var
R44869:44869 compcert.backend.Locations <> R constr
R44871:44871 compcert.backend.Stackingproof <> r var
R44816:44825 compcert.backend.Stackingproof <> agree_regs def
R44832:44833 compcert.backend.Stackingproof <> rs var
R44829:44830 compcert.backend.Stackingproof <> ls var
R44827:44827 compcert.backend.Stackingproof <> j var
R45869:45871 Coq.Init.Logic <> :type_scope:x_'='_x not
R45865:45865 compcert.backend.Locations <> R constr
R45867:45867 compcert.backend.Stackingproof <> r var
R45872:45877 compcert.common.Values <> Vundef constr
R45826:45827 Coq.Lists.List <> In def
R45832:45852 compcert.ia32.Machregs <> destroyed_by_setstack def
R45854:45855 compcert.backend.Stackingproof <> ty var
R45829:45829 compcert.backend.Stackingproof <> r var
R45869:45871 Coq.Init.Logic <> :type_scope:x_'='_x not
R45865:45865 compcert.backend.Locations <> R constr
R45867:45867 compcert.backend.Stackingproof <> r var
R45872:45877 compcert.common.Values <> Vundef constr
R45826:45827 Coq.Lists.List <> In def
R45832:45852 compcert.ia32.Machregs <> destroyed_by_setstack def
R45854:45855 compcert.backend.Stackingproof <> ty var
R45829:45829 compcert.backend.Stackingproof <> r var
R45910:45928 compcert.backend.Stackingproof <> LTL_undef_regs_same thm
R45910:45928 compcert.backend.Stackingproof <> LTL_undef_regs_same thm
R45938:45973 compcert.backend.Stackingproof <> destroyed_by_setstack_function_entry thm
R45938:45973 compcert.backend.Stackingproof <> destroyed_by_setstack_function_entry thm
R45994:46022 compcert.backend.Stackingproof <> save_callee_save_regs_correct thm
R46153:46172 compcert.ia32.Conventions1 <> int_callee_save_regs def
R46122:46127 compcert.common.AST <> Tany32 constr
R46109:46120 compcert.backend.Stacking <> FI_saved_int constr
R46074:46094 compcert.ia32.Conventions1 <> index_int_callee_save def
R46038:46059 compcert.ia32.Stacklayout <> fe_num_int_callee_save proj
R45994:46022 compcert.backend.Stackingproof <> save_callee_save_regs_correct thm
R46153:46172 compcert.ia32.Conventions1 <> int_callee_save_regs def
R46122:46127 compcert.common.AST <> Tany32 constr
R46109:46120 compcert.backend.Stacking <> FI_saved_int constr
R46074:46094 compcert.ia32.Conventions1 <> index_int_callee_save def
R46038:46059 compcert.ia32.Stacklayout <> fe_num_int_callee_save proj
R46195:46219 compcert.ia32.Conventions1 <> index_int_callee_save_inj thm
R46195:46219 compcert.ia32.Conventions1 <> index_int_callee_save_inj thm
R46259:46264 Coq.ZArith.Zorder <> Zge_le syndef
R46259:46264 Coq.ZArith.Zorder <> Zge_le syndef
R46273:46297 compcert.ia32.Conventions1 <> index_int_callee_save_pos thm
R46273:46297 compcert.ia32.Conventions1 <> index_int_callee_save_pos thm
R46413:46432 compcert.ia32.Conventions1 <> int_callee_save_type thm
R46413:46432 compcert.ia32.Conventions1 <> int_callee_save_type thm
R46466:46474 Coq.Lists.List <> incl_refl thm
R46466:46474 Coq.Lists.List <> incl_refl thm
R46486:46508 compcert.ia32.Conventions1 <> int_callee_save_norepet thm
R46486:46508 compcert.ia32.Conventions1 <> int_callee_save_norepet thm
R46583:46611 compcert.backend.Stackingproof <> save_callee_save_regs_correct thm
R46748:46769 compcert.ia32.Conventions1 <> float_callee_save_regs def
R46717:46722 compcert.common.AST <> Tany64 constr
R46702:46715 compcert.backend.Stacking <> FI_saved_float constr
R46665:46687 compcert.ia32.Conventions1 <> index_float_callee_save def
R46627:46650 compcert.ia32.Stacklayout <> fe_num_float_callee_save proj
R46583:46611 compcert.backend.Stackingproof <> save_callee_save_regs_correct thm
R46748:46769 compcert.ia32.Conventions1 <> float_callee_save_regs def
R46717:46722 compcert.common.AST <> Tany64 constr
R46702:46715 compcert.backend.Stacking <> FI_saved_float constr
R46665:46687 compcert.ia32.Conventions1 <> index_float_callee_save def
R46627:46650 compcert.ia32.Stacklayout <> fe_num_float_callee_save proj
R46792:46818 compcert.ia32.Conventions1 <> index_float_callee_save_inj thm
R46792:46818 compcert.ia32.Conventions1 <> index_float_callee_save_inj thm
R46858:46863 Coq.ZArith.Zorder <> Zge_le syndef
R46858:46863 Coq.ZArith.Zorder <> Zge_le syndef
R46872:46898 compcert.ia32.Conventions1 <> index_float_callee_save_pos thm
R46872:46898 compcert.ia32.Conventions1 <> index_float_callee_save_pos thm
R47021:47042 compcert.ia32.Conventions1 <> float_callee_save_type thm
R47021:47042 compcert.ia32.Conventions1 <> float_callee_save_type thm
R47077:47085 Coq.Lists.List <> incl_refl thm
R47077:47085 Coq.Lists.List <> incl_refl thm
R47097:47121 compcert.ia32.Conventions1 <> float_callee_save_norepet thm
R47097:47121 compcert.ia32.Conventions1 <> float_callee_save_norepet thm
R47232:47247 compcert.backend.Stacking <> save_callee_save def
R47250:47269 compcert.backend.Stacking <> save_callee_save_int def
R47272:47293 compcert.backend.Stacking <> save_callee_save_float def
R47305:47314 compcert.common.Smallstep <> star_trans thm
R47305:47314 compcert.common.Smallstep <> star_trans thm
R47419:47439 compcert.backend.Stackingproof <> index_saved_int_valid thm
R47419:47439 compcert.backend.Stackingproof <> index_saved_int_valid thm
R47687:47707 compcert.backend.Stackingproof <> stores_in_frame_trans thm
R47687:47707 compcert.backend.Stackingproof <> stores_in_frame_trans thm
prf 47793:47814 <> stores_in_frame_inject
R48073:48082 compcert.common.Memory Mem inject def
R48088:48089 compcert.backend.Stackingproof <> m2 var
R48086:48086 compcert.backend.Stackingproof <> m var
R48084:48084 compcert.backend.Stackingproof <> j var
R48052:48061 compcert.common.Memory Mem inject def
R48067:48068 compcert.backend.Stackingproof <> m1 var
R48065:48065 compcert.backend.Stackingproof <> m var
R48063:48063 compcert.backend.Stackingproof <> j var
R48023:48037 compcert.backend.Stackingproof <> stores_in_frame ind
R48046:48047 compcert.backend.Stackingproof <> m2 var
R48043:48044 compcert.backend.Stackingproof <> m1 var
R48039:48041 compcert.backend.Stackingproof <> sp' var
R47969:47972 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R47976:47978 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R47973:47975 compcert.backend.Stackingproof <> ofs var
R47973:47975 compcert.backend.Stackingproof <> ofs var
R47982:48000 compcert.backend.Linear <> fn_stacksize proj
R47979:47979 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R47943:47950 compcert.common.Memory Mem perm def
R47963:47963 compcert.backend.Stackingproof <> p var
R47961:47961 compcert.backend.Stackingproof <> k var
R47957:47959 compcert.backend.Stackingproof <> ofs var
R47954:47955 compcert.backend.Stackingproof <> sp var
R47952:47952 compcert.backend.Stackingproof <> m var
R47889:47892 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47884:47886 Coq.Init.Logic <> :type_scope:x_'='_x not
R47883:47883 compcert.backend.Stackingproof <> b var
R47887:47888 compcert.backend.Stackingproof <> sp var
R47898:47900 Coq.Init.Logic <> :type_scope:x_'='_x not
R47893:47897 compcert.backend.Stackingproof <> delta var
R47905:47917 compcert.ia32.Stacklayout <> fe_stack_data proj
R47901:47902 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R47860:47862 Coq.Init.Logic <> :type_scope:x_'='_x not
R47857:47857 compcert.backend.Stackingproof <> j var
R47859:47859 compcert.backend.Stackingproof <> b var
R47863:47866 Coq.Init.Datatypes <> Some constr
R47867:47867 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47871:47872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47878:47878 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47868:47870 compcert.backend.Stackingproof <> sp' var
R47873:47877 compcert.backend.Stackingproof <> delta var
R48174:48197 compcert.common.Memory Mem store_outside_inject thm
R48174:48197 compcert.common.Memory Mem store_outside_inject thm
prf 48297:48317 <> stores_in_frame_valid
R48390:48404 compcert.common.Memory Mem valid_block def
R48409:48409 compcert.backend.Stackingproof <> b var
R48406:48407 compcert.backend.Stackingproof <> m' var
R48367:48381 compcert.common.Memory Mem valid_block def
R48385:48385 compcert.backend.Stackingproof <> b var
R48383:48383 compcert.backend.Stackingproof <> m var
R48340:48354 compcert.backend.Stackingproof <> stores_in_frame ind
R48361:48362 compcert.backend.Stackingproof <> m' var
R48359:48359 compcert.backend.Stackingproof <> m var
R48356:48357 compcert.backend.Stackingproof <> sp var
prf 48501:48520 <> stores_in_frame_perm
R48602:48609 compcert.common.Memory Mem perm def
R48622:48622 compcert.backend.Stackingproof <> p var
R48620:48620 compcert.backend.Stackingproof <> k var
R48616:48618 compcert.backend.Stackingproof <> ofs var
R48614:48614 compcert.backend.Stackingproof <> b var
R48611:48612 compcert.backend.Stackingproof <> m' var
R48578:48585 compcert.common.Memory Mem perm def
R48597:48597 compcert.backend.Stackingproof <> p var
R48595:48595 compcert.backend.Stackingproof <> k var
R48591:48593 compcert.backend.Stackingproof <> ofs var
R48589:48589 compcert.backend.Stackingproof <> b var
R48587:48587 compcert.backend.Stackingproof <> m var
R48551:48565 compcert.backend.Stackingproof <> stores_in_frame ind
R48572:48573 compcert.backend.Stackingproof <> m' var
R48570:48570 compcert.backend.Stackingproof <> m var
R48567:48568 compcert.backend.Stackingproof <> sp var
prf 48714:48737 <> stores_in_frame_contents
R48845:48847 Coq.Init.Logic <> :type_scope:x_'='_x not
R48822:48829 compcert.common.Memory Mem load def
R48842:48844 compcert.backend.Stackingproof <> ofs var
R48840:48840 compcert.backend.Stackingproof <> b var
R48837:48838 compcert.backend.Stackingproof <> m' var
R48831:48835 compcert.backend.Stackingproof <> chunk var
R48848:48855 compcert.common.Memory Mem load def
R48867:48869 compcert.backend.Stackingproof <> ofs var
R48865:48865 compcert.backend.Stackingproof <> b var
R48863:48863 compcert.backend.Stackingproof <> m var
R48857:48861 compcert.backend.Stackingproof <> chunk var
R48792:48806 compcert.backend.Stackingproof <> stores_in_frame ind
R48813:48814 compcert.backend.Stackingproof <> m' var
R48811:48811 compcert.backend.Stackingproof <> m var
R48808:48809 compcert.backend.Stackingproof <> sp var
R48765:48767 compcert.lib.Coqlib <> Plt def
R48771:48772 compcert.backend.Stackingproof <> sp var
R48769:48769 compcert.backend.Stackingproof <> b var
R48937:48956 compcert.common.Memory Mem load_store_other thm
R48937:48956 compcert.common.Memory Mem load_store_other thm
R48980:48985 compcert.lib.Coqlib <> Plt_ne thm
R48980:48985 compcert.lib.Coqlib <> Plt_ne thm
prf 49006:49020 <> undef_regs_type
R49072:49083 compcert.common.Values Val has_type def
R49110:49111 compcert.backend.Stackingproof <> ty var
R49086:49099 compcert.backend.LTL <> undef_regs def
R49107:49107 compcert.backend.Stackingproof <> l var
R49104:49105 compcert.backend.Stackingproof <> ls var
R49101:49102 compcert.backend.Stackingproof <> rl var
R49046:49057 compcert.common.Values Val has_type def
R49066:49067 compcert.backend.Stackingproof <> ty var
R49060:49061 compcert.backend.Stackingproof <> ls var
R49063:49063 compcert.backend.Stackingproof <> l var
R49169:49178 compcert.backend.Locations Locmap set def
R49191:49196 compcert.backend.Locations Loc eq thm
R49199:49199 compcert.backend.Locations <> R constr
R49191:49196 compcert.backend.Locations Loc eq thm
R49199:49199 compcert.backend.Locations <> R constr
R49232:49243 compcert.backend.Locations Loc diff_dec def
R49246:49246 compcert.backend.Locations <> R constr
R49232:49243 compcert.backend.Locations Loc diff_dec def
R49246:49246 compcert.backend.Locations <> R constr
prf 49532:49556 <> function_prologue_correct
R49991:49997 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50000:50001 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50002:50008 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50012:50013 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50014:50020 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50024:50025 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50026:50032 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50036:50037 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50038:50044 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50048:50049 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50050:50056 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50060:50061 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50062:50068 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50072:50078 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50125:50130 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50112:50114 Coq.Init.Logic <> :type_scope:x_'='_x not
R50079:50087 compcert.common.Memory Mem alloc def
R50099:50110 compcert.backend.Mach <> fn_stacksize proj
R50095:50096 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.tf var
R50089:50091 compcert.backend.Stackingproof <> m1' var
R50115:50115 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50119:50120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50124:50124 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50116:50118 compcert.backend.Stackingproof <> m2' var
R50121:50123 compcert.backend.Stackingproof <> sp' var
R50206:50211 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50195:50197 Coq.Init.Logic <> :type_scope:x_'='_x not
R50131:50141 compcert.backend.Mach <> store_stack def
R50189:50194 compcert.backend.Stackingproof <> parent var
R50176:50186 compcert.backend.Mach <> fn_link_ofs proj
R50172:50173 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.tf var
R50167:50170 compcert.common.AST <> Tint constr
R50148:50151 compcert.common.Values <> Vptr constr
R50157:50164 compcert.lib.Integers Int zero def
R50153:50155 compcert.backend.Stackingproof <> sp' var
R50143:50145 compcert.backend.Stackingproof <> m2' var
R50198:50201 Coq.Init.Datatypes <> Some constr
R50203:50205 compcert.backend.Stackingproof <> m3' var
R50286:50291 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50275:50277 Coq.Init.Logic <> :type_scope:x_'='_x not
R50212:50222 compcert.backend.Mach <> store_stack def
R50273:50274 compcert.backend.Stackingproof <> ra var
R50257:50270 compcert.backend.Mach <> fn_retaddr_ofs proj
R50253:50254 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.tf var
R50248:50251 compcert.common.AST <> Tint constr
R50229:50232 compcert.common.Values <> Vptr constr
R50238:50245 compcert.lib.Integers Int zero def
R50234:50236 compcert.backend.Stackingproof <> sp' var
R50224:50226 compcert.backend.Stackingproof <> m3' var
R50278:50281 Coq.Init.Datatypes <> Some constr
R50283:50285 compcert.backend.Stackingproof <> m4' var
R50434:50439 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50292:50295 compcert.common.Smallstep <> star ind
R50392:50396 compcert.backend.Mach <> State constr
R50430:50432 compcert.backend.Stackingproof <> m5' var
R50426:50428 compcert.backend.Stackingproof <> rs' var
R50424:50424 compcert.backend.Stackingproof <> k var
R50405:50408 compcert.common.Values <> Vptr constr
R50414:50421 compcert.lib.Integers Int zero def
R50410:50412 compcert.backend.Stackingproof <> sp' var
R50401:50402 compcert.backend.Stackingproof <> fb var
R50398:50399 compcert.backend.Stackingproof <> cs var
R50388:50389 compcert.common.Events <> E0 def
R50317:50321 compcert.backend.Mach <> State constr
R50377:50379 compcert.backend.Stackingproof <> m4' var
R50373:50375 compcert.backend.Stackingproof <> rs1 var
R50350:50365 compcert.backend.Stacking <> save_callee_save def
R50370:50370 compcert.backend.Stackingproof <> k var
R50367:50368 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R50330:50333 compcert.common.Values <> Vptr constr
R50339:50346 compcert.lib.Integers Int zero def
R50335:50337 compcert.backend.Stackingproof <> sp' var
R50326:50327 compcert.backend.Stackingproof <> fb var
R50323:50324 compcert.backend.Stackingproof <> cs var
R50302:50304 compcert.backend.Stackingproof <> PRESERVATION.tge var
R50297:50300 compcert.backend.Stackingproof <> PRESERVATION.step var
R50461:50466 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50440:50449 compcert.backend.Stackingproof <> agree_regs def
R50458:50460 compcert.backend.Stackingproof <> rs' var
R50454:50456 compcert.backend.Stackingproof <> ls1 var
R50451:50452 compcert.backend.Stackingproof <> j' var
R50513:50518 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50467:50477 compcert.backend.Stackingproof <> agree_frame rec
R50511:50512 compcert.backend.Stackingproof <> ra var
R50504:50509 compcert.backend.Stackingproof <> parent var
R50500:50502 compcert.backend.Stackingproof <> sp' var
R50496:50498 compcert.backend.Stackingproof <> m5' var
R50493:50494 compcert.backend.Stackingproof <> sp var
R50490:50491 compcert.backend.Stackingproof <> m2 var
R50486:50488 compcert.backend.Stackingproof <> ls0 var
R50482:50484 compcert.backend.Stackingproof <> ls1 var
R50479:50480 compcert.backend.Stackingproof <> j' var
R50535:50540 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50519:50529 compcert.common.Values <> inject_incr def
R50533:50534 compcert.backend.Stackingproof <> j' var
R50531:50531 compcert.backend.Stackingproof <> j var
R50569:50574 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50541:50556 compcert.common.Events <> inject_separated def
R50566:50568 compcert.backend.Stackingproof <> m1' var
R50563:50564 compcert.backend.Stackingproof <> m1 var
R50560:50561 compcert.backend.Stackingproof <> j' var
R50558:50558 compcert.backend.Stackingproof <> j var
R50595:50600 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50575:50584 compcert.common.Memory Mem inject def
R50592:50594 compcert.backend.Stackingproof <> m5' var
R50589:50590 compcert.backend.Stackingproof <> m2 var
R50586:50587 compcert.backend.Stackingproof <> j' var
R50601:50615 compcert.backend.Stackingproof <> stores_in_frame ind
R50625:50627 compcert.backend.Stackingproof <> m5' var
R50621:50623 compcert.backend.Stackingproof <> m2' var
R50617:50619 compcert.backend.Stackingproof <> sp' var
R49965:49976 compcert.common.Values Val has_type def
R49981:49984 compcert.common.AST <> Tint constr
R49978:49979 compcert.backend.Stackingproof <> ra var
R49937:49948 compcert.common.Values Val has_type def
R49957:49960 compcert.common.AST <> Tint constr
R49950:49955 compcert.backend.Stackingproof <> parent var
R49920:49922 Coq.Init.Logic <> :type_scope:x_'='_x not
R49882:49890 compcert.common.Memory Mem alloc def
R49900:49918 compcert.backend.Linear <> fn_stacksize proj
R49897:49897 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R49892:49893 compcert.backend.Stackingproof <> m1 var
R49923:49923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49926:49927 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49930:49930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R49924:49925 compcert.backend.Stackingproof <> m2 var
R49928:49929 compcert.backend.Stackingproof <> sp var
R49857:49866 compcert.common.Memory Mem inject def
R49873:49875 compcert.backend.Stackingproof <> m1' var
R49870:49871 compcert.backend.Stackingproof <> m1 var
R49868:49868 compcert.backend.Stackingproof <> j var
R49807:49809 Coq.Init.Logic <> :type_scope:x_'='_x not
R49804:49806 compcert.backend.Stackingproof <> rs1 var
R49810:49819 compcert.backend.Mach <> undef_regs def
R49849:49850 compcert.backend.Stackingproof <> rs var
R49821:49847 compcert.ia32.Machregs <> destroyed_at_function_entry def
R49734:49736 Coq.Init.Logic <> :type_scope:x_'='_x not
R49731:49733 compcert.backend.Stackingproof <> ls1 var
R49737:49750 compcert.backend.LTL <> undef_regs def
R49781:49793 compcert.backend.LTL <> call_regs def
R49795:49796 compcert.backend.Stackingproof <> ls var
R49752:49778 compcert.ia32.Machregs <> destroyed_at_function_entry def
R49687:49698 compcert.common.Values Val has_type def
R49712:49720 compcert.ia32.Machregs <> mreg_type def
R49722:49722 compcert.backend.Stackingproof <> r var
R49701:49702 compcert.backend.Stackingproof <> ls var
R49705:49705 compcert.backend.Locations <> R constr
R49707:49707 compcert.backend.Stackingproof <> r var
R49646:49662 compcert.backend.Stackingproof <> agree_callee_save def
R49667:49669 compcert.backend.Stackingproof <> ls0 var
R49664:49665 compcert.backend.Stackingproof <> ls var
R49622:49631 compcert.backend.Stackingproof <> agree_regs def
R49638:49639 compcert.backend.Stackingproof <> rs var
R49635:49636 compcert.backend.Stackingproof <> ls var
R49633:49633 compcert.backend.Stackingproof <> j var
R50722:50743 compcert.backend.Stackingproof <> unfold_transf_function thm
R50722:50743 compcert.backend.Stackingproof <> unfold_transf_function thm
R50755:50766 compcert.backend.Mach <> fn_stacksize proj
R50769:50779 compcert.backend.Mach <> fn_link_ofs proj
R50782:50795 compcert.backend.Mach <> fn_retaddr_ofs proj
R50832:50840 compcert.common.Memory Mem alloc def
R50849:50855 compcert.ia32.Stacklayout <> fe_size proj
R50857:50858 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R50832:50840 compcert.common.Memory Mem alloc def
R50849:50855 compcert.ia32.Stacklayout <> fe_size proj
R50857:50858 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R50896:50923 compcert.common.Memory Mem alloc_left_mapped_inject thm
R50937:50958 compcert.common.Memory Mem alloc_right_inject thm
R50937:50958 compcert.common.Memory Mem alloc_right_inject thm
R51045:51057 compcert.ia32.Stacklayout <> fe_stack_data proj
R51059:51060 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R51079:51101 compcert.backend.Stackingproof <> stack_data_offset_valid thm
R51104:51123 compcert.backend.Bounds <> bound_stack_data_pos proj
R51125:51125 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R51128:51143 compcert.backend.Stackingproof <> size_no_overflow thm
R51079:51101 compcert.backend.Stackingproof <> stack_data_offset_valid thm
R51104:51123 compcert.backend.Bounds <> bound_stack_data_pos proj
R51125:51125 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R51128:51143 compcert.backend.Stackingproof <> size_no_overflow thm
R51185:51202 compcert.common.Memory Mem perm_alloc_inv thm
R51235:51245 compcert.lib.Coqlib <> dec_eq_true thm
R51235:51245 compcert.lib.Coqlib <> dec_eq_true thm
R51264:51279 compcert.backend.Stackingproof <> size_no_overflow thm
R51264:51279 compcert.backend.Stackingproof <> size_no_overflow thm
R51330:51337 compcert.common.Memtype <> Freeable constr
R51308:51323 compcert.common.Memory Mem perm_implies thm
R51330:51337 compcert.common.Memtype <> Freeable constr
R51308:51323 compcert.common.Memory Mem perm_implies thm
R51367:51382 compcert.common.Memory Mem perm_alloc_2 thm
R51367:51382 compcert.common.Memory Mem perm_alloc_2 thm
R51407:51429 compcert.backend.Stackingproof <> stack_data_offset_valid thm
R51431:51456 compcert.backend.Stackingproof <> bound_stack_data_stacksize thm
R51407:51429 compcert.backend.Stackingproof <> stack_data_offset_valid thm
R51431:51456 compcert.backend.Stackingproof <> bound_stack_data_stacksize thm
R51489:51502 compcert.lib.Coqlib <> Zdivides_trans thm
R51489:51502 compcert.lib.Coqlib <> Zdivides_trans thm
R51569:51589 compcert.backend.Stackingproof <> fe_stack_data_aligned thm
R51569:51589 compcert.backend.Stackingproof <> fe_stack_data_aligned thm
R51618:51632 compcert.common.Memory Mem valid_block def
R51618:51632 compcert.common.Memory Mem valid_block def
R51651:51674 compcert.common.Memory Mem valid_block_inject_2 thm
R51651:51674 compcert.common.Memory Mem valid_block_inject_2 thm
R51698:51698 Coq.Init.Logic <> :type_scope:'~'_x not
R51699:51713 compcert.common.Memory Mem valid_block def
R51698:51698 Coq.Init.Logic <> :type_scope:'~'_x not
R51699:51713 compcert.common.Memory Mem valid_block def
R51821:51839 compcert.backend.Stackingproof <> frame_perm_freeable def
R51821:51839 compcert.backend.Stackingproof <> frame_perm_freeable def
R51875:51890 compcert.common.Memory Mem perm_alloc_2 thm
R51875:51890 compcert.common.Memory Mem perm_alloc_2 thm
R51935:51954 compcert.backend.Stackingproof <> store_index_succeeds thm
R51964:51970 compcert.backend.Stacking <> FI_link constr
R51935:51954 compcert.backend.Stackingproof <> store_index_succeeds thm
R51964:51970 compcert.backend.Stacking <> FI_link constr
R52058:52077 compcert.backend.Stackingproof <> store_index_succeeds thm
R52087:52096 compcert.backend.Stacking <> FI_retaddr constr
R52058:52077 compcert.backend.Stackingproof <> store_index_succeeds thm
R52087:52096 compcert.backend.Stacking <> FI_retaddr constr
R52212:52230 compcert.backend.Stackingproof <> frame_perm_freeable def
R52212:52230 compcert.backend.Stackingproof <> frame_perm_freeable def
R52286:52309 compcert.backend.Stackingproof <> save_callee_save_correct thm
R52359:52367 compcert.backend.LTL <> call_regs def
R52418:52438 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R52418:52438 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R52452:52471 compcert.backend.Stackingproof <> agree_regs_call_regs thm
R52452:52471 compcert.backend.Stackingproof <> agree_regs_call_regs thm
R52481:52502 compcert.backend.Stackingproof <> agree_regs_inject_incr thm
R52481:52502 compcert.backend.Stackingproof <> agree_regs_inject_incr thm
R52530:52544 compcert.backend.Stackingproof <> undef_regs_type thm
R52530:52544 compcert.backend.Stackingproof <> undef_regs_type thm
R52720:52734 compcert.backend.Stackingproof <> stores_in_frame ind
R52720:52734 compcert.backend.Stackingproof <> stores_in_frame ind
R52788:52802 compcert.backend.Stackingproof <> size_type_chunk thm
R52788:52802 compcert.backend.Stackingproof <> size_type_chunk thm
R52811:52843 compcert.backend.Stackingproof <> offset_of_index_disj_stack_data_2 thm
R52811:52843 compcert.backend.Stackingproof <> offset_of_index_disj_stack_data_2 thm
R52900:52914 compcert.backend.Stackingproof <> size_type_chunk thm
R52900:52914 compcert.backend.Stackingproof <> size_type_chunk thm
R52923:52955 compcert.backend.Stackingproof <> offset_of_index_disj_stack_data_2 thm
R52923:52955 compcert.backend.Stackingproof <> offset_of_index_disj_stack_data_2 thm
R53061:53064 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53056:53058 Coq.Init.Logic <> :type_scope:x_'='_x not
R53054:53055 compcert.backend.Stackingproof <> b0 var
R53070:53072 Coq.Init.Logic <> :type_scope:x_'='_x not
R53065:53069 compcert.backend.Stackingproof <> delta var
R53073:53085 compcert.ia32.Stacklayout <> fe_stack_data proj
R53087:53088 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R53031:53033 Coq.Init.Logic <> :type_scope:x_'='_x not
R53029:53030 compcert.backend.Stackingproof <> b0 var
R53034:53037 Coq.Init.Datatypes <> Some constr
R53038:53038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53042:53043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53049:53049 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53044:53048 compcert.backend.Stackingproof <> delta var
R53061:53064 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53056:53058 Coq.Init.Logic <> :type_scope:x_'='_x not
R53054:53055 compcert.backend.Stackingproof <> b0 var
R53070:53072 Coq.Init.Logic <> :type_scope:x_'='_x not
R53065:53069 compcert.backend.Stackingproof <> delta var
R53073:53085 compcert.ia32.Stacklayout <> fe_stack_data proj
R53087:53088 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R53031:53033 Coq.Init.Logic <> :type_scope:x_'='_x not
R53029:53030 compcert.backend.Stackingproof <> b0 var
R53034:53037 Coq.Init.Datatypes <> Some constr
R53038:53038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53042:53043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53049:53049 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53044:53048 compcert.backend.Stackingproof <> delta var
R53114:53121 compcert.common.Values <> eq_block def
R53114:53121 compcert.common.Values <> eq_block def
R53220:53234 compcert.common.Memory Mem valid_block def
R53220:53234 compcert.common.Memory Mem valid_block def
R53253:53276 compcert.common.Memory Mem valid_block_inject_2 thm
R53253:53276 compcert.common.Memory Mem valid_block_inject_2 thm
R53298:53298 Coq.Init.Logic <> :type_scope:'~'_x not
R53299:53313 compcert.common.Memory Mem valid_block def
R53298:53298 Coq.Init.Logic <> :type_scope:'~'_x not
R53299:53313 compcert.common.Memory Mem valid_block def
R53530:53542 compcert.backend.Stackingproof <> type_of_index def
R53544:53550 compcert.backend.Stacking <> FI_link constr
R53519:53522 compcert.common.AST <> Tint constr
R53519:53522 compcert.common.AST <> Tint constr
R53530:53542 compcert.backend.Stackingproof <> type_of_index def
R53544:53550 compcert.backend.Stacking <> FI_link constr
R53587:53601 compcert.backend.Stacking <> offset_of_index def
R53606:53612 compcert.backend.Stacking <> FI_link constr
R53603:53604 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R53565:53575 compcert.ia32.Stacklayout <> fe_ofs_link proj
R53577:53578 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R53565:53575 compcert.ia32.Stacklayout <> fe_ofs_link proj
R53577:53578 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R53587:53601 compcert.backend.Stacking <> offset_of_index def
R53606:53612 compcert.backend.Stacking <> FI_link constr
R53603:53604 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R53624:53643 compcert.backend.Stackingproof <> store_stack_succeeds thm
R53624:53643 compcert.backend.Stackingproof <> store_stack_succeeds thm
R53712:53724 compcert.backend.Stackingproof <> type_of_index def
R53726:53735 compcert.backend.Stacking <> FI_retaddr constr
R53701:53704 compcert.common.AST <> Tint constr
R53701:53704 compcert.common.AST <> Tint constr
R53712:53724 compcert.backend.Stackingproof <> type_of_index def
R53726:53735 compcert.backend.Stacking <> FI_retaddr constr
R53775:53789 compcert.backend.Stacking <> offset_of_index def
R53794:53803 compcert.backend.Stacking <> FI_retaddr constr
R53791:53792 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R53750:53763 compcert.ia32.Stacklayout <> fe_ofs_retaddr proj
R53765:53766 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R53750:53763 compcert.ia32.Stacklayout <> fe_ofs_retaddr proj
R53765:53766 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R53775:53789 compcert.backend.Stacking <> offset_of_index def
R53794:53803 compcert.backend.Stacking <> FI_retaddr constr
R53791:53792 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R53815:53834 compcert.backend.Stackingproof <> store_stack_succeeds thm
R53815:53834 compcert.backend.Stackingproof <> store_stack_succeeds thm
R54023:54023 Coq.Init.Logic <> :type_scope:'~'_x not
R54024:54025 Coq.Lists.List <> In def
R54029:54045 compcert.ia32.Conventions1 <> destroyed_at_call def
R54023:54023 Coq.Init.Logic <> :type_scope:'~'_x not
R54024:54025 Coq.Lists.List <> In def
R54029:54045 compcert.ia32.Conventions1 <> destroyed_at_call def
R54083:54111 compcert.backend.Stackingproof <> caller_save_reg_within_bounds thm
R54083:54111 compcert.backend.Stackingproof <> caller_save_reg_within_bounds thm
R54145:54165 compcert.backend.Stackingproof <> LTL_undef_regs_others thm
R54145:54165 compcert.backend.Stackingproof <> LTL_undef_regs_others thm
R54175:54183 compcert.backend.LTL <> call_regs def
R54242:54280 compcert.backend.Stackingproof <> destroyed_at_function_entry_caller_save thm
R54242:54280 compcert.backend.Stackingproof <> destroyed_at_function_entry_caller_save thm
R54331:54349 compcert.backend.Stackingproof <> LTL_undef_regs_slot thm
R54331:54349 compcert.backend.Stackingproof <> LTL_undef_regs_slot thm
R54359:54367 compcert.backend.LTL <> call_regs def
R54381:54404 compcert.backend.Stackingproof <> index_contains_inj_undef thm
R54381:54404 compcert.backend.Stackingproof <> index_contains_inj_undef thm
R54471:54489 compcert.backend.Stackingproof <> LTL_undef_regs_slot thm
R54471:54489 compcert.backend.Stackingproof <> LTL_undef_regs_slot thm
R54499:54507 compcert.backend.LTL <> call_regs def
R54521:54544 compcert.backend.Stackingproof <> index_contains_inj_undef thm
R54521:54544 compcert.backend.Stackingproof <> index_contains_inj_undef thm
R54611:54629 compcert.backend.Stackingproof <> LTL_undef_regs_slot thm
R54611:54629 compcert.backend.Stackingproof <> LTL_undef_regs_slot thm
R54639:54647 compcert.backend.LTL <> call_regs def
R54736:54753 compcert.backend.Stackingproof <> gso_index_contains thm
R54736:54753 compcert.backend.Stackingproof <> gso_index_contains thm
R54785:54802 compcert.backend.Stackingproof <> gss_index_contains thm
R54785:54802 compcert.backend.Stackingproof <> gss_index_contains thm
R54902:54919 compcert.backend.Stackingproof <> gss_index_contains thm
R54902:54919 compcert.backend.Stackingproof <> gss_index_contains thm
R54978:54978 Coq.Init.Logic <> :type_scope:'~'_x not
R54979:54980 Coq.Lists.List <> In def
R54984:55000 compcert.ia32.Conventions1 <> destroyed_at_call def
R54978:54978 Coq.Init.Logic <> :type_scope:'~'_x not
R54979:54980 Coq.Lists.List <> In def
R54984:55000 compcert.ia32.Conventions1 <> destroyed_at_call def
R55031:55059 compcert.ia32.Conventions1 <> int_callee_save_not_destroyed thm
R55031:55059 compcert.ia32.Conventions1 <> int_callee_save_not_destroyed thm
R55114:55134 compcert.backend.Stackingproof <> LTL_undef_regs_others thm
R55114:55134 compcert.backend.Stackingproof <> LTL_undef_regs_others thm
R55144:55152 compcert.backend.LTL <> call_regs def
R55212:55250 compcert.backend.Stackingproof <> destroyed_at_function_entry_caller_save thm
R55212:55250 compcert.backend.Stackingproof <> destroyed_at_function_entry_caller_save thm
R55299:55299 Coq.Init.Logic <> :type_scope:'~'_x not
R55300:55301 Coq.Lists.List <> In def
R55305:55321 compcert.ia32.Conventions1 <> destroyed_at_call def
R55299:55299 Coq.Init.Logic <> :type_scope:'~'_x not
R55300:55301 Coq.Lists.List <> In def
R55305:55321 compcert.ia32.Conventions1 <> destroyed_at_call def
R55352:55382 compcert.ia32.Conventions1 <> float_callee_save_not_destroyed thm
R55352:55382 compcert.ia32.Conventions1 <> float_callee_save_not_destroyed thm
R55437:55457 compcert.backend.Stackingproof <> LTL_undef_regs_others thm
R55437:55457 compcert.backend.Stackingproof <> LTL_undef_regs_others thm
R55467:55475 compcert.backend.LTL <> call_regs def
R55535:55573 compcert.backend.Stackingproof <> destroyed_at_function_entry_caller_save thm
R55535:55573 compcert.backend.Stackingproof <> destroyed_at_function_entry_caller_save thm
R55707:55727 compcert.backend.Stackingproof <> stores_in_frame_valid thm
R55707:55727 compcert.backend.Stackingproof <> stores_in_frame_valid thm
R55791:55808 compcert.common.Memory Mem perm_alloc_inv thm
R55840:55850 compcert.lib.Coqlib <> dec_eq_true thm
R55840:55850 compcert.lib.Coqlib <> dec_eq_true thm
R55947:55968 compcert.backend.Stackingproof <> inject_alloc_separated thm
R55947:55968 compcert.backend.Stackingproof <> inject_alloc_separated thm
R56018:56039 compcert.backend.Stackingproof <> stores_in_frame_inject thm
R56018:56039 compcert.backend.Stackingproof <> stores_in_frame_inject thm
R56067:56084 compcert.common.Memory Mem perm_alloc_inv thm
R56116:56126 compcert.lib.Coqlib <> dec_eq_true thm
R56116:56126 compcert.lib.Coqlib <> dec_eq_true thm
sec 56411:56429 PRESERVATION.FRAME_PROPERTIES RESTORE_CALLEE_SAVE
var 56442:56446 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE bound
R56462:56462 Coq.Numbers.BinNums <> Z ind
R56449:56457 compcert.ia32.Stacklayout <> frame_env rec
var 56474:56479 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE number
R56490:56490 Coq.Numbers.BinNums <> Z ind
R56482:56485 compcert.ia32.Machregs <> mreg ind
var 56502:56508 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE mkindex
R56516:56526 compcert.backend.Stacking <> frame_index ind
R56511:56511 Coq.Numbers.BinNums <> Z ind
var 56538:56539 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE ty
R56542:56544 compcert.common.AST <> typ ind
var 56556:56561 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE csregs
R56564:56567 Coq.Init.Datatypes <> list ind
R56569:56572 compcert.ia32.Machregs <> mreg ind
var 56584:56584 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE j
R56587:56592 compcert.common.Values <> meminj def
var 56604:56605 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE cs
R56608:56611 Coq.Init.Datatypes <> list ind
R56613:56622 compcert.backend.Mach <> stackframe ind
var 56634:56635 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE fb
R56638:56642 compcert.common.Values <> block def
var 56654:56655 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE sp
R56658:56662 compcert.common.Values <> block def
var 56674:56676 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE ls0
R56679:56684 compcert.backend.Linear <> locset def
var 56696:56696 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE m
R56699:56701 compcert.common.Memory <> mem syndef
var 56716:56728 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE mkindex_valid
R56781:56791 compcert.backend.Stackingproof <> index_valid def
R56794:56800 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.mkindex var
R56803:56808 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number var
R56810:56810 compcert.backend.Stackingproof <> r var
R56766:56768 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R56758:56763 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number var
R56765:56765 compcert.backend.Stackingproof <> r var
R56769:56773 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.bound var
R56775:56776 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R56743:56744 Coq.Lists.List <> In def
R56748:56753 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.csregs var
R56746:56746 compcert.backend.Stackingproof <> r var
var 56826:56836 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE mkindex_typ
R56876:56878 Coq.Init.Logic <> :type_scope:x_'='_x not
R56851:56863 compcert.backend.Stackingproof <> type_of_index def
R56866:56872 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.mkindex var
R56874:56874 compcert.backend.Stackingproof <> z var
R56879:56880 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.ty var
var 56894:56913 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE number_within_bounds
R56965:56969 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R56954:56956 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R56946:56951 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number var
R56953:56953 compcert.backend.Stackingproof <> r var
R56957:56961 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.bound var
R56963:56964 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R56970:56987 compcert.backend.Bounds <> mreg_within_bounds def
R56991:56991 compcert.backend.Stackingproof <> r var
R56989:56989 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R56928:56929 Coq.Lists.List <> In def
R56933:56938 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.csregs var
R56931:56931 compcert.backend.Stackingproof <> r var
var 57006:57016 PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE mkindex_val
R57073:57090 compcert.backend.Stackingproof <> index_contains_inj def
R57121:57123 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.ls0 var
R57126:57126 compcert.backend.Locations <> R constr
R57128:57128 compcert.backend.Stackingproof <> r var
R57100:57106 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.mkindex var
R57109:57114 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number var
R57116:57116 compcert.backend.Stackingproof <> r var
R57096:57097 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.sp var
R57094:57094 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.m var
R57092:57092 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.j var
R57056:57058 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R57048:57053 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number var
R57055:57055 compcert.backend.Stackingproof <> r var
R57059:57063 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.bound var
R57065:57066 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R57033:57034 Coq.Lists.List <> In def
R57038:57043 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.csregs var
R57036:57036 compcert.backend.Stackingproof <> r var
def 57145:57156 <> agree_unused
R57164:57169 compcert.backend.Linear <> locset def
R57177:57182 compcert.backend.Mach <> regset def
R57236:57245 compcert.common.Values <> val_inject ind
R57262:57263 compcert.backend.Stackingproof <> rs var
R57265:57265 compcert.backend.Stackingproof <> r var
R57250:57252 compcert.backend.Stackingproof <> ls0 var
R57255:57255 compcert.backend.Locations <> R constr
R57257:57257 compcert.backend.Stackingproof <> r var
R57247:57247 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.j var
R57207:57208 Coq.Init.Logic <> :type_scope:'~'_x not
R57231:57231 Coq.Init.Logic <> :type_scope:'~'_x not
R57209:57226 compcert.backend.Bounds <> mreg_within_bounds def
R57230:57230 compcert.backend.Stackingproof <> r var
R57228:57228 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
prf 57276:57307 <> restore_callee_save_regs_correct
R57394:57400 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57404:57409 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R57580:57585 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57410:57413 compcert.common.Smallstep <> star ind
R57541:57545 compcert.backend.Mach <> State constr
R57578:57578 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.m var
R57574:57576 compcert.backend.Stackingproof <> rs' var
R57572:57572 compcert.backend.Stackingproof <> k var
R57554:57557 compcert.common.Values <> Vptr constr
R57562:57569 compcert.lib.Integers Int zero def
R57559:57560 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.sp var
R57550:57551 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.fb var
R57547:57548 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.cs var
R57537:57538 compcert.common.Events <> E0 def
R57431:57435 compcert.backend.Mach <> State constr
R57531:57531 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.m var
R57528:57529 compcert.backend.Stackingproof <> rs var
R57471:57494 compcert.backend.Stacking <> restore_callee_save_regs def
R57525:57525 compcert.backend.Stackingproof <> k var
R57523:57523 compcert.backend.Stackingproof <> l var
R57520:57521 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R57517:57518 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.ty var
R57509:57515 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.mkindex var
R57502:57507 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number var
R57496:57500 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.bound var
R57444:57447 compcert.common.Values <> Vptr constr
R57452:57459 compcert.lib.Integers Int zero def
R57449:57450 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.sp var
R57440:57441 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.fb var
R57437:57438 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.cs var
R57420:57422 compcert.backend.Stackingproof <> PRESERVATION.tge var
R57415:57418 compcert.backend.Stackingproof <> PRESERVATION.step var
R57586:57586 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57639:57645 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57607:57616 compcert.common.Values <> val_inject ind
R57633:57635 compcert.backend.Stackingproof <> rs' var
R57637:57637 compcert.backend.Stackingproof <> r var
R57621:57623 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.ls0 var
R57626:57626 compcert.backend.Locations <> R constr
R57628:57628 compcert.backend.Stackingproof <> r var
R57618:57618 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.j var
R57597:57598 Coq.Lists.List <> In def
R57602:57602 compcert.backend.Stackingproof <> l var
R57600:57600 compcert.backend.Stackingproof <> r var
R57646:57646 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57682:57688 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57675:57677 Coq.Init.Logic <> :type_scope:x_'='_x not
R57670:57672 compcert.backend.Stackingproof <> rs' var
R57674:57674 compcert.backend.Stackingproof <> r var
R57678:57679 compcert.backend.Stackingproof <> rs var
R57681:57681 compcert.backend.Stackingproof <> r var
R57657:57658 Coq.Init.Logic <> :type_scope:'~'_x not
R57665:57665 Coq.Init.Logic <> :type_scope:'~'_x not
R57659:57660 Coq.Lists.List <> In def
R57664:57664 compcert.backend.Stackingproof <> l var
R57662:57662 compcert.backend.Stackingproof <> r var
R57689:57700 compcert.backend.Stackingproof <> agree_unused def
R57706:57708 compcert.backend.Stackingproof <> rs' var
R57702:57704 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.ls0 var
R57369:57380 compcert.backend.Stackingproof <> agree_unused def
R57386:57387 compcert.backend.Stackingproof <> rs var
R57382:57384 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.ls0 var
R57348:57359 compcert.lib.Coqlib <> list_norepet ind
R57361:57361 compcert.backend.Stackingproof <> l var
R57329:57332 Coq.Lists.List <> incl def
R57336:57341 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.csregs var
R57334:57334 compcert.backend.Stackingproof <> l var
R57747:57770 compcert.backend.Stacking <> restore_callee_save_regs def
R57747:57770 compcert.backend.Stacking <> restore_callee_save_regs def
R57747:57770 compcert.backend.Stacking <> restore_callee_save_regs def
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R57821:57829 compcert.common.Smallstep <> star_refl constr
R57821:57829 compcert.common.Smallstep <> star_refl constr
R57869:57870 Coq.Lists.List <> In def
R57874:57879 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.csregs var
R57869:57870 Coq.Lists.List <> In def
R57874:57879 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.csregs var
R57924:57927 Coq.Lists.List <> incl def
R57931:57936 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.csregs var
R57924:57927 Coq.Lists.List <> incl def
R57931:57936 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.csregs var
R57973:57984 compcert.lib.Coqlib <> list_norepet ind
R57973:57984 compcert.lib.Coqlib <> list_norepet ind
R58019:58041 compcert.backend.Stacking <> restore_callee_save_reg def
R58056:58058 compcert.lib.Coqlib <> zlt def
R58072:58076 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.bound var
R58078:58079 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R58061:58066 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number var
R58056:58058 compcert.lib.Coqlib <> zlt def
R58072:58076 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.bound var
R58078:58079 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R58061:58066 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number var
R58095:58105 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.mkindex_val var
R58095:58105 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.mkindex_val var
R58149:58158 compcert.backend.Mach Regmap set def
R58149:58158 compcert.backend.Mach Regmap set def
R58235:58244 compcert.backend.Mach Regmap set def
R58257:58264 compcert.backend.Mach RegEq eq def
R58257:58264 compcert.backend.Mach RegEq eq def
R58362:58370 compcert.common.Smallstep <> star_left thm
R58362:58370 compcert.common.Smallstep <> star_left thm
R58401:58411 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.mkindex_typ var
R58414:58419 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number var
R58401:58411 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.mkindex_typ var
R58414:58419 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number var
R58432:58456 compcert.backend.Stackingproof <> index_contains_load_stack thm
R58432:58456 compcert.backend.Stackingproof <> index_contains_load_stack thm
R58559:58568 compcert.backend.Mach Regmap gss thm
R58559:58568 compcert.backend.Mach Regmap gss thm
R58658:58667 compcert.backend.Mach Regmap gso thm
R58658:58667 compcert.backend.Mach Regmap gso thm
R58678:58687 Coq.Init.Logic <> sym_not_eq syndef
R58678:58687 Coq.Init.Logic <> sym_not_eq syndef
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R58895:58914 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number_within_bounds var
R58895:58914 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE.number_within_bounds var
R0:-1 compcert.backend.Stackingproof <> y var
R58999:59017 compcert.backend.Stackingproof PRESERVATION.FRAME_PROPERTIES.RESTORE_CALLEE_SAVE <> sec
prf 59027:59053 <> restore_callee_save_correct
R59177:59183 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59187:59192 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R59330:59335 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59193:59196 compcert.common.Smallstep <> star ind
R59289:59293 compcert.backend.Mach <> State constr
R59327:59328 compcert.backend.Stackingproof <> m' var
R59323:59325 compcert.backend.Stackingproof <> rs' var
R59321:59321 compcert.backend.Stackingproof <> k var
R59302:59305 compcert.common.Values <> Vptr constr
R59311:59318 compcert.lib.Integers Int zero def
R59307:59309 compcert.backend.Stackingproof <> sp' var
R59298:59299 compcert.backend.Stackingproof <> fb var
R59295:59296 compcert.backend.Stackingproof <> cs var
R59285:59286 compcert.common.Events <> E0 def
R59215:59219 compcert.backend.Mach <> State constr
R59277:59278 compcert.backend.Stackingproof <> m' var
R59274:59275 compcert.backend.Stackingproof <> rs var
R59248:59266 compcert.backend.Stacking <> restore_callee_save def
R59271:59271 compcert.backend.Stackingproof <> k var
R59268:59269 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R59228:59231 compcert.common.Values <> Vptr constr
R59237:59244 compcert.lib.Integers Int zero def
R59233:59235 compcert.backend.Stackingproof <> sp' var
R59224:59225 compcert.backend.Stackingproof <> fb var
R59221:59222 compcert.backend.Stackingproof <> cs var
R59203:59205 compcert.backend.Stackingproof <> PRESERVATION.tge var
R59198:59201 compcert.backend.Stackingproof <> PRESERVATION.step var
R59336:59336 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59457:59464 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59578:59578 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59425:59434 compcert.common.Values <> val_inject ind
R59451:59453 compcert.backend.Stackingproof <> rs' var
R59455:59455 compcert.backend.Stackingproof <> r var
R59439:59441 compcert.backend.Stackingproof <> ls0 var
R59444:59444 compcert.backend.Locations <> R constr
R59446:59446 compcert.backend.Stackingproof <> r var
R59436:59436 compcert.backend.Stackingproof <> j var
R59381:59384 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R59356:59357 Coq.Lists.List <> In def
R59361:59380 compcert.ia32.Conventions1 <> int_callee_save_regs def
R59359:59359 compcert.backend.Stackingproof <> r var
R59385:59386 Coq.Lists.List <> In def
R59390:59411 compcert.ia32.Conventions1 <> float_callee_save_regs def
R59388:59388 compcert.backend.Stackingproof <> r var
R59571:59573 Coq.Init.Logic <> :type_scope:x_'='_x not
R59566:59568 compcert.backend.Stackingproof <> rs' var
R59570:59570 compcert.backend.Stackingproof <> r var
R59574:59575 compcert.backend.Stackingproof <> rs var
R59577:59577 compcert.backend.Stackingproof <> r var
R59524:59525 Coq.Init.Logic <> :type_scope:'~'_x not
R59553:59553 Coq.Init.Logic <> :type_scope:'~'_x not
R59526:59527 Coq.Lists.List <> In def
R59531:59552 compcert.ia32.Conventions1 <> float_callee_save_regs def
R59529:59529 compcert.backend.Stackingproof <> r var
R59484:59485 Coq.Init.Logic <> :type_scope:'~'_x not
R59511:59511 Coq.Init.Logic <> :type_scope:'~'_x not
R59486:59487 Coq.Lists.List <> In def
R59491:59510 compcert.ia32.Conventions1 <> int_callee_save_regs def
R59489:59489 compcert.backend.Stackingproof <> r var
R59150:59161 compcert.backend.Stackingproof <> agree_unused def
R59169:59170 compcert.backend.Stackingproof <> rs var
R59165:59167 compcert.backend.Stackingproof <> ls0 var
R59163:59163 compcert.backend.Stackingproof <> j var
R59106:59116 compcert.backend.Stackingproof <> agree_frame rec
R59142:59143 compcert.backend.Stackingproof <> ra var
R59139:59140 compcert.backend.Stackingproof <> pa var
R59135:59137 compcert.backend.Stackingproof <> sp' var
R59132:59133 compcert.backend.Stackingproof <> m' var
R59129:59130 compcert.backend.Stackingproof <> sp var
R59127:59127 compcert.backend.Stackingproof <> m var
R59123:59125 compcert.backend.Stackingproof <> ls0 var
R59120:59121 compcert.backend.Stackingproof <> ls var
R59118:59118 compcert.backend.Stackingproof <> j var
R59612:59643 compcert.backend.Stackingproof <> restore_callee_save_regs_correct thm
R59776:59795 compcert.ia32.Conventions1 <> int_callee_save_regs def
R59756:59761 compcert.common.AST <> Tany32 constr
R59730:59741 compcert.backend.Stacking <> FI_saved_int constr
R59695:59715 compcert.ia32.Conventions1 <> index_int_callee_save def
R59659:59680 compcert.ia32.Stacklayout <> fe_num_int_callee_save proj
R59612:59643 compcert.backend.Stackingproof <> restore_callee_save_regs_correct thm
R59776:59795 compcert.ia32.Conventions1 <> int_callee_save_regs def
R59756:59761 compcert.common.AST <> Tany32 constr
R59730:59741 compcert.backend.Stacking <> FI_saved_int constr
R59695:59715 compcert.ia32.Conventions1 <> index_int_callee_save def
R59659:59680 compcert.ia32.Stacklayout <> fe_num_int_callee_save proj
R59854:59871 compcert.backend.Bounds <> mreg_within_bounds def
R59914:59916 compcert.lib.Coqlib <> zlt def
R59919:59941 compcert.ia32.Conventions1 <> index_float_callee_save def
R59914:59916 compcert.lib.Coqlib <> zlt def
R59919:59941 compcert.ia32.Conventions1 <> index_float_callee_save def
R59964:59990 compcert.backend.Bounds <> bound_float_callee_save_pos proj
R59992:59992 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R59964:59990 compcert.backend.Bounds <> bound_float_callee_save_pos proj
R59992:59992 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R60012:60041 compcert.ia32.Conventions1 <> int_float_callee_save_disjoint thm
R60012:60041 compcert.ia32.Conventions1 <> int_float_callee_save_disjoint thm
R60061:60088 compcert.ia32.Conventions1 <> index_float_callee_save_pos2 thm
R60061:60088 compcert.ia32.Conventions1 <> index_float_callee_save_pos2 thm
R60135:60149 compcert.backend.Stackingproof <> agree_saved_int proj
R60135:60149 compcert.backend.Stackingproof <> agree_saved_int proj
R60168:60176 Coq.Lists.List <> incl_refl thm
R60168:60176 Coq.Lists.List <> incl_refl thm
R60187:60209 compcert.ia32.Conventions1 <> int_callee_save_norepet thm
R60187:60209 compcert.ia32.Conventions1 <> int_callee_save_norepet thm
R60262:60293 compcert.backend.Stackingproof <> restore_callee_save_regs_correct thm
R60432:60453 compcert.ia32.Conventions1 <> float_callee_save_regs def
R60412:60417 compcert.common.AST <> Tany64 constr
R60384:60397 compcert.backend.Stacking <> FI_saved_float constr
R60347:60369 compcert.ia32.Conventions1 <> index_float_callee_save def
R60309:60332 compcert.ia32.Stacklayout <> fe_num_float_callee_save proj
R60262:60293 compcert.backend.Stackingproof <> restore_callee_save_regs_correct thm
R60432:60453 compcert.ia32.Conventions1 <> float_callee_save_regs def
R60412:60417 compcert.common.AST <> Tany64 constr
R60384:60397 compcert.backend.Stacking <> FI_saved_float constr
R60347:60369 compcert.ia32.Conventions1 <> index_float_callee_save def
R60309:60332 compcert.ia32.Stacklayout <> fe_num_float_callee_save proj
R60512:60529 compcert.backend.Bounds <> mreg_within_bounds def
R60572:60574 compcert.lib.Coqlib <> zlt def
R60577:60597 compcert.ia32.Conventions1 <> index_int_callee_save def
R60572:60574 compcert.lib.Coqlib <> zlt def
R60577:60597 compcert.ia32.Conventions1 <> index_int_callee_save def
R60620:60644 compcert.backend.Bounds <> bound_int_callee_save_pos proj
R60646:60646 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R60620:60644 compcert.backend.Bounds <> bound_int_callee_save_pos proj
R60646:60646 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.b var
R60666:60695 compcert.ia32.Conventions1 <> int_float_callee_save_disjoint thm
R60666:60695 compcert.ia32.Conventions1 <> int_float_callee_save_disjoint thm
R60708:60733 compcert.ia32.Conventions1 <> index_int_callee_save_pos2 thm
R60708:60733 compcert.ia32.Conventions1 <> index_int_callee_save_pos2 thm
R60787:60803 compcert.backend.Stackingproof <> agree_saved_float proj
R60787:60803 compcert.backend.Stackingproof <> agree_saved_float proj
R60822:60830 Coq.Lists.List <> incl_refl thm
R60822:60830 Coq.Lists.List <> incl_refl thm
R60841:60865 compcert.ia32.Conventions1 <> float_callee_save_norepet thm
R60841:60865 compcert.ia32.Conventions1 <> float_callee_save_norepet thm
R60940:60958 compcert.backend.Stacking <> restore_callee_save def
R60968:60977 compcert.common.Smallstep <> star_trans thm
R60968:60977 compcert.common.Smallstep <> star_trans thm
R61068:61097 compcert.ia32.Conventions1 <> int_float_callee_save_disjoint thm
prf 61388:61412 <> function_epilogue_correct
R61614:61620 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R61624:61625 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R61626:61632 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R61636:61642 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R61708:61713 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61698:61700 Coq.Init.Logic <> :type_scope:x_'='_x not
R61643:61652 compcert.backend.Mach <> load_stack def
R61686:61696 compcert.backend.Mach <> fn_link_ofs proj
R61682:61683 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.tf var
R61677:61680 compcert.common.AST <> Tint constr
R61658:61661 compcert.common.Values <> Vptr constr
R61667:61674 compcert.lib.Integers Int zero def
R61663:61665 compcert.backend.Stackingproof <> sp' var
R61654:61655 compcert.backend.Stackingproof <> m' var
R61701:61704 Coq.Init.Datatypes <> Some constr
R61706:61707 compcert.backend.Stackingproof <> pa var
R61782:61787 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61772:61774 Coq.Init.Logic <> :type_scope:x_'='_x not
R61714:61723 compcert.backend.Mach <> load_stack def
R61757:61770 compcert.backend.Mach <> fn_retaddr_ofs proj
R61753:61754 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.tf var
R61748:61751 compcert.common.AST <> Tint constr
R61729:61732 compcert.common.Values <> Vptr constr
R61738:61745 compcert.lib.Integers Int zero def
R61734:61736 compcert.backend.Stackingproof <> sp' var
R61725:61726 compcert.backend.Stackingproof <> m' var
R61775:61778 Coq.Init.Datatypes <> Some constr
R61780:61781 compcert.backend.Stackingproof <> ra var
R61834:61839 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61823:61825 Coq.Init.Logic <> :type_scope:x_'='_x not
R61788:61795 compcert.common.Memory Mem free def
R61810:61821 compcert.backend.Mach <> fn_stacksize proj
R61806:61807 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.tf var
R61800:61802 compcert.backend.Stackingproof <> sp' var
R61797:61798 compcert.backend.Stackingproof <> m' var
R61826:61829 Coq.Init.Datatypes <> Some constr
R61831:61833 compcert.backend.Stackingproof <> m1' var
R61977:61982 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61840:61843 compcert.common.Smallstep <> star ind
R61936:61940 compcert.backend.Mach <> State constr
R61974:61975 compcert.backend.Stackingproof <> m' var
R61970:61972 compcert.backend.Stackingproof <> rs1 var
R61968:61968 compcert.backend.Stackingproof <> k var
R61949:61952 compcert.common.Values <> Vptr constr
R61958:61965 compcert.lib.Integers Int zero def
R61954:61956 compcert.backend.Stackingproof <> sp' var
R61945:61946 compcert.backend.Stackingproof <> fb var
R61942:61943 compcert.backend.Stackingproof <> cs var
R61932:61933 compcert.common.Events <> E0 def
R61862:61866 compcert.backend.Mach <> State constr
R61924:61925 compcert.backend.Stackingproof <> m' var
R61921:61922 compcert.backend.Stackingproof <> rs var
R61895:61913 compcert.backend.Stacking <> restore_callee_save def
R61918:61918 compcert.backend.Stackingproof <> k var
R61915:61916 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R61875:61878 compcert.common.Values <> Vptr constr
R61884:61891 compcert.lib.Integers Int zero def
R61880:61882 compcert.backend.Stackingproof <> sp' var
R61871:61872 compcert.backend.Stackingproof <> fb var
R61868:61869 compcert.backend.Stackingproof <> cs var
R61850:61852 compcert.backend.Stackingproof <> PRESERVATION.tge var
R61845:61848 compcert.backend.Stackingproof <> PRESERVATION.step var
R62020:62025 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61983:61992 compcert.backend.Stackingproof <> agree_regs def
R62017:62019 compcert.backend.Stackingproof <> rs1 var
R61997:62007 compcert.backend.LTL <> return_regs def
R62013:62014 compcert.backend.Stackingproof <> ls var
R62009:62011 compcert.backend.Stackingproof <> ls0 var
R61994:61994 compcert.backend.Stackingproof <> j var
R62068:62073 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R62026:62042 compcert.backend.Stackingproof <> agree_callee_save def
R62065:62067 compcert.backend.Stackingproof <> ls0 var
R62045:62055 compcert.backend.LTL <> return_regs def
R62061:62062 compcert.backend.Stackingproof <> ls var
R62057:62059 compcert.backend.Stackingproof <> ls0 var
R62074:62083 compcert.common.Memory Mem inject def
R62090:62092 compcert.backend.Stackingproof <> m1' var
R62087:62088 compcert.backend.Stackingproof <> m1 var
R62085:62085 compcert.backend.Stackingproof <> j var
R61598:61600 Coq.Init.Logic <> :type_scope:x_'='_x not
R61559:61566 compcert.common.Memory Mem free def
R61578:61596 compcert.backend.Linear <> fn_stacksize proj
R61575:61575 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R61570:61571 compcert.backend.Stackingproof <> sp var
R61568:61568 compcert.backend.Stackingproof <> m var
R61601:61604 Coq.Init.Datatypes <> Some constr
R61606:61607 compcert.backend.Stackingproof <> m1 var
R61536:61545 compcert.common.Memory Mem inject def
R61551:61552 compcert.backend.Stackingproof <> m' var
R61549:61549 compcert.backend.Stackingproof <> m var
R61547:61547 compcert.backend.Stackingproof <> j var
R61492:61502 compcert.backend.Stackingproof <> agree_frame rec
R61528:61529 compcert.backend.Stackingproof <> ra var
R61525:61526 compcert.backend.Stackingproof <> pa var
R61521:61523 compcert.backend.Stackingproof <> sp' var
R61518:61519 compcert.backend.Stackingproof <> m' var
R61515:61516 compcert.backend.Stackingproof <> sp var
R61513:61513 compcert.backend.Stackingproof <> m var
R61509:61511 compcert.backend.Stackingproof <> ls0 var
R61506:61507 compcert.backend.Stackingproof <> ls var
R61504:61504 compcert.backend.Stackingproof <> j var
R61468:61477 compcert.backend.Stackingproof <> agree_regs def
R61484:61485 compcert.backend.Stackingproof <> rs var
R61481:61482 compcert.backend.Stackingproof <> ls var
R61479:61479 compcert.backend.Stackingproof <> j var
R62141:62159 compcert.common.Memory Mem range_perm_free thm
R62171:62182 compcert.backend.Mach <> fn_stacksize proj
R62184:62185 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.tf var
R62141:62159 compcert.common.Memory Mem range_perm_free thm
R62171:62182 compcert.backend.Mach <> fn_stacksize proj
R62184:62185 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.tf var
R62214:62235 compcert.backend.Stackingproof <> unfold_transf_function thm
R62245:62256 compcert.backend.Mach <> fn_stacksize proj
R62214:62235 compcert.backend.Stackingproof <> unfold_transf_function thm
R62356:62374 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R62448:62448 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R62306:62309 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R62313:62315 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R62290:62302 compcert.ia32.Stacklayout <> fe_stack_data proj
R62304:62305 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62332:62334 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62316:62328 compcert.ia32.Stacklayout <> fe_stack_data proj
R62330:62331 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62335:62353 compcert.backend.Linear <> fn_stacksize proj
R62355:62355 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R62397:62400 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R62378:62380 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R62381:62393 compcert.ia32.Stacklayout <> fe_stack_data proj
R62395:62396 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62441:62444 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R62417:62419 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62401:62413 compcert.ia32.Stacklayout <> fe_stack_data proj
R62415:62416 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62420:62438 compcert.backend.Linear <> fn_stacksize proj
R62440:62440 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R62356:62374 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R62448:62448 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R62306:62309 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R62313:62315 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R62290:62302 compcert.ia32.Stacklayout <> fe_stack_data proj
R62304:62305 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62332:62334 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62316:62328 compcert.ia32.Stacklayout <> fe_stack_data proj
R62330:62331 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62335:62353 compcert.backend.Linear <> fn_stacksize proj
R62355:62355 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R62397:62400 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R62378:62380 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R62381:62393 compcert.ia32.Stacklayout <> fe_stack_data proj
R62395:62396 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62441:62444 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R62417:62419 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62401:62413 compcert.ia32.Stacklayout <> fe_stack_data proj
R62415:62416 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62420:62438 compcert.backend.Linear <> fn_stacksize proj
R62440:62440 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R62502:62502 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62525:62528 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62506:62508 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R62509:62521 compcert.ia32.Stacklayout <> fe_stack_data proj
R62523:62524 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62529:62541 compcert.ia32.Stacklayout <> fe_stack_data proj
R62543:62544 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62502:62502 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62525:62528 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62506:62508 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R62509:62521 compcert.ia32.Stacklayout <> fe_stack_data proj
R62523:62524 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62529:62541 compcert.ia32.Stacklayout <> fe_stack_data proj
R62543:62544 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.fe var
R62566:62580 compcert.common.Memory Mem perm_inject thm
R62566:62580 compcert.common.Memory Mem perm_inject thm
R62604:62612 compcert.backend.Stackingproof <> agree_inj proj
R62604:62612 compcert.backend.Stackingproof <> agree_inj proj
R62639:62657 compcert.common.Memory Mem free_range_perm thm
R62639:62657 compcert.common.Memory Mem free_range_perm thm
R62683:62692 compcert.backend.Stackingproof <> agree_perm proj
R62683:62692 compcert.backend.Stackingproof <> agree_perm proj
R62745:62754 compcert.common.Memory Mem inject def
R62745:62754 compcert.common.Memory Mem inject def
R62835:62838 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62803:62803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62806:62807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62809:62810 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62834:62834 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62814:62832 compcert.backend.Linear <> fn_stacksize proj
R62811:62811 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R62839:62841 Coq.Init.Datatypes <> nil constr
R62776:62790 compcert.common.Memory Mem free_inject thm
R62835:62838 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62803:62803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62806:62807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62809:62810 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62834:62834 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62814:62832 compcert.backend.Linear <> fn_stacksize proj
R62811:62811 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R62839:62841 Coq.Init.Datatypes <> nil constr
R62776:62790 compcert.common.Memory Mem free_inject thm
R62897:62912 compcert.backend.Stackingproof <> agree_inj_unique proj
R62972:62990 compcert.backend.Linear <> fn_stacksize proj
R62992:62992 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R62972:62990 compcert.backend.Linear <> fn_stacksize proj
R62992:62992 compcert.backend.Stackingproof <> PRESERVATION.FRAME_PROPERTIES.f var
R63030:63041 compcert.backend.Stackingproof <> agree_bounds proj
R63030:63041 compcert.backend.Stackingproof <> agree_bounds proj
R63058:63069 compcert.common.Memory Mem perm_max thm
R63058:63069 compcert.common.Memory Mem perm_max thm
R63120:63146 compcert.backend.Stackingproof <> restore_callee_save_correct thm
R63213:63228 compcert.backend.Stackingproof <> agree_unused_reg proj
R63213:63228 compcert.backend.Stackingproof <> agree_unused_reg proj
R63355:63376 compcert.backend.Stackingproof <> unfold_transf_function thm
R63386:63396 compcert.backend.Mach <> fn_link_ofs proj
R63355:63376 compcert.backend.Stackingproof <> unfold_transf_function thm
R63450:63456 compcert.backend.Stacking <> FI_link constr
R63411:63435 compcert.backend.Stackingproof <> index_contains_load_stack thm
R63450:63456 compcert.backend.Stacking <> FI_link constr
R63411:63435 compcert.backend.Stackingproof <> index_contains_load_stack thm
R63498:63519 compcert.backend.Stackingproof <> unfold_transf_function thm
R63529:63542 compcert.backend.Mach <> fn_retaddr_ofs proj
R63498:63519 compcert.backend.Stackingproof <> unfold_transf_function thm
R63596:63605 compcert.backend.Stacking <> FI_retaddr constr
R63557:63581 compcert.backend.Stackingproof <> index_contains_load_stack thm
R63596:63605 compcert.backend.Stacking <> FI_retaddr constr
R63557:63581 compcert.backend.Stackingproof <> index_contains_load_stack thm
R63693:63703 compcert.backend.LTL <> return_regs def
R63722:63744 compcert.ia32.Conventions1 <> register_classification thm
R63750:63778 compcert.ia32.Conventions1 <> int_callee_save_not_destroyed thm
R63784:63814 compcert.ia32.Conventions1 <> float_callee_save_not_destroyed thm
R63722:63744 compcert.ia32.Conventions1 <> register_classification thm
R63750:63778 compcert.ia32.Conventions1 <> int_callee_save_not_destroyed thm
R63784:63814 compcert.ia32.Conventions1 <> float_callee_save_not_destroyed thm
R63842:63847 Coq.Lists.List <> in_dec thm
R63859:63875 compcert.ia32.Conventions1 <> destroyed_at_call def
R63849:63855 compcert.ia32.Machregs <> mreg_eq thm
R63842:63847 Coq.Lists.List <> in_dec thm
R63859:63875 compcert.ia32.Conventions1 <> destroyed_at_call def
R63849:63855 compcert.ia32.Machregs <> mreg_eq thm
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R0:-1 compcert.backend.Stackingproof <> y var
R63942:63970 compcert.backend.Stackingproof <> agree_callee_save_return_regs thm
R63942:63970 compcert.backend.Stackingproof <> agree_callee_save_return_regs thm
R63991:64006 compcert.backend.Stackingproof PRESERVATION.FRAME_PROPERTIES <> sec
ind 64051:64066 <> match_globalenvs
constr 64109:64130 <> match_globalenvs_intro
R64072:64077 compcert.common.Values <> meminj def
R64088:64092 compcert.common.Values <> block def
R64175:64177 Coq.Init.Logic <> :type_scope:x_'='_x not
R64174:64174 compcert.backend.Stackingproof <> b var
R64178:64181 Coq.Init.Datatypes <> Some constr
R64182:64182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64184:64185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64187:64187 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64183:64183 compcert.backend.Stackingproof <> b var
R64157:64159 compcert.lib.Coqlib <> Plt def
R64161:64161 compcert.backend.Stackingproof <> b var
R64268:64270 Coq.Init.Logic <> :type_scope:x_'='_x not
R64266:64267 compcert.backend.Stackingproof <> b1 var
R64271:64272 compcert.backend.Stackingproof <> b2 var
R64250:64252 compcert.lib.Coqlib <> Plt def
R64254:64255 compcert.backend.Stackingproof <> b2 var
R64228:64230 Coq.Init.Logic <> :type_scope:x_'='_x not
R64226:64227 compcert.backend.Stackingproof <> b1 var
R64231:64234 Coq.Init.Datatypes <> Some constr
R64235:64235 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64238:64239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64245:64245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64236:64237 compcert.backend.Stackingproof <> b2 var
R64240:64244 compcert.backend.Stackingproof <> delta var
R64339:64341 compcert.lib.Coqlib <> Plt def
R64343:64343 compcert.backend.Stackingproof <> b var
R64326:64328 Coq.Init.Logic <> :type_scope:x_'='_x not
R64304:64319 compcert.common.Globalenvs Genv find_symbol def
R64324:64325 compcert.backend.Stackingproof <> id var
R64321:64322 compcert.backend.Stackingproof <> PRESERVATION.ge var
R64329:64332 Coq.Init.Datatypes <> Some constr
R64334:64334 compcert.backend.Stackingproof <> b var
R64421:64423 compcert.lib.Coqlib <> Plt def
R64425:64425 compcert.backend.Stackingproof <> b var
R64407:64409 Coq.Init.Logic <> :type_scope:x_'='_x not
R64383:64401 compcert.common.Globalenvs Genv find_funct_ptr def
R64406:64406 compcert.backend.Stackingproof <> b var
R64403:64404 compcert.backend.Stackingproof <> PRESERVATION.ge var
R64410:64413 Coq.Init.Datatypes <> Some constr
R64415:64416 compcert.backend.Stackingproof <> fd var
R64501:64503 compcert.lib.Coqlib <> Plt def
R64505:64505 compcert.backend.Stackingproof <> b var
R64487:64489 Coq.Init.Logic <> :type_scope:x_'='_x not
R64464:64481 compcert.common.Globalenvs Genv find_var_info def
R64486:64486 compcert.backend.Stackingproof <> b var
R64483:64484 compcert.backend.Stackingproof <> PRESERVATION.ge var
R64490:64493 Coq.Init.Datatypes <> Some constr
R64495:64496 compcert.backend.Stackingproof <> gv var
R64513:64513 compcert.backend.Stackingproof <> match_globalenvs ind
ind 64526:64537 <> match_stacks
constr 64660:64677 <> match_stacks_empty
constr 64855:64871 <> match_stacks_cons
R64543:64548 compcert.common.Values <> meminj def
R64558:64560 compcert.common.Memory <> mem syndef
R64639:64643 compcert.common.Values <> block def
R64630:64634 compcert.common.Values <> block def
R64617:64625 compcert.common.AST <> signature rec
R64598:64601 Coq.Init.Datatypes <> list ind
R64603:64612 compcert.backend.Mach <> stackframe ind
R64572:64575 Coq.Init.Datatypes <> list ind
R64577:64593 compcert.backend.Linear <> stackframe ind
R64807:64818 compcert.backend.Stackingproof <> match_stacks ind
R64844:64849 compcert.backend.Stackingproof <> bound' var
R64838:64842 compcert.backend.Stackingproof <> bound var
R64835:64836 compcert.backend.Stackingproof <> sg var
R64831:64833 Coq.Init.Datatypes <> nil constr
R64827:64829 Coq.Init.Datatypes <> nil constr
R64777:64793 compcert.backend.Conventions <> tailcall_possible def
R64795:64796 compcert.backend.Stackingproof <> sg var
R64746:64761 compcert.backend.Stackingproof <> match_globalenvs ind
R64765:64766 compcert.backend.Stackingproof <> hi var
R64729:64731 compcert.lib.Coqlib <> Ple def
R64736:64741 compcert.backend.Stackingproof <> bound' var
R64733:64734 compcert.backend.Stackingproof <> hi var
R64713:64715 compcert.lib.Coqlib <> Ple def
R64720:64724 compcert.backend.Stackingproof <> bound var
R64717:64718 compcert.backend.Stackingproof <> hi var
R64946:64952 compcert.lib.Coqlib <> is_tail ind
R64957:64970 compcert.backend.Linear <> fn_code proj
R64972:64972 compcert.backend.Stackingproof <> f var
R64954:64954 compcert.backend.Stackingproof <> c var
R65018:65020 Coq.Init.Logic <> :type_scope:x_'='_x not
R64992:65010 compcert.common.Globalenvs Genv find_funct_ptr def
R65016:65017 compcert.backend.Stackingproof <> fb var
R65012:65014 compcert.backend.Stackingproof <> PRESERVATION.tge var
R65021:65024 Coq.Init.Datatypes <> Some constr
R65027:65034 compcert.common.AST <> Internal constr
R65036:65038 compcert.backend.Stackingproof <> trf var
R65073:65075 Coq.Init.Logic <> :type_scope:x_'='_x not
R65056:65070 compcert.backend.Stacking <> transf_function def
R65072:65072 compcert.backend.Stackingproof <> f var
R65076:65077 compcert.common.Errors <> OK constr
R65079:65081 compcert.backend.Stackingproof <> trf var
R65142:65144 Coq.Init.Logic <> :type_scope:x_'='_x not
R65098:65108 compcert.backend.Stacking <> transl_code def
R65141:65141 compcert.backend.Stackingproof <> c var
R65111:65118 compcert.ia32.Stacklayout <> make_env def
R65121:65135 compcert.backend.Bounds <> function_bounds def
R65137:65137 compcert.backend.Stackingproof <> f var
R65145:65146 compcert.backend.Stackingproof <> c' var
R65165:65176 compcert.common.Values Val has_type def
R65181:65184 compcert.common.AST <> Tint constr
R65178:65179 compcert.backend.Stackingproof <> ra var
R65201:65211 compcert.backend.Stackingproof <> agree_frame rec
R65268:65276 compcert.backend.Mach <> parent_ra def
R65278:65280 compcert.backend.Stackingproof <> cs' var
R65252:65260 compcert.backend.Mach <> parent_sp def
R65262:65264 compcert.backend.Stackingproof <> cs' var
R65247:65249 compcert.backend.Stackingproof <> sp' var
R65241:65242 compcert.backend.Stackingproof <> sp var
R65221:65233 compcert.backend.Linear <> parent_locset def
R65235:65236 compcert.backend.Stackingproof <> cs var
R65217:65218 compcert.backend.Stackingproof <> ls var
R65213:65213 compcert.backend.Stackingproof <> f var
R65381:65398 compcert.backend.Bounds <> slot_within_bounds def
R65433:65434 compcert.backend.Stackingproof <> ty var
R65429:65431 compcert.backend.Stackingproof <> ofs var
R65420:65427 compcert.backend.Locations <> Outgoing constr
R65401:65415 compcert.backend.Bounds <> function_bounds def
R65417:65417 compcert.backend.Stackingproof <> f var
R65325:65326 Coq.Lists.List <> In def
R65349:65361 compcert.ia32.Conventions1 <> loc_arguments def
R65363:65364 compcert.backend.Stackingproof <> sg var
R65329:65329 compcert.backend.Locations <> S constr
R65344:65345 compcert.backend.Stackingproof <> ty var
R65340:65342 compcert.backend.Stackingproof <> ofs var
R65331:65338 compcert.backend.Locations <> Outgoing constr
R65451:65462 compcert.backend.Stackingproof <> match_stacks ind
R65499:65501 compcert.backend.Stackingproof <> sp' var
R65496:65497 compcert.backend.Stackingproof <> sp var
R65479:65491 compcert.backend.Linear <> fn_sig proj
R65493:65493 compcert.backend.Stackingproof <> f var
R65474:65476 compcert.backend.Stackingproof <> cs' var
R65471:65472 compcert.backend.Stackingproof <> cs var
R65520:65522 compcert.lib.Coqlib <> Plt def
R65527:65531 compcert.backend.Stackingproof <> bound var
R65524:65525 compcert.backend.Stackingproof <> sp var
R65551:65553 compcert.lib.Coqlib <> Plt def
R65559:65564 compcert.backend.Stackingproof <> bound' var
R65555:65557 compcert.backend.Stackingproof <> sp' var
R65574:65585 compcert.backend.Stackingproof <> match_stacks ind
R65761:65766 compcert.backend.Stackingproof <> bound' var
R65755:65759 compcert.backend.Stackingproof <> bound var
R65752:65753 compcert.backend.Stackingproof <> sg var
R65724:65727 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65685:65694 compcert.backend.Mach <> Stackframe constr
R65722:65723 compcert.backend.Stackingproof <> c' var
R65719:65720 compcert.backend.Stackingproof <> ra var
R65700:65703 compcert.common.Values <> Vptr constr
R65709:65716 compcert.lib.Integers Int zero def
R65705:65707 compcert.backend.Stackingproof <> sp' var
R65696:65697 compcert.backend.Stackingproof <> fb var
R65728:65730 compcert.backend.Stackingproof <> cs' var
R65657:65660 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65614:65630 compcert.backend.Linear <> Stackframe constr
R65656:65656 compcert.backend.Stackingproof <> c var
R65653:65654 compcert.backend.Stackingproof <> ls var
R65635:65638 compcert.common.Values <> Vptr constr
R65643:65650 compcert.lib.Integers Int zero def
R65640:65641 compcert.backend.Stackingproof <> sp var
R65632:65632 compcert.backend.Stackingproof <> f var
R65661:65662 compcert.backend.Stackingproof <> cs var
prf 65829:65854 <> match_stacks_change_bounds
R66018:66029 compcert.backend.Stackingproof <> match_stacks ind
R66056:66062 compcert.backend.Stackingproof <> xbound' var
R66049:66054 compcert.backend.Stackingproof <> xbound var
R66046:66047 compcert.backend.Stackingproof <> sg var
R66042:66044 compcert.backend.Stackingproof <> cs' var
R66039:66040 compcert.backend.Stackingproof <> cs var
R66036:66037 compcert.backend.Stackingproof <> m' var
R66033:66034 compcert.backend.Stackingproof <> m1 var
R66031:66031 compcert.backend.Stackingproof <> j var
R65994:65996 compcert.lib.Coqlib <> Ple def
R66005:66011 compcert.backend.Stackingproof <> xbound' var
R65998:66003 compcert.backend.Stackingproof <> bound' var
R65974:65976 compcert.lib.Coqlib <> Ple def
R65984:65989 compcert.backend.Stackingproof <> xbound var
R65978:65982 compcert.backend.Stackingproof <> bound var
R65900:65911 compcert.backend.Stackingproof <> match_stacks ind
R65937:65942 compcert.backend.Stackingproof <> bound' var
R65931:65935 compcert.backend.Stackingproof <> bound var
R65928:65929 compcert.backend.Stackingproof <> sg var
R65924:65926 compcert.backend.Stackingproof <> cs' var
R65921:65922 compcert.backend.Stackingproof <> cs var
R65918:65919 compcert.backend.Stackingproof <> m' var
R65915:65916 compcert.backend.Stackingproof <> m1 var
R65913:65913 compcert.backend.Stackingproof <> j var
R66104:66121 compcert.backend.Stackingproof <> match_stacks_empty constr
R66104:66121 compcert.backend.Stackingproof <> match_stacks_empty constr
R66144:66152 compcert.lib.Coqlib <> Ple_trans thm
R66144:66152 compcert.lib.Coqlib <> Ple_trans thm
R66179:66187 compcert.lib.Coqlib <> Ple_trans thm
R66179:66187 compcert.lib.Coqlib <> Ple_trans thm
R66240:66251 Coq.PArith.BinPos <> Plt_le_trans syndef
R66240:66251 Coq.PArith.BinPos <> Plt_le_trans syndef
R66268:66279 Coq.PArith.BinPos <> Plt_le_trans syndef
R66268:66279 Coq.PArith.BinPos <> Plt_le_trans syndef
prf 66352:66381 <> match_stacks_change_linear_mem
R66645:66656 compcert.backend.Stackingproof <> match_stacks ind
R66682:66687 compcert.backend.Stackingproof <> bound' var
R66676:66680 compcert.backend.Stackingproof <> bound var
R66673:66674 compcert.backend.Stackingproof <> sg var
R66669:66671 compcert.backend.Stackingproof <> cs' var
R66666:66667 compcert.backend.Stackingproof <> cs var
R66663:66664 compcert.backend.Stackingproof <> m' var
R66660:66661 compcert.backend.Stackingproof <> m2 var
R66658:66658 compcert.backend.Stackingproof <> j var
R66615:66622 compcert.common.Memory Mem perm def
R66637:66637 compcert.backend.Stackingproof <> p var
R66633:66635 compcert.common.Memtype <> Max constr
R66629:66631 compcert.backend.Stackingproof <> ofs var
R66627:66627 compcert.backend.Stackingproof <> b var
R66624:66625 compcert.backend.Stackingproof <> m1 var
R66588:66595 compcert.common.Memory Mem perm def
R66610:66610 compcert.backend.Stackingproof <> p var
R66606:66608 compcert.common.Memtype <> Max constr
R66602:66604 compcert.backend.Stackingproof <> ofs var
R66600:66600 compcert.backend.Stackingproof <> b var
R66597:66598 compcert.backend.Stackingproof <> m2 var
R66573:66575 compcert.lib.Coqlib <> Plt def
R66579:66583 compcert.backend.Stackingproof <> bound var
R66577:66577 compcert.backend.Stackingproof <> b var
R66529:66543 compcert.common.Memory Mem valid_block def
R66548:66548 compcert.backend.Stackingproof <> b var
R66545:66546 compcert.backend.Stackingproof <> m2 var
R66505:66519 compcert.common.Memory Mem valid_block def
R66524:66524 compcert.backend.Stackingproof <> b var
R66521:66522 compcert.backend.Stackingproof <> m1 var
R66490:66492 compcert.lib.Coqlib <> Plt def
R66496:66500 compcert.backend.Stackingproof <> bound var
R66494:66494 compcert.backend.Stackingproof <> b var
R66430:66441 compcert.backend.Stackingproof <> match_stacks ind
R66467:66472 compcert.backend.Stackingproof <> bound' var
R66461:66465 compcert.backend.Stackingproof <> bound var
R66458:66459 compcert.backend.Stackingproof <> sg var
R66454:66456 compcert.backend.Stackingproof <> cs' var
R66451:66452 compcert.backend.Stackingproof <> cs var
R66448:66449 compcert.backend.Stackingproof <> m' var
R66445:66446 compcert.backend.Stackingproof <> m1 var
R66443:66443 compcert.backend.Stackingproof <> j var
R66775:66795 compcert.backend.Stackingproof <> agree_frame_invariant thm
R66775:66795 compcert.backend.Stackingproof <> agree_frame_invariant thm
R66862:66870 compcert.lib.Coqlib <> Plt_trans thm
R66862:66870 compcert.lib.Coqlib <> Plt_trans thm
R66913:66921 compcert.lib.Coqlib <> Plt_trans thm
R66913:66921 compcert.lib.Coqlib <> Plt_trans thm
prf 67007:67034 <> match_stacks_change_mach_mem
R67419:67430 compcert.backend.Stackingproof <> match_stacks ind
R67456:67461 compcert.backend.Stackingproof <> bound' var
R67450:67454 compcert.backend.Stackingproof <> bound var
R67447:67448 compcert.backend.Stackingproof <> sg var
R67443:67445 compcert.backend.Stackingproof <> cs' var
R67440:67441 compcert.backend.Stackingproof <> cs var
R67436:67438 compcert.backend.Stackingproof <> m2' var
R67434:67434 compcert.backend.Stackingproof <> m var
R67432:67432 compcert.backend.Stackingproof <> j var
R67403:67405 Coq.Init.Logic <> :type_scope:x_'='_x not
R67379:67386 compcert.common.Memory Mem load def
R67400:67402 compcert.backend.Stackingproof <> ofs var
R67398:67398 compcert.backend.Stackingproof <> b var
R67394:67396 compcert.backend.Stackingproof <> m2' var
R67388:67392 compcert.backend.Stackingproof <> chunk var
R67406:67409 Coq.Init.Datatypes <> Some constr
R67411:67411 compcert.backend.Stackingproof <> v var
R67366:67368 Coq.Init.Logic <> :type_scope:x_'='_x not
R67342:67349 compcert.common.Memory Mem load def
R67363:67365 compcert.backend.Stackingproof <> ofs var
R67361:67361 compcert.backend.Stackingproof <> b var
R67357:67359 compcert.backend.Stackingproof <> m1' var
R67351:67355 compcert.backend.Stackingproof <> chunk var
R67369:67372 Coq.Init.Datatypes <> Some constr
R67374:67374 compcert.backend.Stackingproof <> v var
R67326:67328 compcert.lib.Coqlib <> Plt def
R67332:67337 compcert.backend.Stackingproof <> bound' var
R67330:67330 compcert.backend.Stackingproof <> b var
R67274:67281 compcert.common.Memory Mem perm def
R67295:67295 compcert.backend.Stackingproof <> p var
R67293:67293 compcert.backend.Stackingproof <> k var
R67289:67291 compcert.backend.Stackingproof <> ofs var
R67287:67287 compcert.backend.Stackingproof <> b var
R67283:67285 compcert.backend.Stackingproof <> m2' var
R67248:67255 compcert.common.Memory Mem perm def
R67269:67269 compcert.backend.Stackingproof <> p var
R67267:67267 compcert.backend.Stackingproof <> k var
R67263:67265 compcert.backend.Stackingproof <> ofs var
R67261:67261 compcert.backend.Stackingproof <> b var
R67257:67259 compcert.backend.Stackingproof <> m1' var
R67232:67234 compcert.lib.Coqlib <> Plt def
R67238:67243 compcert.backend.Stackingproof <> bound' var
R67236:67236 compcert.backend.Stackingproof <> b var
R67185:67199 compcert.common.Memory Mem valid_block def
R67205:67205 compcert.backend.Stackingproof <> b var
R67201:67203 compcert.backend.Stackingproof <> m2' var
R67160:67174 compcert.common.Memory Mem valid_block def
R67180:67180 compcert.backend.Stackingproof <> b var
R67176:67178 compcert.backend.Stackingproof <> m1' var
R67144:67146 compcert.lib.Coqlib <> Plt def
R67150:67155 compcert.backend.Stackingproof <> bound' var
R67148:67148 compcert.backend.Stackingproof <> b var
R67084:67095 compcert.backend.Stackingproof <> match_stacks ind
R67121:67126 compcert.backend.Stackingproof <> bound' var
R67115:67119 compcert.backend.Stackingproof <> bound var
R67112:67113 compcert.backend.Stackingproof <> sg var
R67108:67110 compcert.backend.Stackingproof <> cs' var
R67105:67106 compcert.backend.Stackingproof <> cs var
R67101:67103 compcert.backend.Stackingproof <> m1' var
R67099:67099 compcert.backend.Stackingproof <> m var
R67097:67097 compcert.backend.Stackingproof <> j var
R67549:67569 compcert.backend.Stackingproof <> agree_frame_invariant thm
R67549:67569 compcert.backend.Stackingproof <> agree_frame_invariant thm
R67637:67645 compcert.lib.Coqlib <> Plt_trans thm
R67637:67645 compcert.lib.Coqlib <> Plt_trans thm
R67696:67704 compcert.lib.Coqlib <> Plt_trans thm
R67696:67704 compcert.lib.Coqlib <> Plt_trans thm
R67755:67763 compcert.lib.Coqlib <> Plt_trans thm
R67755:67763 compcert.lib.Coqlib <> Plt_trans thm
prf 67855:67885 <> match_stacks_change_mem_extcall
R68289:68300 compcert.backend.Stackingproof <> match_stacks ind
R68327:68332 compcert.backend.Stackingproof <> bound' var
R68321:68325 compcert.backend.Stackingproof <> bound var
R68318:68319 compcert.backend.Stackingproof <> sg var
R68314:68316 compcert.backend.Stackingproof <> cs' var
R68311:68312 compcert.backend.Stackingproof <> cs var
R68307:68309 compcert.backend.Stackingproof <> m2' var
R68304:68305 compcert.backend.Stackingproof <> m2 var
R68302:68302 compcert.backend.Stackingproof <> j var
R68235:68250 compcert.common.Memory Mem unchanged_on rec
R68280:68282 compcert.backend.Stackingproof <> m2' var
R68276:68278 compcert.backend.Stackingproof <> m1' var
R68253:68268 compcert.common.Events <> loc_out_of_reach def
R68272:68273 compcert.backend.Stackingproof <> m1 var
R68270:68270 compcert.backend.Stackingproof <> j var
R68207:68221 compcert.common.Memory Mem valid_block def
R68227:68227 compcert.backend.Stackingproof <> b var
R68223:68225 compcert.backend.Stackingproof <> m2' var
R68182:68196 compcert.common.Memory Mem valid_block def
R68202:68202 compcert.backend.Stackingproof <> b var
R68198:68200 compcert.backend.Stackingproof <> m1' var
R68166:68168 compcert.lib.Coqlib <> Plt def
R68172:68177 compcert.backend.Stackingproof <> bound' var
R68170:68170 compcert.backend.Stackingproof <> b var
R68125:68132 compcert.common.Memory Mem perm def
R68147:68147 compcert.backend.Stackingproof <> p var
R68143:68145 compcert.common.Memtype <> Max constr
R68139:68141 compcert.backend.Stackingproof <> ofs var
R68137:68137 compcert.backend.Stackingproof <> b var
R68134:68135 compcert.backend.Stackingproof <> m1 var
R68098:68105 compcert.common.Memory Mem perm def
R68120:68120 compcert.backend.Stackingproof <> p var
R68116:68118 compcert.common.Memtype <> Max constr
R68112:68114 compcert.backend.Stackingproof <> ofs var
R68110:68110 compcert.backend.Stackingproof <> b var
R68107:68108 compcert.backend.Stackingproof <> m2 var
R68083:68085 compcert.lib.Coqlib <> Plt def
R68089:68093 compcert.backend.Stackingproof <> bound var
R68087:68087 compcert.backend.Stackingproof <> b var
R68039:68053 compcert.common.Memory Mem valid_block def
R68058:68058 compcert.backend.Stackingproof <> b var
R68055:68056 compcert.backend.Stackingproof <> m2 var
R68015:68029 compcert.common.Memory Mem valid_block def
R68034:68034 compcert.backend.Stackingproof <> b var
R68031:68032 compcert.backend.Stackingproof <> m1 var
R68000:68002 compcert.lib.Coqlib <> Plt def
R68006:68010 compcert.backend.Stackingproof <> bound var
R68004:68004 compcert.backend.Stackingproof <> b var
R67939:67950 compcert.backend.Stackingproof <> match_stacks ind
R67977:67982 compcert.backend.Stackingproof <> bound' var
R67971:67975 compcert.backend.Stackingproof <> bound var
R67968:67969 compcert.backend.Stackingproof <> sg var
R67964:67966 compcert.backend.Stackingproof <> cs' var
R67961:67962 compcert.backend.Stackingproof <> cs var
R67957:67959 compcert.backend.Stackingproof <> m1' var
R67954:67955 compcert.backend.Stackingproof <> m1 var
R67952:67952 compcert.backend.Stackingproof <> j var
R68420:68448 compcert.backend.Stackingproof <> agree_frame_extcall_invariant thm
R68420:68448 compcert.backend.Stackingproof <> agree_frame_extcall_invariant thm
R68515:68523 compcert.lib.Coqlib <> Plt_trans thm
R68515:68523 compcert.lib.Coqlib <> Plt_trans thm
R68567:68575 compcert.lib.Coqlib <> Plt_trans thm
R68567:68575 compcert.lib.Coqlib <> Plt_trans thm
R68630:68638 compcert.lib.Coqlib <> Plt_trans thm
R68630:68638 compcert.lib.Coqlib <> Plt_trans thm
prf 68727:68752 <> match_stacks_change_meminj
R68957:68968 compcert.backend.Stackingproof <> match_stacks ind
R68994:68999 compcert.backend.Stackingproof <> bound' var
R68988:68992 compcert.backend.Stackingproof <> bound var
R68985:68986 compcert.backend.Stackingproof <> sg var
R68981:68983 compcert.backend.Stackingproof <> cs' var
R68978:68979 compcert.backend.Stackingproof <> cs var
R68975:68976 compcert.backend.Stackingproof <> m' var
R68973:68973 compcert.backend.Stackingproof <> m var
R68970:68971 compcert.backend.Stackingproof <> j' var
R68921:68923 compcert.lib.Coqlib <> Ple def
R68933:68945 compcert.common.Memory Mem nextblock proj
R68947:68949 compcert.backend.Stackingproof <> m1' var
R68925:68930 compcert.backend.Stackingproof <> bound' var
R68873:68884 compcert.backend.Stackingproof <> match_stacks ind
R68909:68914 compcert.backend.Stackingproof <> bound' var
R68903:68907 compcert.backend.Stackingproof <> bound var
R68900:68901 compcert.backend.Stackingproof <> sg var
R68896:68898 compcert.backend.Stackingproof <> cs' var
R68893:68894 compcert.backend.Stackingproof <> cs var
R68890:68891 compcert.backend.Stackingproof <> m' var
R68888:68888 compcert.backend.Stackingproof <> m var
R68886:68886 compcert.backend.Stackingproof <> j var
R68806:68821 compcert.common.Events <> inject_separated def
R68831:68833 compcert.backend.Stackingproof <> m1' var
R68828:68829 compcert.backend.Stackingproof <> m1 var
R68825:68826 compcert.backend.Stackingproof <> j' var
R68823:68823 compcert.backend.Stackingproof <> j var
R68784:68794 compcert.common.Values <> inject_incr def
R68798:68799 compcert.backend.Stackingproof <> j' var
R68796:68796 compcert.backend.Stackingproof <> j var
R69040:69057 compcert.backend.Stackingproof <> match_stacks_empty constr
R69040:69057 compcert.backend.Stackingproof <> match_stacks_empty constr
R69275:69286 Coq.PArith.BinPos <> Plt_le_trans syndef
R69275:69286 Coq.PArith.BinPos <> Plt_le_trans syndef
R69309:69317 compcert.lib.Coqlib <> Ple_trans thm
R69309:69317 compcert.lib.Coqlib <> Ple_trans thm
R69371:69393 compcert.backend.Stackingproof <> agree_frame_inject_incr thm
R69371:69393 compcert.backend.Stackingproof <> agree_frame_inject_incr thm
R69415:69426 Coq.PArith.BinPos <> Plt_le_trans syndef
R69415:69426 Coq.PArith.BinPos <> Plt_le_trans syndef
R69467:69475 compcert.lib.Coqlib <> Ple_trans thm
R69467:69475 compcert.lib.Coqlib <> Ple_trans thm
R69502:69508 compcert.lib.Coqlib <> Plt_Ple thm
R69502:69508 compcert.lib.Coqlib <> Plt_Ple thm
prf 69589:69616 <> match_stacks_parallel_stores
R69886:69897 compcert.backend.Stackingproof <> match_stacks ind
R69924:69929 compcert.backend.Stackingproof <> bound' var
R69918:69922 compcert.backend.Stackingproof <> bound var
R69915:69916 compcert.backend.Stackingproof <> sg var
R69911:69913 compcert.backend.Stackingproof <> cs' var
R69908:69909 compcert.backend.Stackingproof <> cs var
R69904:69906 compcert.backend.Stackingproof <> m1' var
R69901:69902 compcert.backend.Stackingproof <> m1 var
R69899:69899 compcert.backend.Stackingproof <> j var
R69838:69849 compcert.backend.Stackingproof <> match_stacks ind
R69874:69879 compcert.backend.Stackingproof <> bound' var
R69868:69872 compcert.backend.Stackingproof <> bound var
R69865:69866 compcert.backend.Stackingproof <> sg var
R69861:69863 compcert.backend.Stackingproof <> cs' var
R69858:69859 compcert.backend.Stackingproof <> cs var
R69855:69856 compcert.backend.Stackingproof <> m' var
R69853:69853 compcert.backend.Stackingproof <> m var
R69851:69851 compcert.backend.Stackingproof <> j var
R69788:69790 Coq.Init.Logic <> :type_scope:x_'='_x not
R69760:69769 compcert.common.Memory Mem storev def
R69786:69787 compcert.backend.Stackingproof <> v' var
R69780:69784 compcert.backend.Stackingproof <> addr' var
R69777:69778 compcert.backend.Stackingproof <> m' var
R69771:69775 compcert.backend.Stackingproof <> chunk var
R69791:69794 Coq.Init.Datatypes <> Some constr
R69796:69798 compcert.backend.Stackingproof <> m1' var
R69744:69746 Coq.Init.Logic <> :type_scope:x_'='_x not
R69719:69728 compcert.common.Memory Mem storev def
R69743:69743 compcert.backend.Stackingproof <> v var
R69738:69741 compcert.backend.Stackingproof <> addr var
R69736:69736 compcert.backend.Stackingproof <> m var
R69730:69734 compcert.backend.Stackingproof <> chunk var
R69747:69750 Coq.Init.Datatypes <> Some constr
R69752:69753 compcert.backend.Stackingproof <> m1 var
R69690:69699 compcert.common.Values <> val_inject ind
R69708:69712 compcert.backend.Stackingproof <> addr' var
R69703:69706 compcert.backend.Stackingproof <> addr var
R69701:69701 compcert.backend.Stackingproof <> j var
R69667:69676 compcert.common.Memory Mem inject def
R69682:69683 compcert.backend.Stackingproof <> m' var
R69680:69680 compcert.backend.Stackingproof <> m var
R69678:69678 compcert.backend.Stackingproof <> j var
R70061:70087 compcert.backend.Stackingproof <> agree_frame_parallel_stores thm
R70061:70087 compcert.backend.Stackingproof <> agree_frame_parallel_stores thm
prf 70147:70172 <> match_stack_change_extcall
R70584:70595 compcert.backend.Stackingproof <> match_stacks ind
R70623:70628 compcert.backend.Stackingproof <> bound' var
R70617:70621 compcert.backend.Stackingproof <> bound var
R70614:70615 compcert.backend.Stackingproof <> sg var
R70610:70612 compcert.backend.Stackingproof <> cs' var
R70607:70608 compcert.backend.Stackingproof <> cs var
R70603:70605 compcert.backend.Stackingproof <> m2' var
R70600:70601 compcert.backend.Stackingproof <> m2 var
R70597:70598 compcert.backend.Stackingproof <> j' var
R70548:70550 compcert.lib.Coqlib <> Ple def
R70560:70572 compcert.common.Memory Mem nextblock proj
R70574:70576 compcert.backend.Stackingproof <> m1' var
R70552:70557 compcert.backend.Stackingproof <> bound' var
R70516:70518 compcert.lib.Coqlib <> Ple def
R70527:70539 compcert.common.Memory Mem nextblock proj
R70541:70542 compcert.backend.Stackingproof <> m1 var
R70520:70524 compcert.backend.Stackingproof <> bound var
R70466:70477 compcert.backend.Stackingproof <> match_stacks ind
R70504:70509 compcert.backend.Stackingproof <> bound' var
R70498:70502 compcert.backend.Stackingproof <> bound var
R70495:70496 compcert.backend.Stackingproof <> sg var
R70491:70493 compcert.backend.Stackingproof <> cs' var
R70488:70489 compcert.backend.Stackingproof <> cs var
R70484:70486 compcert.backend.Stackingproof <> m1' var
R70481:70482 compcert.backend.Stackingproof <> m1 var
R70479:70479 compcert.backend.Stackingproof <> j var
R70379:70394 compcert.common.Memory Mem unchanged_on rec
R70424:70426 compcert.backend.Stackingproof <> m2' var
R70420:70422 compcert.backend.Stackingproof <> m1' var
R70397:70412 compcert.common.Events <> loc_out_of_reach def
R70416:70417 compcert.backend.Stackingproof <> m1 var
R70414:70414 compcert.backend.Stackingproof <> j var
R70345:70360 compcert.common.Events <> inject_separated def
R70370:70372 compcert.backend.Stackingproof <> m1' var
R70367:70368 compcert.backend.Stackingproof <> m1 var
R70364:70365 compcert.backend.Stackingproof <> j' var
R70362:70362 compcert.backend.Stackingproof <> j var
R70323:70333 compcert.common.Values <> inject_incr def
R70337:70338 compcert.backend.Stackingproof <> j' var
R70335:70335 compcert.backend.Stackingproof <> j var
R70276:70288 compcert.common.Events <> external_call def
R70314:70316 compcert.backend.Stackingproof <> m2' var
R70309:70312 compcert.backend.Stackingproof <> res' var
R70306:70307 compcert.backend.Stackingproof <> t' var
R70302:70304 compcert.backend.Stackingproof <> m1' var
R70296:70300 compcert.backend.Stackingproof <> args' var
R70293:70294 compcert.backend.Stackingproof <> PRESERVATION.ge var
R70290:70291 compcert.backend.Stackingproof <> ec var
R70234:70246 compcert.common.Events <> external_call def
R70268:70269 compcert.backend.Stackingproof <> m2 var
R70264:70266 compcert.backend.Stackingproof <> res var
R70262:70262 compcert.backend.Stackingproof <> t var
R70259:70260 compcert.backend.Stackingproof <> m1 var
R70254:70257 compcert.backend.Stackingproof <> args var
R70251:70252 compcert.backend.Stackingproof <> PRESERVATION.ge var
R70248:70249 compcert.backend.Stackingproof <> ec var
R70658:70683 compcert.backend.Stackingproof <> match_stacks_change_meminj thm
R70658:70683 compcert.backend.Stackingproof <> match_stacks_change_meminj thm
R70703:70733 compcert.backend.Stackingproof <> match_stacks_change_mem_extcall thm
R70703:70733 compcert.backend.Stackingproof <> match_stacks_change_mem_extcall thm
R70760:70784 compcert.common.Events <> external_call_valid_block def
R70760:70784 compcert.common.Events <> external_call_valid_block def
R70811:70832 compcert.common.Events <> external_call_max_perm def
R70811:70832 compcert.common.Events <> external_call_max_perm def
R70854:70865 Coq.PArith.BinPos <> Plt_le_trans syndef
R70854:70865 Coq.PArith.BinPos <> Plt_le_trans syndef
R70893:70917 compcert.common.Events <> external_call_valid_block def
R70893:70917 compcert.common.Events <> external_call_valid_block def
prf 70994:71016 <> match_stacks_change_sig
R71140:71151 compcert.backend.Stackingproof <> match_stacks ind
R71177:71182 compcert.backend.Stackingproof <> bound' var
R71171:71175 compcert.backend.Stackingproof <> bound var
R71167:71169 compcert.backend.Stackingproof <> sg1 var
R71163:71165 compcert.backend.Stackingproof <> cs' var
R71160:71161 compcert.backend.Stackingproof <> cs var
R71157:71158 compcert.backend.Stackingproof <> m' var
R71155:71155 compcert.backend.Stackingproof <> m var
R71153:71153 compcert.backend.Stackingproof <> j var
R71113:71129 compcert.backend.Conventions <> tailcall_possible def
R71131:71133 compcert.backend.Stackingproof <> sg1 var
R71065:71076 compcert.backend.Stackingproof <> match_stacks ind
R71101:71106 compcert.backend.Stackingproof <> bound' var
R71095:71099 compcert.backend.Stackingproof <> bound var
R71092:71093 compcert.backend.Stackingproof <> sg var
R71088:71090 compcert.backend.Stackingproof <> cs' var
R71085:71086 compcert.backend.Stackingproof <> cs var
R71082:71083 compcert.backend.Stackingproof <> m' var
R71080:71080 compcert.backend.Stackingproof <> m var
R71078:71078 compcert.backend.Stackingproof <> j var
prf 71391:71413 <> match_stacks_globalenvs
R71506:71512 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71515:71516 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R71517:71532 compcert.backend.Stackingproof <> match_globalenvs ind
R71536:71537 compcert.backend.Stackingproof <> hi var
R71534:71534 compcert.backend.Stackingproof <> j var
R71458:71469 compcert.backend.Stackingproof <> match_stacks ind
R71494:71499 compcert.backend.Stackingproof <> bound' var
R71488:71492 compcert.backend.Stackingproof <> bound var
R71485:71486 compcert.backend.Stackingproof <> sg var
R71481:71483 compcert.backend.Stackingproof <> cs' var
R71478:71479 compcert.backend.Stackingproof <> cs var
R71475:71476 compcert.backend.Stackingproof <> m' var
R71473:71473 compcert.backend.Stackingproof <> m var
R71471:71471 compcert.backend.Stackingproof <> j var
prf 71597:71626 <> match_stacks_preserves_globals
R71719:71742 compcert.common.Events <> meminj_preserves_globals def
R71747:71747 compcert.backend.Stackingproof <> j var
R71744:71745 compcert.backend.Stackingproof <> PRESERVATION.ge var
R71671:71682 compcert.backend.Stackingproof <> match_stacks ind
R71707:71712 compcert.backend.Stackingproof <> bound' var
R71701:71705 compcert.backend.Stackingproof <> bound var
R71698:71699 compcert.backend.Stackingproof <> sg var
R71694:71696 compcert.backend.Stackingproof <> cs' var
R71691:71692 compcert.backend.Stackingproof <> cs var
R71688:71689 compcert.backend.Stackingproof <> m' var
R71686:71686 compcert.backend.Stackingproof <> m var
R71684:71684 compcert.backend.Stackingproof <> j var
R71775:71797 compcert.backend.Stackingproof <> match_stacks_globalenvs thm
prf 71944:71963 <> match_stacks_type_sp
R72056:72067 compcert.common.Values Val has_type def
R72085:72088 compcert.common.AST <> Tint constr
R72070:72078 compcert.backend.Mach <> parent_sp def
R72080:72082 compcert.backend.Stackingproof <> cs' var
R72008:72019 compcert.backend.Stackingproof <> match_stacks ind
R72044:72049 compcert.backend.Stackingproof <> bound' var
R72038:72042 compcert.backend.Stackingproof <> bound var
R72035:72036 compcert.backend.Stackingproof <> sg var
R72031:72033 compcert.backend.Stackingproof <> cs' var
R72028:72029 compcert.backend.Stackingproof <> cs var
R72025:72026 compcert.backend.Stackingproof <> m' var
R72023:72023 compcert.backend.Stackingproof <> m var
R72021:72021 compcert.backend.Stackingproof <> j var
prf 72138:72162 <> match_stacks_type_retaddr
R72255:72266 compcert.common.Values Val has_type def
R72284:72287 compcert.common.AST <> Tint constr
R72269:72277 compcert.backend.Mach <> parent_ra def
R72279:72281 compcert.backend.Stackingproof <> cs' var
R72207:72218 compcert.backend.Stackingproof <> match_stacks ind
R72243:72248 compcert.backend.Stackingproof <> bound' var
R72237:72241 compcert.backend.Stackingproof <> bound var
R72234:72235 compcert.backend.Stackingproof <> sg var
R72230:72232 compcert.backend.Stackingproof <> cs' var
R72227:72228 compcert.backend.Stackingproof <> cs var
R72224:72225 compcert.backend.Stackingproof <> m' var
R72222:72222 compcert.backend.Stackingproof <> m var
R72220:72220 compcert.backend.Stackingproof <> j var
sec 72450:72455 PRESERVATION LABELS
prf 72466:72486 <> find_label_fold_right
R72531:72539 compcert.backend.Mach <> code def
R72518:72526 compcert.backend.Mach <> code def
R72513:72513 compcert.backend.Stackingproof <> A var
R72634:72637 Coq.Init.Datatypes <> list ind
R72639:72639 compcert.backend.Stackingproof <> A var
R72694:72696 Coq.Init.Logic <> :type_scope:x_'='_x not
R72647:72661 compcert.backend.Mach <> find_label def
R72668:72682 Coq.Lists.List <> fold_right def
R72689:72692 compcert.backend.Stackingproof <> args var
R72687:72687 compcert.backend.Stackingproof <> k var
R72684:72685 compcert.backend.Stackingproof <> fn var
R72663:72665 compcert.backend.Stackingproof <> lbl var
R72697:72711 compcert.backend.Mach <> find_label def
R72717:72717 compcert.backend.Stackingproof <> k var
R72713:72715 compcert.backend.Stackingproof <> lbl var
R72590:72592 Coq.Init.Logic <> :type_scope:x_'='_x not
R72562:72576 compcert.backend.Mach <> find_label def
R72583:72584 compcert.backend.Stackingproof <> fn var
R72588:72588 compcert.backend.Stackingproof <> k var
R72586:72586 compcert.backend.Stackingproof <> x var
R72578:72580 compcert.backend.Stackingproof <> lbl var
R72593:72607 compcert.backend.Mach <> find_label def
R72613:72613 compcert.backend.Stackingproof <> k var
R72609:72611 compcert.backend.Stackingproof <> lbl var
prf 72799:72825 <> find_label_save_callee_save
R72892:72894 Coq.Init.Logic <> :type_scope:x_'='_x not
R72849:72863 compcert.backend.Mach <> find_label def
R72870:72885 compcert.backend.Stacking <> save_callee_save def
R72890:72890 compcert.backend.Stackingproof <> k var
R72887:72888 compcert.backend.Stackingproof <> fe var
R72865:72867 compcert.backend.Stackingproof <> lbl var
R72895:72909 compcert.backend.Mach <> find_label def
R72915:72915 compcert.backend.Stackingproof <> k var
R72911:72913 compcert.backend.Stackingproof <> lbl var
R72942:72957 compcert.backend.Stacking <> save_callee_save def
R72960:72979 compcert.backend.Stacking <> save_callee_save_int def
R72982:73003 compcert.backend.Stacking <> save_callee_save_float def
R73006:73026 compcert.backend.Stacking <> save_callee_save_regs def
R73046:73066 compcert.backend.Stackingproof <> find_label_fold_right thm
R73046:73066 compcert.backend.Stackingproof <> find_label_fold_right thm
R73046:73066 compcert.backend.Stackingproof <> find_label_fold_right thm
R73046:73066 compcert.backend.Stackingproof <> find_label_fold_right thm
R73046:73066 compcert.backend.Stackingproof <> find_label_fold_right thm
R73046:73066 compcert.backend.Stackingproof <> find_label_fold_right thm
R73099:73118 compcert.backend.Stacking <> save_callee_save_reg def
R73130:73132 compcert.lib.Coqlib <> zlt def
R73163:73186 compcert.ia32.Stacklayout <> fe_num_float_callee_save proj
R73135:73157 compcert.ia32.Conventions1 <> index_float_callee_save def
R73130:73132 compcert.lib.Coqlib <> zlt def
R73163:73186 compcert.ia32.Stacklayout <> fe_num_float_callee_save proj
R73135:73157 compcert.ia32.Conventions1 <> index_float_callee_save def
R73233:73252 compcert.backend.Stacking <> save_callee_save_reg def
R73265:73267 compcert.lib.Coqlib <> zlt def
R73296:73317 compcert.ia32.Stacklayout <> fe_num_int_callee_save proj
R73270:73290 compcert.ia32.Conventions1 <> index_int_callee_save def
R73265:73267 compcert.lib.Coqlib <> zlt def
R73296:73317 compcert.ia32.Stacklayout <> fe_num_int_callee_save proj
R73270:73290 compcert.ia32.Conventions1 <> index_int_callee_save def
prf 73360:73389 <> find_label_restore_callee_save
R73459:73461 Coq.Init.Logic <> :type_scope:x_'='_x not
R73413:73427 compcert.backend.Mach <> find_label def
R73434:73452 compcert.backend.Stacking <> restore_callee_save def
R73457:73457 compcert.backend.Stackingproof <> k var
R73454:73455 compcert.backend.Stackingproof <> fe var
R73429:73431 compcert.backend.Stackingproof <> lbl var
R73462:73476 compcert.backend.Mach <> find_label def
R73482:73482 compcert.backend.Stackingproof <> k var
R73478:73480 compcert.backend.Stackingproof <> lbl var
R73509:73527 compcert.backend.Stacking <> restore_callee_save def
R73530:73552 compcert.backend.Stacking <> restore_callee_save_int def
R73555:73579 compcert.backend.Stacking <> restore_callee_save_float def
R73582:73605 compcert.backend.Stacking <> restore_callee_save_regs def
R73625:73645 compcert.backend.Stackingproof <> find_label_fold_right thm
R73625:73645 compcert.backend.Stackingproof <> find_label_fold_right thm
R73625:73645 compcert.backend.Stackingproof <> find_label_fold_right thm
R73625:73645 compcert.backend.Stackingproof <> find_label_fold_right thm
R73625:73645 compcert.backend.Stackingproof <> find_label_fold_right thm
R73625:73645 compcert.backend.Stackingproof <> find_label_fold_right thm
R73678:73700 compcert.backend.Stacking <> restore_callee_save_reg def
R73712:73714 compcert.lib.Coqlib <> zlt def
R73745:73768 compcert.ia32.Stacklayout <> fe_num_float_callee_save proj
R73717:73739 compcert.ia32.Conventions1 <> index_float_callee_save def
R73712:73714 compcert.lib.Coqlib <> zlt def
R73745:73768 compcert.ia32.Stacklayout <> fe_num_float_callee_save proj
R73717:73739 compcert.ia32.Conventions1 <> index_float_callee_save def
R73815:73837 compcert.backend.Stacking <> restore_callee_save_reg def
R73849:73851 compcert.lib.Coqlib <> zlt def
R73880:73901 compcert.ia32.Stacklayout <> fe_num_int_callee_save proj
R73854:73874 compcert.ia32.Conventions1 <> index_int_callee_save def
R73849:73851 compcert.lib.Coqlib <> zlt def
R73880:73901 compcert.ia32.Stacklayout <> fe_num_int_callee_save proj
R73854:73874 compcert.ia32.Conventions1 <> index_int_callee_save def
prf 73943:73956 <> transl_code_eq
R73999:74001 Coq.Init.Logic <> :type_scope:x_'='_x not
R73976:73986 compcert.backend.Stacking <> transl_code def
R73993:73996 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R73992:73992 compcert.backend.Stackingproof <> i var
R73997:73997 compcert.backend.Stackingproof <> c var
R73988:73989 compcert.backend.Stackingproof <> fe var
R74002:74013 compcert.backend.Stacking <> transl_instr def
R74021:74031 compcert.backend.Stacking <> transl_code def
R74036:74036 compcert.backend.Stackingproof <> c var
R74033:74034 compcert.backend.Stackingproof <> fe var
R74018:74018 compcert.backend.Stackingproof <> i var
R74015:74016 compcert.backend.Stackingproof <> fe var
R74056:74066 compcert.backend.Stacking <> transl_code def
R74085:74102 compcert.lib.Coqlib <> list_fold_right_eq thm
R74085:74102 compcert.lib.Coqlib <> list_fold_right_eq thm
prf 74123:74144 <> find_label_transl_code
R74206:74212 Coq.Init.Logic <> :type_scope:x_'='_x not
R74168:74182 compcert.backend.Mach <> find_label def
R74189:74199 compcert.backend.Stacking <> transl_code def
R74204:74204 compcert.backend.Stackingproof <> c var
R74201:74202 compcert.backend.Stackingproof <> fe var
R74184:74186 compcert.backend.Stackingproof <> lbl var
R74213:74222 compcert.lib.Coqlib <> option_map def
R74242:74258 compcert.backend.Linear <> find_label def
R74264:74264 compcert.backend.Stackingproof <> c var
R74260:74262 compcert.backend.Stackingproof <> lbl var
R74225:74235 compcert.backend.Stacking <> transl_code def
R74237:74238 compcert.backend.Stackingproof <> fe var
R74323:74336 compcert.backend.Stackingproof <> transl_code_eq thm
R74323:74336 compcert.backend.Stackingproof <> transl_code_eq thm
R74361:74372 compcert.backend.Stacking <> transl_instr def
R74445:74474 compcert.backend.Stackingproof <> find_label_restore_callee_save thm
R74445:74474 compcert.backend.Stackingproof <> find_label_restore_callee_save thm
R74498:74500 compcert.lib.Coqlib <> peq def
R74498:74500 compcert.lib.Coqlib <> peq def
R74546:74575 compcert.backend.Stackingproof <> find_label_restore_callee_save thm
R74546:74575 compcert.backend.Stackingproof <> find_label_restore_callee_save thm
prf 74596:74612 <> transl_find_label
R74761:74768 Coq.Init.Logic <> :type_scope:x_'='_x not
R74724:74738 compcert.backend.Mach <> find_label def
R74748:74759 compcert.backend.Mach <> fn_code proj
R74744:74745 compcert.backend.Stackingproof <> tf var
R74740:74742 compcert.backend.Stackingproof <> lbl var
R74769:74772 Coq.Init.Datatypes <> Some constr
R74775:74785 compcert.backend.Stacking <> transl_code def
R74818:74818 compcert.backend.Stackingproof <> c var
R74788:74795 compcert.ia32.Stacklayout <> make_env def
R74798:74812 compcert.backend.Bounds <> function_bounds def
R74814:74814 compcert.backend.Stackingproof <> f var
R74709:74711 Coq.Init.Logic <> :type_scope:x_'='_x not
R74669:74685 compcert.backend.Linear <> find_label def
R74694:74707 compcert.backend.Linear <> fn_code proj
R74691:74691 compcert.backend.Stackingproof <> f var
R74687:74689 compcert.backend.Stackingproof <> lbl var
R74712:74715 Coq.Init.Datatypes <> Some constr
R74717:74717 compcert.backend.Stackingproof <> c var
R74655:74657 Coq.Init.Logic <> :type_scope:x_'='_x not
R74638:74652 compcert.backend.Stacking <> transf_function def
R74654:74654 compcert.backend.Stackingproof <> f var
R74658:74659 compcert.common.Errors <> OK constr
R74661:74662 compcert.backend.Stackingproof <> tf var
R74848:74869 compcert.backend.Stackingproof <> unfold_transf_function thm
R74848:74869 compcert.backend.Stackingproof <> unfold_transf_function thm
R74897:74907 compcert.backend.Stacking <> transl_body def
R74918:74944 compcert.backend.Stackingproof <> find_label_save_callee_save thm
R74918:74944 compcert.backend.Stackingproof <> find_label_save_callee_save thm
R74957:74978 compcert.backend.Stackingproof <> find_label_transl_code thm
R74957:74978 compcert.backend.Stackingproof <> find_label_transl_code thm
R75016:75021 compcert.backend.Stackingproof PRESERVATION.LABELS <> sec
prf 75081:75095 <> find_label_tail
R75157:75163 compcert.lib.Coqlib <> is_tail ind
R75168:75168 compcert.backend.Stackingproof <> c var
R75165:75166 compcert.backend.Stackingproof <> c' var
R75143:75145 Coq.Init.Logic <> :type_scope:x_'='_x not
R75120:75136 compcert.backend.Linear <> find_label def
R75142:75142 compcert.backend.Stackingproof <> c var
R75138:75140 compcert.backend.Stackingproof <> lbl var
R75146:75149 Coq.Init.Datatypes <> Some constr
R75151:75152 compcert.backend.Stackingproof <> c' var
R75242:75256 compcert.backend.Linear <> is_label def
R75242:75256 compcert.backend.Linear <> is_label def
prf 75400:75428 <> is_tail_save_callee_save_regs
R75476:75482 compcert.lib.Coqlib <> is_tail ind
R75487:75507 compcert.backend.Stacking <> save_callee_save_regs def
R75540:75540 compcert.backend.Stackingproof <> k var
R75536:75538 compcert.backend.Stackingproof <> csl var
R75533:75534 compcert.backend.Stackingproof <> fe var
R75530:75531 compcert.backend.Stackingproof <> ty var
R75522:75528 compcert.backend.Stackingproof <> mkindex var
R75515:75520 compcert.backend.Stackingproof <> number var
R75509:75513 compcert.backend.Stackingproof <> bound var
R75484:75484 compcert.backend.Stackingproof <> k var
R75610:75629 compcert.backend.Stacking <> save_callee_save_reg def
R75642:75644 compcert.lib.Coqlib <> zlt def
R75642:75644 compcert.lib.Coqlib <> zlt def
prf 75710:75733 <> is_tail_save_callee_save
R75753:75759 compcert.lib.Coqlib <> is_tail ind
R75764:75779 compcert.backend.Stacking <> save_callee_save def
R75784:75784 compcert.backend.Stackingproof <> k var
R75781:75782 compcert.backend.Stackingproof <> fe var
R75761:75761 compcert.backend.Stackingproof <> k var
R75812:75827 compcert.backend.Stacking <> save_callee_save def
R75830:75849 compcert.backend.Stacking <> save_callee_save_int def
R75852:75873 compcert.backend.Stacking <> save_callee_save_float def
R75885:75897 compcert.lib.Coqlib <> is_tail_trans thm
R75906:75934 compcert.backend.Stackingproof <> is_tail_save_callee_save_regs thm
R75885:75897 compcert.lib.Coqlib <> is_tail_trans thm
R75906:75934 compcert.backend.Stackingproof <> is_tail_save_callee_save_regs thm
R75906:75934 compcert.backend.Stackingproof <> is_tail_save_callee_save_regs thm
prf 75949:75980 <> is_tail_restore_callee_save_regs
R76028:76034 compcert.lib.Coqlib <> is_tail ind
R76039:76062 compcert.backend.Stacking <> restore_callee_save_regs def
R76095:76095 compcert.backend.Stackingproof <> k var
R76091:76093 compcert.backend.Stackingproof <> csl var
R76088:76089 compcert.backend.Stackingproof <> fe var
R76085:76086 compcert.backend.Stackingproof <> ty var
R76077:76083 compcert.backend.Stackingproof <> mkindex var
R76070:76075 compcert.backend.Stackingproof <> number var
R76064:76068 compcert.backend.Stackingproof <> bound var
R76036:76036 compcert.backend.Stackingproof <> k var
R76165:76187 compcert.backend.Stacking <> restore_callee_save_reg def
R76200:76202 compcert.lib.Coqlib <> zlt def
R76200:76202 compcert.lib.Coqlib <> zlt def
prf 76268:76294 <> is_tail_restore_callee_save
R76314:76320 compcert.lib.Coqlib <> is_tail ind
R76325:76343 compcert.backend.Stacking <> restore_callee_save def
R76348:76348 compcert.backend.Stackingproof <> k var
R76345:76346 compcert.backend.Stackingproof <> fe var
R76322:76322 compcert.backend.Stackingproof <> k var
R76376:76394 compcert.backend.Stacking <> restore_callee_save def
R76397:76419 compcert.backend.Stacking <> restore_callee_save_int def
R76422:76446 compcert.backend.Stacking <> restore_callee_save_float def
R76458:76470 compcert.lib.Coqlib <> is_tail_trans thm
R76479:76510 compcert.backend.Stackingproof <> is_tail_restore_callee_save_regs thm
R76458:76470 compcert.lib.Coqlib <> is_tail_trans thm
R76479:76510 compcert.backend.Stackingproof <> is_tail_restore_callee_save_regs thm
R76479:76510 compcert.backend.Stackingproof <> is_tail_restore_callee_save_regs thm
prf 76525:76544 <> is_tail_transl_instr
R76566:76572 compcert.lib.Coqlib <> is_tail ind
R76577:76588 compcert.backend.Stacking <> transl_instr def
R76595:76595 compcert.backend.Stackingproof <> k var
R76593:76593 compcert.backend.Stackingproof <> i var
R76590:76591 compcert.backend.Stackingproof <> fe var
R76574:76574 compcert.backend.Stackingproof <> k var
R76635:76646 compcert.backend.Stacking <> transl_instr def
R76740:76752 compcert.lib.Coqlib <> is_tail_trans thm
R76740:76752 compcert.lib.Coqlib <> is_tail_trans thm
R76764:76790 compcert.backend.Stackingproof <> is_tail_restore_callee_save thm
R76764:76790 compcert.backend.Stackingproof <> is_tail_restore_callee_save thm
R76820:76832 compcert.lib.Coqlib <> is_tail_trans thm
R76820:76832 compcert.lib.Coqlib <> is_tail_trans thm
R76844:76870 compcert.backend.Stackingproof <> is_tail_restore_callee_save thm
R76844:76870 compcert.backend.Stackingproof <> is_tail_restore_callee_save thm
prf 76903:76921 <> is_tail_transl_code
R76960:76966 compcert.lib.Coqlib <> is_tail ind
R76989:76999 compcert.backend.Stacking <> transl_code def
R77004:77005 compcert.backend.Stackingproof <> c2 var
R77001:77002 compcert.backend.Stackingproof <> fe var
R76969:76979 compcert.backend.Stacking <> transl_code def
R76984:76985 compcert.backend.Stackingproof <> c1 var
R76981:76982 compcert.backend.Stackingproof <> fe var
R76943:76949 compcert.lib.Coqlib <> is_tail ind
R76954:76955 compcert.backend.Stackingproof <> c2 var
R76951:76952 compcert.backend.Stackingproof <> c1 var
R77066:77079 compcert.backend.Stackingproof <> transl_code_eq thm
R77066:77079 compcert.backend.Stackingproof <> transl_code_eq thm
R77092:77104 compcert.lib.Coqlib <> is_tail_trans thm
R77092:77104 compcert.lib.Coqlib <> is_tail_trans thm
R77120:77139 compcert.backend.Stackingproof <> is_tail_transl_instr thm
R77120:77139 compcert.backend.Stackingproof <> is_tail_transl_instr thm
prf 77154:77176 <> is_tail_transf_function
R77263:77269 compcert.lib.Coqlib <> is_tail ind
R77319:77325 compcert.backend.Mach <> fn_code proj
R77327:77328 compcert.backend.Stackingproof <> tf var
R77272:77282 compcert.backend.Stacking <> transl_code def
R77315:77315 compcert.backend.Stackingproof <> c var
R77285:77292 compcert.ia32.Stacklayout <> make_env def
R77295:77309 compcert.backend.Bounds <> function_bounds def
R77311:77311 compcert.backend.Stackingproof <> f var
R77229:77235 compcert.lib.Coqlib <> is_tail ind
R77240:77253 compcert.backend.Linear <> fn_code proj
R77255:77255 compcert.backend.Stackingproof <> f var
R77237:77237 compcert.backend.Stackingproof <> c var
R77215:77217 Coq.Init.Logic <> :type_scope:x_'='_x not
R77198:77212 compcert.backend.Stacking <> transf_function def
R77214:77214 compcert.backend.Stackingproof <> f var
R77218:77219 compcert.common.Errors <> OK constr
R77221:77222 compcert.backend.Stackingproof <> tf var
R77358:77379 compcert.backend.Stackingproof <> unfold_transf_function thm
R77358:77379 compcert.backend.Stackingproof <> unfold_transf_function thm
R77406:77416 compcert.backend.Stacking <> transl_body def
R77426:77438 compcert.lib.Coqlib <> is_tail_trans thm
R77426:77438 compcert.lib.Coqlib <> is_tail_trans thm
R77450:77473 compcert.backend.Stackingproof <> is_tail_save_callee_save thm
R77450:77473 compcert.backend.Stackingproof <> is_tail_save_callee_save thm
R77484:77502 compcert.backend.Stackingproof <> is_tail_transl_code thm
R77484:77502 compcert.backend.Stackingproof <> is_tail_transl_code thm
prf 77623:77639 <> symbols_preserved
R77678:77680 Coq.Init.Logic <> :type_scope:x_'='_x not
R77655:77670 compcert.common.Globalenvs Genv find_symbol def
R77676:77677 compcert.backend.Stackingproof <> id var
R77672:77674 compcert.backend.Stackingproof <> PRESERVATION.tge var
R77681:77696 compcert.common.Globalenvs Genv find_symbol def
R77701:77702 compcert.backend.Stackingproof <> id var
R77698:77699 compcert.backend.Stackingproof <> PRESERVATION.ge var
R77729:77730 compcert.backend.Stackingproof <> ge vardef
R77733:77735 compcert.backend.Stackingproof <> tge vardef
R77784:77796 compcert.backend.Stacking <> transf_fundef def
R77747:77777 compcert.common.Globalenvs Genv find_symbol_transf_partial thm
R77784:77796 compcert.backend.Stacking <> transf_fundef def
R77747:77777 compcert.common.Globalenvs Genv find_symbol_transf_partial thm
R77807:77812 compcert.backend.Stackingproof <> PRESERVATION.TRANSF var
R77807:77812 compcert.backend.Stackingproof <> PRESERVATION.TRANSF var
prf 77828:77844 <> varinfo_preserved
R77883:77885 Coq.Init.Logic <> :type_scope:x_'='_x not
R77859:77876 compcert.common.Globalenvs Genv find_var_info def
R77882:77882 compcert.backend.Stackingproof <> b var
R77878:77880 compcert.backend.Stackingproof <> PRESERVATION.tge var
R77886:77903 compcert.common.Globalenvs Genv find_var_info def
R77908:77908 compcert.backend.Stackingproof <> b var
R77905:77906 compcert.backend.Stackingproof <> PRESERVATION.ge var
R77935:77936 compcert.backend.Stackingproof <> ge vardef
R77939:77941 compcert.backend.Stackingproof <> tge vardef
R77992:78004 compcert.backend.Stacking <> transf_fundef def
R77953:77985 compcert.common.Globalenvs Genv find_var_info_transf_partial thm
R77992:78004 compcert.backend.Stacking <> transf_fundef def
R77953:77985 compcert.common.Globalenvs Genv find_var_info_transf_partial thm
R78015:78020 compcert.backend.Stackingproof <> PRESERVATION.TRANSF var
R78015:78020 compcert.backend.Stackingproof <> PRESERVATION.TRANSF var
prf 78036:78055 <> functions_translated
R78109:78115 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R78118:78121 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R78153:78156 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78143:78145 Coq.Init.Logic <> :type_scope:x_'='_x not
R78122:78136 compcert.common.Globalenvs Genv find_funct def
R78142:78142 compcert.backend.Stackingproof <> v var
R78138:78140 compcert.backend.Stackingproof <> PRESERVATION.tge var
R78146:78149 Coq.Init.Datatypes <> Some constr
R78151:78152 compcert.backend.Stackingproof <> tf var
R78172:78174 Coq.Init.Logic <> :type_scope:x_'='_x not
R78157:78169 compcert.backend.Stacking <> transf_fundef def
R78171:78171 compcert.backend.Stackingproof <> f var
R78175:78176 compcert.common.Errors <> OK constr
R78178:78179 compcert.backend.Stackingproof <> tf var
R78094:78096 Coq.Init.Logic <> :type_scope:x_'='_x not
R78074:78088 compcert.common.Globalenvs Genv find_funct def
R78093:78093 compcert.backend.Stackingproof <> v var
R78090:78091 compcert.backend.Stackingproof <> PRESERVATION.ge var
R78097:78100 Coq.Init.Datatypes <> Some constr
R78102:78102 compcert.backend.Stackingproof <> f var
R78191:78220 compcert.common.Globalenvs Genv find_funct_transf_partial thm
R78238:78243 compcert.backend.Stackingproof <> PRESERVATION.TRANSF var
R78222:78234 compcert.backend.Stacking <> transf_fundef def
prf 78254:78276 <> function_ptr_translated
R78334:78340 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R78343:78346 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R78382:78385 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78372:78374 Coq.Init.Logic <> :type_scope:x_'='_x not
R78347:78365 compcert.common.Globalenvs Genv find_funct_ptr def
R78371:78371 compcert.backend.Stackingproof <> v var
R78367:78369 compcert.backend.Stackingproof <> PRESERVATION.tge var
R78375:78378 Coq.Init.Datatypes <> Some constr
R78380:78381 compcert.backend.Stackingproof <> tf var
R78401:78403 Coq.Init.Logic <> :type_scope:x_'='_x not
R78386:78398 compcert.backend.Stacking <> transf_fundef def
R78400:78400 compcert.backend.Stackingproof <> f var
R78404:78405 compcert.common.Errors <> OK constr
R78407:78408 compcert.backend.Stackingproof <> tf var
R78319:78321 Coq.Init.Logic <> :type_scope:x_'='_x not
R78295:78313 compcert.common.Globalenvs Genv find_funct_ptr def
R78318:78318 compcert.backend.Stackingproof <> v var
R78315:78316 compcert.backend.Stackingproof <> PRESERVATION.ge var
R78322:78325 Coq.Init.Datatypes <> Some constr
R78327:78327 compcert.backend.Stackingproof <> f var
R78420:78453 compcert.common.Globalenvs Genv find_funct_ptr_transf_partial thm
R78471:78476 compcert.backend.Stackingproof <> PRESERVATION.TRANSF var
R78455:78467 compcert.backend.Stacking <> transf_fundef def
prf 78487:78499 <> sig_preserved
R78558:78560 Coq.Init.Logic <> :type_scope:x_'='_x not
R78544:78554 compcert.backend.Mach <> funsig def
R78556:78557 compcert.backend.Stackingproof <> tf var
R78561:78573 compcert.backend.Linear <> funsig def
R78575:78575 compcert.backend.Stackingproof <> f var
R78532:78534 Coq.Init.Logic <> :type_scope:x_'='_x not
R78517:78529 compcert.backend.Stacking <> transf_fundef def
R78531:78531 compcert.backend.Stackingproof <> f var
R78535:78536 compcert.common.Errors <> OK constr
R78538:78539 compcert.backend.Stackingproof <> tf var
R78611:78623 compcert.backend.Stacking <> transf_fundef def
R78626:78646 compcert.common.AST <> transf_partial_fundef def
R78694:78715 compcert.backend.Stackingproof <> unfold_transf_function thm
R78694:78715 compcert.backend.Stackingproof <> unfold_transf_function thm
prf 78753:78776 <> find_function_translated
R78950:78956 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R78959:78960 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R78961:78967 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R78970:78976 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R79015:79020 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R79005:79007 Coq.Init.Logic <> :type_scope:x_'='_x not
R78977:78993 compcert.backend.Mach <> find_function_ptr def
R79003:79004 compcert.backend.Stackingproof <> rs var
R78999:79001 compcert.backend.Stackingproof <> ros var
R78995:78997 compcert.backend.Stackingproof <> PRESERVATION.tge var
R79008:79011 Coq.Init.Datatypes <> Some constr
R79013:79014 compcert.backend.Stackingproof <> bf var
R79057:79062 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R79047:79049 Coq.Init.Logic <> :type_scope:x_'='_x not
R79021:79039 compcert.common.Globalenvs Genv find_funct_ptr def
R79045:79046 compcert.backend.Stackingproof <> bf var
R79041:79043 compcert.backend.Stackingproof <> PRESERVATION.tge var
R79050:79053 Coq.Init.Datatypes <> Some constr
R79055:79056 compcert.backend.Stackingproof <> tf var
R79078:79080 Coq.Init.Logic <> :type_scope:x_'='_x not
R79063:79075 compcert.backend.Stacking <> transf_fundef def
R79077:79077 compcert.backend.Stackingproof <> f var
R79081:79082 compcert.common.Errors <> OK constr
R79084:79085 compcert.backend.Stackingproof <> tf var
R78935:78937 Coq.Init.Logic <> :type_scope:x_'='_x not
R78905:78924 compcert.backend.Linear <> find_function def
R78933:78934 compcert.backend.Stackingproof <> ls var
R78929:78931 compcert.backend.Stackingproof <> ros var
R78926:78927 compcert.backend.Stackingproof <> PRESERVATION.ge var
R78938:78941 Coq.Init.Datatypes <> Some constr
R78943:78943 compcert.backend.Stackingproof <> f var
R78857:78868 compcert.backend.Stackingproof <> match_stacks ind
R78893:78898 compcert.backend.Stackingproof <> bound' var
R78887:78891 compcert.backend.Stackingproof <> bound var
R78884:78885 compcert.backend.Stackingproof <> sg var
R78880:78882 compcert.backend.Stackingproof <> cs' var
R78877:78878 compcert.backend.Stackingproof <> cs var
R78874:78875 compcert.backend.Stackingproof <> m' var
R78872:78872 compcert.backend.Stackingproof <> m var
R78870:78870 compcert.backend.Stackingproof <> j var
R78833:78842 compcert.backend.Stackingproof <> agree_regs def
R78849:78850 compcert.backend.Stackingproof <> rs var
R78846:78847 compcert.backend.Stackingproof <> ls var
R78844:78844 compcert.backend.Stackingproof <> j var
R79140:79162 compcert.backend.Stackingproof <> match_stacks_globalenvs thm
R79228:79246 compcert.common.Globalenvs Genv find_funct_inv thm
R79300:79329 compcert.common.Globalenvs Genv find_funct_find_funct_ptr thm
R79300:79329 compcert.common.Globalenvs Genv find_funct_find_funct_ptr thm
R79349:79371 compcert.backend.Stackingproof <> function_ptr_translated thm
R79588:79603 compcert.common.Globalenvs Genv find_symbol def
R79605:79606 compcert.backend.Stackingproof <> PRESERVATION.ge var
R79588:79603 compcert.common.Globalenvs Genv find_symbol def
R79605:79606 compcert.backend.Stackingproof <> PRESERVATION.ge var
R79655:79677 compcert.backend.Stackingproof <> function_ptr_translated thm
R79760:79776 compcert.backend.Stackingproof <> symbols_preserved thm
R79760:79776 compcert.backend.Stackingproof <> symbols_preserved thm
sec 79858:79875 PRESERVATION EXTERNAL_ARGUMENTS
var 79888:79888 PRESERVATION.EXTERNAL_ARGUMENTS j
R79891:79896 compcert.common.Values <> meminj def
var 79909:79909 PRESERVATION.EXTERNAL_ARGUMENTS m
var 79911:79912 PRESERVATION.EXTERNAL_ARGUMENTS m'
R79915:79917 compcert.common.Memory <> mem syndef
var 79929:79930 PRESERVATION.EXTERNAL_ARGUMENTS cs
R79933:79936 Coq.Init.Datatypes <> list ind
R79938:79954 compcert.backend.Linear <> stackframe ind
var 79966:79968 PRESERVATION.EXTERNAL_ARGUMENTS cs'
R79971:79974 Coq.Init.Datatypes <> list ind
R79976:79985 compcert.backend.Mach <> stackframe ind
var 79997:79998 PRESERVATION.EXTERNAL_ARGUMENTS sg
R80001:80009 compcert.common.AST <> signature rec
var 80022:80026 PRESERVATION.EXTERNAL_ARGUMENTS bound
var 80028:80033 PRESERVATION.EXTERNAL_ARGUMENTS bound'
R80036:80040 compcert.common.Values <> block def
var 80054:80055 PRESERVATION.EXTERNAL_ARGUMENTS MS
R80058:80069 compcert.backend.Stackingproof <> match_stacks ind
R80094:80099 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.bound' var
R80088:80092 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.bound var
R80085:80086 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.sg var
R80081:80083 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.cs' var
R80078:80079 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.cs var
R80075:80076 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.m' var
R80073:80073 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.m var
R80071:80071 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.j var
var 80111:80112 PRESERVATION.EXTERNAL_ARGUMENTS ls
R80115:80120 compcert.backend.Linear <> locset def
var 80132:80133 PRESERVATION.EXTERNAL_ARGUMENTS rs
R80136:80141 compcert.backend.Mach <> regset def
var 80155:80157 PRESERVATION.EXTERNAL_ARGUMENTS AGR
R80160:80169 compcert.backend.Stackingproof <> agree_regs def
R80176:80177 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.rs var
R80173:80174 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.ls var
R80171:80171 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.j var
var 80191:80194 PRESERVATION.EXTERNAL_ARGUMENTS AGCS
R80197:80213 compcert.backend.Stackingproof <> agree_callee_save def
R80219:80231 compcert.backend.Linear <> parent_locset def
R80233:80234 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.cs var
R80215:80216 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.ls var
prf 80245:80268 <> transl_external_argument
R80314:80320 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R80322:80323 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R80361:80364 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R80324:80334 compcert.backend.Mach <> extcall_arg ind
R80360:80360 compcert.backend.Stackingproof <> v var
R80358:80358 compcert.backend.Stackingproof <> l var
R80343:80351 compcert.backend.Mach <> parent_sp def
R80353:80355 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.cs' var
R80339:80340 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.m' var
R80336:80337 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.rs var
R80365:80374 compcert.common.Values <> val_inject ind
R80385:80385 compcert.backend.Stackingproof <> v var
R80379:80380 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.ls var
R80382:80382 compcert.backend.Stackingproof <> l var
R80376:80376 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.j var
R80285:80286 Coq.Lists.List <> In def
R80291:80303 compcert.ia32.Conventions1 <> loc_arguments def
R80305:80306 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.sg var
R80288:80288 compcert.backend.Stackingproof <> l var
R80415:80437 compcert.ia32.Conventions1 <> loc_argument_acceptable def
R80415:80437 compcert.ia32.Conventions1 <> loc_argument_acceptable def
R80479:80480 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.sg var
R80449:80472 compcert.ia32.Conventions1 <> loc_arguments_acceptable thm
R80479:80480 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.sg var
R80449:80472 compcert.ia32.Conventions1 <> loc_arguments_acceptable thm
R80524:80525 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.rs var
R80524:80525 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.rs var
R80598:80599 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.MS var
R80628:80636 compcert.backend.Mach <> parent_sp def
R80677:80679 Coq.Init.Logic <> :type_scope:x_'='_x not
R80649:80658 compcert.backend.Lineartyping <> slot_valid def
R80662:80669 compcert.backend.Locations <> Outgoing constr
R80680:80683 Coq.Init.Datatypes <> true constr
R80677:80679 Coq.Init.Logic <> :type_scope:x_'='_x not
R80649:80658 compcert.backend.Lineartyping <> slot_valid def
R80662:80669 compcert.backend.Locations <> Outgoing constr
R80680:80683 Coq.Init.Datatypes <> true constr
R80699:80722 compcert.ia32.Conventions1 <> loc_arguments_acceptable thm
R80758:80767 compcert.backend.Lineartyping <> slot_valid def
R80777:80788 compcert.lib.Coqlib <> proj_sumbool def
R80799:80806 compcert.lib.Coqlib <> zle_true thm
R80799:80806 compcert.lib.Coqlib <> zle_true thm
R80863:80880 compcert.backend.Bounds <> slot_within_bounds def
R80902:80909 compcert.backend.Locations <> Outgoing constr
R80883:80897 compcert.backend.Bounds <> function_bounds def
R80863:80880 compcert.backend.Bounds <> slot_within_bounds def
R80902:80909 compcert.backend.Locations <> Outgoing constr
R80883:80897 compcert.backend.Bounds <> function_bounds def
R80941:80954 compcert.backend.Stackingproof <> agree_outgoing proj
R81065:81070 compcert.backend.Stacking <> FI_arg constr
R81026:81050 compcert.backend.Stackingproof <> index_contains_load_stack thm
R81065:81070 compcert.backend.Stacking <> FI_arg constr
R81026:81050 compcert.backend.Stackingproof <> index_contains_load_stack thm
R81112:81115 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.AGCS var
R81112:81115 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.AGCS var
prf 81136:81164 <> transl_external_arguments_rec
R81218:81224 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R81227:81230 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R81287:81290 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R81231:81242 compcert.lib.Coqlib <> list_forall2 ind
R81285:81286 compcert.backend.Stackingproof <> vl var
R81280:81283 compcert.backend.Stackingproof <> locs var
R81245:81255 compcert.backend.Mach <> extcall_arg ind
R81264:81272 compcert.backend.Mach <> parent_sp def
R81274:81276 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.cs' var
R81260:81261 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.m' var
R81257:81258 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.rs var
R81291:81305 compcert.common.Values <> val_list_inject ind
R81318:81319 compcert.backend.Stackingproof <> vl var
R81311:81312 compcert.backend.Mach <> ::x_'##'_x not
R81309:81310 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.ls var
R81313:81316 compcert.backend.Stackingproof <> locs var
R81307:81307 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.j var
R81184:81187 Coq.Lists.List <> incl def
R81195:81207 compcert.ia32.Conventions1 <> loc_arguments def
R81209:81210 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.sg var
R81189:81192 compcert.backend.Stackingproof <> locs var
R81373:81375 Coq.Init.Datatypes <> nil constr
R81377:81379 compcert.common.Values <> val ind
R81373:81375 Coq.Init.Datatypes <> nil constr
R81377:81379 compcert.common.Values <> val ind
R81426:81449 compcert.backend.Stackingproof <> transl_external_argument thm
R81556:81559 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R81556:81559 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
prf 81603:81627 <> transl_external_arguments
R81632:81638 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R81641:81644 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R81690:81695 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R81645:81661 compcert.backend.Mach <> extcall_arguments def
R81688:81689 compcert.backend.Stackingproof <> vl var
R81685:81686 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.sg var
R81670:81678 compcert.backend.Mach <> parent_sp def
R81680:81682 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.cs' var
R81666:81667 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.m' var
R81663:81664 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.rs var
R81696:81710 compcert.common.Values <> val_list_inject ind
R81741:81742 compcert.backend.Stackingproof <> vl var
R81717:81721 compcert.backend.Mach <> ::x_'##'_x not
R81738:81738 compcert.backend.Mach <> ::x_'##'_x not
R81715:81716 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.ls var
R81722:81734 compcert.ia32.Conventions1 <> loc_arguments def
R81736:81737 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.sg var
R81712:81712 compcert.backend.Stackingproof <> PRESERVATION.EXTERNAL_ARGUMENTS.j var
R81761:81777 compcert.backend.Mach <> extcall_arguments def
R81789:81817 compcert.backend.Stackingproof <> transl_external_arguments_rec thm
R81789:81817 compcert.backend.Stackingproof <> transl_external_arguments_rec thm
R81850:81867 compcert.backend.Stackingproof PRESERVATION.EXTERNAL_ARGUMENTS <> sec
sec 81935:81949 PRESERVATION ANNOT_ARGUMENTS
var 81962:81962 PRESERVATION.ANNOT_ARGUMENTS f
R81965:81979 compcert.backend.Linear <> function rec
var 81986:81986 PRESERVATION.ANNOT_ARGUMENTS b
R81991:82005 compcert.backend.Bounds <> function_bounds def
R82007:82007 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.f var
var 82014:82015 PRESERVATION.ANNOT_ARGUMENTS fe
R82020:82027 compcert.ia32.Stacklayout <> make_env def
R82029:82029 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.b var
var 82041:82041 PRESERVATION.ANNOT_ARGUMENTS j
R82044:82049 compcert.common.Values <> meminj def
var 82062:82062 PRESERVATION.ANNOT_ARGUMENTS m
var 82064:82065 PRESERVATION.ANNOT_ARGUMENTS m'
R82068:82070 compcert.common.Memory <> mem syndef
var 82083:82084 PRESERVATION.ANNOT_ARGUMENTS ls
var 82086:82088 PRESERVATION.ANNOT_ARGUMENTS ls0
R82091:82096 compcert.backend.Linear <> locset def
var 82108:82109 PRESERVATION.ANNOT_ARGUMENTS rs
R82112:82117 compcert.backend.Mach <> regset def
var 82130:82131 PRESERVATION.ANNOT_ARGUMENTS sp
var 82133:82135 PRESERVATION.ANNOT_ARGUMENTS sp'
R82138:82142 compcert.common.Values <> block def
var 82155:82160 PRESERVATION.ANNOT_ARGUMENTS parent
var 82162:82168 PRESERVATION.ANNOT_ARGUMENTS retaddr
R82171:82173 compcert.common.Values <> val ind
var 82187:82189 PRESERVATION.ANNOT_ARGUMENTS AGR
R82192:82201 compcert.backend.Stackingproof <> agree_regs def
R82208:82209 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.rs var
R82205:82206 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.ls var
R82203:82203 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.j var
var 82223:82225 PRESERVATION.ANNOT_ARGUMENTS AGF
R82228:82238 compcert.backend.Stackingproof <> agree_frame rec
R82270:82276 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.retaddr var
R82263:82268 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.parent var
R82259:82261 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.sp' var
R82256:82257 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.m' var
R82253:82254 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.sp var
R82251:82251 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.m var
R82247:82249 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.ls0 var
R82244:82245 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.ls var
R82242:82242 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.j var
R82240:82240 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.f var
prf 82286:82311 <> transl_annot_param_correct
R82434:82440 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R82442:82443 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R82507:82519 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R82444:82452 compcert.backend.Mach <> annot_arg ind
R82506:82506 compcert.backend.Stackingproof <> v var
R82481:82498 compcert.backend.Stacking <> transl_annot_param def
R82503:82503 compcert.backend.Stackingproof <> l var
R82500:82501 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.fe var
R82461:82464 compcert.common.Values <> Vptr constr
R82470:82477 compcert.lib.Integers Int zero def
R82466:82468 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.sp' var
R82457:82458 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.m' var
R82454:82455 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.rs var
R82520:82529 compcert.common.Values <> val_inject ind
R82540:82540 compcert.backend.Stackingproof <> v var
R82534:82535 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.ls var
R82537:82537 compcert.backend.Stackingproof <> l var
R82531:82531 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.j var
R82360:82360 compcert.backend.Stackingproof <> l var
R82367:82367 compcert.backend.Locations <> S constr
R82382:82399 compcert.backend.Bounds <> slot_within_bounds def
R82401:82401 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.b var
R82420:82423 Coq.Init.Logic <> True ind
R82341:82343 Coq.Init.Logic <> :type_scope:x_'='_x not
R82328:82336 compcert.backend.Lineartyping <> loc_valid def
R82340:82340 compcert.backend.Stackingproof <> l var
R82338:82338 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.f var
R82344:82347 Coq.Init.Datatypes <> true constr
R82604:82605 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.rs var
R82604:82605 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.rs var
R82694:82705 compcert.backend.Stackingproof <> agree_locals proj
R82781:82789 Coq.ZArith.BinInt <> Zplus_0_l syndef
R82781:82789 Coq.ZArith.BinInt <> Zplus_0_l syndef
prf 82816:82842 <> transl_annot_params_correct
R82976:82982 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R82985:82991 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R83069:83074 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R82992:83006 compcert.backend.Mach <> annot_arguments def
R83067:83068 compcert.backend.Stackingproof <> vl var
R83035:83037 Coq.Lists.List <> map def
R83063:83064 compcert.backend.Stackingproof <> ll var
R83040:83057 compcert.backend.Stacking <> transl_annot_param def
R83059:83060 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.fe var
R83015:83018 compcert.common.Values <> Vptr constr
R83024:83031 compcert.lib.Integers Int zero def
R83020:83022 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.sp' var
R83011:83012 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.m' var
R83008:83009 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.rs var
R83075:83089 compcert.common.Values <> val_list_inject ind
R83105:83106 compcert.backend.Stackingproof <> vl var
R83094:83096 Coq.Lists.List <> map def
R83101:83102 compcert.backend.Stackingproof <> ll var
R83098:83099 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.ls var
R83091:83091 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.j var
R82939:82956 compcert.backend.Bounds <> slot_within_bounds def
R82967:82968 compcert.backend.Stackingproof <> ty var
R82963:82965 compcert.backend.Stackingproof <> ofs var
R82960:82961 compcert.backend.Stackingproof <> sl var
R82958:82958 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.b var
R82916:82917 Coq.Lists.List <> In def
R82933:82934 compcert.backend.Stackingproof <> ll var
R82920:82920 compcert.backend.Locations <> S constr
R82929:82930 compcert.backend.Stackingproof <> ty var
R82925:82927 compcert.backend.Stackingproof <> ofs var
R82922:82923 compcert.backend.Stackingproof <> sl var
R82884:82886 Coq.Init.Logic <> :type_scope:x_'='_x not
R82860:82866 Coq.Lists.List <> forallb def
R82882:82883 compcert.backend.Stackingproof <> ll var
R82869:82877 compcert.backend.Lineartyping <> loc_valid def
R82879:82879 compcert.backend.Stackingproof <> PRESERVATION.ANNOT_ARGUMENTS.f var
R82887:82890 Coq.Init.Datatypes <> true constr
R83159:83161 Coq.Init.Datatypes <> nil constr
R83163:83165 compcert.common.Values <> val ind
R83159:83161 Coq.Init.Datatypes <> nil constr
R83163:83165 compcert.common.Values <> val ind
R83216:83241 compcert.backend.Stackingproof <> transl_annot_param_correct thm
R83216:83241 compcert.backend.Stackingproof <> transl_annot_param_correct thm
R83355:83358 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R83355:83358 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R83400:83414 compcert.backend.Stackingproof PRESERVATION.ANNOT_ARGUMENTS <> sec
ind 84255:84266 <> match_states
constr 84311:84328 <> match_states_intro
constr 84957:84973 <> match_states_call
constr 85442:85460 <> match_states_return
R84285:84294 compcert.backend.Mach <> state ind
R84269:84280 compcert.backend.Linear <> state ind
R84396:84405 compcert.common.Memory Mem inject def
R84411:84412 compcert.backend.Stackingproof <> m' var
R84409:84409 compcert.backend.Stackingproof <> m var
R84407:84407 compcert.backend.Stackingproof <> j var
R84432:84443 compcert.backend.Stackingproof <> match_stacks ind
R84480:84482 compcert.backend.Stackingproof <> sp' var
R84477:84478 compcert.backend.Stackingproof <> sp var
R84462:84474 compcert.backend.Linear <> fn_sig proj
R84459:84459 compcert.backend.Stackingproof <> f var
R84455:84457 compcert.backend.Stackingproof <> cs' var
R84452:84453 compcert.backend.Stackingproof <> cs var
R84449:84450 compcert.backend.Stackingproof <> m' var
R84447:84447 compcert.backend.Stackingproof <> m var
R84445:84445 compcert.backend.Stackingproof <> j var
R84519:84521 Coq.Init.Logic <> :type_scope:x_'='_x not
R84502:84516 compcert.backend.Stacking <> transf_function def
R84518:84518 compcert.backend.Stackingproof <> f var
R84522:84523 compcert.common.Errors <> OK constr
R84525:84526 compcert.backend.Stackingproof <> tf var
R84570:84572 Coq.Init.Logic <> :type_scope:x_'='_x not
R84544:84562 compcert.common.Globalenvs Genv find_funct_ptr def
R84568:84569 compcert.backend.Stackingproof <> fb var
R84564:84566 compcert.backend.Stackingproof <> PRESERVATION.tge var
R84573:84576 Coq.Init.Datatypes <> Some constr
R84579:84586 compcert.common.AST <> Internal constr
R84588:84589 compcert.backend.Stackingproof <> tf var
R84610:84619 compcert.backend.Stackingproof <> agree_regs def
R84626:84627 compcert.backend.Stackingproof <> rs var
R84623:84624 compcert.backend.Stackingproof <> ls var
R84621:84621 compcert.backend.Stackingproof <> j var
R84648:84658 compcert.backend.Stackingproof <> agree_frame rec
R84715:84723 compcert.backend.Mach <> parent_ra def
R84725:84727 compcert.backend.Stackingproof <> cs' var
R84699:84707 compcert.backend.Mach <> parent_sp def
R84709:84711 compcert.backend.Stackingproof <> cs' var
R84694:84696 compcert.backend.Stackingproof <> sp' var
R84691:84692 compcert.backend.Stackingproof <> m' var
R84688:84689 compcert.backend.Stackingproof <> sp var
R84686:84686 compcert.backend.Stackingproof <> m var
R84668:84680 compcert.backend.Linear <> parent_locset def
R84682:84683 compcert.backend.Stackingproof <> cs var
R84664:84665 compcert.backend.Stackingproof <> ls var
R84662:84662 compcert.backend.Stackingproof <> j var
R84660:84660 compcert.backend.Stackingproof <> f var
R84746:84752 compcert.lib.Coqlib <> is_tail ind
R84757:84770 compcert.backend.Linear <> fn_code proj
R84772:84772 compcert.backend.Stackingproof <> f var
R84754:84754 compcert.backend.Stackingproof <> c var
R84783:84794 compcert.backend.Stackingproof <> match_states ind
R84861:84870 compcert.backend.Mach <> State constr
R84949:84950 compcert.backend.Stackingproof <> m' var
R84946:84947 compcert.backend.Stackingproof <> rs var
R84900:84910 compcert.backend.Stacking <> transl_code def
R84943:84943 compcert.backend.Stackingproof <> c var
R84913:84920 compcert.ia32.Stacklayout <> make_env def
R84923:84937 compcert.backend.Bounds <> function_bounds def
R84939:84939 compcert.backend.Stackingproof <> f var
R84880:84883 compcert.common.Values <> Vptr constr
R84889:84896 compcert.lib.Integers Int zero def
R84885:84887 compcert.backend.Stackingproof <> sp' var
R84876:84877 compcert.backend.Stackingproof <> fb var
R84872:84874 compcert.backend.Stackingproof <> cs' var
R84797:84808 compcert.backend.Linear <> State constr
R84839:84839 compcert.backend.Stackingproof <> m var
R84836:84837 compcert.backend.Stackingproof <> ls var
R84834:84834 compcert.backend.Stackingproof <> c var
R84816:84819 compcert.common.Values <> Vptr constr
R84824:84831 compcert.lib.Integers Int zero def
R84821:84822 compcert.backend.Stackingproof <> sp var
R84813:84813 compcert.backend.Stackingproof <> f var
R84810:84811 compcert.backend.Stackingproof <> cs var
R85032:85041 compcert.common.Memory Mem inject def
R85047:85048 compcert.backend.Stackingproof <> m' var
R85045:85045 compcert.backend.Stackingproof <> m var
R85043:85043 compcert.backend.Stackingproof <> j var
R85068:85079 compcert.backend.Stackingproof <> match_stacks ind
R85132:85144 compcert.common.Memory Mem nextblock proj
R85146:85147 compcert.backend.Stackingproof <> m' var
R85114:85126 compcert.common.Memory Mem nextblock proj
R85128:85128 compcert.backend.Stackingproof <> m var
R85096:85108 compcert.backend.Linear <> funsig def
R85110:85110 compcert.backend.Stackingproof <> f var
R85091:85093 compcert.backend.Stackingproof <> cs' var
R85088:85089 compcert.backend.Stackingproof <> cs var
R85085:85086 compcert.backend.Stackingproof <> m' var
R85083:85083 compcert.backend.Stackingproof <> m var
R85081:85081 compcert.backend.Stackingproof <> j var
R85183:85185 Coq.Init.Logic <> :type_scope:x_'='_x not
R85168:85180 compcert.backend.Stacking <> transf_fundef def
R85182:85182 compcert.backend.Stackingproof <> f var
R85186:85187 compcert.common.Errors <> OK constr
R85189:85190 compcert.backend.Stackingproof <> tf var
R85234:85236 Coq.Init.Logic <> :type_scope:x_'='_x not
R85208:85226 compcert.common.Globalenvs Genv find_funct_ptr def
R85232:85233 compcert.backend.Stackingproof <> fb var
R85228:85230 compcert.backend.Stackingproof <> PRESERVATION.tge var
R85237:85240 Coq.Init.Datatypes <> Some constr
R85242:85243 compcert.backend.Stackingproof <> tf var
R85263:85272 compcert.backend.Stackingproof <> agree_regs def
R85279:85280 compcert.backend.Stackingproof <> rs var
R85276:85277 compcert.backend.Stackingproof <> ls var
R85274:85274 compcert.backend.Stackingproof <> j var
R85300:85316 compcert.backend.Stackingproof <> agree_callee_save def
R85322:85334 compcert.backend.Linear <> parent_locset def
R85336:85337 compcert.backend.Stackingproof <> cs var
R85318:85319 compcert.backend.Stackingproof <> ls var
R85348:85359 compcert.backend.Stackingproof <> match_states ind
R85409:85422 compcert.backend.Mach <> Callstate constr
R85434:85435 compcert.backend.Stackingproof <> m' var
R85431:85432 compcert.backend.Stackingproof <> rs var
R85428:85429 compcert.backend.Stackingproof <> fb var
R85424:85426 compcert.backend.Stackingproof <> cs' var
R85362:85377 compcert.backend.Linear <> Callstate constr
R85387:85387 compcert.backend.Stackingproof <> m var
R85384:85385 compcert.backend.Stackingproof <> ls var
R85382:85382 compcert.backend.Stackingproof <> f var
R85379:85380 compcert.backend.Stackingproof <> cs var
R85515:85524 compcert.common.Memory Mem inject def
R85530:85531 compcert.backend.Stackingproof <> m' var
R85528:85528 compcert.backend.Stackingproof <> m var
R85526:85526 compcert.backend.Stackingproof <> j var
R85551:85562 compcert.backend.Stackingproof <> match_stacks ind
R85600:85612 compcert.common.Memory Mem nextblock proj
R85614:85615 compcert.backend.Stackingproof <> m' var
R85582:85594 compcert.common.Memory Mem nextblock proj
R85596:85596 compcert.backend.Stackingproof <> m var
R85578:85579 compcert.backend.Stackingproof <> sg var
R85574:85576 compcert.backend.Stackingproof <> cs' var
R85571:85572 compcert.backend.Stackingproof <> cs var
R85568:85569 compcert.backend.Stackingproof <> m' var
R85566:85566 compcert.backend.Stackingproof <> m var
R85564:85564 compcert.backend.Stackingproof <> j var
R85636:85645 compcert.backend.Stackingproof <> agree_regs def
R85652:85653 compcert.backend.Stackingproof <> rs var
R85649:85650 compcert.backend.Stackingproof <> ls var
R85647:85647 compcert.backend.Stackingproof <> j var
R85673:85689 compcert.backend.Stackingproof <> agree_callee_save def
R85695:85707 compcert.backend.Linear <> parent_locset def
R85709:85710 compcert.backend.Stackingproof <> cs var
R85691:85692 compcert.backend.Stackingproof <> ls var
R85721:85732 compcert.backend.Stackingproof <> match_states ind
R85782:85797 compcert.backend.Mach <> Returnstate constr
R85806:85807 compcert.backend.Stackingproof <> m' var
R85803:85804 compcert.backend.Stackingproof <> rs var
R85799:85801 compcert.backend.Stackingproof <> cs' var
R85735:85752 compcert.backend.Linear <> Returnstate constr
R85760:85760 compcert.backend.Stackingproof <> m var
R85757:85758 compcert.backend.Stackingproof <> ls var
R85754:85755 compcert.backend.Stackingproof <> cs var
prf 85820:85838 <> transf_step_correct
R85900:85907 compcert.backend.Lineartyping <> wt_state ind
R85909:85910 compcert.backend.Stackingproof <> s1 var
R85922:85933 compcert.backend.Stackingproof <> match_states ind
R85938:85940 compcert.backend.Stackingproof <> s1' var
R85935:85936 compcert.backend.Stackingproof <> s1 var
R85946:85952 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R85956:85957 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R85981:85984 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R85958:85961 compcert.common.Smallstep <> plus ind
R85978:85980 compcert.backend.Stackingproof <> s2' var
R85976:85976 compcert.backend.Stackingproof <> t var
R85972:85974 compcert.backend.Stackingproof <> s1' var
R85968:85970 compcert.backend.Stackingproof <> PRESERVATION.tge var
R85963:85966 compcert.backend.Stackingproof <> PRESERVATION.step var
R85985:85996 compcert.backend.Stackingproof <> match_states ind
R86001:86003 compcert.backend.Stackingproof <> s2' var
R85998:85999 compcert.backend.Stackingproof <> s2 var
R85859:85869 compcert.backend.Linear <> step ind
R85879:85880 compcert.backend.Stackingproof <> s2 var
R85877:85877 compcert.backend.Stackingproof <> t var
R85874:85875 compcert.backend.Stackingproof <> s1 var
R85871:85872 compcert.backend.Stackingproof <> PRESERVATION.ge var
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86453:86464 compcert.backend.Stacking <> transl_instr def
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86322:86335 compcert.backend.Stackingproof <> transl_code_eq thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86357:86381 compcert.backend.Bounds <> function_is_within_bounds thm
R86388:86397 compcert.lib.Coqlib <> is_tail_in thm
R86514:86530 compcert.backend.Lineartyping <> wt_state_getstack thm
R86560:86580 compcert.backend.LTL <> destroyed_by_getstack def
R86631:86642 compcert.backend.Stackingproof <> agree_locals proj
R86701:86708 compcert.common.Smallstep <> plus_one thm
R86701:86708 compcert.common.Smallstep <> plus_one thm
R86717:86730 compcert.backend.Mach <> exec_Mgetstack constr
R86717:86730 compcert.backend.Mach <> exec_Mgetstack constr
R86743:86767 compcert.backend.Stackingproof <> index_contains_load_stack thm
R86743:86767 compcert.backend.Stackingproof <> index_contains_load_stack thm
R86820:86837 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R86820:86837 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R86854:86872 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R86854:86872 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R86918:86927 compcert.backend.Lineartyping <> slot_valid def
R86959:86985 compcert.backend.Conventions <> incoming_slot_in_parameters thm
R87106:87119 compcert.backend.Stackingproof <> agree_outgoing proj
R87164:87187 compcert.ia32.Conventions1 <> loc_arguments_acceptable thm
R87220:87229 compcert.backend.Lineartyping <> slot_valid def
R87232:87243 compcert.lib.Coqlib <> proj_sumbool def
R87254:87261 compcert.lib.Coqlib <> zle_true thm
R87254:87261 compcert.lib.Coqlib <> zle_true thm
R87365:87372 compcert.common.Smallstep <> plus_one thm
R87365:87372 compcert.common.Smallstep <> plus_one thm
R87382:87395 compcert.backend.Mach <> exec_Mgetparam constr
R87382:87395 compcert.backend.Mach <> exec_Mgetparam constr
R87417:87438 compcert.backend.Stackingproof <> unfold_transf_function thm
R87417:87438 compcert.backend.Stackingproof <> unfold_transf_function thm
R87460:87470 compcert.backend.Mach <> fn_link_ofs proj
R87522:87528 compcert.backend.Stacking <> FI_link constr
R87483:87507 compcert.backend.Stackingproof <> index_contains_load_stack thm
R87522:87528 compcert.backend.Stacking <> FI_link constr
R87483:87507 compcert.backend.Stackingproof <> index_contains_load_stack thm
R87554:87563 compcert.backend.Stackingproof <> agree_link proj
R87554:87563 compcert.backend.Stackingproof <> agree_link proj
R87581:87589 compcert.backend.Mach <> parent_sp def
R87581:87589 compcert.backend.Mach <> parent_sp def
R87676:87690 compcert.backend.Stacking <> offset_of_index def
R87725:87730 compcert.backend.Stacking <> FI_arg constr
R87693:87700 compcert.ia32.Stacklayout <> make_env def
R87703:87717 compcert.backend.Bounds <> function_bounds def
R87602:87616 compcert.backend.Stacking <> offset_of_index def
R87650:87655 compcert.backend.Stacking <> FI_arg constr
R87619:87626 compcert.ia32.Stacklayout <> make_env def
R87629:87643 compcert.backend.Bounds <> function_bounds def
R87602:87616 compcert.backend.Stacking <> offset_of_index def
R87650:87655 compcert.backend.Stacking <> FI_arg constr
R87619:87626 compcert.ia32.Stacklayout <> make_env def
R87629:87643 compcert.backend.Bounds <> function_bounds def
R87676:87690 compcert.backend.Stacking <> offset_of_index def
R87725:87730 compcert.backend.Stacking <> FI_arg constr
R87693:87700 compcert.ia32.Stacklayout <> make_env def
R87703:87717 compcert.backend.Bounds <> function_bounds def
R87790:87795 compcert.backend.Stacking <> FI_arg constr
R87751:87775 compcert.backend.Stackingproof <> index_contains_load_stack thm
R87790:87795 compcert.backend.Stacking <> FI_arg constr
R87751:87775 compcert.backend.Stackingproof <> index_contains_load_stack thm
R87830:87843 compcert.backend.Stackingproof <> agree_incoming proj
R87941:87958 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R87941:87958 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R87967:87984 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R87967:87984 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R88021:88039 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R88021:88039 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R88056:88074 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R88056:88074 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R88093:88121 compcert.backend.Stackingproof <> caller_save_reg_within_bounds thm
R88093:88121 compcert.backend.Stackingproof <> caller_save_reg_within_bounds thm
R88133:88165 compcert.backend.Stackingproof <> temp_for_parent_frame_caller_save thm
R88133:88165 compcert.backend.Stackingproof <> temp_for_parent_frame_caller_save thm
R88206:88219 compcert.backend.Stackingproof <> agree_outgoing proj
R88278:88285 compcert.common.Smallstep <> plus_one thm
R88278:88285 compcert.common.Smallstep <> plus_one thm
R88294:88307 compcert.backend.Mach <> exec_Mgetstack constr
R88294:88307 compcert.backend.Mach <> exec_Mgetstack constr
R88320:88344 compcert.backend.Stackingproof <> index_contains_load_stack thm
R88320:88344 compcert.backend.Stackingproof <> index_contains_load_stack thm
R88397:88414 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R88397:88414 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R88431:88449 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R88431:88449 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R88487:88503 compcert.backend.Lineartyping <> wt_state_setstack thm
R88576:88580 compcert.backend.Locations <> Local constr
R88585:88592 compcert.backend.Stacking <> FI_local constr
R88617:88624 compcert.backend.Locations <> Incoming constr
R88629:88635 compcert.backend.Stacking <> FI_link constr
R88663:88670 compcert.backend.Locations <> Outgoing constr
R88675:88680 compcert.backend.Stacking <> FI_arg constr
R88576:88580 compcert.backend.Locations <> Local constr
R88585:88592 compcert.backend.Stacking <> FI_local constr
R88617:88624 compcert.backend.Locations <> Incoming constr
R88629:88635 compcert.backend.Stacking <> FI_link constr
R88663:88670 compcert.backend.Locations <> Outgoing constr
R88675:88680 compcert.backend.Stacking <> FI_arg constr
R88719:88729 compcert.backend.Stackingproof <> index_valid def
R88719:88729 compcert.backend.Stackingproof <> index_valid def
R88778:88794 compcert.backend.Stackingproof <> index_local_valid thm
R88778:88794 compcert.backend.Stackingproof <> index_local_valid thm
R88828:88842 compcert.backend.Stackingproof <> index_arg_valid thm
R88828:88842 compcert.backend.Stackingproof <> index_arg_valid thm
R88863:88882 compcert.backend.Stackingproof <> store_index_succeeds thm
R88899:88908 compcert.backend.Stackingproof <> agree_perm proj
R88899:88908 compcert.backend.Stackingproof <> agree_perm proj
R88999:89006 compcert.common.Smallstep <> plus_one thm
R88999:89006 compcert.common.Smallstep <> plus_one thm
R89060:89079 compcert.backend.Stackingproof <> store_stack_succeeds thm
R89060:89079 compcert.backend.Stackingproof <> store_stack_succeeds thm
R89157:89176 compcert.backend.Stackingproof <> store_stack_succeeds thm
R89157:89176 compcert.backend.Stackingproof <> store_stack_succeeds thm
R89237:89260 compcert.common.Memory Mem store_outside_inject thm
R89237:89260 compcert.common.Memory Mem store_outside_inject thm
R89291:89306 compcert.backend.Stackingproof <> agree_inj_unique proj
R89362:89376 compcert.backend.Stackingproof <> size_type_chunk thm
R89362:89376 compcert.backend.Stackingproof <> size_type_chunk thm
R89397:89429 compcert.backend.Stackingproof <> offset_of_index_disj_stack_data_2 thm
R89451:89462 compcert.backend.Stackingproof <> agree_bounds proj
R89478:89493 compcert.common.Memory Mem perm_cur_max thm
R89478:89493 compcert.common.Memory Mem perm_cur_max thm
R89523:89550 compcert.backend.Stackingproof <> match_stacks_change_mach_mem thm
R89523:89550 compcert.backend.Stackingproof <> match_stacks_change_mach_mem thm
R89631:89650 compcert.common.Memory Mem load_store_other thm
R89631:89650 compcert.common.Memory Mem load_store_other thm
R89672:89677 compcert.lib.Coqlib <> Plt_ne thm
R89672:89677 compcert.lib.Coqlib <> Plt_ne thm
R89712:89730 compcert.backend.Stackingproof <> agree_regs_set_slot thm
R89712:89730 compcert.backend.Stackingproof <> agree_regs_set_slot thm
R89739:89759 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R89739:89759 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R89795:89815 compcert.backend.Stackingproof <> agree_frame_set_local thm
R89795:89815 compcert.backend.Stackingproof <> agree_frame_set_local thm
R89825:89846 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R89825:89846 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R89866:89898 compcert.backend.Stackingproof <> destroyed_by_setstack_caller_save thm
R89866:89898 compcert.backend.Stackingproof <> destroyed_by_setstack_caller_save thm
R89978:90001 compcert.backend.Stackingproof <> agree_frame_set_outgoing thm
R89978:90001 compcert.backend.Stackingproof <> agree_frame_set_outgoing thm
R90011:90032 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R90011:90032 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R90052:90084 compcert.backend.Stackingproof <> destroyed_by_setstack_caller_save thm
R90052:90084 compcert.backend.Stackingproof <> destroyed_by_setstack_caller_save thm
R90167:90173 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90176:90187 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90294:90304 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R90284:90286 Coq.Init.Logic <> :type_scope:x_'='_x not
R90188:90201 compcert.ia32.Op <> eval_operation def
R90275:90276 compcert.backend.Mach <> ::x_'##'_x not
R90227:90235 compcert.backend.Stacking <> transl_op def
R90238:90245 compcert.ia32.Stacklayout <> make_env def
R90248:90262 compcert.backend.Bounds <> function_bounds def
R90207:90210 compcert.common.Values <> Vptr constr
R90216:90223 compcert.lib.Integers Int zero def
R90203:90204 compcert.backend.Stackingproof <> PRESERVATION.ge var
R90287:90290 Coq.Init.Datatypes <> Some constr
R90292:90293 compcert.backend.Stackingproof <> v' var
R90305:90314 compcert.common.Values <> val_inject ind
R90320:90321 compcert.backend.Stackingproof <> v' var
R90167:90173 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90176:90187 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90294:90304 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R90284:90286 Coq.Init.Logic <> :type_scope:x_'='_x not
R90188:90201 compcert.ia32.Op <> eval_operation def
R90275:90276 compcert.backend.Mach <> ::x_'##'_x not
R90227:90235 compcert.backend.Stacking <> transl_op def
R90238:90245 compcert.ia32.Stacklayout <> make_env def
R90248:90262 compcert.backend.Bounds <> function_bounds def
R90207:90210 compcert.common.Values <> Vptr constr
R90216:90223 compcert.lib.Integers Int zero def
R90203:90204 compcert.backend.Stackingproof <> PRESERVATION.ge var
R90287:90290 Coq.Init.Datatypes <> Some constr
R90292:90293 compcert.backend.Stackingproof <> v' var
R90305:90314 compcert.common.Values <> val_inject ind
R90320:90321 compcert.backend.Stackingproof <> v' var
R90334:90354 compcert.ia32.Op <> eval_operation_inject thm
R90334:90354 compcert.ia32.Op <> eval_operation_inject thm
R90373:90402 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R90373:90402 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R90421:90429 compcert.backend.Stackingproof <> agree_inj proj
R90421:90429 compcert.backend.Stackingproof <> agree_inj proj
R90446:90458 compcert.backend.Stackingproof <> agree_reglist thm
R90446:90458 compcert.backend.Stackingproof <> agree_reglist thm
R90529:90536 compcert.common.Smallstep <> plus_one thm
R90529:90536 compcert.common.Smallstep <> plus_one thm
R90599:90622 compcert.ia32.Op <> eval_operation_preserved thm
R90599:90622 compcert.ia32.Op <> eval_operation_preserved thm
R90634:90650 compcert.backend.Stackingproof <> symbols_preserved thm
R90634:90650 compcert.backend.Stackingproof <> symbols_preserved thm
R90703:90720 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R90703:90720 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R90739:90760 compcert.backend.Stackingproof <> transl_destroyed_by_op thm
R90739:90760 compcert.backend.Stackingproof <> transl_destroyed_by_op thm
R90770:90790 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R90770:90790 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R90808:90826 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R90808:90826 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R90841:90862 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R90841:90862 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R90879:90905 compcert.backend.Stackingproof <> destroyed_by_op_caller_save thm
R90879:90905 compcert.backend.Stackingproof <> destroyed_by_op_caller_save thm
R90933:90939 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90942:90953 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R91062:91072 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91052:91054 Coq.Init.Logic <> :type_scope:x_'='_x not
R90954:90968 compcert.ia32.Op <> eval_addressing def
R91046:91047 compcert.backend.Mach <> ::x_'##'_x not
R90994:91004 compcert.backend.Stacking <> transl_addr def
R91007:91014 compcert.ia32.Stacklayout <> make_env def
R91017:91031 compcert.backend.Bounds <> function_bounds def
R90974:90977 compcert.common.Values <> Vptr constr
R90983:90990 compcert.lib.Integers Int zero def
R90970:90971 compcert.backend.Stackingproof <> PRESERVATION.ge var
R91055:91058 Coq.Init.Datatypes <> Some constr
R91060:91061 compcert.backend.Stackingproof <> a' var
R91073:91082 compcert.common.Values <> val_inject ind
R91088:91089 compcert.backend.Stackingproof <> a' var
R90933:90939 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90942:90953 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R91062:91072 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91052:91054 Coq.Init.Logic <> :type_scope:x_'='_x not
R90954:90968 compcert.ia32.Op <> eval_addressing def
R91046:91047 compcert.backend.Mach <> ::x_'##'_x not
R90994:91004 compcert.backend.Stacking <> transl_addr def
R91007:91014 compcert.ia32.Stacklayout <> make_env def
R91017:91031 compcert.backend.Bounds <> function_bounds def
R90974:90977 compcert.common.Values <> Vptr constr
R90983:90990 compcert.lib.Integers Int zero def
R90970:90971 compcert.backend.Stackingproof <> PRESERVATION.ge var
R91055:91058 Coq.Init.Datatypes <> Some constr
R91060:91061 compcert.backend.Stackingproof <> a' var
R91073:91082 compcert.common.Values <> val_inject ind
R91088:91089 compcert.backend.Stackingproof <> a' var
R91102:91123 compcert.ia32.Op <> eval_addressing_inject thm
R91102:91123 compcert.ia32.Op <> eval_addressing_inject thm
R91143:91172 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R91143:91172 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R91191:91199 compcert.backend.Stackingproof <> agree_inj proj
R91191:91199 compcert.backend.Stackingproof <> agree_inj proj
R91216:91228 compcert.backend.Stackingproof <> agree_reglist thm
R91216:91228 compcert.backend.Stackingproof <> agree_reglist thm
R91277:91292 compcert.common.Memory Mem loadv_inject thm
R91353:91360 compcert.common.Smallstep <> plus_one thm
R91353:91360 compcert.common.Smallstep <> plus_one thm
R91423:91447 compcert.ia32.Op <> eval_addressing_preserved thm
R91423:91447 compcert.ia32.Op <> eval_addressing_preserved thm
R91456:91472 compcert.backend.Stackingproof <> symbols_preserved thm
R91456:91472 compcert.backend.Stackingproof <> symbols_preserved thm
R91537:91554 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R91537:91554 compcert.backend.Stackingproof <> agree_regs_set_reg thm
R91565:91588 compcert.backend.Stackingproof <> transl_destroyed_by_load thm
R91565:91588 compcert.backend.Stackingproof <> transl_destroyed_by_load thm
R91597:91617 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R91597:91617 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R91641:91659 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R91641:91659 compcert.backend.Stackingproof <> agree_frame_set_reg thm
R91668:91689 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R91668:91689 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R91706:91734 compcert.backend.Stackingproof <> destroyed_by_load_caller_save thm
R91706:91734 compcert.backend.Stackingproof <> destroyed_by_load_caller_save thm
R91770:91776 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R91779:91790 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R91899:91909 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91889:91891 Coq.Init.Logic <> :type_scope:x_'='_x not
R91791:91805 compcert.ia32.Op <> eval_addressing def
R91883:91884 compcert.backend.Mach <> ::x_'##'_x not
R91831:91841 compcert.backend.Stacking <> transl_addr def
R91844:91851 compcert.ia32.Stacklayout <> make_env def
R91854:91868 compcert.backend.Bounds <> function_bounds def
R91811:91814 compcert.common.Values <> Vptr constr
R91820:91827 compcert.lib.Integers Int zero def
R91807:91808 compcert.backend.Stackingproof <> PRESERVATION.ge var
R91892:91895 Coq.Init.Datatypes <> Some constr
R91897:91898 compcert.backend.Stackingproof <> a' var
R91910:91919 compcert.common.Values <> val_inject ind
R91925:91926 compcert.backend.Stackingproof <> a' var
R91770:91776 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R91779:91790 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R91899:91909 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91889:91891 Coq.Init.Logic <> :type_scope:x_'='_x not
R91791:91805 compcert.ia32.Op <> eval_addressing def
R91883:91884 compcert.backend.Mach <> ::x_'##'_x not
R91831:91841 compcert.backend.Stacking <> transl_addr def
R91844:91851 compcert.ia32.Stacklayout <> make_env def
R91854:91868 compcert.backend.Bounds <> function_bounds def
R91811:91814 compcert.common.Values <> Vptr constr
R91820:91827 compcert.lib.Integers Int zero def
R91807:91808 compcert.backend.Stackingproof <> PRESERVATION.ge var
R91892:91895 Coq.Init.Datatypes <> Some constr
R91897:91898 compcert.backend.Stackingproof <> a' var
R91910:91919 compcert.common.Values <> val_inject ind
R91925:91926 compcert.backend.Stackingproof <> a' var
R91939:91960 compcert.ia32.Op <> eval_addressing_inject thm
R91939:91960 compcert.ia32.Op <> eval_addressing_inject thm
R91980:92009 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R91980:92009 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R92028:92036 compcert.backend.Stackingproof <> agree_inj proj
R92028:92036 compcert.backend.Stackingproof <> agree_inj proj
R92053:92065 compcert.backend.Stackingproof <> agree_reglist thm
R92053:92065 compcert.backend.Stackingproof <> agree_reglist thm
R92114:92137 compcert.common.Memory Mem storev_mapped_inject thm
R92199:92206 compcert.common.Smallstep <> plus_one thm
R92199:92206 compcert.common.Smallstep <> plus_one thm
R92269:92293 compcert.ia32.Op <> eval_addressing_preserved thm
R92269:92293 compcert.ia32.Op <> eval_addressing_preserved thm
R92302:92318 compcert.backend.Stackingproof <> symbols_preserved thm
R92302:92318 compcert.backend.Stackingproof <> symbols_preserved thm
R92372:92399 compcert.backend.Stackingproof <> match_stacks_parallel_stores thm
R92372:92399 compcert.backend.Stackingproof <> match_stacks_parallel_stores thm
R92473:92497 compcert.backend.Stackingproof <> transl_destroyed_by_store thm
R92473:92497 compcert.backend.Stackingproof <> transl_destroyed_by_store thm
R92509:92529 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R92509:92529 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R92547:92568 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R92547:92568 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R92586:92612 compcert.backend.Stackingproof <> agree_frame_parallel_stores thm
R92586:92612 compcert.backend.Stackingproof <> agree_frame_parallel_stores thm
R92630:92659 compcert.backend.Stackingproof <> destroyed_by_store_caller_save thm
R92630:92659 compcert.backend.Stackingproof <> destroyed_by_store_caller_save thm
R92708:92731 compcert.backend.Stackingproof <> find_function_translated thm
R92780:92802 compcert.backend.Stackingproof <> is_tail_transf_function thm
R92834:92847 compcert.backend.Stackingproof <> transl_code_eq thm
R92834:92847 compcert.backend.Stackingproof <> transl_code_eq thm
R92881:92908 compcert.backend.Stackingproof <> PRESERVATION.return_address_offset_exists var
R92971:92978 compcert.common.Smallstep <> plus_one thm
R92971:92978 compcert.common.Smallstep <> plus_one thm
R93116:93129 compcert.ia32.Conventions1 <> size_arguments def
R93132:93144 compcert.backend.Linear <> funsig def
R93100:93108 Coq.ZArith.Zorder <> Zle_trans syndef
R93116:93129 compcert.ia32.Conventions1 <> size_arguments def
R93132:93144 compcert.backend.Linear <> funsig def
R93100:93108 Coq.ZArith.Zorder <> Zle_trans syndef
R93168:93188 compcert.ia32.Conventions1 <> loc_arguments_bounded thm
R93168:93188 compcert.ia32.Conventions1 <> loc_arguments_bounded thm
R93206:93223 compcert.backend.Stackingproof <> agree_valid_linear proj
R93206:93223 compcert.backend.Stackingproof <> agree_valid_linear proj
R93242:93257 compcert.backend.Stackingproof <> agree_valid_mach proj
R93242:93257 compcert.backend.Stackingproof <> agree_valid_mach proj
R93316:93340 compcert.backend.Stackingproof <> function_epilogue_correct thm
R93408:93431 compcert.backend.Stackingproof <> find_function_translated thm
R93502:93511 compcert.common.Smallstep <> plus_right thm
R93502:93511 compcert.common.Smallstep <> plus_right thm
R93615:93627 compcert.backend.Linear <> fn_sig proj
R93585:93607 compcert.backend.Stackingproof <> match_stacks_change_sig thm
R93615:93627 compcert.backend.Linear <> fn_sig proj
R93585:93607 compcert.backend.Stackingproof <> match_stacks_change_sig thm
R93647:93672 compcert.backend.Stackingproof <> match_stacks_change_bounds thm
R93647:93672 compcert.backend.Stackingproof <> match_stacks_change_bounds thm
R93696:93725 compcert.backend.Stackingproof <> match_stacks_change_linear_mem thm
R93696:93725 compcert.backend.Stackingproof <> match_stacks_change_linear_mem thm
R93744:93771 compcert.backend.Stackingproof <> match_stacks_change_mach_mem thm
R93744:93771 compcert.backend.Stackingproof <> match_stacks_change_mach_mem thm
R93825:93839 compcert.common.Memory Mem perm_free_1 thm
R93825:93839 compcert.common.Memory Mem perm_free_1 thm
R93861:93866 compcert.lib.Coqlib <> Plt_ne thm
R93861:93866 compcert.lib.Coqlib <> Plt_ne thm
R93908:93920 compcert.common.Memory Mem load_free thm
R93908:93920 compcert.common.Memory Mem load_free thm
R93942:93947 compcert.lib.Coqlib <> Plt_ne thm
R93942:93947 compcert.lib.Coqlib <> Plt_ne thm
R93990:94004 compcert.common.Memory Mem perm_free_3 thm
R93990:94004 compcert.common.Memory Mem perm_free_3 thm
R94023:94029 compcert.lib.Coqlib <> Plt_Ple thm
R94023:94029 compcert.lib.Coqlib <> Plt_Ple thm
R94040:94054 compcert.common.Memory Mem valid_block def
R94040:94054 compcert.common.Memory Mem valid_block def
R94072:94093 compcert.common.Memory Mem valid_block_free_1 thm
R94072:94093 compcert.common.Memory Mem valid_block_free_1 thm
R94110:94127 compcert.backend.Stackingproof <> agree_valid_linear proj
R94110:94127 compcert.backend.Stackingproof <> agree_valid_linear proj
R94146:94152 compcert.lib.Coqlib <> Plt_Ple thm
R94146:94152 compcert.lib.Coqlib <> Plt_Ple thm
R94163:94177 compcert.common.Memory Mem valid_block def
R94163:94177 compcert.common.Memory Mem valid_block def
R94196:94217 compcert.common.Memory Mem valid_block_free_1 thm
R94196:94217 compcert.common.Memory Mem valid_block_free_1 thm
R94234:94249 compcert.backend.Stackingproof <> agree_valid_mach proj
R94234:94249 compcert.backend.Stackingproof <> agree_valid_mach proj
R94268:94304 compcert.backend.Conventions <> zero_size_arguments_tailcall_possible thm
R94268:94304 compcert.backend.Conventions <> zero_size_arguments_tailcall_possible thm
R94314:94330 compcert.backend.Lineartyping <> wt_state_tailcall thm
R94314:94330 compcert.backend.Lineartyping <> wt_state_tailcall thm
R94369:94393 compcert.common.Events <> external_call_mem_inject' thm
R94415:94444 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R94415:94444 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R94465:94477 compcert.backend.Stackingproof <> agree_reglist thm
R94465:94477 compcert.backend.Stackingproof <> agree_reglist thm
R94573:94580 compcert.common.Smallstep <> plus_one thm
R94573:94580 compcert.common.Smallstep <> plus_one thm
R94614:94645 compcert.common.Events <> external_call_symbols_preserved' thm
R94614:94645 compcert.common.Events <> external_call_symbols_preserved' thm
R94663:94679 compcert.backend.Stackingproof <> symbols_preserved thm
R94663:94679 compcert.backend.Stackingproof <> symbols_preserved thm
R94688:94704 compcert.backend.Stackingproof <> varinfo_preserved thm
R94688:94704 compcert.backend.Stackingproof <> varinfo_preserved thm
R94786:94811 compcert.backend.Stackingproof <> match_stack_change_extcall thm
R94786:94811 compcert.backend.Stackingproof <> match_stack_change_extcall thm
R94829:94835 compcert.lib.Coqlib <> Plt_Ple thm
R94829:94835 compcert.lib.Coqlib <> Plt_Ple thm
R94846:94860 compcert.common.Memory Mem valid_block def
R94846:94860 compcert.common.Memory Mem valid_block def
R94877:94894 compcert.backend.Stackingproof <> agree_valid_linear proj
R94877:94894 compcert.backend.Stackingproof <> agree_valid_linear proj
R94912:94918 compcert.lib.Coqlib <> Plt_Ple thm
R94912:94918 compcert.lib.Coqlib <> Plt_Ple thm
R94929:94943 compcert.common.Memory Mem valid_block def
R94929:94943 compcert.common.Memory Mem valid_block def
R94962:94977 compcert.backend.Stackingproof <> agree_valid_mach proj
R94962:94977 compcert.backend.Stackingproof <> agree_valid_mach proj
R94995:95013 compcert.backend.Stackingproof <> agree_regs_set_regs thm
R94995:95013 compcert.backend.Stackingproof <> agree_regs_set_regs thm
R95028:95048 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R95028:95048 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R95064:95085 compcert.backend.Stackingproof <> agree_regs_inject_incr thm
R95064:95085 compcert.backend.Stackingproof <> agree_regs_inject_incr thm
R95103:95122 compcert.backend.Stackingproof <> agree_frame_set_regs thm
R95103:95122 compcert.backend.Stackingproof <> agree_frame_set_regs thm
R95137:95158 compcert.backend.Stackingproof <> agree_frame_undef_regs thm
R95137:95158 compcert.backend.Stackingproof <> agree_frame_undef_regs thm
R95176:95198 compcert.backend.Stackingproof <> agree_frame_inject_incr thm
R95176:95198 compcert.backend.Stackingproof <> agree_frame_inject_incr thm
R95217:95245 compcert.backend.Stackingproof <> agree_frame_extcall_invariant thm
R95217:95245 compcert.backend.Stackingproof <> agree_frame_extcall_invariant thm
R95274:95299 compcert.common.Events <> external_call_valid_block' thm
R95274:95299 compcert.common.Events <> external_call_valid_block' thm
R95333:95354 compcert.common.Events <> external_call_max_perm def
R95333:95354 compcert.common.Events <> external_call_max_perm def
R95371:95388 compcert.backend.Stackingproof <> agree_valid_linear proj
R95371:95388 compcert.backend.Stackingproof <> agree_valid_linear proj
R95407:95432 compcert.common.Events <> external_call_valid_block' thm
R95407:95432 compcert.common.Events <> external_call_valid_block' thm
R95451:95466 compcert.backend.Stackingproof <> agree_valid_mach proj
R95451:95466 compcert.backend.Stackingproof <> agree_valid_mach proj
R95502:95528 compcert.backend.Stackingproof <> transl_annot_params_correct thm
R95545:95558 compcert.backend.Lineartyping <> wt_state_annot thm
R95545:95558 compcert.backend.Lineartyping <> wt_state_annot thm
R95604:95628 compcert.common.Events <> external_call_mem_inject' thm
R95650:95679 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R95650:95679 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R95774:95781 compcert.common.Smallstep <> plus_one thm
R95774:95781 compcert.common.Smallstep <> plus_one thm
R95815:95846 compcert.common.Events <> external_call_symbols_preserved' thm
R95815:95846 compcert.common.Events <> external_call_symbols_preserved' thm
R95864:95880 compcert.backend.Stackingproof <> symbols_preserved thm
R95864:95880 compcert.backend.Stackingproof <> symbols_preserved thm
R95889:95905 compcert.backend.Stackingproof <> varinfo_preserved thm
R95889:95905 compcert.backend.Stackingproof <> varinfo_preserved thm
R95966:95991 compcert.backend.Stackingproof <> match_stack_change_extcall thm
R95966:95991 compcert.backend.Stackingproof <> match_stack_change_extcall thm
R96009:96015 compcert.lib.Coqlib <> Plt_Ple thm
R96009:96015 compcert.lib.Coqlib <> Plt_Ple thm
R96026:96040 compcert.common.Memory Mem valid_block def
R96026:96040 compcert.common.Memory Mem valid_block def
R96057:96074 compcert.backend.Stackingproof <> agree_valid_linear proj
R96057:96074 compcert.backend.Stackingproof <> agree_valid_linear proj
R96092:96098 compcert.lib.Coqlib <> Plt_Ple thm
R96092:96098 compcert.lib.Coqlib <> Plt_Ple thm
R96109:96123 compcert.common.Memory Mem valid_block def
R96109:96123 compcert.common.Memory Mem valid_block def
R96142:96157 compcert.backend.Stackingproof <> agree_valid_mach proj
R96142:96157 compcert.backend.Stackingproof <> agree_valid_mach proj
R96176:96197 compcert.backend.Stackingproof <> agree_regs_inject_incr thm
R96176:96197 compcert.backend.Stackingproof <> agree_regs_inject_incr thm
R96216:96238 compcert.backend.Stackingproof <> agree_frame_inject_incr thm
R96216:96238 compcert.backend.Stackingproof <> agree_frame_inject_incr thm
R96257:96285 compcert.backend.Stackingproof <> agree_frame_extcall_invariant thm
R96257:96285 compcert.backend.Stackingproof <> agree_frame_extcall_invariant thm
R96314:96339 compcert.common.Events <> external_call_valid_block' thm
R96314:96339 compcert.common.Events <> external_call_valid_block' thm
R96373:96394 compcert.common.Events <> external_call_max_perm def
R96373:96394 compcert.common.Events <> external_call_max_perm def
R96411:96428 compcert.backend.Stackingproof <> agree_valid_linear proj
R96411:96428 compcert.backend.Stackingproof <> agree_valid_linear proj
R96447:96472 compcert.common.Events <> external_call_valid_block' thm
R96447:96472 compcert.common.Events <> external_call_valid_block' thm
R96491:96506 compcert.backend.Stackingproof <> agree_valid_mach proj
R96491:96506 compcert.backend.Stackingproof <> agree_valid_mach proj
R96563:96570 compcert.common.Smallstep <> plus_one thm
R96579:96589 compcert.backend.Mach <> exec_Mlabel constr
R96563:96570 compcert.common.Smallstep <> plus_one thm
R96579:96589 compcert.backend.Mach <> exec_Mlabel constr
R96673:96680 compcert.common.Smallstep <> plus_one thm
R96690:96699 compcert.backend.Mach <> exec_Mgoto constr
R96673:96680 compcert.common.Smallstep <> plus_one thm
R96690:96699 compcert.backend.Mach <> exec_Mgoto constr
R96717:96733 compcert.backend.Stackingproof <> transl_find_label thm
R96717:96733 compcert.backend.Stackingproof <> transl_find_label thm
R96776:96790 compcert.backend.Stackingproof <> find_label_tail thm
R96776:96790 compcert.backend.Stackingproof <> find_label_tail thm
R96852:96859 compcert.common.Smallstep <> plus_one thm
R96852:96859 compcert.common.Smallstep <> plus_one thm
R96869:96883 compcert.backend.Mach <> exec_Mcond_true constr
R96869:96883 compcert.backend.Mach <> exec_Mcond_true constr
R96902:96922 compcert.ia32.Op <> eval_condition_inject thm
R96902:96922 compcert.ia32.Op <> eval_condition_inject thm
R96939:96951 compcert.backend.Stackingproof <> agree_reglist thm
R96939:96951 compcert.backend.Stackingproof <> agree_reglist thm
R96970:96986 compcert.backend.Stackingproof <> transl_find_label thm
R96970:96986 compcert.backend.Stackingproof <> transl_find_label thm
R97048:97068 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R97048:97068 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R97086:97107 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R97086:97107 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R97122:97150 compcert.backend.Stackingproof <> destroyed_by_cond_caller_save thm
R97122:97150 compcert.backend.Stackingproof <> destroyed_by_cond_caller_save thm
R97163:97177 compcert.backend.Stackingproof <> find_label_tail thm
R97163:97177 compcert.backend.Stackingproof <> find_label_tail thm
R97240:97247 compcert.common.Smallstep <> plus_one thm
R97240:97247 compcert.common.Smallstep <> plus_one thm
R97257:97272 compcert.backend.Mach <> exec_Mcond_false constr
R97257:97272 compcert.backend.Mach <> exec_Mcond_false constr
R97291:97311 compcert.ia32.Op <> eval_condition_inject thm
R97291:97311 compcert.ia32.Op <> eval_condition_inject thm
R97328:97340 compcert.backend.Stackingproof <> agree_reglist thm
R97328:97340 compcert.backend.Stackingproof <> agree_reglist thm
R97402:97422 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R97402:97422 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R97440:97461 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R97440:97461 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R97476:97504 compcert.backend.Stackingproof <> destroyed_by_cond_caller_save thm
R97476:97504 compcert.backend.Stackingproof <> destroyed_by_cond_caller_save thm
R97566:97568 Coq.Init.Logic <> :type_scope:x_'='_x not
R97569:97572 compcert.common.Values <> Vint constr
R97566:97568 Coq.Init.Logic <> :type_scope:x_'='_x not
R97569:97572 compcert.common.Values <> Vint constr
R97675:97682 compcert.common.Smallstep <> plus_one thm
R97692:97706 compcert.backend.Mach <> exec_Mjumptable constr
R97675:97682 compcert.common.Smallstep <> plus_one thm
R97692:97706 compcert.backend.Mach <> exec_Mjumptable constr
R97725:97741 compcert.backend.Stackingproof <> transl_find_label thm
R97725:97741 compcert.backend.Stackingproof <> transl_find_label thm
R97803:97823 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R97803:97823 compcert.backend.Stackingproof <> agree_regs_undef_regs thm
R97840:97861 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R97840:97861 compcert.backend.Stackingproof <> agree_frame_undef_locs thm
R97876:97909 compcert.backend.Stackingproof <> destroyed_by_jumptable_caller_save thm
R97876:97909 compcert.backend.Stackingproof <> destroyed_by_jumptable_caller_save thm
R97921:97935 compcert.backend.Stackingproof <> find_label_tail thm
R97921:97935 compcert.backend.Stackingproof <> find_label_tail thm
R97972:97996 compcert.backend.Stackingproof <> function_epilogue_correct thm
R98086:98095 compcert.common.Smallstep <> plus_right thm
R98086:98095 compcert.common.Smallstep <> plus_right thm
R98171:98196 compcert.backend.Stackingproof <> match_stacks_change_bounds thm
R98171:98196 compcert.backend.Stackingproof <> match_stacks_change_bounds thm
R98220:98249 compcert.backend.Stackingproof <> match_stacks_change_linear_mem thm
R98220:98249 compcert.backend.Stackingproof <> match_stacks_change_linear_mem thm
R98268:98295 compcert.backend.Stackingproof <> match_stacks_change_mach_mem thm
R98268:98295 compcert.backend.Stackingproof <> match_stacks_change_mach_mem thm
R98350:98364 compcert.common.Memory Mem perm_free_1 thm
R98350:98364 compcert.common.Memory Mem perm_free_1 thm
R98386:98391 compcert.lib.Coqlib <> Plt_ne thm
R98386:98391 compcert.lib.Coqlib <> Plt_ne thm
R98433:98445 compcert.common.Memory Mem load_free thm
R98433:98445 compcert.common.Memory Mem load_free thm
R98467:98472 compcert.lib.Coqlib <> Plt_ne thm
R98467:98472 compcert.lib.Coqlib <> Plt_ne thm
R98515:98529 compcert.common.Memory Mem perm_free_3 thm
R98515:98529 compcert.common.Memory Mem perm_free_3 thm
R98548:98554 compcert.lib.Coqlib <> Plt_Ple thm
R98548:98554 compcert.lib.Coqlib <> Plt_Ple thm
R98565:98579 compcert.common.Memory Mem valid_block def
R98565:98579 compcert.common.Memory Mem valid_block def
R98597:98618 compcert.common.Memory Mem valid_block_free_1 thm
R98597:98618 compcert.common.Memory Mem valid_block_free_1 thm
R98635:98652 compcert.backend.Stackingproof <> agree_valid_linear proj
R98635:98652 compcert.backend.Stackingproof <> agree_valid_linear proj
R98671:98677 compcert.lib.Coqlib <> Plt_Ple thm
R98671:98677 compcert.lib.Coqlib <> Plt_Ple thm
R98688:98702 compcert.common.Memory Mem valid_block def
R98688:98702 compcert.common.Memory Mem valid_block def
R98721:98742 compcert.common.Memory Mem valid_block_free_1 thm
R98721:98742 compcert.common.Memory Mem valid_block_free_1 thm
R98759:98774 compcert.backend.Stackingproof <> agree_valid_mach proj
R98759:98774 compcert.backend.Stackingproof <> agree_valid_mach proj
R98836:98848 compcert.backend.Stacking <> transf_fundef def
R98851:98871 compcert.common.AST <> transf_partial_fundef def
R98884:98898 compcert.backend.Stacking <> transf_function def
R98884:98898 compcert.backend.Stacking <> transf_function def
R98995:99019 compcert.backend.Stackingproof <> function_prologue_correct thm
R99036:99055 compcert.backend.Lineartyping <> wt_callstate_wt_regs thm
R99036:99055 compcert.backend.Lineartyping <> wt_callstate_wt_regs thm
R99074:99093 compcert.backend.Stackingproof <> match_stacks_type_sp thm
R99074:99093 compcert.backend.Stackingproof <> match_stacks_type_sp thm
R99113:99137 compcert.backend.Stackingproof <> match_stacks_type_retaddr thm
R99113:99137 compcert.backend.Stackingproof <> match_stacks_type_retaddr thm
R99268:99276 compcert.common.Smallstep <> plus_left constr
R99268:99276 compcert.common.Smallstep <> plus_left constr
R99312:99333 compcert.backend.Stackingproof <> unfold_transf_function thm
R99312:99333 compcert.backend.Stackingproof <> unfold_transf_function thm
R99355:99361 compcert.backend.Mach <> fn_code proj
R99371:99381 compcert.backend.Stacking <> transl_body def
R99420:99435 compcert.common.Memory Mem alloc_result thm
R99420:99435 compcert.common.Memory Mem alloc_result thm
R99479:99494 compcert.common.Memory Mem alloc_result thm
R99479:99494 compcert.common.Memory Mem alloc_result thm
R99556:99583 compcert.backend.Stackingproof <> match_stacks_change_mach_mem thm
R99556:99583 compcert.backend.Stackingproof <> match_stacks_change_mach_mem thm
R99603:99632 compcert.backend.Stackingproof <> match_stacks_change_linear_mem thm
R99603:99632 compcert.backend.Stackingproof <> match_stacks_change_linear_mem thm
R99684:99709 compcert.backend.Stackingproof <> match_stacks_change_meminj thm
R99684:99709 compcert.backend.Stackingproof <> match_stacks_change_meminj thm
R99725:99732 compcert.lib.Coqlib <> Ple_refl thm
R99725:99732 compcert.lib.Coqlib <> Ple_refl thm
R99770:99787 compcert.common.Memory Mem perm_alloc_inv thm
R99818:99829 compcert.lib.Coqlib <> dec_eq_false thm
R99818:99829 compcert.lib.Coqlib <> dec_eq_false thm
R99844:99849 compcert.lib.Coqlib <> Plt_ne thm
R99844:99849 compcert.lib.Coqlib <> Plt_ne thm
R99876:99896 compcert.backend.Stackingproof <> stores_in_frame_valid thm
R99876:99896 compcert.backend.Stackingproof <> stores_in_frame_valid thm
R99933:99952 compcert.backend.Stackingproof <> stores_in_frame_perm thm
R99933:99952 compcert.backend.Stackingproof <> stores_in_frame_perm thm
R100010:100017 compcert.common.Memory Mem load def
R100010:100017 compcert.common.Memory Mem load def
R100044:100067 compcert.backend.Stackingproof <> stores_in_frame_contents thm
R100044:100067 compcert.backend.Stackingproof <> stores_in_frame_contents thm
R100086:100109 compcert.common.Memory Mem load_alloc_unchanged thm
R100086:100109 compcert.common.Memory Mem load_alloc_unchanged thm
R100240:100264 compcert.backend.Stackingproof <> transl_external_arguments thm
R100309:100333 compcert.common.Events <> external_call_mem_inject' thm
R100353:100382 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R100353:100382 compcert.backend.Stackingproof <> match_stacks_preserves_globals thm
R100477:100484 compcert.common.Smallstep <> plus_one thm
R100477:100484 compcert.common.Smallstep <> plus_one thm
R100494:100515 compcert.backend.Mach <> exec_function_external constr
R100494:100515 compcert.backend.Mach <> exec_function_external constr
R100534:100565 compcert.common.Events <> external_call_symbols_preserved' thm
R100534:100565 compcert.common.Events <> external_call_symbols_preserved' thm
R100583:100599 compcert.backend.Stackingproof <> symbols_preserved thm
R100583:100599 compcert.backend.Stackingproof <> symbols_preserved thm
R100608:100624 compcert.backend.Stackingproof <> varinfo_preserved thm
R100608:100624 compcert.backend.Stackingproof <> varinfo_preserved thm
R100691:100703 compcert.common.Memory Mem nextblock proj
R100709:100721 compcert.common.Memory Mem nextblock proj
R100658:100683 compcert.backend.Stackingproof <> match_stacks_change_bounds thm
R100691:100703 compcert.common.Memory Mem nextblock proj
R100709:100721 compcert.common.Memory Mem nextblock proj
R100658:100683 compcert.backend.Stackingproof <> match_stacks_change_bounds thm
R100753:100778 compcert.backend.Stackingproof <> match_stack_change_extcall thm
R100753:100778 compcert.backend.Stackingproof <> match_stack_change_extcall thm
R100794:100801 compcert.lib.Coqlib <> Ple_refl thm
R100794:100801 compcert.lib.Coqlib <> Ple_refl thm
R100810:100817 compcert.lib.Coqlib <> Ple_refl thm
R100810:100817 compcert.lib.Coqlib <> Ple_refl thm
R100830:100853 compcert.common.Events <> external_call_nextblock' thm
R100830:100853 compcert.common.Events <> external_call_nextblock' thm
R100872:100895 compcert.common.Events <> external_call_nextblock' thm
R100872:100895 compcert.common.Events <> external_call_nextblock' thm
R100913:100931 compcert.backend.Stackingproof <> agree_regs_set_regs thm
R100913:100931 compcert.backend.Stackingproof <> agree_regs_set_regs thm
R100946:100967 compcert.backend.Stackingproof <> agree_regs_inject_incr thm
R100946:100967 compcert.backend.Stackingproof <> agree_regs_inject_incr thm
R100992:101019 compcert.backend.Stackingproof <> agree_callee_save_set_result thm
R100992:101019 compcert.backend.Stackingproof <> agree_callee_save_set_result thm
R101109:101116 compcert.common.Smallstep <> plus_one thm
R101109:101116 compcert.common.Smallstep <> plus_one thm
R101125:101135 compcert.backend.Mach <> exec_return constr
R101125:101135 compcert.backend.Mach <> exec_return constr
R101170:101187 compcert.backend.Stackingproof <> agree_frame_return thm
R101170:101187 compcert.backend.Stackingproof <> agree_frame_return thm
prf 101218:101238 <> transf_initial_states
R101290:101296 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R101300:101301 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R101330:101333 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101302:101319 compcert.backend.Mach <> initial_state ind
R101327:101329 compcert.backend.Stackingproof <> st2 var
R101321:101325 compcert.backend.Stackingproof <> PRESERVATION.tprog var
R101334:101345 compcert.backend.Stackingproof <> match_states ind
R101351:101353 compcert.backend.Stackingproof <> st2 var
R101347:101349 compcert.backend.Stackingproof <> st1 var
R101255:101274 compcert.backend.Linear <> initial_state ind
R101281:101283 compcert.backend.Stackingproof <> st1 var
R101276:101279 compcert.backend.Stackingproof <> PRESERVATION.prog var
R101390:101412 compcert.backend.Stackingproof <> function_ptr_translated thm
R101494:101521 compcert.common.Globalenvs Genv init_mem_transf_partial thm
R101494:101521 compcert.common.Globalenvs Genv init_mem_transf_partial thm
R101542:101571 compcert.common.AST <> transform_partial_program_main thm
R101577:101582 compcert.backend.Stackingproof <> PRESERVATION.TRANSF var
R101542:101571 compcert.common.AST <> transform_partial_program_main thm
R101577:101582 compcert.backend.Stackingproof <> PRESERVATION.TRANSF var
R101597:101613 compcert.backend.Stackingproof <> symbols_preserved thm
R101597:101613 compcert.backend.Stackingproof <> symbols_preserved thm
R101655:101673 compcert.common.Globalenvs Genv initmem_inject thm
R101655:101673 compcert.common.Globalenvs Genv initmem_inject thm
R101716:101728 compcert.common.Memory Mem nextblock proj
R101691:101708 compcert.backend.Stackingproof <> match_stacks_empty constr
R101716:101728 compcert.common.Memory Mem nextblock proj
R101691:101708 compcert.backend.Stackingproof <> match_stacks_empty constr
R101741:101748 compcert.lib.Coqlib <> Ple_refl thm
R101741:101748 compcert.lib.Coqlib <> Ple_refl thm
R101757:101764 compcert.lib.Coqlib <> Ple_refl thm
R101757:101764 compcert.lib.Coqlib <> Ple_refl thm
R101802:101813 compcert.common.Memory Mem flat_inj def
R101822:101834 compcert.lib.Coqlib <> pred_dec_true thm
R101822:101834 compcert.lib.Coqlib <> pred_dec_true thm
R101854:101865 compcert.common.Memory Mem flat_inj def
R101886:101888 compcert.lib.Coqlib <> plt def
R101894:101906 compcert.common.Memory Mem nextblock proj
R101886:101888 compcert.lib.Coqlib <> plt def
R101894:101906 compcert.common.Memory Mem nextblock proj
R101946:101960 compcert.common.Memory Mem valid_block def
R101946:101960 compcert.common.Memory Mem valid_block def
R101977:102002 compcert.common.Globalenvs Genv find_symbol_not_fresh thm
R101977:102002 compcert.common.Globalenvs Genv find_symbol_not_fresh thm
R102032:102046 compcert.common.Memory Mem valid_block def
R102032:102046 compcert.common.Memory Mem valid_block def
R102063:102091 compcert.common.Globalenvs Genv find_funct_ptr_not_fresh thm
R102063:102091 compcert.common.Globalenvs Genv find_funct_ptr_not_fresh thm
R102121:102135 compcert.common.Memory Mem valid_block def
R102121:102135 compcert.common.Memory Mem valid_block def
R102152:102179 compcert.common.Globalenvs Genv find_var_info_not_fresh thm
R102152:102179 compcert.common.Globalenvs Genv find_var_info_not_fresh thm
R102224:102241 compcert.ia32.Conventions1 <> loc_arguments_main thm
R102224:102241 compcert.ia32.Conventions1 <> loc_arguments_main thm
R102273:102283 compcert.backend.Locations Locmap init def
R102314:102326 compcert.backend.Linear <> parent_locset def
prf 102352:102370 <> transf_final_states
R102448:102463 compcert.backend.Mach <> final_state ind
R102469:102469 compcert.backend.Stackingproof <> r var
R102465:102467 compcert.backend.Stackingproof <> st2 var
R102420:102437 compcert.backend.Linear <> final_state ind
R102443:102443 compcert.backend.Stackingproof <> r var
R102439:102441 compcert.backend.Stackingproof <> st1 var
R102396:102407 compcert.backend.Stackingproof <> match_states ind
R102413:102415 compcert.backend.Stackingproof <> st2 var
R102409:102411 compcert.backend.Stackingproof <> st1 var
prf 102608:102614 <> wt_prog
R102668:102676 compcert.backend.Lineartyping <> wt_fundef def
R102678:102679 compcert.backend.Stackingproof <> fd var
R102632:102633 Coq.Lists.List <> In def
R102654:102662 compcert.common.AST <> prog_defs proj
R102648:102651 compcert.backend.Stackingproof <> PRESERVATION.prog var
R102635:102635 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102637:102638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102646:102646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102636:102636 compcert.backend.Stackingproof <> i var
R102639:102642 compcert.common.AST <> Gfun constr
R102644:102645 compcert.backend.Stackingproof <> fd var
R102707:102740 compcert.common.AST <> transform_partial_program_succeeds thm
R102818:102832 compcert.backend.Stacking <> transf_function def
R102853:102863 compcert.backend.Lineartyping <> wt_function def
R102853:102863 compcert.backend.Lineartyping <> wt_function def
prf 102913:102934 <> transf_program_correct
R102939:102956 compcert.common.Smallstep <> forward_simulation rec
R102983:102996 compcert.backend.Mach <> semantics def
R103020:103024 compcert.backend.Stackingproof <> PRESERVATION.tprog var
R102998:103018 compcert.backend.Stackingproof <> PRESERVATION.return_address_offset var
R102959:102974 compcert.backend.Linear <> semantics def
R102976:102979 compcert.backend.Stackingproof <> PRESERVATION.prog var
R103070:103073 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103060:103067 compcert.backend.Lineartyping <> wt_state ind
R103069:103069 compcert.backend.Stackingproof <> s var
R103074:103085 compcert.backend.Stackingproof <> match_states ind
R103089:103090 compcert.backend.Stackingproof <> s' var
R103087:103087 compcert.backend.Stackingproof <> s var
R103070:103073 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103060:103067 compcert.backend.Lineartyping <> wt_state ind
R103069:103069 compcert.backend.Stackingproof <> s var
R103074:103085 compcert.backend.Stackingproof <> match_states ind
R103089:103090 compcert.backend.Stackingproof <> s' var
R103087:103087 compcert.backend.Stackingproof <> s var
R103103:103125 compcert.common.Smallstep <> forward_simulation_plus thm
R103103:103125 compcert.common.Smallstep <> forward_simulation_plus thm
R103163:103179 compcert.backend.Stackingproof <> symbols_preserved thm
R103163:103179 compcert.backend.Stackingproof <> symbols_preserved thm
R103200:103220 compcert.backend.Stackingproof <> transf_initial_states thm
R103330:103333 compcert.backend.Stackingproof <> PRESERVATION.prog var
R103299:103314 compcert.backend.Lineartyping <> wt_initial_state thm
R103330:103333 compcert.backend.Stackingproof <> PRESERVATION.prog var
R103299:103314 compcert.backend.Lineartyping <> wt_initial_state thm
R103349:103355 compcert.backend.Stackingproof <> wt_prog thm
R103349:103355 compcert.backend.Stackingproof <> wt_prog thm
R103388:103406 compcert.backend.Stackingproof <> transf_final_states thm
R103388:103406 compcert.backend.Stackingproof <> transf_final_states thm
R103451:103469 compcert.backend.Stackingproof <> transf_step_correct thm
R103545:103566 compcert.backend.Lineartyping <> step_type_preservation thm
R103545:103566 compcert.backend.Lineartyping <> step_type_preservation thm
R103583:103589 compcert.backend.Stackingproof <> wt_prog thm
R103583:103589 compcert.backend.Stackingproof <> wt_prog thm
R103621:103632 compcert.backend.Stackingproof PRESERVATION <> sec
