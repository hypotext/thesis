DIGEST NO
Fcompcert.backend.CSEproof
R894:899 compcert.lib.Coqlib <> <> lib
R917:920 compcert.lib.Maps <> <> lib
R938:940 compcert.common.AST <> <> lib
R958:963 compcert.common.Errors <> <> lib
R981:988 compcert.lib.Integers <> <> lib
R1006:1011 compcert.lib.Floats <> <> lib
R1029:1034 compcert.common.Values <> <> lib
R1052:1057 compcert.common.Memory <> <> lib
R1075:1080 compcert.common.Events <> <> lib
R1098:1107 compcert.common.Globalenvs <> <> lib
R1125:1133 compcert.common.Smallstep <> <> lib
R1151:1152 compcert.ia32.Op <> <> lib
R1170:1178 compcert.backend.Registers <> <> lib
R1196:1198 compcert.backend.RTL <> <> lib
R1216:1222 compcert.backend.Kildall <> <> lib
R1240:1250 compcert.backend.ValueDomain <> <> lib
R1268:1275 compcert.ia32.ValueAOp <> <> lib
R1293:1305 compcert.backend.ValueAnalysis <> <> lib
R1323:1331 compcert.backend.CSEdomain <> <> lib
R1349:1357 compcert.ia32.CombineOp <> <> lib
R1375:1388 compcert.ia32.CombineOpproof <> <> lib
R1406:1408 compcert.backend.CSE <> <> lib
prf 1475:1490 <> wf_equation_incr
R1561:1571 compcert.backend.CSEdomain <> wf_equation def
R1579:1579 compcert.backend.CSEproof <> e var
R1573:1577 compcert.backend.CSEproof <> next2 var
R1542:1544 compcert.lib.Coqlib <> Ple def
R1552:1556 compcert.backend.CSEproof <> next2 var
R1546:1550 compcert.backend.CSEproof <> next1 var
R1519:1529 compcert.backend.CSEdomain <> wf_equation def
R1537:1537 compcert.backend.CSEproof <> e var
R1531:1535 compcert.backend.CSEproof <> next1 var
R1598:1608 compcert.backend.CSEdomain <> wf_equation def
R1658:1669 Coq.PArith.BinPos <> Plt_le_trans syndef
R1658:1669 Coq.PArith.BinPos <> Plt_le_trans syndef
R1710:1721 Coq.PArith.BinPos <> Plt_le_trans syndef
R1710:1721 Coq.PArith.BinPos <> Plt_le_trans syndef
def 1825:1834 <> valu_agree
R1850:1858 compcert.backend.CSEdomain <> valuation def
R1868:1873 compcert.ia32.CombineOp <> valnum def
R1912:1914 Coq.Init.Logic <> :type_scope:x_'='_x not
R1905:1909 compcert.backend.CSEproof <> valu2 var
R1911:1911 compcert.backend.CSEproof <> v var
R1915:1919 compcert.backend.CSEproof <> valu1 var
R1921:1921 compcert.backend.CSEproof <> v var
R1891:1893 compcert.lib.Coqlib <> Plt def
R1897:1900 compcert.backend.CSEproof <> upto var
R1895:1895 compcert.backend.CSEproof <> v var
sec 1933:1937 <> EXTEN
var 1950:1954 EXTEN valu1
R1957:1965 compcert.backend.CSEdomain <> valuation def
var 1977:1980 EXTEN upto
R1983:1988 compcert.ia32.CombineOp <> valnum def
var 2000:2004 EXTEN valu2
R2007:2015 compcert.backend.CSEdomain <> valuation def
var 2029:2033 EXTEN AGREE
R2036:2045 compcert.backend.CSEproof <> valu_agree def
R2059:2062 compcert.backend.CSEproof <> EXTEN.upto var
R2053:2057 compcert.backend.CSEproof <> EXTEN.valu2 var
R2047:2051 compcert.backend.CSEproof <> EXTEN.valu1 var
var 2074:2075 EXTEN ge
R2078:2081 compcert.backend.RTL <> genv def
var 2093:2094 EXTEN sp
R2097:2099 compcert.common.Values <> val ind
var 2111:2112 EXTEN rs
R2115:2120 compcert.backend.RTL <> regset def
var 2132:2132 EXTEN m
R2135:2137 compcert.common.Memory <> mem syndef
prf 2147:2163 <> valnums_val_exten
R2232:2234 Coq.Init.Logic <> :type_scope:x_'='_x not
R2220:2222 Coq.Lists.List <> map def
R2230:2231 compcert.backend.CSEproof <> vl var
R2224:2228 compcert.backend.CSEproof <> EXTEN.valu2 var
R2235:2237 Coq.Lists.List <> map def
R2245:2246 compcert.backend.CSEproof <> vl var
R2239:2243 compcert.backend.CSEproof <> EXTEN.valu1 var
R2203:2205 compcert.lib.Coqlib <> Plt def
R2209:2212 compcert.backend.CSEproof <> EXTEN.upto var
R2207:2207 compcert.backend.CSEproof <> v var
R2192:2193 Coq.Lists.List <> In def
R2197:2198 compcert.backend.CSEproof <> vl var
R2195:2195 compcert.backend.CSEproof <> v var
R2272:2285 compcert.lib.Coqlib <> list_map_exten thm
R2272:2285 compcert.lib.Coqlib <> list_map_exten thm
prf 2324:2340 <> rhs_eval_to_exten
R2446:2456 compcert.backend.CSEdomain <> rhs_eval_to ind
R2474:2474 compcert.backend.CSEproof <> v var
R2472:2472 compcert.backend.CSEproof <> r var
R2470:2470 compcert.backend.CSEproof <> EXTEN.m var
R2467:2468 compcert.backend.CSEproof <> EXTEN.sp var
R2464:2465 compcert.backend.CSEproof <> EXTEN.ge var
R2458:2462 compcert.backend.CSEproof <> EXTEN.valu2 var
R2429:2431 compcert.lib.Coqlib <> Plt def
R2435:2438 compcert.backend.CSEproof <> EXTEN.upto var
R2433:2433 compcert.backend.CSEproof <> v var
R2405:2406 Coq.Lists.List <> In def
R2411:2421 compcert.backend.CSEdomain <> valnums_rhs def
R2423:2423 compcert.backend.CSEproof <> r var
R2408:2408 compcert.backend.CSEproof <> v var
R2359:2369 compcert.backend.CSEdomain <> rhs_eval_to ind
R2387:2387 compcert.backend.CSEproof <> v var
R2385:2385 compcert.backend.CSEproof <> r var
R2383:2383 compcert.backend.CSEproof <> EXTEN.m var
R2380:2381 compcert.backend.CSEproof <> EXTEN.sp var
R2377:2378 compcert.backend.CSEproof <> EXTEN.ge var
R2371:2375 compcert.backend.CSEproof <> EXTEN.valu1 var
R2536:2552 compcert.backend.CSEproof <> valnums_val_exten thm
R2536:2552 compcert.backend.CSEproof <> valnums_val_exten thm
R2606:2622 compcert.backend.CSEproof <> valnums_val_exten thm
R2606:2622 compcert.backend.CSEproof <> valnums_val_exten thm
prf 2657:2676 <> equation_holds_exten
R2753:2766 compcert.backend.CSEdomain <> equation_holds ind
R2782:2782 compcert.backend.CSEproof <> e var
R2780:2780 compcert.backend.CSEproof <> EXTEN.m var
R2777:2778 compcert.backend.CSEproof <> EXTEN.sp var
R2774:2775 compcert.backend.CSEproof <> EXTEN.ge var
R2768:2772 compcert.backend.CSEproof <> EXTEN.valu2 var
R2729:2739 compcert.backend.CSEdomain <> wf_equation def
R2746:2746 compcert.backend.CSEproof <> e var
R2741:2744 compcert.backend.CSEproof <> EXTEN.upto var
R2693:2706 compcert.backend.CSEdomain <> equation_holds ind
R2722:2722 compcert.backend.CSEproof <> e var
R2720:2720 compcert.backend.CSEproof <> EXTEN.m var
R2717:2718 compcert.backend.CSEproof <> EXTEN.sp var
R2714:2715 compcert.backend.CSEproof <> EXTEN.ge var
R2708:2712 compcert.backend.CSEproof <> EXTEN.valu1 var
R2857:2861 compcert.backend.CSEproof <> EXTEN.AGREE var
R2857:2861 compcert.backend.CSEproof <> EXTEN.AGREE var
R2878:2894 compcert.backend.CSEproof <> rhs_eval_to_exten thm
R2878:2894 compcert.backend.CSEproof <> rhs_eval_to_exten thm
R2925:2941 compcert.backend.CSEproof <> rhs_eval_to_exten thm
R2925:2941 compcert.backend.CSEproof <> rhs_eval_to_exten thm
R2959:2963 compcert.backend.CSEproof <> EXTEN.AGREE var
R2959:2963 compcert.backend.CSEproof <> EXTEN.AGREE var
prf 2992:3012 <> numbering_holds_exten
R3096:3110 compcert.backend.CSEdomain <> numbering_holds rec
R3129:3129 compcert.backend.CSEproof <> n var
R3127:3127 compcert.backend.CSEproof <> EXTEN.m var
R3124:3125 compcert.backend.CSEproof <> EXTEN.rs var
R3121:3122 compcert.backend.CSEproof <> EXTEN.sp var
R3118:3119 compcert.backend.CSEproof <> EXTEN.ge var
R3112:3116 compcert.backend.CSEproof <> EXTEN.valu2 var
R3069:3071 compcert.lib.Coqlib <> Ple def
R3086:3089 compcert.backend.CSEproof <> EXTEN.upto var
R3076:3083 compcert.backend.CSEdomain <> num_next proj
R3073:3073 compcert.backend.CSEproof <> n var
R3029:3043 compcert.backend.CSEdomain <> numbering_holds rec
R3062:3062 compcert.backend.CSEproof <> n var
R3060:3060 compcert.backend.CSEproof <> EXTEN.m var
R3057:3058 compcert.backend.CSEproof <> EXTEN.rs var
R3054:3055 compcert.backend.CSEproof <> EXTEN.sp var
R3051:3052 compcert.backend.CSEproof <> EXTEN.ge var
R3045:3049 compcert.backend.CSEproof <> EXTEN.valu1 var
R3198:3217 compcert.backend.CSEproof <> equation_holds_exten thm
R3198:3217 compcert.backend.CSEproof <> equation_holds_exten thm
R3236:3251 compcert.backend.CSEproof <> wf_equation_incr thm
R3236:3251 compcert.backend.CSEproof <> wf_equation_incr thm
R3281:3285 compcert.backend.CSEproof <> EXTEN.AGREE var
R3281:3285 compcert.backend.CSEproof <> EXTEN.AGREE var
R3302:3313 Coq.PArith.BinPos <> Plt_le_trans syndef
R3302:3313 Coq.PArith.BinPos <> Plt_le_trans syndef
R3330:3339 compcert.backend.CSEdomain <> wf_num_reg proj
R3330:3339 compcert.backend.CSEdomain <> wf_num_reg proj
R3360:3364 compcert.backend.CSEproof EXTEN <> sec
R3413:3416 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3413:3416 Coq.Init.Logic <> :type_scope:x_'/\'_x not
prf 3441:3456 <> valnum_reg_holds
R3567:3573 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3579:3585 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3621:3626 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3586:3600 compcert.backend.CSEdomain <> numbering_holds rec
R3619:3620 compcert.backend.CSEproof <> n' var
R3617:3617 compcert.backend.CSEproof <> m var
R3614:3615 compcert.backend.CSEproof <> rs var
R3611:3612 compcert.backend.CSEproof <> sp var
R3608:3609 compcert.backend.CSEproof <> ge var
R3602:3606 compcert.backend.CSEproof <> valu2 var
R3641:3646 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3631:3633 Coq.Init.Logic <> :type_scope:x_'='_x not
R3629:3629 compcert.backend.Registers <> ::x_'#'_x not
R3630:3630 compcert.backend.CSEproof <> r var
R3627:3628 compcert.backend.CSEproof <> rs var
R3634:3638 compcert.backend.CSEproof <> valu2 var
R3640:3640 compcert.backend.CSEproof <> v var
R3682:3687 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3647:3656 compcert.backend.CSEproof <> valu_agree def
R3673:3680 compcert.backend.CSEdomain <> num_next proj
R3670:3670 compcert.backend.CSEproof <> n var
R3664:3668 compcert.backend.CSEproof <> valu2 var
R3658:3662 compcert.backend.CSEproof <> valu1 var
R3707:3712 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3688:3690 compcert.lib.Coqlib <> Plt def
R3698:3705 compcert.backend.CSEdomain <> num_next proj
R3694:3695 compcert.backend.CSEproof <> n' var
R3692:3692 compcert.backend.CSEproof <> v var
R3713:3715 compcert.lib.Coqlib <> Ple def
R3734:3741 compcert.backend.CSEdomain <> num_next proj
R3730:3731 compcert.backend.CSEproof <> n' var
R3720:3727 compcert.backend.CSEdomain <> num_next proj
R3717:3717 compcert.backend.CSEproof <> n var
R3551:3553 Coq.Init.Logic <> :type_scope:x_'='_x not
R3537:3546 compcert.backend.CSE <> valnum_reg def
R3550:3550 compcert.backend.CSEproof <> r var
R3548:3548 compcert.backend.CSEproof <> n var
R3554:3554 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3557:3558 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3560:3560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3555:3556 compcert.backend.CSEproof <> n' var
R3559:3559 compcert.backend.CSEproof <> v var
R3497:3511 compcert.backend.CSEdomain <> numbering_holds rec
R3530:3530 compcert.backend.CSEproof <> n var
R3528:3528 compcert.backend.CSEproof <> m var
R3525:3526 compcert.backend.CSEproof <> rs var
R3522:3523 compcert.backend.CSEproof <> sp var
R3519:3520 compcert.backend.CSEproof <> ge var
R3513:3517 compcert.backend.CSEproof <> valu1 var
R3761:3770 compcert.backend.CSE <> valnum_reg def
R3792:3792 compcert.lib.Maps <> ::x_'!'_x not
R3802:3803 compcert.lib.Maps <> ::x_'!'_x not
R3793:3799 compcert.backend.CSEdomain <> num_reg proj
R3792:3792 compcert.lib.Maps <> ::x_'!'_x not
R3802:3803 compcert.lib.Maps <> ::x_'!'_x not
R3793:3799 compcert.backend.CSEdomain <> num_reg proj
R3932:3939 compcert.lib.Coqlib <> Ple_refl thm
R3932:3939 compcert.lib.Coqlib <> Ple_refl thm
R3988:3990 compcert.lib.Coqlib <> peq def
R3998:4005 compcert.backend.CSEdomain <> num_next proj
R3992:3993 compcert.backend.CSEproof <> vn var
R4029:4030 compcert.backend.CSEproof <> vn var
R4015:4015 compcert.backend.Registers <> ::x_'#'_x not
R3988:3990 compcert.lib.Coqlib <> peq def
R3998:4005 compcert.backend.CSEdomain <> num_next proj
R3992:3993 compcert.backend.CSEproof <> vn var
R4029:4030 compcert.backend.CSEproof <> vn var
R4015:4015 compcert.backend.Registers <> ::x_'#'_x not
R4048:4057 compcert.backend.CSEproof <> valu_agree def
R4074:4081 compcert.backend.CSEdomain <> num_next proj
R4048:4057 compcert.backend.CSEproof <> valu_agree def
R4074:4081 compcert.backend.CSEdomain <> num_next proj
R4123:4131 compcert.lib.Coqlib <> peq_false thm
R4123:4131 compcert.lib.Coqlib <> peq_false thm
R4140:4145 compcert.lib.Coqlib <> Plt_ne thm
R4140:4145 compcert.lib.Coqlib <> Plt_ne thm
R4273:4280 compcert.backend.CSEdomain <> num_next proj
R4250:4265 compcert.backend.CSEproof <> wf_equation_incr thm
R4273:4280 compcert.backend.CSEdomain <> num_next proj
R4250:4265 compcert.backend.CSEproof <> wf_equation_incr thm
R4320:4331 compcert.lib.Maps PTree gsspec thm
R4320:4331 compcert.lib.Maps PTree gsspec thm
R4350:4352 compcert.lib.Coqlib <> peq def
R4350:4352 compcert.lib.Coqlib <> peq def
R4388:4401 compcert.lib.Coqlib <> Plt_trans_succ thm
R4388:4401 compcert.lib.Coqlib <> Plt_trans_succ thm
R4430:4440 compcert.lib.Maps PMap gsspec thm
R4430:4440 compcert.lib.Maps PMap gsspec thm
R4459:4461 compcert.lib.Coqlib <> peq def
R4466:4473 compcert.backend.CSEdomain <> num_next proj
R4459:4461 compcert.lib.Coqlib <> peq def
R4466:4473 compcert.backend.CSEdomain <> num_next proj
R0:-1 compcert.backend.CSEproof <> y var
R4537:4545 compcert.lib.Maps PTree gss thm
R4537:4545 compcert.lib.Maps PTree gss thm
R4571:4580 compcert.backend.CSEdomain <> wf_num_val proj
R4617:4625 compcert.lib.Maps PTree gso thm
R4617:4625 compcert.lib.Maps PTree gso thm
R4657:4676 compcert.backend.CSEproof <> equation_holds_exten thm
R4657:4676 compcert.backend.CSEproof <> equation_holds_exten thm
R4719:4730 compcert.lib.Maps PTree gsspec thm
R4719:4730 compcert.lib.Maps PTree gsspec thm
R4749:4751 compcert.lib.Coqlib <> peq def
R4749:4751 compcert.lib.Coqlib <> peq def
R4778:4785 compcert.lib.Coqlib <> peq_true thm
R4778:4785 compcert.lib.Coqlib <> peq_true thm
R4805:4813 compcert.lib.Coqlib <> peq_false thm
R4805:4813 compcert.lib.Coqlib <> peq_false thm
R4838:4843 compcert.lib.Coqlib <> Plt_ne thm
R4838:4843 compcert.lib.Coqlib <> Plt_ne thm
R4886:4893 compcert.lib.Coqlib <> peq_true thm
R4886:4893 compcert.lib.Coqlib <> peq_true thm
prf 4942:4958 <> valnum_regs_holds
R5074:5080 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5086:5092 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5128:5133 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5093:5107 compcert.backend.CSEdomain <> numbering_holds rec
R5126:5127 compcert.backend.CSEproof <> n' var
R5124:5124 compcert.backend.CSEproof <> m var
R5121:5122 compcert.backend.CSEproof <> rs var
R5118:5119 compcert.backend.CSEproof <> sp var
R5115:5116 compcert.backend.CSEproof <> ge var
R5109:5113 compcert.backend.CSEproof <> valu2 var
R5155:5160 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5140:5142 Coq.Init.Logic <> :type_scope:x_'='_x not
R5136:5137 compcert.backend.Registers <> ::x_'##'_x not
R5134:5135 compcert.backend.CSEproof <> rs var
R5138:5139 compcert.backend.CSEproof <> rl var
R5143:5145 Coq.Lists.List <> map def
R5153:5154 compcert.backend.CSEproof <> vl var
R5147:5151 compcert.backend.CSEproof <> valu2 var
R5196:5201 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5161:5170 compcert.backend.CSEproof <> valu_agree def
R5187:5194 compcert.backend.CSEdomain <> num_next proj
R5184:5184 compcert.backend.CSEproof <> n var
R5178:5182 compcert.backend.CSEproof <> valu2 var
R5172:5176 compcert.backend.CSEproof <> valu1 var
R5202:5202 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5243:5249 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5224:5226 compcert.lib.Coqlib <> Plt def
R5234:5241 compcert.backend.CSEdomain <> num_next proj
R5230:5231 compcert.backend.CSEproof <> n' var
R5228:5228 compcert.backend.CSEproof <> v var
R5213:5214 Coq.Lists.List <> In def
R5218:5219 compcert.backend.CSEproof <> vl var
R5216:5216 compcert.backend.CSEproof <> v var
R5250:5252 compcert.lib.Coqlib <> Ple def
R5271:5278 compcert.backend.CSEdomain <> num_next proj
R5267:5268 compcert.backend.CSEproof <> n' var
R5257:5264 compcert.backend.CSEdomain <> num_next proj
R5254:5254 compcert.backend.CSEproof <> n var
R5057:5059 Coq.Init.Logic <> :type_scope:x_'='_x not
R5041:5051 compcert.backend.CSE <> valnum_regs def
R5055:5056 compcert.backend.CSEproof <> rl var
R5053:5053 compcert.backend.CSEproof <> n var
R5060:5060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5063:5064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5067:5067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5061:5062 compcert.backend.CSEproof <> n' var
R5065:5066 compcert.backend.CSEproof <> vl var
R5001:5015 compcert.backend.CSEdomain <> numbering_holds rec
R5034:5034 compcert.backend.CSEproof <> n var
R5032:5032 compcert.backend.CSEproof <> m var
R5029:5030 compcert.backend.CSEproof <> rs var
R5026:5027 compcert.backend.CSEproof <> sp var
R5023:5024 compcert.backend.CSEproof <> ge var
R5017:5021 compcert.backend.CSEproof <> valu1 var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R5405:5414 compcert.backend.CSE <> valnum_reg def
R5405:5414 compcert.backend.CSE <> valnum_reg def
R5452:5462 compcert.backend.CSE <> valnum_regs def
R5452:5462 compcert.backend.CSE <> valnum_regs def
R5510:5525 compcert.backend.CSEproof <> valnum_reg_holds thm
prf 5867:5889 <> find_valnum_rhs_charact
R5948:5949 Coq.Lists.List <> In def
R5966:5968 compcert.backend.CSEproof <> eqs var
R5952:5953 compcert.backend.CSEdomain <> Eq constr
R5962:5963 compcert.backend.CSEproof <> rh var
R5957:5960 Coq.Init.Datatypes <> true constr
R5955:5955 compcert.backend.CSEproof <> v var
R5935:5937 Coq.Init.Logic <> :type_scope:x_'='_x not
R5913:5927 compcert.backend.CSE <> find_valnum_rhs def
R5932:5934 compcert.backend.CSEproof <> eqs var
R5929:5930 compcert.backend.CSEproof <> rh var
R5938:5941 Coq.Init.Datatypes <> Some constr
R5943:5943 compcert.backend.CSEproof <> v var
R6049:6052 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R6053:6058 compcert.backend.CSEdomain <> eq_rhs def
R6049:6052 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R6053:6058 compcert.backend.CSEdomain <> eq_rhs def
prf 6140:6163 <> find_valnum_rhs'_charact
R6223:6229 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6236:6237 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6238:6239 Coq.Lists.List <> In def
R6258:6260 compcert.backend.CSEproof <> eqs var
R6242:6243 compcert.backend.CSEdomain <> Eq constr
R6254:6255 compcert.backend.CSEproof <> rh var
R6247:6252 compcert.backend.CSEproof <> strict var
R6245:6245 compcert.backend.CSEproof <> v var
R6210:6212 Coq.Init.Logic <> :type_scope:x_'='_x not
R6187:6202 compcert.backend.CSE <> find_valnum_rhs' def
R6207:6209 compcert.backend.CSEproof <> eqs var
R6204:6205 compcert.backend.CSEproof <> rh var
R6213:6216 Coq.Init.Datatypes <> Some constr
R6218:6218 compcert.backend.CSEproof <> v var
R6335:6340 compcert.backend.CSEdomain <> eq_rhs def
R6335:6340 compcert.backend.CSEdomain <> eq_rhs def
prf 6458:6480 <> find_valnum_num_charact
R6535:6536 Coq.Lists.List <> In def
R6552:6554 compcert.backend.CSEproof <> eqs var
R6539:6540 compcert.backend.CSEdomain <> Eq constr
R6549:6549 compcert.backend.CSEproof <> r var
R6544:6547 Coq.Init.Datatypes <> true constr
R6542:6542 compcert.backend.CSEproof <> v var
R6522:6524 Coq.Init.Logic <> :type_scope:x_'='_x not
R6501:6515 compcert.backend.CSE <> find_valnum_num def
R6519:6521 compcert.backend.CSEproof <> eqs var
R6517:6517 compcert.backend.CSEproof <> v var
R6525:6528 Coq.Init.Datatypes <> Some constr
R6530:6530 compcert.backend.CSEproof <> r var
R6635:6638 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R6639:6641 compcert.lib.Coqlib <> peq def
R6635:6638 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R6639:6641 compcert.lib.Coqlib <> peq def
prf 6711:6726 <> reg_valnum_sound
R6835:6837 Coq.Init.Logic <> :type_scope:x_'='_x not
R6833:6833 compcert.backend.Registers <> ::x_'#'_x not
R6834:6834 compcert.backend.CSEproof <> r var
R6831:6832 compcert.backend.CSEproof <> rs var
R6838:6841 compcert.backend.CSEproof <> valu var
R6843:6843 compcert.backend.CSEproof <> v var
R6792:6806 compcert.backend.CSEdomain <> numbering_holds rec
R6824:6824 compcert.backend.CSEproof <> n var
R6822:6822 compcert.backend.CSEproof <> m var
R6819:6820 compcert.backend.CSEproof <> rs var
R6816:6817 compcert.backend.CSEproof <> sp var
R6813:6814 compcert.backend.CSEproof <> ge var
R6808:6811 compcert.backend.CSEproof <> valu var
R6777:6779 Coq.Init.Logic <> :type_scope:x_'='_x not
R6763:6772 compcert.backend.CSE <> reg_valnum def
R6776:6776 compcert.backend.CSEproof <> v var
R6774:6774 compcert.backend.CSEproof <> n var
R6780:6783 Coq.Init.Datatypes <> Some constr
R6785:6785 compcert.backend.CSEproof <> r var
R6862:6871 compcert.backend.CSE <> reg_valnum def
R6891:6891 compcert.backend.Registers <> ::x_'#'_x not
R6901:6902 compcert.backend.Registers <> ::x_'#'_x not
R6892:6898 compcert.backend.CSEdomain <> num_val proj
R6891:6891 compcert.backend.Registers <> ::x_'#'_x not
R6901:6902 compcert.backend.Registers <> ::x_'#'_x not
R6892:6898 compcert.backend.CSEdomain <> num_val proj
R6942:6954 compcert.backend.CSEdomain <> num_holds_reg proj
R6942:6954 compcert.backend.CSEdomain <> num_holds_reg proj
R6971:6980 compcert.backend.CSEdomain <> wf_num_val proj
R6971:6980 compcert.backend.CSEdomain <> wf_num_val proj
prf 7043:7060 <> regs_valnums_sound
R7187:7189 Coq.Init.Logic <> :type_scope:x_'='_x not
R7183:7184 compcert.backend.Registers <> ::x_'##'_x not
R7181:7182 compcert.backend.CSEproof <> rs var
R7185:7186 compcert.backend.CSEproof <> rl var
R7190:7192 Coq.Lists.List <> map def
R7199:7200 compcert.backend.CSEproof <> vl var
R7194:7197 compcert.backend.CSEproof <> valu var
R7165:7167 Coq.Init.Logic <> :type_scope:x_'='_x not
R7148:7159 compcert.backend.CSE <> regs_valnums def
R7163:7164 compcert.backend.CSEproof <> vl var
R7161:7161 compcert.backend.CSEproof <> n var
R7168:7171 Coq.Init.Datatypes <> Some constr
R7173:7174 compcert.backend.CSEproof <> rl var
R7093:7107 compcert.backend.CSEdomain <> numbering_holds rec
R7125:7125 compcert.backend.CSEproof <> n var
R7123:7123 compcert.backend.CSEproof <> m var
R7120:7121 compcert.backend.CSEproof <> rs var
R7117:7118 compcert.backend.CSEproof <> sp var
R7114:7115 compcert.backend.CSEproof <> ge var
R7109:7112 compcert.backend.CSEproof <> valu var
R7269:7278 compcert.backend.CSE <> reg_valnum def
R7269:7278 compcert.backend.CSE <> reg_valnum def
R7333:7344 compcert.backend.CSE <> regs_valnums def
R7333:7344 compcert.backend.CSE <> regs_valnums def
R7404:7419 compcert.backend.CSEproof <> reg_valnum_sound thm
R7404:7419 compcert.backend.CSEproof <> reg_valnum_sound thm
prf 7449:7462 <> find_rhs_sound
R7567:7573 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7575:7576 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7606:7609 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7577:7587 compcert.backend.CSEdomain <> rhs_eval_to ind
R7605:7605 compcert.backend.CSEproof <> v var
R7602:7603 compcert.backend.CSEproof <> rh var
R7600:7600 compcert.backend.CSEproof <> m var
R7597:7598 compcert.backend.CSEproof <> sp var
R7594:7595 compcert.backend.CSEproof <> ge var
R7589:7592 compcert.backend.CSEproof <> valu var
R7610:7620 compcert.common.Values Val lessdef ind
R7626:7626 compcert.backend.Registers <> ::x_'#'_x not
R7627:7627 compcert.backend.CSEproof <> r var
R7624:7625 compcert.backend.CSEproof <> rs var
R7622:7622 compcert.backend.CSEproof <> v var
R7528:7542 compcert.backend.CSEdomain <> numbering_holds rec
R7560:7560 compcert.backend.CSEproof <> n var
R7558:7558 compcert.backend.CSEproof <> m var
R7555:7556 compcert.backend.CSEproof <> rs var
R7552:7553 compcert.backend.CSEproof <> sp var
R7549:7550 compcert.backend.CSEproof <> ge var
R7544:7547 compcert.backend.CSEproof <> valu var
R7513:7515 Coq.Init.Logic <> :type_scope:x_'='_x not
R7500:7507 compcert.backend.CSE <> find_rhs def
R7511:7512 compcert.backend.CSEproof <> rh var
R7509:7509 compcert.backend.CSEproof <> n var
R7516:7519 Coq.Init.Datatypes <> Some constr
R7521:7521 compcert.backend.CSEproof <> r var
R7646:7653 compcert.backend.CSE <> find_rhs def
R7674:7689 compcert.backend.CSE <> find_valnum_rhs' def
R7695:7701 compcert.backend.CSEdomain <> num_eqs proj
R7674:7689 compcert.backend.CSE <> find_valnum_rhs' def
R7695:7701 compcert.backend.CSEdomain <> num_eqs proj
R7753:7776 compcert.backend.CSEproof <> find_valnum_rhs'_charact thm
R7817:7832 compcert.backend.CSEproof <> reg_valnum_sound thm
R7817:7832 compcert.backend.CSEproof <> reg_valnum_sound thm
R7854:7865 compcert.backend.CSEdomain <> num_holds_eq proj
prf 7953:7961 <> in_remove
R8001:8001 compcert.backend.CSEproof <> A var
R8005:8005 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R8009:8011 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R8016:8016 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R8007:8007 Coq.Init.Logic <> :type_scope:x_'='_x not
R8006:8006 compcert.backend.CSEproof <> x var
R8008:8008 compcert.backend.CSEproof <> y var
R8013:8014 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R8012:8012 compcert.backend.CSEproof <> x var
R8015:8015 compcert.backend.CSEproof <> y var
R8053:8057 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8028:8029 Coq.Lists.List <> In def
R8034:8044 Coq.Lists.List <> remove def
R8051:8051 compcert.backend.CSEproof <> l var
R8049:8049 compcert.backend.CSEproof <> x var
R8046:8047 compcert.backend.CSEproof <> eq var
R8031:8031 compcert.backend.CSEproof <> y var
R8064:8067 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8059:8062 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R8058:8058 compcert.backend.CSEproof <> x var
R8063:8063 compcert.backend.CSEproof <> y var
R8068:8069 Coq.Lists.List <> In def
R8073:8073 compcert.backend.CSEproof <> l var
R8071:8071 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
prf 8225:8242 <> forget_reg_charact
R8332:8335 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8326:8329 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R8325:8325 compcert.backend.CSEproof <> r var
R8330:8331 compcert.backend.CSEproof <> rd var
R8336:8337 Coq.Lists.List <> In def
R8342:8349 compcert.lib.Maps PMap get def
R8356:8362 compcert.backend.CSEdomain <> num_val proj
R8353:8353 compcert.backend.CSEproof <> n var
R8351:8351 compcert.backend.CSEproof <> v var
R8339:8339 compcert.backend.CSEproof <> r var
R8286:8287 Coq.Lists.List <> In def
R8292:8299 compcert.lib.Maps PMap get def
R8304:8313 compcert.backend.CSE <> forget_reg def
R8317:8318 compcert.backend.CSEproof <> rd var
R8315:8315 compcert.backend.CSEproof <> n var
R8301:8301 compcert.backend.CSEproof <> v var
R8289:8289 compcert.backend.CSEproof <> r var
R8266:8277 compcert.backend.CSEdomain <> wf_numbering rec
R8279:8279 compcert.backend.CSEproof <> n var
R8383:8392 compcert.backend.CSE <> forget_reg def
R8415:8423 compcert.lib.Maps PTree get def
R8431:8437 compcert.backend.CSEdomain <> num_reg proj
R8415:8423 compcert.lib.Maps PTree get def
R8431:8437 compcert.backend.CSEdomain <> num_reg proj
R8469:8479 compcert.lib.Maps PMap gsspec thm
R8469:8479 compcert.lib.Maps PMap gsspec thm
R8498:8500 compcert.lib.Coqlib <> peq def
R8498:8500 compcert.lib.Coqlib <> peq def
R8530:8538 compcert.backend.CSEproof <> in_remove thm
R8530:8538 compcert.backend.CSEproof <> in_remove thm
R0:-1 compcert.backend.CSEproof <> y var
R8583:8592 compcert.backend.CSEdomain <> wf_num_val proj
R8637:8646 compcert.backend.CSEdomain <> wf_num_val proj
prf 8682:8699 <> update_reg_charact
R8831:8833 Coq.Init.Logic <> :type_scope:x_'='_x not
R8790:8798 compcert.lib.Maps PTree get def
R8803:8811 compcert.lib.Maps PTree set def
R8822:8828 compcert.backend.CSEdomain <> num_reg proj
R8819:8819 compcert.backend.CSEproof <> n var
R8816:8817 compcert.backend.CSEproof <> vd var
R8813:8814 compcert.backend.CSEproof <> rd var
R8800:8800 compcert.backend.CSEproof <> r var
R8834:8837 Coq.Init.Datatypes <> Some constr
R8839:8839 compcert.backend.CSEproof <> v var
R8746:8747 Coq.Lists.List <> In def
R8752:8759 compcert.lib.Maps PMap get def
R8764:8773 compcert.backend.CSE <> update_reg def
R8780:8781 compcert.backend.CSEproof <> vd var
R8777:8778 compcert.backend.CSEproof <> rd var
R8775:8775 compcert.backend.CSEproof <> n var
R8761:8761 compcert.backend.CSEproof <> v var
R8749:8749 compcert.backend.CSEproof <> r var
R8726:8737 compcert.backend.CSEdomain <> wf_numbering rec
R8739:8739 compcert.backend.CSEproof <> n var
R8858:8867 compcert.backend.CSE <> update_reg def
R8888:8898 compcert.lib.Maps PMap gsspec thm
R8888:8898 compcert.lib.Maps PMap gsspec thm
R8919:8921 compcert.lib.Coqlib <> peq def
R8919:8921 compcert.lib.Coqlib <> peq def
R8972:8980 compcert.lib.Maps PTree gss thm
R8972:8980 compcert.lib.Maps PTree gss thm
R8993:9010 compcert.backend.CSEproof <> forget_reg_charact thm
R9044:9052 compcert.lib.Maps PTree gso thm
R9044:9052 compcert.lib.Maps PTree gso thm
R9070:9079 compcert.backend.CSEdomain <> wf_num_val proj
R9070:9079 compcert.backend.CSEdomain <> wf_num_val proj
R9099:9116 compcert.backend.CSEproof <> forget_reg_charact thm
R9150:9158 compcert.lib.Maps PTree gso thm
R9150:9158 compcert.lib.Maps PTree gso thm
R9176:9185 compcert.backend.CSEdomain <> wf_num_val proj
R9176:9185 compcert.backend.CSEdomain <> wf_num_val proj
prf 9207:9221 <> rhs_eval_to_inj
R9328:9330 Coq.Init.Logic <> :type_scope:x_'='_x not
R9326:9327 compcert.backend.CSEproof <> v1 var
R9331:9332 compcert.backend.CSEproof <> v2 var
R9292:9302 compcert.backend.CSEdomain <> rhs_eval_to ind
R9320:9321 compcert.backend.CSEproof <> v2 var
R9317:9318 compcert.backend.CSEproof <> rh var
R9315:9315 compcert.backend.CSEproof <> m var
R9312:9313 compcert.backend.CSEproof <> sp var
R9309:9310 compcert.backend.CSEproof <> ge var
R9304:9307 compcert.backend.CSEproof <> valu var
R9258:9268 compcert.backend.CSEdomain <> rhs_eval_to ind
R9286:9287 compcert.backend.CSEproof <> v1 var
R9283:9284 compcert.backend.CSEproof <> rh var
R9281:9281 compcert.backend.CSEproof <> m var
R9278:9279 compcert.backend.CSEproof <> sp var
R9275:9276 compcert.backend.CSEproof <> ge var
R9270:9273 compcert.backend.CSEproof <> valu var
prf 9391:9403 <> add_rhs_holds
R9599:9605 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9611:9612 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R9613:9627 compcert.backend.CSEdomain <> numbering_holds rec
R9648:9654 compcert.backend.CSE <> add_rhs def
R9661:9662 compcert.backend.CSEproof <> rh var
R9658:9659 compcert.backend.CSEproof <> rd var
R9656:9656 compcert.backend.CSEproof <> n var
R9645:9645 compcert.backend.CSEproof <> m var
R9641:9643 compcert.backend.CSEproof <> rs' var
R9638:9639 compcert.backend.CSEproof <> sp var
R9635:9636 compcert.backend.CSEproof <> ge var
R9629:9633 compcert.backend.CSEproof <> valu2 var
R9585:9587 Coq.Init.Logic <> :type_scope:x_'='_x not
R9583:9583 compcert.backend.Registers <> ::x_'#'_x not
R9584:9584 compcert.backend.CSEproof <> r var
R9580:9582 compcert.backend.CSEproof <> rs' var
R9590:9590 compcert.backend.Registers <> ::x_'#'_x not
R9591:9591 compcert.backend.CSEproof <> r var
R9588:9589 compcert.backend.CSEproof <> rs var
R9570:9573 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R9569:9569 compcert.backend.CSEproof <> r var
R9574:9575 compcert.backend.CSEproof <> rd var
R9530:9535 compcert.backend.CSEdomain <> wf_rhs def
R9550:9551 compcert.backend.CSEproof <> rh var
R9540:9547 compcert.backend.CSEdomain <> num_next proj
R9537:9537 compcert.backend.CSEproof <> n var
R9487:9497 compcert.backend.CSEdomain <> rhs_eval_to ind
R9520:9520 compcert.backend.Registers <> ::x_'#'_x not
R9521:9522 compcert.backend.CSEproof <> rd var
R9517:9519 compcert.backend.CSEproof <> rs' var
R9513:9514 compcert.backend.CSEproof <> rh var
R9511:9511 compcert.backend.CSEproof <> m var
R9508:9509 compcert.backend.CSEproof <> sp var
R9505:9506 compcert.backend.CSEproof <> ge var
R9499:9503 compcert.backend.CSEproof <> valu1 var
R9447:9461 compcert.backend.CSEdomain <> numbering_holds rec
R9480:9480 compcert.backend.CSEproof <> n var
R9478:9478 compcert.backend.CSEproof <> m var
R9475:9476 compcert.backend.CSEproof <> rs var
R9472:9473 compcert.backend.CSEproof <> sp var
R9469:9470 compcert.backend.CSEproof <> ge var
R9463:9467 compcert.backend.CSEproof <> valu1 var
R9682:9688 compcert.backend.CSE <> add_rhs def
R9711:9725 compcert.backend.CSE <> find_valnum_rhs def
R9733:9739 compcert.backend.CSEdomain <> num_eqs proj
R9711:9725 compcert.backend.CSE <> find_valnum_rhs def
R9733:9739 compcert.backend.CSEdomain <> num_eqs proj
R9813:9835 compcert.backend.CSEproof <> find_valnum_rhs_charact thm
R9866:9875 compcert.backend.CSEdomain <> wf_num_eqs proj
R9918:9929 compcert.backend.CSEdomain <> num_holds_eq proj
R9974:9976 Coq.Init.Logic <> :type_scope:x_'='_x not
R9971:9971 compcert.backend.Registers <> ::x_'#'_x not
R10000:10014 compcert.backend.CSEproof <> rhs_eval_to_inj thm
R9974:9976 Coq.Init.Logic <> :type_scope:x_'='_x not
R9971:9971 compcert.backend.Registers <> ::x_'#'_x not
R10000:10014 compcert.backend.CSEproof <> rhs_eval_to_inj thm
R10131:10142 compcert.lib.Maps PTree gsspec thm
R10131:10142 compcert.lib.Maps PTree gsspec thm
R10161:10163 compcert.lib.Coqlib <> peq def
R10161:10163 compcert.lib.Coqlib <> peq def
R10221:10238 compcert.backend.CSEproof <> update_reg_charact thm
R10221:10238 compcert.backend.CSEproof <> update_reg_charact thm
R10285:10296 compcert.lib.Maps PTree gsspec thm
R10285:10296 compcert.lib.Maps PTree gsspec thm
R10315:10317 compcert.lib.Coqlib <> peq def
R10315:10317 compcert.lib.Coqlib <> peq def
R10445:10447 compcert.lib.Coqlib <> peq def
R10454:10461 compcert.backend.CSEdomain <> num_next proj
R10449:10449 compcert.backend.CSEproof <> v var
R10487:10487 compcert.backend.CSEproof <> v var
R10472:10472 compcert.backend.Registers <> ::x_'#'_x not
R10445:10447 compcert.lib.Coqlib <> peq def
R10454:10461 compcert.backend.CSEdomain <> num_next proj
R10449:10449 compcert.backend.CSEproof <> v var
R10487:10487 compcert.backend.CSEproof <> v var
R10472:10472 compcert.backend.Registers <> ::x_'#'_x not
R10505:10514 compcert.backend.CSEproof <> valu_agree def
R10531:10538 compcert.backend.CSEdomain <> num_next proj
R10505:10514 compcert.backend.CSEproof <> valu_agree def
R10531:10538 compcert.backend.CSEdomain <> num_next proj
R10580:10588 compcert.lib.Coqlib <> peq_false thm
R10580:10588 compcert.lib.Coqlib <> peq_false thm
R10597:10602 compcert.lib.Coqlib <> Plt_ne thm
R10597:10602 compcert.lib.Coqlib <> Plt_ne thm
R10758:10771 compcert.lib.Coqlib <> Plt_trans_succ thm
R10758:10771 compcert.lib.Coqlib <> Plt_trans_succ thm
R10815:10822 compcert.backend.CSEdomain <> num_next proj
R10792:10807 compcert.backend.CSEproof <> wf_equation_incr thm
R10815:10822 compcert.backend.CSEdomain <> num_next proj
R10792:10807 compcert.backend.CSEproof <> wf_equation_incr thm
R10865:10876 compcert.lib.Maps PTree gsspec thm
R10865:10876 compcert.lib.Maps PTree gsspec thm
R10895:10897 compcert.lib.Coqlib <> peq def
R10895:10897 compcert.lib.Coqlib <> peq def
R10936:10949 compcert.lib.Coqlib <> Plt_trans_succ thm
R10936:10949 compcert.lib.Coqlib <> Plt_trans_succ thm
R10978:10995 compcert.backend.CSEproof <> update_reg_charact thm
R10978:10995 compcert.backend.CSEproof <> update_reg_charact thm
R11079:11086 compcert.lib.Coqlib <> peq_true thm
R11079:11086 compcert.lib.Coqlib <> peq_true thm
R11099:11115 compcert.backend.CSEproof <> rhs_eval_to_exten thm
R11099:11115 compcert.backend.CSEproof <> rhs_eval_to_exten thm
R11135:11154 compcert.backend.CSEproof <> equation_holds_exten thm
R11135:11154 compcert.backend.CSEproof <> equation_holds_exten thm
R11184:11195 compcert.lib.Maps PTree gsspec thm
R11184:11195 compcert.lib.Maps PTree gsspec thm
R11228:11230 compcert.lib.Coqlib <> peq def
R11228:11230 compcert.lib.Coqlib <> peq def
R11257:11264 compcert.lib.Coqlib <> peq_true thm
R11257:11264 compcert.lib.Coqlib <> peq_true thm
R11283:11291 compcert.lib.Coqlib <> peq_false thm
R11283:11291 compcert.lib.Coqlib <> peq_false thm
R11338:11343 compcert.lib.Coqlib <> Plt_ne thm
R11338:11343 compcert.lib.Coqlib <> Plt_ne thm
prf 11374:11385 <> add_op_holds
R11426:11429 Coq.Init.Datatypes <> list ind
R11431:11433 compcert.backend.Registers <> reg def
R11534:11540 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11546:11547 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11548:11562 compcert.backend.CSEdomain <> numbering_holds rec
R11593:11598 compcert.backend.CSE <> add_op def
R11609:11612 compcert.backend.CSEproof <> args var
R11606:11607 compcert.backend.CSEproof <> op var
R11602:11604 compcert.backend.CSEproof <> dst var
R11600:11600 compcert.backend.CSEproof <> n var
R11590:11590 compcert.backend.CSEproof <> m var
R11579:11579 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R11583:11586 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R11580:11582 compcert.backend.CSEproof <> dst var
R11587:11587 compcert.backend.CSEproof <> v var
R11577:11578 compcert.backend.CSEproof <> rs var
R11573:11574 compcert.backend.CSEproof <> sp var
R11570:11571 compcert.backend.CSEproof <> ge var
R11564:11568 compcert.backend.CSEproof <> valu2 var
R11519:11521 Coq.Init.Logic <> :type_scope:x_'='_x not
R11485:11498 compcert.ia32.Op <> eval_operation def
R11518:11518 compcert.backend.CSEproof <> m var
R11511:11512 compcert.backend.Registers <> ::x_'##'_x not
R11509:11510 compcert.backend.CSEproof <> rs var
R11513:11516 compcert.backend.CSEproof <> args var
R11506:11507 compcert.backend.CSEproof <> op var
R11503:11504 compcert.backend.CSEproof <> sp var
R11500:11501 compcert.backend.CSEproof <> ge var
R11522:11525 Coq.Init.Datatypes <> Some constr
R11527:11527 compcert.backend.CSEproof <> v var
R11445:11459 compcert.backend.CSEdomain <> numbering_holds rec
R11478:11478 compcert.backend.CSEproof <> n var
R11476:11476 compcert.backend.CSEproof <> m var
R11473:11474 compcert.backend.CSEproof <> rs var
R11470:11471 compcert.backend.CSEproof <> sp var
R11467:11468 compcert.backend.CSEproof <> ge var
R11461:11465 compcert.backend.CSEproof <> valu1 var
R11632:11637 compcert.backend.CSE <> add_op def
R11660:11676 compcert.ia32.Op <> is_move_operation def
R11660:11676 compcert.ia32.Op <> is_move_operation def
R11750:11774 compcert.ia32.Op <> is_move_operation_correct thm
R11848:11857 compcert.backend.CSE <> valnum_reg def
R11848:11857 compcert.backend.CSE <> valnum_reg def
R11897:11912 compcert.backend.CSEproof <> valnum_reg_holds thm
R12063:12074 compcert.lib.Maps PTree gsspec thm
R12063:12074 compcert.lib.Maps PTree gsspec thm
R12093:12095 compcert.lib.Coqlib <> peq def
R12093:12095 compcert.lib.Coqlib <> peq def
R12154:12171 compcert.backend.CSEproof <> update_reg_charact thm
R12154:12171 compcert.backend.CSEproof <> update_reg_charact thm
R12218:12229 compcert.lib.Maps PTree gsspec thm
R12218:12229 compcert.lib.Maps PTree gsspec thm
R12246:12258 compcert.backend.Registers Regmap gsspec thm
R12246:12258 compcert.backend.Registers Regmap gsspec thm
R12274:12276 compcert.lib.Coqlib <> peq def
R12274:12276 compcert.lib.Coqlib <> peq def
R12348:12358 compcert.backend.CSE <> valnum_regs def
R12348:12358 compcert.backend.CSE <> valnum_regs def
R12397:12413 compcert.backend.CSEproof <> valnum_regs_holds thm
R12471:12483 compcert.backend.CSEproof <> add_rhs_holds thm
R12471:12483 compcert.backend.CSEproof <> add_rhs_holds thm
R12517:12526 compcert.backend.Registers Regmap gss thm
R12517:12526 compcert.backend.Registers Regmap gss thm
R12558:12567 compcert.backend.Registers Regmap gso thm
R12558:12567 compcert.backend.Registers Regmap gso thm
prf 12588:12601 <> add_load_holds
R12644:12647 Coq.Init.Datatypes <> list ind
R12649:12651 compcert.backend.Registers <> reg def
R12795:12801 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12807:12808 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12809:12823 compcert.backend.CSEdomain <> numbering_holds rec
R12854:12861 compcert.backend.CSE <> add_load def
R12880:12883 compcert.backend.CSEproof <> args var
R12875:12878 compcert.backend.CSEproof <> addr var
R12869:12873 compcert.backend.CSEproof <> chunk var
R12865:12867 compcert.backend.CSEproof <> dst var
R12863:12863 compcert.backend.CSEproof <> n var
R12851:12851 compcert.backend.CSEproof <> m var
R12840:12840 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R12844:12847 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R12841:12843 compcert.backend.CSEproof <> dst var
R12848:12848 compcert.backend.CSEproof <> v var
R12838:12839 compcert.backend.CSEproof <> rs var
R12834:12835 compcert.backend.CSEproof <> sp var
R12831:12832 compcert.backend.CSEproof <> ge var
R12825:12829 compcert.backend.CSEproof <> valu2 var
R12780:12782 Coq.Init.Logic <> :type_scope:x_'='_x not
R12761:12769 compcert.common.Memory Mem loadv def
R12779:12779 compcert.backend.CSEproof <> a var
R12777:12777 compcert.backend.CSEproof <> m var
R12771:12775 compcert.backend.CSEproof <> chunk var
R12783:12786 Coq.Init.Datatypes <> Some constr
R12788:12788 compcert.backend.CSEproof <> v var
R12746:12748 Coq.Init.Logic <> :type_scope:x_'='_x not
R12711:12725 compcert.ia32.Op <> eval_addressing def
R12740:12741 compcert.backend.Registers <> ::x_'##'_x not
R12738:12739 compcert.backend.CSEproof <> rs var
R12742:12745 compcert.backend.CSEproof <> args var
R12733:12736 compcert.backend.CSEproof <> addr var
R12730:12731 compcert.backend.CSEproof <> sp var
R12727:12728 compcert.backend.CSEproof <> ge var
R12749:12752 Coq.Init.Datatypes <> Some constr
R12754:12754 compcert.backend.CSEproof <> a var
R12671:12685 compcert.backend.CSEdomain <> numbering_holds rec
R12704:12704 compcert.backend.CSEproof <> n var
R12702:12702 compcert.backend.CSEproof <> m var
R12699:12700 compcert.backend.CSEproof <> rs var
R12696:12697 compcert.backend.CSEproof <> sp var
R12693:12694 compcert.backend.CSEproof <> ge var
R12687:12691 compcert.backend.CSEproof <> valu1 var
R12903:12910 compcert.backend.CSE <> add_load def
R12933:12943 compcert.backend.CSE <> valnum_regs def
R12933:12943 compcert.backend.CSE <> valnum_regs def
R12982:12998 compcert.backend.CSEproof <> valnum_regs_holds thm
R13056:13068 compcert.backend.CSEproof <> add_rhs_holds thm
R13056:13068 compcert.backend.CSEproof <> add_rhs_holds thm
R13124:13133 compcert.backend.Registers Regmap gss thm
R13124:13133 compcert.backend.Registers Regmap gss thm
R13160:13169 compcert.backend.Registers Regmap gso thm
R13160:13169 compcert.backend.Registers Regmap gso thm
prf 13190:13206 <> set_unknown_holds
R13282:13296 compcert.backend.CSEdomain <> numbering_holds rec
R13324:13334 compcert.backend.CSE <> set_unknown def
R13338:13338 compcert.backend.CSEproof <> r var
R13336:13336 compcert.backend.CSEproof <> n var
R13321:13321 compcert.backend.CSEproof <> m var
R13312:13312 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R13314:13317 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R13313:13313 compcert.backend.CSEproof <> r var
R13318:13318 compcert.backend.CSEproof <> v var
R13310:13311 compcert.backend.CSEproof <> rs var
R13306:13307 compcert.backend.CSEproof <> sp var
R13303:13304 compcert.backend.CSEproof <> ge var
R13298:13301 compcert.backend.CSEproof <> valu var
R13243:13257 compcert.backend.CSEdomain <> numbering_holds rec
R13275:13275 compcert.backend.CSEproof <> n var
R13273:13273 compcert.backend.CSEproof <> m var
R13270:13271 compcert.backend.CSEproof <> rs var
R13267:13268 compcert.backend.CSEproof <> sp var
R13264:13265 compcert.backend.CSEproof <> ge var
R13259:13262 compcert.backend.CSEproof <> valu var
R13449:13460 compcert.lib.Maps PTree grspec thm
R13449:13460 compcert.lib.Maps PTree grspec thm
R13479:13490 compcert.lib.Maps PTree elt_eq def
R13479:13490 compcert.lib.Maps PTree elt_eq def
R13551:13568 compcert.backend.CSEproof <> forget_reg_charact thm
R13614:13622 compcert.lib.Maps PTree gro thm
R13614:13622 compcert.lib.Maps PTree gro thm
R13669:13680 compcert.lib.Maps PTree grspec thm
R13669:13680 compcert.lib.Maps PTree grspec thm
R13699:13710 compcert.lib.Maps PTree elt_eq def
R13699:13710 compcert.lib.Maps PTree elt_eq def
R13746:13755 compcert.backend.Registers Regmap gso thm
R13746:13755 compcert.backend.Registers Regmap gso thm
prf 13786:13801 <> kill_eqs_charact
R13895:13898 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13887:13889 Coq.Init.Logic <> :type_scope:x_'='_x not
R13881:13884 compcert.backend.CSEproof <> pred var
R13886:13886 compcert.backend.CSEproof <> r var
R13890:13894 Coq.Init.Datatypes <> false constr
R13899:13900 Coq.Lists.List <> In def
R13918:13920 compcert.backend.CSEproof <> eqs var
R13903:13904 compcert.backend.CSEdomain <> Eq constr
R13915:13915 compcert.backend.CSEproof <> r var
R13908:13913 compcert.backend.CSEproof <> strict var
R13906:13906 compcert.backend.CSEproof <> l var
R13836:13837 Coq.Lists.List <> In def
R13856:13863 compcert.backend.CSE <> kill_eqs def
R13870:13872 compcert.backend.CSEproof <> eqs var
R13865:13868 compcert.backend.CSEproof <> pred var
R13840:13841 compcert.backend.CSEdomain <> Eq constr
R13852:13852 compcert.backend.CSEproof <> r var
R13845:13850 compcert.backend.CSEproof <> strict var
R13843:13843 compcert.backend.CSEproof <> l var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
prf 14065:14083 <> kill_equations_hold
R14280:14294 compcert.backend.CSEdomain <> numbering_holds rec
R14314:14327 compcert.backend.CSE <> kill_equations def
R14334:14334 compcert.backend.CSEproof <> n var
R14329:14332 compcert.backend.CSEproof <> pred var
R14310:14311 compcert.backend.CSEproof <> m' var
R14307:14308 compcert.backend.CSEproof <> rs var
R14304:14305 compcert.backend.CSEproof <> sp var
R14301:14302 compcert.backend.CSEproof <> ge var
R14296:14299 compcert.backend.CSEproof <> valu var
R14244:14254 compcert.backend.CSEdomain <> rhs_eval_to ind
R14272:14272 compcert.backend.CSEproof <> v var
R14270:14270 compcert.backend.CSEproof <> r var
R14267:14268 compcert.backend.CSEproof <> m' var
R14264:14265 compcert.backend.CSEproof <> sp var
R14261:14262 compcert.backend.CSEproof <> ge var
R14256:14259 compcert.backend.CSEproof <> valu var
R14206:14216 compcert.backend.CSEdomain <> rhs_eval_to ind
R14233:14233 compcert.backend.CSEproof <> v var
R14231:14231 compcert.backend.CSEproof <> r var
R14229:14229 compcert.backend.CSEproof <> m var
R14226:14227 compcert.backend.CSEproof <> sp var
R14223:14224 compcert.backend.CSEproof <> ge var
R14218:14221 compcert.backend.CSEproof <> valu var
R14188:14190 Coq.Init.Logic <> :type_scope:x_'='_x not
R14182:14185 compcert.backend.CSEproof <> pred var
R14187:14187 compcert.backend.CSEproof <> r var
R14191:14195 Coq.Init.Datatypes <> false constr
R14124:14138 compcert.backend.CSEdomain <> numbering_holds rec
R14156:14156 compcert.backend.CSEproof <> n var
R14154:14154 compcert.backend.CSEproof <> m var
R14151:14152 compcert.backend.CSEproof <> rs var
R14148:14149 compcert.backend.CSEproof <> sp var
R14145:14146 compcert.backend.CSEproof <> ge var
R14140:14143 compcert.backend.CSEproof <> valu var
R14451:14466 compcert.backend.CSEproof <> kill_eqs_charact thm
R14529:14544 compcert.backend.CSEproof <> kill_eqs_charact thm
R14579:14590 compcert.backend.CSEdomain <> num_holds_eq proj
prf 14669:14687 <> kill_all_loads_hold
R14762:14776 compcert.backend.CSEdomain <> numbering_holds rec
R14796:14809 compcert.backend.CSE <> kill_all_loads def
R14811:14811 compcert.backend.CSEproof <> n var
R14792:14793 compcert.backend.CSEproof <> m' var
R14789:14790 compcert.backend.CSEproof <> rs var
R14786:14787 compcert.backend.CSEproof <> sp var
R14783:14784 compcert.backend.CSEproof <> ge var
R14778:14781 compcert.backend.CSEproof <> valu var
R14723:14737 compcert.backend.CSEdomain <> numbering_holds rec
R14755:14755 compcert.backend.CSEproof <> n var
R14753:14753 compcert.backend.CSEproof <> m var
R14750:14751 compcert.backend.CSEproof <> rs var
R14747:14748 compcert.backend.CSEproof <> sp var
R14744:14745 compcert.backend.CSEproof <> ge var
R14739:14742 compcert.backend.CSEproof <> valu var
R14839:14857 compcert.backend.CSEproof <> kill_equations_hold thm
R14839:14857 compcert.backend.CSEproof <> kill_equations_hold thm
R14877:14888 compcert.backend.CSE <> filter_loads def
R14943:14970 compcert.ia32.Op <> op_depends_on_memory_correct thm
R14943:14970 compcert.ia32.Op <> op_depends_on_memory_correct thm
prf 15007:15034 <> kill_loads_after_store_holds
R15358:15372 compcert.backend.CSEdomain <> numbering_holds rec
R15435:15456 compcert.backend.CSE <> kill_loads_after_store def
R15478:15481 compcert.backend.CSEproof <> args var
R15473:15476 compcert.backend.CSEproof <> addr var
R15467:15471 compcert.backend.CSEproof <> chunk var
R15465:15465 compcert.backend.CSEproof <> n var
R15458:15463 compcert.backend.CSEproof <> approx var
R15404:15405 compcert.backend.CSEproof <> m' var
R15401:15402 compcert.backend.CSEproof <> rs var
R15383:15386 compcert.common.Values <> Vptr constr
R15391:15398 compcert.lib.Integers Int zero def
R15388:15389 compcert.backend.CSEproof <> sp var
R15379:15380 compcert.backend.CSEproof <> ge var
R15374:15377 compcert.backend.CSEproof <> valu var
R15335:15337 Coq.Init.Logic <> :type_scope:x_'='_x not
R15329:15334 compcert.backend.CSEproof <> approx var
R15338:15345 compcert.backend.ValueDomain VA State constr
R15350:15351 compcert.backend.CSEproof <> am var
R15347:15348 compcert.backend.CSEproof <> ae var
R15308:15313 compcert.backend.ValueDomain <> ematch def
R15321:15322 compcert.backend.CSEproof <> ae var
R15318:15319 compcert.backend.CSEproof <> rs var
R15315:15316 compcert.backend.CSEproof <> bc var
R15292:15294 Coq.Init.Logic <> :type_scope:x_'='_x not
R15287:15288 compcert.backend.CSEproof <> bc var
R15290:15291 compcert.backend.CSEproof <> sp var
R15295:15301 compcert.backend.ValueDomain <> BCstack constr
R15265:15274 compcert.backend.ValueDomain <> genv_match def
R15279:15280 compcert.backend.CSEproof <> ge var
R15276:15277 compcert.backend.CSEproof <> bc var
R15249:15251 Coq.Init.Logic <> :type_scope:x_'='_x not
R15227:15236 compcert.common.Memory Mem storev def
R15248:15248 compcert.backend.CSEproof <> v var
R15246:15246 compcert.backend.CSEproof <> a var
R15244:15244 compcert.backend.CSEproof <> m var
R15238:15242 compcert.backend.CSEproof <> chunk var
R15252:15255 Coq.Init.Datatypes <> Some constr
R15257:15258 compcert.backend.CSEproof <> m' var
R15212:15214 Coq.Init.Logic <> :type_scope:x_'='_x not
R15161:15175 compcert.ia32.Op <> eval_addressing def
R15206:15207 compcert.backend.Registers <> ::x_'##'_x not
R15204:15205 compcert.backend.CSEproof <> rs var
R15208:15211 compcert.backend.CSEproof <> args var
R15199:15202 compcert.backend.CSEproof <> addr var
R15181:15184 compcert.common.Values <> Vptr constr
R15189:15196 compcert.lib.Integers Int zero def
R15186:15187 compcert.backend.CSEproof <> sp var
R15177:15178 compcert.backend.CSEproof <> ge var
R15215:15218 Coq.Init.Datatypes <> Some constr
R15220:15220 compcert.backend.CSEproof <> a var
R15106:15120 compcert.backend.CSEdomain <> numbering_holds rec
R15154:15154 compcert.backend.CSEproof <> n var
R15152:15152 compcert.backend.CSEproof <> m var
R15149:15150 compcert.backend.CSEproof <> rs var
R15131:15134 compcert.common.Values <> Vptr constr
R15139:15146 compcert.lib.Integers Int zero def
R15136:15137 compcert.backend.CSEproof <> sp var
R15127:15128 compcert.backend.CSEproof <> ge var
R15122:15125 compcert.backend.CSEproof <> valu var
R15508:15526 compcert.backend.CSEproof <> kill_equations_hold thm
R15508:15526 compcert.backend.CSEproof <> kill_equations_hold thm
R15559:15576 compcert.backend.CSE <> filter_after_store def
R15629:15656 compcert.ia32.Op <> op_depends_on_memory_correct thm
R15629:15656 compcert.ia32.Op <> op_depends_on_memory_correct thm
R15677:15688 compcert.backend.CSE <> regs_valnums def
R15677:15688 compcert.backend.CSE <> regs_valnums def
R15880:15893 Coq.Bool.Bool <> negb_false_iff thm
R15880:15893 Coq.Bool.Bool <> negb_false_iff thm
R15909:15919 compcert.backend.ValueAnalysis <> aaddressing def
R15937:15956 compcert.common.Memory Mem load_store_other thm
R15937:15956 compcert.common.Memory Mem load_store_other thm
R15975:15989 compcert.backend.ValueDomain <> pdisjoint_sound thm
R15975:15989 compcert.backend.ValueDomain <> pdisjoint_sound thm
R16008:16025 compcert.backend.ValueDomain <> match_aptr_of_aval thm
R16008:16025 compcert.backend.ValueDomain <> match_aptr_of_aval thm
R16035:16062 compcert.ia32.ValueAOp <> eval_static_addressing_sound thm
R16035:16062 compcert.ia32.ValueAOp <> eval_static_addressing_sound thm
R16087:16104 compcert.backend.CSEproof <> regs_valnums_sound thm
R16087:16104 compcert.backend.CSEproof <> regs_valnums_sound thm
R16139:16156 compcert.backend.ValueDomain <> match_aptr_of_aval thm
R16139:16156 compcert.backend.ValueDomain <> match_aptr_of_aval thm
R16166:16193 compcert.ia32.ValueAOp <> eval_static_addressing_sound thm
R16166:16193 compcert.ia32.ValueAOp <> eval_static_addressing_sound thm
prf 16223:16250 <> store_normalized_range_sound
R16324:16334 compcert.common.Values Val lessdef ind
R16362:16362 compcert.backend.CSEproof <> v var
R16337:16351 compcert.common.Values Val load_result def
R16359:16359 compcert.backend.CSEproof <> v var
R16353:16357 compcert.backend.CSEproof <> chunk var
R16276:16281 compcert.backend.ValueDomain <> vmatch ind
R16289:16310 compcert.backend.CSE <> store_normalized_range def
R16312:16316 compcert.backend.CSEproof <> chunk var
R16286:16286 compcert.backend.CSEproof <> v var
R16283:16284 compcert.backend.CSEproof <> bc var
R16445:16459 compcert.backend.ValueDomain <> is_sgn_sign_ext thm
R16445:16459 compcert.backend.ValueDomain <> is_sgn_sign_ext thm
R16512:16526 compcert.backend.ValueDomain <> is_uns_zero_ext thm
R16512:16526 compcert.backend.ValueDomain <> is_uns_zero_ext thm
R16579:16593 compcert.backend.ValueDomain <> is_sgn_sign_ext thm
R16579:16593 compcert.backend.ValueDomain <> is_sgn_sign_ext thm
R16646:16660 compcert.backend.ValueDomain <> is_uns_zero_ext thm
R16646:16660 compcert.backend.ValueDomain <> is_uns_zero_ext thm
prf 16708:16728 <> add_store_result_hold
R16987:16993 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16999:17000 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17001:17015 compcert.backend.CSEdomain <> numbering_holds rec
R17036:17051 compcert.backend.CSE <> add_store_result def
R17078:17080 compcert.backend.CSEproof <> src var
R17073:17076 compcert.backend.CSEproof <> args var
R17068:17071 compcert.backend.CSEproof <> addr var
R17062:17066 compcert.backend.CSEproof <> chunk var
R17060:17060 compcert.backend.CSEproof <> n var
R17053:17058 compcert.backend.CSEproof <> approx var
R17032:17033 compcert.backend.CSEproof <> m' var
R17029:17030 compcert.backend.CSEproof <> rs var
R17026:17027 compcert.backend.CSEproof <> sp var
R17023:17024 compcert.backend.CSEproof <> ge var
R17017:17021 compcert.backend.CSEproof <> valu2 var
R16964:16966 Coq.Init.Logic <> :type_scope:x_'='_x not
R16958:16963 compcert.backend.CSEproof <> approx var
R16967:16974 compcert.backend.ValueDomain VA State constr
R16979:16980 compcert.backend.CSEproof <> am var
R16976:16977 compcert.backend.CSEproof <> ae var
R16937:16942 compcert.backend.ValueDomain <> ematch def
R16950:16951 compcert.backend.CSEproof <> ae var
R16947:16948 compcert.backend.CSEproof <> rs var
R16944:16945 compcert.backend.CSEproof <> bc var
R16921:16923 Coq.Init.Logic <> :type_scope:x_'='_x not
R16894:16903 compcert.common.Memory Mem storev def
R16917:16917 compcert.backend.Registers <> ::x_'#'_x not
R16918:16920 compcert.backend.CSEproof <> src var
R16915:16916 compcert.backend.CSEproof <> rs var
R16913:16913 compcert.backend.CSEproof <> a var
R16911:16911 compcert.backend.CSEproof <> m var
R16905:16909 compcert.backend.CSEproof <> chunk var
R16924:16927 Coq.Init.Datatypes <> Some constr
R16929:16930 compcert.backend.CSEproof <> m' var
R16879:16881 Coq.Init.Logic <> :type_scope:x_'='_x not
R16844:16858 compcert.ia32.Op <> eval_addressing def
R16873:16874 compcert.backend.Registers <> ::x_'##'_x not
R16871:16872 compcert.backend.CSEproof <> rs var
R16875:16878 compcert.backend.CSEproof <> args var
R16866:16869 compcert.backend.CSEproof <> addr var
R16863:16864 compcert.backend.CSEproof <> sp var
R16860:16861 compcert.backend.CSEproof <> ge var
R16882:16885 Coq.Init.Datatypes <> Some constr
R16887:16887 compcert.backend.CSEproof <> a var
R16803:16817 compcert.backend.CSEdomain <> numbering_holds rec
R16837:16837 compcert.backend.CSEproof <> n var
R16834:16835 compcert.backend.CSEproof <> m' var
R16831:16832 compcert.backend.CSEproof <> rs var
R16828:16829 compcert.backend.CSEproof <> sp var
R16825:16826 compcert.backend.CSEproof <> ge var
R16819:16823 compcert.backend.CSEproof <> valu1 var
R17100:17115 compcert.backend.CSE <> add_store_result def
R17136:17141 compcert.backend.ValueAnalysis <> avalue def
R17169:17173 compcert.backend.ValueDomain <> vincl def
R17192:17213 compcert.backend.CSE <> store_normalized_range def
R17176:17181 compcert.backend.ValueDomain AE get def
R17169:17173 compcert.backend.ValueDomain <> vincl def
R17192:17213 compcert.backend.CSE <> store_normalized_range def
R17176:17181 compcert.backend.ValueDomain AE get def
R17245:17254 compcert.backend.CSE <> valnum_reg def
R17245:17254 compcert.backend.CSE <> valnum_reg def
R17297:17307 compcert.backend.CSE <> valnum_regs def
R17297:17307 compcert.backend.CSE <> valnum_regs def
R17351:17366 compcert.backend.CSEproof <> valnum_reg_holds thm
R17423:17439 compcert.backend.CSEproof <> valnum_regs_holds thm
R17632:17643 Coq.PArith.BinPos <> Plt_le_trans syndef
R17632:17643 Coq.PArith.BinPos <> Plt_le_trans syndef
R17752:17766 compcert.common.Values Val load_result def
R17776:17776 compcert.backend.Registers <> ::x_'#'_x not
R17729:17744 compcert.backend.CSEdomain <> eq_holds_lessdef constr
R17752:17766 compcert.common.Values Val load_result def
R17776:17776 compcert.backend.Registers <> ::x_'#'_x not
R17729:17744 compcert.backend.CSEdomain <> eq_holds_lessdef constr
R17791:17802 compcert.backend.CSEdomain <> load_eval_to constr
R17791:17802 compcert.backend.CSEdomain <> load_eval_to constr
R17878:17896 compcert.common.Memory Mem load_store_same thm
R17878:17896 compcert.common.Memory Mem load_store_same thm
R17944:17971 compcert.backend.CSEproof <> store_normalized_range_sound thm
R17944:17971 compcert.backend.CSEproof <> store_normalized_range_sound thm
R18006:18014 compcert.backend.ValueDomain <> vmatch_ge thm
R18006:18014 compcert.backend.ValueDomain <> vmatch_ge thm
R18023:18030 compcert.backend.ValueDomain <> vincl_ge thm
R18023:18030 compcert.backend.ValueDomain <> vincl_ge thm
prf 18103:18135 <> kill_loads_after_storebytes_holds
R18481:18495 compcert.backend.CSEdomain <> numbering_holds rec
R18558:18584 compcert.backend.CSE <> kill_loads_after_storebytes def
R18599:18600 compcert.backend.CSEproof <> sz var
R18595:18597 compcert.backend.CSEproof <> dst var
R18593:18593 compcert.backend.CSEproof <> n var
R18586:18591 compcert.backend.CSEproof <> approx var
R18527:18528 compcert.backend.CSEproof <> m' var
R18524:18525 compcert.backend.CSEproof <> rs var
R18506:18509 compcert.common.Values <> Vptr constr
R18514:18521 compcert.lib.Integers Int zero def
R18511:18512 compcert.backend.CSEproof <> sp var
R18502:18503 compcert.backend.CSEproof <> ge var
R18497:18500 compcert.backend.CSEproof <> valu var
R18470:18473 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R18468:18469 compcert.backend.CSEproof <> sz var
R18450:18452 Coq.Init.Logic <> :type_scope:x_'='_x not
R18438:18443 Coq.Init.Datatypes <> length def
R18445:18449 compcert.backend.CSEproof <> bytes var
R18453:18460 compcert.lib.Coqlib <> nat_of_Z def
R18462:18463 compcert.backend.CSEproof <> sz var
R18415:18417 Coq.Init.Logic <> :type_scope:x_'='_x not
R18409:18414 compcert.backend.CSEproof <> approx var
R18418:18425 compcert.backend.ValueDomain VA State constr
R18430:18431 compcert.backend.CSEproof <> am var
R18427:18428 compcert.backend.CSEproof <> ae var
R18388:18393 compcert.backend.ValueDomain <> ematch def
R18401:18402 compcert.backend.CSEproof <> ae var
R18398:18399 compcert.backend.CSEproof <> rs var
R18395:18396 compcert.backend.CSEproof <> bc var
R18372:18374 Coq.Init.Logic <> :type_scope:x_'='_x not
R18367:18368 compcert.backend.CSEproof <> bc var
R18370:18371 compcert.backend.CSEproof <> sp var
R18375:18381 compcert.backend.ValueDomain <> BCstack constr
R18345:18354 compcert.backend.ValueDomain <> genv_match def
R18359:18360 compcert.backend.CSEproof <> ge var
R18356:18357 compcert.backend.CSEproof <> bc var
R18329:18331 Coq.Init.Logic <> :type_scope:x_'='_x not
R18286:18299 compcert.common.Memory Mem storebytes def
R18324:18328 compcert.backend.CSEproof <> bytes var
R18306:18317 compcert.lib.Integers Int unsigned def
R18319:18321 compcert.backend.CSEproof <> ofs var
R18303:18303 compcert.backend.CSEproof <> b var
R18301:18301 compcert.backend.CSEproof <> m var
R18332:18335 Coq.Init.Datatypes <> Some constr
R18337:18338 compcert.backend.CSEproof <> m' var
R18267:18269 Coq.Init.Logic <> :type_scope:x_'='_x not
R18263:18263 compcert.backend.Registers <> ::x_'#'_x not
R18264:18266 compcert.backend.CSEproof <> dst var
R18261:18262 compcert.backend.CSEproof <> rs var
R18270:18273 compcert.common.Values <> Vptr constr
R18277:18279 compcert.backend.CSEproof <> ofs var
R18275:18275 compcert.backend.CSEproof <> b var
R18206:18220 compcert.backend.CSEdomain <> numbering_holds rec
R18254:18254 compcert.backend.CSEproof <> n var
R18252:18252 compcert.backend.CSEproof <> m var
R18249:18250 compcert.backend.CSEproof <> rs var
R18231:18234 compcert.common.Values <> Vptr constr
R18239:18246 compcert.lib.Integers Int zero def
R18236:18237 compcert.backend.CSEproof <> sp var
R18227:18228 compcert.backend.CSEproof <> ge var
R18222:18225 compcert.backend.CSEproof <> valu var
R18627:18645 compcert.backend.CSEproof <> kill_equations_hold thm
R18627:18645 compcert.backend.CSEproof <> kill_equations_hold thm
R18678:18695 compcert.backend.CSE <> filter_after_store def
R18749:18776 compcert.ia32.Op <> op_depends_on_memory_correct thm
R18749:18776 compcert.ia32.Op <> op_depends_on_memory_correct thm
R18797:18808 compcert.backend.CSE <> regs_valnums def
R18797:18808 compcert.backend.CSE <> regs_valnums def
R18956:18969 Coq.Bool.Bool <> negb_false_iff thm
R18956:18969 Coq.Bool.Bool <> negb_false_iff thm
R18987:19011 compcert.common.Memory Mem load_storebytes_other thm
R18987:19011 compcert.common.Memory Mem load_storebytes_other thm
R19043:19053 compcert.lib.Coqlib <> nat_of_Z_eq thm
R19043:19053 compcert.lib.Coqlib <> nat_of_Z_eq thm
R19074:19088 compcert.backend.ValueDomain <> pdisjoint_sound thm
R19074:19088 compcert.backend.ValueDomain <> pdisjoint_sound thm
R19108:19118 compcert.backend.ValueAnalysis <> aaddressing def
R19127:19144 compcert.backend.ValueDomain <> match_aptr_of_aval thm
R19127:19144 compcert.backend.ValueDomain <> match_aptr_of_aval thm
R19154:19181 compcert.ia32.ValueAOp <> eval_static_addressing_sound thm
R19154:19181 compcert.ia32.ValueAOp <> eval_static_addressing_sound thm
R19206:19223 compcert.backend.CSEproof <> regs_valnums_sound thm
R19206:19223 compcert.backend.CSEproof <> regs_valnums_sound thm
R19259:19263 compcert.backend.ValueAnalysis <> aaddr def
R19272:19289 compcert.backend.ValueDomain <> match_aptr_of_aval thm
R19272:19289 compcert.backend.ValueDomain <> match_aptr_of_aval thm
prf 19330:19340 <> load_memcpy
R19653:19655 Coq.Init.Logic <> :type_scope:x_'='_x not
R19613:19620 compcert.common.Memory Mem load def
R19636:19639 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19651:19651 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19635:19635 compcert.backend.CSEproof <> i var
R19644:19646 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19640:19643 compcert.backend.CSEproof <> ofs2 var
R19647:19650 compcert.backend.CSEproof <> ofs1 var
R19631:19632 compcert.backend.CSEproof <> b2 var
R19628:19629 compcert.backend.CSEproof <> m' var
R19622:19626 compcert.backend.CSEproof <> chunk var
R19656:19659 Coq.Init.Datatypes <> Some constr
R19661:19661 compcert.backend.CSEproof <> v var
R19574:19574 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R19592:19594 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R19606:19606 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R19575:19585 compcert.common.Memdata <> align_chunk def
R19587:19591 compcert.backend.CSEproof <> chunk var
R19599:19601 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19595:19598 compcert.backend.CSEproof <> ofs2 var
R19602:19605 compcert.backend.CSEproof <> ofs1 var
R19555:19558 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R19536:19538 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19535:19535 compcert.backend.CSEproof <> i var
R19539:19548 compcert.common.Memdata <> size_chunk def
R19550:19554 compcert.backend.CSEproof <> chunk var
R19563:19565 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19559:19562 compcert.backend.CSEproof <> ofs1 var
R19566:19567 compcert.backend.CSEproof <> sz var
R19526:19529 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R19522:19525 compcert.backend.CSEproof <> ofs1 var
R19530:19530 compcert.backend.CSEproof <> i var
R19507:19509 Coq.Init.Logic <> :type_scope:x_'='_x not
R19486:19493 compcert.common.Memory Mem load def
R19506:19506 compcert.backend.CSEproof <> i var
R19503:19504 compcert.backend.CSEproof <> b1 var
R19501:19501 compcert.backend.CSEproof <> m var
R19495:19499 compcert.backend.CSEproof <> chunk var
R19510:19513 Coq.Init.Datatypes <> Some constr
R19515:19515 compcert.backend.CSEproof <> v var
R19470:19472 Coq.Init.Logic <> :type_scope:x_'='_x not
R19440:19453 compcert.common.Memory Mem storebytes def
R19465:19469 compcert.backend.CSEproof <> bytes var
R19460:19463 compcert.backend.CSEproof <> ofs2 var
R19457:19458 compcert.backend.CSEproof <> b2 var
R19455:19455 compcert.backend.CSEproof <> m var
R19473:19476 Coq.Init.Datatypes <> Some constr
R19478:19479 compcert.backend.CSEproof <> m' var
R19421:19423 Coq.Init.Logic <> :type_scope:x_'='_x not
R19395:19407 compcert.common.Memory Mem loadbytes def
R19419:19420 compcert.backend.CSEproof <> sz var
R19414:19417 compcert.backend.CSEproof <> ofs1 var
R19411:19412 compcert.backend.CSEproof <> b1 var
R19409:19409 compcert.backend.CSEproof <> m var
R19424:19427 Coq.Init.Datatypes <> Some constr
R19429:19433 compcert.backend.CSEproof <> bytes var
R19696:19709 compcert.common.Memdata <> size_chunk_pos thm
R19696:19709 compcert.common.Memdata <> size_chunk_pos thm
R19746:19748 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19746:19748 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19769:19778 compcert.common.Memdata <> size_chunk def
R19769:19778 compcert.common.Memdata <> size_chunk def
R19803:19806 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19814:19814 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19809:19811 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19803:19806 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19814:19814 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R19809:19811 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19839:19842 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19850:19850 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19845:19847 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19839:19842 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19850:19850 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19845:19847 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R19899:19917 compcert.common.Memory Mem loadbytes_split thm
R20045:20063 compcert.common.Memory Mem loadbytes_split thm
R20208:20225 compcert.common.Memory Mem load_loadbytes thm
R20278:20280 Coq.Init.Logic <> :type_scope:x_'='_x not
R20278:20280 Coq.Init.Logic <> :type_scope:x_'='_x not
R20307:20309 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20307:20309 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20411:20430 compcert.common.Memory Mem storebytes_split thm
R20488:20507 compcert.common.Memory Mem storebytes_split thm
R20594:20596 Coq.Init.Logic <> :type_scope:x_'='_x not
R20570:20577 Coq.ZArith.BinInt Z of_nat def
R20580:20585 Coq.Init.Datatypes <> length def
R20594:20596 Coq.Init.Logic <> :type_scope:x_'='_x not
R20570:20577 Coq.ZArith.BinInt Z of_nat def
R20580:20585 Coq.Init.Datatypes <> length def
R20615:20634 compcert.common.Memory Mem loadbytes_length thm
R20615:20634 compcert.common.Memory Mem loadbytes_length thm
R20652:20662 compcert.lib.Coqlib <> nat_of_Z_eq thm
R20652:20662 compcert.lib.Coqlib <> nat_of_Z_eq thm
R20723:20725 Coq.Init.Logic <> :type_scope:x_'='_x not
R20699:20706 Coq.ZArith.BinInt Z of_nat def
R20709:20714 Coq.Init.Datatypes <> length def
R20723:20725 Coq.Init.Logic <> :type_scope:x_'='_x not
R20699:20706 Coq.ZArith.BinInt Z of_nat def
R20709:20714 Coq.Init.Datatypes <> length def
R20744:20763 compcert.common.Memory Mem loadbytes_length thm
R20744:20763 compcert.common.Memory Mem loadbytes_length thm
R20781:20791 compcert.lib.Coqlib <> nat_of_Z_eq thm
R20781:20791 compcert.lib.Coqlib <> nat_of_Z_eq thm
R20900:20902 Coq.Init.Logic <> :type_scope:x_'='_x not
R20866:20878 compcert.common.Memory Mem loadbytes def
R20891:20893 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20903:20906 Coq.Init.Datatypes <> Some constr
R20900:20902 Coq.Init.Logic <> :type_scope:x_'='_x not
R20866:20878 compcert.common.Memory Mem loadbytes def
R20891:20893 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20903:20906 Coq.Init.Datatypes <> Some constr
R20943:20971 compcert.common.Memory Mem loadbytes_storebytes_same thm
R20943:20971 compcert.common.Memory Mem loadbytes_storebytes_same thm
R21033:21035 Coq.Init.Logic <> :type_scope:x_'='_x not
R20999:21011 compcert.common.Memory Mem loadbytes def
R21024:21026 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21036:21039 Coq.Init.Datatypes <> Some constr
R21033:21035 Coq.Init.Logic <> :type_scope:x_'='_x not
R20999:21011 compcert.common.Memory Mem loadbytes def
R21024:21026 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21036:21039 Coq.Init.Datatypes <> Some constr
R21077:21106 compcert.common.Memory Mem loadbytes_storebytes_other thm
R21077:21106 compcert.common.Memory Mem loadbytes_storebytes_other thm
R21176:21196 compcert.common.Memory Mem load_valid_access thm
R21240:21257 compcert.common.Memory Mem loadbytes_load thm
R21240:21257 compcert.common.Memory Mem loadbytes_load thm
R21272:21275 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21287:21287 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21280:21282 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R21300:21302 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21300:21302 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21272:21275 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21287:21287 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21280:21282 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R21354:21367 Coq.ZArith.BinInt Z divide_add_r thm
R21354:21367 Coq.ZArith.BinInt Z divide_add_r thm
prf 21388:21405 <> shift_memcpy_eq_wf
R21513:21523 compcert.backend.CSEdomain <> wf_equation def
R21530:21531 compcert.backend.CSEproof <> e' var
R21525:21528 compcert.backend.CSEproof <> next var
R21489:21499 compcert.backend.CSEdomain <> wf_equation def
R21506:21506 compcert.backend.CSEproof <> e var
R21501:21504 compcert.backend.CSEproof <> next var
R21473:21475 Coq.Init.Logic <> :type_scope:x_'='_x not
R21443:21457 compcert.backend.CSE <> shift_memcpy_eq def
R21472:21472 compcert.backend.CSEproof <> e var
R21466:21470 compcert.backend.CSEproof <> delta var
R21463:21464 compcert.backend.CSEproof <> sz var
R21459:21461 compcert.backend.CSEproof <> src var
R21476:21479 Coq.Init.Datatypes <> Some constr
R21481:21482 compcert.backend.CSEproof <> e' var
R21574:21588 compcert.backend.CSE <> shift_memcpy_eq def
R21813:21824 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R21779:21782 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R21736:21747 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R21678:21689 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R21654:21656 compcert.lib.Coqlib <> zle def
R21663:21674 compcert.lib.Integers Int unsigned def
R21690:21692 compcert.lib.Coqlib <> zle def
R21730:21732 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21709:21711 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21695:21706 compcert.lib.Integers Int unsigned def
R21712:21721 compcert.common.Memdata <> size_chunk def
R21748:21750 compcert.lib.Coqlib <> zeq def
R21758:21762 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R21763:21773 compcert.common.Memdata <> align_chunk def
R21783:21785 compcert.lib.Coqlib <> zle def
R21804:21806 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21790:21801 compcert.lib.Integers Int unsigned def
R21825:21827 compcert.lib.Coqlib <> zle def
R21854:21869 compcert.lib.Integers Int max_unsigned def
R21844:21846 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21830:21841 compcert.lib.Integers Int unsigned def
R21813:21824 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R21779:21782 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R21736:21747 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R21678:21689 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R21654:21656 compcert.lib.Coqlib <> zle def
R21663:21674 compcert.lib.Integers Int unsigned def
R21690:21692 compcert.lib.Coqlib <> zle def
R21730:21732 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21709:21711 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21695:21706 compcert.lib.Integers Int unsigned def
R21712:21721 compcert.common.Memdata <> size_chunk def
R21748:21750 compcert.lib.Coqlib <> zeq def
R21758:21762 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R21763:21773 compcert.common.Memdata <> align_chunk def
R21783:21785 compcert.lib.Coqlib <> zle def
R21804:21806 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21790:21801 compcert.lib.Integers Int unsigned def
R21825:21827 compcert.lib.Coqlib <> zle def
R21854:21869 compcert.lib.Integers Int max_unsigned def
R21844:21846 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21830:21841 compcert.lib.Integers Int unsigned def
R0:-1 compcert.backend.CSEproof <> y var
R0:-1 compcert.backend.CSEproof <> y var
prf 21941:21961 <> shift_memcpy_eq_holds
R22206:22219 compcert.backend.CSEdomain <> equation_holds ind
R22251:22252 compcert.backend.CSEproof <> e' var
R22248:22249 compcert.backend.CSEproof <> m' var
R22230:22233 compcert.common.Values <> Vptr constr
R22238:22245 compcert.lib.Integers Int zero def
R22235:22236 compcert.backend.CSEproof <> sp var
R22226:22227 compcert.backend.CSEproof <> ge var
R22221:22224 compcert.backend.CSEproof <> valu var
R22155:22168 compcert.backend.CSEdomain <> equation_holds ind
R22199:22199 compcert.backend.CSEproof <> e var
R22197:22197 compcert.backend.CSEproof <> m var
R22179:22182 compcert.common.Values <> Vptr constr
R22187:22194 compcert.lib.Integers Int zero def
R22184:22185 compcert.backend.CSEproof <> sp var
R22175:22176 compcert.backend.CSEproof <> ge var
R22170:22173 compcert.backend.CSEproof <> valu var
R22139:22141 Coq.Init.Logic <> :type_scope:x_'='_x not
R22110:22123 compcert.common.Memory Mem storebytes def
R22134:22138 compcert.backend.CSEproof <> bytes var
R22130:22132 compcert.backend.CSEproof <> dst var
R22127:22128 compcert.backend.CSEproof <> sp var
R22125:22125 compcert.backend.CSEproof <> m var
R22142:22145 Coq.Init.Datatypes <> Some constr
R22147:22148 compcert.backend.CSEproof <> m' var
R22091:22093 Coq.Init.Logic <> :type_scope:x_'='_x not
R22066:22078 compcert.common.Memory Mem loadbytes def
R22089:22090 compcert.backend.CSEproof <> sz var
R22085:22087 compcert.backend.CSEproof <> src var
R22082:22083 compcert.backend.CSEproof <> sp var
R22080:22080 compcert.backend.CSEproof <> m var
R22094:22097 Coq.Init.Datatypes <> Some constr
R22099:22103 compcert.backend.CSEproof <> bytes var
R22050:22052 Coq.Init.Logic <> :type_scope:x_'='_x not
R22014:22028 compcert.backend.CSE <> shift_memcpy_eq def
R22049:22049 compcert.backend.CSEproof <> e var
R22041:22043 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R22038:22040 compcert.backend.CSEproof <> dst var
R22044:22046 compcert.backend.CSEproof <> src var
R22034:22035 compcert.backend.CSEproof <> sz var
R22030:22032 compcert.backend.CSEproof <> src var
R22053:22056 Coq.Init.Datatypes <> Some constr
R22058:22059 compcert.backend.CSEproof <> e' var
R22313:22315 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R22313:22315 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R22334:22348 compcert.backend.CSE <> shift_memcpy_eq def
R22472:22483 compcert.lib.Integers Int unsigned def
R22472:22483 compcert.lib.Integers Int unsigned def
R22506:22508 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22506:22508 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22534:22536 compcert.lib.Coqlib <> zle def
R22534:22536 compcert.lib.Coqlib <> zle def
R22561:22563 compcert.lib.Coqlib <> zle def
R22593:22595 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22568:22570 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22571:22580 compcert.common.Memdata <> size_chunk def
R22561:22563 compcert.lib.Coqlib <> zle def
R22593:22595 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22568:22570 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22571:22580 compcert.common.Memdata <> size_chunk def
R22616:22618 compcert.lib.Coqlib <> zeq def
R22626:22630 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R22631:22641 compcert.common.Memdata <> align_chunk def
R22616:22618 compcert.lib.Coqlib <> zeq def
R22626:22630 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R22631:22641 compcert.common.Memdata <> align_chunk def
R22668:22670 compcert.lib.Coqlib <> zle def
R22668:22670 compcert.lib.Coqlib <> zle def
R22692:22694 compcert.lib.Coqlib <> zle def
R22698:22713 compcert.lib.Integers Int max_unsigned def
R22692:22694 compcert.lib.Coqlib <> zle def
R22698:22713 compcert.lib.Integers Int max_unsigned def
R22855:22857 Coq.Init.Logic <> :type_scope:x_'='_x not
R22814:22822 compcert.common.Memory Mem loadv def
R22834:22837 compcert.common.Values <> Vptr constr
R22843:22850 compcert.lib.Integers Int repr def
R22858:22861 Coq.Init.Datatypes <> Some constr
R22863:22863 compcert.backend.CSEproof <> v var
R22797:22799 Coq.Init.Logic <> :type_scope:x_'='_x not
R22768:22776 compcert.common.Memory Mem loadv def
R22787:22790 compcert.common.Values <> Vptr constr
R22800:22803 Coq.Init.Datatypes <> Some constr
R22805:22805 compcert.backend.CSEproof <> v var
R22855:22857 Coq.Init.Logic <> :type_scope:x_'='_x not
R22814:22822 compcert.common.Memory Mem loadv def
R22834:22837 compcert.common.Values <> Vptr constr
R22843:22850 compcert.lib.Integers Int repr def
R22858:22861 Coq.Init.Datatypes <> Some constr
R22863:22863 compcert.backend.CSEproof <> v var
R22797:22799 Coq.Init.Logic <> :type_scope:x_'='_x not
R22768:22776 compcert.common.Memory Mem loadv def
R22787:22790 compcert.common.Values <> Vptr constr
R22800:22803 Coq.Init.Datatypes <> Some constr
R22805:22805 compcert.backend.CSEproof <> v var
R22898:22914 compcert.lib.Integers Int unsigned_repr thm
R22898:22914 compcert.lib.Integers Int unsigned_repr thm
R22955:22965 compcert.backend.CSEproof <> load_memcpy thm
R22955:22965 compcert.backend.CSEproof <> load_memcpy thm
R22986:22996 Coq.ZArith.Znumtheory <> Zmod_divide thm
R22986:22996 Coq.ZArith.Znumtheory <> Zmod_divide thm
R23017:23031 compcert.common.Memdata <> align_chunk_pos thm
R23017:23031 compcert.common.Memdata <> align_chunk_pos thm
R23108:23121 compcert.lib.Integers Int add_zero_l thm
R23108:23121 compcert.lib.Integers Int add_zero_l thm
R23146:23160 compcert.backend.CSEdomain <> eq_holds_strict constr
R23146:23160 compcert.backend.CSEdomain <> eq_holds_strict constr
R23192:23205 compcert.lib.Integers Int add_zero_l thm
R23192:23205 compcert.lib.Integers Int add_zero_l thm
R23280:23293 compcert.lib.Integers Int add_zero_l thm
R23280:23293 compcert.lib.Integers Int add_zero_l thm
R23318:23333 compcert.backend.CSEdomain <> eq_holds_lessdef constr
R23318:23333 compcert.backend.CSEdomain <> eq_holds_lessdef constr
R23381:23394 compcert.lib.Integers Int add_zero_l thm
R23381:23394 compcert.lib.Integers Int add_zero_l thm
prf 23432:23453 <> add_memcpy_eqs_charact
R23555:23558 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R23545:23546 Coq.Lists.List <> In def
R23551:23554 compcert.backend.CSEproof <> eqs2 var
R23548:23549 compcert.backend.CSEproof <> e' var
R23559:23565 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23567:23568 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23578:23581 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23569:23570 Coq.Lists.List <> In def
R23574:23577 compcert.backend.CSEproof <> eqs1 var
R23572:23572 compcert.backend.CSEproof <> e var
R23612:23614 Coq.Init.Logic <> :type_scope:x_'='_x not
R23582:23596 compcert.backend.CSE <> shift_memcpy_eq def
R23611:23611 compcert.backend.CSEproof <> e var
R23605:23609 compcert.backend.CSEproof <> delta var
R23602:23603 compcert.backend.CSEproof <> sz var
R23598:23600 compcert.backend.CSEproof <> src var
R23615:23618 Coq.Init.Datatypes <> Some constr
R23620:23621 compcert.backend.CSEproof <> e' var
R23494:23495 Coq.Lists.List <> In def
R23501:23514 compcert.backend.CSE <> add_memcpy_eqs def
R23534:23537 compcert.backend.CSEproof <> eqs2 var
R23529:23532 compcert.backend.CSEproof <> eqs1 var
R23523:23527 compcert.backend.CSEproof <> delta var
R23520:23521 compcert.backend.CSEproof <> sz var
R23516:23518 compcert.backend.CSEproof <> src var
R23497:23498 compcert.backend.CSEproof <> e' var
R23684:23698 compcert.backend.CSE <> shift_memcpy_eq def
R23684:23698 compcert.backend.CSE <> shift_memcpy_eq def
prf 23938:23953 <> add_memcpy_holds
R24476:24490 compcert.backend.CSEdomain <> numbering_holds rec
R24526:24535 compcert.backend.CSE <> add_memcpy def
R24560:24561 compcert.backend.CSEproof <> sz var
R24555:24558 compcert.backend.CSEproof <> rdst var
R24550:24553 compcert.backend.CSEproof <> rsrc var
R24547:24548 compcert.backend.CSEproof <> n2 var
R24544:24545 compcert.backend.CSEproof <> n1 var
R24537:24542 compcert.backend.CSEproof <> approx var
R24522:24523 compcert.backend.CSEproof <> m' var
R24519:24520 compcert.backend.CSEproof <> rs var
R24501:24504 compcert.common.Values <> Vptr constr
R24509:24516 compcert.lib.Integers Int zero def
R24506:24507 compcert.backend.CSEproof <> sp var
R24497:24498 compcert.backend.CSEproof <> ge var
R24492:24495 compcert.backend.CSEproof <> valu var
R24439:24441 compcert.lib.Coqlib <> Ple def
R24458:24465 compcert.backend.CSEdomain <> num_next proj
R24467:24468 compcert.backend.CSEproof <> n2 var
R24444:24451 compcert.backend.CSEdomain <> num_next proj
R24453:24454 compcert.backend.CSEproof <> n1 var
R24416:24418 Coq.Init.Logic <> :type_scope:x_'='_x not
R24411:24411 compcert.backend.Registers <> ::x_'#'_x not
R24412:24415 compcert.backend.CSEproof <> rdst var
R24409:24410 compcert.backend.CSEproof <> rs var
R24419:24422 compcert.common.Values <> Vptr constr
R24429:24432 compcert.backend.CSEproof <> odst var
R24424:24427 compcert.backend.CSEproof <> bdst var
R24386:24388 Coq.Init.Logic <> :type_scope:x_'='_x not
R24381:24381 compcert.backend.Registers <> ::x_'#'_x not
R24382:24385 compcert.backend.CSEproof <> rsrc var
R24379:24380 compcert.backend.CSEproof <> rs var
R24389:24392 compcert.common.Values <> Vptr constr
R24399:24402 compcert.backend.CSEproof <> osrc var
R24394:24397 compcert.backend.CSEproof <> bsrc var
R24356:24358 Coq.Init.Logic <> :type_scope:x_'='_x not
R24350:24355 compcert.backend.CSEproof <> approx var
R24359:24366 compcert.backend.ValueDomain VA State constr
R24371:24372 compcert.backend.CSEproof <> am var
R24368:24369 compcert.backend.CSEproof <> ae var
R24329:24334 compcert.backend.ValueDomain <> ematch def
R24342:24343 compcert.backend.CSEproof <> ae var
R24339:24340 compcert.backend.CSEproof <> rs var
R24336:24337 compcert.backend.CSEproof <> bc var
R24313:24315 Coq.Init.Logic <> :type_scope:x_'='_x not
R24308:24309 compcert.backend.CSEproof <> bc var
R24311:24312 compcert.backend.CSEproof <> sp var
R24316:24322 compcert.backend.ValueDomain <> BCstack constr
R24286:24295 compcert.backend.ValueDomain <> genv_match def
R24300:24301 compcert.backend.CSEproof <> ge var
R24297:24298 compcert.backend.CSEproof <> bc var
R24229:24243 compcert.backend.CSEdomain <> numbering_holds rec
R24278:24279 compcert.backend.CSEproof <> n2 var
R24275:24276 compcert.backend.CSEproof <> m' var
R24272:24273 compcert.backend.CSEproof <> rs var
R24254:24257 compcert.common.Values <> Vptr constr
R24262:24269 compcert.lib.Integers Int zero def
R24259:24260 compcert.backend.CSEproof <> sp var
R24250:24251 compcert.backend.CSEproof <> ge var
R24245:24248 compcert.backend.CSEproof <> valu var
R24173:24187 compcert.backend.CSEdomain <> numbering_holds rec
R24221:24222 compcert.backend.CSEproof <> n1 var
R24219:24219 compcert.backend.CSEproof <> m var
R24216:24217 compcert.backend.CSEproof <> rs var
R24198:24201 compcert.common.Values <> Vptr constr
R24206:24213 compcert.lib.Integers Int zero def
R24203:24204 compcert.backend.CSEproof <> sp var
R24194:24195 compcert.backend.CSEproof <> ge var
R24189:24192 compcert.backend.CSEproof <> valu var
R24157:24159 Coq.Init.Logic <> :type_scope:x_'='_x not
R24110:24123 compcert.common.Memory Mem storebytes def
R24152:24156 compcert.backend.CSEproof <> bytes var
R24133:24144 compcert.lib.Integers Int unsigned def
R24146:24149 compcert.backend.CSEproof <> odst var
R24127:24130 compcert.backend.CSEproof <> bdst var
R24125:24125 compcert.backend.CSEproof <> m var
R24160:24163 Coq.Init.Datatypes <> Some constr
R24165:24166 compcert.backend.CSEproof <> m' var
R24091:24093 Coq.Init.Logic <> :type_scope:x_'='_x not
R24048:24060 compcert.common.Memory Mem loadbytes def
R24089:24090 compcert.backend.CSEproof <> sz var
R24070:24081 compcert.lib.Integers Int unsigned def
R24083:24086 compcert.backend.CSEproof <> osrc var
R24064:24067 compcert.backend.CSEproof <> bsrc var
R24062:24062 compcert.backend.CSEproof <> m var
R24094:24097 Coq.Init.Datatypes <> Some constr
R24099:24103 compcert.backend.CSEproof <> bytes var
R24589:24598 compcert.backend.CSE <> add_memcpy def
R24613:24617 compcert.backend.ValueAnalysis <> aaddr def
R24613:24617 compcert.backend.ValueAnalysis <> aaddr def
R24660:24664 compcert.backend.ValueAnalysis <> aaddr def
R24660:24664 compcert.backend.ValueAnalysis <> aaddr def
R24785:24788 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24780:24782 Coq.Init.Logic <> :type_scope:x_'='_x not
R24779:24779 compcert.backend.CSEproof <> b var
R24790:24792 Coq.Init.Logic <> :type_scope:x_'='_x not
R24789:24789 compcert.backend.CSEproof <> i var
R24793:24793 compcert.backend.CSEproof <> o var
R24767:24769 Coq.Init.Logic <> :type_scope:x_'='_x not
R24753:24757 compcert.backend.ValueAnalysis <> aaddr def
R24766:24766 compcert.backend.CSEproof <> r var
R24770:24772 compcert.backend.ValueDomain <> Stk constr
R24774:24774 compcert.backend.CSEproof <> i var
R24738:24740 Coq.Init.Logic <> :type_scope:x_'='_x not
R24736:24736 compcert.backend.Registers <> ::x_'#'_x not
R24737:24737 compcert.backend.CSEproof <> r var
R24741:24744 compcert.common.Values <> Vptr constr
R24748:24748 compcert.backend.CSEproof <> o var
R24746:24746 compcert.backend.CSEproof <> b var
R24785:24788 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24780:24782 Coq.Init.Logic <> :type_scope:x_'='_x not
R24779:24779 compcert.backend.CSEproof <> b var
R24790:24792 Coq.Init.Logic <> :type_scope:x_'='_x not
R24789:24789 compcert.backend.CSEproof <> i var
R24793:24793 compcert.backend.CSEproof <> o var
R24767:24769 Coq.Init.Logic <> :type_scope:x_'='_x not
R24753:24757 compcert.backend.ValueAnalysis <> aaddr def
R24766:24766 compcert.backend.CSEproof <> r var
R24770:24772 compcert.backend.ValueDomain <> Stk constr
R24774:24774 compcert.backend.CSEproof <> i var
R24738:24740 Coq.Init.Logic <> :type_scope:x_'='_x not
R24736:24736 compcert.backend.Registers <> ::x_'#'_x not
R24737:24737 compcert.backend.CSEproof <> r var
R24741:24744 compcert.common.Values <> Vptr constr
R24748:24748 compcert.backend.CSEproof <> o var
R24746:24746 compcert.backend.CSEproof <> b var
R24828:24832 compcert.backend.ValueAnalysis <> aaddr def
R24907:24924 compcert.backend.ValueDomain <> match_aptr_of_aval thm
R24907:24924 compcert.backend.ValueDomain <> match_aptr_of_aval thm
R24985:24992 compcert.backend.ValueDomain <> bc_stack proj
R24985:24992 compcert.backend.ValueDomain <> bc_stack proj
R25221:25242 compcert.backend.CSEproof <> add_memcpy_eqs_charact thm
R25328:25335 compcert.backend.CSEdomain <> num_next proj
R25305:25320 compcert.backend.CSEproof <> wf_equation_incr thm
R25328:25335 compcert.backend.CSEdomain <> num_next proj
R25305:25320 compcert.backend.CSEproof <> wf_equation_incr thm
R25358:25375 compcert.backend.CSEproof <> shift_memcpy_eq_wf thm
R25358:25375 compcert.backend.CSEproof <> shift_memcpy_eq_wf thm
R25405:25426 compcert.backend.CSEproof <> add_memcpy_eqs_charact thm
R25490:25510 compcert.backend.CSEproof <> shift_memcpy_eq_holds thm
R25490:25510 compcert.backend.CSEproof <> shift_memcpy_eq_holds thm
sec 25585:25590 <> REDUCE
var 25603:25603 REDUCE A
var 25621:25621 REDUCE f
R25670:25675 Coq.Init.Datatypes <> option ind
R25679:25681 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R25678:25678 compcert.backend.CSEproof <> REDUCE.A var
R25682:25685 Coq.Init.Datatypes <> list ind
R25687:25692 compcert.ia32.CombineOp <> valnum def
R25655:25658 Coq.Init.Datatypes <> list ind
R25660:25665 compcert.ia32.CombineOp <> valnum def
R25650:25650 compcert.backend.CSEproof <> REDUCE.A var
R25635:25640 Coq.Init.Datatypes <> option ind
R25642:25644 compcert.backend.CSEdomain <> rhs ind
R25625:25630 compcert.ia32.CombineOp <> valnum def
var 25705:25705 REDUCE V
var 25723:25724 REDUCE ge
R25727:25730 compcert.backend.RTL <> genv def
var 25742:25743 REDUCE sp
R25746:25748 compcert.common.Values <> val ind
var 25760:25761 REDUCE rs
R25764:25769 compcert.backend.RTL <> regset def
var 25781:25781 REDUCE m
R25784:25786 compcert.common.Memory <> mem syndef
var 25798:25800 REDUCE sem
R25820:25825 Coq.Init.Datatypes <> option ind
R25827:25827 compcert.backend.CSEproof <> REDUCE.V var
R25808:25811 Coq.Init.Datatypes <> list ind
R25813:25815 compcert.common.Values <> val ind
R25803:25803 compcert.backend.CSEproof <> REDUCE.A var
var 25841:25847 REDUCE f_sound
R26030:26032 Coq.Init.Logic <> :type_scope:x_'='_x not
R26006:26008 compcert.backend.CSEproof <> REDUCE.sem var
R26015:26017 Coq.Lists.List <> map def
R26024:26028 compcert.backend.CSEproof <> args' var
R26019:26022 compcert.backend.CSEproof <> valu var
R26010:26012 compcert.backend.CSEproof <> op' var
R26033:26035 compcert.backend.CSEproof <> REDUCE.sem var
R26041:26043 Coq.Lists.List <> map def
R26050:26053 compcert.backend.CSEproof <> args var
R26045:26048 compcert.backend.CSEproof <> valu var
R26037:26038 compcert.backend.CSEproof <> op var
R25981:25983 Coq.Init.Logic <> :type_scope:x_'='_x not
R25968:25968 compcert.backend.CSEproof <> REDUCE.f var
R25977:25980 compcert.backend.CSEproof <> args var
R25974:25975 compcert.backend.CSEproof <> op var
R25970:25972 compcert.backend.CSEproof <> eqs var
R25984:25987 Coq.Init.Datatypes <> Some constr
R25988:25988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25992:25993 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25999:25999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25989:25991 compcert.backend.CSEproof <> op' var
R25994:25998 compcert.backend.CSEproof <> args' var
R25924:25934 compcert.backend.CSEdomain <> rhs_eval_to ind
R25954:25957 compcert.backend.CSEproof <> valu var
R25959:25959 compcert.backend.CSEproof <> v var
R25949:25951 compcert.backend.CSEproof <> rhs var
R25947:25947 compcert.backend.CSEproof <> REDUCE.m var
R25944:25945 compcert.backend.CSEproof <> REDUCE.sp var
R25941:25942 compcert.backend.CSEproof <> REDUCE.ge var
R25936:25939 compcert.backend.CSEproof <> valu var
R25909:25911 Coq.Init.Logic <> :type_scope:x_'='_x not
R25904:25906 compcert.backend.CSEproof <> eqs var
R25908:25908 compcert.backend.CSEproof <> v var
R25912:25915 Coq.Init.Datatypes <> Some constr
R25917:25919 compcert.backend.CSEproof <> rhs var
var 26066:26066 REDUCE n
R26069:26077 compcert.backend.CSEdomain <> numbering rec
var 26089:26092 REDUCE valu
R26105:26107 compcert.common.Values <> val ind
R26095:26100 compcert.ia32.CombineOp <> valnum def
var 26121:26127 REDUCE n_holds
R26130:26144 compcert.backend.CSEdomain <> numbering_holds rec
R26162:26162 compcert.backend.CSEproof <> REDUCE.n var
R26160:26160 compcert.backend.CSEproof <> REDUCE.m var
R26157:26158 compcert.backend.CSEproof <> REDUCE.rs var
R26154:26155 compcert.backend.CSEproof <> REDUCE.sp var
R26151:26152 compcert.backend.CSEproof <> REDUCE.ge var
R26146:26149 compcert.backend.CSEproof <> REDUCE.valu var
prf 26172:26187 <> reduce_rec_sound
R26337:26339 Coq.Init.Logic <> :type_scope:x_'='_x not
R26320:26322 compcert.backend.CSEproof <> REDUCE.sem var
R26331:26332 compcert.backend.Registers <> ::x_'##'_x not
R26329:26330 compcert.backend.CSEproof <> REDUCE.rs var
R26333:26335 compcert.backend.CSEproof <> rl' var
R26324:26326 compcert.backend.CSEproof <> op' var
R26340:26343 Coq.Init.Datatypes <> Some constr
R26345:26347 compcert.backend.CSEproof <> res var
R26303:26305 Coq.Init.Logic <> :type_scope:x_'='_x not
R26281:26283 compcert.backend.CSEproof <> REDUCE.sem var
R26289:26291 Coq.Lists.List <> map def
R26298:26301 compcert.backend.CSEproof <> args var
R26293:26296 compcert.backend.CSEproof <> REDUCE.valu var
R26285:26286 compcert.backend.CSEproof <> op var
R26306:26309 Coq.Init.Datatypes <> Some constr
R26311:26313 compcert.backend.CSEproof <> res var
R26258:26260 Coq.Init.Logic <> :type_scope:x_'='_x not
R26228:26237 compcert.backend.CSE <> reduce_rec def
R26254:26257 compcert.backend.CSEproof <> args var
R26251:26252 compcert.backend.CSEproof <> op var
R26245:26249 compcert.backend.CSEproof <> niter var
R26243:26243 compcert.backend.CSEproof <> REDUCE.n var
R26241:26241 compcert.backend.CSEproof <> REDUCE.f var
R26239:26239 compcert.backend.CSEproof <> REDUCE.A var
R26261:26264 Coq.Init.Datatypes <> Some constr
R26265:26265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26269:26270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26274:26274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26266:26268 compcert.backend.CSEproof <> op' var
R26271:26273 compcert.backend.CSEproof <> rl' var
R26419:26419 compcert.backend.CSEproof <> REDUCE.f var
R26430:26435 compcert.ia32.CombineOp <> valnum def
R26440:26454 compcert.backend.CSE <> find_valnum_num def
R26459:26465 compcert.backend.CSEdomain <> num_eqs proj
R26467:26467 compcert.backend.CSEproof <> REDUCE.n var
R26456:26456 compcert.backend.CSEproof <> v var
R26419:26419 compcert.backend.CSEproof <> REDUCE.f var
R26430:26435 compcert.ia32.CombineOp <> valnum def
R26440:26454 compcert.backend.CSE <> find_valnum_num def
R26459:26465 compcert.backend.CSEdomain <> num_eqs proj
R26467:26467 compcert.backend.CSEproof <> REDUCE.n var
R26456:26456 compcert.backend.CSEproof <> v var
R26552:26554 Coq.Init.Logic <> :type_scope:x_'='_x not
R26528:26530 compcert.backend.CSEproof <> REDUCE.sem var
R26537:26539 Coq.Lists.List <> map def
R26541:26544 compcert.backend.CSEproof <> REDUCE.valu var
R26555:26558 Coq.Init.Datatypes <> Some constr
R26552:26554 Coq.Init.Logic <> :type_scope:x_'='_x not
R26528:26530 compcert.backend.CSEproof <> REDUCE.sem var
R26537:26539 Coq.Lists.List <> map def
R26541:26544 compcert.backend.CSEproof <> REDUCE.valu var
R26555:26558 Coq.Init.Datatypes <> Some constr
R26592:26598 compcert.backend.CSEproof <> REDUCE.f_sound var
R26592:26598 compcert.backend.CSEproof <> REDUCE.f_sound var
R26639:26650 compcert.backend.CSEdomain <> num_holds_eq proj
R26672:26694 compcert.backend.CSEproof <> find_valnum_num_charact thm
R26672:26694 compcert.backend.CSEproof <> find_valnum_num_charact thm
R26754:26763 compcert.backend.CSE <> reduce_rec def
R26769:26769 compcert.backend.CSEproof <> REDUCE.n var
R26767:26767 compcert.backend.CSEproof <> REDUCE.f var
R26765:26765 compcert.backend.CSEproof <> REDUCE.A var
R26754:26763 compcert.backend.CSE <> reduce_rec def
R26769:26769 compcert.backend.CSEproof <> REDUCE.n var
R26767:26767 compcert.backend.CSEproof <> REDUCE.f var
R26765:26765 compcert.backend.CSEproof <> REDUCE.A var
R26857:26868 compcert.backend.CSE <> regs_valnums def
R26870:26870 compcert.backend.CSEproof <> REDUCE.n var
R26857:26868 compcert.backend.CSE <> regs_valnums def
R26870:26870 compcert.backend.CSEproof <> REDUCE.n var
R26913:26930 compcert.backend.CSEproof <> regs_valnums_sound thm
R26913:26930 compcert.backend.CSEproof <> regs_valnums_sound thm
prf 26984:26995 <> reduce_sound
R27142:27144 Coq.Init.Logic <> :type_scope:x_'='_x not
R27127:27129 compcert.backend.CSEproof <> REDUCE.sem var
R27137:27138 compcert.backend.Registers <> ::x_'##'_x not
R27135:27136 compcert.backend.CSEproof <> REDUCE.rs var
R27139:27141 compcert.backend.CSEproof <> rl' var
R27131:27133 compcert.backend.CSEproof <> op' var
R27145:27148 Coq.Init.Datatypes <> Some constr
R27150:27152 compcert.backend.CSEproof <> res var
R27110:27112 Coq.Init.Logic <> :type_scope:x_'='_x not
R27097:27099 compcert.backend.CSEproof <> REDUCE.sem var
R27106:27107 compcert.backend.Registers <> ::x_'##'_x not
R27104:27105 compcert.backend.CSEproof <> REDUCE.rs var
R27108:27109 compcert.backend.CSEproof <> rl var
R27101:27102 compcert.backend.CSEproof <> op var
R27113:27116 Coq.Init.Datatypes <> Some constr
R27118:27120 compcert.backend.CSEproof <> res var
R27082:27084 Coq.Init.Logic <> :type_scope:x_'='_x not
R27071:27073 Coq.Lists.List <> map def
R27080:27081 compcert.backend.CSEproof <> vl var
R27075:27078 compcert.backend.CSEproof <> REDUCE.valu var
R27087:27088 compcert.backend.Registers <> ::x_'##'_x not
R27085:27086 compcert.backend.CSEproof <> REDUCE.rs var
R27089:27090 compcert.backend.CSEproof <> rl var
R27052:27054 Coq.Init.Logic <> :type_scope:x_'='_x not
R27031:27036 compcert.backend.CSE <> reduce def
R27050:27051 compcert.backend.CSEproof <> vl var
R27047:27048 compcert.backend.CSEproof <> rl var
R27044:27045 compcert.backend.CSEproof <> op var
R27042:27042 compcert.backend.CSEproof <> REDUCE.n var
R27040:27040 compcert.backend.CSEproof <> REDUCE.f var
R27038:27038 compcert.backend.CSEproof <> REDUCE.A var
R27055:27055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27059:27060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27064:27064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27056:27058 compcert.backend.CSEproof <> op' var
R27061:27063 compcert.backend.CSEproof <> rl' var
R27171:27176 compcert.backend.CSE <> reduce def
R27200:27209 compcert.backend.CSE <> reduce_rec def
R27215:27215 compcert.backend.CSEproof <> REDUCE.n var
R27213:27213 compcert.backend.CSEproof <> REDUCE.f var
R27211:27211 compcert.backend.CSEproof <> REDUCE.A var
R27200:27209 compcert.backend.CSE <> reduce_rec def
R27215:27215 compcert.backend.CSEproof <> REDUCE.n var
R27213:27213 compcert.backend.CSEproof <> REDUCE.f var
R27211:27211 compcert.backend.CSEproof <> REDUCE.A var
R27271:27286 compcert.backend.CSEproof <> reduce_rec_sound thm
R27271:27286 compcert.backend.CSEproof <> reduce_rec_sound thm
R27326:27331 compcert.backend.CSEproof REDUCE <> sec
prf 27643:27660 <> analysis_correct_1
R27897:27903 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27908:27909 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27910:27924 compcert.backend.CSEdomain <> numbering_holds rec
R27948:27949 compcert.lib.Maps <> ::x_'!!'_x not
R27950:27952 compcert.backend.CSEproof <> pc' var
R27942:27947 compcert.backend.CSEproof <> approx var
R27940:27940 compcert.backend.CSEproof <> m var
R27937:27938 compcert.backend.CSEproof <> rs var
R27934:27935 compcert.backend.CSEproof <> sp var
R27931:27932 compcert.backend.CSEproof <> ge var
R27926:27929 compcert.backend.CSEproof <> valu var
R27810:27816 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27821:27822 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27823:27837 compcert.backend.CSEdomain <> numbering_holds rec
R27856:27863 compcert.backend.CSE <> transfer def
R27884:27885 compcert.lib.Maps <> ::x_'!!'_x not
R27886:27887 compcert.backend.CSEproof <> pc var
R27878:27883 compcert.backend.CSEproof <> approx var
R27875:27876 compcert.backend.CSEproof <> pc var
R27867:27873 compcert.backend.CSEproof <> vapprox var
R27865:27865 compcert.backend.CSEproof <> f var
R27853:27853 compcert.backend.CSEproof <> m var
R27850:27851 compcert.backend.CSEproof <> rs var
R27847:27848 compcert.backend.CSEproof <> sp var
R27844:27845 compcert.backend.CSEproof <> ge var
R27839:27842 compcert.backend.CSEproof <> valu var
R27776:27777 Coq.Lists.List <> In def
R27784:27799 compcert.backend.RTL <> successors_instr def
R27801:27801 compcert.backend.CSEproof <> i var
R27779:27781 compcert.backend.CSEproof <> pc' var
R27763:27765 Coq.Init.Logic <> :type_scope:x_'='_x not
R27760:27760 compcert.lib.Maps <> ::x_'!'_x not
R27761:27762 compcert.backend.CSEproof <> pc var
R27752:27758 compcert.backend.RTL <> fn_code proj
R27749:27749 compcert.backend.CSEproof <> f var
R27766:27769 Coq.Init.Datatypes <> Some constr
R27771:27771 compcert.backend.CSEproof <> i var
R27729:27731 Coq.Init.Logic <> :type_scope:x_'='_x not
R27712:27718 compcert.backend.CSE <> analyze def
R27722:27728 compcert.backend.CSEproof <> vapprox var
R27720:27720 compcert.backend.CSEproof <> f var
R27732:27735 Coq.Init.Datatypes <> Some constr
R27737:27742 compcert.backend.CSEproof <> approx var
R27983:27994 compcert.backend.CSE Numbering ge defax
R28009:28016 compcert.backend.CSE <> transfer def
R28037:28038 compcert.lib.Maps <> ::x_'!!'_x not
R28002:28003 compcert.lib.Maps <> ::x_'!!'_x not
R27983:27994 compcert.backend.CSE Numbering ge defax
R28009:28016 compcert.backend.CSE <> transfer def
R28037:28038 compcert.lib.Maps <> ::x_'!!'_x not
R28002:28003 compcert.lib.Maps <> ::x_'!!'_x not
R28056:28079 compcert.backend.CSE Solver fixpoint_solution prfax
R28056:28079 compcert.backend.CSE Solver fixpoint_solution prfax
prf 28160:28181 <> analysis_correct_entry
R28261:28267 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28272:28273 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28274:28288 compcert.backend.CSEdomain <> numbering_holds rec
R28312:28314 compcert.lib.Maps <> ::x_'!!'_x not
R28332:28332 compcert.lib.Maps <> ::x_'!!'_x not
R28318:28330 compcert.backend.RTL <> fn_entrypoint proj
R28315:28315 compcert.backend.CSEproof <> f var
R28306:28311 compcert.backend.CSEproof <> approx var
R28304:28304 compcert.backend.CSEproof <> m var
R28301:28302 compcert.backend.CSEproof <> rs var
R28298:28299 compcert.backend.CSEproof <> sp var
R28295:28296 compcert.backend.CSEproof <> ge var
R28290:28293 compcert.backend.CSEproof <> valu var
R28241:28243 Coq.Init.Logic <> :type_scope:x_'='_x not
R28224:28230 compcert.backend.CSE <> analyze def
R28234:28240 compcert.backend.CSEproof <> vapprox var
R28232:28232 compcert.backend.CSEproof <> f var
R28244:28247 Coq.Init.Datatypes <> Some constr
R28249:28254 compcert.backend.CSEproof <> approx var
R28370:28372 compcert.lib.Maps <> ::x_'!!'_x not
R28390:28390 compcert.lib.Maps <> ::x_'!!'_x not
R28376:28388 compcert.backend.RTL <> fn_entrypoint proj
R28398:28409 compcert.backend.CSE Solver.L top defax
R28398:28409 compcert.backend.CSE Solver.L top defax
R28370:28372 compcert.lib.Maps <> ::x_'!!'_x not
R28390:28390 compcert.lib.Maps <> ::x_'!!'_x not
R28376:28388 compcert.backend.RTL <> fn_entrypoint proj
R28431:28436 compcert.common.Values <> Vundef constr
R28431:28436 compcert.common.Values <> Vundef constr
R28446:28466 compcert.backend.CSEdomain <> empty_numbering_holds thm
R28446:28466 compcert.backend.CSEdomain <> empty_numbering_holds thm
R28488:28508 compcert.backend.CSE Solver fixpoint_entry prfax
R28488:28508 compcert.backend.CSE Solver fixpoint_entry prfax
sec 28564:28575 <> PRESERVATION
var 28588:28591 PRESERVATION prog
R28594:28600 compcert.backend.RTL <> program def
var 28612:28616 PRESERVATION tprog
R28620:28626 compcert.backend.RTL <> program def
var 28640:28645 PRESERVATION TRANSF
R28667:28669 Coq.Init.Logic <> :type_scope:x_'='_x not
R28648:28661 compcert.backend.CSE <> transf_program def
R28663:28666 compcert.backend.CSEproof <> PRESERVATION.prog var
R28670:28671 compcert.common.Errors <> OK constr
R28673:28677 compcert.backend.CSEproof <> PRESERVATION.tprog var
var 28684:28685 PRESERVATION ge
R28690:28703 compcert.common.Globalenvs Genv globalenv def
R28705:28708 compcert.backend.CSEproof <> PRESERVATION.prog var
var 28715:28717 PRESERVATION tge
R28722:28735 compcert.common.Globalenvs Genv globalenv def
R28737:28741 compcert.backend.CSEproof <> PRESERVATION.tprog var
var 28748:28749 PRESERVATION rm
R28754:28770 compcert.backend.ValueAnalysis <> romem_for_program def
R28772:28775 compcert.backend.CSEproof <> PRESERVATION.prog var
prf 28785:28801 <> symbols_preserved
R28817:28821 compcert.common.AST <> ident def
R28847:28849 Coq.Init.Logic <> :type_scope:x_'='_x not
R28825:28840 compcert.common.Globalenvs Genv find_symbol def
R28846:28846 compcert.backend.CSEproof <> s var
R28842:28844 compcert.backend.CSEproof <> PRESERVATION.tge var
R28850:28865 compcert.common.Globalenvs Genv find_symbol def
R28870:28870 compcert.backend.CSEproof <> s var
R28867:28868 compcert.backend.CSEproof <> PRESERVATION.ge var
R28880:28910 compcert.common.Globalenvs Genv find_symbol_transf_partial thm
R28936:28941 compcert.backend.CSEproof <> PRESERVATION.TRANSF var
R28931:28934 compcert.backend.CSEproof <> PRESERVATION.prog var
R28913:28925 compcert.backend.CSE <> transf_fundef def
R28927:28928 compcert.backend.CSEproof <> PRESERVATION.rm var
prf 28952:28968 <> varinfo_preserved
R29007:29009 Coq.Init.Logic <> :type_scope:x_'='_x not
R28983:29000 compcert.common.Globalenvs Genv find_var_info def
R29006:29006 compcert.backend.CSEproof <> b var
R29002:29004 compcert.backend.CSEproof <> PRESERVATION.tge var
R29010:29027 compcert.common.Globalenvs Genv find_var_info def
R29032:29032 compcert.backend.CSEproof <> b var
R29029:29030 compcert.backend.CSEproof <> PRESERVATION.ge var
R29042:29074 compcert.common.Globalenvs Genv find_var_info_transf_partial thm
R29100:29105 compcert.backend.CSEproof <> PRESERVATION.TRANSF var
R29095:29098 compcert.backend.CSEproof <> PRESERVATION.prog var
R29077:29089 compcert.backend.CSE <> transf_fundef def
R29091:29092 compcert.backend.CSEproof <> PRESERVATION.rm var
prf 29116:29135 <> functions_translated
R29151:29153 compcert.common.Values <> val ind
R29160:29169 compcert.backend.RTL <> fundef def
R29210:29216 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29219:29220 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29252:29255 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29242:29244 Coq.Init.Logic <> :type_scope:x_'='_x not
R29221:29235 compcert.common.Globalenvs Genv find_funct def
R29241:29241 compcert.backend.CSEproof <> v var
R29237:29239 compcert.backend.CSEproof <> PRESERVATION.tge var
R29245:29248 Coq.Init.Datatypes <> Some constr
R29250:29251 compcert.backend.CSEproof <> tf var
R29274:29276 Coq.Init.Logic <> :type_scope:x_'='_x not
R29256:29268 compcert.backend.CSE <> transf_fundef def
R29273:29273 compcert.backend.CSEproof <> f var
R29270:29271 compcert.backend.CSEproof <> PRESERVATION.rm var
R29277:29278 compcert.common.Errors <> OK constr
R29280:29281 compcert.backend.CSEproof <> tf var
R29195:29197 Coq.Init.Logic <> :type_scope:x_'='_x not
R29175:29189 compcert.common.Globalenvs Genv find_funct def
R29194:29194 compcert.backend.CSEproof <> v var
R29191:29192 compcert.backend.CSEproof <> PRESERVATION.ge var
R29198:29201 Coq.Init.Datatypes <> Some constr
R29203:29203 compcert.backend.CSEproof <> f var
R29291:29320 compcert.common.Globalenvs Genv find_funct_transf_partial thm
R29346:29351 compcert.backend.CSEproof <> PRESERVATION.TRANSF var
R29341:29344 compcert.backend.CSEproof <> PRESERVATION.prog var
R29323:29335 compcert.backend.CSE <> transf_fundef def
R29337:29338 compcert.backend.CSEproof <> PRESERVATION.rm var
prf 29362:29381 <> funct_ptr_translated
R29397:29401 compcert.common.Values <> block def
R29408:29417 compcert.backend.RTL <> fundef def
R29462:29468 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29471:29472 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29508:29511 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29498:29500 Coq.Init.Logic <> :type_scope:x_'='_x not
R29473:29491 compcert.common.Globalenvs Genv find_funct_ptr def
R29497:29497 compcert.backend.CSEproof <> b var
R29493:29495 compcert.backend.CSEproof <> PRESERVATION.tge var
R29501:29504 Coq.Init.Datatypes <> Some constr
R29506:29507 compcert.backend.CSEproof <> tf var
R29530:29532 Coq.Init.Logic <> :type_scope:x_'='_x not
R29512:29524 compcert.backend.CSE <> transf_fundef def
R29529:29529 compcert.backend.CSEproof <> f var
R29526:29527 compcert.backend.CSEproof <> PRESERVATION.rm var
R29533:29534 compcert.common.Errors <> OK constr
R29536:29537 compcert.backend.CSEproof <> tf var
R29447:29449 Coq.Init.Logic <> :type_scope:x_'='_x not
R29423:29441 compcert.common.Globalenvs Genv find_funct_ptr def
R29446:29446 compcert.backend.CSEproof <> b var
R29443:29444 compcert.backend.CSEproof <> PRESERVATION.ge var
R29450:29453 Coq.Init.Datatypes <> Some constr
R29455:29455 compcert.backend.CSEproof <> f var
R29547:29580 compcert.common.Globalenvs Genv find_funct_ptr_transf_partial thm
R29606:29611 compcert.backend.CSEproof <> PRESERVATION.TRANSF var
R29601:29604 compcert.backend.CSEproof <> PRESERVATION.prog var
R29583:29595 compcert.backend.CSE <> transf_fundef def
R29597:29598 compcert.backend.CSEproof <> PRESERVATION.rm var
prf 29622:29634 <> sig_preserved
R29691:29693 Coq.Init.Logic <> :type_scope:x_'='_x not
R29682:29687 compcert.backend.RTL <> funsig def
R29689:29690 compcert.backend.CSEproof <> tf var
R29694:29699 compcert.backend.RTL <> funsig def
R29701:29701 compcert.backend.CSEproof <> f var
R29670:29672 Coq.Init.Logic <> :type_scope:x_'='_x not
R29652:29664 compcert.backend.CSE <> transf_fundef def
R29669:29669 compcert.backend.CSEproof <> f var
R29666:29667 compcert.backend.CSEproof <> PRESERVATION.rm var
R29673:29674 compcert.common.Errors <> OK constr
R29676:29677 compcert.backend.CSEproof <> tf var
R29720:29732 compcert.backend.CSE <> transf_fundef def
R29782:29796 compcert.backend.CSE <> transf_function def
R29817:29823 compcert.backend.CSE <> analyze def
R29828:29835 compcert.backend.CSE <> vanalyze def
R29837:29838 compcert.backend.CSEproof <> PRESERVATION.rm var
R29817:29823 compcert.backend.CSE <> analyze def
R29828:29835 compcert.backend.CSE <> vanalyze def
R29837:29838 compcert.backend.CSEproof <> PRESERVATION.rm var
def 29895:29910 <> transf_function'
R29916:29923 compcert.backend.RTL <> function rec
R29936:29941 compcert.lib.Maps PMap t def
R29943:29951 compcert.backend.CSEdomain <> numbering rec
R29956:29963 compcert.backend.RTL <> function rec
R29970:29979 compcert.backend.RTL <> mkfunction constr
R30080:30092 compcert.backend.RTL <> fn_entrypoint proj
R30077:30077 compcert.backend.CSEproof <> f var
R30040:30050 compcert.backend.CSE <> transf_code def
R30063:30069 compcert.backend.RTL <> fn_code proj
R30060:30060 compcert.backend.CSEproof <> f var
R30052:30058 compcert.backend.CSEproof <> approxs var
R30021:30032 compcert.backend.RTL <> fn_stacksize proj
R30018:30018 compcert.backend.CSEproof <> f var
R30003:30011 compcert.backend.RTL <> fn_params proj
R30000:30000 compcert.backend.CSEproof <> f var
R29988:29993 compcert.backend.RTL <> fn_sig proj
R29985:29985 compcert.backend.CSEproof <> f var
def 30108:30119 <> regs_lessdef
R30131:30136 compcert.backend.RTL <> regset def
R30161:30171 compcert.common.Values Val lessdef ind
R30185:30185 compcert.backend.Registers <> ::x_'#'_x not
R30186:30186 compcert.backend.CSEproof <> r var
R30182:30184 compcert.backend.CSEproof <> rs2 var
R30177:30177 compcert.backend.Registers <> ::x_'#'_x not
R30178:30178 compcert.backend.CSEproof <> r var
R30174:30176 compcert.backend.CSEproof <> rs1 var
prf 30197:30213 <> regs_lessdef_regs
R30271:30286 compcert.common.Values Val lessdef_list ind
R30299:30300 compcert.backend.Registers <> ::x_'##'_x not
R30296:30298 compcert.backend.CSEproof <> rs2 var
R30301:30302 compcert.backend.CSEproof <> rl var
R30291:30292 compcert.backend.Registers <> ::x_'##'_x not
R30288:30290 compcert.backend.CSEproof <> rs1 var
R30293:30294 compcert.backend.CSEproof <> rl var
R30234:30245 compcert.backend.CSEproof <> regs_lessdef def
R30251:30253 compcert.backend.CSEproof <> rs2 var
R30247:30249 compcert.backend.CSEproof <> rs1 var
prf 30359:30373 <> set_reg_lessdef
R30449:30460 compcert.backend.CSEproof <> regs_lessdef def
R30480:30480 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R30482:30485 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R30481:30481 compcert.backend.CSEproof <> r var
R30486:30487 compcert.backend.CSEproof <> v2 var
R30477:30479 compcert.backend.CSEproof <> rs2 var
R30466:30466 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R30468:30471 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R30467:30467 compcert.backend.CSEproof <> r var
R30472:30473 compcert.backend.CSEproof <> v1 var
R30463:30465 compcert.backend.CSEproof <> rs1 var
R30425:30436 compcert.backend.CSEproof <> regs_lessdef def
R30442:30444 compcert.backend.CSEproof <> rs2 var
R30438:30440 compcert.backend.CSEproof <> rs1 var
R30404:30414 compcert.common.Values Val lessdef ind
R30419:30420 compcert.backend.CSEproof <> v2 var
R30416:30417 compcert.backend.CSEproof <> v1 var
R30536:30548 compcert.backend.Registers Regmap gsspec thm
R30536:30548 compcert.backend.Registers Regmap gsspec thm
R30536:30548 compcert.backend.Registers Regmap gsspec thm
R30536:30548 compcert.backend.Registers Regmap gsspec thm
R30564:30566 compcert.lib.Coqlib <> peq def
R30564:30566 compcert.lib.Coqlib <> peq def
prf 30593:30609 <> init_regs_lessdef
R30665:30676 compcert.backend.CSEproof <> regs_lessdef def
R30698:30706 compcert.backend.RTL <> init_regs def
R30712:30713 compcert.backend.CSEproof <> rl var
R30708:30710 compcert.backend.CSEproof <> vl2 var
R30679:30687 compcert.backend.RTL <> init_regs def
R30693:30694 compcert.backend.CSEproof <> rl var
R30689:30691 compcert.backend.CSEproof <> vl1 var
R30635:30650 compcert.common.Values Val lessdef_list ind
R30656:30658 compcert.backend.CSEproof <> vl2 var
R30652:30654 compcert.backend.CSEproof <> vl1 var
R30778:30786 compcert.backend.Registers Regmap gi thm
R30778:30786 compcert.backend.Registers Regmap gi thm
R30825:30833 compcert.backend.Registers Regmap gi thm
R30825:30833 compcert.backend.Registers Regmap gi thm
R30850:30864 compcert.backend.CSEproof <> set_reg_lessdef thm
R30850:30864 compcert.backend.CSEproof <> set_reg_lessdef thm
prf 30885:30908 <> find_function_translated
R31001:31007 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31011:31012 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31049:31052 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31038:31040 Coq.Init.Logic <> :type_scope:x_'='_x not
R31013:31025 compcert.backend.RTL <> find_function def
R31035:31037 compcert.backend.CSEproof <> rs' var
R31031:31033 compcert.backend.CSEproof <> ros var
R31027:31029 compcert.backend.CSEproof <> PRESERVATION.tge var
R31041:31044 Coq.Init.Datatypes <> Some constr
R31046:31048 compcert.backend.CSEproof <> tfd var
R31072:31074 Coq.Init.Logic <> :type_scope:x_'='_x not
R31053:31065 compcert.backend.CSE <> transf_fundef def
R31070:31071 compcert.backend.CSEproof <> fd var
R31067:31068 compcert.backend.CSEproof <> PRESERVATION.rm var
R31075:31076 compcert.common.Errors <> OK constr
R31078:31080 compcert.backend.CSEproof <> tfd var
R30976:30987 compcert.backend.CSEproof <> regs_lessdef def
R30992:30994 compcert.backend.CSEproof <> rs' var
R30989:30990 compcert.backend.CSEproof <> rs var
R30960:30962 Coq.Init.Logic <> :type_scope:x_'='_x not
R30937:30949 compcert.backend.RTL <> find_function def
R30958:30959 compcert.backend.CSEproof <> rs var
R30954:30956 compcert.backend.CSEproof <> ros var
R30951:30952 compcert.backend.CSEproof <> PRESERVATION.ge var
R30963:30966 Coq.Init.Datatypes <> Some constr
R30968:30969 compcert.backend.CSEproof <> fd var
R31099:31111 compcert.backend.RTL <> find_function def
R31173:31192 compcert.backend.CSEproof <> functions_translated thm
R31173:31192 compcert.backend.CSEproof <> functions_translated thm
R31247:31263 compcert.backend.CSEproof <> symbols_preserved thm
R31247:31263 compcert.backend.CSEproof <> symbols_preserved thm
R31276:31291 compcert.common.Globalenvs Genv find_symbol def
R31293:31294 compcert.backend.CSEproof <> PRESERVATION.ge var
R31276:31291 compcert.common.Globalenvs Genv find_symbol def
R31293:31294 compcert.backend.CSEproof <> PRESERVATION.ge var
R31308:31327 compcert.backend.CSEproof <> funct_ptr_translated thm
R31308:31327 compcert.backend.CSEproof <> funct_ptr_translated thm
ind 31965:31981 <> match_stackframes
constr 32034:32054 <> match_stackframes_nil
constr 32093:32114 <> match_stackframes_cons
R32003:32006 Coq.Init.Datatypes <> list ind
R32008:32017 compcert.backend.RTL <> stackframe ind
R31984:31987 Coq.Init.Datatypes <> list ind
R31989:31998 compcert.backend.RTL <> stackframe ind
R32063:32079 compcert.backend.CSEproof <> match_stackframes ind
R32085:32087 Coq.Init.Datatypes <> nil constr
R32081:32083 Coq.Init.Datatypes <> nil constr
R32207:32209 Coq.Init.Logic <> :type_scope:x_'='_x not
R32182:32188 compcert.backend.CSE <> analyze def
R32193:32200 compcert.backend.CSE <> vanalyze def
R32205:32205 compcert.backend.CSEproof <> f var
R32202:32203 compcert.backend.CSEproof <> PRESERVATION.rm var
R32190:32190 compcert.backend.CSEproof <> f var
R32210:32213 Coq.Init.Datatypes <> Some constr
R32215:32220 compcert.backend.CSEproof <> approx var
R32252:32258 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32263:32264 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32265:32279 compcert.backend.CSEdomain <> numbering_holds rec
R32314:32315 compcert.lib.Maps <> ::x_'!!'_x not
R32316:32317 compcert.backend.CSEproof <> pc var
R32308:32313 compcert.backend.CSEproof <> approx var
R32306:32306 compcert.backend.CSEproof <> m var
R32295:32295 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R32299:32302 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R32296:32298 compcert.backend.CSEproof <> res var
R32303:32303 compcert.backend.CSEproof <> v var
R32293:32294 compcert.backend.CSEproof <> rs var
R32289:32290 compcert.backend.CSEproof <> sp var
R32286:32287 compcert.backend.CSEproof <> PRESERVATION.ge var
R32281:32284 compcert.backend.CSEproof <> valu var
R32337:32348 compcert.backend.CSEproof <> regs_lessdef def
R32353:32355 compcert.backend.CSEproof <> rs' var
R32350:32351 compcert.backend.CSEproof <> rs var
R32378:32394 compcert.backend.CSEproof <> match_stackframes ind
R32398:32399 compcert.backend.CSEproof <> s' var
R32396:32396 compcert.backend.CSEproof <> s var
R32407:32423 compcert.backend.CSEproof <> match_stackframes ind
R32523:32526 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32471:32480 compcert.backend.RTL <> Stackframe constr
R32520:32522 compcert.backend.CSEproof <> rs' var
R32517:32518 compcert.backend.CSEproof <> pc var
R32514:32515 compcert.backend.CSEproof <> sp var
R32487:32502 compcert.backend.CSEproof <> transf_function' def
R32506:32511 compcert.backend.CSEproof <> approx var
R32504:32504 compcert.backend.CSEproof <> f var
R32482:32484 compcert.backend.CSEproof <> res var
R32527:32528 compcert.backend.CSEproof <> s' var
R32457:32460 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R32432:32441 compcert.backend.RTL <> Stackframe constr
R32455:32456 compcert.backend.CSEproof <> rs var
R32452:32453 compcert.backend.CSEproof <> pc var
R32449:32450 compcert.backend.CSEproof <> sp var
R32447:32447 compcert.backend.CSEproof <> f var
R32443:32445 compcert.backend.CSEproof <> res var
R32461:32461 compcert.backend.CSEproof <> s var
ind 32543:32554 <> match_states
constr 32587:32604 <> match_states_intro
constr 33034:33050 <> match_states_call
constr 33316:33334 <> match_states_return
R32566:32570 compcert.backend.RTL <> state ind
R32557:32561 compcert.backend.RTL <> state ind
R32700:32702 Coq.Init.Logic <> :type_scope:x_'='_x not
R32675:32681 compcert.backend.CSE <> analyze def
R32686:32693 compcert.backend.CSE <> vanalyze def
R32698:32698 compcert.backend.CSEproof <> f var
R32695:32696 compcert.backend.CSEproof <> PRESERVATION.rm var
R32683:32683 compcert.backend.CSEproof <> f var
R32703:32706 Coq.Init.Datatypes <> Some constr
R32708:32713 compcert.backend.CSEproof <> approx var
R32735:32741 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32746:32747 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32748:32762 compcert.backend.CSEdomain <> numbering_holds rec
R32786:32787 compcert.lib.Maps <> ::x_'!!'_x not
R32788:32789 compcert.backend.CSEproof <> pc var
R32780:32785 compcert.backend.CSEproof <> approx var
R32778:32778 compcert.backend.CSEproof <> m var
R32775:32776 compcert.backend.CSEproof <> rs var
R32772:32773 compcert.backend.CSEproof <> sp var
R32769:32770 compcert.backend.CSEproof <> PRESERVATION.ge var
R32764:32767 compcert.backend.CSEproof <> valu var
R32811:32822 compcert.backend.CSEproof <> regs_lessdef def
R32827:32829 compcert.backend.CSEproof <> rs' var
R32824:32825 compcert.backend.CSEproof <> rs var
R32852:32862 compcert.common.Memory Mem extends def
R32866:32867 compcert.backend.CSEproof <> m' var
R32864:32864 compcert.backend.CSEproof <> m var
R32892:32908 compcert.backend.CSEproof <> match_stackframes ind
R32912:32913 compcert.backend.CSEproof <> s' var
R32910:32910 compcert.backend.CSEproof <> s var
R32923:32934 compcert.backend.CSEproof <> match_states ind
R32979:32983 compcert.backend.RTL <> State constr
R33026:33027 compcert.backend.CSEproof <> m' var
R33022:33024 compcert.backend.CSEproof <> rs' var
R33019:33020 compcert.backend.CSEproof <> pc var
R33016:33017 compcert.backend.CSEproof <> sp var
R32989:33004 compcert.backend.CSEproof <> transf_function' def
R33008:33013 compcert.backend.CSEproof <> approx var
R33006:33006 compcert.backend.CSEproof <> f var
R32985:32986 compcert.backend.CSEproof <> s' var
R32937:32941 compcert.backend.RTL <> State constr
R32956:32956 compcert.backend.CSEproof <> m var
R32953:32954 compcert.backend.CSEproof <> rs var
R32950:32951 compcert.backend.CSEproof <> pc var
R32947:32948 compcert.backend.CSEproof <> sp var
R32945:32945 compcert.backend.CSEproof <> f var
R32943:32943 compcert.backend.CSEproof <> s var
R33230:33241 compcert.backend.CSEproof <> match_states ind
R33286:33294 compcert.backend.RTL <> Callstate constr
R33308:33309 compcert.backend.CSEproof <> m' var
R33302:33306 compcert.backend.CSEproof <> args' var
R33299:33300 compcert.backend.CSEproof <> tf var
R33296:33297 compcert.backend.CSEproof <> s' var
R33244:33252 compcert.backend.RTL <> Callstate constr
R33263:33263 compcert.backend.CSEproof <> m var
R33258:33261 compcert.backend.CSEproof <> args var
R33256:33256 compcert.backend.CSEproof <> f var
R33254:33254 compcert.backend.CSEproof <> s var
R33204:33214 compcert.common.Memory Mem extends def
R33218:33219 compcert.backend.CSEproof <> m' var
R33216:33216 compcert.backend.CSEproof <> m var
R33167:33182 compcert.common.Values Val lessdef_list ind
R33189:33193 compcert.backend.CSEproof <> args' var
R33184:33187 compcert.backend.CSEproof <> args var
R33149:33151 Coq.Init.Logic <> :type_scope:x_'='_x not
R33131:33143 compcert.backend.CSE <> transf_fundef def
R33148:33148 compcert.backend.CSEproof <> f var
R33145:33146 compcert.backend.CSEproof <> PRESERVATION.rm var
R33152:33153 compcert.common.Errors <> OK constr
R33155:33156 compcert.backend.CSEproof <> tf var
R33099:33115 compcert.backend.CSEproof <> match_stackframes ind
R33119:33120 compcert.backend.CSEproof <> s' var
R33117:33117 compcert.backend.CSEproof <> s var
R33456:33467 compcert.backend.CSEproof <> match_states ind
R33509:33519 compcert.backend.RTL <> Returnstate constr
R33527:33528 compcert.backend.CSEproof <> m' var
R33524:33525 compcert.backend.CSEproof <> v' var
R33521:33522 compcert.backend.CSEproof <> s' var
R33470:33480 compcert.backend.RTL <> Returnstate constr
R33486:33486 compcert.backend.CSEproof <> m var
R33484:33484 compcert.backend.CSEproof <> v var
R33482:33482 compcert.backend.CSEproof <> s var
R33430:33440 compcert.common.Memory Mem extends def
R33444:33445 compcert.backend.CSEproof <> m' var
R33442:33442 compcert.backend.CSEproof <> m var
R33404:33414 compcert.common.Values Val lessdef ind
R33418:33419 compcert.backend.CSEproof <> v' var
R33416:33416 compcert.backend.CSEproof <> v var
R33372:33388 compcert.backend.CSEproof <> match_stackframes ind
R33392:33393 compcert.backend.CSEproof <> s' var
R33390:33390 compcert.backend.CSEproof <> s var
R33596:33598 Coq.Init.Logic <> :type_scope:x_'='_x not
R33580:33588 compcert.lib.Maps PTree get def
R33599:33602 Coq.Init.Datatypes <> Some constr
R33596:33598 Coq.Init.Logic <> :type_scope:x_'='_x not
R33580:33588 compcert.lib.Maps PTree get def
R33599:33602 Coq.Init.Datatypes <> Some constr
R33616:33623 compcert.backend.RTL <> function rec
R33616:33623 compcert.backend.RTL <> function rec
R33634:33639 compcert.lib.Maps PMap t def
R33641:33649 compcert.backend.CSEdomain <> numbering rec
R33634:33639 compcert.lib.Maps PMap t def
R33641:33649 compcert.backend.CSEdomain <> numbering rec
R33710:33712 Coq.Init.Logic <> :type_scope:x_'='_x not
R33707:33707 compcert.lib.Maps <> ::x_'!'_x not
R33699:33705 compcert.backend.RTL <> fn_code proj
R33671:33686 compcert.backend.CSEproof <> transf_function' def
R33713:33716 Coq.Init.Datatypes <> Some constr
R33718:33729 compcert.backend.CSE <> transf_instr def
R33737:33738 compcert.lib.Maps <> ::x_'!!'_x not
R33765:33776 compcert.backend.CSE <> transf_instr def
R33793:33808 compcert.backend.CSEproof <> transf_function' def
R33811:33821 compcert.backend.CSE <> transf_code def
R33839:33848 compcert.lib.Maps PTree gmap thm
R33867:33876 compcert.lib.Coqlib <> option_map def
prf 34012:34030 <> transf_step_correct
R34088:34099 compcert.backend.CSEproof <> match_states ind
R34104:34106 compcert.backend.CSEproof <> s1' var
R34101:34102 compcert.backend.CSEproof <> s1 var
R34117:34127 compcert.backend.ValueAnalysis <> sound_state ind
R34134:34135 compcert.backend.CSEproof <> s1 var
R34129:34132 compcert.backend.CSEproof <> PRESERVATION.prog var
R34141:34147 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34151:34152 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34171:34174 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R34153:34156 compcert.backend.RTL <> step ind
R34168:34170 compcert.backend.CSEproof <> s2' var
R34166:34166 compcert.backend.CSEproof <> t var
R34162:34164 compcert.backend.CSEproof <> s1' var
R34158:34160 compcert.backend.CSEproof <> PRESERVATION.tge var
R34175:34186 compcert.backend.CSEproof <> match_states ind
R34191:34193 compcert.backend.CSEproof <> s2' var
R34188:34189 compcert.backend.CSEproof <> s2 var
R34051:34054 compcert.backend.RTL <> step ind
R34064:34065 compcert.backend.CSEproof <> s2 var
R34062:34062 compcert.backend.CSEproof <> t var
R34059:34060 compcert.backend.CSEproof <> s1 var
R34056:34057 compcert.backend.CSEproof <> PRESERVATION.ge var
R34308:34316 compcert.backend.RTL <> exec_Inop constr
R34308:34316 compcert.backend.RTL <> exec_Inop constr
R34359:34376 compcert.backend.CSEproof <> analysis_correct_1 thm
R34359:34376 compcert.backend.CSEproof <> analysis_correct_1 thm
R34409:34416 compcert.backend.CSE <> transfer def
R34461:34473 compcert.ia32.Op <> is_trivial_op def
R34461:34473 compcert.ia32.Op <> is_trivial_op def
R34517:34538 compcert.ia32.Op <> eval_operation_lessdef thm
R34548:34564 compcert.backend.CSEproof <> regs_lessdef_regs thm
R34548:34564 compcert.backend.CSEproof <> regs_lessdef_regs thm
R34641:34648 compcert.backend.RTL <> exec_Iop constr
R34641:34648 compcert.backend.RTL <> exec_Iop constr
R34695:34718 compcert.ia32.Op <> eval_operation_preserved thm
R34695:34718 compcert.ia32.Op <> eval_operation_preserved thm
R34727:34743 compcert.backend.CSEproof <> symbols_preserved thm
R34727:34743 compcert.backend.CSEproof <> symbols_preserved thm
R34779:34796 compcert.backend.CSEproof <> analysis_correct_1 thm
R34779:34796 compcert.backend.CSEproof <> analysis_correct_1 thm
R34828:34835 compcert.backend.CSE <> transfer def
R34886:34897 compcert.backend.CSEproof <> add_op_holds thm
R34886:34897 compcert.backend.CSEproof <> add_op_holds thm
R34915:34929 compcert.backend.CSEproof <> set_reg_lessdef thm
R34915:34929 compcert.backend.CSEproof <> set_reg_lessdef thm
R34977:34987 compcert.backend.CSE <> valnum_regs def
R34995:34996 compcert.lib.Maps <> ::x_'!!'_x not
R34977:34987 compcert.backend.CSE <> valnum_regs def
R34995:34996 compcert.lib.Maps <> ::x_'!!'_x not
R35065:35081 compcert.backend.CSEproof <> valnum_regs_holds thm
R35143:35150 compcert.backend.CSE <> find_rhs def
R35156:35157 compcert.backend.CSEdomain <> Op constr
R35143:35150 compcert.backend.CSE <> find_rhs def
R35156:35157 compcert.backend.CSEdomain <> Op constr
R35217:35230 compcert.backend.CSEproof <> find_rhs_sound thm
R35276:35278 Coq.Init.Logic <> :type_scope:x_'='_x not
R35276:35278 Coq.Init.Logic <> :type_scope:x_'='_x not
R35349:35356 compcert.backend.RTL <> exec_Iop constr
R35349:35356 compcert.backend.RTL <> exec_Iop constr
R35413:35430 compcert.backend.CSEproof <> analysis_correct_1 thm
R35413:35430 compcert.backend.CSEproof <> analysis_correct_1 thm
R35462:35469 compcert.backend.CSE <> transfer def
R35493:35504 compcert.backend.CSEproof <> add_op_holds thm
R35493:35504 compcert.backend.CSEproof <> add_op_holds thm
R35523:35537 compcert.backend.CSEproof <> set_reg_lessdef thm
R35523:35537 compcert.backend.CSEproof <> set_reg_lessdef thm
R35555:35571 compcert.common.Values Val lessdef_trans thm
R35555:35571 compcert.common.Values Val lessdef_trans thm
R35621:35626 compcert.backend.CSE <> reduce def
R35638:35647 compcert.ia32.CombineOp <> combine_op def
R35628:35636 compcert.ia32.Op <> operation ind
R35621:35626 compcert.backend.CSE <> reduce def
R35638:35647 compcert.ia32.CombineOp <> combine_op def
R35628:35636 compcert.ia32.Op <> operation ind
R35737:35739 Coq.Init.Logic <> :type_scope:x_'='_x not
R35701:35714 compcert.ia32.Op <> eval_operation def
R35728:35729 compcert.backend.Registers <> ::x_'##'_x not
R35716:35717 compcert.backend.CSEproof <> PRESERVATION.ge var
R35740:35743 Coq.Init.Datatypes <> Some constr
R35737:35739 Coq.Init.Logic <> :type_scope:x_'='_x not
R35701:35714 compcert.ia32.Op <> eval_operation def
R35728:35729 compcert.backend.Registers <> ::x_'##'_x not
R35716:35717 compcert.backend.CSEproof <> PRESERVATION.ge var
R35740:35743 Coq.Init.Datatypes <> Some constr
R35799:35812 compcert.ia32.Op <> eval_operation def
R35823:35824 compcert.backend.CSEproof <> vl var
R35820:35821 compcert.backend.CSEproof <> op var
R35814:35815 compcert.backend.CSEproof <> PRESERVATION.ge var
R35760:35771 compcert.backend.CSEproof <> reduce_sound thm
R35799:35812 compcert.ia32.Op <> eval_operation def
R35823:35824 compcert.backend.CSEproof <> vl var
R35820:35821 compcert.backend.CSEproof <> op var
R35814:35815 compcert.backend.CSEproof <> PRESERVATION.ge var
R35760:35771 compcert.backend.CSEproof <> reduce_sound thm
R35857:35872 compcert.ia32.CombineOpproof <> combine_op_sound thm
R35857:35872 compcert.ia32.CombineOpproof <> combine_op_sound thm
R35892:35913 compcert.ia32.Op <> eval_operation_lessdef thm
R35923:35939 compcert.backend.CSEproof <> regs_lessdef_regs thm
R35923:35939 compcert.backend.CSEproof <> regs_lessdef_regs thm
R36016:36023 compcert.backend.RTL <> exec_Iop constr
R36016:36023 compcert.backend.RTL <> exec_Iop constr
R36073:36096 compcert.ia32.Op <> eval_operation_preserved thm
R36073:36096 compcert.ia32.Op <> eval_operation_preserved thm
R36105:36121 compcert.backend.CSEproof <> symbols_preserved thm
R36105:36121 compcert.backend.CSEproof <> symbols_preserved thm
R36156:36173 compcert.backend.CSEproof <> analysis_correct_1 thm
R36156:36173 compcert.backend.CSEproof <> analysis_correct_1 thm
R36205:36212 compcert.backend.CSE <> transfer def
R36236:36247 compcert.backend.CSEproof <> add_op_holds thm
R36236:36247 compcert.backend.CSEproof <> add_op_holds thm
R36266:36280 compcert.backend.CSEproof <> set_reg_lessdef thm
R36266:36280 compcert.backend.CSEproof <> set_reg_lessdef thm
R36317:36327 compcert.backend.CSE <> valnum_regs def
R36335:36336 compcert.lib.Maps <> ::x_'!!'_x not
R36317:36327 compcert.backend.CSE <> valnum_regs def
R36335:36336 compcert.lib.Maps <> ::x_'!!'_x not
R36405:36421 compcert.backend.CSEproof <> valnum_regs_holds thm
R36483:36490 compcert.backend.CSE <> find_rhs def
R36496:36499 compcert.backend.CSEdomain <> Load constr
R36483:36490 compcert.backend.CSE <> find_rhs def
R36496:36499 compcert.backend.CSEdomain <> Load constr
R36567:36580 compcert.backend.CSEproof <> find_rhs_sound thm
R36626:36628 Coq.Init.Logic <> :type_scope:x_'='_x not
R36626:36628 Coq.Init.Logic <> :type_scope:x_'='_x not
R36699:36706 compcert.backend.RTL <> exec_Iop constr
R36699:36706 compcert.backend.RTL <> exec_Iop constr
R36763:36780 compcert.backend.CSEproof <> analysis_correct_1 thm
R36763:36780 compcert.backend.CSEproof <> analysis_correct_1 thm
R36812:36819 compcert.backend.CSE <> transfer def
R36843:36856 compcert.backend.CSEproof <> add_load_holds thm
R36843:36856 compcert.backend.CSEproof <> add_load_holds thm
R36875:36889 compcert.backend.CSEproof <> set_reg_lessdef thm
R36875:36889 compcert.backend.CSEproof <> set_reg_lessdef thm
R36905:36921 compcert.common.Values Val lessdef_trans thm
R36905:36921 compcert.common.Values Val lessdef_trans thm
R37008:37013 compcert.backend.CSE <> reduce def
R37026:37037 compcert.ia32.CombineOp <> combine_addr def
R37015:37024 compcert.ia32.Op <> addressing ind
R37008:37013 compcert.backend.CSE <> reduce def
R37026:37037 compcert.ia32.CombineOp <> combine_addr def
R37015:37024 compcert.ia32.Op <> addressing ind
R37133:37135 Coq.Init.Logic <> :type_scope:x_'='_x not
R37096:37110 compcert.ia32.Op <> eval_addressing def
R37126:37127 compcert.backend.Registers <> ::x_'##'_x not
R37112:37113 compcert.backend.CSEproof <> PRESERVATION.ge var
R37136:37139 Coq.Init.Datatypes <> Some constr
R37133:37135 Coq.Init.Logic <> :type_scope:x_'='_x not
R37096:37110 compcert.ia32.Op <> eval_addressing def
R37126:37127 compcert.backend.Registers <> ::x_'##'_x not
R37112:37113 compcert.backend.CSEproof <> PRESERVATION.ge var
R37136:37139 Coq.Init.Datatypes <> Some constr
R37197:37211 compcert.ia32.Op <> eval_addressing def
R37224:37225 compcert.backend.CSEproof <> vl var
R37219:37222 compcert.backend.CSEproof <> addr var
R37213:37214 compcert.backend.CSEproof <> PRESERVATION.ge var
R37156:37167 compcert.backend.CSEproof <> reduce_sound thm
R37197:37211 compcert.ia32.Op <> eval_addressing def
R37224:37225 compcert.backend.CSEproof <> vl var
R37219:37222 compcert.backend.CSEproof <> addr var
R37213:37214 compcert.backend.CSEproof <> PRESERVATION.ge var
R37156:37167 compcert.backend.CSEproof <> reduce_sound thm
R37256:37273 compcert.ia32.CombineOpproof <> combine_addr_sound thm
R37256:37273 compcert.ia32.CombineOpproof <> combine_addr_sound thm
R37295:37317 compcert.ia32.Op <> eval_addressing_lessdef thm
R37326:37342 compcert.backend.CSEproof <> regs_lessdef_regs thm
R37326:37342 compcert.backend.CSEproof <> regs_lessdef_regs thm
R37442:37444 Coq.Init.Logic <> :type_scope:x_'='_x not
R37403:37417 compcert.ia32.Op <> eval_addressing def
R37435:37436 compcert.backend.Registers <> ::x_'##'_x not
R37419:37421 compcert.backend.CSEproof <> PRESERVATION.tge var
R37445:37448 Coq.Init.Datatypes <> Some constr
R37442:37444 Coq.Init.Logic <> :type_scope:x_'='_x not
R37403:37417 compcert.ia32.Op <> eval_addressing def
R37435:37436 compcert.backend.Registers <> ::x_'##'_x not
R37419:37421 compcert.backend.CSEproof <> PRESERVATION.tge var
R37445:37448 Coq.Init.Datatypes <> Some constr
R37479:37503 compcert.ia32.Op <> eval_addressing_preserved thm
R37479:37503 compcert.ia32.Op <> eval_addressing_preserved thm
R37512:37528 compcert.backend.CSEproof <> symbols_preserved thm
R37512:37528 compcert.backend.CSEproof <> symbols_preserved thm
R37543:37559 compcert.common.Memory Mem loadv_extends thm
R37623:37632 compcert.backend.RTL <> exec_Iload constr
R37623:37632 compcert.backend.RTL <> exec_Iload constr
R37674:37691 compcert.backend.CSEproof <> analysis_correct_1 thm
R37674:37691 compcert.backend.CSEproof <> analysis_correct_1 thm
R37724:37731 compcert.backend.CSE <> transfer def
R37755:37768 compcert.backend.CSEproof <> add_load_holds thm
R37755:37768 compcert.backend.CSEproof <> add_load_holds thm
R37786:37800 compcert.backend.CSEproof <> set_reg_lessdef thm
R37786:37800 compcert.backend.CSEproof <> set_reg_lessdef thm
R37837:37847 compcert.backend.CSE <> valnum_regs def
R37855:37856 compcert.lib.Maps <> ::x_'!!'_x not
R37837:37847 compcert.backend.CSE <> valnum_regs def
R37855:37856 compcert.lib.Maps <> ::x_'!!'_x not
R37925:37941 compcert.backend.CSEproof <> valnum_regs_holds thm
R38003:38008 compcert.backend.CSE <> reduce def
R38021:38032 compcert.ia32.CombineOp <> combine_addr def
R38010:38019 compcert.ia32.Op <> addressing ind
R38003:38008 compcert.backend.CSE <> reduce def
R38021:38032 compcert.ia32.CombineOp <> combine_addr def
R38010:38019 compcert.ia32.Op <> addressing ind
R38128:38130 Coq.Init.Logic <> :type_scope:x_'='_x not
R38091:38105 compcert.ia32.Op <> eval_addressing def
R38121:38122 compcert.backend.Registers <> ::x_'##'_x not
R38107:38108 compcert.backend.CSEproof <> PRESERVATION.ge var
R38131:38134 Coq.Init.Datatypes <> Some constr
R38128:38130 Coq.Init.Logic <> :type_scope:x_'='_x not
R38091:38105 compcert.ia32.Op <> eval_addressing def
R38121:38122 compcert.backend.Registers <> ::x_'##'_x not
R38107:38108 compcert.backend.CSEproof <> PRESERVATION.ge var
R38131:38134 Coq.Init.Datatypes <> Some constr
R38192:38206 compcert.ia32.Op <> eval_addressing def
R38219:38220 compcert.backend.CSEproof <> vl var
R38214:38217 compcert.backend.CSEproof <> addr var
R38208:38209 compcert.backend.CSEproof <> PRESERVATION.ge var
R38151:38162 compcert.backend.CSEproof <> reduce_sound thm
R38192:38206 compcert.ia32.Op <> eval_addressing def
R38219:38220 compcert.backend.CSEproof <> vl var
R38214:38217 compcert.backend.CSEproof <> addr var
R38208:38209 compcert.backend.CSEproof <> PRESERVATION.ge var
R38151:38162 compcert.backend.CSEproof <> reduce_sound thm
R38251:38268 compcert.ia32.CombineOpproof <> combine_addr_sound thm
R38251:38268 compcert.ia32.CombineOpproof <> combine_addr_sound thm
R38290:38312 compcert.ia32.Op <> eval_addressing_lessdef thm
R38321:38337 compcert.backend.CSEproof <> regs_lessdef_regs thm
R38321:38337 compcert.backend.CSEproof <> regs_lessdef_regs thm
R38437:38439 Coq.Init.Logic <> :type_scope:x_'='_x not
R38398:38412 compcert.ia32.Op <> eval_addressing def
R38430:38431 compcert.backend.Registers <> ::x_'##'_x not
R38414:38416 compcert.backend.CSEproof <> PRESERVATION.tge var
R38440:38443 Coq.Init.Datatypes <> Some constr
R38437:38439 Coq.Init.Logic <> :type_scope:x_'='_x not
R38398:38412 compcert.ia32.Op <> eval_addressing def
R38430:38431 compcert.backend.Registers <> ::x_'##'_x not
R38414:38416 compcert.backend.CSEproof <> PRESERVATION.tge var
R38440:38443 Coq.Init.Datatypes <> Some constr
R38474:38498 compcert.ia32.Op <> eval_addressing_preserved thm
R38474:38498 compcert.ia32.Op <> eval_addressing_preserved thm
R38507:38523 compcert.backend.CSEproof <> symbols_preserved thm
R38507:38523 compcert.backend.CSEproof <> symbols_preserved thm
R38538:38555 compcert.common.Memory Mem storev_extends thm
R38617:38627 compcert.backend.RTL <> exec_Istore constr
R38617:38627 compcert.backend.RTL <> exec_Istore constr
R38669:38686 compcert.backend.CSEproof <> analysis_correct_1 thm
R38669:38686 compcert.backend.CSEproof <> analysis_correct_1 thm
R38719:38726 compcert.backend.CSE <> transfer def
R38762:38782 compcert.backend.CSEproof <> add_store_result_hold thm
R38762:38782 compcert.backend.CSEproof <> add_store_result_hold thm
R38802:38829 compcert.backend.CSEproof <> kill_loads_after_store_holds thm
R38802:38829 compcert.backend.CSEproof <> kill_loads_after_store_holds thm
R38864:38887 compcert.backend.CSEproof <> find_function_translated thm
R38959:38968 compcert.backend.RTL <> exec_Icall constr
R38959:38968 compcert.backend.RTL <> exec_Icall constr
R38986:38998 compcert.backend.CSEproof <> sig_preserved thm
R38986:38998 compcert.backend.CSEproof <> sig_preserved thm
R39072:39089 compcert.backend.CSEproof <> analysis_correct_1 thm
R39072:39089 compcert.backend.CSEproof <> analysis_correct_1 thm
R39122:39129 compcert.backend.CSE <> transfer def
R39163:39168 compcert.common.Values <> Vundef constr
R39178:39198 compcert.backend.CSEdomain <> empty_numbering_holds thm
R39163:39168 compcert.common.Values <> Vundef constr
R39178:39198 compcert.backend.CSEdomain <> empty_numbering_holds thm
R39209:39225 compcert.backend.CSEproof <> regs_lessdef_regs thm
R39209:39225 compcert.backend.CSEproof <> regs_lessdef_regs thm
R39263:39286 compcert.backend.CSEproof <> find_function_translated thm
R39336:39360 compcert.common.Memory Mem free_parallel_extends thm
R39422:39435 compcert.backend.RTL <> exec_Itailcall constr
R39422:39435 compcert.backend.RTL <> exec_Itailcall constr
R39453:39465 compcert.backend.CSEproof <> sig_preserved thm
R39453:39465 compcert.backend.CSEproof <> sig_preserved thm
R39506:39522 compcert.backend.CSEproof <> regs_lessdef_regs thm
R39506:39522 compcert.backend.CSEproof <> regs_lessdef_regs thm
R39559:39583 compcert.common.Events <> external_call_mem_extends def
R39616:39617 compcert.backend.Registers <> ::x_'##'_x not
R39631:39647 compcert.backend.CSEproof <> regs_lessdef_regs thm
R39631:39647 compcert.backend.CSEproof <> regs_lessdef_regs thm
R39725:39737 compcert.backend.RTL <> exec_Ibuiltin constr
R39725:39737 compcert.backend.RTL <> exec_Ibuiltin constr
R39757:39787 compcert.common.Events <> external_call_symbols_preserved thm
R39757:39787 compcert.common.Events <> external_call_symbols_preserved thm
R39805:39821 compcert.backend.CSEproof <> symbols_preserved thm
R39805:39821 compcert.backend.CSEproof <> symbols_preserved thm
R39830:39846 compcert.backend.CSEproof <> varinfo_preserved thm
R39830:39846 compcert.backend.CSEproof <> varinfo_preserved thm
R39881:39898 compcert.backend.CSEproof <> analysis_correct_1 thm
R39881:39898 compcert.backend.CSEproof <> analysis_correct_1 thm
R39930:39937 compcert.backend.CSE <> transfer def
R39997:40003 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40008:40009 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40010:40024 compcert.backend.CSEdomain <> numbering_holds rec
R40054:40068 compcert.backend.CSEdomain <> empty_numbering def
R40040:40040 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40044:40047 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40031:40032 compcert.backend.CSEproof <> PRESERVATION.ge var
R40026:40029 compcert.backend.CSEproof <> valu var
R39997:40003 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40008:40009 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40010:40024 compcert.backend.CSEdomain <> numbering_holds rec
R40054:40068 compcert.backend.CSEdomain <> empty_numbering def
R40040:40040 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40044:40047 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40031:40032 compcert.backend.CSEproof <> PRESERVATION.ge var
R40026:40029 compcert.backend.CSEproof <> valu var
R40095:40115 compcert.backend.CSEdomain <> empty_numbering_holds thm
R40095:40115 compcert.backend.CSEdomain <> empty_numbering_holds thm
R40147:40153 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40158:40159 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40160:40174 compcert.backend.CSEdomain <> numbering_holds rec
R40205:40215 compcert.backend.CSE <> set_unknown def
R40223:40223 compcert.backend.Registers <> ::x_'#'_x not
R40190:40190 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40194:40197 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40181:40182 compcert.backend.CSEproof <> PRESERVATION.ge var
R40176:40179 compcert.backend.CSEproof <> valu var
R40139:40141 Coq.Init.Logic <> :type_scope:x_'='_x not
R40147:40153 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40158:40159 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40160:40174 compcert.backend.CSEdomain <> numbering_holds rec
R40205:40215 compcert.backend.CSE <> set_unknown def
R40223:40223 compcert.backend.Registers <> ::x_'#'_x not
R40190:40190 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40194:40197 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40181:40182 compcert.backend.CSEproof <> PRESERVATION.ge var
R40176:40179 compcert.backend.CSEproof <> valu var
R40139:40141 Coq.Init.Logic <> :type_scope:x_'='_x not
R40277:40293 compcert.backend.CSEproof <> set_unknown_holds thm
R40277:40293 compcert.backend.CSEproof <> set_unknown_holds thm
R40321:40327 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40332:40333 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40334:40348 compcert.backend.CSEdomain <> numbering_holds rec
R40404:40414 compcert.backend.CSE <> set_unknown def
R40417:40430 compcert.backend.CSE <> kill_all_loads def
R40438:40438 compcert.backend.Registers <> ::x_'#'_x not
R40364:40364 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40368:40371 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40355:40356 compcert.backend.CSEproof <> PRESERVATION.ge var
R40350:40353 compcert.backend.CSEproof <> valu var
R40321:40327 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40332:40333 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40334:40348 compcert.backend.CSEdomain <> numbering_holds rec
R40404:40414 compcert.backend.CSE <> set_unknown def
R40417:40430 compcert.backend.CSE <> kill_all_loads def
R40438:40438 compcert.backend.Registers <> ::x_'#'_x not
R40364:40364 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40368:40371 compcert.backend.Registers <> ::x_'#'_x_'<-'_x not
R40355:40356 compcert.backend.CSEproof <> PRESERVATION.ge var
R40350:40353 compcert.backend.CSEproof <> valu var
R40473:40489 compcert.backend.CSEproof <> set_unknown_holds thm
R40473:40489 compcert.backend.CSEproof <> set_unknown_holds thm
R40499:40517 compcert.backend.CSEproof <> kill_all_loads_hold thm
R40499:40517 compcert.backend.CSEproof <> kill_all_loads_hold thm
R40882:40898 compcert.backend.CSEproof <> set_unknown_holds thm
R40882:40898 compcert.backend.CSEproof <> set_unknown_holds thm
R40924:40939 compcert.backend.CSEproof <> add_memcpy_holds thm
R40924:40939 compcert.backend.CSEproof <> add_memcpy_holds thm
R40961:40993 compcert.backend.CSEproof <> kill_loads_after_storebytes_holds thm
R40961:40993 compcert.backend.CSEproof <> kill_loads_after_storebytes_holds thm
R41015:41034 compcert.common.Memory Mem loadbytes_length thm
R41015:41034 compcert.common.Memory Mem loadbytes_length thm
R41062:41069 compcert.lib.Coqlib <> Ple_refl thm
R41062:41069 compcert.lib.Coqlib <> Ple_refl thm
R41160:41174 compcert.backend.CSEproof <> set_reg_lessdef thm
R41160:41174 compcert.backend.CSEproof <> set_reg_lessdef thm
R41210:41220 compcert.backend.CSE <> valnum_regs def
R41228:41229 compcert.lib.Maps <> ::x_'!!'_x not
R41210:41220 compcert.backend.CSE <> valnum_regs def
R41228:41229 compcert.lib.Maps <> ::x_'!!'_x not
R41297:41313 compcert.backend.CSEproof <> valnum_regs_holds thm
R41375:41380 compcert.backend.CSE <> reduce def
R41392:41403 compcert.ia32.CombineOp <> combine_cond def
R41382:41390 compcert.ia32.Op <> condition ind
R41375:41380 compcert.backend.CSE <> reduce def
R41392:41403 compcert.ia32.CombineOp <> combine_cond def
R41382:41390 compcert.ia32.Op <> condition ind
R41493:41495 Coq.Init.Logic <> :type_scope:x_'='_x not
R41461:41474 compcert.ia32.Op <> eval_condition def
R41484:41485 compcert.backend.Registers <> ::x_'##'_x not
R41496:41499 Coq.Init.Datatypes <> Some constr
R41493:41495 Coq.Init.Logic <> :type_scope:x_'='_x not
R41461:41474 compcert.ia32.Op <> eval_condition def
R41484:41485 compcert.backend.Registers <> ::x_'##'_x not
R41496:41499 Coq.Init.Datatypes <> Some constr
R41557:41570 compcert.ia32.Op <> eval_condition def
R41577:41578 compcert.backend.CSEproof <> vl var
R41572:41575 compcert.backend.CSEproof <> cond var
R41516:41527 compcert.backend.CSEproof <> reduce_sound thm
R41557:41570 compcert.ia32.Op <> eval_condition def
R41577:41578 compcert.backend.CSEproof <> vl var
R41572:41575 compcert.backend.CSEproof <> cond var
R41516:41527 compcert.backend.CSEproof <> reduce_sound thm
R41611:41628 compcert.ia32.CombineOpproof <> combine_cond_sound thm
R41611:41628 compcert.ia32.CombineOpproof <> combine_cond_sound thm
R41672:41681 compcert.backend.RTL <> exec_Icond constr
R41672:41681 compcert.backend.RTL <> exec_Icond constr
R41701:41722 compcert.ia32.Op <> eval_condition_lessdef thm
R41701:41722 compcert.ia32.Op <> eval_condition_lessdef thm
R41738:41754 compcert.backend.CSEproof <> regs_lessdef_regs thm
R41738:41754 compcert.backend.CSEproof <> regs_lessdef_regs thm
R41807:41824 compcert.backend.CSEproof <> analysis_correct_1 thm
R41856:41863 compcert.backend.CSE <> transfer def
R41807:41824 compcert.backend.CSEproof <> analysis_correct_1 thm
R41807:41824 compcert.backend.CSEproof <> analysis_correct_1 thm
R41989:42003 compcert.backend.RTL <> exec_Ijumptable constr
R41989:42003 compcert.backend.RTL <> exec_Ijumptable constr
R42046:42063 compcert.backend.CSEproof <> analysis_correct_1 thm
R42046:42063 compcert.backend.CSEproof <> analysis_correct_1 thm
R42087:42099 compcert.lib.Coqlib <> list_nth_z_in thm
R42087:42099 compcert.lib.Coqlib <> list_nth_z_in thm
R42118:42125 compcert.backend.CSE <> transfer def
R42172:42196 compcert.common.Memory Mem free_parallel_extends thm
R42258:42269 compcert.backend.RTL <> exec_Ireturn constr
R42258:42269 compcert.backend.RTL <> exec_Ireturn constr
R42380:42394 compcert.backend.CSE <> transf_function def
R42416:42422 compcert.backend.CSE <> analyze def
R42427:42434 compcert.backend.CSE <> vanalyze def
R42436:42437 compcert.backend.CSEproof <> PRESERVATION.rm var
R42416:42422 compcert.backend.CSE <> analyze def
R42427:42434 compcert.backend.CSE <> vanalyze def
R42436:42437 compcert.backend.CSEproof <> PRESERVATION.rm var
R42482:42498 compcert.common.Memory Mem alloc_extends thm
R42514:42521 Coq.ZArith.Zorder <> Zle_refl syndef
R42514:42521 Coq.ZArith.Zorder <> Zle_refl syndef
R42530:42537 Coq.ZArith.Zorder <> Zle_refl syndef
R42530:42537 Coq.ZArith.Zorder <> Zle_refl syndef
R42597:42618 compcert.backend.RTL <> exec_function_internal constr
R42597:42618 compcert.backend.RTL <> exec_function_internal constr
R42675:42696 compcert.backend.CSEproof <> analysis_correct_entry thm
R42675:42696 compcert.backend.CSEproof <> analysis_correct_entry thm
R42714:42730 compcert.backend.CSEproof <> init_regs_lessdef thm
R42714:42730 compcert.backend.CSEproof <> init_regs_lessdef thm
R42792:42816 compcert.common.Events <> external_call_mem_extends def
R42895:42916 compcert.backend.RTL <> exec_function_external constr
R42895:42916 compcert.backend.RTL <> exec_function_external constr
R42935:42965 compcert.common.Events <> external_call_symbols_preserved thm
R42935:42965 compcert.common.Events <> external_call_symbols_preserved thm
R42983:42999 compcert.backend.CSEproof <> symbols_preserved thm
R42983:42999 compcert.backend.CSEproof <> symbols_preserved thm
R43008:43024 compcert.backend.CSEproof <> varinfo_preserved thm
R43008:43024 compcert.backend.CSEproof <> varinfo_preserved thm
R43108:43118 compcert.backend.RTL <> exec_return constr
R43108:43118 compcert.backend.RTL <> exec_return constr
R43159:43173 compcert.backend.CSEproof <> set_reg_lessdef thm
R43159:43173 compcert.backend.CSEproof <> set_reg_lessdef thm
prf 43194:43214 <> transf_initial_states
R43259:43265 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43269:43270 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43294:43297 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R43271:43283 compcert.backend.RTL <> initial_state ind
R43291:43293 compcert.backend.CSEproof <> st2 var
R43285:43289 compcert.backend.CSEproof <> PRESERVATION.tprog var
R43298:43309 compcert.backend.CSEproof <> match_states ind
R43315:43317 compcert.backend.CSEproof <> st2 var
R43311:43313 compcert.backend.CSEproof <> st1 var
R43231:43243 compcert.backend.RTL <> initial_state ind
R43250:43252 compcert.backend.CSEproof <> st1 var
R43245:43248 compcert.backend.CSEproof <> PRESERVATION.prog var
R43361:43380 compcert.backend.CSEproof <> funct_ptr_translated thm
R43419:43427 compcert.backend.RTL <> Callstate constr
R43436:43438 Coq.Init.Datatypes <> nil constr
R43429:43431 Coq.Init.Datatypes <> nil constr
R43419:43427 compcert.backend.RTL <> Callstate constr
R43436:43438 Coq.Init.Datatypes <> nil constr
R43429:43431 Coq.Init.Datatypes <> nil constr
R43484:43511 compcert.common.Globalenvs Genv init_mem_transf_partial thm
R43484:43511 compcert.common.Globalenvs Genv init_mem_transf_partial thm
R43532:43540 compcert.common.AST <> prog_main proj
R43542:43546 compcert.backend.CSEproof <> PRESERVATION.tprog var
R43555:43563 compcert.common.AST <> prog_main proj
R43565:43568 compcert.backend.CSEproof <> PRESERVATION.prog var
R43555:43563 compcert.common.AST <> prog_main proj
R43565:43568 compcert.backend.CSEproof <> PRESERVATION.prog var
R43532:43540 compcert.common.AST <> prog_main proj
R43542:43546 compcert.backend.CSEproof <> PRESERVATION.tprog var
R43582:43598 compcert.backend.CSEproof <> symbols_preserved thm
R43582:43598 compcert.backend.CSEproof <> symbols_preserved thm
R43627:43656 compcert.common.AST <> transform_partial_program_main thm
R43627:43656 compcert.common.AST <> transform_partial_program_main thm
R43689:43701 compcert.backend.CSEproof <> sig_preserved thm
R43689:43701 compcert.backend.CSEproof <> sig_preserved thm
R43756:43771 compcert.common.Memory Mem extends_refl thm
R43756:43771 compcert.common.Memory Mem extends_refl thm
prf 43786:43804 <> transf_final_states
R43875:43885 compcert.backend.RTL <> final_state ind
R43891:43891 compcert.backend.CSEproof <> r var
R43887:43889 compcert.backend.CSEproof <> st2 var
R43854:43864 compcert.backend.RTL <> final_state ind
R43870:43870 compcert.backend.CSEproof <> r var
R43866:43868 compcert.backend.CSEproof <> st1 var
R43830:43841 compcert.backend.CSEproof <> match_states ind
R43847:43849 compcert.backend.CSEproof <> st2 var
R43843:43845 compcert.backend.CSEproof <> st1 var
prf 43970:43991 <> transf_program_correct
R43996:44013 compcert.common.Smallstep <> forward_simulation rec
R44037:44049 compcert.backend.RTL <> semantics def
R44051:44055 compcert.backend.CSEproof <> PRESERVATION.tprog var
R44016:44028 compcert.backend.RTL <> semantics def
R44030:44033 compcert.backend.CSEproof <> PRESERVATION.prog var
R44157:44160 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44138:44148 compcert.backend.ValueAnalysis <> sound_state ind
R44155:44156 compcert.backend.CSEproof <> s1 var
R44150:44153 compcert.backend.CSEproof <> PRESERVATION.prog var
R44161:44172 compcert.backend.CSEproof <> match_states ind
R44177:44178 compcert.backend.CSEproof <> s2 var
R44174:44175 compcert.backend.CSEproof <> s1 var
R44075:44097 compcert.common.Smallstep <> forward_simulation_step thm
R44157:44160 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44138:44148 compcert.backend.ValueAnalysis <> sound_state ind
R44155:44156 compcert.backend.CSEproof <> s1 var
R44150:44153 compcert.backend.CSEproof <> PRESERVATION.prog var
R44161:44172 compcert.backend.CSEproof <> match_states ind
R44177:44178 compcert.backend.CSEproof <> s2 var
R44174:44175 compcert.backend.CSEproof <> s1 var
R44075:44097 compcert.common.Smallstep <> forward_simulation_step thm
R44191:44207 compcert.backend.CSEproof <> symbols_preserved thm
R44191:44207 compcert.backend.CSEproof <> symbols_preserved thm
R44228:44248 compcert.backend.CSEproof <> transf_initial_states thm
R44317:44329 compcert.backend.ValueAnalysis <> sound_initial thm
R44317:44329 compcert.backend.ValueAnalysis <> sound_initial thm
R44373:44391 compcert.backend.CSEproof <> transf_final_states thm
R44373:44391 compcert.backend.CSEproof <> transf_final_states thm
R44432:44450 compcert.backend.CSEproof <> transf_step_correct thm
R44522:44531 compcert.backend.ValueAnalysis <> sound_step thm
R44522:44531 compcert.backend.ValueAnalysis <> sound_step thm
R44557:44568 compcert.backend.CSEproof PRESERVATION <> sec
