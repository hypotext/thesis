DIGEST NO
Fcompcert.backend.Linear
R1106:1111 compcert.lib.Coqlib <> <> lib
R1129:1131 compcert.common.AST <> <> lib
R1149:1156 compcert.lib.Integers <> <> lib
R1174:1179 compcert.common.Values <> <> lib
R1197:1202 compcert.common.Memory <> <> lib
R1220:1225 compcert.common.Events <> <> lib
R1243:1252 compcert.common.Globalenvs <> <> lib
R1270:1278 compcert.common.Smallstep <> <> lib
R1296:1297 compcert.ia32.Op <> <> lib
R1315:1323 compcert.backend.Locations <> <> lib
R1341:1343 compcert.backend.LTL <> <> lib
R1361:1371 compcert.backend.Conventions <> <> lib
def 1412:1416 <> label
R1421:1428 Coq.Numbers.BinNums <> positive ind
ind 1442:1452 <> instruction
constr 1467:1475 <> Lgetstack
constr 1522:1530 <> Lsetstack
constr 1577:1579 <> Lop
constr 1632:1636 <> Lload
constr 1706:1711 <> Lstore
constr 1781:1785 <> Lcall
constr 1833:1841 <> Ltailcall
constr 1889:1896 <> Lbuiltin
constr 1962:1967 <> Lannot
constr 2019:2024 <> Llabel
constr 2052:2056 <> Lgoto
constr 2084:2088 <> Lcond
constr 2142:2151 <> Ljumptable
constr 2192:2198 <> Lreturn
R1506:1516 compcert.backend.Linear <> instruction ind
R1498:1501 compcert.ia32.Machregs <> mreg ind
R1491:1493 compcert.common.AST <> typ ind
R1486:1486 Coq.Numbers.BinNums <> Z ind
R1478:1481 compcert.backend.Locations <> slot ind
R1561:1571 compcert.backend.Linear <> instruction ind
R1554:1556 compcert.common.AST <> typ ind
R1549:1549 Coq.Numbers.BinNums <> Z ind
R1541:1544 compcert.backend.Locations <> slot ind
R1533:1536 compcert.ia32.Machregs <> mreg ind
R1616:1626 compcert.backend.Linear <> instruction ind
R1608:1611 compcert.ia32.Machregs <> mreg ind
R1595:1598 Coq.Init.Datatypes <> list ind
R1600:1603 compcert.ia32.Machregs <> mreg ind
R1582:1590 compcert.ia32.Op <> operation ind
R1690:1700 compcert.backend.Linear <> instruction ind
R1682:1685 compcert.ia32.Machregs <> mreg ind
R1669:1672 Coq.Init.Datatypes <> list ind
R1674:1677 compcert.ia32.Machregs <> mreg ind
R1655:1664 compcert.ia32.Op <> addressing ind
R1639:1650 compcert.common.AST <> memory_chunk ind
R1765:1775 compcert.backend.Linear <> instruction ind
R1757:1760 compcert.ia32.Machregs <> mreg ind
R1744:1747 Coq.Init.Datatypes <> list ind
R1749:1752 compcert.ia32.Machregs <> mreg ind
R1730:1739 compcert.ia32.Op <> addressing ind
R1714:1725 compcert.common.AST <> memory_chunk ind
R1817:1827 compcert.backend.Linear <> instruction ind
R1805:1807 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R1801:1804 compcert.ia32.Machregs <> mreg ind
R1808:1812 compcert.common.AST <> ident def
R1788:1796 compcert.common.AST <> signature rec
R1873:1883 compcert.backend.Linear <> instruction ind
R1861:1863 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R1857:1860 compcert.ia32.Machregs <> mreg ind
R1864:1868 compcert.common.AST <> ident def
R1844:1852 compcert.common.AST <> signature rec
R1946:1956 compcert.backend.Linear <> instruction ind
R1933:1936 Coq.Init.Datatypes <> list ind
R1938:1941 compcert.ia32.Machregs <> mreg ind
R1920:1923 Coq.Init.Datatypes <> list ind
R1925:1928 compcert.ia32.Machregs <> mreg ind
R1899:1915 compcert.common.AST <> external_function ind
R2003:2013 compcert.backend.Linear <> instruction ind
R1991:1994 Coq.Init.Datatypes <> list ind
R1996:1998 compcert.backend.Locations <> loc ind
R1970:1986 compcert.common.AST <> external_function ind
R2036:2046 compcert.backend.Linear <> instruction ind
R2027:2031 compcert.backend.Linear <> label def
R2068:2078 compcert.backend.Linear <> instruction ind
R2059:2063 compcert.backend.Linear <> label def
R2126:2136 compcert.backend.Linear <> instruction ind
R2117:2121 compcert.backend.Linear <> label def
R2104:2107 Coq.Init.Datatypes <> list ind
R2109:2112 compcert.ia32.Machregs <> mreg ind
R2091:2099 compcert.ia32.Op <> condition ind
R2176:2186 compcert.backend.Linear <> instruction ind
R2162:2165 Coq.Init.Datatypes <> list ind
R2167:2171 compcert.backend.Linear <> label def
R2154:2157 compcert.ia32.Machregs <> mreg ind
R2201:2211 compcert.backend.Linear <> instruction ind
def 2226:2229 <> code
R2240:2243 Coq.Init.Datatypes <> list ind
R2245:2255 compcert.backend.Linear <> instruction ind
constr 2284:2293 <> mkfunction
rec 2266:2273 <> function
proj 2299:2304 <> fn_sig
proj 2320:2331 <> fn_stacksize
proj 2339:2345 <> fn_code
R2307:2315 compcert.common.AST <> signature rec
R2334:2334 Coq.Numbers.BinNums <> Z ind
R2348:2351 compcert.backend.Linear <> code def
def 2368:2373 <> fundef
R2378:2387 compcert.common.AST <> fundef ind
R2389:2396 compcert.backend.Linear <> function rec
def 2411:2417 <> program
R2422:2432 compcert.common.AST <> program rec
R2441:2444 Coq.Init.Datatypes <> unit ind
R2434:2439 compcert.backend.Linear <> fundef def
def 2459:2464 <> funsig
R2471:2476 compcert.backend.Linear <> fundef def
R2490:2491 compcert.backend.Linear <> fd var
R2502:2509 compcert.common.AST <> Internal constr
R2516:2521 compcert.backend.Linear <> fn_sig proj
R2529:2536 compcert.common.AST <> External constr
R2544:2549 compcert.common.AST <> ef_sig def
def 2573:2576 <> genv
R2581:2586 compcert.common.Globalenvs Genv t rec
R2595:2598 Coq.Init.Datatypes <> unit ind
R2588:2593 compcert.backend.Linear <> fundef def
def 2612:2617 <> locset
R2622:2629 compcert.backend.Locations Locmap t def
def 2728:2735 <> is_label
R2743:2747 compcert.backend.Linear <> label def
R2758:2768 compcert.backend.Linear <> instruction ind
R2773:2776 Coq.Init.Datatypes <> bool ind
R2789:2793 compcert.backend.Linear <> instr var
R2804:2809 compcert.backend.Linear <> Llabel constr
R2822:2824 compcert.lib.Coqlib <> peq def
R2826:2828 compcert.backend.Linear <> lbl var
R2850:2854 Coq.Init.Datatypes <> false constr
R2840:2843 Coq.Init.Datatypes <> true constr
R2865:2869 Coq.Init.Datatypes <> false constr
prf 2885:2900 <> is_label_correct
R2928:2935 compcert.backend.Linear <> is_label def
R2941:2945 compcert.backend.Linear <> instr var
R2937:2939 compcert.backend.Linear <> lbl var
R2981:2984 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2976:2980 compcert.backend.Linear <> instr var
R2985:2990 compcert.backend.Linear <> Llabel constr
R2992:2994 compcert.backend.Linear <> lbl var
R2957:2959 Coq.Init.Logic <> :type_scope:x_'='_x not
R2952:2956 compcert.backend.Linear <> instr var
R2960:2965 compcert.backend.Linear <> Llabel constr
R2967:2969 compcert.backend.Linear <> lbl var
R3064:3066 compcert.lib.Coqlib <> peq def
R3064:3066 compcert.lib.Coqlib <> peq def
def 3390:3399 <> find_label
R3407:3411 compcert.backend.Linear <> label def
R3418:3421 compcert.backend.Linear <> code def
R3437:3442 Coq.Init.Datatypes <> option ind
R3444:3447 compcert.backend.Linear <> code def
R3460:3460 compcert.backend.Linear <> c var
R3471:3473 Coq.Init.Datatypes <> nil constr
R3478:3481 Coq.Init.Datatypes <> None constr
R3489:3492 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3502:3509 compcert.backend.Linear <> is_label def
R3511:3513 compcert.backend.Linear <> lbl var
R3536:3545 compcert.backend.Linear <> find_label def
R3547:3549 compcert.backend.Linear <> lbl var
R3523:3526 Coq.Init.Datatypes <> Some constr
sec 3570:3575 <> RELSEM
var 3588:3589 RELSEM ge
R3592:3595 compcert.backend.Linear <> genv def
def 3610:3622 <> find_function
R3634:3636 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R3630:3633 compcert.ia32.Machregs <> mreg ind
R3637:3641 compcert.common.AST <> ident def
R3649:3654 compcert.backend.Linear <> locset def
R3659:3664 Coq.Init.Datatypes <> option ind
R3666:3671 compcert.backend.Linear <> fundef def
R3684:3686 compcert.backend.Linear <> ros var
R3697:3699 Coq.Init.Datatypes <> inl constr
R3706:3720 compcert.common.Globalenvs Genv find_funct def
R3726:3727 compcert.backend.Linear <> rs var
R3730:3730 compcert.backend.Locations <> R constr
R3722:3723 compcert.backend.Linear <> RELSEM.ge var
R3740:3742 Coq.Init.Datatypes <> inr constr
R3764:3779 compcert.common.Globalenvs Genv find_symbol def
R3781:3782 compcert.backend.Linear <> RELSEM.ge var
R3802:3805 Coq.Init.Datatypes <> None constr
R3810:3813 Coq.Init.Datatypes <> None constr
R3823:3826 Coq.Init.Datatypes <> Some constr
R3833:3851 compcert.common.Globalenvs Genv find_funct_ptr def
R3853:3854 compcert.backend.Linear <> RELSEM.ge var
ind 3919:3928 <> stackframe
constr 3943:3952 <> Stackframe
R3972:3979 compcert.backend.Linear <> function rec
R4033:4035 compcert.common.Values <> val ind
R4110:4115 compcert.backend.Linear <> locset def
R4187:4190 compcert.backend.Linear <> code def
R4253:4262 compcert.backend.Linear <> stackframe ind
ind 4276:4280 <> state
constr 4295:4299 <> State
constr 4698:4706 <> Callstate
constr 4982:4992 <> Returnstate
R4323:4326 Coq.Init.Datatypes <> list ind
R4328:4337 compcert.backend.Linear <> stackframe ind
R4376:4383 compcert.backend.Linear <> function rec
R4452:4454 compcert.common.Values <> val ind
R4511:4514 compcert.backend.Linear <> code def
R4580:4585 compcert.backend.Linear <> locset def
R4640:4642 compcert.common.Memory <> mem syndef
R4688:4692 compcert.backend.Linear <> state ind
R4730:4733 Coq.Init.Datatypes <> list ind
R4735:4744 compcert.backend.Linear <> stackframe ind
R4783:4788 compcert.backend.Linear <> fundef def
R4847:4852 compcert.backend.Linear <> locset def
R4924:4926 compcert.common.Memory <> mem syndef
R4972:4976 compcert.backend.Linear <> state ind
R5016:5019 Coq.Init.Datatypes <> list ind
R5021:5030 compcert.backend.Linear <> stackframe ind
R5070:5075 compcert.backend.Linear <> locset def
R5149:5151 compcert.common.Memory <> mem syndef
R5197:5201 compcert.backend.Linear <> state ind
def 5312:5324 <> parent_locset
R5334:5337 Coq.Init.Datatypes <> list ind
R5339:5348 compcert.backend.Linear <> stackframe ind
R5353:5358 compcert.backend.Linear <> locset def
R5371:5375 compcert.backend.Linear <> stack var
R5386:5388 Coq.Init.Datatypes <> nil constr
R5393:5403 compcert.backend.Locations Locmap init def
R5405:5410 compcert.common.Values <> Vundef constr
R5436:5439 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5416:5425 compcert.backend.Linear <> Stackframe constr
ind 5471:5474 <> step
constr 5516:5529 <> exec_Lgetstack
constr 5774:5787 <> exec_Lsetstack
constr 6032:6039 <> exec_Lop
constr 6315:6324 <> exec_Lload
constr 6669:6679 <> exec_Lstore
constr 7020:7029 <> exec_Lcall
constr 7250:7263 <> exec_Ltailcall
constr 7592:7604 <> exec_Lbuiltin
constr 7902:7912 <> exec_Lannot
constr 8102:8112 <> exec_Llabel
constr 8233:8242 <> exec_Lgoto
constr 8412:8426 <> exec_Lcond_true
constr 8736:8751 <> exec_Lcond_false
constr 9012:9026 <> exec_Ljumptable
constr 9355:9366 <> exec_Lreturn
constr 9586:9607 <> exec_function_internal
constr 9874:9895 <> exec_function_external
constr 10193:10203 <> exec_return
R5495:5499 compcert.backend.Linear <> state ind
R5486:5490 compcert.common.Events <> trace def
R5477:5481 compcert.backend.Linear <> state ind
R5680:5683 compcert.backend.Linear <> step ind
R5748:5752 compcert.backend.Linear <> State constr
R5767:5767 compcert.backend.Linear <> m var
R5763:5765 compcert.backend.Linear <> rs' var
R5761:5761 compcert.backend.Linear <> b var
R5758:5759 compcert.backend.Linear <> sp var
R5756:5756 compcert.backend.Linear <> f var
R5754:5754 compcert.backend.Linear <> s var
R5744:5745 compcert.common.Events <> E0 def
R5686:5690 compcert.backend.Linear <> State constr
R5733:5733 compcert.backend.Linear <> m var
R5730:5731 compcert.backend.Linear <> rs var
R5723:5726 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5700:5708 compcert.backend.Linear <> Lgetstack constr
R5720:5722 compcert.backend.Linear <> dst var
R5717:5718 compcert.backend.Linear <> ty var
R5713:5715 compcert.backend.Linear <> ofs var
R5710:5711 compcert.backend.Linear <> sl var
R5727:5727 compcert.backend.Linear <> b var
R5696:5697 compcert.backend.Linear <> sp var
R5694:5694 compcert.backend.Linear <> f var
R5692:5692 compcert.backend.Linear <> s var
R5587:5589 Coq.Init.Logic <> :type_scope:x_'='_x not
R5584:5586 compcert.backend.Linear <> rs' var
R5590:5599 compcert.backend.Locations Locmap set def
R5629:5638 compcert.backend.LTL <> undef_regs def
R5667:5668 compcert.backend.Linear <> rs var
R5641:5661 compcert.backend.LTL <> destroyed_by_getstack def
R5663:5664 compcert.backend.Linear <> sl var
R5610:5611 compcert.backend.Linear <> rs var
R5614:5614 compcert.backend.Locations <> S constr
R5623:5624 compcert.backend.Linear <> ty var
R5619:5621 compcert.backend.Linear <> ofs var
R5616:5617 compcert.backend.Linear <> sl var
R5602:5602 compcert.backend.Locations <> R constr
R5604:5606 compcert.backend.Linear <> dst var
R5938:5941 compcert.backend.Linear <> step ind
R6006:6010 compcert.backend.Linear <> State constr
R6025:6025 compcert.backend.Linear <> m var
R6021:6023 compcert.backend.Linear <> rs' var
R6019:6019 compcert.backend.Linear <> b var
R6016:6017 compcert.backend.Linear <> sp var
R6014:6014 compcert.backend.Linear <> f var
R6012:6012 compcert.backend.Linear <> s var
R6002:6003 compcert.common.Events <> E0 def
R5944:5948 compcert.backend.Linear <> State constr
R5991:5991 compcert.backend.Linear <> m var
R5988:5989 compcert.backend.Linear <> rs var
R5981:5984 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R5958:5966 compcert.backend.Linear <> Lsetstack constr
R5979:5980 compcert.backend.Linear <> ty var
R5975:5977 compcert.backend.Linear <> ofs var
R5972:5973 compcert.backend.Linear <> sl var
R5968:5970 compcert.backend.Linear <> src var
R5985:5985 compcert.backend.Linear <> b var
R5954:5955 compcert.backend.Linear <> sp var
R5952:5952 compcert.backend.Linear <> f var
R5950:5950 compcert.backend.Linear <> s var
R5845:5847 Coq.Init.Logic <> :type_scope:x_'='_x not
R5842:5844 compcert.backend.Linear <> rs' var
R5848:5857 compcert.backend.Locations Locmap set def
R5887:5896 compcert.backend.LTL <> undef_regs def
R5925:5926 compcert.backend.Linear <> rs var
R5899:5919 compcert.ia32.Machregs <> destroyed_by_setstack def
R5921:5922 compcert.backend.Linear <> ty var
R5874:5875 compcert.backend.Linear <> rs var
R5878:5878 compcert.backend.Locations <> R constr
R5880:5882 compcert.backend.Linear <> src var
R5860:5860 compcert.backend.Locations <> S constr
R5869:5870 compcert.backend.Linear <> ty var
R5865:5867 compcert.backend.Linear <> ofs var
R5862:5863 compcert.backend.Linear <> sl var
R6229:6232 compcert.backend.Linear <> step ind
R6289:6293 compcert.backend.Linear <> State constr
R6308:6308 compcert.backend.Linear <> m var
R6304:6306 compcert.backend.Linear <> rs' var
R6302:6302 compcert.backend.Linear <> b var
R6299:6300 compcert.backend.Linear <> sp var
R6297:6297 compcert.backend.Linear <> f var
R6295:6295 compcert.backend.Linear <> s var
R6285:6286 compcert.common.Events <> E0 def
R6235:6239 compcert.backend.Linear <> State constr
R6274:6274 compcert.backend.Linear <> m var
R6271:6272 compcert.backend.Linear <> rs var
R6264:6267 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6249:6251 compcert.backend.Linear <> Lop constr
R6261:6263 compcert.backend.Linear <> res var
R6256:6259 compcert.backend.Linear <> args var
R6253:6254 compcert.backend.Linear <> op var
R6268:6268 compcert.backend.Linear <> b var
R6245:6246 compcert.backend.Linear <> sp var
R6243:6243 compcert.backend.Linear <> f var
R6241:6241 compcert.backend.Linear <> s var
R6159:6161 Coq.Init.Logic <> :type_scope:x_'='_x not
R6156:6158 compcert.backend.Linear <> rs' var
R6162:6171 compcert.backend.Locations Locmap set def
R6184:6193 compcert.backend.LTL <> undef_regs def
R6216:6217 compcert.backend.Linear <> rs var
R6196:6210 compcert.ia32.Machregs <> destroyed_by_op def
R6212:6213 compcert.backend.Linear <> op var
R6181:6181 compcert.backend.Linear <> v var
R6174:6174 compcert.backend.Locations <> R constr
R6176:6178 compcert.backend.Linear <> res var
R6137:6139 Coq.Init.Logic <> :type_scope:x_'='_x not
R6094:6107 compcert.ia32.Op <> eval_operation def
R6136:6136 compcert.backend.Linear <> m var
R6119:6125 compcert.backend.LTL <> reglist def
R6130:6133 compcert.backend.Linear <> args var
R6127:6128 compcert.backend.Linear <> rs var
R6115:6116 compcert.backend.Linear <> op var
R6112:6113 compcert.backend.Linear <> sp var
R6109:6110 compcert.backend.Linear <> RELSEM.ge var
R6140:6143 Coq.Init.Datatypes <> Some constr
R6145:6145 compcert.backend.Linear <> v var
R6573:6576 compcert.backend.Linear <> step ind
R6643:6647 compcert.backend.Linear <> State constr
R6662:6662 compcert.backend.Linear <> m var
R6658:6660 compcert.backend.Linear <> rs' var
R6656:6656 compcert.backend.Linear <> b var
R6653:6654 compcert.backend.Linear <> sp var
R6651:6651 compcert.backend.Linear <> f var
R6649:6649 compcert.backend.Linear <> s var
R6639:6640 compcert.common.Events <> E0 def
R6579:6583 compcert.backend.Linear <> State constr
R6628:6628 compcert.backend.Linear <> m var
R6625:6626 compcert.backend.Linear <> rs var
R6618:6621 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6593:6597 compcert.backend.Linear <> Lload constr
R6615:6617 compcert.backend.Linear <> dst var
R6610:6613 compcert.backend.Linear <> args var
R6605:6608 compcert.backend.Linear <> addr var
R6599:6603 compcert.backend.Linear <> chunk var
R6622:6622 compcert.backend.Linear <> b var
R6589:6590 compcert.backend.Linear <> sp var
R6587:6587 compcert.backend.Linear <> f var
R6585:6585 compcert.backend.Linear <> s var
R6493:6495 Coq.Init.Logic <> :type_scope:x_'='_x not
R6490:6492 compcert.backend.Linear <> rs' var
R6496:6505 compcert.backend.Locations Locmap set def
R6518:6527 compcert.backend.LTL <> undef_regs def
R6560:6561 compcert.backend.Linear <> rs var
R6530:6546 compcert.ia32.Machregs <> destroyed_by_load def
R6554:6557 compcert.backend.Linear <> addr var
R6548:6552 compcert.backend.Linear <> chunk var
R6515:6515 compcert.backend.Linear <> v var
R6508:6508 compcert.backend.Locations <> R constr
R6510:6512 compcert.backend.Linear <> dst var
R6471:6473 Coq.Init.Logic <> :type_scope:x_'='_x not
R6452:6460 compcert.common.Memory Mem loadv def
R6470:6470 compcert.backend.Linear <> a var
R6468:6468 compcert.backend.Linear <> m var
R6462:6466 compcert.backend.Linear <> chunk var
R6474:6477 Coq.Init.Datatypes <> Some constr
R6479:6479 compcert.backend.Linear <> v var
R6433:6435 Coq.Init.Logic <> :type_scope:x_'='_x not
R6389:6403 compcert.ia32.Op <> eval_addressing def
R6417:6423 compcert.backend.LTL <> reglist def
R6428:6431 compcert.backend.Linear <> args var
R6425:6426 compcert.backend.Linear <> rs var
R6411:6414 compcert.backend.Linear <> addr var
R6408:6409 compcert.backend.Linear <> sp var
R6405:6406 compcert.backend.Linear <> RELSEM.ge var
R6436:6439 Coq.Init.Datatypes <> Some constr
R6441:6441 compcert.backend.Linear <> a var
R6922:6925 compcert.backend.Linear <> step ind
R6993:6997 compcert.backend.Linear <> State constr
R7012:7013 compcert.backend.Linear <> m' var
R7008:7010 compcert.backend.Linear <> rs' var
R7006:7006 compcert.backend.Linear <> b var
R7003:7004 compcert.backend.Linear <> sp var
R7001:7001 compcert.backend.Linear <> f var
R6999:6999 compcert.backend.Linear <> s var
R6989:6990 compcert.common.Events <> E0 def
R6928:6932 compcert.backend.Linear <> State constr
R6978:6978 compcert.backend.Linear <> m var
R6975:6976 compcert.backend.Linear <> rs var
R6968:6971 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6942:6947 compcert.backend.Linear <> Lstore constr
R6965:6967 compcert.backend.Linear <> src var
R6960:6963 compcert.backend.Linear <> args var
R6955:6958 compcert.backend.Linear <> addr var
R6949:6953 compcert.backend.Linear <> chunk var
R6972:6972 compcert.backend.Linear <> b var
R6938:6939 compcert.backend.Linear <> sp var
R6936:6936 compcert.backend.Linear <> f var
R6934:6934 compcert.backend.Linear <> s var
R6864:6866 Coq.Init.Logic <> :type_scope:x_'='_x not
R6861:6863 compcert.backend.Linear <> rs' var
R6867:6876 compcert.backend.LTL <> undef_regs def
R6910:6911 compcert.backend.Linear <> rs var
R6879:6896 compcert.ia32.Machregs <> destroyed_by_store def
R6904:6907 compcert.backend.Linear <> addr var
R6898:6902 compcert.backend.Linear <> chunk var
R6841:6843 Coq.Init.Logic <> :type_scope:x_'='_x not
R6808:6817 compcert.common.Memory Mem storev def
R6830:6831 compcert.backend.Linear <> rs var
R6834:6834 compcert.backend.Locations <> R constr
R6836:6838 compcert.backend.Linear <> src var
R6827:6827 compcert.backend.Linear <> a var
R6825:6825 compcert.backend.Linear <> m var
R6819:6823 compcert.backend.Linear <> chunk var
R6844:6847 Coq.Init.Datatypes <> Some constr
R6849:6850 compcert.backend.Linear <> m' var
R6789:6791 Coq.Init.Logic <> :type_scope:x_'='_x not
R6745:6759 compcert.ia32.Op <> eval_addressing def
R6773:6779 compcert.backend.LTL <> reglist def
R6784:6787 compcert.backend.Linear <> args var
R6781:6782 compcert.backend.Linear <> rs var
R6767:6770 compcert.backend.Linear <> addr var
R6764:6765 compcert.backend.Linear <> sp var
R6761:6762 compcert.backend.Linear <> RELSEM.ge var
R6792:6795 Coq.Init.Datatypes <> Some constr
R6797:6797 compcert.backend.Linear <> a var
R7142:7145 compcert.backend.Linear <> step ind
R7200:7208 compcert.backend.Linear <> Callstate constr
R7243:7243 compcert.backend.Linear <> m var
R7240:7241 compcert.backend.Linear <> rs var
R7237:7238 compcert.backend.Linear <> f' var
R7231:7233 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7211:7220 compcert.backend.Linear <> Stackframe constr
R7230:7230 compcert.backend.Linear <> b var
R7227:7228 compcert.backend.Linear <> rs var
R7224:7225 compcert.backend.Linear <> sp var
R7222:7222 compcert.backend.Linear <> f var
R7234:7234 compcert.backend.Linear <> s var
R7196:7197 compcert.common.Events <> E0 def
R7148:7152 compcert.backend.Linear <> State constr
R7185:7185 compcert.backend.Linear <> m var
R7182:7183 compcert.backend.Linear <> rs var
R7175:7178 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7162:7166 compcert.backend.Linear <> Lcall constr
R7172:7174 compcert.backend.Linear <> ros var
R7168:7170 compcert.backend.Linear <> sig var
R7179:7179 compcert.backend.Linear <> b var
R7158:7159 compcert.backend.Linear <> sp var
R7156:7156 compcert.backend.Linear <> f var
R7154:7154 compcert.backend.Linear <> s var
R7120:7122 Coq.Init.Logic <> :type_scope:x_'='_x not
R7117:7119 compcert.backend.Linear <> sig var
R7123:7128 compcert.backend.Linear <> funsig def
R7130:7131 compcert.backend.Linear <> f' var
R7097:7099 Coq.Init.Logic <> :type_scope:x_'='_x not
R7077:7089 compcert.backend.Linear <> find_function def
R7095:7096 compcert.backend.Linear <> rs var
R7091:7093 compcert.backend.Linear <> ros var
R7100:7103 Coq.Init.Datatypes <> Some constr
R7105:7106 compcert.backend.Linear <> f' var
R7486:7489 compcert.backend.Linear <> step ind
R7565:7573 compcert.backend.Linear <> Callstate constr
R7584:7585 compcert.backend.Linear <> m' var
R7580:7582 compcert.backend.Linear <> rs' var
R7577:7578 compcert.backend.Linear <> f' var
R7575:7575 compcert.backend.Linear <> s var
R7561:7562 compcert.common.Events <> E0 def
R7492:7496 compcert.backend.Linear <> State constr
R7550:7550 compcert.backend.Linear <> m var
R7547:7548 compcert.backend.Linear <> rs var
R7540:7543 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7523:7531 compcert.backend.Linear <> Ltailcall constr
R7537:7539 compcert.backend.Linear <> ros var
R7533:7535 compcert.backend.Linear <> sig var
R7544:7544 compcert.backend.Linear <> b var
R7503:7506 compcert.common.Values <> Vptr constr
R7512:7519 compcert.lib.Integers Int zero def
R7508:7510 compcert.backend.Linear <> stk var
R7500:7500 compcert.backend.Linear <> f var
R7498:7498 compcert.backend.Linear <> s var
R7466:7468 Coq.Init.Logic <> :type_scope:x_'='_x not
R7433:7440 compcert.common.Memory Mem free def
R7453:7464 compcert.backend.Linear <> fn_stacksize proj
R7450:7450 compcert.backend.Linear <> f var
R7444:7446 compcert.backend.Linear <> stk var
R7442:7442 compcert.backend.Linear <> m var
R7469:7472 Coq.Init.Datatypes <> Some constr
R7474:7475 compcert.backend.Linear <> m' var
R7411:7413 Coq.Init.Logic <> :type_scope:x_'='_x not
R7408:7410 compcert.backend.Linear <> sig var
R7414:7419 compcert.backend.Linear <> funsig def
R7421:7422 compcert.backend.Linear <> f' var
R7388:7390 Coq.Init.Logic <> :type_scope:x_'='_x not
R7367:7379 compcert.backend.Linear <> find_function def
R7385:7387 compcert.backend.Linear <> rs' var
R7381:7383 compcert.backend.Linear <> ros var
R7391:7394 Coq.Init.Datatypes <> Some constr
R7396:7397 compcert.backend.Linear <> f' var
R7322:7324 Coq.Init.Logic <> :type_scope:x_'='_x not
R7319:7321 compcert.backend.Linear <> rs' var
R7325:7335 compcert.backend.LTL <> return_regs def
R7355:7356 compcert.backend.Linear <> rs var
R7338:7350 compcert.backend.Linear <> parent_locset def
R7352:7352 compcert.backend.Linear <> s var
R7810:7813 compcert.backend.Linear <> step ind
R7875:7879 compcert.backend.Linear <> State constr
R7894:7895 compcert.backend.Linear <> m' var
R7890:7892 compcert.backend.Linear <> rs' var
R7888:7888 compcert.backend.Linear <> b var
R7885:7886 compcert.backend.Linear <> sp var
R7883:7883 compcert.backend.Linear <> f var
R7881:7881 compcert.backend.Linear <> s var
R7872:7872 compcert.backend.Linear <> t var
R7816:7820 compcert.backend.Linear <> State constr
R7860:7860 compcert.backend.Linear <> m var
R7857:7858 compcert.backend.Linear <> rs var
R7850:7853 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R7830:7837 compcert.backend.Linear <> Lbuiltin constr
R7847:7849 compcert.backend.Linear <> res var
R7842:7845 compcert.backend.Linear <> args var
R7839:7840 compcert.backend.Linear <> ef var
R7854:7854 compcert.backend.Linear <> b var
R7826:7827 compcert.backend.Linear <> sp var
R7824:7824 compcert.backend.Linear <> f var
R7822:7822 compcert.backend.Linear <> s var
R7726:7728 Coq.Init.Logic <> :type_scope:x_'='_x not
R7723:7725 compcert.backend.Linear <> rs' var
R7729:7742 compcert.backend.Locations Locmap setlist def
R7760:7769 compcert.backend.LTL <> undef_regs def
R7797:7798 compcert.backend.Linear <> rs var
R7772:7791 compcert.ia32.Machregs <> destroyed_by_builtin def
R7793:7794 compcert.backend.Linear <> ef var
R7756:7757 compcert.backend.Linear <> vl var
R7745:7747 Coq.Lists.List <> map def
R7751:7753 compcert.backend.Linear <> res var
R7749:7749 compcert.backend.Locations <> R constr
R7665:7678 compcert.common.Events <> external_call' ind
R7711:7712 compcert.backend.Linear <> m' var
R7708:7709 compcert.backend.Linear <> vl var
R7706:7706 compcert.backend.Linear <> t var
R7704:7704 compcert.backend.Linear <> m var
R7687:7693 compcert.backend.LTL <> reglist def
R7698:7701 compcert.backend.Linear <> args var
R7695:7696 compcert.backend.Linear <> rs var
R7683:7684 compcert.backend.Linear <> RELSEM.ge var
R7680:7681 compcert.backend.Linear <> ef var
R8017:8020 compcert.backend.Linear <> step ind
R8076:8080 compcert.backend.Linear <> State constr
R8094:8095 compcert.backend.Linear <> m' var
R8091:8092 compcert.backend.Linear <> rs var
R8089:8089 compcert.backend.Linear <> b var
R8086:8087 compcert.backend.Linear <> sp var
R8084:8084 compcert.backend.Linear <> f var
R8082:8082 compcert.backend.Linear <> s var
R8073:8073 compcert.backend.Linear <> t var
R8023:8027 compcert.backend.Linear <> State constr
R8061:8061 compcert.backend.Linear <> m var
R8058:8059 compcert.backend.Linear <> rs var
R8051:8054 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8037:8042 compcert.backend.Linear <> Lannot constr
R8047:8050 compcert.backend.Linear <> args var
R8044:8045 compcert.backend.Linear <> ef var
R8055:8055 compcert.backend.Linear <> b var
R8033:8034 compcert.backend.Linear <> sp var
R8031:8031 compcert.backend.Linear <> f var
R8029:8029 compcert.backend.Linear <> s var
R7964:7977 compcert.common.Events <> external_call' ind
R8005:8006 compcert.backend.Linear <> m' var
R8003:8003 compcert.backend.Linear <> v var
R8001:8001 compcert.backend.Linear <> t var
R7999:7999 compcert.backend.Linear <> m var
R7986:7988 Coq.Lists.List <> map def
R7993:7996 compcert.backend.Linear <> args var
R7990:7991 compcert.backend.Linear <> rs var
R7982:7983 compcert.backend.Linear <> RELSEM.ge var
R7979:7980 compcert.backend.Linear <> ef var
R8153:8156 compcert.backend.Linear <> step ind
R8208:8212 compcert.backend.Linear <> State constr
R8226:8226 compcert.backend.Linear <> m var
R8223:8224 compcert.backend.Linear <> rs var
R8221:8221 compcert.backend.Linear <> b var
R8218:8219 compcert.backend.Linear <> sp var
R8216:8216 compcert.backend.Linear <> f var
R8214:8214 compcert.backend.Linear <> s var
R8204:8205 compcert.common.Events <> E0 def
R8159:8163 compcert.backend.Linear <> State constr
R8193:8193 compcert.backend.Linear <> m var
R8190:8191 compcert.backend.Linear <> rs var
R8183:8186 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8173:8178 compcert.backend.Linear <> Llabel constr
R8180:8182 compcert.backend.Linear <> lbl var
R8187:8187 compcert.backend.Linear <> b var
R8169:8170 compcert.backend.Linear <> sp var
R8167:8167 compcert.backend.Linear <> f var
R8165:8165 compcert.backend.Linear <> s var
R8332:8335 compcert.backend.Linear <> step ind
R8386:8390 compcert.backend.Linear <> State constr
R8405:8405 compcert.backend.Linear <> m var
R8402:8403 compcert.backend.Linear <> rs var
R8399:8400 compcert.backend.Linear <> b' var
R8396:8397 compcert.backend.Linear <> sp var
R8394:8394 compcert.backend.Linear <> f var
R8392:8392 compcert.backend.Linear <> s var
R8382:8383 compcert.common.Events <> E0 def
R8338:8342 compcert.backend.Linear <> State constr
R8371:8371 compcert.backend.Linear <> m var
R8368:8369 compcert.backend.Linear <> rs var
R8361:8364 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8352:8356 compcert.backend.Linear <> Lgoto constr
R8358:8360 compcert.backend.Linear <> lbl var
R8365:8365 compcert.backend.Linear <> b var
R8348:8349 compcert.backend.Linear <> sp var
R8346:8346 compcert.backend.Linear <> f var
R8344:8344 compcert.backend.Linear <> s var
R8312:8314 Coq.Init.Logic <> :type_scope:x_'='_x not
R8286:8295 compcert.backend.Linear <> find_label def
R8304:8310 compcert.backend.Linear <> fn_code proj
R8301:8301 compcert.backend.Linear <> f var
R8297:8299 compcert.backend.Linear <> lbl var
R8315:8318 Coq.Init.Datatypes <> Some constr
R8320:8321 compcert.backend.Linear <> b' var
R8645:8648 compcert.backend.Linear <> step ind
R8709:8713 compcert.backend.Linear <> State constr
R8729:8729 compcert.backend.Linear <> m var
R8725:8727 compcert.backend.Linear <> rs' var
R8722:8723 compcert.backend.Linear <> b' var
R8719:8720 compcert.backend.Linear <> sp var
R8717:8717 compcert.backend.Linear <> f var
R8715:8715 compcert.backend.Linear <> s var
R8705:8706 compcert.common.Events <> E0 def
R8651:8655 compcert.backend.Linear <> State constr
R8694:8694 compcert.backend.Linear <> m var
R8691:8692 compcert.backend.Linear <> rs var
R8684:8687 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8665:8669 compcert.backend.Linear <> Lcond constr
R8681:8683 compcert.backend.Linear <> lbl var
R8676:8679 compcert.backend.Linear <> args var
R8671:8674 compcert.backend.Linear <> cond var
R8688:8688 compcert.backend.Linear <> b var
R8661:8662 compcert.backend.Linear <> sp var
R8659:8659 compcert.backend.Linear <> f var
R8657:8657 compcert.backend.Linear <> s var
R8625:8627 Coq.Init.Logic <> :type_scope:x_'='_x not
R8599:8608 compcert.backend.Linear <> find_label def
R8617:8623 compcert.backend.Linear <> fn_code proj
R8614:8614 compcert.backend.Linear <> f var
R8610:8612 compcert.backend.Linear <> lbl var
R8628:8631 Coq.Init.Datatypes <> Some constr
R8633:8634 compcert.backend.Linear <> b' var
R8548:8550 Coq.Init.Logic <> :type_scope:x_'='_x not
R8545:8547 compcert.backend.Linear <> rs' var
R8551:8560 compcert.backend.LTL <> undef_regs def
R8587:8588 compcert.backend.Linear <> rs var
R8563:8579 compcert.ia32.Machregs <> destroyed_by_cond def
R8581:8584 compcert.backend.Linear <> cond var
R8523:8525 Coq.Init.Logic <> :type_scope:x_'='_x not
R8484:8497 compcert.ia32.Op <> eval_condition def
R8522:8522 compcert.backend.Linear <> m var
R8505:8511 compcert.backend.LTL <> reglist def
R8516:8519 compcert.backend.Linear <> args var
R8513:8514 compcert.backend.Linear <> rs var
R8499:8502 compcert.backend.Linear <> cond var
R8526:8529 Coq.Init.Datatypes <> Some constr
R8531:8534 Coq.Init.Datatypes <> true constr
R8922:8925 compcert.backend.Linear <> step ind
R8986:8990 compcert.backend.Linear <> State constr
R9005:9005 compcert.backend.Linear <> m var
R9001:9003 compcert.backend.Linear <> rs' var
R8999:8999 compcert.backend.Linear <> b var
R8996:8997 compcert.backend.Linear <> sp var
R8994:8994 compcert.backend.Linear <> f var
R8992:8992 compcert.backend.Linear <> s var
R8982:8983 compcert.common.Events <> E0 def
R8928:8932 compcert.backend.Linear <> State constr
R8971:8971 compcert.backend.Linear <> m var
R8968:8969 compcert.backend.Linear <> rs var
R8961:8964 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R8942:8946 compcert.backend.Linear <> Lcond constr
R8958:8960 compcert.backend.Linear <> lbl var
R8953:8956 compcert.backend.Linear <> args var
R8948:8951 compcert.backend.Linear <> cond var
R8965:8965 compcert.backend.Linear <> b var
R8938:8939 compcert.backend.Linear <> sp var
R8936:8936 compcert.backend.Linear <> f var
R8934:8934 compcert.backend.Linear <> s var
R8871:8873 Coq.Init.Logic <> :type_scope:x_'='_x not
R8868:8870 compcert.backend.Linear <> rs' var
R8874:8883 compcert.backend.LTL <> undef_regs def
R8910:8911 compcert.backend.Linear <> rs var
R8886:8902 compcert.ia32.Machregs <> destroyed_by_cond def
R8904:8907 compcert.backend.Linear <> cond var
R8845:8847 Coq.Init.Logic <> :type_scope:x_'='_x not
R8806:8819 compcert.ia32.Op <> eval_condition def
R8844:8844 compcert.backend.Linear <> m var
R8827:8833 compcert.backend.LTL <> reglist def
R8838:8841 compcert.backend.Linear <> args var
R8835:8836 compcert.backend.Linear <> rs var
R8821:8824 compcert.backend.Linear <> cond var
R8848:8851 Coq.Init.Datatypes <> Some constr
R8853:8857 Coq.Init.Datatypes <> false constr
R9265:9268 compcert.backend.Linear <> step ind
R9328:9332 compcert.backend.Linear <> State constr
R9348:9348 compcert.backend.Linear <> m var
R9344:9346 compcert.backend.Linear <> rs' var
R9341:9342 compcert.backend.Linear <> b' var
R9338:9339 compcert.backend.Linear <> sp var
R9336:9336 compcert.backend.Linear <> f var
R9334:9334 compcert.backend.Linear <> s var
R9324:9325 compcert.common.Events <> E0 def
R9271:9275 compcert.backend.Linear <> State constr
R9313:9313 compcert.backend.Linear <> m var
R9310:9311 compcert.backend.Linear <> rs var
R9303:9306 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9285:9294 compcert.backend.Linear <> Ljumptable constr
R9300:9302 compcert.backend.Linear <> tbl var
R9296:9298 compcert.backend.Linear <> arg var
R9307:9307 compcert.backend.Linear <> b var
R9281:9282 compcert.backend.Linear <> sp var
R9279:9279 compcert.backend.Linear <> f var
R9277:9277 compcert.backend.Linear <> s var
R9214:9216 Coq.Init.Logic <> :type_scope:x_'='_x not
R9211:9213 compcert.backend.Linear <> rs' var
R9217:9226 compcert.backend.LTL <> undef_regs def
R9253:9254 compcert.backend.Linear <> rs var
R9229:9250 compcert.ia32.Machregs <> destroyed_by_jumptable def
R9191:9193 Coq.Init.Logic <> :type_scope:x_'='_x not
R9165:9174 compcert.backend.Linear <> find_label def
R9183:9189 compcert.backend.Linear <> fn_code proj
R9180:9180 compcert.backend.Linear <> f var
R9176:9178 compcert.backend.Linear <> lbl var
R9194:9197 Coq.Init.Datatypes <> Some constr
R9199:9200 compcert.backend.Linear <> b' var
R9144:9146 Coq.Init.Logic <> :type_scope:x_'='_x not
R9113:9122 compcert.lib.Coqlib <> list_nth_z def
R9129:9140 compcert.lib.Integers Int unsigned def
R9142:9142 compcert.backend.Linear <> n var
R9124:9126 compcert.backend.Linear <> tbl var
R9147:9150 Coq.Init.Datatypes <> Some constr
R9152:9154 compcert.backend.Linear <> lbl var
R9094:9096 Coq.Init.Logic <> :type_scope:x_'='_x not
R9084:9085 compcert.backend.Linear <> rs var
R9088:9088 compcert.backend.Locations <> R constr
R9090:9092 compcert.backend.Linear <> arg var
R9097:9100 compcert.common.Values <> Vint constr
R9102:9102 compcert.backend.Linear <> n var
R9460:9463 compcert.backend.Linear <> step ind
R9529:9539 compcert.backend.Linear <> Returnstate constr
R9578:9579 compcert.backend.Linear <> m' var
R9544:9554 compcert.backend.LTL <> return_regs def
R9574:9575 compcert.backend.Linear <> rs var
R9557:9569 compcert.backend.Linear <> parent_locset def
R9571:9571 compcert.backend.Linear <> s var
R9541:9541 compcert.backend.Linear <> s var
R9525:9526 compcert.common.Events <> E0 def
R9466:9470 compcert.backend.Linear <> State constr
R9514:9514 compcert.backend.Linear <> m var
R9511:9512 compcert.backend.Linear <> rs var
R9504:9507 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R9497:9503 compcert.backend.Linear <> Lreturn constr
R9508:9508 compcert.backend.Linear <> b var
R9477:9480 compcert.common.Values <> Vptr constr
R9486:9493 compcert.lib.Integers Int zero def
R9482:9484 compcert.backend.Linear <> stk var
R9474:9474 compcert.backend.Linear <> f var
R9472:9472 compcert.backend.Linear <> s var
R9440:9442 Coq.Init.Logic <> :type_scope:x_'='_x not
R9407:9414 compcert.common.Memory Mem free def
R9427:9438 compcert.backend.Linear <> fn_stacksize proj
R9424:9424 compcert.backend.Linear <> f var
R9418:9420 compcert.backend.Linear <> stk var
R9416:9416 compcert.backend.Linear <> m var
R9443:9446 Coq.Init.Datatypes <> Some constr
R9448:9449 compcert.backend.Linear <> m' var
R9771:9774 compcert.backend.Linear <> step ind
R9820:9824 compcert.backend.Linear <> State constr
R9866:9867 compcert.backend.Linear <> m' var
R9862:9864 compcert.backend.Linear <> rs' var
R9853:9859 compcert.backend.Linear <> fn_code proj
R9850:9850 compcert.backend.Linear <> f var
R9831:9834 compcert.common.Values <> Vptr constr
R9840:9847 compcert.lib.Integers Int zero def
R9836:9838 compcert.backend.Linear <> stk var
R9828:9828 compcert.backend.Linear <> f var
R9826:9826 compcert.backend.Linear <> s var
R9816:9817 compcert.common.Events <> E0 def
R9777:9785 compcert.backend.Linear <> Callstate constr
R9805:9805 compcert.backend.Linear <> m var
R9802:9803 compcert.backend.Linear <> rs var
R9790:9797 compcert.common.AST <> Internal constr
R9799:9799 compcert.backend.Linear <> f var
R9787:9787 compcert.backend.Linear <> s var
R9705:9707 Coq.Init.Logic <> :type_scope:x_'='_x not
R9702:9704 compcert.backend.Linear <> rs' var
R9708:9717 compcert.backend.LTL <> undef_regs def
R9748:9756 compcert.backend.LTL <> call_regs def
R9758:9759 compcert.backend.Linear <> rs var
R9719:9745 compcert.ia32.Machregs <> destroyed_at_function_entry def
R9680:9682 Coq.Init.Logic <> :type_scope:x_'='_x not
R9650:9658 compcert.common.Memory Mem alloc def
R9667:9678 compcert.backend.Linear <> fn_stacksize proj
R9664:9664 compcert.backend.Linear <> f var
R9660:9660 compcert.backend.Linear <> m var
R9683:9683 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9686:9687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9691:9691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9684:9685 compcert.backend.Linear <> m' var
R9688:9690 compcert.backend.Linear <> stk var
R10116:10119 compcert.backend.Linear <> step ind
R10167:10177 compcert.backend.Linear <> Returnstate constr
R10185:10186 compcert.backend.Linear <> m' var
R10181:10183 compcert.backend.Linear <> rs2 var
R10179:10179 compcert.backend.Linear <> s var
R10164:10164 compcert.backend.Linear <> t var
R10122:10130 compcert.backend.Linear <> Callstate constr
R10152:10152 compcert.backend.Linear <> m var
R10148:10150 compcert.backend.Linear <> rs1 var
R10135:10142 compcert.common.AST <> External constr
R10144:10145 compcert.backend.Linear <> ef var
R10132:10132 compcert.backend.Linear <> s var
R10048:10050 Coq.Init.Logic <> :type_scope:x_'='_x not
R10045:10047 compcert.backend.Linear <> rs2 var
R10051:10064 compcert.backend.Locations Locmap setlist def
R10103:10105 compcert.backend.Linear <> rs1 var
R10099:10101 compcert.backend.Linear <> res var
R10067:10069 Coq.Lists.List <> map def
R10074:10083 compcert.ia32.Conventions1 <> loc_result def
R10086:10091 compcert.common.AST <> ef_sig def
R10093:10094 compcert.backend.Linear <> ef var
R10071:10071 compcert.backend.Locations <> R constr
R9999:10012 compcert.common.Events <> external_call' ind
R10033:10034 compcert.backend.Linear <> m' var
R10029:10031 compcert.backend.Linear <> res var
R10027:10027 compcert.backend.Linear <> t var
R10025:10025 compcert.backend.Linear <> m var
R10020:10023 compcert.backend.Linear <> args var
R10017:10018 compcert.backend.Linear <> RELSEM.ge var
R10014:10015 compcert.backend.Linear <> ef var
R9951:9953 Coq.Init.Logic <> :type_scope:x_'='_x not
R9947:9950 compcert.backend.Linear <> args var
R9954:9956 Coq.Lists.List <> map def
R9963:9975 compcert.ia32.Conventions1 <> loc_arguments def
R9978:9983 compcert.common.AST <> ef_sig def
R9985:9986 compcert.backend.Linear <> ef var
R9958:9960 compcert.backend.Linear <> rs1 var
R10244:10247 compcert.backend.Linear <> step ind
R10309:10313 compcert.backend.Linear <> State constr
R10327:10327 compcert.backend.Linear <> m var
R10324:10325 compcert.backend.Linear <> rs var
R10322:10322 compcert.backend.Linear <> c var
R10319:10320 compcert.backend.Linear <> sp var
R10317:10317 compcert.backend.Linear <> f var
R10315:10315 compcert.backend.Linear <> s var
R10305:10306 compcert.common.Events <> E0 def
R10250:10260 compcert.backend.Linear <> Returnstate constr
R10294:10294 compcert.backend.Linear <> m var
R10291:10292 compcert.backend.Linear <> rs var
R10284:10287 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10263:10272 compcert.backend.Linear <> Stackframe constr
R10283:10283 compcert.backend.Linear <> c var
R10279:10281 compcert.backend.Linear <> rs0 var
R10276:10277 compcert.backend.Linear <> sp var
R10274:10274 compcert.backend.Linear <> f var
R10288:10288 compcert.backend.Linear <> s var
R10336:10341 compcert.backend.Linear RELSEM <> sec
ind 10355:10367 <> initial_state
constr 10404:10422 <> initial_state_intro
R10373:10379 compcert.backend.Linear <> program def
R10383:10387 compcert.backend.Linear <> state ind
R10456:10469 compcert.common.Globalenvs Genv globalenv def
R10647:10659 compcert.backend.Linear <> initial_state ind
R10664:10672 compcert.backend.Linear <> Callstate constr
R10701:10702 compcert.backend.Linear <> m0 var
R10681:10691 compcert.backend.Locations Locmap init def
R10693:10698 compcert.common.Values <> Vundef constr
R10678:10678 compcert.backend.Linear <> f var
R10674:10676 Coq.Init.Datatypes <> nil constr
R10620:10622 Coq.Init.Logic <> :type_scope:x_'='_x not
R10612:10617 compcert.backend.Linear <> funsig def
R10619:10619 compcert.backend.Linear <> f var
R10623:10636 compcert.common.AST <> signature_main def
R10593:10595 Coq.Init.Logic <> :type_scope:x_'='_x not
R10569:10587 compcert.common.Globalenvs Genv find_funct_ptr def
R10592:10592 compcert.backend.Linear <> b var
R10589:10590 compcert.backend.Linear <> ge var
R10596:10599 Coq.Init.Datatypes <> Some constr
R10601:10601 compcert.backend.Linear <> f var
R10550:10552 Coq.Init.Logic <> :type_scope:x_'='_x not
R10517:10532 compcert.common.Globalenvs Genv find_symbol def
R10540:10548 compcert.common.AST <> prog_main proj
R10534:10535 compcert.backend.Linear <> ge var
R10553:10556 Coq.Init.Datatypes <> Some constr
R10558:10558 compcert.backend.Linear <> b var
R10497:10499 Coq.Init.Logic <> :type_scope:x_'='_x not
R10482:10494 compcert.common.Globalenvs Genv init_mem def
R10500:10503 Coq.Init.Datatypes <> Some constr
R10505:10506 compcert.backend.Linear <> m0 var
ind 10717:10727 <> final_state
constr 10758:10774 <> final_state_intro
R10739:10741 compcert.lib.Integers <> int syndef
R10730:10734 compcert.backend.Linear <> state ind
R10885:10895 compcert.backend.Linear <> final_state ind
R10920:10926 compcert.backend.Linear <> retcode var
R10898:10908 compcert.backend.Linear <> Returnstate constr
R10917:10917 compcert.backend.Linear <> m var
R10914:10915 compcert.backend.Linear <> rs var
R10910:10912 Coq.Init.Datatypes <> nil constr
R10860:10862 Coq.Init.Logic <> :type_scope:x_'='_x not
R10852:10853 compcert.backend.Linear <> rs var
R10856:10856 compcert.backend.Locations <> R constr
R10858:10858 compcert.backend.Linear <> r var
R10863:10866 compcert.common.Values <> Vint constr
R10868:10874 compcert.backend.Linear <> retcode var
R10831:10833 Coq.Init.Logic <> :type_scope:x_'='_x not
R10806:10815 compcert.ia32.Conventions1 <> loc_result def
R10817:10830 compcert.common.AST <> signature_main def
R10835:10838 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R10834:10834 compcert.backend.Linear <> r var
R10839:10841 Coq.Init.Datatypes <> nil constr
def 10941:10949 <> semantics
R10955:10961 compcert.backend.Linear <> program def
R10969:10977 compcert.common.Smallstep <> Semantics constr
R11015:11028 compcert.common.Globalenvs Genv globalenv def
R11030:11030 compcert.backend.Linear <> p var
R11002:11012 compcert.backend.Linear <> final_state ind
R10985:10997 compcert.backend.Linear <> initial_state ind
R10999:10999 compcert.backend.Linear <> p var
R10979:10982 compcert.backend.Linear <> step ind
