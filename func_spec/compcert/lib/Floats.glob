DIGEST 012eca7f8eda654b7ec8ea0bed4f35fd
Fcompcert.lib.Floats
R1200:1205 compcert.lib.Axioms <> <> lib
R1223:1228 compcert.lib.Coqlib <> <> lib
R1246:1253 compcert.lib.Integers <> <> lib
R1271:1281 compcert.flocq.Appli.Fappli_IEEE <> <> lib
R1299:1314 compcert.flocq.Appli.Fappli_IEEE_bits <> <> lib
R1332:1336 compcert.flocq.Core.Fcore <> <> lib
R1354:1364 compcert.flocq.Calc.Fcalc_round <> <> lib
R1382:1394 compcert.flocq.Calc.Fcalc_bracket <> <> lib
R1412:1425 compcert.flocq.Prop.Fprop_Sterbenz <> <> lib
R1443:1449 Coq.Program.Program <> <> lib
R1460:1464 compcert.ia32.Archi <> <> lib
def 1501:1505 <> float
R1510:1517 compcert.flocq.Appli.Fappli_IEEE_bits <> binary64 def
mod 1563:1567 <> Float
def 1582:1585 Float zero
R1588:1592 compcert.lib.Floats Float float def
R1597:1605 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R1611:1615 Coq.Init.Datatypes <> false constr
def 1655:1660 Float eq_dec
R1678:1682 compcert.lib.Floats Float float def
R1686:1686 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1694:1698 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1707:1707 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1689:1691 Coq.Init.Logic <> :type_scope:x_'='_x not
R1687:1688 compcert.lib.Floats <> f1 var
R1692:1693 compcert.lib.Floats <> f2 var
R1701:1704 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R1699:1700 compcert.lib.Floats <> f1 var
R1705:1706 compcert.lib.Floats <> f2 var
R1901:1915 Coq.PArith.BinPos <> positive_eq_dec syndef
R1977:1985 compcert.lib.Axioms <> proof_irr prfax
R1901:1915 Coq.PArith.BinPos <> positive_eq_dec syndef
R1977:1985 compcert.lib.Axioms <> proof_irr prfax
R2000:2014 Coq.PArith.BinPos <> positive_eq_dec syndef
R2076:2084 compcert.lib.Axioms <> proof_irr prfax
R2000:2014 Coq.PArith.BinPos <> positive_eq_dec syndef
R2076:2084 compcert.lib.Axioms <> proof_irr prfax
R2099:2113 Coq.PArith.BinPos <> positive_eq_dec syndef
R2146:2153 Coq.ZArith.ZArith_dec <> Z_eq_dec syndef
R2233:2241 compcert.lib.Axioms <> proof_irr prfax
R2099:2113 Coq.PArith.BinPos <> positive_eq_dec syndef
R2146:2153 Coq.ZArith.ZArith_dec <> Z_eq_dec syndef
R2233:2241 compcert.lib.Axioms <> proof_irr prfax
R2269:2283 Coq.PArith.BinPos <> positive_eq_dec syndef
R2316:2323 Coq.ZArith.ZArith_dec <> Z_eq_dec syndef
R2403:2411 compcert.lib.Axioms <> proof_irr prfax
R2269:2283 Coq.PArith.BinPos <> positive_eq_dec syndef
R2316:2323 Coq.ZArith.ZArith_dec <> Z_eq_dec syndef
R2403:2411 compcert.lib.Axioms <> proof_irr prfax
def 2608:2625 Float transform_quiet_pl
R2631:2636 compcert.flocq.Appli.Fappli_IEEE <> nan_pl def
R2644:2649 compcert.flocq.Appli.Fappli_IEEE <> nan_pl def
R2631:2636 compcert.flocq.Appli.Fappli_IEEE <> nan_pl def
R2659:2665 Coq.PArith.BinPos Pos lor def
R2671:2678 Coq.Init.Peano <> nat_iter def
R2686:2687 Coq.Numbers.BinNums <> xH constr
R2683:2684 Coq.Numbers.BinNums <> xO constr
R2667:2668 compcert.lib.Floats <> pl var
R2740:2747 Coq.ZArith.BinInt Z ltb_lt thm
R2740:2747 Coq.ZArith.BinInt Z ltb_lt thm
R2806:2808 Coq.Init.Logic <> :type_scope:x_'='_x not
R2775:2775 Coq.Init.Datatypes <> S constr
R2778:2802 compcert.flocq.Core.Fcore_digits <> digits2_Pnat def
R2804:2804 compcert.lib.Floats <> x var
R2809:2818 Coq.PArith.BinPos Pos to_nat def
R2821:2828 Coq.PArith.BinPos Pos size def
R2830:2830 compcert.lib.Floats <> x var
R2806:2808 Coq.Init.Logic <> :type_scope:x_'='_x not
R2775:2775 Coq.Init.Datatypes <> S constr
R2778:2802 compcert.flocq.Core.Fcore_digits <> digits2_Pnat def
R2804:2804 compcert.lib.Floats <> x var
R2809:2818 Coq.PArith.BinPos Pos to_nat def
R2821:2828 Coq.PArith.BinPos Pos size def
R2830:2830 compcert.lib.Floats <> x var
R2903:2910 Coq.ZArith.BinInt Z of_nat def
R2913:2913 Coq.Init.Datatypes <> S constr
R2916:2940 compcert.flocq.Core.Fcore_digits <> digits2_Pnat def
R2943:2949 Coq.PArith.BinPos Pos lor def
R2903:2910 Coq.ZArith.BinInt Z of_nat def
R2913:2913 Coq.Init.Datatypes <> S constr
R2916:2940 compcert.flocq.Core.Fcore_digits <> digits2_Pnat def
R2943:2949 Coq.PArith.BinPos Pos lor def
R2988:3001 Coq.ZArith.Znat <> positive_nat_Z thm
R3004:3016 Coq.ZArith.Zlogarithm <> Psize_log_inf thm
R3022:3034 Coq.ZArith.Zlogarithm <> Zlog2_log_inf thm
R2988:3001 Coq.ZArith.Znat <> positive_nat_Z thm
R3004:3016 Coq.ZArith.Zlogarithm <> Psize_log_inf thm
R3022:3034 Coq.ZArith.Zlogarithm <> Zlog2_log_inf thm
R3103:3107 Coq.ZArith.BinInt Z lor def
R3110:3114 Coq.ZArith.BinInt Z pos syndef
R3061:3065 Coq.ZArith.BinInt Z pos syndef
R3068:3074 Coq.PArith.BinPos Pos lor def
R3061:3065 Coq.ZArith.BinInt Z pos syndef
R3068:3074 Coq.PArith.BinPos Pos lor def
R3103:3107 Coq.ZArith.BinInt Z lor def
R3110:3114 Coq.ZArith.BinInt Z pos syndef
R3150:3159 Coq.ZArith.BinInt Z log2_lor thm
R3150:3159 Coq.ZArith.BinInt Z log2_lor thm
R3187:3196 Coq.ZArith.BinInt Z max_case thm
R3187:3196 Coq.ZArith.BinInt Z max_case thm
prf 3231:3248 Float nan_payload_fequal
R3289:3289 Coq.Init.Logic <> :type_scope:x_'='_x not
R3315:3318 Coq.Init.Logic <> :type_scope:x_'='_x not
R3304:3309 compcert.flocq.Appli.Fappli_IEEE <> nan_pl def
R3311:3314 compcert.lib.Floats <> prec var
R3290:3294 Coq.Init.Specif <> exist constr
R3301:3302 compcert.lib.Floats <> e1 var
R3298:3299 compcert.lib.Floats <> p1 var
R3319:3323 Coq.Init.Specif <> exist constr
R3330:3331 compcert.lib.Floats <> e2 var
R3327:3328 compcert.lib.Floats <> p2 var
R3280:3282 Coq.Init.Logic <> :type_scope:x_'='_x not
R3278:3279 compcert.lib.Floats <> p1 var
R3283:3284 compcert.lib.Floats <> p2 var
R3380:3408 compcert.flocq.Core.Fcore_Zaux <> eqbool_irrelevance thm
R3380:3408 compcert.flocq.Core.Fcore_Zaux <> eqbool_irrelevance thm
prf 3423:3436 Float lor_idempotent
R3476:3478 Coq.Init.Logic <> :type_scope:x_'='_x not
R3453:3459 Coq.PArith.BinPos Pos lor def
R3475:3475 compcert.lib.Floats <> y var
R3462:3468 Coq.PArith.BinPos Pos lor def
R3472:3472 compcert.lib.Floats <> y var
R3470:3470 compcert.lib.Floats <> x var
R3479:3485 Coq.PArith.BinPos Pos lor def
R3489:3489 compcert.lib.Floats <> y var
R3487:3487 compcert.lib.Floats <> x var
prf 3597:3625 Float transform_quiet_pl_idempotent
R3683:3685 Coq.Init.Logic <> :type_scope:x_'='_x not
R3641:3658 compcert.lib.Floats Float transform_quiet_pl def
R3661:3678 compcert.lib.Floats Float transform_quiet_pl def
R3680:3681 compcert.lib.Floats <> pl var
R3686:3703 compcert.lib.Floats Float transform_quiet_pl def
R3705:3706 compcert.lib.Floats <> pl var
R3750:3767 compcert.lib.Floats Float nan_payload_fequal thm
R3750:3767 compcert.lib.Floats Float nan_payload_fequal thm
R3785:3798 compcert.lib.Floats Float lor_idempotent thm
R3785:3798 compcert.lib.Floats Float lor_idempotent thm
def 3987:3992 Float neg_pl
R3997:4000 Coq.Init.Datatypes <> bool ind
R4007:4012 compcert.flocq.Appli.Fappli_IEEE <> nan_pl def
R4021:4021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4028:4029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4032:4032 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4022:4025 Coq.Init.Datatypes <> negb def
R4027:4027 compcert.lib.Floats <> s var
R4030:4031 compcert.lib.Floats <> pl var
def 4046:4051 Float abs_pl
R4056:4059 Coq.Init.Datatypes <> bool ind
R4066:4071 compcert.flocq.Appli.Fappli_IEEE <> nan_pl def
R4080:4080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4086:4087 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4090:4090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4081:4085 Coq.Init.Datatypes <> false constr
R4088:4089 compcert.lib.Floats <> pl var
def 4105:4107 Float neg
R4119:4123 compcert.lib.Floats Float float def
R4110:4114 compcert.lib.Floats Float float def
R4128:4134 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_opp def
R4136:4141 compcert.lib.Floats Float neg_pl def
def 4186:4188 Float abs
R4194:4198 compcert.lib.Floats Float float def
R4202:4206 compcert.lib.Floats Float float def
R4260:4260 compcert.lib.Floats <> x var
R4271:4278 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R4304:4309 compcert.lib.Floats Float abs_pl def
R4293:4293 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4295:4296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4299:4299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4319:4326 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R4341:4353 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R4360:4372 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R4378:4382 Coq.Init.Datatypes <> false constr
R4388:4398 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R4411:4421 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R4427:4431 Coq.Init.Datatypes <> false constr
R4443:4451 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R4458:4466 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R4472:4476 Coq.Init.Datatypes <> false constr
def 4497:4514 Float binary_normalize64
R4521:4521 Coq.Numbers.BinNums <> Z ind
R4527:4530 Coq.Init.Datatypes <> bool ind
R4534:4538 compcert.lib.Floats Float float def
R4545:4560 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize def
R4598:4598 compcert.lib.Floats <> s var
R4596:4596 compcert.lib.Floats <> e var
R4594:4594 compcert.lib.Floats <> m var
R4586:4592 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R4578:4584 Coq.Init.Logic <> eq_refl constr
R4570:4576 Coq.Init.Logic <> eq_refl constr
def 4613:4638 Float binary_normalize64_correct
R4645:4645 Coq.Numbers.BinNums <> Z ind
R4651:4654 Coq.Init.Datatypes <> bool ind
R4662:4685 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize_correct thm
R4723:4723 compcert.lib.Floats <> s var
R4721:4721 compcert.lib.Floats <> e var
R4719:4719 compcert.lib.Floats <> m var
R4711:4717 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R4703:4709 Coq.Init.Logic <> eq_refl constr
R4695:4701 Coq.Init.Logic <> eq_refl constr
R4740:4765 compcert.lib.Floats Float binary_normalize64_correct def
def 4780:4797 Float binary_normalize32
R4804:4804 Coq.Numbers.BinNums <> Z ind
R4810:4813 Coq.Init.Datatypes <> bool ind
R4818:4825 compcert.flocq.Appli.Fappli_IEEE_bits <> binary32 def
R4832:4847 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize def
R4884:4884 compcert.lib.Floats <> s var
R4882:4882 compcert.lib.Floats <> e var
R4880:4880 compcert.lib.Floats <> m var
R4872:4878 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R4864:4870 Coq.Init.Logic <> eq_refl constr
R4856:4862 Coq.Init.Logic <> eq_refl constr
def 4899:4924 Float binary_normalize32_correct
R4931:4931 Coq.Numbers.BinNums <> Z ind
R4937:4940 Coq.Init.Datatypes <> bool ind
R4948:4971 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize_correct thm
R5008:5008 compcert.lib.Floats <> s var
R5006:5006 compcert.lib.Floats <> e var
R5004:5004 compcert.lib.Floats <> m var
R4996:5002 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R4988:4994 Coq.Init.Logic <> eq_refl constr
R4980:4986 Coq.Init.Logic <> eq_refl constr
R5025:5050 compcert.lib.Floats Float binary_normalize32_correct def
def 5223:5240 Float floatofbinary32_pl
R5245:5248 Coq.Init.Datatypes <> bool ind
R5255:5260 compcert.flocq.Appli.Fappli_IEEE <> nan_pl def
R5273:5275 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R5269:5272 Coq.Init.Datatypes <> bool ind
R5276:5281 compcert.flocq.Appli.Fappli_IEEE <> nan_pl def
R5297:5297 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5299:5300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5366:5366 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5301:5318 compcert.lib.Floats Float transform_quiet_pl def
R5321:5325 Coq.Init.Specif <> exist constr
R5330:5343 Coq.PArith.BinPos Pos shiftl_nat def
R5346:5354 Coq.Init.Specif <> proj1_sig def
R5297:5297 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5299:5300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5366:5366 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5301:5318 compcert.lib.Floats Float transform_quiet_pl def
R5321:5325 Coq.Init.Specif <> exist constr
R5330:5343 Coq.PArith.BinPos Pos shiftl_nat def
R5346:5354 Coq.Init.Specif <> proj1_sig def
R5406:5414 Coq.Init.Specif <> proj1_sig def
R5417:5430 Coq.PArith.BinPos Pos shiftl_nat def
R5433:5440 Coq.Init.Peano <> nat_iter def
R5443:5467 compcert.flocq.Core.Fcore_digits <> digits2_Pnat def
R5480:5504 compcert.flocq.Core.Fcore_digits <> digits2_Pnat def
R5522:5529 Coq.ZArith.BinInt Z ltb_lt thm
R5480:5504 compcert.flocq.Core.Fcore_digits <> digits2_Pnat def
R5522:5529 Coq.ZArith.BinInt Z ltb_lt thm
def 5576:5593 Float binary32offloat_pl
R5598:5601 Coq.Init.Datatypes <> bool ind
R5608:5613 compcert.flocq.Appli.Fappli_IEEE <> nan_pl def
R5626:5628 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R5622:5625 Coq.Init.Datatypes <> bool ind
R5629:5634 compcert.flocq.Appli.Fappli_IEEE <> nan_pl def
R5650:5650 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5652:5653 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5719:5719 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5654:5658 Coq.Init.Specif <> exist constr
R5663:5676 Coq.PArith.BinPos Pos shiftr_nat def
R5679:5687 Coq.Init.Specif <> proj1_sig def
R5690:5707 compcert.lib.Floats Float transform_quiet_pl def
R5650:5650 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5652:5653 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5719:5719 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5654:5658 Coq.Init.Specif <> exist constr
R5663:5676 Coq.PArith.BinPos Pos shiftr_nat def
R5679:5687 Coq.Init.Specif <> proj1_sig def
R5690:5707 compcert.lib.Floats Float transform_quiet_pl def
R5749:5766 compcert.lib.Floats Float transform_quiet_pl def
R5780:5788 Coq.Init.Specif <> proj1_sig def
R5791:5804 Coq.PArith.BinPos Pos shiftr_nat def
R5807:5814 Coq.Init.Peano <> nat_iter def
R5829:5836 Coq.ZArith.BinInt Z ltb_lt thm
R5904:5928 Coq.Init.Logic <> :type_scope:x_'='_x not
R5866:5890 compcert.flocq.Core.Fcore_digits <> digits2_Pnat def
R5893:5900 Coq.PArith.BinPos Pos div2 def
R5902:5902 compcert.lib.Floats <> x var
R5957:5959 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5930:5954 compcert.flocq.Core.Fcore_digits <> digits2_Pnat def
R5956:5956 compcert.lib.Floats <> x var
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R5749:5766 compcert.lib.Floats Float transform_quiet_pl def
R5829:5836 Coq.ZArith.BinInt Z ltb_lt thm
R5904:5928 Coq.Init.Logic <> :type_scope:x_'='_x not
R5866:5890 compcert.flocq.Core.Fcore_digits <> digits2_Pnat def
R5893:5900 Coq.PArith.BinPos Pos div2 def
R5902:5902 compcert.lib.Floats <> x var
R5957:5959 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5930:5954 compcert.flocq.Core.Fcore_digits <> digits2_Pnat def
R5956:5956 compcert.lib.Floats <> x var
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
R6026:6049 Coq.Numbers.Natural.Peano.NPeano Nat sub_add_distr thm
def 6087:6101 Float floatofbinary32
R6107:6114 compcert.flocq.Appli.Fappli_IEEE_bits <> binary32 def
R6119:6123 compcert.lib.Floats Float float def
R6191:6191 compcert.lib.Floats <> f var
R6204:6211 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R6237:6254 compcert.lib.Floats Float floatofbinary32_pl def
R6226:6226 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6228:6229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6232:6232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6264:6271 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R6288:6300 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R6307:6319 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R6333:6341 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R6348:6356 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R6370:6380 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R6399:6416 compcert.lib.Floats Float binary_normalize64 def
R6419:6427 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R6432:6435 Coq.Numbers.BinNums <> Zpos constr
def 6464:6478 Float binary32offloat
R6484:6488 compcert.lib.Floats Float float def
R6493:6500 compcert.flocq.Appli.Fappli_IEEE_bits <> binary32 def
R6552:6552 compcert.lib.Floats <> f var
R6565:6572 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R6598:6615 compcert.lib.Floats Float binary32offloat_pl def
R6587:6587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6589:6590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6593:6593 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6625:6632 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R6649:6661 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R6668:6680 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R6694:6702 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R6709:6717 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R6731:6741 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R6760:6777 compcert.lib.Floats Float binary_normalize32 def
R6780:6788 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R6793:6796 Coq.Numbers.BinNums <> Zpos constr
def 6825:6837 Float singleoffloat
R6843:6847 compcert.lib.Floats Float float def
R6851:6855 compcert.lib.Floats Float float def
R6921:6935 compcert.lib.Floats Float floatofbinary32 def
R6938:6952 compcert.lib.Floats Float binary32offloat def
R6954:6954 compcert.lib.Floats <> f var
def 6970:6977 Float Zoffloat
R6982:6986 compcert.lib.Floats Float float def
R6990:6995 Coq.Init.Datatypes <> option ind
R6997:6997 Coq.Numbers.BinNums <> Z ind
R7034:7034 compcert.lib.Floats <> f var
R7047:7057 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R7064:7067 Coq.Numbers.BinNums <> Zpos constr
R7077:7080 Coq.Init.Datatypes <> Some constr
R7103:7105 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R7083:7091 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R7096:7099 Coq.Numbers.BinNums <> Zpos constr
R7106:7115 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R7117:7122 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R7133:7143 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R7156:7159 Coq.Init.Datatypes <> Some constr
R7162:7170 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R7175:7178 Coq.Numbers.BinNums <> Zpos constr
R7190:7200 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R7207:7210 Coq.Numbers.BinNums <> Zneg constr
R7220:7223 Coq.Init.Datatypes <> Some constr
R7226:7234 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R7245:7247 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R7239:7242 Coq.Numbers.BinNums <> Zpos constr
R7248:7257 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R7259:7264 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R7276:7284 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R7291:7294 Coq.Init.Datatypes <> Some constr
R7309:7312 Coq.Init.Datatypes <> None constr
def 7333:7342 Float intoffloat
R7347:7351 compcert.lib.Floats Float float def
R7355:7360 Coq.Init.Datatypes <> option ind
R7362:7364 compcert.lib.Integers <> int syndef
R7417:7424 compcert.lib.Floats Float Zoffloat def
R7426:7426 compcert.lib.Floats <> f var
R7439:7442 Coq.Init.Datatypes <> Some constr
R7483:7486 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R7458:7465 Coq.ZArith.Zbool <> Zle_bool syndef
R7467:7480 compcert.lib.Integers Int min_signed def
R7487:7494 Coq.ZArith.Zbool <> Zle_bool syndef
R7498:7511 compcert.lib.Integers Int max_signed def
R7563:7566 Coq.Init.Datatypes <> None constr
R7526:7529 Coq.Init.Datatypes <> Some constr
R7532:7539 compcert.lib.Integers Int repr def
R7574:7577 Coq.Init.Datatypes <> None constr
R7582:7585 Coq.Init.Datatypes <> None constr
def 7606:7616 Float intuoffloat
R7621:7625 compcert.lib.Floats Float float def
R7629:7634 Coq.Init.Datatypes <> option ind
R7636:7638 compcert.lib.Integers <> int syndef
R7693:7700 compcert.lib.Floats Float Zoffloat def
R7702:7702 compcert.lib.Floats <> f var
R7715:7718 Coq.Init.Datatypes <> Some constr
R7746:7749 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R7734:7741 Coq.ZArith.Zbool <> Zle_bool syndef
R7750:7757 Coq.ZArith.Zbool <> Zle_bool syndef
R7761:7776 compcert.lib.Integers Int max_unsigned def
R7828:7831 Coq.Init.Datatypes <> None constr
R7791:7794 Coq.Init.Datatypes <> Some constr
R7797:7804 compcert.lib.Integers Int repr def
R7839:7842 Coq.Init.Datatypes <> None constr
R7847:7850 Coq.Init.Datatypes <> None constr
def 7871:7881 Float longoffloat
R7886:7890 compcert.lib.Floats Float float def
R7894:7899 Coq.Init.Datatypes <> option ind
R7901:7905 compcert.lib.Integers <> int64 syndef
R7958:7965 compcert.lib.Floats Float Zoffloat def
R7967:7967 compcert.lib.Floats <> f var
R7980:7983 Coq.Init.Datatypes <> Some constr
R8026:8029 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R7999:8006 Coq.ZArith.Zbool <> Zle_bool syndef
R8008:8023 compcert.lib.Integers Int64 min_signed def
R8030:8037 Coq.ZArith.Zbool <> Zle_bool syndef
R8041:8056 compcert.lib.Integers Int64 max_signed def
R8110:8113 Coq.Init.Datatypes <> None constr
R8071:8074 Coq.Init.Datatypes <> Some constr
R8077:8086 compcert.lib.Integers Int64 repr def
R8121:8124 Coq.Init.Datatypes <> None constr
R8129:8132 Coq.Init.Datatypes <> None constr
def 8153:8164 Float longuoffloat
R8169:8173 compcert.lib.Floats Float float def
R8177:8182 Coq.Init.Datatypes <> option ind
R8184:8188 compcert.lib.Integers <> int64 syndef
R8243:8250 compcert.lib.Floats Float Zoffloat def
R8252:8252 compcert.lib.Floats <> f var
R8265:8268 Coq.Init.Datatypes <> Some constr
R8296:8299 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R8284:8291 Coq.ZArith.Zbool <> Zle_bool syndef
R8300:8307 Coq.ZArith.Zbool <> Zle_bool syndef
R8311:8328 compcert.lib.Integers Int64 max_unsigned def
R8382:8385 Coq.Init.Datatypes <> None constr
R8343:8346 Coq.Init.Datatypes <> Some constr
R8349:8358 compcert.lib.Integers Int64 repr def
R8393:8396 Coq.Init.Datatypes <> None constr
R8401:8404 Coq.Init.Datatypes <> None constr
def 8470:8486 Float build_from_parsed
R8496:8496 Coq.Numbers.BinNums <> Z ind
R8505:8505 Coq.Numbers.BinNums <> Z ind
R8520:8528 compcert.flocq.Core.Fcore_FLX <> Prec_gt_0 class
R8530:8533 compcert.lib.Floats <> prec var
R8546:8548 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R8542:8545 compcert.lib.Floats <> prec var
R8549:8552 compcert.lib.Floats <> emax var
R8563:8570 Coq.Numbers.BinNums <> positive ind
R8582:8589 Coq.Numbers.BinNums <> positive ind
R8601:8601 Coq.Numbers.BinNums <> Z ind
R8615:8621 compcert.lib.Floats <> expPart var
R8643:8644 Coq.Numbers.BinNums <> Z0 constr
R8655:8670 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize def
R8723:8727 Coq.Init.Datatypes <> false constr
R8720:8721 Coq.Numbers.BinNums <> Z0 constr
R8706:8709 Coq.Numbers.BinNums <> Zpos constr
R8711:8717 compcert.lib.Floats <> intPart var
R8697:8703 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R8692:8695 compcert.lib.Floats <> Hmax var
R8682:8690 compcert.lib.Floats <> prec_gt_0 var
R8677:8680 compcert.lib.Floats <> emax var
R8672:8675 compcert.lib.Floats <> prec var
R8735:8738 Coq.Numbers.BinNums <> Zpos constr
R8751:8766 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize def
R8848:8852 Coq.Init.Datatypes <> false constr
R8845:8846 Coq.Numbers.BinNums <> Z0 constr
R8802:8802 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R8815:8818 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R8803:8806 Coq.Numbers.BinNums <> Zpos constr
R8808:8814 compcert.lib.Floats <> intPart var
R8819:8828 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R8831:8834 Coq.Numbers.BinNums <> Zpos constr
R8836:8839 compcert.lib.Floats <> base var
R8793:8799 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R8788:8791 compcert.lib.Floats <> Hmax var
R8778:8786 compcert.lib.Floats <> prec_gt_0 var
R8773:8776 compcert.lib.Floats <> emax var
R8768:8771 compcert.lib.Floats <> prec var
R8860:8863 Coq.Numbers.BinNums <> Zneg constr
R8887:8896 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R8899:8902 Coq.Numbers.BinNums <> Zpos constr
R8904:8907 compcert.lib.Floats <> base var
R8927:8929 compcert.lib.Floats <> exp var
R8939:8941 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R8942:8944 compcert.lib.Floats <> exp var
R8966:8969 Coq.Numbers.BinNums <> Zneg constr
R8975:8976 Coq.Numbers.BinNums <> Z0 constr
R8993:8996 Coq.Numbers.BinNums <> Zpos constr
R9032:9035 compcert.flocq.Appli.Fappli_IEEE <> FF2B def
R9050:9054 Coq.Init.Logic <> proj1 thm
R9057:9072 compcert.flocq.Appli.Fappli_IEEE <> Bdiv_correct_aux thm
R9132:9133 Coq.Numbers.BinNums <> Z0 constr
R9124:9128 Coq.Init.Datatypes <> false constr
R9121:9122 Coq.Numbers.BinNums <> Z0 constr
R9113:9119 compcert.lib.Floats <> intPart var
R9107:9111 Coq.Init.Datatypes <> false constr
R9099:9105 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R9094:9097 compcert.lib.Floats <> Hmax var
R9084:9092 compcert.lib.Floats <> prec_gt_0 var
R9079:9082 compcert.lib.Floats <> emax var
R9074:9077 compcert.lib.Floats <> prec var
R9042:9045 compcert.lib.Floats <> emax var
R9037:9040 compcert.lib.Floats <> prec var
R9179:9193 compcert.flocq.Core.Fcore_Zaux <> Zpower_pos_gt_0 thm
R9179:9193 compcert.flocq.Core.Fcore_Zaux <> Zpower_pos_gt_0 thm
def 9226:9244 Float build_from_parsed64
R9252:9259 Coq.Numbers.BinNums <> positive ind
R9271:9278 Coq.Numbers.BinNums <> positive ind
R9290:9290 Coq.Numbers.BinNums <> Z ind
R9295:9299 compcert.lib.Floats Float float def
R9306:9322 compcert.lib.Floats Float build_from_parsed def
R9362:9368 compcert.lib.Floats <> expPart var
R9354:9360 compcert.lib.Floats <> intPart var
R9349:9352 compcert.lib.Floats <> base var
R9340:9346 Coq.Init.Logic <> eq_refl constr
R9332:9338 Coq.Init.Logic <> eq_refl constr
def 9383:9401 Float build_from_parsed32
R9409:9416 Coq.Numbers.BinNums <> positive ind
R9428:9435 Coq.Numbers.BinNums <> positive ind
R9447:9447 Coq.Numbers.BinNums <> Z ind
R9452:9456 compcert.lib.Floats Float float def
R9463:9477 compcert.lib.Floats Float floatofbinary32 def
R9480:9496 compcert.lib.Floats Float build_from_parsed def
R9535:9541 compcert.lib.Floats <> expPart var
R9527:9533 compcert.lib.Floats <> intPart var
R9522:9525 compcert.lib.Floats <> base var
R9513:9519 Coq.Init.Logic <> eq_refl constr
R9505:9511 Coq.Init.Logic <> eq_refl constr
def 9557:9566 Float floatofint
R9571:9573 compcert.lib.Integers <> int syndef
R9577:9581 compcert.lib.Floats Float float def
R9630:9647 compcert.lib.Floats Float binary_normalize64 def
R9666:9670 Coq.Init.Datatypes <> false constr
R9650:9659 compcert.lib.Integers Int signed def
R9661:9661 compcert.lib.Floats <> n var
def 9684:9694 Float floatofintu
R9699:9701 compcert.lib.Integers <> int syndef
R9705:9709 compcert.lib.Floats Float float def
R9759:9776 compcert.lib.Floats Float binary_normalize64 def
R9797:9801 Coq.Init.Datatypes <> false constr
R9779:9790 compcert.lib.Integers Int unsigned def
R9792:9792 compcert.lib.Floats <> n var
def 9816:9826 Float floatoflong
R9831:9835 compcert.lib.Integers <> int64 syndef
R9839:9843 compcert.lib.Floats Float float def
R9892:9909 compcert.lib.Floats Float binary_normalize64 def
R9930:9934 Coq.Init.Datatypes <> false constr
R9912:9923 compcert.lib.Integers Int64 signed def
R9925:9925 compcert.lib.Floats <> n var
def 9948:9959 Float floatoflongu
R9964:9968 compcert.lib.Integers <> int64 syndef
R9972:9976 compcert.lib.Floats Float float def
R10026:10043 compcert.lib.Floats Float binary_normalize64 def
R10066:10070 Coq.Init.Datatypes <> false constr
R10046:10059 compcert.lib.Integers Int64 unsigned def
R10061:10061 compcert.lib.Floats <> n var
def 10085:10095 Float singleofint
R10100:10102 compcert.lib.Integers <> int syndef
R10106:10110 compcert.lib.Floats Float float def
R10185:10199 compcert.lib.Floats Float floatofbinary32 def
R10202:10219 compcert.lib.Floats Float binary_normalize32 def
R10238:10242 Coq.Init.Datatypes <> false constr
R10222:10231 compcert.lib.Integers Int signed def
R10233:10233 compcert.lib.Floats <> n var
def 10257:10268 Float singleofintu
R10273:10275 compcert.lib.Integers <> int syndef
R10279:10283 compcert.lib.Floats Float float def
R10359:10373 compcert.lib.Floats Float floatofbinary32 def
R10376:10393 compcert.lib.Floats Float binary_normalize32 def
R10414:10418 Coq.Init.Datatypes <> false constr
R10396:10407 compcert.lib.Integers Int unsigned def
R10409:10409 compcert.lib.Floats <> n var
def 10434:10445 Float singleoflong
R10450:10454 compcert.lib.Integers <> int64 syndef
R10458:10462 compcert.lib.Floats Float float def
R10537:10551 compcert.lib.Floats Float floatofbinary32 def
R10554:10571 compcert.lib.Floats Float binary_normalize32 def
R10592:10596 Coq.Init.Datatypes <> false constr
R10574:10585 compcert.lib.Integers Int64 signed def
R10587:10587 compcert.lib.Floats <> n var
def 10611:10623 Float singleoflongu
R10628:10632 compcert.lib.Integers <> int64 syndef
R10636:10640 compcert.lib.Floats Float float def
R10716:10730 compcert.lib.Floats Float floatofbinary32 def
R10733:10750 compcert.lib.Floats Float binary_normalize32 def
R10773:10777 Coq.Init.Datatypes <> false constr
R10753:10766 compcert.lib.Integers Int64 unsigned def
R10768:10768 compcert.lib.Floats <> n var
def 11209:11216 Float binop_pl
R11224:11231 compcert.flocq.Appli.Fappli_IEEE_bits <> binary64 def
R11240:11240 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R11236:11239 Coq.Init.Datatypes <> bool ind
R11241:11246 compcert.flocq.Appli.Fappli_IEEE <> nan_pl def
R11265:11265 compcert.lib.Floats <> y var
R11262:11262 compcert.lib.Floats <> x var
R11276:11283 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R11293:11300 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R11321:11341 compcert.ia32.Archi <> choose_binop_pl def
R11408:11408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11411:11412 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11435:11435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11413:11430 compcert.lib.Floats Float transform_quiet_pl def
R11368:11368 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11371:11372 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11395:11395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11373:11390 compcert.lib.Floats Float transform_quiet_pl def
R11441:11448 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R11463:11463 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11466:11467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11490:11490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11468:11485 compcert.lib.Floats Float transform_quiet_pl def
R11499:11506 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R11518:11518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11521:11522 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11545:11545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11523:11540 compcert.lib.Floats Float transform_quiet_pl def
R11559:11574 compcert.ia32.Archi <> default_pl def
def 11595:11597 Float add
R11618:11622 compcert.lib.Floats Float float def
R11609:11613 compcert.lib.Floats Float float def
R11600:11604 compcert.lib.Floats Float float def
R11627:11634 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_plus def
R11645:11651 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R11636:11643 compcert.lib.Floats Float binop_pl def
def 11682:11684 Float sub
R11705:11709 compcert.lib.Floats Float float def
R11696:11700 compcert.lib.Floats Float float def
R11687:11691 compcert.lib.Floats Float float def
R11714:11722 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_minus def
R11733:11739 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R11724:11731 compcert.lib.Floats Float binop_pl def
def 11773:11775 Float mul
R11796:11800 compcert.lib.Floats Float float def
R11787:11791 compcert.lib.Floats Float float def
R11778:11782 compcert.lib.Floats Float float def
R11805:11812 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_mult def
R11823:11829 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R11814:11821 compcert.lib.Floats Float binop_pl def
def 11866:11868 Float div
R11889:11893 compcert.lib.Floats Float float def
R11880:11884 compcert.lib.Floats Float float def
R11871:11875 compcert.lib.Floats Float float def
R11898:11904 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_div def
R11915:11921 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R11906:11913 compcert.lib.Floats Float binop_pl def
def 11953:11963 Float order_float
R11972:11976 compcert.lib.Floats Float float def
R11980:11985 Coq.Init.Datatypes <> option ind
R11987:12006 Coq.Init.Datatypes <> comparison ind
R12023:12024 compcert.lib.Floats <> f2 var
R12019:12020 compcert.lib.Floats <> f1 var
R12037:12044 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R12056:12063 compcert.flocq.Appli.Fappli_IEEE <> B754_nan constr
R12072:12075 Coq.Init.Datatypes <> None constr
R12072:12075 Coq.Init.Datatypes <> None constr
R12083:12095 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R12097:12100 Coq.Init.Datatypes <> true constr
R12103:12115 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R12117:12120 Coq.Init.Datatypes <> true constr
R12128:12140 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R12142:12146 Coq.Init.Datatypes <> false constr
R12149:12161 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R12163:12167 Coq.Init.Datatypes <> false constr
R12172:12175 Coq.Init.Datatypes <> Some constr
R12177:12178 Coq.Init.Datatypes <> Eq constr
R12172:12175 Coq.Init.Datatypes <> Some constr
R12177:12178 Coq.Init.Datatypes <> Eq constr
R12186:12198 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R12200:12203 Coq.Init.Datatypes <> true constr
R12211:12214 Coq.Init.Datatypes <> Some constr
R12216:12217 Coq.Init.Datatypes <> Lt constr
R12225:12237 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R12239:12243 Coq.Init.Datatypes <> false constr
R12251:12254 Coq.Init.Datatypes <> Some constr
R12256:12257 Coq.Init.Datatypes <> Gt constr
R12268:12280 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R12282:12285 Coq.Init.Datatypes <> true constr
R12290:12293 Coq.Init.Datatypes <> Some constr
R12295:12296 Coq.Init.Datatypes <> Gt constr
R12307:12319 compcert.flocq.Appli.Fappli_IEEE <> B754_infinity constr
R12321:12325 Coq.Init.Datatypes <> false constr
R12330:12333 Coq.Init.Datatypes <> Some constr
R12335:12336 Coq.Init.Datatypes <> Lt constr
R12344:12354 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R12356:12359 Coq.Init.Datatypes <> true constr
R12368:12376 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R12383:12386 Coq.Init.Datatypes <> Some constr
R12388:12389 Coq.Init.Datatypes <> Lt constr
R12397:12407 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R12409:12413 Coq.Init.Datatypes <> false constr
R12422:12430 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R12437:12440 Coq.Init.Datatypes <> Some constr
R12442:12443 Coq.Init.Datatypes <> Gt constr
R12451:12459 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R12464:12474 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R12476:12479 Coq.Init.Datatypes <> true constr
R12490:12493 Coq.Init.Datatypes <> Some constr
R12495:12496 Coq.Init.Datatypes <> Gt constr
R12504:12512 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R12517:12527 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R12529:12533 Coq.Init.Datatypes <> false constr
R12544:12547 Coq.Init.Datatypes <> Some constr
R12549:12550 Coq.Init.Datatypes <> Lt constr
R12558:12566 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R12571:12579 compcert.flocq.Appli.Fappli_IEEE <> B754_zero constr
R12586:12589 Coq.Init.Datatypes <> Some constr
R12591:12592 Coq.Init.Datatypes <> Eq constr
R12600:12610 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R12624:12634 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R12684:12687 Coq.Init.Datatypes <> true constr
R12690:12694 Coq.Init.Datatypes <> false constr
R12699:12702 Coq.Init.Datatypes <> Some constr
R12704:12705 Coq.Init.Datatypes <> Lt constr
R12717:12721 Coq.Init.Datatypes <> false constr
R12724:12727 Coq.Init.Datatypes <> true constr
R12732:12735 Coq.Init.Datatypes <> Some constr
R12737:12738 Coq.Init.Datatypes <> Gt constr
R12750:12754 Coq.Init.Datatypes <> false constr
R12757:12761 Coq.Init.Datatypes <> false constr
R12782:12789 Coq.ZArith.BinInt <> Zcompare syndef
R12816:12817 Coq.Init.Datatypes <> Lt constr
R12822:12825 Coq.Init.Datatypes <> Some constr
R12827:12828 Coq.Init.Datatypes <> Lt constr
R12844:12845 Coq.Init.Datatypes <> Gt constr
R12850:12853 Coq.Init.Datatypes <> Some constr
R12855:12856 Coq.Init.Datatypes <> Gt constr
R12872:12873 Coq.Init.Datatypes <> Eq constr
R12878:12881 Coq.Init.Datatypes <> Some constr
R12884:12891 Coq.PArith.BinPos <> Pcompare syndef
R12899:12900 Coq.Init.Datatypes <> Eq constr
R12927:12930 Coq.Init.Datatypes <> true constr
R12933:12936 Coq.Init.Datatypes <> true constr
R12957:12964 Coq.ZArith.BinInt <> Zcompare syndef
R12991:12992 Coq.Init.Datatypes <> Lt constr
R12997:13000 Coq.Init.Datatypes <> Some constr
R13002:13003 Coq.Init.Datatypes <> Gt constr
R13019:13020 Coq.Init.Datatypes <> Gt constr
R13025:13028 Coq.Init.Datatypes <> Some constr
R13030:13031 Coq.Init.Datatypes <> Lt constr
R13047:13048 Coq.Init.Datatypes <> Eq constr
R13053:13056 Coq.Init.Datatypes <> Some constr
R13059:13065 Coq.Init.Datatypes <> CompOpp def
R13068:13075 Coq.PArith.BinPos <> Pcompare syndef
R13083:13084 Coq.Init.Datatypes <> Eq constr
def 13131:13133 Float cmp
R13138:13147 compcert.lib.Integers <> comparison ind
R13157:13161 compcert.lib.Floats Float float def
R13166:13169 Coq.Init.Datatypes <> bool ind
R13201:13201 compcert.lib.Floats <> c var
R13212:13214 compcert.lib.Integers <> Ceq constr
R13231:13241 compcert.lib.Floats Float order_float def
R13246:13247 compcert.lib.Floats <> f2 var
R13243:13244 compcert.lib.Floats <> f1 var
R13254:13257 Coq.Init.Datatypes <> Some constr
R13259:13260 Coq.Init.Datatypes <> Eq constr
R13265:13268 Coq.Init.Datatypes <> true constr
R13277:13281 Coq.Init.Datatypes <> false constr
R13291:13293 compcert.lib.Integers <> Cne constr
R13310:13320 compcert.lib.Floats Float order_float def
R13325:13326 compcert.lib.Floats <> f2 var
R13322:13323 compcert.lib.Floats <> f1 var
R13333:13336 Coq.Init.Datatypes <> Some constr
R13338:13339 Coq.Init.Datatypes <> Eq constr
R13344:13348 Coq.Init.Datatypes <> false constr
R13357:13360 Coq.Init.Datatypes <> true constr
R13370:13372 compcert.lib.Integers <> Clt constr
R13389:13399 compcert.lib.Floats Float order_float def
R13404:13405 compcert.lib.Floats <> f2 var
R13401:13402 compcert.lib.Floats <> f1 var
R13412:13415 Coq.Init.Datatypes <> Some constr
R13417:13418 Coq.Init.Datatypes <> Lt constr
R13423:13426 Coq.Init.Datatypes <> true constr
R13435:13439 Coq.Init.Datatypes <> false constr
R13449:13451 compcert.lib.Integers <> Cle constr
R13468:13478 compcert.lib.Floats Float order_float def
R13483:13484 compcert.lib.Floats <> f2 var
R13480:13481 compcert.lib.Floats <> f1 var
R13491:13494 Coq.Init.Datatypes <> Some constr
R13496:13497 Coq.Init.Datatypes <> Lt constr
R13499:13500 Coq.Init.Datatypes <> Eq constr
R13506:13509 Coq.Init.Datatypes <> true constr
R13506:13509 Coq.Init.Datatypes <> true constr
R13518:13522 Coq.Init.Datatypes <> false constr
R13532:13534 compcert.lib.Integers <> Cgt constr
R13551:13561 compcert.lib.Floats Float order_float def
R13566:13567 compcert.lib.Floats <> f2 var
R13563:13564 compcert.lib.Floats <> f1 var
R13574:13577 Coq.Init.Datatypes <> Some constr
R13579:13580 Coq.Init.Datatypes <> Gt constr
R13585:13588 Coq.Init.Datatypes <> true constr
R13597:13601 Coq.Init.Datatypes <> false constr
R13611:13613 compcert.lib.Integers <> Cge constr
R13630:13640 compcert.lib.Floats Float order_float def
R13645:13646 compcert.lib.Floats <> f2 var
R13642:13643 compcert.lib.Floats <> f1 var
R13653:13656 Coq.Init.Datatypes <> Some constr
R13658:13659 Coq.Init.Datatypes <> Gt constr
R13661:13662 Coq.Init.Datatypes <> Eq constr
R13668:13671 Coq.Init.Datatypes <> true constr
R13668:13671 Coq.Init.Datatypes <> true constr
R13680:13684 Coq.Init.Datatypes <> false constr
def 13867:13880 Float bits_of_double
R13886:13890 compcert.lib.Floats Float float def
R13894:13898 compcert.lib.Integers <> int64 syndef
R13903:13912 compcert.lib.Integers Int64 repr def
R13915:13925 compcert.flocq.Appli.Fappli_IEEE_bits <> bits_of_b64 def
R13927:13927 compcert.lib.Floats <> f var
def 13942:13955 Float double_of_bits
R13961:13965 compcert.lib.Integers <> int64 syndef
R13969:13973 compcert.lib.Floats Float float def
R13978:13988 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_of_bits def
R13991:14004 compcert.lib.Integers Int64 unsigned def
R14006:14006 compcert.lib.Floats <> b var
def 14022:14035 Float bits_of_single
R14041:14045 compcert.lib.Floats Float float def
R14050:14052 compcert.lib.Integers <> int syndef
R14057:14064 compcert.lib.Integers Int repr def
R14067:14077 compcert.flocq.Appli.Fappli_IEEE_bits <> bits_of_b32 def
R14080:14094 compcert.lib.Floats Float binary32offloat def
R14096:14096 compcert.lib.Floats <> f var
def 14112:14125 Float single_of_bits
R14131:14133 compcert.lib.Integers <> int syndef
R14137:14141 compcert.lib.Floats Float float def
R14146:14160 compcert.lib.Floats Float floatofbinary32 def
R14163:14173 compcert.flocq.Appli.Fappli_IEEE_bits <> b32_of_bits def
R14176:14187 compcert.lib.Integers Int unsigned def
R14189:14189 compcert.lib.Floats <> b var
def 14206:14215 Float from_words
R14225:14227 compcert.lib.Integers <> int syndef
R14232:14236 compcert.lib.Floats Float float def
R14241:14254 compcert.lib.Floats Float double_of_bits def
R14257:14269 compcert.lib.Integers Int64 ofwords def
R14274:14275 compcert.lib.Floats <> lo var
R14271:14272 compcert.lib.Floats <> hi var
R14529:14537 compcert.flocq.Core.Fcore_Zaux <> radix_val proj
R14551:14556 Coq.ZArith.Zpow_def <> Zpower syndef
R14830:14839 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R14864:14873 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R14896:14905 Coq.ZArith.Zpow_def <> Zpower_pos syndef
prf 14936:14956 Float floatofbinary32_exact
R15056:15059 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15049:15051 Coq.Init.Logic <> :type_scope:x_'='_x not
R15009:15024 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R15031:15045 compcert.lib.Floats Float floatofbinary32 def
R15047:15047 compcert.lib.Floats <> f var
R15052:15055 Coq.Init.Datatypes <> true constr
R15069:15071 Coq.Init.Logic <> :type_scope:x_'='_x not
R15060:15062 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R15068:15068 compcert.lib.Floats <> f var
R15072:15074 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R15081:15095 compcert.lib.Floats Float floatofbinary32 def
R15097:15097 compcert.lib.Floats <> f var
R14994:14996 Coq.Init.Logic <> :type_scope:x_'='_x not
R14972:14987 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R14993:14993 compcert.lib.Floats <> f var
R14997:15000 Coq.Init.Datatypes <> true constr
R15178:15203 compcert.lib.Floats Float binary_normalize64_correct def
R15206:15214 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R15219:15222 Coq.Numbers.BinNums <> Zpos constr
R15178:15203 compcert.lib.Floats Float binary_normalize64_correct def
R15206:15214 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R15219:15222 Coq.Numbers.BinNums <> Zpos constr
R15259:15266 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R15269:15272 Coq.Reals.Rbasic_fun <> Rabs def
R15259:15266 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R15269:15272 Coq.Reals.Rbasic_fun <> Rabs def
R15298:15302 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15304:15306 Coq.Init.Logic <> :type_scope:x_'='_x not
R15298:15302 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15304:15306 Coq.Init.Logic <> :type_scope:x_'='_x not
R15322:15322 Coq.Init.Logic <> :type_scope:x_'='_x not
R15322:15322 Coq.Init.Logic <> :type_scope:x_'='_x not
R15341:15353 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R15367:15386 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R15341:15353 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R15367:15386 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R15400:15424 compcert.flocq.Core.Fcore_generic_fmt <> generic_inclusion_ln_beta thm
R15429:15435 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R15445:15447 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R15439:15441 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R15400:15424 compcert.flocq.Core.Fcore_generic_fmt <> generic_inclusion_ln_beta thm
R15429:15435 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R15445:15447 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R15439:15441 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R15474:15482 Coq.ZArith.Zorder <> Zle_trans syndef
R15492:15507 Coq.ZArith.Zmax <> Zle_max_compat_l syndef
R15517:15532 Coq.ZArith.Zmax <> Zle_max_compat_r syndef
R15474:15482 Coq.ZArith.Zorder <> Zle_trans syndef
R15492:15507 Coq.ZArith.Zmax <> Zle_max_compat_l syndef
R15517:15532 Coq.ZArith.Zmax <> Zle_max_compat_r syndef
R15551:15572 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_canonic thm
R15581:15604 compcert.flocq.Appli.Fappli_IEEE <> canonic_canonic_mantissa thm
R15614:15618 Coq.Init.Logic <> proj1 thm
R15621:15629 Coq.Init.Datatypes <> andb_prop thm
R15551:15572 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_canonic thm
R15581:15604 compcert.flocq.Appli.Fappli_IEEE <> canonic_canonic_mantissa thm
R15614:15618 Coq.Init.Logic <> proj1 thm
R15621:15629 Coq.Init.Datatypes <> andb_prop thm
R15655:15667 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R15694:15708 compcert.lib.Floats Float floatofbinary32 def
R15711:15728 compcert.lib.Floats Float binary_normalize64 def
R15655:15667 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R15762:15764 Coq.Init.Logic <> :type_scope:x_'='_x not
R15765:15768 Coq.Init.Datatypes <> true constr
R15762:15764 Coq.Init.Logic <> :type_scope:x_'='_x not
R15765:15768 Coq.Init.Datatypes <> true constr
R15833:15844 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_0_reg thm
R15833:15844 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_0_reg thm
R15903:15911 Coq.Reals.Raxioms <> Rlt_trans prfax
R15903:15911 Coq.Reals.Raxioms <> Rlt_trans prfax
R15923:15925 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R15939:15946 compcert.flocq.Core.Fcore_float_prop <> F2R_Zabs thm
R15949:15961 compcert.flocq.Core.Fcore_Zaux <> abs_cond_Zopp thm
R15971:15985 compcert.flocq.Appli.Fappli_IEEE <> bounded_lt_emax thm
R15939:15946 compcert.flocq.Core.Fcore_float_prop <> F2R_Zabs thm
R15949:15961 compcert.flocq.Core.Fcore_Zaux <> abs_cond_Zopp thm
R15971:15985 compcert.flocq.Appli.Fappli_IEEE <> bounded_lt_emax thm
R16014:16020 compcert.flocq.Core.Fcore_Raux <> bpow_lt thm
R16014:16020 compcert.flocq.Core.Fcore_Raux <> bpow_lt thm
prf 16035:16063 Float binary32offloatofbinary32_num
R16150:16152 Coq.Init.Logic <> :type_scope:x_'='_x not
R16115:16129 compcert.lib.Floats Float binary32offloat def
R16132:16146 compcert.lib.Floats Float floatofbinary32 def
R16148:16148 compcert.lib.Floats <> f var
R16153:16153 compcert.lib.Floats <> f var
R16091:16093 Coq.Init.Logic <> :type_scope:x_'='_x not
R16079:16084 compcert.flocq.Appli.Fappli_IEEE <> is_nan def
R16090:16090 compcert.lib.Floats <> f var
R16094:16098 Coq.Init.Datatypes <> false constr
R16192:16212 compcert.lib.Floats Float floatofbinary32_exact thm
R16192:16212 compcert.lib.Floats Float floatofbinary32_exact thm
R16296:16302 Coq.Init.Logic <> eq_refl constr
R16296:16302 Coq.Init.Logic <> eq_refl constr
R16330:16344 compcert.lib.Floats Float floatofbinary32 def
R16347:16357 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R16330:16344 compcert.lib.Floats Float floatofbinary32 def
R16347:16357 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R16425:16439 compcert.lib.Floats Float binary32offloat def
R16456:16481 compcert.lib.Floats Float binary_normalize32_correct def
R16484:16492 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R16498:16501 Coq.Numbers.BinNums <> Zpos constr
R16456:16481 compcert.lib.Floats Float binary_normalize32_correct def
R16484:16492 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R16498:16501 Coq.Numbers.BinNums <> Zpos constr
R16525:16527 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R16582:16594 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R16582:16594 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R16613:16625 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R16613:16625 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R16643:16660 compcert.lib.Floats Float binary_normalize32 def
R16671:16677 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R16719:16721 Coq.Init.Logic <> :type_scope:x_'='_x not
R16722:16725 Coq.Init.Datatypes <> true constr
R16719:16721 Coq.Init.Logic <> :type_scope:x_'='_x not
R16722:16725 Coq.Init.Datatypes <> true constr
R16671:16677 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R16789:16800 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_0_reg thm
R16789:16800 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_0_reg thm
R16859:16861 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R16875:16882 compcert.flocq.Core.Fcore_float_prop <> F2R_Zabs thm
R16885:16897 compcert.flocq.Core.Fcore_Zaux <> abs_cond_Zopp thm
R16907:16921 compcert.flocq.Appli.Fappli_IEEE <> bounded_lt_emax thm
R16875:16882 compcert.flocq.Core.Fcore_float_prop <> F2R_Zabs thm
R16885:16897 compcert.flocq.Core.Fcore_Zaux <> abs_cond_Zopp thm
R16907:16921 compcert.flocq.Appli.Fappli_IEEE <> bounded_lt_emax thm
R16946:16965 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R16946:16965 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R16980:16997 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R16980:16997 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
prf 17012:17046 Float floatofbinary32offloatofbinary32_pl
R17179:17181 Coq.Init.Logic <> :type_scope:x_'='_x not
R17068:17076 Coq.Init.Datatypes <> prod_rect scheme
R17111:17119 Coq.Init.Datatypes <> prod_rect scheme
R17154:17171 compcert.lib.Floats Float floatofbinary32_pl def
R17175:17176 compcert.lib.Floats <> pl var
R17173:17173 compcert.lib.Floats <> s var
R17134:17151 compcert.lib.Floats Float binary32offloat_pl def
R17091:17108 compcert.lib.Floats Float floatofbinary32_pl def
R17182:17199 compcert.lib.Floats Float floatofbinary32_pl def
R17203:17204 compcert.lib.Floats <> pl var
R17201:17201 compcert.lib.Floats <> s var
R17236:17253 compcert.lib.Floats Float binary32offloat_pl def
R17256:17273 compcert.lib.Floats Float floatofbinary32_pl def
R17285:17302 compcert.lib.Floats Float transform_quiet_pl def
R17305:17313 Coq.Init.Specif <> proj1_sig def
R17340:17357 compcert.lib.Floats Float nan_payload_fequal thm
R17340:17357 compcert.lib.Floats Float nan_payload_fequal thm
R17369:17382 Coq.PArith.BinPos Pos shiftr_nat def
R17403:17416 compcert.lib.Floats Float lor_idempotent thm
R17403:17416 compcert.lib.Floats Float lor_idempotent thm
R17403:17416 compcert.lib.Floats Float lor_idempotent thm
R17403:17416 compcert.lib.Floats Float lor_idempotent thm
prf 17444:17475 Float floatofbinary32offloatofbinary32
R17544:17546 Coq.Init.Logic <> :type_scope:x_'='_x not
R17491:17505 compcert.lib.Floats Float floatofbinary32 def
R17508:17522 compcert.lib.Floats Float binary32offloat def
R17525:17539 compcert.lib.Floats Float floatofbinary32 def
R17541:17541 compcert.lib.Floats <> f var
R17547:17561 compcert.lib.Floats Float floatofbinary32 def
R17563:17563 compcert.lib.Floats <> f var
R17600:17628 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R17600:17628 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R17600:17628 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R17600:17628 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R17600:17628 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R17648:17662 compcert.lib.Floats Float floatofbinary32 def
R17665:17679 compcert.lib.Floats Float binary32offloat def
R17695:17729 compcert.lib.Floats Float floatofbinary32offloatofbinary32_pl thm
R17695:17729 compcert.lib.Floats Float floatofbinary32offloatofbinary32_pl thm
prf 17764:17798 Float binary32offloatofbinary32offloat_pl
R17932:17934 Coq.Init.Logic <> :type_scope:x_'='_x not
R17820:17828 Coq.Init.Datatypes <> prod_rect scheme
R17863:17871 Coq.Init.Datatypes <> prod_rect scheme
R17907:17924 compcert.lib.Floats Float binary32offloat_pl def
R17928:17929 compcert.lib.Floats <> pl var
R17926:17926 compcert.lib.Floats <> s var
R17887:17904 compcert.lib.Floats Float floatofbinary32_pl def
R17843:17860 compcert.lib.Floats Float binary32offloat_pl def
R17935:17952 compcert.lib.Floats Float binary32offloat_pl def
R17956:17957 compcert.lib.Floats <> pl var
R17954:17954 compcert.lib.Floats <> s var
R17989:18006 compcert.lib.Floats Float binary32offloat_pl def
R18009:18026 compcert.lib.Floats Float floatofbinary32_pl def
R18036:18044 Coq.Init.Datatypes <> prod_rect scheme
R18064:18081 compcert.lib.Floats Float nan_payload_fequal thm
R18064:18081 compcert.lib.Floats Float nan_payload_fequal thm
R18094:18122 compcert.lib.Floats Float transform_quiet_pl_idempotent thm
R18094:18122 compcert.lib.Floats Float transform_quiet_pl_idempotent thm
R18134:18151 compcert.lib.Floats Float transform_quiet_pl def
R18154:18162 Coq.Init.Specif <> proj1_sig def
R18185:18185 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18185:18185 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18221:18234 Coq.PArith.BinPos Pos shiftr_nat def
R18237:18250 Coq.PArith.BinPos Pos shiftl_nat def
R18295:18308 compcert.lib.Floats Float lor_idempotent thm
R18295:18308 compcert.lib.Floats Float lor_idempotent thm
R18356:18363 Coq.PArith.BinPos Pos div2 def
R18331:18345 Coq.Init.Peano <> nat_iter_succ_r thm
R18356:18363 Coq.PArith.BinPos Pos div2 def
R18331:18345 Coq.Init.Peano <> nat_iter_succ_r thm
R18356:18363 Coq.PArith.BinPos Pos div2 def
R18331:18345 Coq.Init.Peano <> nat_iter_succ_r thm
R18356:18363 Coq.PArith.BinPos Pos div2 def
R18331:18345 Coq.Init.Peano <> nat_iter_succ_r thm
R18478:18485 Coq.PArith.BinPos Pos div2 def
R18453:18467 Coq.Init.Peano <> nat_iter_succ_r thm
R18478:18485 Coq.PArith.BinPos Pos div2 def
R18453:18467 Coq.Init.Peano <> nat_iter_succ_r thm
R18478:18485 Coq.PArith.BinPos Pos div2 def
R18453:18467 Coq.Init.Peano <> nat_iter_succ_r thm
R18478:18485 Coq.PArith.BinPos Pos div2 def
R18453:18467 Coq.Init.Peano <> nat_iter_succ_r thm
prf 18507:18538 Float binary32offloatofbinary32offloat
R18607:18609 Coq.Init.Logic <> :type_scope:x_'='_x not
R18554:18568 compcert.lib.Floats Float binary32offloat def
R18571:18585 compcert.lib.Floats Float floatofbinary32 def
R18588:18602 compcert.lib.Floats Float binary32offloat def
R18604:18604 compcert.lib.Floats <> f var
R18610:18624 compcert.lib.Floats Float binary32offloat def
R18626:18626 compcert.lib.Floats <> f var
R18663:18691 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R18663:18691 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R18663:18691 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R18663:18691 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R18663:18691 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R18718:18732 compcert.lib.Floats Float floatofbinary32 def
R18735:18749 compcert.lib.Floats Float binary32offloat def
R18765:18799 compcert.lib.Floats Float binary32offloatofbinary32offloat_pl thm
R18765:18799 compcert.lib.Floats Float binary32offloatofbinary32offloat_pl thm
R18832:18860 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R18832:18860 compcert.lib.Floats Float binary32offloatofbinary32_num thm
R18885:18902 compcert.lib.Floats Float binary_normalize32 def
R18919:18944 compcert.lib.Floats Float binary_normalize32_correct def
R18947:18955 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R18960:18964 Coq.ZArith.BinInt Z pos syndef
R18919:18944 compcert.lib.Floats Float binary_normalize32_correct def
R18947:18955 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R18960:18964 Coq.ZArith.BinInt Z pos syndef
R18987:19002 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize def
R19034:19041 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R0:-1 compcert.lib.Floats <> y var
R19069:19083 compcert.flocq.Appli.Fappli_IEEE <> binary_overflow def
R19114:19128 compcert.flocq.Appli.Fappli_IEEE <> overflow_to_inf def
prf 19164:19181 Float singleoffloat_idem
R19227:19229 Coq.Init.Logic <> :type_scope:x_'='_x not
R19196:19208 compcert.lib.Floats Float singleoffloat def
R19211:19223 compcert.lib.Floats Float singleoffloat def
R19225:19225 compcert.lib.Floats <> f var
R19230:19242 compcert.lib.Floats Float singleoffloat def
R19244:19244 compcert.lib.Floats <> f var
R19271:19283 compcert.lib.Floats Float singleoffloat def
R19294:19325 compcert.lib.Floats Float binary32offloatofbinary32offloat thm
R19294:19325 compcert.lib.Floats Float binary32offloatofbinary32offloat thm
prf 19355:19371 Float singleoflong_idem
R19416:19418 Coq.Init.Logic <> :type_scope:x_'='_x not
R19386:19398 compcert.lib.Floats Float singleoffloat def
R19401:19412 compcert.lib.Floats Float singleoflong def
R19414:19414 compcert.lib.Floats <> n var
R19419:19430 compcert.lib.Floats Float singleoflong def
R19432:19432 compcert.lib.Floats <> n var
R19459:19471 compcert.lib.Floats Float singleoffloat def
R19474:19485 compcert.lib.Floats Float singleoflong def
R19496:19527 compcert.lib.Floats Float floatofbinary32offloatofbinary32 thm
R19496:19527 compcert.lib.Floats Float floatofbinary32offloatofbinary32 thm
prf 19557:19574 Float singleoflongu_idem
R19620:19622 Coq.Init.Logic <> :type_scope:x_'='_x not
R19589:19601 compcert.lib.Floats Float singleoffloat def
R19604:19616 compcert.lib.Floats Float singleoflongu def
R19618:19618 compcert.lib.Floats <> n var
R19623:19635 compcert.lib.Floats Float singleoflongu def
R19637:19637 compcert.lib.Floats <> n var
R19664:19676 compcert.lib.Floats Float singleoffloat def
R19679:19691 compcert.lib.Floats Float singleoflongu def
R19702:19733 compcert.lib.Floats Float floatofbinary32offloatofbinary32 thm
R19702:19733 compcert.lib.Floats Float floatofbinary32offloatofbinary32 thm
def 19766:19774 Float is_single
R19780:19784 compcert.lib.Floats Float float def
R19797:19803 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19805:19806 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19808:19810 Coq.Init.Logic <> :type_scope:x_'='_x not
R19807:19807 compcert.lib.Floats <> f var
R19811:19825 compcert.lib.Floats Float floatofbinary32 def
R19827:19827 compcert.lib.Floats <> s var
prf 19839:19861 Float singleoffloat_is_single
R19876:19884 compcert.lib.Floats Float is_single def
R19887:19899 compcert.lib.Floats Float singleoffloat def
R19901:19901 compcert.lib.Floats <> f var
R19930:19944 compcert.lib.Floats Float binary32offloat def
R19930:19944 compcert.lib.Floats Float binary32offloat def
prf 19970:19992 Float singleoffloat_of_single
R20037:20039 Coq.Init.Logic <> :type_scope:x_'='_x not
R20022:20034 compcert.lib.Floats Float singleoffloat def
R20036:20036 compcert.lib.Floats <> f var
R20040:20040 compcert.lib.Floats <> f var
R20007:20015 compcert.lib.Floats Float is_single def
R20017:20017 compcert.lib.Floats <> f var
R20098:20110 compcert.lib.Floats Float singleoffloat def
R20121:20152 compcert.lib.Floats Float floatofbinary32offloatofbinary32 thm
R20121:20152 compcert.lib.Floats Float floatofbinary32offloatofbinary32 thm
prf 20169:20181 Float is_single_dec
R20194:20194 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R20206:20210 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R20223:20223 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R20195:20203 compcert.lib.Floats Float is_single def
R20205:20205 compcert.lib.Floats <> f var
R20211:20211 Coq.Init.Logic <> :type_scope:'~'_x not
R20212:20220 compcert.lib.Floats Float is_single def
R20222:20222 compcert.lib.Floats <> f var
R20249:20254 compcert.lib.Floats Float eq_dec def
R20257:20269 compcert.lib.Floats Float singleoffloat def
R20249:20254 compcert.lib.Floats Float eq_dec def
R20257:20269 compcert.lib.Floats Float singleoffloat def
R20295:20307 compcert.lib.Floats Float singleoffloat def
R20329:20343 compcert.lib.Floats Float binary32offloat def
R20329:20343 compcert.lib.Floats Float binary32offloat def
R20391:20413 compcert.lib.Floats Float singleoffloat_of_single thm
R20391:20413 compcert.lib.Floats Float singleoffloat_of_single thm
prf 20505:20514 Float add_commut
R20586:20588 Coq.Init.Logic <> :type_scope:x_'='_x not
R20579:20581 compcert.lib.Floats Float add def
R20585:20585 compcert.lib.Floats <> y var
R20583:20583 compcert.lib.Floats <> x var
R20589:20591 compcert.lib.Floats Float add def
R20595:20595 compcert.lib.Floats <> x var
R20593:20593 compcert.lib.Floats <> y var
R20551:20554 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R20543:20545 Coq.Init.Logic <> :type_scope:x_'='_x not
R20531:20536 compcert.flocq.Appli.Fappli_IEEE <> is_nan def
R20542:20542 compcert.lib.Floats <> x var
R20546:20550 Coq.Init.Datatypes <> false constr
R20567:20569 Coq.Init.Logic <> :type_scope:x_'='_x not
R20555:20560 compcert.flocq.Appli.Fappli_IEEE <> is_nan def
R20566:20566 compcert.lib.Floats <> y var
R20570:20574 Coq.Init.Datatypes <> false constr
R20630:20632 compcert.lib.Floats Float add def
R20635:20642 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_plus def
R20660:20672 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R20707:20713 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R20698:20705 compcert.lib.Floats Float binop_pl def
R20690:20696 Coq.Init.Logic <> eq_refl constr
R20682:20688 Coq.Init.Logic <> eq_refl constr
R20660:20672 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R20707:20713 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R20698:20705 compcert.lib.Floats Float binop_pl def
R20690:20696 Coq.Init.Logic <> eq_refl constr
R20682:20688 Coq.Init.Logic <> eq_refl constr
R20735:20747 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R20782:20788 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R20773:20780 compcert.lib.Floats Float binop_pl def
R20765:20771 Coq.Init.Logic <> eq_refl constr
R20757:20763 Coq.Init.Logic <> eq_refl constr
R20735:20747 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R20782:20788 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R20773:20780 compcert.lib.Floats Float binop_pl def
R20765:20771 Coq.Init.Logic <> eq_refl constr
R20757:20763 Coq.Init.Logic <> eq_refl constr
R20805:20809 compcert.flocq.Appli.Fappli_IEEE <> Bplus def
R20858:20864 compcert.flocq.Core.Fcore_Raux <> eqb_sym thm
R20858:20864 compcert.flocq.Core.Fcore_Raux <> eqb_sym thm
R20883:20885 Coq.Bool.Bool <> eqb def
R20883:20885 Coq.Bool.Bool <> eqb def
R20923:20930 Coq.Bool.Bool <> eqb_prop thm
R20923:20930 Coq.Bool.Bool <> eqb_prop thm
R20950:20956 compcert.flocq.Core.Fcore_Raux <> eqb_sym thm
R20950:20956 compcert.flocq.Core.Fcore_Raux <> eqb_sym thm
R20975:20977 Coq.Bool.Bool <> eqb def
R20975:20977 Coq.Bool.Bool <> eqb def
R21011:21018 Coq.Bool.Bool <> eqb_prop thm
R21011:21018 Coq.Bool.Bool <> eqb_prop thm
R0:-1 compcert.lib.Floats <> y var
R21142:21152 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R21142:21152 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R21190:21192 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R21190:21192 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R21218:21228 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R21218:21228 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R21262:21264 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R21262:21264 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R21289:21298 Coq.Reals.Raxioms <> Rplus_comm prfax
R21289:21298 Coq.Reals.Raxioms <> Rplus_comm prfax
R21317:21324 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R21376:21388 compcert.flocq.Appli.Fappli_IEEE <> B2R_Bsign_inj thm
R21376:21388 compcert.flocq.Appli.Fappli_IEEE <> B2R_Bsign_inj thm
R21435:21444 Coq.ZArith.BinInt Z add_comm thm
R21435:21444 Coq.ZArith.BinInt Z add_comm thm
R21455:21464 Coq.ZArith.BinInt Z min_comm thm
R21455:21464 Coq.ZArith.BinInt Z min_comm thm
R21509:21516 compcert.flocq.Appli.Fappli_IEEE <> B2FF_inj thm
R21509:21516 compcert.flocq.Appli.Fappli_IEEE <> B2FF_inj thm
prf 21579:21588 Float mul_commut
R21660:21662 Coq.Init.Logic <> :type_scope:x_'='_x not
R21653:21655 compcert.lib.Floats Float mul def
R21659:21659 compcert.lib.Floats <> y var
R21657:21657 compcert.lib.Floats <> x var
R21663:21665 compcert.lib.Floats Float mul def
R21669:21669 compcert.lib.Floats <> x var
R21667:21667 compcert.lib.Floats <> y var
R21625:21628 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21617:21619 Coq.Init.Logic <> :type_scope:x_'='_x not
R21605:21610 compcert.flocq.Appli.Fappli_IEEE <> is_nan def
R21616:21616 compcert.lib.Floats <> x var
R21620:21624 Coq.Init.Datatypes <> false constr
R21641:21643 Coq.Init.Logic <> :type_scope:x_'='_x not
R21629:21634 compcert.flocq.Appli.Fappli_IEEE <> is_nan def
R21640:21640 compcert.lib.Floats <> y var
R21644:21648 Coq.Init.Datatypes <> false constr
R21704:21706 compcert.lib.Floats Float mul def
R21709:21716 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_mult def
R21734:21746 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R21781:21787 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R21772:21779 compcert.lib.Floats Float binop_pl def
R21764:21770 Coq.Init.Logic <> eq_refl constr
R21756:21762 Coq.Init.Logic <> eq_refl constr
R21734:21746 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R21781:21787 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R21772:21779 compcert.lib.Floats Float binop_pl def
R21764:21770 Coq.Init.Logic <> eq_refl constr
R21756:21762 Coq.Init.Logic <> eq_refl constr
R21809:21821 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R21856:21862 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R21847:21854 compcert.lib.Floats Float binop_pl def
R21839:21845 Coq.Init.Logic <> eq_refl constr
R21831:21837 Coq.Init.Logic <> eq_refl constr
R21809:21821 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R21856:21862 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R21847:21854 compcert.lib.Floats Float binop_pl def
R21839:21845 Coq.Init.Logic <> eq_refl constr
R21831:21837 Coq.Init.Logic <> eq_refl constr
R21879:21883 compcert.flocq.Appli.Fappli_IEEE <> Bmult def
R21938:21946 Coq.Bool.Bool <> xorb_comm thm
R21938:21946 Coq.Bool.Bool <> xorb_comm thm
R21967:21975 Coq.Bool.Bool <> xorb_comm thm
R21967:21975 Coq.Bool.Bool <> xorb_comm thm
R21996:22004 Coq.Bool.Bool <> xorb_comm thm
R21996:22004 Coq.Bool.Bool <> xorb_comm thm
R22025:22033 Coq.Bool.Bool <> xorb_comm thm
R22025:22033 Coq.Bool.Bool <> xorb_comm thm
R0:-1 compcert.lib.Floats <> y var
R22092:22100 Coq.Bool.Bool <> xorb_comm thm
R22092:22100 Coq.Bool.Bool <> xorb_comm thm
R22121:22129 Coq.Bool.Bool <> xorb_comm thm
R22121:22129 Coq.Bool.Bool <> xorb_comm thm
R22145:22155 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R22145:22155 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R22198:22200 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R22198:22200 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R22231:22241 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R22231:22241 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R22280:22282 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R22280:22282 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R22312:22321 Coq.Reals.Raxioms <> Rmult_comm prfax
R22312:22321 Coq.Reals.Raxioms <> Rmult_comm prfax
R22345:22352 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R22427:22439 compcert.flocq.Appli.Fappli_IEEE <> B2R_Bsign_inj thm
R22427:22439 compcert.flocq.Appli.Fappli_IEEE <> B2R_Bsign_inj thm
R22488:22497 compcert.flocq.Appli.Fappli_IEEE <> Bsign_FF2B thm
R22488:22497 compcert.flocq.Appli.Fappli_IEEE <> Bsign_FF2B thm
R22488:22497 compcert.flocq.Appli.Fappli_IEEE <> Bsign_FF2B thm
R22488:22497 compcert.flocq.Appli.Fappli_IEEE <> Bsign_FF2B thm
R22524:22532 Coq.Bool.Bool <> xorb_comm thm
R22524:22532 Coq.Bool.Bool <> xorb_comm thm
R22541:22552 Coq.PArith.BinPos Pos mul_comm thm
R22541:22552 Coq.PArith.BinPos Pos mul_comm thm
R22561:22570 Coq.ZArith.BinInt Z add_comm thm
R22561:22570 Coq.ZArith.BinInt Z add_comm thm
R22581:22588 compcert.flocq.Appli.Fappli_IEEE <> B2FF_inj thm
R22581:22588 compcert.flocq.Appli.Fappli_IEEE <> B2FF_inj thm
R22624:22632 Coq.Bool.Bool <> xorb_comm thm
R22624:22632 Coq.Bool.Bool <> xorb_comm thm
prf 22691:22716 Float order_float_finite_correct
R22799:22809 compcert.lib.Floats Float order_float def
R22814:22815 compcert.lib.Floats <> f2 var
R22811:22812 compcert.lib.Floats <> f1 var
R22830:22833 Coq.Init.Datatypes <> Some constr
R22874:22876 Coq.Init.Logic <> :type_scope:x_'='_x not
R22840:22847 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R22863:22865 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R22871:22872 compcert.lib.Floats <> f2 var
R22850:22852 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R22858:22859 compcert.lib.Floats <> f1 var
R22887:22890 Coq.Init.Datatypes <> None constr
R22895:22899 Coq.Init.Logic <> False ind
R22778:22780 Coq.Init.Logic <> :type_scope:x_'='_x not
R22762:22770 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R22776:22777 compcert.lib.Floats <> f2 var
R22781:22784 Coq.Init.Datatypes <> true constr
R22751:22753 Coq.Init.Logic <> :type_scope:x_'='_x not
R22735:22743 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R22749:22750 compcert.lib.Floats <> f1 var
R22754:22757 Coq.Init.Datatypes <> true constr
R22987:22989 Coq.Init.Logic <> :type_scope:x_'='_x not
R22975:22982 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R22990:22991 Coq.Init.Datatypes <> Lt constr
R22987:22989 Coq.Init.Logic <> :type_scope:x_'='_x not
R22975:22982 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R22990:22991 Coq.Init.Datatypes <> Lt constr
R23041:23043 Coq.Init.Logic <> :type_scope:x_'='_x not
R23029:23036 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R23044:23045 Coq.Init.Datatypes <> Eq constr
R23041:23043 Coq.Init.Logic <> :type_scope:x_'='_x not
R23029:23036 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R23044:23045 Coq.Init.Datatypes <> Eq constr
R23095:23097 Coq.Init.Logic <> :type_scope:x_'='_x not
R23083:23090 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R23098:23099 Coq.Init.Datatypes <> Gt constr
R23095:23097 Coq.Init.Logic <> :type_scope:x_'='_x not
R23083:23090 compcert.flocq.Core.Fcore_Raux <> Rcompare def
R23098:23099 Coq.Init.Datatypes <> Gt constr
R23112:23122 compcert.flocq.Core.Fcore_Raux <> Rcompare_Gt thm
R23058:23068 compcert.flocq.Core.Fcore_Raux <> Rcompare_Eq thm
R23004:23014 compcert.flocq.Core.Fcore_Raux <> Rcompare_Lt thm
R23142:23152 compcert.lib.Floats Float order_float def
R23207:23209 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R23212:23214 compcert.flocq.Core.Fcore_defs <> F2R def
R23217:23220 compcert.flocq.Core.Fcore_defs <> Fnum proj
R23223:23226 compcert.flocq.Core.Fcore_defs <> Fexp proj
R23229:23237 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R23272:23274 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R23267:23269 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23275:23278 compcert.flocq.Core.Fcore_Raux <> bpow def
R23280:23285 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23302:23304 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23357:23365 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R23331:23345 compcert.flocq.Core.Fcore_Raux <> Rcompare_mult_r thm
R23377:23388 compcert.flocq.Core.Fcore_Raux <> Rcompare_Z2R thm
R23272:23274 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R23267:23269 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23275:23278 compcert.flocq.Core.Fcore_Raux <> bpow def
R23272:23274 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R23267:23269 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23275:23278 compcert.flocq.Core.Fcore_Raux <> bpow def
R23280:23285 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23302:23304 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23331:23345 compcert.flocq.Core.Fcore_Raux <> Rcompare_mult_r thm
R23357:23365 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R23377:23388 compcert.flocq.Core.Fcore_Raux <> Rcompare_Z2R thm
R23272:23274 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R23267:23269 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23275:23278 compcert.flocq.Core.Fcore_Raux <> bpow def
R23280:23285 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23302:23304 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23331:23345 compcert.flocq.Core.Fcore_Raux <> Rcompare_mult_r thm
R23357:23365 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R23377:23388 compcert.flocq.Core.Fcore_Raux <> Rcompare_Z2R thm
R23272:23274 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R23267:23269 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23275:23278 compcert.flocq.Core.Fcore_Raux <> bpow def
R23280:23285 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23302:23304 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23331:23345 compcert.flocq.Core.Fcore_Raux <> Rcompare_mult_r thm
R23500:23508 Coq.Init.Datatypes <> andb_prop thm
R23537:23560 compcert.flocq.Appli.Fappli_IEEE <> canonic_canonic_mantissa thm
R23566:23570 Coq.Init.Datatypes <> false constr
R23500:23508 Coq.Init.Datatypes <> andb_prop thm
R23537:23560 compcert.flocq.Appli.Fappli_IEEE <> canonic_canonic_mantissa thm
R23566:23570 Coq.Init.Datatypes <> false constr
R23587:23595 Coq.Init.Datatypes <> andb_prop thm
R23624:23647 compcert.flocq.Appli.Fappli_IEEE <> canonic_canonic_mantissa thm
R23653:23657 Coq.Init.Datatypes <> false constr
R23587:23595 Coq.Init.Datatypes <> andb_prop thm
R23624:23647 compcert.flocq.Appli.Fappli_IEEE <> canonic_canonic_mantissa thm
R23653:23657 Coq.Init.Datatypes <> false constr
R23681:23693 compcert.flocq.Core.Fcore_Zaux <> Zcompare_spec thm
R23709:23715 compcert.flocq.Core.Fcore_generic_fmt <> canonic def
R23718:23721 compcert.flocq.Core.Fcore_defs <> Fexp proj
R23681:23693 compcert.flocq.Core.Fcore_Zaux <> Zcompare_spec thm
R23790:23792 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R23777:23779 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23782:23785 Coq.Numbers.BinNums <> Zpos constr
R23787:23788 compcert.lib.Floats <> m1 var
R23793:23796 compcert.flocq.Core.Fcore_Raux <> bpow def
R23805:23806 compcert.lib.Floats <> e1 var
R23798:23803 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23841:23843 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R23828:23830 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23833:23836 Coq.Numbers.BinNums <> Zpos constr
R23838:23839 compcert.lib.Floats <> m2 var
R23844:23847 compcert.flocq.Core.Fcore_Raux <> bpow def
R23856:23857 compcert.lib.Floats <> e2 var
R23849:23854 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23968:23970 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R23967:23967 compcert.lib.Floats <> x var
R23971:23971 compcert.lib.Floats <> y var
R23914:23916 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R23869:23879 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R23913:23913 compcert.lib.Floats <> x var
R23889:23895 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R23904:23904 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R23899:23899 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R23881:23886 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23917:23927 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R23961:23961 compcert.lib.Floats <> y var
R23937:23943 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R23952:23952 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R23947:23947 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R23929:23934 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23790:23792 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R23777:23779 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23782:23785 Coq.Numbers.BinNums <> Zpos constr
R23787:23788 compcert.lib.Floats <> m1 var
R23793:23796 compcert.flocq.Core.Fcore_Raux <> bpow def
R23805:23806 compcert.lib.Floats <> e1 var
R23798:23803 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23841:23843 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R23828:23830 compcert.flocq.Core.Fcore_Raux <> Z2R def
R23833:23836 Coq.Numbers.BinNums <> Zpos constr
R23838:23839 compcert.lib.Floats <> m2 var
R23844:23847 compcert.flocq.Core.Fcore_Raux <> bpow def
R23856:23857 compcert.lib.Floats <> e2 var
R23849:23854 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23968:23970 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R23967:23967 compcert.lib.Floats <> x var
R23971:23971 compcert.lib.Floats <> y var
R23914:23916 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R23869:23879 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R23913:23913 compcert.lib.Floats <> x var
R23889:23895 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R23904:23904 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R23899:23899 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R23881:23886 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23917:23927 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R23961:23961 compcert.lib.Floats <> y var
R23937:23943 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R23952:23952 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R23947:23947 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R23929:23934 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23994:24003 Coq.Reals.RIneq <> Rnot_le_lt thm
R24020:24029 compcert.flocq.Core.Fcore_Raux <> ln_beta_le thm
R24031:24036 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R23994:24003 Coq.Reals.RIneq <> Rnot_le_lt thm
R24020:24029 compcert.flocq.Core.Fcore_Raux <> ln_beta_le thm
R24031:24036 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R24055:24067 compcert.flocq.Appli.Fappli_IEEE <> fexp_monotone inst
R24092:24102 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R24055:24067 compcert.flocq.Appli.Fappli_IEEE <> fexp_monotone inst
R24126:24142 Coq.Reals.RIneq <> Rmult_gt_0_compat thm
R24153:24158 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R24186:24194 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R24126:24142 Coq.Reals.RIneq <> Rmult_gt_0_compat thm
R24153:24158 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R24186:24194 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R24261:24263 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R24244:24246 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R24229:24231 compcert.flocq.Core.Fcore_Raux <> Z2R def
R24234:24235 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R24236:24239 Coq.Numbers.BinNums <> Zpos constr
R24241:24242 compcert.lib.Floats <> m1 var
R24247:24250 compcert.flocq.Core.Fcore_Raux <> bpow def
R24259:24260 compcert.lib.Floats <> e1 var
R24252:24257 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R24277:24279 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R24264:24266 compcert.flocq.Core.Fcore_Raux <> Z2R def
R24269:24272 Coq.Numbers.BinNums <> Zpos constr
R24274:24275 compcert.lib.Floats <> m2 var
R24280:24283 compcert.flocq.Core.Fcore_Raux <> bpow def
R24292:24293 compcert.lib.Floats <> e2 var
R24285:24290 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R24261:24263 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R24244:24246 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R24229:24231 compcert.flocq.Core.Fcore_Raux <> Z2R def
R24234:24235 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R24236:24239 Coq.Numbers.BinNums <> Zpos constr
R24241:24242 compcert.lib.Floats <> m1 var
R24247:24250 compcert.flocq.Core.Fcore_Raux <> bpow def
R24259:24260 compcert.lib.Floats <> e1 var
R24252:24257 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R24277:24279 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R24264:24266 compcert.flocq.Core.Fcore_Raux <> Z2R def
R24269:24272 Coq.Numbers.BinNums <> Zpos constr
R24274:24275 compcert.lib.Floats <> m2 var
R24280:24283 compcert.flocq.Core.Fcore_Raux <> bpow def
R24292:24293 compcert.lib.Floats <> e2 var
R24285:24290 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R24317:24325 Coq.Reals.Raxioms <> Rlt_trans prfax
R24317:24325 Coq.Reals.Raxioms <> Rlt_trans prfax
R24356:24356 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R24357:24360 compcert.flocq.Core.Fcore_Raux <> bpow def
R24362:24367 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R24390:24406 Coq.Reals.RIneq <> Rmult_lt_compat_r thm
R24420:24428 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R24454:24459 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R24356:24356 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R24357:24360 compcert.flocq.Core.Fcore_Raux <> bpow def
R24362:24367 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R24390:24406 Coq.Reals.RIneq <> Rmult_lt_compat_r thm
R24420:24428 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R24454:24459 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R24476:24492 Coq.Reals.RIneq <> Rmult_gt_0_compat thm
R24503:24508 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R24536:24544 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R24476:24492 Coq.Reals.RIneq <> Rmult_gt_0_compat thm
R24503:24508 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R24536:24544 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R24723:24729 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R24732:24756 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R24771:24787 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R24890:24898 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R24850:24864 compcert.flocq.Core.Fcore_Raux <> Rcompare_mult_r thm
R24867:24878 compcert.flocq.Core.Fcore_Raux <> Rcompare_Z2R thm
R24723:24729 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R24732:24756 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R24723:24729 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R24732:24756 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R24771:24787 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R24723:24729 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R24732:24756 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R24723:24729 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R24732:24756 Coq.Reals.RIneq <> Ropp_mult_distr_l_reverse thm
R24771:24787 Coq.Reals.RIneq <> Ropp_lt_contravar thm
R24850:24864 compcert.flocq.Core.Fcore_Raux <> Rcompare_mult_r thm
R24890:24898 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R24867:24878 compcert.flocq.Core.Fcore_Raux <> Rcompare_Z2R thm
R24850:24864 compcert.flocq.Core.Fcore_Raux <> Rcompare_mult_r thm
R24890:24898 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R24867:24878 compcert.flocq.Core.Fcore_Raux <> Rcompare_Z2R thm
prf 24929:24936 Float cmp_swap
R24988:24990 Coq.Init.Logic <> :type_scope:x_'='_x not
R24955:24963 compcert.lib.Floats Float cmp def
R24987:24987 compcert.lib.Floats <> y var
R24985:24985 compcert.lib.Floats <> x var
R24966:24980 compcert.lib.Integers <> swap_comparison def
R24982:24982 compcert.lib.Floats <> c var
R24991:24999 compcert.lib.Floats Float cmp def
R25005:25005 compcert.lib.Floats <> x var
R25003:25003 compcert.lib.Floats <> y var
R25001:25001 compcert.lib.Floats <> c var
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25106:25121 Coq.ZArith.Zcompare <> Zcompare_antisym thm
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25141:25144 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25176:25177 Coq.Init.Datatypes <> Eq constr
R25185:25191 Coq.Init.Datatypes <> CompOpp def
R25193:25194 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25210:25225 Coq.PArith.BinPos <> Pcompare_antisym syndef
R25232:25233 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
R25258:25265 Coq.PArith.BinPos <> Pcompare syndef
R25272:25273 Coq.Init.Datatypes <> Eq constr
prf 25304:25312 Float cmp_ne_eq
R25344:25346 Coq.Init.Logic <> :type_scope:x_'='_x not
R25331:25333 compcert.lib.Floats Float cmp def
R25342:25343 compcert.lib.Floats <> f2 var
R25339:25340 compcert.lib.Floats <> f1 var
R25335:25337 compcert.lib.Integers <> Cne constr
R25347:25350 Coq.Init.Datatypes <> negb def
R25353:25355 compcert.lib.Floats Float cmp def
R25364:25365 compcert.lib.Floats <> f2 var
R25361:25362 compcert.lib.Floats <> f1 var
R25357:25359 compcert.lib.Integers <> Ceq constr
R25385:25387 compcert.lib.Floats Float cmp def
R25408:25418 compcert.lib.Floats Float order_float def
R25408:25418 compcert.lib.Floats Float order_float def
prf 25467:25481 Float cmp_lt_eq_false
R25548:25552 Coq.Init.Logic <> False ind
R25537:25539 Coq.Init.Logic <> :type_scope:x_'='_x not
R25524:25526 compcert.lib.Floats Float cmp def
R25535:25536 compcert.lib.Floats <> f2 var
R25532:25533 compcert.lib.Floats <> f1 var
R25528:25530 compcert.lib.Integers <> Ceq constr
R25540:25543 Coq.Init.Datatypes <> true constr
R25513:25515 Coq.Init.Logic <> :type_scope:x_'='_x not
R25500:25502 compcert.lib.Floats Float cmp def
R25511:25512 compcert.lib.Floats <> f2 var
R25508:25509 compcert.lib.Floats <> f1 var
R25504:25506 compcert.lib.Integers <> Clt constr
R25516:25519 Coq.Init.Datatypes <> true constr
R25571:25573 compcert.lib.Floats Float cmp def
R25594:25604 compcert.lib.Floats Float order_float def
R25594:25604 compcert.lib.Floats Float order_float def
prf 25654:25665 Float cmp_le_lt_eq
R25697:25699 Coq.Init.Logic <> :type_scope:x_'='_x not
R25684:25686 compcert.lib.Floats Float cmp def
R25695:25696 compcert.lib.Floats <> f2 var
R25692:25693 compcert.lib.Floats <> f1 var
R25688:25690 compcert.lib.Integers <> Cle constr
R25713:25716 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R25700:25702 compcert.lib.Floats Float cmp def
R25711:25712 compcert.lib.Floats <> f2 var
R25708:25709 compcert.lib.Floats <> f1 var
R25704:25706 compcert.lib.Integers <> Clt constr
R25717:25719 compcert.lib.Floats Float cmp def
R25728:25729 compcert.lib.Floats <> f2 var
R25725:25726 compcert.lib.Floats <> f1 var
R25721:25723 compcert.lib.Integers <> Ceq constr
R25748:25750 compcert.lib.Floats Float cmp def
R25771:25781 compcert.lib.Floats Float order_float def
R25771:25781 compcert.lib.Floats Float order_float def
prf 25832:25846 Float cmp_gt_eq_false
R25907:25911 Coq.Init.Logic <> False ind
R25896:25898 Coq.Init.Logic <> :type_scope:x_'='_x not
R25885:25887 compcert.lib.Floats Float cmp def
R25895:25895 compcert.lib.Floats <> y var
R25893:25893 compcert.lib.Floats <> x var
R25889:25891 compcert.lib.Integers <> Ceq constr
R25899:25902 Coq.Init.Datatypes <> true constr
R25874:25876 Coq.Init.Logic <> :type_scope:x_'='_x not
R25863:25865 compcert.lib.Floats Float cmp def
R25873:25873 compcert.lib.Floats <> y var
R25871:25871 compcert.lib.Floats <> x var
R25867:25869 compcert.lib.Integers <> Cgt constr
R25877:25880 Coq.Init.Datatypes <> true constr
R25942:25949 compcert.lib.Floats Float cmp_swap thm
R25968:25975 compcert.lib.Floats Float cmp_swap thm
R25993:26007 compcert.lib.Floats Float cmp_lt_eq_false thm
R25942:25949 compcert.lib.Floats Float cmp_swap thm
R25968:25975 compcert.lib.Floats Float cmp_swap thm
R25993:26007 compcert.lib.Floats Float cmp_lt_eq_false thm
prf 26037:26048 Float cmp_ge_gt_eq
R26080:26082 Coq.Init.Logic <> :type_scope:x_'='_x not
R26067:26069 compcert.lib.Floats Float cmp def
R26078:26079 compcert.lib.Floats <> f2 var
R26075:26076 compcert.lib.Floats <> f1 var
R26071:26073 compcert.lib.Integers <> Cge constr
R26096:26099 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R26083:26085 compcert.lib.Floats Float cmp def
R26094:26095 compcert.lib.Floats <> f2 var
R26091:26092 compcert.lib.Floats <> f1 var
R26087:26089 compcert.lib.Integers <> Cgt constr
R26100:26102 compcert.lib.Floats Float cmp def
R26111:26112 compcert.lib.Floats <> f2 var
R26108:26109 compcert.lib.Floats <> f1 var
R26104:26106 compcert.lib.Integers <> Ceq constr
R26151:26165 compcert.lib.Integers <> swap_comparison def
R26167:26169 compcert.lib.Integers <> Cle constr
R26141:26143 compcert.lib.Integers <> Cge constr
R26190:26204 compcert.lib.Integers <> swap_comparison def
R26206:26208 compcert.lib.Integers <> Clt constr
R26180:26182 compcert.lib.Integers <> Cgt constr
R26233:26247 compcert.lib.Integers <> swap_comparison def
R26249:26251 compcert.lib.Integers <> Ceq constr
R26223:26225 compcert.lib.Integers <> Ceq constr
R26141:26143 compcert.lib.Integers <> Cge constr
R26151:26165 compcert.lib.Integers <> swap_comparison def
R26167:26169 compcert.lib.Integers <> Cle constr
R26180:26182 compcert.lib.Integers <> Cgt constr
R26190:26204 compcert.lib.Integers <> swap_comparison def
R26206:26208 compcert.lib.Integers <> Clt constr
R26223:26225 compcert.lib.Integers <> Ceq constr
R26233:26247 compcert.lib.Integers <> swap_comparison def
R26249:26251 compcert.lib.Integers <> Ceq constr
R26272:26279 compcert.lib.Floats Float cmp_swap thm
R26272:26279 compcert.lib.Floats Float cmp_swap thm
R26272:26279 compcert.lib.Floats Float cmp_swap thm
R26272:26279 compcert.lib.Floats Float cmp_swap thm
R26272:26279 compcert.lib.Floats Float cmp_swap thm
R26294:26305 compcert.lib.Floats Float cmp_le_lt_eq thm
R26294:26305 compcert.lib.Floats Float cmp_le_lt_eq thm
prf 26322:26336 Float cmp_lt_gt_false
R26403:26407 Coq.Init.Logic <> False ind
R26392:26394 Coq.Init.Logic <> :type_scope:x_'='_x not
R26379:26381 compcert.lib.Floats Float cmp def
R26390:26391 compcert.lib.Floats <> f2 var
R26387:26388 compcert.lib.Floats <> f1 var
R26383:26385 compcert.lib.Integers <> Cgt constr
R26395:26398 Coq.Init.Datatypes <> true constr
R26368:26370 Coq.Init.Logic <> :type_scope:x_'='_x not
R26355:26357 compcert.lib.Floats Float cmp def
R26366:26367 compcert.lib.Floats <> f2 var
R26363:26364 compcert.lib.Floats <> f1 var
R26359:26361 compcert.lib.Integers <> Clt constr
R26371:26374 Coq.Init.Datatypes <> true constr
R26426:26428 compcert.lib.Floats Float cmp def
R26449:26459 compcert.lib.Floats Float order_float def
R26449:26459 compcert.lib.Floats Float order_float def
prf 26742:26765 Float double_of_bits_of_double
R26813:26815 Coq.Init.Logic <> :type_scope:x_'='_x not
R26780:26793 compcert.lib.Floats Float double_of_bits def
R26796:26809 compcert.lib.Floats Float bits_of_double def
R26811:26811 compcert.lib.Floats <> f var
R26816:26816 compcert.lib.Floats <> f var
R26843:26856 compcert.lib.Floats Float double_of_bits def
R26859:26872 compcert.lib.Floats Float bits_of_double def
R26875:26885 compcert.flocq.Appli.Fappli_IEEE_bits <> bits_of_b64 def
R26888:26898 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_of_bits def
R26911:26929 compcert.lib.Integers Int64 unsigned_repr thm
R26932:26967 compcert.flocq.Appli.Fappli_IEEE_bits <> binary_float_of_bits_of_binary_float thm
R26911:26929 compcert.lib.Integers Int64 unsigned_repr thm
R26932:26967 compcert.flocq.Appli.Fappli_IEEE_bits <> binary_float_of_bits_of_binary_float thm
R27153:27160 Coq.ZArith.BinInt Z ltb_lt thm
R27153:27160 Coq.ZArith.BinInt Z ltb_lt thm
R27177:27187 Coq.ZArith.Zorder <> Zlt_succ_le thm
R27177:27187 Coq.ZArith.Zorder <> Zlt_succ_le thm
R27236:27241 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R27217:27225 compcert.flocq.Core.Fcore_Zaux <> Zpower_le thm
R27236:27241 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R27217:27225 compcert.flocq.Core.Fcore_Zaux <> Zpower_le thm
R27263:27295 compcert.flocq.Core.Fcore_digits <> digits2_Pnat_correct thm
R27263:27295 compcert.flocq.Core.Fcore_digits <> digits2_Pnat_correct thm
R27308:27319 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R27308:27319 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R27337:27349 Coq.ZArith.BinInt Z lt_le_trans thm
R27337:27349 Coq.ZArith.BinInt Z lt_le_trans thm
R27374:27382 compcert.flocq.Appli.Fappli_IEEE_bits <> join_bits def
R27413:27413 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R27427:27430 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R27420:27422 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27415:27417 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R27432:27434 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R27413:27413 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R27427:27430 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R27420:27422 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27415:27417 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R27432:27434 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R27469:27469 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R27478:27481 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R27471:27473 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27483:27485 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R27469:27469 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R27478:27481 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R27471:27473 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27483:27485 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R27513:27532 compcert.flocq.Appli.Fappli_IEEE_bits <> bits_of_binary_float def
R27535:27543 compcert.flocq.Appli.Fappli_IEEE_bits <> join_bits def
R27558:27566 Coq.Init.Datatypes <> andb_prop thm
R27583:27597 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R27612:27622 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R27637:27643 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R27558:27566 Coq.Init.Datatypes <> andb_prop thm
R27583:27597 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R27612:27622 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R27682:27684 Coq.Init.Logic <> :type_scope:x_'='_x not
R27672:27675 Coq.ZArith.BinInt <> Zmax syndef
R27682:27684 Coq.Init.Logic <> :type_scope:x_'='_x not
R27672:27675 Coq.ZArith.BinInt <> Zmax syndef
R27706:27714 Coq.ZArith.Zmax <> Zle_max_l syndef
R27734:27742 Coq.ZArith.Zmax <> Zle_max_r syndef
R27706:27714 Coq.ZArith.Zmax <> Zle_max_l syndef
R27734:27742 Coq.ZArith.Zmax <> Zle_max_r syndef
R27767:27802 compcert.flocq.Calc.Fcalc_digits <> Z_of_nat_S_digits2_Pnat thm
R27767:27802 compcert.flocq.Calc.Fcalc_digits <> Z_of_nat_S_digits2_Pnat thm
R27820:27849 compcert.flocq.Calc.Fcalc_digits <> Zpower_gt_Zdigits thm
R27862:27865 Coq.Numbers.BinNums <> Zpos constr
R27851:27856 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R27820:27849 compcert.flocq.Calc.Fcalc_digits <> Zpower_gt_Zdigits thm
R27862:27865 Coq.Numbers.BinNums <> Zpos constr
R27851:27856 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R27888:27893 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R27896:27904 compcert.flocq.Core.Fcore_Zaux <> radix_val proj
R27907:27910 Coq.ZArith.BinInt Z abs def
R27933:27945 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R27957:27960 Coq.Numbers.BinNums <> Zpos constr
R27949:27951 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R27933:27945 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R27957:27960 Coq.Numbers.BinNums <> Zpos constr
R27949:27951 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R27983:27985 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R27977:27980 Coq.Numbers.BinNums <> Zpos constr
R28009:28015 Coq.Init.Logic <> eq_refl constr
R27983:27985 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R27977:27980 Coq.Numbers.BinNums <> Zpos constr
R28009:28015 Coq.Init.Logic <> eq_refl constr
R28037:28037 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28058:28059 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28064:28064 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28062:28062 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R28037:28037 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28058:28059 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28064:28064 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28062:28062 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R28091:28091 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28091:28091 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28091:28091 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28178:28183 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R28153:28171 compcert.flocq.Calc.Fcalc_digits <> radix2 def
R28153:28171 compcert.flocq.Calc.Fcalc_digits <> radix2 def
R28178:28183 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
prf 28213:28236 Float single_of_bits_of_single
R28284:28286 Coq.Init.Logic <> :type_scope:x_'='_x not
R28251:28264 compcert.lib.Floats Float single_of_bits def
R28267:28280 compcert.lib.Floats Float bits_of_single def
R28282:28282 compcert.lib.Floats <> f var
R28287:28299 compcert.lib.Floats Float singleoffloat def
R28301:28301 compcert.lib.Floats <> f var
R28328:28341 compcert.lib.Floats Float single_of_bits def
R28344:28357 compcert.lib.Floats Float bits_of_single def
R28360:28370 compcert.flocq.Appli.Fappli_IEEE_bits <> bits_of_b32 def
R28373:28383 compcert.flocq.Appli.Fappli_IEEE_bits <> b32_of_bits def
R28396:28412 compcert.lib.Integers Int unsigned_repr thm
R28415:28450 compcert.flocq.Appli.Fappli_IEEE_bits <> binary_float_of_bits_of_binary_float thm
R28396:28412 compcert.lib.Integers Int unsigned_repr thm
R28415:28450 compcert.flocq.Appli.Fappli_IEEE_bits <> binary_float_of_bits_of_binary_float thm
R28481:28495 compcert.lib.Floats Float binary32offloat def
R28481:28495 compcert.lib.Floats Float binary32offloat def
R28654:28661 Coq.ZArith.BinInt Z ltb_lt thm
R28654:28661 Coq.ZArith.BinInt Z ltb_lt thm
R28678:28688 Coq.ZArith.Zorder <> Zlt_succ_le thm
R28678:28688 Coq.ZArith.Zorder <> Zlt_succ_le thm
R28737:28742 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R28718:28726 compcert.flocq.Core.Fcore_Zaux <> Zpower_le thm
R28737:28742 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R28718:28726 compcert.flocq.Core.Fcore_Zaux <> Zpower_le thm
R28764:28796 compcert.flocq.Core.Fcore_digits <> digits2_Pnat_correct thm
R28764:28796 compcert.flocq.Core.Fcore_digits <> digits2_Pnat_correct thm
R28809:28820 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R28809:28820 Coq.ZArith.Zpower <> Zpower_nat_Z thm
R28838:28850 Coq.ZArith.BinInt Z lt_le_trans thm
R28838:28850 Coq.ZArith.BinInt Z lt_le_trans thm
R28888:28888 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28882:28887 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R28888:28888 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28882:28887 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R28903:28911 compcert.flocq.Appli.Fappli_IEEE_bits <> join_bits def
R28942:28942 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R28954:28957 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R28948:28950 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28944:28946 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28959:28961 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28942:28942 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R28954:28957 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R28948:28950 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28944:28946 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28959:28961 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28996:28996 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R29004:29007 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R28998:29000 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R29009:29011 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R28996:28996 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R29004:29007 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R28998:29000 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R29009:29011 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29039:29058 compcert.flocq.Appli.Fappli_IEEE_bits <> bits_of_binary_float def
R29061:29069 compcert.flocq.Appli.Fappli_IEEE_bits <> join_bits def
R29084:29092 Coq.Init.Datatypes <> andb_prop thm
R29109:29123 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R29138:29148 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R29084:29092 Coq.Init.Datatypes <> andb_prop thm
R29109:29123 Coq.ZArith.Zbool <> Zle_bool_imp_le thm
R29138:29148 Coq.ZArith.Zbool <> Zeq_bool_eq thm
R29165:29171 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R29210:29212 Coq.Init.Logic <> :type_scope:x_'='_x not
R29200:29203 Coq.ZArith.BinInt <> Zmax syndef
R29210:29212 Coq.Init.Logic <> :type_scope:x_'='_x not
R29200:29203 Coq.ZArith.BinInt <> Zmax syndef
R29234:29242 Coq.ZArith.Zmax <> Zle_max_l syndef
R29262:29270 Coq.ZArith.Zmax <> Zle_max_r syndef
R29234:29242 Coq.ZArith.Zmax <> Zle_max_l syndef
R29262:29270 Coq.ZArith.Zmax <> Zle_max_r syndef
R29295:29330 compcert.flocq.Calc.Fcalc_digits <> Z_of_nat_S_digits2_Pnat thm
R29295:29330 compcert.flocq.Calc.Fcalc_digits <> Z_of_nat_S_digits2_Pnat thm
R29348:29377 compcert.flocq.Calc.Fcalc_digits <> Zpower_gt_Zdigits thm
R29390:29393 Coq.Numbers.BinNums <> Zpos constr
R29379:29384 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R29348:29377 compcert.flocq.Calc.Fcalc_digits <> Zpower_gt_Zdigits thm
R29390:29393 Coq.Numbers.BinNums <> Zpos constr
R29379:29384 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R29416:29421 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R29424:29432 compcert.flocq.Core.Fcore_Zaux <> radix_val proj
R29435:29438 Coq.ZArith.BinInt Z abs def
R29461:29473 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R29485:29488 Coq.Numbers.BinNums <> Zpos constr
R29477:29479 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29461:29473 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R29485:29488 Coq.Numbers.BinNums <> Zpos constr
R29477:29479 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29512:29512 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29533:29533 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29554:29554 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29574:29575 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29579:29579 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29577:29577 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R29512:29512 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29533:29533 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29554:29554 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29574:29575 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29579:29579 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R29577:29577 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R29599:29601 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R29593:29596 Coq.Numbers.BinNums <> Zpos constr
R29613:29619 Coq.Init.Logic <> eq_refl constr
R29599:29601 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R29593:29596 Coq.Numbers.BinNums <> Zpos constr
R29613:29619 Coq.Init.Logic <> eq_refl constr
R29703:29708 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R29678:29696 compcert.flocq.Calc.Fcalc_digits <> radix2 def
R29678:29696 compcert.flocq.Calc.Fcalc_digits <> radix2 def
R29703:29708 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
prf 29738:29758 Float bits_of_singleoffloat
R29805:29807 Coq.Init.Logic <> :type_scope:x_'='_x not
R29773:29786 compcert.lib.Floats Float bits_of_single def
R29789:29801 compcert.lib.Floats Float singleoffloat def
R29803:29803 compcert.lib.Floats <> f var
R29808:29821 compcert.lib.Floats Float bits_of_single def
R29823:29823 compcert.lib.Floats <> f var
R29849:29861 compcert.lib.Floats Float singleoffloat def
R29864:29877 compcert.lib.Floats Float bits_of_single def
R29888:29919 compcert.lib.Floats Float binary32offloatofbinary32offloat thm
R29888:29919 compcert.lib.Floats Float binary32offloatofbinary32offloat thm
prf 29949:29969 Float singleoffloat_of_bits
R30016:30018 Coq.Init.Logic <> :type_scope:x_'='_x not
R29984:29996 compcert.lib.Floats Float singleoffloat def
R29999:30012 compcert.lib.Floats Float single_of_bits def
R30014:30014 compcert.lib.Floats <> b var
R30019:30032 compcert.lib.Floats Float single_of_bits def
R30034:30034 compcert.lib.Floats <> b var
R30060:30072 compcert.lib.Floats Float singleoffloat def
R30075:30088 compcert.lib.Floats Float single_of_bits def
R30099:30130 compcert.lib.Floats Float floatofbinary32offloatofbinary32 thm
R30099:30130 compcert.lib.Floats Float floatofbinary32offloatofbinary32 thm
prf 30160:30183 Float single_of_bits_is_single
R30198:30206 compcert.lib.Floats Float is_single def
R30209:30222 compcert.lib.Floats Float single_of_bits def
R30224:30224 compcert.lib.Floats <> b var
R30253:30263 compcert.flocq.Appli.Fappli_IEEE_bits <> b32_of_bits def
R30266:30277 compcert.lib.Integers Int unsigned def
R30253:30263 compcert.flocq.Appli.Fappli_IEEE_bits <> b32_of_bits def
R30266:30277 compcert.lib.Integers Int unsigned def
def 30526:30536 Float ox8000_0000
R30541:30548 compcert.lib.Integers Int repr def
R30550:30565 compcert.lib.Integers Int half_modulus def
prf 30598:30608 Float round_exact
R30723:30725 Coq.Init.Logic <> :type_scope:x_'='_x not
R30647:30651 compcert.flocq.Core.Fcore_generic_fmt <> round def
R30717:30719 compcert.flocq.Core.Fcore_Raux <> Z2R def
R30721:30721 compcert.lib.Floats <> n var
R30696:30705 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R30707:30713 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R30661:30667 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R30678:30680 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30671:30673 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30653:30658 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R30726:30728 compcert.flocq.Core.Fcore_Raux <> Z2R def
R30730:30730 compcert.lib.Floats <> n var
R30628:30630 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R30632:30634 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R30623:30623 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R30625:30625 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R30631:30631 compcert.lib.Floats <> n var
R30631:30631 compcert.lib.Floats <> n var
R30636:30636 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R30758:30770 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R30796:30815 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R30758:30770 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R30796:30815 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R30828:30845 compcert.flocq.Core.Fcore_FLT <> generic_format_FLT thm
R30856:30860 compcert.flocq.Core.Fcore_defs <> Float constr
R30862:30867 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R30828:30845 compcert.flocq.Core.Fcore_FLT <> generic_format_FLT thm
R30856:30860 compcert.flocq.Core.Fcore_defs <> Float constr
R30862:30867 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R30884:30886 compcert.flocq.Core.Fcore_defs <> F2R def
R30889:30892 compcert.flocq.Core.Fcore_defs <> Fnum proj
R30895:30898 compcert.flocq.Core.Fcore_defs <> Fexp proj
R30901:30904 compcert.flocq.Core.Fcore_Raux <> bpow def
R30915:30923 Coq.Reals.RIneq <> Rmult_1_r thm
R30915:30923 Coq.Reals.RIneq <> Rmult_1_r thm
R0:-1 compcert.lib.Floats <> y var
R30951:30959 Coq.ZArith.Zabs <> Zabs_spec thm
R30951:30959 Coq.ZArith.Zabs <> Zabs_spec thm
prf 30994:31017 Float binary_normalize64_exact
R31102:31109 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31094:31096 Coq.Init.Logic <> :type_scope:x_'='_x not
R31056:31058 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R31065:31082 compcert.lib.Floats Float binary_normalize64 def
R31088:31092 Coq.Init.Datatypes <> false constr
R31084:31084 compcert.lib.Floats <> n var
R31097:31099 compcert.flocq.Core.Fcore_Raux <> Z2R def
R31101:31101 compcert.lib.Floats <> n var
R31154:31156 Coq.Init.Logic <> :type_scope:x_'='_x not
R31110:31118 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R31125:31142 compcert.lib.Floats Float binary_normalize64 def
R31148:31152 Coq.Init.Datatypes <> false constr
R31144:31144 compcert.lib.Floats <> n var
R31157:31160 Coq.Init.Datatypes <> true constr
R31037:31039 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R31041:31043 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R31032:31032 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31034:31034 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R31040:31040 compcert.lib.Floats <> n var
R31040:31040 compcert.lib.Floats <> n var
R31045:31045 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R31192:31217 compcert.lib.Floats Float binary_normalize64_correct def
R31223:31227 Coq.Init.Datatypes <> false constr
R31192:31217 compcert.lib.Floats Float binary_normalize64_correct def
R31223:31227 Coq.Init.Datatypes <> false constr
R31240:31242 compcert.flocq.Core.Fcore_defs <> F2R def
R31245:31248 compcert.flocq.Core.Fcore_defs <> Fnum proj
R31251:31254 compcert.flocq.Core.Fcore_defs <> Fexp proj
R31257:31260 compcert.flocq.Core.Fcore_Raux <> bpow def
R31277:31285 Coq.Reals.RIneq <> Rmult_1_r thm
R31288:31298 compcert.lib.Floats Float round_exact thm
R31301:31313 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R31277:31285 Coq.Reals.RIneq <> Rmult_1_r thm
R31288:31298 compcert.lib.Floats Float round_exact thm
R31301:31313 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R31354:31360 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R31369:31374 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R31389:31397 Coq.ZArith.Zabs <> Zabs_spec thm
R31354:31360 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R31369:31374 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R31389:31397 Coq.ZArith.Zabs <> Zabs_spec thm
prf 31434:31457 Float floatofintu_floatofint_1
R31521:31523 Coq.Init.Logic <> :type_scope:x_'='_x not
R31508:31518 compcert.lib.Floats Float floatofintu def
R31520:31520 compcert.lib.Floats <> x var
R31524:31533 compcert.lib.Floats Float floatofint def
R31535:31535 compcert.lib.Floats <> x var
R31495:31497 Coq.Init.Logic <> :type_scope:x_'='_x not
R31474:31480 compcert.lib.Integers Int ltu def
R31484:31494 compcert.lib.Floats Float ox8000_0000 def
R31482:31482 compcert.lib.Floats <> x var
R31498:31501 Coq.Init.Datatypes <> true constr
R31554:31564 compcert.lib.Floats Float floatofintu def
R31567:31576 compcert.lib.Floats Float floatofint def
R31579:31588 compcert.lib.Integers Int signed def
R31591:31597 compcert.lib.Integers Int ltu def
R31648:31663 compcert.lib.Integers Int half_modulus def
R31617:31628 compcert.lib.Integers Int unsigned def
R31630:31640 compcert.lib.Floats Float ox8000_0000 def
R31617:31628 compcert.lib.Integers Int unsigned def
R31630:31640 compcert.lib.Floats Float ox8000_0000 def
R31648:31663 compcert.lib.Integers Int half_modulus def
R31678:31680 compcert.lib.Coqlib <> zlt def
R31699:31714 compcert.lib.Integers Int half_modulus def
R31683:31694 compcert.lib.Integers Int unsigned def
R31678:31680 compcert.lib.Coqlib <> zlt def
R31699:31714 compcert.lib.Integers Int half_modulus def
R31683:31694 compcert.lib.Integers Int unsigned def
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
prf 31747:31770 Float floatofintu_floatofint_2
R31835:31837 Coq.Init.Logic <> :type_scope:x_'='_x not
R31822:31832 compcert.lib.Floats Float floatofintu def
R31834:31834 compcert.lib.Floats <> x var
R31838:31840 compcert.lib.Floats Float add def
R31902:31912 compcert.lib.Floats Float floatofintu def
R31914:31924 compcert.lib.Floats Float ox8000_0000 def
R31843:31852 compcert.lib.Floats Float floatofint def
R31855:31861 compcert.lib.Integers Int sub def
R31865:31875 compcert.lib.Floats Float ox8000_0000 def
R31863:31863 compcert.lib.Floats <> x var
R31808:31810 Coq.Init.Logic <> :type_scope:x_'='_x not
R31787:31793 compcert.lib.Integers Int ltu def
R31797:31807 compcert.lib.Floats Float ox8000_0000 def
R31795:31795 compcert.lib.Floats <> x var
R31811:31815 Coq.Init.Datatypes <> false constr
R31944:31954 compcert.lib.Floats Float floatofintu def
R31957:31966 compcert.lib.Floats Float floatofint def
R31969:31978 compcert.lib.Integers Int signed def
R31981:31987 compcert.lib.Integers Int ltu def
R31990:31996 compcert.lib.Integers Int sub def
R32021:32038 compcert.lib.Integers Int unsigned_range thm
R32021:32038 compcert.lib.Integers Int unsigned_range thm
R32060:32071 compcert.lib.Integers Int unsigned def
R32073:32083 compcert.lib.Floats Float ox8000_0000 def
R32060:32071 compcert.lib.Integers Int unsigned def
R32073:32083 compcert.lib.Floats Float ox8000_0000 def
R32099:32101 compcert.lib.Coqlib <> zlt def
R32104:32115 compcert.lib.Integers Int unsigned def
R32099:32101 compcert.lib.Coqlib <> zlt def
R32104:32115 compcert.lib.Integers Int unsigned def
R32162:32178 compcert.lib.Integers Int unsigned_repr thm
R32162:32178 compcert.lib.Integers Int unsigned_repr thm
R32208:32210 compcert.lib.Coqlib <> zlt def
R32244:32259 compcert.lib.Integers Int half_modulus def
R32213:32213 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32228:32231 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32214:32225 compcert.lib.Integers Int unsigned def
R32208:32210 compcert.lib.Coqlib <> zlt def
R32244:32259 compcert.lib.Integers Int half_modulus def
R32213:32213 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32228:32231 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32214:32225 compcert.lib.Integers Int unsigned def
R32272:32274 compcert.lib.Floats Float add def
R32277:32284 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_plus def
R32310:32312 Coq.Init.Logic <> :type_scope:x_'='_x not
R32313:32317 compcert.flocq.Appli.Fappli_IEEE <> Bplus def
R32310:32312 Coq.Init.Logic <> :type_scope:x_'='_x not
R32313:32317 compcert.flocq.Appli.Fappli_IEEE <> Bplus def
R32357:32369 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R32404:32410 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R32395:32402 compcert.lib.Floats Float binop_pl def
R32387:32393 Coq.Init.Logic <> eq_refl constr
R32379:32385 Coq.Init.Logic <> eq_refl constr
R32357:32369 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R32404:32410 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R32395:32402 compcert.lib.Floats Float binop_pl def
R32387:32393 Coq.Init.Logic <> eq_refl constr
R32379:32385 Coq.Init.Logic <> eq_refl constr
R32449:32453 Coq.Init.Logic <> proj1 thm
R32456:32479 compcert.lib.Floats Float binary_normalize64_exact thm
R32483:32483 compcert.lib.Floats <> H var
R32481:32481 compcert.lib.Floats <> x var
R32449:32453 Coq.Init.Logic <> proj1 thm
R32456:32479 compcert.lib.Floats Float binary_normalize64_exact thm
R32483:32483 compcert.lib.Floats <> H var
R32481:32481 compcert.lib.Floats <> x var
R32449:32453 Coq.Init.Logic <> proj1 thm
R32456:32479 compcert.lib.Floats Float binary_normalize64_exact thm
R32483:32483 compcert.lib.Floats <> H var
R32481:32481 compcert.lib.Floats <> x var
R32536:32540 Coq.Init.Logic <> proj2 thm
R32543:32566 compcert.lib.Floats Float binary_normalize64_exact thm
R32570:32570 compcert.lib.Floats <> H var
R32568:32568 compcert.lib.Floats <> x var
R32536:32540 Coq.Init.Logic <> proj2 thm
R32543:32566 compcert.lib.Floats Float binary_normalize64_exact thm
R32570:32570 compcert.lib.Floats <> H var
R32568:32568 compcert.lib.Floats <> x var
R32536:32540 Coq.Init.Logic <> proj2 thm
R32543:32566 compcert.lib.Floats Float binary_normalize64_exact thm
R32570:32570 compcert.lib.Floats <> H var
R32568:32568 compcert.lib.Floats <> x var
R32609:32616 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R32619:32629 compcert.lib.Floats Float round_exact thm
R32609:32616 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R32619:32629 compcert.lib.Floats Float round_exact thm
R32663:32675 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R32724:32726 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32711:32713 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32697:32708 compcert.lib.Integers Int unsigned def
R32745:32756 compcert.lib.Integers Int unsigned def
R32663:32675 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R32745:32756 compcert.lib.Integers Int unsigned def
R32724:32726 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32711:32713 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32697:32708 compcert.lib.Integers Int unsigned def
R32745:32756 compcert.lib.Integers Int unsigned def
R32724:32726 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32711:32713 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32697:32708 compcert.lib.Integers Int unsigned def
R32783:32789 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R32783:32789 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R32804:32827 compcert.lib.Floats Float binary_normalize64_exact thm
R32830:32841 compcert.lib.Integers Int unsigned def
R32804:32827 compcert.lib.Floats Float binary_normalize64_exact thm
R32830:32841 compcert.lib.Integers Int unsigned def
R32898:32900 Coq.Init.Logic <> :type_scope:x_'='_x not
R32898:32900 Coq.Init.Logic <> :type_scope:x_'='_x not
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R32975:32977 compcert.flocq.Core.Fcore_Raux <> Z2R def
R32995:33000 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R32975:32977 compcert.flocq.Core.Fcore_Raux <> Z2R def
R32995:33000 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R33048:33049 Coq.Init.Datatypes <> Lt constr
R33033:33036 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R33033:33036 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R33048:33049 Coq.Init.Datatypes <> Lt constr
R33086:33093 Coq.ZArith.BinInt <> Zcompare syndef
R33086:33093 Coq.ZArith.BinInt <> Zcompare syndef
R33131:33133 Coq.Init.Logic <> :type_scope:x_'='_x not
R33131:33133 Coq.Init.Logic <> :type_scope:x_'='_x not
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R33208:33210 compcert.flocq.Core.Fcore_Raux <> Z2R def
R33228:33233 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R33208:33210 compcert.flocq.Core.Fcore_Raux <> Z2R def
R33228:33233 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R33271:33275 Coq.Init.Logic <> proj1 thm
R33278:33301 compcert.lib.Floats Float binary_normalize64_exact thm
R33305:33305 compcert.lib.Floats <> H var
R33303:33303 compcert.lib.Floats <> x var
R33271:33275 Coq.Init.Logic <> proj1 thm
R33278:33301 compcert.lib.Floats Float binary_normalize64_exact thm
R33305:33305 compcert.lib.Floats <> H var
R33303:33303 compcert.lib.Floats <> x var
R0:-1 compcert.lib.Floats <> y var
R33353:33362 compcert.flocq.Core.Fcore_Raux <> Z2R_Zpower thm
R33368:33374 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R33392:33397 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R33416:33424 Coq.ZArith.Zabs <> Zabs_spec thm
R33427:33438 compcert.lib.Integers Int unsigned def
R33353:33362 compcert.flocq.Core.Fcore_Raux <> Z2R_Zpower thm
R33368:33374 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R33392:33397 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R33416:33424 Coq.ZArith.Zabs <> Zabs_spec thm
R33427:33438 compcert.lib.Integers Int unsigned def
prf 33502:33517 Float Zoffloat_correct
R33542:33549 compcert.lib.Floats Float Zoffloat def
R33551:33551 compcert.lib.Floats <> f var
R33566:33569 Coq.Init.Datatypes <> Some constr
R33606:33617 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R33599:33601 Coq.Init.Logic <> :type_scope:x_'='_x not
R33584:33592 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R33598:33598 compcert.lib.Floats <> f var
R33602:33605 Coq.Init.Datatypes <> true constr
R33623:33625 Coq.Init.Logic <> :type_scope:x_'='_x not
R33618:33620 compcert.flocq.Core.Fcore_Raux <> Z2R def
R33626:33630 compcert.flocq.Core.Fcore_generic_fmt <> round def
R33673:33675 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R33681:33681 compcert.lib.Floats <> f var
R33652:33661 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R33663:33669 compcert.flocq.Appli.Fappli_IEEE <> mode_ZR constr
R33640:33646 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R33632:33637 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R33692:33695 Coq.Init.Datatypes <> None constr
R33723:33725 Coq.Init.Logic <> :type_scope:x_'='_x not
R33708:33716 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R33722:33722 compcert.lib.Floats <> f var
R33726:33730 Coq.Init.Datatypes <> false constr
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R0:-1 compcert.lib.Floats <> y var
R33789:33791 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R33789:33791 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R33802:33808 compcert.flocq.Core.Fcore_generic_fmt <> round_0 thm
R33802:33808 compcert.flocq.Core.Fcore_generic_fmt <> round_0 thm
R0:-1 compcert.lib.Floats <> y var
R33836:33855 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R33836:33855 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R33902:33914 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R33902:33914 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R33937:33945 Coq.Reals.RIneq <> Rmult_1_r thm
R33937:33945 Coq.Reals.RIneq <> Rmult_1_r thm
R33960:33979 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R33960:33979 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R33990:34007 compcert.flocq.Core.Fcore_FIX <> generic_format_FIX thm
R33990:34007 compcert.flocq.Core.Fcore_FIX <> generic_format_FIX thm
R34018:34022 compcert.flocq.Core.Fcore_defs <> Float constr
R34032:34040 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R34045:34048 Coq.Numbers.BinNums <> Zpos constr
R34024:34029 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34018:34022 compcert.flocq.Core.Fcore_defs <> Float constr
R34032:34040 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R34045:34048 Coq.Numbers.BinNums <> Zpos constr
R34024:34029 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34113:34125 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R34128:34135 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R34138:34151 compcert.flocq.Core.Fcore_Raux <> Z2R_Zpower_pos thm
R34157:34168 compcert.flocq.Core.Fcore_Raux <> bpow_powerRZ thm
R34198:34217 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R34225:34242 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R34113:34125 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R34128:34135 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R34138:34151 compcert.flocq.Core.Fcore_Raux <> Z2R_Zpower_pos thm
R34157:34168 compcert.flocq.Core.Fcore_Raux <> bpow_powerRZ thm
R34198:34217 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R34225:34242 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_F2R thm
R34271:34293 compcert.flocq.Calc.Fcalc_round <> inbetween_float_ZR_sign thm
R34339:34350 compcert.flocq.Calc.Fcalc_bracket <> new_location def
R34407:34415 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R34381:34385 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R34375:34378 Coq.Numbers.BinNums <> Zpos constr
R34386:34395 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R34397:34402 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34353:34362 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R34364:34369 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34302:34302 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R34309:34312 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R34303:34306 Coq.Numbers.BinNums <> Zpos constr
R34313:34322 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R34324:34329 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34271:34293 compcert.flocq.Calc.Fcalc_round <> inbetween_float_ZR_sign thm
R34339:34350 compcert.flocq.Calc.Fcalc_bracket <> new_location def
R34407:34415 compcert.flocq.Calc.Fcalc_bracket <> loc_Exact constr
R34381:34385 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R34375:34378 Coq.Numbers.BinNums <> Zpos constr
R34386:34395 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R34397:34402 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34353:34362 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R34364:34369 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34302:34302 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R34309:34312 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R34303:34306 Coq.Numbers.BinNums <> Zpos constr
R34313:34322 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R34324:34329 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34429:34431 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R34434:34436 compcert.flocq.Core.Fcore_defs <> F2R def
R34439:34442 compcert.flocq.Core.Fcore_defs <> Fnum proj
R34445:34448 compcert.flocq.Core.Fcore_defs <> Fexp proj
R34451:34461 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R34464:34467 compcert.flocq.Core.Fcore_Raux <> bpow def
R34470:34476 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R34479:34486 compcert.lib.Floats Float Zoffloat def
R34489:34494 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34497:34505 compcert.flocq.Core.Fcore_Zaux <> radix_val proj
R34522:34534 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R34563:34565 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R34537:34539 compcert.flocq.Core.Fcore_Raux <> Z2R def
R34542:34550 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R34555:34558 Coq.Numbers.BinNums <> Zpos constr
R34566:34567 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R34568:34570 compcert.flocq.Core.Fcore_Raux <> Z2R def
R34573:34582 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R34522:34534 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R34563:34565 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R34537:34539 compcert.flocq.Core.Fcore_Raux <> Z2R def
R34542:34550 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R34555:34558 Coq.Numbers.BinNums <> Zpos constr
R34566:34567 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R34568:34570 compcert.flocq.Core.Fcore_Raux <> Z2R def
R34573:34582 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R34621:34629 Coq.Reals.RIneq <> Rmult_0_l thm
R34632:34635 compcert.flocq.Core.Fcore_Raux <> bpow def
R34645:34648 Coq.Numbers.BinNums <> Zneg constr
R34637:34642 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34621:34629 Coq.Reals.RIneq <> Rmult_0_l thm
R34632:34635 compcert.flocq.Core.Fcore_Raux <> bpow def
R34645:34648 Coq.Numbers.BinNums <> Zneg constr
R34637:34642 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34621:34629 Coq.Reals.RIneq <> Rmult_0_l thm
R34632:34635 compcert.flocq.Core.Fcore_Raux <> bpow def
R34645:34648 Coq.Numbers.BinNums <> Zneg constr
R34637:34642 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34670:34683 compcert.flocq.Core.Fcore_Raux <> Rmult_lt_reg_r thm
R34670:34683 compcert.flocq.Core.Fcore_Raux <> Rmult_lt_reg_r thm
R34699:34704 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
R34699:34704 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
R34796:34804 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R34796:34804 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R34815:34828 compcert.flocq.Core.Fcore_Raux <> Rmult_le_reg_r thm
R34815:34828 compcert.flocq.Core.Fcore_Raux <> Rmult_le_reg_r thm
R34844:34849 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R34844:34849 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R34940:34948 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R34958:34961 Coq.Numbers.BinNums <> Zneg constr
R34950:34955 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34940:34948 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R34958:34961 Coq.Numbers.BinNums <> Zneg constr
R34950:34955 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R34977:34987 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R34990:34996 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R35021:35023 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35015:35018 Coq.Numbers.BinNums <> Zneg constr
R35024:35027 Coq.Numbers.BinNums <> Zpos constr
R35041:35051 Coq.ZArith.BinInt <> Zplus_opp_r syndef
R35021:35023 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35015:35018 Coq.Numbers.BinNums <> Zneg constr
R35024:35027 Coq.Numbers.BinNums <> Zpos constr
R35041:35051 Coq.ZArith.BinInt <> Zplus_opp_r syndef
R35063:35090 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R35108:35111 Coq.Numbers.BinNums <> Zpos constr
R35092:35097 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R35063:35090 compcert.flocq.Calc.Fcalc_bracket <> inbetween_float_new_location thm
R35108:35111 Coq.Numbers.BinNums <> Zpos constr
R35092:35097 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R35142:35156 compcert.flocq.Calc.Fcalc_bracket <> inbetween_Exact constr
R35166:35168 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R35171:35173 compcert.flocq.Core.Fcore_defs <> F2R def
R35176:35179 compcert.flocq.Core.Fcore_defs <> Fnum proj
R35182:35185 compcert.flocq.Core.Fcore_defs <> Fexp proj
R35142:35156 compcert.flocq.Calc.Fcalc_bracket <> inbetween_Exact constr
R35211:35219 Coq.Reals.Rbasic_fun <> Rabs_left thm
R35211:35219 Coq.Reals.Rbasic_fun <> Rabs_left thm
R35281:35282 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R35303:35303 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R35283:35286 compcert.flocq.Core.Fcore_Raux <> bpow def
R35296:35299 Coq.Numbers.BinNums <> Zneg constr
R35288:35293 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R35323:35339 Coq.Reals.RIneq <> Rmult_gt_compat_r thm
R35281:35282 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R35303:35303 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R35283:35286 compcert.flocq.Core.Fcore_Raux <> bpow def
R35296:35299 Coq.Numbers.BinNums <> Zneg constr
R35288:35293 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R35323:35339 Coq.Reals.RIneq <> Rmult_gt_compat_r thm
R35354:35362 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R35354:35362 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R35374:35379 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R35374:35379 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R35408:35417 Coq.Reals.Rbasic_fun <> Rabs_right thm
R35439:35440 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R35461:35461 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R35441:35444 compcert.flocq.Core.Fcore_Raux <> bpow def
R35454:35457 Coq.Numbers.BinNums <> Zneg constr
R35446:35451 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R35481:35486 Coq.Reals.RIneq <> Rgt_ge thm
R35408:35417 Coq.Reals.Rbasic_fun <> Rabs_right thm
R35439:35440 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R35461:35461 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R35441:35444 compcert.flocq.Core.Fcore_Raux <> bpow def
R35454:35457 Coq.Numbers.BinNums <> Zneg constr
R35446:35451 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R35481:35486 Coq.Reals.RIneq <> Rgt_ge thm
R35497:35513 Coq.Reals.RIneq <> Rmult_gt_compat_r thm
R35527:35535 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R35544:35549 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R35497:35513 Coq.Reals.RIneq <> Rmult_gt_compat_r thm
R35527:35535 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R35544:35549 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
prf 35583:35600 Float intoffloat_correct
R35625:35634 compcert.lib.Floats Float intoffloat def
R35636:35636 compcert.lib.Floats <> f var
R35651:35654 Coq.Init.Datatypes <> Some constr
R35691:35702 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R35684:35686 Coq.Init.Logic <> :type_scope:x_'='_x not
R35669:35677 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R35683:35683 compcert.lib.Floats <> f var
R35687:35690 Coq.Init.Datatypes <> true constr
R35721:35723 Coq.Init.Logic <> :type_scope:x_'='_x not
R35703:35705 compcert.flocq.Core.Fcore_Raux <> Z2R def
R35708:35717 compcert.lib.Integers Int signed def
R35724:35728 compcert.flocq.Core.Fcore_generic_fmt <> round def
R35771:35773 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R35779:35779 compcert.lib.Floats <> f var
R35750:35759 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R35761:35767 compcert.flocq.Appli.Fappli_IEEE <> mode_ZR constr
R35738:35744 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R35730:35735 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R35790:35793 Coq.Init.Datatypes <> None constr
R35829:35840 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R35821:35823 Coq.Init.Logic <> :type_scope:x_'='_x not
R35806:35814 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R35820:35820 compcert.lib.Floats <> f var
R35824:35828 Coq.Init.Datatypes <> false constr
R35881:35891 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R35851:35854 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R35842:35844 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R35850:35850 compcert.lib.Floats <> f var
R35855:35857 compcert.flocq.Core.Fcore_Raux <> Z2R def
R35860:35864 Coq.ZArith.BinInt <> Zpred syndef
R35866:35879 compcert.lib.Integers Int min_signed def
R35918:35921 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R35892:35894 compcert.flocq.Core.Fcore_Raux <> Z2R def
R35897:35901 Coq.ZArith.BinInt <> Zsucc syndef
R35903:35916 compcert.lib.Integers Int max_signed def
R35922:35924 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R35930:35930 compcert.lib.Floats <> f var
R35972:35987 compcert.lib.Floats Float Zoffloat_correct thm
R35989:35989 Coq.Reals.Rtopology <> f proj
R36000:36009 compcert.lib.Floats Float intoffloat def
R36022:36029 compcert.lib.Floats Float Zoffloat def
R36031:36031 Coq.Reals.Rtopology <> f proj
R35972:35987 compcert.lib.Floats Float Zoffloat_correct thm
R36022:36029 compcert.lib.Floats Float Zoffloat def
R36049:36061 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R36063:36076 compcert.lib.Integers Int min_signed def
R36094:36106 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R36110:36123 compcert.lib.Integers Int max_signed def
R36049:36061 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R36063:36076 compcert.lib.Integers Int min_signed def
R36094:36106 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R36110:36123 compcert.lib.Integers Int max_signed def
R36143:36156 compcert.lib.Integers Int min_signed def
R36172:36185 compcert.lib.Integers Int max_signed def
R36247:36261 compcert.lib.Integers Int signed_repr thm
R36247:36261 compcert.lib.Integers Int signed_repr thm
R36330:36338 Coq.Reals.RIneq <> Rle_trans thm
R36348:36353 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R36362:36372 Coq.ZArith.Zorder <> Zlt_le_succ thm
R36330:36338 Coq.Reals.RIneq <> Rle_trans thm
R36348:36353 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R36362:36372 Coq.ZArith.Zorder <> Zlt_le_succ thm
R36405:36416 compcert.flocq.Core.Fcore_generic_fmt <> round_ZR_pos thm
R36405:36416 compcert.flocq.Core.Fcore_generic_fmt <> round_ZR_pos thm
R36428:36432 compcert.flocq.Core.Fcore_generic_fmt <> round def
R36435:36449 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R36452:36462 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R36465:36471 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R36474:36476 compcert.flocq.Core.Fcore_defs <> F2R def
R36479:36482 compcert.flocq.Core.Fcore_defs <> Fnum proj
R36485:36488 compcert.flocq.Core.Fcore_defs <> Fexp proj
R36497:36500 compcert.flocq.Core.Fcore_Raux <> bpow def
R36497:36500 compcert.flocq.Core.Fcore_Raux <> bpow def
R36518:36526 Coq.Reals.RIneq <> Rmult_1_r thm
R36539:36547 compcert.flocq.Core.Fcore_Raux <> Zfloor_lb thm
R36518:36526 Coq.Reals.RIneq <> Rmult_1_r thm
R36518:36526 Coq.Reals.RIneq <> Rmult_1_r thm
R36539:36547 compcert.flocq.Core.Fcore_Raux <> Zfloor_lb thm
R36558:36567 Coq.Reals.RIneq <> Rnot_lt_le thm
R36583:36588 Coq.Reals.RIneq <> Rlt_le thm
R36604:36611 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R36633:36642 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R36644:36650 compcert.flocq.Appli.Fappli_IEEE <> mode_ZR constr
R36621:36627 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R36613:36618 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R36680:36686 compcert.flocq.Core.Fcore_generic_fmt <> round_0 thm
R36703:36708 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R36748:36767 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R36558:36567 Coq.Reals.RIneq <> Rnot_lt_le thm
R36583:36588 Coq.Reals.RIneq <> Rlt_le thm
R36604:36611 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R36633:36642 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R36644:36650 compcert.flocq.Appli.Fappli_IEEE <> mode_ZR constr
R36621:36627 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R36613:36618 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R36680:36686 compcert.flocq.Core.Fcore_generic_fmt <> round_0 thm
R36703:36708 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R36748:36767 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R36793:36801 Coq.Reals.RIneq <> Rle_trans thm
R36813:36818 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R36793:36801 Coq.Reals.RIneq <> Rle_trans thm
R36813:36818 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R36853:36864 compcert.flocq.Core.Fcore_generic_fmt <> round_ZR_neg thm
R36853:36864 compcert.flocq.Core.Fcore_generic_fmt <> round_ZR_neg thm
R36876:36880 compcert.flocq.Core.Fcore_generic_fmt <> round def
R36883:36897 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R36900:36910 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R36913:36919 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R36922:36924 compcert.flocq.Core.Fcore_defs <> F2R def
R36927:36930 compcert.flocq.Core.Fcore_defs <> Fnum proj
R36933:36936 compcert.flocq.Core.Fcore_defs <> Fexp proj
R36945:36948 compcert.flocq.Core.Fcore_Raux <> bpow def
R36945:36948 compcert.flocq.Core.Fcore_Raux <> bpow def
R36966:36974 Coq.Reals.RIneq <> Rmult_1_r thm
R36987:36994 compcert.flocq.Core.Fcore_Raux <> Zceil_ub thm
R36966:36974 Coq.Reals.RIneq <> Rmult_1_r thm
R36966:36974 Coq.Reals.RIneq <> Rmult_1_r thm
R36987:36994 compcert.flocq.Core.Fcore_Raux <> Zceil_ub thm
R37005:37014 Coq.Reals.RIneq <> Rnot_lt_le thm
R37030:37035 Coq.Reals.RIneq <> Rlt_le thm
R37051:37058 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R37080:37089 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R37091:37097 compcert.flocq.Appli.Fappli_IEEE <> mode_ZR constr
R37068:37074 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R37060:37065 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R37005:37014 Coq.Reals.RIneq <> Rnot_lt_le thm
R37030:37035 Coq.Reals.RIneq <> Rlt_le thm
R37051:37058 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R37080:37089 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R37091:37097 compcert.flocq.Appli.Fappli_IEEE <> mode_ZR constr
R37068:37074 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R37060:37065 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R37125:37131 compcert.flocq.Core.Fcore_generic_fmt <> round_0 thm
R37148:37153 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R37181:37200 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R37125:37131 compcert.flocq.Core.Fcore_generic_fmt <> round_0 thm
R37148:37153 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R37181:37200 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
prf 37238:37256 Float intuoffloat_correct
R37281:37291 compcert.lib.Floats Float intuoffloat def
R37293:37293 compcert.lib.Floats <> f var
R37308:37311 Coq.Init.Datatypes <> Some constr
R37348:37359 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R37341:37343 Coq.Init.Logic <> :type_scope:x_'='_x not
R37326:37334 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R37340:37340 compcert.lib.Floats <> f var
R37344:37347 Coq.Init.Datatypes <> true constr
R37380:37382 Coq.Init.Logic <> :type_scope:x_'='_x not
R37360:37362 compcert.flocq.Core.Fcore_Raux <> Z2R def
R37365:37376 compcert.lib.Integers Int unsigned def
R37383:37387 compcert.flocq.Core.Fcore_generic_fmt <> round def
R37430:37432 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R37438:37438 compcert.lib.Floats <> f var
R37409:37418 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R37420:37426 compcert.flocq.Appli.Fappli_IEEE <> mode_ZR constr
R37397:37403 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R37389:37394 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R37449:37452 Coq.Init.Datatypes <> None constr
R37488:37499 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37480:37482 Coq.Init.Logic <> :type_scope:x_'='_x not
R37465:37473 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R37479:37479 compcert.lib.Floats <> f var
R37483:37487 Coq.Init.Datatypes <> false constr
R37516:37527 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37510:37513 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R37501:37503 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R37509:37509 compcert.lib.Floats <> f var
R37556:37559 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R37528:37530 compcert.flocq.Core.Fcore_Raux <> Z2R def
R37533:37537 Coq.ZArith.BinInt <> Zsucc syndef
R37539:37554 compcert.lib.Integers Int max_unsigned def
R37560:37562 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R37568:37568 compcert.lib.Floats <> f var
R37610:37625 compcert.lib.Floats Float Zoffloat_correct thm
R37627:37627 Coq.Reals.Rtopology <> f proj
R37638:37648 compcert.lib.Floats Float intuoffloat def
R37661:37668 compcert.lib.Floats Float Zoffloat def
R37670:37670 Coq.Reals.Rtopology <> f proj
R37610:37625 compcert.lib.Floats Float Zoffloat_correct thm
R37661:37668 compcert.lib.Floats Float Zoffloat def
R37688:37700 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R37720:37732 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R37736:37751 compcert.lib.Integers Int max_unsigned def
R37688:37700 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R37720:37732 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_spec thm
R37736:37751 compcert.lib.Integers Int max_unsigned def
R37770:37785 compcert.lib.Integers Int max_unsigned def
R37844:37860 compcert.lib.Integers Int unsigned_repr thm
R37844:37860 compcert.lib.Integers Int unsigned_repr thm
R37929:37937 Coq.Reals.RIneq <> Rle_trans thm
R37947:37952 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R37961:37971 Coq.ZArith.Zorder <> Zlt_le_succ thm
R37929:37937 Coq.Reals.RIneq <> Rle_trans thm
R37947:37952 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R37961:37971 Coq.ZArith.Zorder <> Zlt_le_succ thm
R38004:38015 compcert.flocq.Core.Fcore_generic_fmt <> round_ZR_pos thm
R38004:38015 compcert.flocq.Core.Fcore_generic_fmt <> round_ZR_pos thm
R38027:38031 compcert.flocq.Core.Fcore_generic_fmt <> round def
R38034:38048 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R38051:38061 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R38064:38070 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R38073:38075 compcert.flocq.Core.Fcore_defs <> F2R def
R38078:38081 compcert.flocq.Core.Fcore_defs <> Fnum proj
R38084:38087 compcert.flocq.Core.Fcore_defs <> Fexp proj
R38096:38099 compcert.flocq.Core.Fcore_Raux <> bpow def
R38119:38127 Coq.Reals.RIneq <> Rmult_1_r thm
R38140:38148 compcert.flocq.Core.Fcore_Raux <> Zfloor_lb thm
R38096:38099 compcert.flocq.Core.Fcore_Raux <> bpow def
R38119:38127 Coq.Reals.RIneq <> Rmult_1_r thm
R38119:38127 Coq.Reals.RIneq <> Rmult_1_r thm
R38140:38148 compcert.flocq.Core.Fcore_Raux <> Zfloor_lb thm
R38159:38168 Coq.Reals.RIneq <> Rnot_lt_le thm
R38184:38189 Coq.Reals.RIneq <> Rlt_le thm
R38206:38213 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R38235:38244 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R38246:38252 compcert.flocq.Appli.Fappli_IEEE <> mode_ZR constr
R38223:38229 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R38215:38220 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R38282:38288 compcert.flocq.Core.Fcore_generic_fmt <> round_0 thm
R38305:38310 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R38350:38369 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R38159:38168 Coq.Reals.RIneq <> Rnot_lt_le thm
R38184:38189 Coq.Reals.RIneq <> Rlt_le thm
R38206:38213 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R38235:38244 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R38246:38252 compcert.flocq.Appli.Fappli_IEEE <> mode_ZR constr
R38223:38229 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R38215:38220 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R38282:38288 compcert.flocq.Core.Fcore_generic_fmt <> round_0 thm
R38305:38310 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R38350:38369 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R38395:38403 Coq.Reals.RIneq <> Rle_trans thm
R38428:38430 compcert.flocq.Core.Fcore_Raux <> Z2R def
R38446:38451 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R38395:38403 Coq.Reals.RIneq <> Rle_trans thm
R38428:38430 compcert.flocq.Core.Fcore_Raux <> Z2R def
R38446:38451 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R38479:38490 compcert.flocq.Core.Fcore_generic_fmt <> round_ZR_neg thm
R38500:38504 compcert.flocq.Core.Fcore_generic_fmt <> round def
R38507:38521 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R38524:38534 compcert.flocq.Core.Fcore_generic_fmt <> canonic_exp def
R38537:38543 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R38546:38548 compcert.flocq.Core.Fcore_defs <> F2R def
R38551:38554 compcert.flocq.Core.Fcore_defs <> Fnum proj
R38557:38560 compcert.flocq.Core.Fcore_defs <> Fexp proj
R38569:38572 compcert.flocq.Core.Fcore_Raux <> bpow def
R38479:38490 compcert.flocq.Core.Fcore_generic_fmt <> round_ZR_neg thm
R38569:38572 compcert.flocq.Core.Fcore_Raux <> bpow def
R38569:38572 compcert.flocq.Core.Fcore_Raux <> bpow def
R38590:38598 Coq.Reals.RIneq <> Rmult_1_r thm
R38611:38618 compcert.flocq.Core.Fcore_Raux <> Zceil_ub thm
R38590:38598 Coq.Reals.RIneq <> Rmult_1_r thm
R38590:38598 Coq.Reals.RIneq <> Rmult_1_r thm
R38611:38618 compcert.flocq.Core.Fcore_Raux <> Zceil_ub thm
R38629:38638 Coq.Reals.RIneq <> Rnot_lt_le thm
R38654:38659 Coq.Reals.RIneq <> Rlt_le thm
R38675:38682 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R38704:38713 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R38715:38721 compcert.flocq.Appli.Fappli_IEEE <> mode_ZR constr
R38692:38698 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R38684:38689 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R38751:38757 compcert.flocq.Core.Fcore_generic_fmt <> round_0 thm
R38774:38779 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R38807:38826 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R38629:38638 Coq.Reals.RIneq <> Rnot_lt_le thm
R38654:38659 Coq.Reals.RIneq <> Rlt_le thm
R38675:38682 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R38704:38713 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R38715:38721 compcert.flocq.Appli.Fappli_IEEE <> mode_ZR constr
R38692:38698 compcert.flocq.Core.Fcore_FIX <> FIX_exp def
R38684:38689 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R38751:38757 compcert.flocq.Core.Fcore_generic_fmt <> round_0 thm
R38774:38779 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R38807:38826 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
prf 38862:38881 Float intuoffloat_interval
R38935:38937 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x_'<'_x not
R38947:38949 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x_'<'_x not
R38938:38940 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R38946:38946 compcert.lib.Floats <> f var
R38938:38940 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R38946:38946 compcert.lib.Floats <> f var
R38950:38952 compcert.flocq.Core.Fcore_Raux <> Z2R def
R38955:38959 Coq.ZArith.BinInt <> Zsucc syndef
R38961:38976 compcert.lib.Integers Int max_unsigned def
R38915:38917 Coq.Init.Logic <> :type_scope:x_'='_x not
R38902:38912 compcert.lib.Floats Float intuoffloat def
R38914:38914 compcert.lib.Floats <> f var
R38918:38921 Coq.Init.Datatypes <> Some constr
R38923:38923 compcert.lib.Floats <> n var
R39011:39029 compcert.lib.Floats Float intuoffloat_correct thm
R39031:39031 Coq.Reals.Rtopology <> f proj
R39045:39055 compcert.lib.Floats Float intuoffloat def
R39057:39057 Coq.Reals.Rtopology <> f proj
R39011:39029 compcert.lib.Floats Float intuoffloat_correct thm
R39045:39055 compcert.lib.Floats Float intuoffloat def
R39139:39141 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R39161:39163 compcert.flocq.Core.Fcore_Raux <> Z2R def
R39189:39191 compcert.flocq.Core.Fcore_Raux <> Z2R def
R39213:39218 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R39139:39141 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R39161:39163 compcert.flocq.Core.Fcore_Raux <> Z2R def
R39189:39191 compcert.flocq.Core.Fcore_Raux <> Z2R def
R39213:39218 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R39213:39218 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R39248:39265 compcert.lib.Integers Int unsigned_range thm
R39248:39265 compcert.lib.Integers Int unsigned_range thm
R39280:39284 compcert.flocq.Core.Fcore_generic_fmt <> round def
R39287:39301 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R39304:39306 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R39309:39311 compcert.flocq.Core.Fcore_defs <> F2R def
R39314:39317 compcert.flocq.Core.Fcore_defs <> Fnum proj
R39320:39323 compcert.flocq.Core.Fcore_defs <> Fexp proj
R39343:39346 compcert.flocq.Core.Fcore_Raux <> bpow def
R39368:39376 Coq.Reals.RIneq <> Rmult_1_r thm
R39395:39400 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R39343:39346 compcert.flocq.Core.Fcore_Raux <> bpow def
R39368:39376 Coq.Reals.RIneq <> Rmult_1_r thm
R39368:39376 Coq.Reals.RIneq <> Rmult_1_r thm
R39395:39400 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R39424:39433 Coq.Reals.RIneq <> Rnot_le_lt thm
R39424:39433 Coq.Reals.RIneq <> Rnot_le_lt thm
R39424:39433 Coq.Reals.RIneq <> Rnot_le_lt thm
R39453:39463 compcert.flocq.Core.Fcore_Raux <> Ztrunc_ceil thm
R39483:39490 compcert.flocq.Core.Fcore_Raux <> Zceil_le thm
R39519:39521 compcert.flocq.Core.Fcore_Raux <> Z2R def
R39544:39552 compcert.flocq.Core.Fcore_Raux <> Zceil_Z2R thm
R39453:39463 compcert.flocq.Core.Fcore_Raux <> Ztrunc_ceil thm
R39483:39490 compcert.flocq.Core.Fcore_Raux <> Zceil_le thm
R39519:39521 compcert.flocq.Core.Fcore_Raux <> Z2R def
R39544:39552 compcert.flocq.Core.Fcore_Raux <> Zceil_Z2R thm
R39579:39587 Coq.Reals.RIneq <> Rle_trans thm
R39611:39616 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R39579:39587 Coq.Reals.RIneq <> Rle_trans thm
R39611:39616 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R39652:39663 compcert.flocq.Core.Fcore_Raux <> Ztrunc_floor thm
R39679:39687 compcert.flocq.Core.Fcore_Raux <> Zfloor_le thm
R39704:39713 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R39652:39663 compcert.flocq.Core.Fcore_Raux <> Ztrunc_floor thm
R39679:39687 compcert.flocq.Core.Fcore_Raux <> Zfloor_le thm
R39704:39713 compcert.flocq.Core.Fcore_Raux <> Zfloor_Z2R thm
R39750:39758 Coq.Reals.RIneq <> Rle_trans thm
R39785:39790 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R39750:39758 Coq.Reals.RIneq <> Rle_trans thm
R39785:39790 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
prf 39824:39847 Float intuoffloat_intoffloat_1
R39954:39956 Coq.Init.Logic <> :type_scope:x_'='_x not
R39942:39951 compcert.lib.Floats Float intoffloat def
R39953:39953 compcert.lib.Floats <> x var
R39957:39960 Coq.Init.Datatypes <> Some constr
R39962:39962 compcert.lib.Floats <> n var
R39927:39929 Coq.Init.Logic <> :type_scope:x_'='_x not
R39914:39924 compcert.lib.Floats Float intuoffloat def
R39926:39926 compcert.lib.Floats <> x var
R39930:39933 Coq.Init.Datatypes <> Some constr
R39935:39935 compcert.lib.Floats <> n var
R39901:39903 Coq.Init.Logic <> :type_scope:x_'='_x not
R39866:39868 compcert.lib.Floats Float cmp def
R39877:39887 compcert.lib.Floats Float floatofintu def
R39889:39899 compcert.lib.Floats Float ox8000_0000 def
R39874:39874 compcert.lib.Floats <> x var
R39870:39872 compcert.lib.Integers <> Clt constr
R39904:39907 Coq.Init.Datatypes <> true constr
R39989:39991 compcert.lib.Floats Float cmp def
R40011:40036 compcert.lib.Floats Float order_float_finite_correct thm
R40041:40051 compcert.lib.Floats Float floatofintu def
R40053:40063 compcert.lib.Floats Float ox8000_0000 def
R40011:40036 compcert.lib.Floats Float order_float_finite_correct thm
R40041:40051 compcert.lib.Floats Float floatofintu def
R40053:40063 compcert.lib.Floats Float ox8000_0000 def
R40080:40090 compcert.lib.Floats Float order_float def
R40095:40105 compcert.lib.Floats Float floatofintu def
R40107:40117 compcert.lib.Floats Float ox8000_0000 def
R40080:40090 compcert.lib.Floats Float order_float def
R40095:40105 compcert.lib.Floats Float floatofintu def
R40107:40117 compcert.lib.Floats Float ox8000_0000 def
R40170:40188 compcert.lib.Floats Float intuoffloat_correct thm
R40170:40188 compcert.lib.Floats Float intuoffloat_correct thm
R40245:40251 Coq.Init.Logic <> eq_refl constr
R40267:40284 compcert.lib.Floats Float intoffloat_correct thm
R40300:40309 compcert.lib.Floats Float intoffloat def
R40245:40251 Coq.Init.Logic <> eq_refl constr
R40267:40284 compcert.lib.Floats Float intoffloat_correct thm
R40300:40309 compcert.lib.Floats Float intoffloat def
R40338:40342 Coq.Init.Logic <> proj2 thm
R40361:40366 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R40338:40342 Coq.Init.Logic <> proj2 thm
R40361:40366 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R40389:40395 Coq.Init.Logic <> eq_refl constr
R40398:40405 compcert.lib.Integers Int repr def
R40408:40419 compcert.lib.Integers Int unsigned def
R40389:40395 Coq.Init.Logic <> eq_refl constr
R40398:40405 compcert.lib.Integers Int repr def
R40408:40419 compcert.lib.Integers Int unsigned def
R40460:40474 compcert.lib.Integers Int repr_signed thm
R40477:40493 compcert.lib.Integers Int repr_unsigned thm
R40460:40474 compcert.lib.Integers Int repr_signed thm
R40477:40493 compcert.lib.Integers Int repr_unsigned thm
R40572:40591 compcert.lib.Floats Float intuoffloat_interval thm
R40572:40591 compcert.lib.Floats Float intuoffloat_interval thm
R40635:40646 Coq.Reals.RIneq <> Rlt_le_trans thm
R40679:40684 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
R40635:40646 Coq.Reals.RIneq <> Rlt_le_trans thm
R40679:40684 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
R40721:40735 compcert.flocq.Core.Fcore_Raux <> Rcompare_Lt_inv thm
R40751:40762 Coq.Reals.RIneq <> Rle_lt_trans thm
R40721:40735 compcert.flocq.Core.Fcore_Raux <> Rcompare_Lt_inv thm
R40751:40762 Coq.Reals.RIneq <> Rle_lt_trans thm
R40797:40807 compcert.lib.Floats Float floatofintu def
R40836:40840 Coq.Init.Logic <> proj1 thm
R40843:40866 compcert.lib.Floats Float binary_normalize64_exact thm
R40870:40870 compcert.lib.Floats <> H var
R40868:40868 compcert.lib.Floats <> x var
R40892:40897 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
R40836:40840 Coq.Init.Logic <> proj1 thm
R40843:40866 compcert.lib.Floats Float binary_normalize64_exact thm
R40870:40870 compcert.lib.Floats <> H var
R40868:40868 compcert.lib.Floats <> x var
R40892:40897 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
prf 40952:40963 Float Zfloor_minus
R40996:40998 Coq.Init.Logic <> :type_scope:x_'='_x not
R40981:40986 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R40989:40989 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R40988:40988 compcert.lib.Floats <> x var
R40990:40992 compcert.flocq.Core.Fcore_Raux <> Z2R def
R40994:40994 compcert.lib.Floats <> n var
R41008:41008 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40999:41004 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R41006:41006 compcert.lib.Floats <> x var
R41009:41009 compcert.lib.Floats <> n var
R41035:41044 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R41068:41070 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41064:41066 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R41056:41061 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R41092:41094 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R41088:41090 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41080:41085 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R41120:41128 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R41035:41044 compcert.flocq.Core.Fcore_Raux <> Zfloor_imp thm
R41092:41094 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R41088:41090 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41080:41085 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R41068:41070 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41064:41066 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R41056:41061 compcert.flocq.Core.Fcore_Raux <> Zfloor def
R41120:41128 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R41120:41128 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R41151:41167 Coq.Reals.RIneq <> Rplus_le_compat_r thm
R41180:41188 compcert.flocq.Core.Fcore_Raux <> Zfloor_lb thm
R41202:41218 Coq.Reals.RIneq <> Rplus_lt_compat_r thm
R41229:41236 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R41249:41257 compcert.flocq.Core.Fcore_Raux <> Zfloor_ub thm
R41151:41167 Coq.Reals.RIneq <> Rplus_le_compat_r thm
R41180:41188 compcert.flocq.Core.Fcore_Raux <> Zfloor_lb thm
R41202:41218 Coq.Reals.RIneq <> Rplus_lt_compat_r thm
R41229:41236 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R41249:41257 compcert.flocq.Core.Fcore_Raux <> Zfloor_ub thm
prf 41275:41298 Float intuoffloat_intoffloat_2
R41438:41440 Coq.Init.Logic <> :type_scope:x_'='_x not
R41394:41403 compcert.lib.Floats Float intoffloat def
R41406:41408 compcert.lib.Floats Float sub def
R41413:41423 compcert.lib.Floats Float floatofintu def
R41425:41435 compcert.lib.Floats Float ox8000_0000 def
R41410:41410 compcert.lib.Floats <> x var
R41441:41444 Coq.Init.Datatypes <> Some constr
R41447:41453 compcert.lib.Integers Int sub def
R41457:41467 compcert.lib.Floats Float ox8000_0000 def
R41455:41455 compcert.lib.Floats <> n var
R41379:41381 Coq.Init.Logic <> :type_scope:x_'='_x not
R41366:41376 compcert.lib.Floats Float intuoffloat def
R41378:41378 compcert.lib.Floats <> x var
R41382:41385 Coq.Init.Datatypes <> Some constr
R41387:41387 compcert.lib.Floats <> n var
R41352:41354 Coq.Init.Logic <> :type_scope:x_'='_x not
R41317:41319 compcert.lib.Floats Float cmp def
R41328:41338 compcert.lib.Floats Float floatofintu def
R41340:41350 compcert.lib.Floats Float ox8000_0000 def
R41325:41325 compcert.lib.Floats <> x var
R41321:41323 compcert.lib.Integers <> Clt constr
R41355:41359 Coq.Init.Datatypes <> false constr
R41521:41523 Coq.Init.Logic <> :type_scope:x_'='_x not
R41488:41490 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R41497:41507 compcert.lib.Floats Float floatofintu def
R41509:41519 compcert.lib.Floats Float ox8000_0000 def
R41524:41526 compcert.flocq.Core.Fcore_Raux <> Z2R def
R41529:41540 compcert.lib.Integers Int unsigned def
R41542:41552 compcert.lib.Floats Float ox8000_0000 def
R41521:41523 Coq.Init.Logic <> :type_scope:x_'='_x not
R41488:41490 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R41497:41507 compcert.lib.Floats Float floatofintu def
R41509:41519 compcert.lib.Floats Float ox8000_0000 def
R41524:41526 compcert.flocq.Core.Fcore_Raux <> Z2R def
R41529:41540 compcert.lib.Integers Int unsigned def
R41542:41552 compcert.lib.Floats Float ox8000_0000 def
R41577:41581 Coq.Init.Logic <> proj1 thm
R41584:41607 compcert.lib.Floats Float binary_normalize64_exact thm
R41611:41611 compcert.lib.Floats <> H var
R41609:41609 compcert.lib.Floats <> x var
R41577:41581 Coq.Init.Logic <> proj1 thm
R41584:41607 compcert.lib.Floats Float binary_normalize64_exact thm
R41611:41611 compcert.lib.Floats <> H var
R41609:41609 compcert.lib.Floats <> x var
R41653:41655 compcert.lib.Floats Float cmp def
R41676:41701 compcert.lib.Floats Float order_float_finite_correct thm
R41706:41716 compcert.lib.Floats Float floatofintu def
R41718:41728 compcert.lib.Floats Float ox8000_0000 def
R41676:41701 compcert.lib.Floats Float order_float_finite_correct thm
R41706:41716 compcert.lib.Floats Float floatofintu def
R41718:41728 compcert.lib.Floats Float ox8000_0000 def
R41745:41755 compcert.lib.Floats Float order_float def
R41760:41770 compcert.lib.Floats Float floatofintu def
R41772:41782 compcert.lib.Floats Float ox8000_0000 def
R41835:41853 compcert.lib.Floats Float intuoffloat_correct thm
R41908:41914 Coq.Init.Logic <> eq_refl constr
R41745:41755 compcert.lib.Floats Float order_float def
R41760:41770 compcert.lib.Floats Float floatofintu def
R41772:41782 compcert.lib.Floats Float ox8000_0000 def
R41835:41853 compcert.lib.Floats Float intuoffloat_correct thm
R41835:41853 compcert.lib.Floats Float intuoffloat_correct thm
R41835:41853 compcert.lib.Floats Float intuoffloat_correct thm
R41908:41914 Coq.Init.Logic <> eq_refl constr
R41908:41914 Coq.Init.Logic <> eq_refl constr
R41908:41914 Coq.Init.Logic <> eq_refl constr
R41926:41940 compcert.flocq.Core.Fcore_Raux <> Rcompare_Eq_inv thm
R41955:41961 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R41926:41940 compcert.flocq.Core.Fcore_Raux <> Rcompare_Eq_inv thm
R41955:41961 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R42117:42119 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R42135:42140 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R42117:42119 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R42135:42140 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R42219:42233 compcert.flocq.Core.Fcore_Raux <> Rcompare_Gt_inv thm
R42254:42273 compcert.lib.Floats Float intuoffloat_interval thm
R42219:42233 compcert.flocq.Core.Fcore_Raux <> Rcompare_Gt_inv thm
R42254:42273 compcert.lib.Floats Float intuoffloat_interval thm
R42293:42295 compcert.lib.Floats Float sub def
R42298:42306 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_minus def
R42320:42333 compcert.flocq.Appli.Fappli_IEEE <> Bminus_correct thm
R42379:42389 compcert.lib.Floats Float floatofintu def
R42391:42401 compcert.lib.Floats Float ox8000_0000 def
R42368:42374 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R42359:42366 compcert.lib.Floats Float binop_pl def
R42351:42357 Coq.Init.Logic <> eq_refl constr
R42343:42349 Coq.Init.Logic <> eq_refl constr
R42320:42333 compcert.flocq.Appli.Fappli_IEEE <> Bminus_correct thm
R42379:42389 compcert.lib.Floats Float floatofintu def
R42391:42401 compcert.lib.Floats Float ox8000_0000 def
R42368:42374 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R42359:42366 compcert.lib.Floats Float binop_pl def
R42351:42357 Coq.Init.Logic <> eq_refl constr
R42343:42349 Coq.Init.Logic <> eq_refl constr
R42453:42465 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R42453:42465 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R42499:42506 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R42499:42506 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R42551:42563 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R42581:42588 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R42551:42563 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R42581:42588 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R42651:42653 Coq.Init.Logic <> :type_scope:x_'='_x not
R42651:42653 Coq.Init.Logic <> :type_scope:x_'='_x not
R42672:42689 compcert.lib.Floats Float intoffloat_correct thm
R42705:42714 compcert.lib.Floats Float intoffloat def
R42672:42689 compcert.lib.Floats Float intoffloat_correct thm
R42705:42714 compcert.lib.Floats Float intoffloat def
R42763:42777 compcert.lib.Integers Int repr_signed thm
R42790:42796 compcert.lib.Integers Int sub def
R42814:42819 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R42763:42777 compcert.lib.Integers Int repr_signed thm
R42814:42819 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R42833:42841 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R42833:42841 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R42862:42866 compcert.flocq.Core.Fcore_generic_fmt <> round def
R42869:42883 compcert.flocq.Core.Fcore_generic_fmt <> scaled_mantissa def
R42886:42888 compcert.flocq.Core.Fcore_defs <> F2R def
R42891:42894 compcert.flocq.Core.Fcore_defs <> Fexp proj
R42897:42900 compcert.flocq.Core.Fcore_defs <> Fnum proj
R42903:42912 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R42921:42924 compcert.flocq.Core.Fcore_Raux <> bpow def
R42942:42950 Coq.Reals.RIneq <> Rmult_1_r thm
R42968:42976 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R42921:42924 compcert.flocq.Core.Fcore_Raux <> bpow def
R42942:42950 Coq.Reals.RIneq <> Rmult_1_r thm
R42942:42950 Coq.Reals.RIneq <> Rmult_1_r thm
R42942:42950 Coq.Reals.RIneq <> Rmult_1_r thm
R42942:42950 Coq.Reals.RIneq <> Rmult_1_r thm
R42942:42950 Coq.Reals.RIneq <> Rmult_1_r thm
R42968:42976 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R42999:43010 compcert.flocq.Core.Fcore_Raux <> Ztrunc_floor thm
R43013:43015 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R43029:43040 compcert.lib.Floats Float Zfloor_minus thm
R43046:43057 compcert.flocq.Core.Fcore_Raux <> Ztrunc_floor thm
R43091:43101 compcert.flocq.Core.Fcore_Raux <> Rle_0_minus thm
R42999:43010 compcert.flocq.Core.Fcore_Raux <> Ztrunc_floor thm
R43013:43015 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R43029:43040 compcert.lib.Floats Float Zfloor_minus thm
R43046:43057 compcert.flocq.Core.Fcore_Raux <> Ztrunc_floor thm
R43091:43101 compcert.flocq.Core.Fcore_Raux <> Rle_0_minus thm
R43139:43147 Coq.Reals.Raxioms <> Rlt_trans prfax
R43174:43179 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R43139:43147 Coq.Reals.Raxioms <> Rlt_trans prfax
R43174:43179 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R43227:43228 Coq.Init.Datatypes <> Lt constr
R43214:43217 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R43214:43217 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R43227:43228 Coq.Init.Datatypes <> Lt constr
R43292:43293 Coq.Init.Datatypes <> Lt constr
R43277:43280 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R43277:43280 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R43292:43293 Coq.Init.Datatypes <> Lt constr
R43342:43349 Coq.ZArith.BinInt <> Zcompare syndef
R43342:43349 Coq.ZArith.BinInt <> Zcompare syndef
R43438:43446 Coq.Reals.RIneq <> Rle_trans thm
R43464:43474 compcert.flocq.Core.Fcore_Raux <> Rle_0_minus thm
R43503:43508 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R43438:43446 Coq.Reals.RIneq <> Rle_trans thm
R43464:43474 compcert.flocq.Core.Fcore_Raux <> Rle_0_minus thm
R43503:43508 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R43554:43565 Coq.Reals.RIneq <> Rle_lt_trans thm
R43583:43599 Coq.Reals.RIneq <> Rplus_lt_compat_r thm
R43613:43617 Coq.Init.Logic <> proj2 thm
R43554:43565 Coq.Reals.RIneq <> Rle_lt_trans thm
R43583:43599 Coq.Reals.RIneq <> Rplus_lt_compat_r thm
R43613:43617 Coq.Init.Logic <> proj2 thm
R43638:43644 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R43650:43657 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R43673:43678 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
R43638:43644 compcert.flocq.Core.Fcore_Raux <> Z2R_opp thm
R43650:43657 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R43673:43678 compcert.flocq.Core.Fcore_Raux <> lt_Z2R thm
R43735:43744 Coq.Reals.Rbasic_fun <> Rabs_right thm
R43735:43744 Coq.Reals.Rbasic_fun <> Rabs_right thm
R43762:43773 Coq.Reals.RIneq <> Rle_lt_trans thm
R43762:43773 Coq.Reals.RIneq <> Rle_lt_trans thm
R43788:43797 Coq.Reals.RIneq <> Rle_not_lt thm
R43825:43831 compcert.flocq.Core.Fcore_Raux <> bpow_le thm
R43788:43797 Coq.Reals.RIneq <> Rle_not_lt thm
R43825:43831 compcert.flocq.Core.Fcore_Raux <> bpow_le thm
R43887:43889 compcert.flocq.Core.Fcore_Raux <> Z2R def
R43913:43915 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43891:43895 Coq.ZArith.BinInt <> Zsucc syndef
R43897:43912 compcert.lib.Integers Int max_unsigned def
R43916:43927 compcert.lib.Integers Int unsigned def
R43929:43939 compcert.lib.Floats Float ox8000_0000 def
R43865:43868 compcert.flocq.Core.Fcore_Raux <> bpow def
R43870:43875 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R43952:43960 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R43865:43868 compcert.flocq.Core.Fcore_Raux <> bpow def
R43870:43875 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R43887:43889 compcert.flocq.Core.Fcore_Raux <> Z2R def
R43913:43915 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43891:43895 Coq.ZArith.BinInt <> Zsucc syndef
R43897:43912 compcert.lib.Integers Int max_unsigned def
R43916:43927 compcert.lib.Integers Int unsigned def
R43929:43939 compcert.lib.Floats Float ox8000_0000 def
R43952:43960 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R43971:43987 Coq.Reals.RIneq <> Rplus_lt_compat_r thm
R43997:44001 Coq.Init.Logic <> proj2 thm
R43971:43987 Coq.Reals.RIneq <> Rplus_lt_compat_r thm
R43997:44001 Coq.Init.Logic <> proj2 thm
R44016:44021 Coq.Reals.RIneq <> Rle_ge thm
R44030:44040 compcert.flocq.Core.Fcore_Raux <> Rle_0_minus thm
R44016:44021 Coq.Reals.RIneq <> Rle_ge thm
R44030:44040 compcert.flocq.Core.Fcore_Raux <> Rle_0_minus thm
R44073:44092 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R44073:44092 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R44103:44129 compcert.flocq.Prop.Fprop_Sterbenz <> sterbenz_aux thm
R44143:44155 compcert.flocq.Appli.Fappli_IEEE <> fexp_monotone inst
R44167:44184 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R44103:44129 compcert.flocq.Prop.Fprop_Sterbenz <> sterbenz_aux thm
R44143:44155 compcert.flocq.Appli.Fappli_IEEE <> fexp_monotone inst
R44167:44184 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R44217:44234 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R44217:44234 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
def 44553:44563 Float ox4330_0000
R44568:44575 compcert.lib.Integers Int repr def
prf 44625:44637 Float split_bits_or
R44717:44719 Coq.Init.Logic <> :type_scope:x_'='_x not
R44654:44663 compcert.flocq.Appli.Fappli_IEEE_bits <> split_bits def
R44672:44685 compcert.lib.Integers Int64 unsigned def
R44688:44700 compcert.lib.Integers Int64 ofwords def
R44714:44714 compcert.lib.Floats <> x var
R44702:44712 compcert.lib.Floats Float ox4330_0000 def
R44720:44720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44726:44727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44742:44743 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44748:44748 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44721:44725 Coq.Init.Datatypes <> false constr
R44728:44739 compcert.lib.Integers Int unsigned def
R44741:44741 compcert.lib.Floats <> x var
R44784:44793 compcert.flocq.Appli.Fappli_IEEE_bits <> split_bits def
R44802:44810 compcert.flocq.Appli.Fappli_IEEE_bits <> join_bits def
R44825:44836 compcert.lib.Integers Int unsigned def
R44818:44822 Coq.Init.Datatypes <> false constr
R44784:44793 compcert.flocq.Appli.Fappli_IEEE_bits <> split_bits def
R44802:44810 compcert.flocq.Appli.Fappli_IEEE_bits <> join_bits def
R44825:44836 compcert.lib.Integers Int unsigned def
R44818:44822 Coq.Init.Datatypes <> false constr
R44870:44887 compcert.lib.Integers Int64 ofwords_add' thm
R44870:44887 compcert.lib.Integers Int64 ofwords_add' thm
R44913:44927 compcert.flocq.Appli.Fappli_IEEE_bits <> split_join_bits thm
R44913:44927 compcert.flocq.Appli.Fappli_IEEE_bits <> split_join_bits thm
R44965:44982 compcert.lib.Integers Int unsigned_range thm
R44965:44982 compcert.lib.Integers Int unsigned_range thm
R45033:45033 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R45005:45015 compcert.lib.Integers Int modulus def
R45033:45033 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R45065:45065 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R45065:45065 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
prf 45090:45105 Float from_words_value
R45206:45213 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45158:45164 Coq.Init.Logic <> :type_scope:x_'='_x not
R45124:45126 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R45133:45142 compcert.lib.Floats Float from_words def
R45156:45156 compcert.lib.Floats <> x var
R45144:45154 compcert.lib.Floats Float ox4330_0000 def
R45180:45182 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R45166:45169 compcert.flocq.Core.Fcore_Raux <> bpow def
R45171:45176 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R45183:45185 compcert.flocq.Core.Fcore_Raux <> Z2R def
R45188:45199 compcert.lib.Integers Int unsigned def
R45201:45201 compcert.lib.Floats <> x var
R45254:45256 Coq.Init.Logic <> :type_scope:x_'='_x not
R45214:45222 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R45229:45238 compcert.lib.Floats Float from_words def
R45252:45252 compcert.lib.Floats <> x var
R45240:45250 compcert.lib.Floats Float ox4330_0000 def
R45257:45260 Coq.Init.Datatypes <> true constr
R45287:45296 compcert.lib.Floats Float from_words def
R45299:45312 compcert.lib.Floats Float double_of_bits def
R45315:45325 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_of_bits def
R45328:45347 compcert.flocq.Appli.Fappli_IEEE_bits <> binary_float_of_bits def
R45360:45367 compcert.flocq.Appli.Fappli_IEEE <> B2R_FF2B thm
R45360:45367 compcert.flocq.Appli.Fappli_IEEE <> B2R_FF2B thm
R45378:45391 compcert.flocq.Appli.Fappli_IEEE <> is_finite_FF2B thm
R45378:45391 compcert.flocq.Appli.Fappli_IEEE <> is_finite_FF2B thm
R45403:45426 compcert.flocq.Appli.Fappli_IEEE_bits <> binary_float_of_bits_aux def
R45437:45449 compcert.lib.Floats Float split_bits_or thm
R45471:45488 compcert.lib.Integers Int unsigned_range thm
R45437:45449 compcert.lib.Floats Float split_bits_or thm
R45471:45488 compcert.lib.Integers Int unsigned_range thm
R45520:45522 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R45506:45517 compcert.lib.Integers Int unsigned def
R45523:45532 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R45520:45522 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R45506:45517 compcert.lib.Integers Int unsigned def
R45523:45532 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R45609:45611 compcert.flocq.Core.Fcore_defs <> F2R def
R45635:45642 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R45663:45671 Coq.Reals.RIneq <> Rmult_1_r thm
R45635:45642 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R45663:45671 Coq.Reals.RIneq <> Rmult_1_r thm
R45707:45716 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R45707:45716 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R45762:45764 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R45756:45759 Coq.Numbers.BinNums <> Zneg constr
R45762:45764 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R45756:45759 Coq.Numbers.BinNums <> Zneg constr
prf 45826:45847 Float floatofintu_from_words
R45877:45883 Coq.Init.Logic <> :type_scope:x_'='_x not
R45864:45874 compcert.lib.Floats Float floatofintu def
R45876:45876 compcert.lib.Floats <> x var
R45884:45886 compcert.lib.Floats Float sub def
R45916:45925 compcert.lib.Floats Float from_words def
R45939:45946 compcert.lib.Integers Int zero def
R45927:45937 compcert.lib.Floats Float ox4330_0000 def
R45889:45898 compcert.lib.Floats Float from_words def
R45912:45912 compcert.lib.Floats <> x var
R45900:45910 compcert.lib.Floats Float ox4330_0000 def
R45977:45986 compcert.lib.Integers Int eq_dec thm
R45990:45997 compcert.lib.Integers Int zero def
R45977:45986 compcert.lib.Integers Int eq_dec thm
R45990:45997 compcert.lib.Integers Int zero def
R46060:46063 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R46046:46057 compcert.lib.Integers Int unsigned def
R46060:46063 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R46046:46057 compcert.lib.Integers Int unsigned def
R46101:46117 compcert.lib.Integers Int repr_unsigned thm
R46101:46117 compcert.lib.Integers Int repr_unsigned thm
R46153:46170 compcert.lib.Integers Int unsigned_range thm
R46153:46170 compcert.lib.Integers Int unsigned_range thm
R46190:46213 compcert.lib.Floats Float binary_normalize64_exact thm
R46216:46227 compcert.lib.Integers Int unsigned def
R46190:46213 compcert.lib.Floats Float binary_normalize64_exact thm
R46216:46227 compcert.lib.Integers Int unsigned def
R46272:46282 compcert.lib.Floats Float floatofintu def
R46285:46287 compcert.lib.Floats Float sub def
R46290:46298 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_minus def
R46324:46326 Coq.Init.Logic <> :type_scope:x_'='_x not
R46327:46332 compcert.flocq.Appli.Fappli_IEEE <> Bminus def
R46324:46326 Coq.Init.Logic <> :type_scope:x_'='_x not
R46327:46332 compcert.flocq.Appli.Fappli_IEEE <> Bminus def
R46372:46385 compcert.flocq.Appli.Fappli_IEEE <> Bminus_correct thm
R46420:46426 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R46411:46418 compcert.lib.Floats Float binop_pl def
R46403:46409 Coq.Init.Logic <> eq_refl constr
R46395:46401 Coq.Init.Logic <> eq_refl constr
R46372:46385 compcert.flocq.Appli.Fappli_IEEE <> Bminus_correct thm
R46420:46426 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R46411:46418 compcert.lib.Floats Float binop_pl def
R46403:46409 Coq.Init.Logic <> eq_refl constr
R46395:46401 Coq.Init.Logic <> eq_refl constr
R46460:46460 compcert.lib.Floats <> f var
R46464:46464 compcert.lib.Floats <> y var
R46462:46462 compcert.lib.Floats <> x var
R46494:46498 Coq.Init.Logic <> proj2 thm
R46501:46516 compcert.lib.Floats Float from_words_value thm
R46518:46518 compcert.lib.Floats <> x var
R46460:46460 compcert.lib.Floats <> f var
R46464:46464 compcert.lib.Floats <> y var
R46462:46462 compcert.lib.Floats <> x var
R46494:46498 Coq.Init.Logic <> proj2 thm
R46501:46516 compcert.lib.Floats Float from_words_value thm
R46518:46518 compcert.lib.Floats <> x var
R46494:46498 Coq.Init.Logic <> proj2 thm
R46501:46516 compcert.lib.Floats Float from_words_value thm
R46518:46518 compcert.lib.Floats <> x var
R46494:46498 Coq.Init.Logic <> proj2 thm
R46501:46516 compcert.lib.Floats Float from_words_value thm
R46518:46518 compcert.lib.Floats <> x var
R46548:46552 Coq.Init.Logic <> proj1 thm
R46555:46570 compcert.lib.Floats Float from_words_value thm
R46572:46572 compcert.lib.Floats <> x var
R46548:46552 Coq.Init.Logic <> proj1 thm
R46555:46570 compcert.lib.Floats Float from_words_value thm
R46572:46572 compcert.lib.Floats <> x var
R46548:46552 Coq.Init.Logic <> proj1 thm
R46555:46570 compcert.lib.Floats Float from_words_value thm
R46572:46572 compcert.lib.Floats <> x var
R46593:46609 compcert.lib.Integers Int unsigned_zero thm
R46593:46609 compcert.lib.Integers Int unsigned_zero thm
R46666:46673 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R46696:46696 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R46643:46645 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R46629:46632 compcert.flocq.Core.Fcore_Raux <> bpow def
R46634:46639 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R46646:46648 compcert.flocq.Core.Fcore_Raux <> Z2R def
R46651:46662 compcert.lib.Integers Int unsigned def
R46688:46690 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R46674:46677 compcert.flocq.Core.Fcore_Raux <> bpow def
R46679:46684 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R46691:46693 compcert.flocq.Core.Fcore_Raux <> Z2R def
R46707:46709 compcert.flocq.Core.Fcore_Raux <> Z2R def
R46712:46723 compcert.lib.Integers Int unsigned def
R46707:46709 compcert.flocq.Core.Fcore_Raux <> Z2R def
R46712:46723 compcert.lib.Integers Int unsigned def
R46666:46673 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R46696:46696 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R46643:46645 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R46629:46632 compcert.flocq.Core.Fcore_Raux <> bpow def
R46634:46639 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R46646:46648 compcert.flocq.Core.Fcore_Raux <> Z2R def
R46651:46662 compcert.lib.Integers Int unsigned def
R46688:46690 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R46674:46677 compcert.flocq.Core.Fcore_Raux <> bpow def
R46679:46684 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R46691:46693 compcert.flocq.Core.Fcore_Raux <> Z2R def
R46763:46773 compcert.lib.Floats Float round_exact thm
R46763:46773 compcert.lib.Floats Float round_exact thm
R46822:46829 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R46822:46829 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R46876:46888 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R46906:46913 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R46876:46888 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R46906:46913 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R46980:46981 Coq.Init.Datatypes <> Lt constr
R46965:46968 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R46965:46968 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R46980:46981 Coq.Init.Datatypes <> Lt constr
R47021:47028 Coq.ZArith.BinInt <> Zcompare syndef
R47042:47048 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R47089:47091 Coq.Init.Logic <> :type_scope:x_'='_x not
R47079:47081 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R47089:47091 Coq.Init.Logic <> :type_scope:x_'='_x not
R47079:47081 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R47116:47118 Coq.Init.Logic <> :type_scope:x_'='_x not
R47100:47108 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R47119:47122 Coq.Init.Datatypes <> true constr
R47116:47118 Coq.Init.Logic <> :type_scope:x_'='_x not
R47100:47108 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R47119:47122 Coq.Init.Datatypes <> true constr
R47150:47152 Coq.Init.Logic <> :type_scope:x_'='_x not
R47127:47142 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R47153:47156 Coq.Init.Datatypes <> true constr
R47150:47152 Coq.Init.Logic <> :type_scope:x_'='_x not
R47127:47142 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R47153:47156 Coq.Init.Datatypes <> true constr
R47221:47223 compcert.flocq.Core.Fcore_Raux <> Z2R def
R47241:47246 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R47272:47277 Coq.Init.Logic <> eq_sym thm
R47021:47028 Coq.ZArith.BinInt <> Zcompare syndef
R47042:47048 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R47221:47223 compcert.flocq.Core.Fcore_Raux <> Z2R def
R47241:47246 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R47272:47277 Coq.Init.Logic <> eq_sym thm
R47221:47223 compcert.flocq.Core.Fcore_Raux <> Z2R def
R47241:47246 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R47272:47277 Coq.Init.Logic <> eq_sym thm
R47436:47438 compcert.flocq.Core.Fcore_Raux <> Z2R def
R47447:47449 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R47441:47446 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R47412:47415 compcert.flocq.Core.Fcore_Raux <> bpow def
R47417:47422 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R47475:47481 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R47412:47415 compcert.flocq.Core.Fcore_Raux <> bpow def
R47417:47422 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R47436:47438 compcert.flocq.Core.Fcore_Raux <> Z2R def
R47447:47449 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R47441:47446 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R47475:47481 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R47498:47503 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R47524:47532 Coq.ZArith.Zabs <> Zabs_spec thm
R47535:47546 compcert.lib.Integers Int unsigned def
R47498:47503 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R47524:47532 Coq.ZArith.Zabs <> Zabs_spec thm
R47535:47546 compcert.lib.Integers Int unsigned def
prf 47595:47621 Float ox8000_0000_signed_unsigned
R47676:47678 Coq.Init.Logic <> :type_scope:x_'='_x not
R47640:47651 compcert.lib.Integers Int unsigned def
R47654:47660 compcert.lib.Integers Int add def
R47664:47674 compcert.lib.Floats Float ox8000_0000 def
R47662:47662 compcert.lib.Floats <> x var
R47691:47693 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R47679:47688 compcert.lib.Integers Int signed def
R47690:47690 compcert.lib.Floats <> x var
R47694:47709 compcert.lib.Integers Int half_modulus def
R47735:47744 compcert.lib.Integers Int signed def
R47747:47753 compcert.lib.Integers Int add def
R47768:47785 compcert.lib.Integers Int unsigned_range thm
R47768:47785 compcert.lib.Integers Int unsigned_range thm
R47803:47805 compcert.lib.Coqlib <> zlt def
R47824:47839 compcert.lib.Integers Int half_modulus def
R47808:47819 compcert.lib.Integers Int unsigned def
R47803:47805 compcert.lib.Coqlib <> zlt def
R47824:47839 compcert.lib.Integers Int half_modulus def
R47808:47819 compcert.lib.Integers Int unsigned def
R47853:47869 compcert.lib.Integers Int unsigned_repr thm
R47886:47897 compcert.lib.Integers Int unsigned def
R47899:47909 compcert.lib.Floats Float ox8000_0000 def
R47853:47869 compcert.lib.Integers Int unsigned_repr thm
R47886:47897 compcert.lib.Integers Int unsigned def
R47899:47909 compcert.lib.Floats Float ox8000_0000 def
R47886:47897 compcert.lib.Integers Int unsigned def
R47899:47909 compcert.lib.Floats Float ox8000_0000 def
R47941:47956 compcert.lib.Integers Int eqm_samerepr thm
R47975:47977 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R47961:47972 compcert.lib.Integers Int unsigned def
R47941:47956 compcert.lib.Integers Int eqm_samerepr thm
R47975:47977 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R47961:47972 compcert.lib.Integers Int unsigned def
R48003:48019 compcert.lib.Integers Int unsigned_repr thm
R48003:48019 compcert.lib.Integers Int unsigned_repr thm
R48047:48057 compcert.lib.Integers Int eqm_add thm
R48071:48082 compcert.lib.Integers Int eqm_refl thm
R48047:48057 compcert.lib.Integers Int eqm_add thm
R48071:48082 compcert.lib.Integers Int eqm_refl thm
prf 48121:48141 Float floatofint_from_words
R48170:48176 Coq.Init.Logic <> :type_scope:x_'='_x not
R48158:48167 compcert.lib.Floats Float floatofint def
R48169:48169 compcert.lib.Floats <> x var
R48177:48179 compcert.lib.Floats Float sub def
R48239:48248 compcert.lib.Floats Float from_words def
R48262:48272 compcert.lib.Floats Float ox8000_0000 def
R48250:48260 compcert.lib.Floats Float ox4330_0000 def
R48182:48191 compcert.lib.Floats Float from_words def
R48206:48212 compcert.lib.Integers Int add def
R48216:48226 compcert.lib.Floats Float ox8000_0000 def
R48214:48214 compcert.lib.Floats <> x var
R48193:48203 compcert.lib.Floats Float ox4330_0000 def
R48301:48308 compcert.lib.Integers Int repr def
R48310:48319 compcert.lib.Integers Int64 repr def
R48342:48351 compcert.lib.Integers Int eq_dec thm
R48355:48362 compcert.lib.Integers Int zero def
R48342:48351 compcert.lib.Integers Int eq_dec thm
R48355:48362 compcert.lib.Integers Int zero def
R48423:48426 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R48411:48420 compcert.lib.Integers Int signed def
R48423:48426 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R48411:48420 compcert.lib.Integers Int signed def
R48464:48478 compcert.lib.Integers Int repr_signed thm
R48464:48478 compcert.lib.Integers Int repr_signed thm
R48514:48529 compcert.lib.Integers Int signed_range thm
R48514:48529 compcert.lib.Integers Int signed_range thm
R48549:48572 compcert.lib.Floats Float binary_normalize64_exact thm
R48575:48584 compcert.lib.Integers Int signed def
R48549:48572 compcert.lib.Floats Float binary_normalize64_exact thm
R48575:48584 compcert.lib.Integers Int signed def
R48633:48642 compcert.lib.Floats Float floatofint def
R48645:48647 compcert.lib.Floats Float sub def
R48650:48658 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_minus def
R48684:48686 Coq.Init.Logic <> :type_scope:x_'='_x not
R48687:48692 compcert.flocq.Appli.Fappli_IEEE <> Bminus def
R48684:48686 Coq.Init.Logic <> :type_scope:x_'='_x not
R48687:48692 compcert.flocq.Appli.Fappli_IEEE <> Bminus def
R48732:48745 compcert.flocq.Appli.Fappli_IEEE <> Bminus_correct thm
R48780:48786 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R48771:48778 compcert.lib.Floats Float binop_pl def
R48763:48769 Coq.Init.Logic <> eq_refl constr
R48755:48761 Coq.Init.Logic <> eq_refl constr
R48732:48745 compcert.flocq.Appli.Fappli_IEEE <> Bminus_correct thm
R48780:48786 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R48771:48778 compcert.lib.Floats Float binop_pl def
R48763:48769 Coq.Init.Logic <> eq_refl constr
R48755:48761 Coq.Init.Logic <> eq_refl constr
R48820:48820 compcert.lib.Floats <> f var
R48824:48824 compcert.lib.Floats <> y var
R48822:48822 compcert.lib.Floats <> x var
R48854:48858 Coq.Init.Logic <> proj2 thm
R48861:48876 compcert.lib.Floats Float from_words_value thm
R48878:48878 compcert.lib.Floats <> x var
R48820:48820 compcert.lib.Floats <> f var
R48824:48824 compcert.lib.Floats <> y var
R48822:48822 compcert.lib.Floats <> x var
R48854:48858 Coq.Init.Logic <> proj2 thm
R48861:48876 compcert.lib.Floats Float from_words_value thm
R48878:48878 compcert.lib.Floats <> x var
R48854:48858 Coq.Init.Logic <> proj2 thm
R48861:48876 compcert.lib.Floats Float from_words_value thm
R48878:48878 compcert.lib.Floats <> x var
R48854:48858 Coq.Init.Logic <> proj2 thm
R48861:48876 compcert.lib.Floats Float from_words_value thm
R48878:48878 compcert.lib.Floats <> x var
R48908:48912 Coq.Init.Logic <> proj1 thm
R48915:48930 compcert.lib.Floats Float from_words_value thm
R48932:48932 compcert.lib.Floats <> x var
R48908:48912 Coq.Init.Logic <> proj1 thm
R48915:48930 compcert.lib.Floats Float from_words_value thm
R48932:48932 compcert.lib.Floats <> x var
R48908:48912 Coq.Init.Logic <> proj1 thm
R48915:48930 compcert.lib.Floats Float from_words_value thm
R48932:48932 compcert.lib.Floats <> x var
R49013:49020 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R49068:49068 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R48968:48970 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R48954:48957 compcert.flocq.Core.Fcore_Raux <> bpow def
R48959:48964 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R48971:48973 compcert.flocq.Core.Fcore_Raux <> Z2R def
R48976:48987 compcert.lib.Integers Int unsigned def
R48990:48996 compcert.lib.Integers Int add def
R49000:49010 compcert.lib.Floats Float ox8000_0000 def
R49035:49037 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R49021:49024 compcert.flocq.Core.Fcore_Raux <> bpow def
R49026:49031 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R49038:49040 compcert.flocq.Core.Fcore_Raux <> Z2R def
R49043:49054 compcert.lib.Integers Int unsigned def
R49056:49066 compcert.lib.Floats Float ox8000_0000 def
R49079:49081 compcert.flocq.Core.Fcore_Raux <> Z2R def
R49084:49093 compcert.lib.Integers Int signed def
R49119:49145 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R49156:49163 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R49079:49081 compcert.flocq.Core.Fcore_Raux <> Z2R def
R49084:49093 compcert.lib.Integers Int signed def
R49013:49020 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R49068:49068 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R48968:48970 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R48954:48957 compcert.flocq.Core.Fcore_Raux <> bpow def
R48959:48964 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R48971:48973 compcert.flocq.Core.Fcore_Raux <> Z2R def
R48976:48987 compcert.lib.Integers Int unsigned def
R48990:48996 compcert.lib.Integers Int add def
R49000:49010 compcert.lib.Floats Float ox8000_0000 def
R49035:49037 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R49021:49024 compcert.flocq.Core.Fcore_Raux <> bpow def
R49026:49031 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R49038:49040 compcert.flocq.Core.Fcore_Raux <> Z2R def
R49043:49054 compcert.lib.Integers Int unsigned def
R49056:49066 compcert.lib.Floats Float ox8000_0000 def
R49119:49145 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R49156:49163 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R49190:49200 compcert.lib.Floats Float round_exact thm
R49190:49200 compcert.lib.Floats Float round_exact thm
R49249:49256 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R49249:49256 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R49303:49315 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R49333:49340 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R49303:49315 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R49333:49340 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R49404:49405 Coq.Init.Datatypes <> Lt constr
R49391:49394 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R49391:49394 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R49404:49405 Coq.Init.Datatypes <> Lt constr
R49469:49470 Coq.Init.Datatypes <> Lt constr
R49454:49457 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R49454:49457 Coq.ZArith.BinInt <> :Z_scope:x_'?='_x not
R49469:49470 Coq.Init.Datatypes <> Lt constr
R49510:49517 Coq.ZArith.BinInt <> Zcompare syndef
R49531:49537 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R49578:49580 Coq.Init.Logic <> :type_scope:x_'='_x not
R49568:49570 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R49578:49580 Coq.Init.Logic <> :type_scope:x_'='_x not
R49568:49570 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R49605:49607 Coq.Init.Logic <> :type_scope:x_'='_x not
R49589:49597 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R49608:49611 Coq.Init.Datatypes <> true constr
R49605:49607 Coq.Init.Logic <> :type_scope:x_'='_x not
R49589:49597 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R49608:49611 Coq.Init.Datatypes <> true constr
R49639:49641 Coq.Init.Logic <> :type_scope:x_'='_x not
R49616:49631 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R49642:49645 Coq.Init.Datatypes <> true constr
R49639:49641 Coq.Init.Logic <> :type_scope:x_'='_x not
R49616:49631 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R49642:49645 Coq.Init.Datatypes <> true constr
R49710:49712 compcert.flocq.Core.Fcore_Raux <> Z2R def
R49730:49735 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R49761:49766 Coq.Init.Logic <> eq_sym thm
R49510:49517 Coq.ZArith.BinInt <> Zcompare syndef
R49531:49537 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R49710:49712 compcert.flocq.Core.Fcore_Raux <> Z2R def
R49730:49735 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R49761:49766 Coq.Init.Logic <> eq_sym thm
R49710:49712 compcert.flocq.Core.Fcore_Raux <> Z2R def
R49730:49735 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R49761:49766 Coq.Init.Logic <> eq_sym thm
R49900:49903 compcert.flocq.Core.Fcore_Raux <> bpow def
R49923:49929 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R49948:49953 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R49974:49982 Coq.ZArith.Zabs <> Zabs_spec thm
R49985:49994 compcert.lib.Integers Int signed def
R49923:49929 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R49948:49953 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R49974:49982 Coq.ZArith.Zabs <> Zabs_spec thm
R49985:49994 compcert.lib.Integers Int signed def
prf 50249:50269 Float is_finite_strict_ge_1
R50285:50292 compcert.flocq.Appli.Fappli_IEEE_bits <> binary32 def
R50379:50381 Coq.Init.Logic <> :type_scope:x_'='_x not
R50357:50372 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R50378:50378 compcert.lib.Floats <> f var
R50382:50385 Coq.Init.Datatypes <> true constr
R50328:50331 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R50332:50335 Coq.Reals.Rbasic_fun <> Rabs def
R50338:50340 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R50346:50346 compcert.lib.Floats <> f var
R50313:50315 Coq.Init.Logic <> :type_scope:x_'='_x not
R50298:50306 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R50312:50312 compcert.lib.Floats <> f var
R50316:50319 Coq.Init.Datatypes <> true constr
R50455:50457 compcert.flocq.Core.Fcore_Raux <> Z2R def
R50455:50457 compcert.flocq.Core.Fcore_Raux <> Z2R def
R50488:50490 compcert.flocq.Core.Fcore_Raux <> Z2R def
R50488:50490 compcert.flocq.Core.Fcore_Raux <> Z2R def
R50515:50521 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R50515:50521 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R50540:50545 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
prf 50567:50585 Float single_float_of_int
R50668:50670 Coq.Init.Logic <> :type_scope:x_'='_x not
R50624:50636 compcert.lib.Floats Float singleoffloat def
R50639:50656 compcert.lib.Floats Float binary_normalize64 def
R50662:50666 Coq.Init.Datatypes <> false constr
R50658:50658 compcert.lib.Floats <> n var
R50671:50685 compcert.lib.Floats Float floatofbinary32 def
R50688:50705 compcert.lib.Floats Float binary_normalize32 def
R50711:50715 Coq.Init.Datatypes <> false constr
R50707:50707 compcert.lib.Floats <> n var
R50607:50609 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R50611:50613 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R50602:50602 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R50604:50604 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R50610:50610 compcert.lib.Floats <> n var
R50610:50610 compcert.lib.Floats <> n var
R50615:50615 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R50743:50755 compcert.lib.Floats Float singleoffloat def
R50790:50793 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50786:50788 Coq.Init.Logic <> :type_scope:x_'='_x not
R50801:50803 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R50794:50798 Coq.ZArith.BinInt Z abs def
R50790:50793 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50786:50788 Coq.Init.Logic <> :type_scope:x_'='_x not
R50801:50803 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R50794:50798 Coq.ZArith.BinInt Z abs def
R50903:50926 compcert.lib.Floats Float binary_normalize64_exact thm
R50962:50979 compcert.lib.Floats Float binary_normalize64 def
R50985:50989 Coq.Init.Datatypes <> false constr
R50962:50979 compcert.lib.Floats Float binary_normalize64 def
R50985:50989 Coq.Init.Datatypes <> false constr
R51042:51044 Coq.Init.Logic <> :type_scope:x_'='_x not
R51058:51063 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R51042:51044 Coq.Init.Logic <> :type_scope:x_'='_x not
R51058:51063 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R51160:51168 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R51173:51177 Coq.ZArith.BinInt Z pos syndef
R51160:51168 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R51173:51177 Coq.ZArith.BinInt Z pos syndef
R51203:51228 compcert.lib.Floats Float binary_normalize32_correct def
R51203:51228 compcert.lib.Floats Float binary_normalize32_correct def
R51247:51264 compcert.lib.Floats Float binary_normalize32 def
R51247:51264 compcert.lib.Floats Float binary_normalize32 def
R51299:51324 compcert.lib.Floats Float binary_normalize32_correct def
R51330:51334 Coq.Init.Datatypes <> false constr
R51299:51324 compcert.lib.Floats Float binary_normalize32_correct def
R51330:51334 Coq.Init.Datatypes <> false constr
R51346:51363 compcert.lib.Floats Float binary_normalize32 def
R51369:51373 Coq.Init.Datatypes <> false constr
R51346:51363 compcert.lib.Floats Float binary_normalize32 def
R51369:51373 Coq.Init.Datatypes <> false constr
R51439:51441 Coq.Init.Logic <> :type_scope:x_'='_x not
R51402:51404 compcert.flocq.Core.Fcore_defs <> F2R def
R51416:51435 compcert.flocq.Core.Fcore_defs <> Float constr
R51406:51411 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R51442:51444 compcert.flocq.Core.Fcore_Raux <> Z2R def
R51439:51441 Coq.Init.Logic <> :type_scope:x_'='_x not
R51402:51404 compcert.flocq.Core.Fcore_defs <> F2R def
R51416:51435 compcert.flocq.Core.Fcore_defs <> Float constr
R51406:51411 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R51442:51444 compcert.flocq.Core.Fcore_Raux <> Z2R def
R51461:51463 compcert.flocq.Core.Fcore_defs <> F2R def
R51472:51480 Coq.Reals.RIneq <> Rmult_1_r thm
R51472:51480 Coq.Reals.RIneq <> Rmult_1_r thm
R51532:51539 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R51657:51660 compcert.flocq.Core.Fcore_Raux <> bpow def
R51662:51667 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R51551:51554 Coq.Reals.Rbasic_fun <> Rabs def
R51569:51573 compcert.flocq.Core.Fcore_generic_fmt <> round def
R51647:51649 compcert.flocq.Core.Fcore_Raux <> Z2R def
R51611:51620 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R51622:51628 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R51583:51589 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R51599:51601 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51593:51595 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51575:51580 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R51532:51539 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R51657:51660 compcert.flocq.Core.Fcore_Raux <> bpow def
R51662:51667 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R51551:51554 Coq.Reals.Rbasic_fun <> Rabs def
R51569:51573 compcert.flocq.Core.Fcore_generic_fmt <> round def
R51647:51649 compcert.flocq.Core.Fcore_Raux <> Z2R def
R51611:51620 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R51622:51628 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R51583:51589 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R51599:51601 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51593:51595 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51575:51580 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R51743:51746 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R51747:51750 Coq.Reals.Rbasic_fun <> Rabs def
R51753:51757 compcert.flocq.Core.Fcore_generic_fmt <> round def
R51816:51818 compcert.flocq.Core.Fcore_Raux <> Z2R def
R51795:51804 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R51806:51812 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R51767:51773 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R51783:51785 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51777:51779 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51759:51764 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R51743:51746 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R51747:51750 Coq.Reals.Rbasic_fun <> Rabs def
R51753:51757 compcert.flocq.Core.Fcore_generic_fmt <> round def
R51816:51818 compcert.flocq.Core.Fcore_Raux <> Z2R def
R51795:51804 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R51806:51812 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R51767:51773 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R51783:51785 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51777:51779 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51759:51764 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R51838:51857 compcert.flocq.Core.Fcore_generic_fmt <> abs_round_ge_generic thm
R51838:51857 compcert.flocq.Core.Fcore_generic_fmt <> abs_round_ge_generic thm
R51870:51881 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R51870:51881 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R51906:51925 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R51906:51925 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R51938:51956 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R51938:51956 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R52009:52015 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R52009:52015 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R52035:52037 compcert.flocq.Core.Fcore_Raux <> Z2R def
R52035:52037 compcert.flocq.Core.Fcore_Raux <> Z2R def
R52049:52054 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R52049:52054 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R52074:52080 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R52074:52080 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R52091:52111 compcert.lib.Floats Float is_finite_strict_ge_1 thm
R52091:52111 compcert.lib.Floats Float is_finite_strict_ge_1 thm
R52146:52166 compcert.lib.Floats Float is_finite_strict_ge_1 thm
R52146:52166 compcert.lib.Floats Float is_finite_strict_ge_1 thm
R52215:52222 compcert.flocq.Appli.Fappli_IEEE <> B2FF_inj thm
R52215:52222 compcert.flocq.Appli.Fappli_IEEE <> B2FF_inj thm
prf 52251:52272 Float singleofint_floatofint
R52300:52302 Coq.Init.Logic <> :type_scope:x_'='_x not
R52287:52297 compcert.lib.Floats Float singleofint def
R52299:52299 compcert.lib.Floats <> n var
R52303:52315 compcert.lib.Floats Float singleoffloat def
R52318:52327 compcert.lib.Floats Float floatofint def
R52329:52329 compcert.lib.Floats <> n var
R52366:52384 compcert.lib.Floats Float single_float_of_int thm
R52366:52384 compcert.lib.Floats Float single_float_of_int thm
R52401:52416 compcert.lib.Integers Int signed_range thm
R52401:52416 compcert.lib.Integers Int signed_range thm
prf 52449:52472 Float singleofintu_floatofintu
R52501:52503 Coq.Init.Logic <> :type_scope:x_'='_x not
R52487:52498 compcert.lib.Floats Float singleofintu def
R52500:52500 compcert.lib.Floats <> n var
R52504:52516 compcert.lib.Floats Float singleoffloat def
R52519:52529 compcert.lib.Floats Float floatofintu def
R52531:52531 compcert.lib.Floats <> n var
R52568:52586 compcert.lib.Floats Float single_float_of_int thm
R52568:52586 compcert.lib.Floats Float single_float_of_int thm
R52603:52620 compcert.lib.Integers Int unsigned_range thm
R52603:52620 compcert.lib.Integers Int unsigned_range thm
prf 52653:52660 Float mul2_add
R52682:52684 Coq.Init.Logic <> :type_scope:x_'='_x not
R52675:52677 compcert.lib.Floats Float add def
R52681:52681 compcert.lib.Floats <> f var
R52679:52679 compcert.lib.Floats <> f var
R52685:52687 compcert.lib.Floats Float mul def
R52692:52701 compcert.lib.Floats Float floatofint def
R52704:52711 compcert.lib.Integers Int repr def
R52689:52689 compcert.lib.Floats <> f var
R52744:52746 compcert.lib.Floats Float add def
R52749:52756 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_plus def
R52759:52761 compcert.lib.Floats Float mul def
R52764:52771 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_mult def
R52786:52801 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R52786:52801 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R52856:52858 Coq.Init.Logic <> :type_scope:x_'='_x not
R52841:52849 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R52859:52862 Coq.Init.Datatypes <> true constr
R52856:52858 Coq.Init.Logic <> :type_scope:x_'='_x not
R52841:52849 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R52859:52862 Coq.Init.Datatypes <> true constr
R52922:52934 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R52969:52975 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R52960:52967 compcert.lib.Floats Float binop_pl def
R52952:52958 Coq.Init.Logic <> eq_refl constr
R52944:52950 Coq.Init.Logic <> eq_refl constr
R52922:52934 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R52969:52975 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R52960:52967 compcert.lib.Floats Float binop_pl def
R52952:52958 Coq.Init.Logic <> eq_refl constr
R52944:52950 Coq.Init.Logic <> eq_refl constr
R53011:53023 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R53099:53108 compcert.lib.Floats Float floatofint def
R53111:53118 compcert.lib.Integers Int repr def
R53058:53064 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R53049:53056 compcert.lib.Floats Float binop_pl def
R53041:53047 Coq.Init.Logic <> eq_refl constr
R53033:53039 Coq.Init.Logic <> eq_refl constr
R53011:53023 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R53099:53108 compcert.lib.Floats Float floatofint def
R53111:53118 compcert.lib.Integers Int repr def
R53058:53064 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R53049:53056 compcert.lib.Floats Float binop_pl def
R53041:53047 Coq.Init.Logic <> eq_refl constr
R53033:53039 Coq.Init.Logic <> eq_refl constr
R53143:53148 Coq.Reals.RIneq <> double thm
R53151:53160 Coq.Reals.Raxioms <> Rmult_comm prfax
R53143:53148 Coq.Reals.RIneq <> double thm
R53151:53160 Coq.Reals.Raxioms <> Rmult_comm prfax
R53181:53183 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R53194:53203 compcert.lib.Floats Float floatofint def
R53206:53213 compcert.lib.Integers Int repr def
R53181:53183 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R53194:53203 compcert.lib.Floats Float floatofint def
R53206:53213 compcert.lib.Integers Int repr def
R53269:53276 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R53360:53372 compcert.flocq.Appli.Fappli_IEEE <> B2R_Bsign_inj thm
R53360:53372 compcert.flocq.Appli.Fappli_IEEE <> B2R_Bsign_inj thm
R53512:53516 compcert.flocq.Appli.Fappli_IEEE <> Bmult def
R53571:53582 Coq.Bool.Bool <> xorb_false_r thm
R53571:53582 Coq.Bool.Bool <> xorb_false_r thm
R53603:53611 Coq.Reals.RIneq <> Rmult_0_l thm
R53614:53628 compcert.flocq.Core.Fcore_Raux <> Rcompare_mult_r thm
R53603:53611 Coq.Reals.RIneq <> Rmult_0_l thm
R53614:53628 compcert.flocq.Core.Fcore_Raux <> Rcompare_mult_r thm
R53695:53697 compcert.flocq.Core.Fcore_defs <> F2R def
R53718:53726 Coq.Reals.RIneq <> Rmult_0_l thm
R53729:53743 compcert.flocq.Core.Fcore_Raux <> Rcompare_mult_r thm
R53718:53726 Coq.Reals.RIneq <> Rmult_0_l thm
R53729:53743 compcert.flocq.Core.Fcore_Raux <> Rcompare_mult_r thm
R53760:53771 compcert.flocq.Core.Fcore_Raux <> Rcompare_Z2R thm
R53760:53771 compcert.flocq.Core.Fcore_Raux <> Rcompare_Z2R thm
R53829:53837 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R53829:53837 compcert.flocq.Core.Fcore_Raux <> bpow_gt_0 thm
R53853:53858 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R53853:53858 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R53903:53910 compcert.flocq.Appli.Fappli_IEEE <> B2FF_inj thm
R53903:53910 compcert.flocq.Appli.Fappli_IEEE <> B2FF_inj thm
R54008:54012 compcert.flocq.Appli.Fappli_IEEE <> Bsign def
R54126:54146 compcert.ia32.Archi <> choose_binop_pl def
R54126:54146 compcert.ia32.Archi <> choose_binop_pl def
def 54189:54198 Float pow2_float
R54203:54206 Coq.Init.Datatypes <> bool ind
R54212:54212 Coq.Numbers.BinNums <> Z ind
R54223:54225 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R54227:54229 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R54226:54226 compcert.lib.Floats <> e var
R54226:54226 compcert.lib.Floats <> e var
R54238:54242 compcert.lib.Floats Float float def
R54203:54206 Coq.Init.Datatypes <> bool ind
R54212:54212 Coq.Numbers.BinNums <> Z ind
R54223:54225 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R54227:54229 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R54226:54226 compcert.lib.Floats <> e var
R54226:54226 compcert.lib.Floats <> e var
R54249:54259 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R54289:54289 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R54288:54288 compcert.lib.Floats <> e var
R54268:54275 Coq.Init.Peano <> nat_iter def
R54283:54284 Coq.Numbers.BinNums <> xH constr
R54280:54281 Coq.Numbers.BinNums <> xO constr
R54265:54265 compcert.lib.Floats <> b var
R54323:54341 compcert.flocq.Appli.Fappli_IEEE <> bounded def
R54344:54359 compcert.flocq.Appli.Fappli_IEEE <> canonic_mantissa def
R54372:54384 Coq.Bool.Bool <> andb_true_iff thm
R54387:54399 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_true thm
R54372:54384 Coq.Bool.Bool <> andb_true_iff thm
R54387:54399 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_true thm
R54432:54444 compcert.flocq.Core.Fcore_Zaux <> Zeq_bool_true thm
R54432:54444 compcert.flocq.Core.Fcore_Zaux <> Zeq_bool_true thm
R54454:54460 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R54469:54476 Coq.ZArith.BinInt Z of_nat def
R54469:54476 Coq.ZArith.BinInt Z of_nat def
R54487:54503 Coq.ZArith.BinInt Z max_case_strong thm
R54487:54503 Coq.ZArith.BinInt Z max_case_strong thm
prf 54527:54538 Float mul_div_pow2
R54590:54592 Coq.Init.Logic <> :type_scope:x_'='_x not
R54566:54568 compcert.lib.Floats Float mul def
R54573:54582 compcert.lib.Floats Float pow2_float def
R54588:54588 compcert.lib.Floats <> H var
R54586:54586 compcert.lib.Floats <> e var
R54584:54584 compcert.lib.Floats <> b var
R54570:54570 compcert.lib.Floats <> f var
R54593:54595 compcert.lib.Floats Float div def
R54600:54609 compcert.lib.Floats Float pow2_float def
R54618:54619 compcert.lib.Floats <> H' var
R54614:54614 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R54615:54615 compcert.lib.Floats <> e var
R54611:54611 compcert.lib.Floats <> b var
R54597:54597 compcert.lib.Floats <> f var
R54647:54649 compcert.lib.Floats Float mul def
R54652:54659 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_mult def
R54662:54664 compcert.lib.Floats Float div def
R54667:54673 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_div def
R54690:54702 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R54748:54757 compcert.lib.Floats Float pow2_float def
R54737:54743 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R54728:54735 compcert.lib.Floats Float binop_pl def
R54720:54726 Coq.Init.Logic <> eq_refl constr
R54712:54718 Coq.Init.Logic <> eq_refl constr
R54690:54702 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R54748:54757 compcert.lib.Floats Float pow2_float def
R54737:54743 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R54728:54735 compcert.lib.Floats Float binop_pl def
R54720:54726 Coq.Init.Logic <> eq_refl constr
R54712:54718 Coq.Init.Logic <> eq_refl constr
R54782:54793 compcert.flocq.Appli.Fappli_IEEE <> Bdiv_correct thm
R54839:54848 compcert.lib.Floats Float pow2_float def
R54853:54853 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R54828:54834 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R54819:54826 compcert.lib.Floats Float binop_pl def
R54811:54817 Coq.Init.Logic <> eq_refl constr
R54803:54809 Coq.Init.Logic <> eq_refl constr
R54782:54793 compcert.flocq.Appli.Fappli_IEEE <> Bdiv_correct thm
R54839:54848 compcert.lib.Floats Float pow2_float def
R54853:54853 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R54828:54834 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R54819:54826 compcert.lib.Floats Float binop_pl def
R54811:54817 Coq.Init.Logic <> eq_refl constr
R54803:54809 Coq.Init.Logic <> eq_refl constr
R54946:54949 Coq.Init.Datatypes <> true constr
R54903:54911 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R54922:54931 compcert.lib.Floats Float pow2_float def
R54903:54911 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R54922:54931 compcert.lib.Floats Float pow2_float def
R54946:54949 Coq.Init.Datatypes <> true constr
R54967:54970 Coq.Reals.Rdefinitions <> Rdiv def
R54990:54991 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R54992:54994 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R55005:55014 compcert.lib.Floats Float pow2_float def
R55019:55019 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R55040:55042 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R55053:55062 compcert.lib.Floats Float pow2_float def
R55040:55042 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R55053:55062 compcert.lib.Floats Float pow2_float def
R54990:54991 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R54992:54994 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R55005:55014 compcert.lib.Floats Float pow2_float def
R55019:55019 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R55091:55099 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R55091:55099 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R55132:55139 compcert.flocq.Core.Fcore_Raux <> Rlt_bool def
R55197:55209 compcert.flocq.Appli.Fappli_IEEE <> B2R_Bsign_inj thm
R55197:55209 compcert.flocq.Appli.Fappli_IEEE <> B2R_Bsign_inj thm
R55309:55313 compcert.flocq.Appli.Fappli_IEEE <> Bmult def
R55400:55403 compcert.flocq.Appli.Fappli_IEEE <> Bdiv def
R55471:55478 compcert.flocq.Appli.Fappli_IEEE <> B2FF_inj thm
R55471:55478 compcert.flocq.Appli.Fappli_IEEE <> B2FF_inj thm
R55679:55693 Coq.Init.Logic <> :type_scope:x_'='_x not
R55653:55655 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R55656:55659 compcert.flocq.Core.Fcore_Raux <> bpow def
R55670:55672 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R55661:55666 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R55695:55697 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R55739:55739 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R55714:55716 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R55717:55720 compcert.flocq.Core.Fcore_Raux <> bpow def
R55733:55735 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R55730:55731 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R55722:55727 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R55679:55693 Coq.Init.Logic <> :type_scope:x_'='_x not
R55653:55655 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R55656:55659 compcert.flocq.Core.Fcore_Raux <> bpow def
R55670:55672 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R55661:55666 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R55695:55697 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R55739:55739 Coq.Reals.Rdefinitions <> :R_scope:'/'_x not
R55714:55716 Coq.Reals.Rdefinitions <> :R_scope:x_'*'_x not
R55717:55720 compcert.flocq.Core.Fcore_Raux <> bpow def
R55733:55735 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R55730:55731 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R55722:55727 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R55784:55792 compcert.flocq.Core.Fcore_Raux <> bpow_plus thm
R55794:55799 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R55784:55792 compcert.flocq.Core.Fcore_Raux <> bpow_plus thm
R55794:55799 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R55843:55849 Coq.Init.Logic <> f_equal thm
R55843:55849 Coq.Init.Logic <> f_equal thm
R55869:55877 compcert.flocq.Core.Fcore_Raux <> bpow_plus thm
R55879:55884 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R55869:55877 compcert.flocq.Core.Fcore_Raux <> bpow_plus thm
R55879:55884 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R55908:55915 compcert.flocq.Core.Fcore_Raux <> bpow_opp thm
R55908:55915 compcert.flocq.Core.Fcore_Raux <> bpow_opp thm
R55958:55966 compcert.flocq.Core.Fcore_Zaux <> cond_Zopp def
R55982:55989 compcert.flocq.Core.Fcore_float_prop <> F2R_Zopp thm
R55995:56010 Coq.Reals.RIneq <> Ropp_inv_permute thm
R55982:55989 compcert.flocq.Core.Fcore_float_prop <> F2R_Zopp thm
R55982:55989 compcert.flocq.Core.Fcore_float_prop <> F2R_Zopp thm
R55982:55989 compcert.flocq.Core.Fcore_float_prop <> F2R_Zopp thm
R55995:56010 Coq.Reals.RIneq <> Ropp_inv_permute thm
R56045:56056 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_0_reg thm
R56045:56056 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_0_reg thm
R56110:56121 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_0_reg thm
R56110:56121 compcert.flocq.Core.Fcore_float_prop <> F2R_eq_0_reg thm
def 56183:56204 Float exact_inverse_mantissa
R56209:56216 Coq.Init.Peano <> nat_iter def
R56224:56225 Coq.Numbers.BinNums <> xH constr
R56221:56222 Coq.Numbers.BinNums <> xO constr
def 56248:56260 Float exact_inverse
R56266:56270 compcert.lib.Floats Float float def
R56275:56280 Coq.Init.Datatypes <> option ind
R56282:56286 compcert.lib.Floats Float float def
R56266:56270 compcert.lib.Floats Float float def
R56299:56299 compcert.lib.Floats <> f var
R56310:56320 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R56342:56344 compcert.lib.Coqlib <> peq def
R56348:56369 compcert.lib.Floats Float exact_inverse_mantissa def
R56521:56524 Coq.Init.Datatypes <> None constr
R56385:56387 compcert.lib.Coqlib <> zlt def
R56399:56401 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56511:56514 Coq.Init.Datatypes <> None constr
R56420:56422 compcert.lib.Coqlib <> zlt def
R56426:56428 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56501:56504 Coq.Init.Datatypes <> None constr
R56451:56454 Coq.Init.Datatypes <> Some constr
R56456:56466 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R56479:56481 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R56477:56477 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R56535:56538 Coq.Init.Datatypes <> None constr
R56573:56591 compcert.flocq.Appli.Fappli_IEEE <> bounded def
R56594:56609 compcert.flocq.Appli.Fappli_IEEE <> canonic_mantissa def
R56618:56630 Coq.Bool.Bool <> andb_true_iff thm
R56618:56630 Coq.Bool.Bool <> andb_true_iff thm
R56648:56655 Coq.ZArith.BinInt Z of_nat def
R56648:56655 Coq.ZArith.BinInt Z of_nat def
R56664:56676 compcert.flocq.Core.Fcore_Zaux <> Zeq_bool_true thm
R56664:56676 compcert.flocq.Core.Fcore_Zaux <> Zeq_bool_true thm
R56686:56692 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R56701:56717 Coq.ZArith.BinInt Z max_case_strong thm
R56701:56717 Coq.ZArith.BinInt Z max_case_strong thm
R56735:56747 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_true thm
R56735:56747 compcert.flocq.Core.Fcore_Zaux <> Zle_bool_true thm
prf 56772:56785 Float B754_finite_eq
R56886:56889 Coq.Init.Logic <> :type_scope:x_'='_x not
R56925:56925 Coq.Init.Logic <> :type_scope:x_'='_x not
R56859:56869 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R56884:56885 compcert.lib.Floats <> B1 var
R56881:56882 compcert.lib.Floats <> e1 var
R56878:56879 compcert.lib.Floats <> m1 var
R56875:56876 compcert.lib.Floats <> s1 var
R56920:56924 compcert.lib.Floats Float float def
R56890:56900 compcert.flocq.Appli.Fappli_IEEE <> B754_finite constr
R56915:56916 compcert.lib.Floats <> B2 var
R56912:56913 compcert.lib.Floats <> e2 var
R56909:56910 compcert.lib.Floats <> m2 var
R56906:56907 compcert.lib.Floats <> s2 var
R56848:56850 Coq.Init.Logic <> :type_scope:x_'='_x not
R56846:56847 compcert.lib.Floats <> e1 var
R56851:56852 compcert.lib.Floats <> e2 var
R56837:56839 Coq.Init.Logic <> :type_scope:x_'='_x not
R56835:56836 compcert.lib.Floats <> m1 var
R56840:56841 compcert.lib.Floats <> m2 var
R56826:56828 Coq.Init.Logic <> :type_scope:x_'='_x not
R56824:56825 compcert.lib.Floats <> s1 var
R56829:56830 compcert.lib.Floats <> s2 var
R56967:56983 Coq.Logic.ProofIrrelevance <> proof_irrelevance prfax
R56967:56983 Coq.Logic.ProofIrrelevance <> proof_irrelevance prfax
prf 57001:57015 Float div_mul_inverse
R57069:57071 Coq.Init.Logic <> :type_scope:x_'='_x not
R57062:57064 compcert.lib.Floats Float div def
R57068:57068 compcert.lib.Floats <> y var
R57066:57066 compcert.lib.Floats <> x var
R57072:57074 compcert.lib.Floats Float mul def
R57078:57078 compcert.lib.Floats <> z var
R57076:57076 compcert.lib.Floats <> x var
R57049:57051 Coq.Init.Logic <> :type_scope:x_'='_x not
R57034:57046 compcert.lib.Floats Float exact_inverse def
R57048:57048 compcert.lib.Floats <> y var
R57052:57055 Coq.Init.Datatypes <> Some constr
R57057:57057 compcert.lib.Floats <> z var
R57121:57133 compcert.lib.Floats Float exact_inverse def
R57170:57172 compcert.lib.Coqlib <> peq def
R57176:57197 compcert.lib.Floats Float exact_inverse_mantissa def
R57170:57172 compcert.lib.Coqlib <> peq def
R57176:57197 compcert.lib.Floats Float exact_inverse_mantissa def
R57215:57217 compcert.lib.Coqlib <> zlt def
R57229:57231 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R57215:57217 compcert.lib.Coqlib <> zlt def
R57229:57231 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R57252:57254 compcert.lib.Coqlib <> zlt def
R57258:57260 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R57252:57254 compcert.lib.Coqlib <> zlt def
R57258:57260 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R57298:57300 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R57295:57296 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R57298:57300 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R57295:57296 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R57327:57329 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R57331:57333 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R57327:57329 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R57331:57333 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R57383:57385 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R57388:57390 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R57386:57386 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R57386:57386 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R57383:57385 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R57388:57390 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R57386:57386 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R57386:57386 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R57448:57450 compcert.lib.Floats Float mul def
R57455:57464 compcert.lib.Floats Float pow2_float def
R57448:57450 compcert.lib.Floats Float mul def
R57455:57464 compcert.lib.Floats Float pow2_float def
R57495:57508 compcert.lib.Floats Float B754_finite_eq thm
R57495:57508 compcert.lib.Floats Float B754_finite_eq thm
R57550:57552 compcert.lib.Floats Float div def
R57557:57566 compcert.lib.Floats Float pow2_float def
R57571:57571 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R57550:57552 compcert.lib.Floats Float div def
R57557:57566 compcert.lib.Floats Float pow2_float def
R57571:57571 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R57591:57602 compcert.lib.Floats Float mul_div_pow2 thm
R57591:57602 compcert.lib.Floats Float mul_div_pow2 thm
R57623:57636 compcert.lib.Floats Float B754_finite_eq thm
R57623:57636 compcert.lib.Floats Float B754_finite_eq thm
prf 57676:57694 Float floatoflongu_decomp
R57723:57729 Coq.Init.Logic <> :type_scope:x_'='_x not
R57709:57720 compcert.lib.Floats Float floatoflongu def
R57722:57722 compcert.lib.Floats <> l var
R57730:57732 compcert.lib.Floats Float add def
R57825:57835 compcert.lib.Floats Float floatofintu def
R57838:57849 compcert.lib.Integers Int64 loword def
R57851:57851 compcert.lib.Floats <> l var
R57735:57737 compcert.lib.Floats Float mul def
R57771:57780 compcert.lib.Floats Float pow2_float def
R57792:57795 Coq.Init.Logic <> conj constr
R57805:57811 Coq.Init.Logic <> eq_refl constr
R57797:57803 Coq.Init.Logic <> eq_refl constr
R57782:57786 Coq.Init.Datatypes <> false constr
R57740:57750 compcert.lib.Floats Float floatofintu def
R57753:57764 compcert.lib.Integers Int64 hiword def
R57766:57766 compcert.lib.Floats <> l var
R57882:57892 compcert.lib.Floats Float floatofintu def
R57909:57926 compcert.lib.Integers Int unsigned_range thm
R57929:57940 compcert.lib.Integers Int64 loword def
R57909:57926 compcert.lib.Integers Int unsigned_range thm
R57929:57940 compcert.lib.Integers Int64 loword def
R57961:57978 compcert.lib.Integers Int unsigned_range thm
R57981:57992 compcert.lib.Integers Int64 hiword def
R57961:57978 compcert.lib.Integers Int unsigned_range thm
R57981:57992 compcert.lib.Integers Int64 hiword def
R58014:58033 compcert.lib.Integers Int64 unsigned_range thm
R58014:58033 compcert.lib.Integers Int64 unsigned_range thm
R58054:58064 compcert.lib.Integers Int modulus def
R58079:58102 compcert.lib.Floats Float binary_normalize64_exact thm
R58105:58116 compcert.lib.Integers Int unsigned def
R58119:58130 compcert.lib.Integers Int64 loword def
R58158:58160 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R58079:58102 compcert.lib.Floats Float binary_normalize64_exact thm
R58105:58116 compcert.lib.Integers Int unsigned def
R58119:58130 compcert.lib.Integers Int64 loword def
R58158:58160 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R58187:58210 compcert.lib.Floats Float binary_normalize64_exact thm
R58213:58224 compcert.lib.Integers Int unsigned def
R58227:58238 compcert.lib.Integers Int64 hiword def
R58266:58268 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R58187:58210 compcert.lib.Floats Float binary_normalize64_exact thm
R58213:58224 compcert.lib.Integers Int unsigned def
R58227:58238 compcert.lib.Integers Int64 hiword def
R58266:58268 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R58292:58294 compcert.lib.Floats Float mul def
R58297:58304 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_mult def
R58321:58333 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R58494:58503 compcert.lib.Floats Float pow2_float def
R58515:58518 Coq.Init.Logic <> conj constr
R58528:58534 Coq.Init.Logic <> eq_refl constr
R58520:58526 Coq.Init.Logic <> eq_refl constr
R58505:58509 Coq.Init.Datatypes <> false constr
R58405:58422 compcert.lib.Floats Float binary_normalize64 def
R58458:58462 Coq.Init.Datatypes <> false constr
R58425:58436 compcert.lib.Integers Int unsigned def
R58439:58450 compcert.lib.Integers Int64 hiword def
R58368:58374 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R58359:58366 compcert.lib.Floats Float binop_pl def
R58351:58357 Coq.Init.Logic <> eq_refl constr
R58343:58349 Coq.Init.Logic <> eq_refl constr
R58321:58333 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R58494:58503 compcert.lib.Floats Float pow2_float def
R58515:58518 Coq.Init.Logic <> conj constr
R58528:58534 Coq.Init.Logic <> eq_refl constr
R58520:58526 Coq.Init.Logic <> eq_refl constr
R58505:58509 Coq.Init.Datatypes <> false constr
R58405:58422 compcert.lib.Floats Float binary_normalize64 def
R58458:58462 Coq.Init.Datatypes <> false constr
R58425:58436 compcert.lib.Integers Int unsigned def
R58439:58450 compcert.lib.Integers Int64 hiword def
R58368:58374 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R58359:58366 compcert.lib.Floats Float binop_pl def
R58351:58357 Coq.Init.Logic <> eq_refl constr
R58343:58349 Coq.Init.Logic <> eq_refl constr
R58571:58573 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R58584:58593 compcert.lib.Floats Float pow2_float def
R58605:58608 Coq.Init.Logic <> conj constr
R58618:58624 Coq.Init.Logic <> eq_refl constr
R58610:58616 Coq.Init.Logic <> eq_refl constr
R58595:58599 Coq.Init.Datatypes <> false constr
R58637:58639 compcert.flocq.Core.Fcore_Raux <> Z2R def
R58637:58639 compcert.flocq.Core.Fcore_Raux <> Z2R def
R58571:58573 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R58584:58593 compcert.lib.Floats Float pow2_float def
R58605:58608 Coq.Init.Logic <> conj constr
R58618:58624 Coq.Init.Logic <> eq_refl constr
R58610:58616 Coq.Init.Logic <> eq_refl constr
R58595:58599 Coq.Init.Datatypes <> false constr
R58695:58702 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R58695:58702 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R58721:58733 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R58721:58733 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R58754:58766 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R58754:58766 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R58846:58848 compcert.lib.Floats Float add def
R58851:58858 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_plus def
R58881:58893 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R59195:59212 compcert.lib.Floats Float binary_normalize64 def
R59248:59252 Coq.Init.Datatypes <> false constr
R59215:59226 compcert.lib.Integers Int unsigned def
R59229:59240 compcert.lib.Integers Int64 loword def
R58959:58963 compcert.flocq.Appli.Fappli_IEEE <> Bmult def
R59121:59130 compcert.lib.Floats Float pow2_float def
R59142:59145 Coq.Init.Logic <> conj constr
R59155:59161 Coq.Init.Logic <> eq_refl constr
R59147:59153 Coq.Init.Logic <> eq_refl constr
R59132:59136 Coq.Init.Datatypes <> false constr
R59032:59049 compcert.lib.Floats Float binary_normalize64 def
R59085:59089 Coq.Init.Datatypes <> false constr
R59052:59063 compcert.lib.Integers Int unsigned def
R59066:59077 compcert.lib.Integers Int64 hiword def
R58998:59004 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R58989:58996 compcert.lib.Floats Float binop_pl def
R58981:58987 Coq.Init.Logic <> eq_refl constr
R58973:58979 Coq.Init.Logic <> eq_refl constr
R58928:58934 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R58919:58926 compcert.lib.Floats Float binop_pl def
R58911:58917 Coq.Init.Logic <> eq_refl constr
R58903:58909 Coq.Init.Logic <> eq_refl constr
R58881:58893 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R59195:59212 compcert.lib.Floats Float binary_normalize64 def
R59248:59252 Coq.Init.Datatypes <> false constr
R59215:59226 compcert.lib.Integers Int unsigned def
R59229:59240 compcert.lib.Integers Int64 loword def
R58959:58963 compcert.flocq.Appli.Fappli_IEEE <> Bmult def
R59121:59130 compcert.lib.Floats Float pow2_float def
R59142:59145 Coq.Init.Logic <> conj constr
R59155:59161 Coq.Init.Logic <> eq_refl constr
R59147:59153 Coq.Init.Logic <> eq_refl constr
R59132:59136 Coq.Init.Datatypes <> false constr
R59032:59049 compcert.lib.Floats Float binary_normalize64 def
R59085:59089 Coq.Init.Datatypes <> false constr
R59052:59063 compcert.lib.Integers Int unsigned def
R59066:59077 compcert.lib.Integers Int64 hiword def
R58998:59004 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R58989:58996 compcert.lib.Floats Float binop_pl def
R58981:58987 Coq.Init.Logic <> eq_refl constr
R58973:58979 Coq.Init.Logic <> eq_refl constr
R58928:58934 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R58919:58926 compcert.lib.Floats Float binop_pl def
R58911:58917 Coq.Init.Logic <> eq_refl constr
R58903:58909 Coq.Init.Logic <> eq_refl constr
R59290:59297 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R59290:59297 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R59338:59342 Coq.ZArith.Zpower <> two_p def
R59338:59342 Coq.ZArith.Zpower <> two_p def
R59374:59391 compcert.lib.Integers Int64 ofwords_add' thm
R59394:59416 compcert.lib.Integers Int64 ofwords_recompose thm
R59374:59391 compcert.lib.Integers Int64 ofwords_add' thm
R59394:59416 compcert.lib.Integers Int64 ofwords_recompose thm
R59563:59581 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R59441:59444 Coq.Reals.Rbasic_fun <> Rabs def
R59447:59451 compcert.flocq.Core.Fcore_generic_fmt <> round def
R59539:59541 compcert.flocq.Core.Fcore_Raux <> Z2R def
R59544:59557 compcert.lib.Integers Int64 unsigned def
R59518:59527 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R59529:59535 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R59461:59467 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R59478:59480 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R59471:59473 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R59453:59458 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R59582:59585 compcert.flocq.Core.Fcore_Raux <> bpow def
R59587:59592 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R59563:59581 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R59441:59444 Coq.Reals.Rbasic_fun <> Rabs def
R59447:59451 compcert.flocq.Core.Fcore_generic_fmt <> round def
R59539:59541 compcert.flocq.Core.Fcore_Raux <> Z2R def
R59544:59557 compcert.lib.Integers Int64 unsigned def
R59518:59527 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R59529:59535 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R59461:59467 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R59478:59480 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R59471:59473 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R59453:59458 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R59582:59585 compcert.flocq.Core.Fcore_Raux <> bpow def
R59587:59592 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R59647:59658 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R59624:59635 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R59624:59635 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R59647:59658 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R59711:59713 compcert.flocq.Core.Fcore_Raux <> Z2R def
R59716:59720 Coq.ZArith.Zpower <> two_p def
R59692:59703 Coq.Reals.RIneq <> Rle_lt_trans thm
R59711:59713 compcert.flocq.Core.Fcore_Raux <> Z2R def
R59716:59720 Coq.ZArith.Zpower <> two_p def
R59692:59703 Coq.Reals.RIneq <> Rle_lt_trans thm
R59736:59741 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R59736:59741 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R59779:59791 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R59779:59791 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R59812:59819 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R59812:59819 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R59828:59839 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R59828:59839 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R59874:59893 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R59895:59901 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R59874:59893 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R59895:59901 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R59928:59934 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R59928:59934 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R59943:59948 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R59943:59948 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R59974:59986 compcert.lib.Integers Int64 modulus def
R59959:59963 Coq.ZArith.Zpower <> two_p def
R59959:59963 Coq.ZArith.Zpower <> two_p def
R59974:59986 compcert.lib.Integers Int64 modulus def
R60021:60040 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R60042:60048 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R60021:60040 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R60042:60048 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R60071:60089 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R60091:60096 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R60071:60089 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R60091:60096 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R60146:60158 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R60146:60158 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R60190:60201 compcert.lib.Floats Float floatoflongu def
R60204:60221 compcert.lib.Floats Float binary_normalize64 def
R60244:60269 compcert.lib.Floats Float binary_normalize64_correct def
R60292:60296 Coq.Init.Datatypes <> false constr
R60272:60285 compcert.lib.Integers Int64 unsigned def
R60244:60269 compcert.lib.Floats Float binary_normalize64_correct def
R60292:60296 Coq.Init.Datatypes <> false constr
R60272:60285 compcert.lib.Integers Int64 unsigned def
R60317:60319 compcert.flocq.Core.Fcore_defs <> F2R def
R60339:60373 compcert.flocq.Core.Fcore_defs <> Float constr
R60347:60360 compcert.lib.Integers Int64 unsigned def
R60328:60333 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R60393:60395 compcert.flocq.Core.Fcore_Raux <> Z2R def
R60398:60411 compcert.lib.Integers Int64 unsigned def
R60443:60445 compcert.flocq.Core.Fcore_defs <> F2R def
R60448:60451 compcert.flocq.Core.Fcore_defs <> Fexp proj
R60454:60457 compcert.flocq.Core.Fcore_defs <> Fnum proj
R60460:60463 compcert.flocq.Core.Fcore_Raux <> bpow def
R60393:60395 compcert.flocq.Core.Fcore_Raux <> Z2R def
R60398:60411 compcert.lib.Integers Int64 unsigned def
R60317:60319 compcert.flocq.Core.Fcore_defs <> F2R def
R60339:60373 compcert.flocq.Core.Fcore_defs <> Float constr
R60347:60360 compcert.lib.Integers Int64 unsigned def
R60328:60333 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R60490:60502 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R60490:60502 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R60538:60549 compcert.lib.Integers Int64 eq_dec thm
R60553:60562 compcert.lib.Integers Int64 zero def
R60538:60549 compcert.lib.Integers Int64 eq_dec thm
R60553:60562 compcert.lib.Integers Int64 zero def
R60629:60632 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R60633:60637 compcert.flocq.Core.Fcore_generic_fmt <> round def
R60724:60726 compcert.flocq.Core.Fcore_Raux <> Z2R def
R60729:60742 compcert.lib.Integers Int64 unsigned def
R60676:60685 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R60687:60693 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R60647:60653 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R60664:60666 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R60657:60659 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R60639:60644 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R60629:60632 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R60633:60637 compcert.flocq.Core.Fcore_generic_fmt <> round def
R60724:60726 compcert.flocq.Core.Fcore_Raux <> Z2R def
R60729:60742 compcert.lib.Integers Int64 unsigned def
R60676:60685 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R60687:60693 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R60647:60653 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R60664:60666 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R60657:60659 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R60639:60644 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R60774:60786 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R60774:60786 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R60819:60826 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R60819:60826 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R60835:60846 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R60835:60846 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R60868:60887 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R60868:60887 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R60924:60927 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R60908:60921 compcert.lib.Integers Int64 unsigned def
R60924:60927 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R60908:60921 compcert.lib.Integers Int64 unsigned def
R60970:60988 compcert.lib.Integers Int64 repr_unsigned thm
R60970:60988 compcert.lib.Integers Int64 repr_unsigned thm
R61022:61027 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R61022:61027 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R61056:61075 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R61056:61075 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R61095:61113 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R61095:61113 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R61163:61180 compcert.lib.Floats Float binary_normalize64 def
R61202:61208 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R61202:61208 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R61236:61251 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize def
R61306:61310 Coq.Init.Datatypes <> false constr
R61286:61299 compcert.lib.Integers Int64 unsigned def
R61277:61283 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R61269:61275 Coq.Init.Logic <> eq_refl constr
R61261:61267 Coq.Init.Logic <> eq_refl constr
R61236:61251 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize def
R61306:61310 Coq.Init.Datatypes <> false constr
R61286:61299 compcert.lib.Integers Int64 unsigned def
R61277:61283 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R61269:61275 Coq.Init.Logic <> eq_refl constr
R61261:61267 Coq.Init.Logic <> eq_refl constr
R61349:61351 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R61391:61396 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R61391:61396 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R61495:61497 Coq.Init.Logic <> :type_scope:x_'='_x not
R61478:61486 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R61498:61501 Coq.Init.Datatypes <> true constr
R61495:61497 Coq.Init.Logic <> :type_scope:x_'='_x not
R61478:61486 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R61498:61501 Coq.Init.Datatypes <> true constr
R61563:61565 Coq.Init.Logic <> :type_scope:x_'='_x not
R61552:61554 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R61563:61565 Coq.Init.Logic <> :type_scope:x_'='_x not
R61552:61554 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R61634:61636 Coq.Init.Logic <> :type_scope:x_'='_x not
R61611:61626 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R61637:61640 Coq.Init.Datatypes <> true constr
R61634:61636 Coq.Init.Logic <> :type_scope:x_'='_x not
R61611:61626 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R61637:61640 Coq.Init.Datatypes <> true constr
R61850:61852 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R61890:61895 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R61890:61895 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R61995:62001 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R61995:62001 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R62017:62022 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R62033:62035 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R62027:62032 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R62017:62022 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R62033:62035 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R62027:62032 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R62070:62072 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R62064:62069 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R62070:62072 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R62064:62069 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R62103:62122 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R62103:62122 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R62139:62146 Coq.ZArith.BinInt Z eq_dec def
R62149:62160 compcert.lib.Integers Int unsigned def
R62163:62174 compcert.lib.Integers Int64 hiword def
R62139:62146 Coq.ZArith.BinInt Z eq_dec def
R62149:62160 compcert.lib.Integers Int unsigned def
R62163:62174 compcert.lib.Integers Int64 hiword def
R62205:62220 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
R62205:62220 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
R62233:62254 compcert.flocq.Core.Fcore_FLT <> generic_format_FLT_FLX thm
R62233:62254 compcert.flocq.Core.Fcore_FLT <> generic_format_FLT_FLX thm
R62285:62288 compcert.flocq.Core.Fcore_Raux <> bpow def
R62290:62295 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R62269:62277 Coq.Reals.RIneq <> Rle_trans thm
R62285:62288 compcert.flocq.Core.Fcore_Raux <> bpow def
R62290:62295 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R62269:62277 Coq.Reals.RIneq <> Rle_trans thm
R62307:62313 compcert.flocq.Core.Fcore_Raux <> bpow_le thm
R62307:62313 compcert.flocq.Core.Fcore_Raux <> bpow_le thm
R62340:62346 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R62340:62346 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R62356:62361 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R62356:62361 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R62409:62426 compcert.flocq.Core.Fcore_FLX <> generic_format_FLX thm
R62409:62426 compcert.flocq.Core.Fcore_FLX <> generic_format_FLX thm
R62446:62494 compcert.flocq.Core.Fcore_defs <> Float constr
R62454:62465 compcert.lib.Integers Int unsigned def
R62468:62479 compcert.lib.Integers Int64 hiword def
R62446:62494 compcert.flocq.Core.Fcore_defs <> Float constr
R62454:62465 compcert.lib.Integers Int unsigned def
R62468:62479 compcert.lib.Integers Int64 hiword def
R62513:62515 compcert.flocq.Core.Fcore_defs <> F2R def
R62518:62521 compcert.flocq.Core.Fcore_defs <> Fnum proj
R62524:62527 compcert.flocq.Core.Fcore_defs <> Fexp proj
R62551:62558 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R62551:62558 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R62593:62595 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R62587:62592 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R62593:62595 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R62587:62592 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
def 62631:62641 Float ox4530_0000
R62646:62653 compcert.lib.Integers Int repr def
prf 62703:62716 Float split_bits_or'
R62796:62798 Coq.Init.Logic <> :type_scope:x_'='_x not
R62733:62742 compcert.flocq.Appli.Fappli_IEEE_bits <> split_bits def
R62751:62764 compcert.lib.Integers Int64 unsigned def
R62767:62779 compcert.lib.Integers Int64 ofwords def
R62793:62793 compcert.lib.Floats <> x var
R62781:62791 compcert.lib.Floats Float ox4530_0000 def
R62799:62799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62805:62806 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62821:62822 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62827:62827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62800:62804 Coq.Init.Datatypes <> false constr
R62807:62818 compcert.lib.Integers Int unsigned def
R62820:62820 compcert.lib.Floats <> x var
R62863:62872 compcert.flocq.Appli.Fappli_IEEE_bits <> split_bits def
R62881:62889 compcert.flocq.Appli.Fappli_IEEE_bits <> join_bits def
R62904:62915 compcert.lib.Integers Int unsigned def
R62897:62901 Coq.Init.Datatypes <> false constr
R62863:62872 compcert.flocq.Appli.Fappli_IEEE_bits <> split_bits def
R62881:62889 compcert.flocq.Appli.Fappli_IEEE_bits <> join_bits def
R62904:62915 compcert.lib.Integers Int unsigned def
R62897:62901 Coq.Init.Datatypes <> false constr
R62949:62966 compcert.lib.Integers Int64 ofwords_add' thm
R62949:62966 compcert.lib.Integers Int64 ofwords_add' thm
R62992:63006 compcert.flocq.Appli.Fappli_IEEE_bits <> split_join_bits thm
R62992:63006 compcert.flocq.Appli.Fappli_IEEE_bits <> split_join_bits thm
R63044:63061 compcert.lib.Integers Int unsigned_range thm
R63044:63061 compcert.lib.Integers Int unsigned_range thm
R63112:63112 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R63084:63094 compcert.lib.Integers Int modulus def
R63112:63112 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R63144:63144 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R63144:63144 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
prf 63169:63185 Float from_words_value'
R63297:63304 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R63238:63244 Coq.Init.Logic <> :type_scope:x_'='_x not
R63204:63206 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R63213:63222 compcert.lib.Floats Float from_words def
R63236:63236 compcert.lib.Floats <> x var
R63224:63234 compcert.lib.Floats Float ox4530_0000 def
R63260:63262 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R63246:63249 compcert.flocq.Core.Fcore_Raux <> bpow def
R63251:63256 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R63263:63265 compcert.flocq.Core.Fcore_Raux <> Z2R def
R63282:63284 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R63268:63279 compcert.lib.Integers Int unsigned def
R63281:63281 compcert.lib.Floats <> x var
R63285:63289 Coq.ZArith.Zpower <> two_p def
R63345:63347 Coq.Init.Logic <> :type_scope:x_'='_x not
R63305:63313 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R63320:63329 compcert.lib.Floats Float from_words def
R63343:63343 compcert.lib.Floats <> x var
R63331:63341 compcert.lib.Floats Float ox4530_0000 def
R63348:63351 Coq.Init.Datatypes <> true constr
R63378:63387 compcert.lib.Floats Float from_words def
R63390:63403 compcert.lib.Floats Float double_of_bits def
R63406:63416 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_of_bits def
R63419:63438 compcert.flocq.Appli.Fappli_IEEE_bits <> binary_float_of_bits def
R63451:63458 compcert.flocq.Appli.Fappli_IEEE <> B2R_FF2B thm
R63451:63458 compcert.flocq.Appli.Fappli_IEEE <> B2R_FF2B thm
R63469:63482 compcert.flocq.Appli.Fappli_IEEE <> is_finite_FF2B thm
R63469:63482 compcert.flocq.Appli.Fappli_IEEE <> is_finite_FF2B thm
R63494:63517 compcert.flocq.Appli.Fappli_IEEE_bits <> binary_float_of_bits_aux def
R63528:63541 compcert.lib.Floats Float split_bits_or' thm
R63563:63580 compcert.lib.Integers Int unsigned_range thm
R63528:63541 compcert.lib.Floats Float split_bits_or' thm
R63563:63580 compcert.lib.Integers Int unsigned_range thm
R63612:63614 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R63598:63609 compcert.lib.Integers Int unsigned def
R63615:63624 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R63612:63614 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R63598:63609 compcert.lib.Integers Int unsigned def
R63615:63624 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R63701:63703 compcert.flocq.Core.Fcore_defs <> F2R def
R63727:63734 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R63769:63776 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R63727:63734 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R63769:63776 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R63826:63835 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R63868:63880 Coq.ZArith.Zpower <> two_power_pos def
R63826:63835 Coq.ZArith.Zpow_def <> Zpower_pos syndef
R63868:63880 Coq.ZArith.Zpower <> two_power_pos def
R63924:63926 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R63918:63921 Coq.Numbers.BinNums <> Zneg constr
R63924:63926 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R63918:63921 Coq.Numbers.BinNums <> Zneg constr
prf 63988:64010 Float floatoflongu_from_words
R64041:64047 Coq.Init.Logic <> :type_scope:x_'='_x not
R64027:64038 compcert.lib.Floats Float floatoflongu def
R64040:64040 compcert.lib.Floats <> l var
R64048:64050 compcert.lib.Floats Float add def
R64169:64178 compcert.lib.Floats Float from_words def
R64193:64204 compcert.lib.Integers Int64 loword def
R64206:64206 compcert.lib.Floats <> l var
R64180:64190 compcert.lib.Floats Float ox4330_0000 def
R64053:64055 compcert.lib.Floats Float sub def
R64113:64122 compcert.lib.Floats Float from_words def
R64137:64144 compcert.lib.Integers Int repr def
R64147:64151 Coq.ZArith.Zpower <> two_p def
R64124:64134 compcert.lib.Floats Float ox4530_0000 def
R64058:64067 compcert.lib.Floats Float from_words def
R64082:64093 compcert.lib.Integers Int64 hiword def
R64095:64095 compcert.lib.Floats <> l var
R64069:64079 compcert.lib.Floats Float ox4530_0000 def
R64243:64262 compcert.lib.Integers Int64 unsigned_range thm
R64243:64262 compcert.lib.Integers Int64 unsigned_range thm
R64282:64299 compcert.lib.Integers Int unsigned_range thm
R64302:64313 compcert.lib.Integers Int64 hiword def
R64282:64299 compcert.lib.Integers Int unsigned_range thm
R64302:64313 compcert.lib.Integers Int64 hiword def
R64332:64347 compcert.lib.Floats Float from_words_value thm
R64350:64361 compcert.lib.Integers Int64 loword def
R64332:64347 compcert.lib.Floats Float from_words_value thm
R64350:64361 compcert.lib.Integers Int64 loword def
R64380:64396 compcert.lib.Floats Float from_words_value' thm
R64399:64410 compcert.lib.Integers Int64 hiword def
R64380:64396 compcert.lib.Floats Float from_words_value' thm
R64399:64410 compcert.lib.Integers Int64 hiword def
R64429:64445 compcert.lib.Floats Float from_words_value' thm
R64448:64455 compcert.lib.Integers Int repr def
R64458:64462 Coq.ZArith.Zpower <> two_p def
R64429:64445 compcert.lib.Floats Float from_words_value' thm
R64448:64455 compcert.lib.Integers Int repr def
R64458:64462 Coq.ZArith.Zpower <> two_p def
R64480:64482 compcert.lib.Floats Float sub def
R64485:64493 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_minus def
R64510:64523 compcert.flocq.Appli.Fappli_IEEE <> Bminus_correct thm
R64667:64676 compcert.lib.Floats Float from_words def
R64691:64698 compcert.lib.Integers Int repr def
R64701:64705 Coq.ZArith.Zpower <> two_p def
R64678:64688 compcert.lib.Floats Float ox4530_0000 def
R64596:64605 compcert.lib.Floats Float from_words def
R64620:64631 compcert.lib.Integers Int64 hiword def
R64607:64617 compcert.lib.Floats Float ox4530_0000 def
R64558:64564 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R64549:64556 compcert.lib.Floats Float binop_pl def
R64541:64547 Coq.Init.Logic <> eq_refl constr
R64533:64539 Coq.Init.Logic <> eq_refl constr
R64510:64523 compcert.flocq.Appli.Fappli_IEEE <> Bminus_correct thm
R64667:64676 compcert.lib.Floats Float from_words def
R64691:64698 compcert.lib.Integers Int repr def
R64701:64705 Coq.ZArith.Zpower <> two_p def
R64678:64688 compcert.lib.Floats Float ox4530_0000 def
R64596:64605 compcert.lib.Floats Float from_words def
R64620:64631 compcert.lib.Integers Int64 hiword def
R64607:64617 compcert.lib.Floats Float ox4530_0000 def
R64558:64564 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R64549:64556 compcert.lib.Floats Float binop_pl def
R64541:64547 Coq.Init.Logic <> eq_refl constr
R64533:64539 Coq.Init.Logic <> eq_refl constr
R64731:64743 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R64731:64743 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R64854:64870 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R64939:64939 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R64805:64807 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R64791:64794 compcert.flocq.Core.Fcore_Raux <> bpow def
R64796:64801 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R64808:64810 compcert.flocq.Core.Fcore_Raux <> Z2R def
R64842:64844 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R64813:64824 compcert.lib.Integers Int unsigned def
R64827:64838 compcert.lib.Integers Int64 hiword def
R64845:64849 Coq.ZArith.Zpower <> two_p def
R64885:64887 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R64871:64874 compcert.flocq.Core.Fcore_Raux <> bpow def
R64876:64881 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R64888:64890 compcert.flocq.Core.Fcore_Raux <> Z2R def
R64927:64929 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R64893:64904 compcert.lib.Integers Int unsigned def
R64907:64914 compcert.lib.Integers Int repr def
R64917:64921 Coq.ZArith.Zpower <> two_p def
R64930:64934 Coq.ZArith.Zpower <> two_p def
R64954:64956 compcert.flocq.Core.Fcore_Raux <> Z2R def
R64999:65001 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64988:64990 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R64959:64970 compcert.lib.Integers Int unsigned def
R64973:64984 compcert.lib.Integers Int64 hiword def
R64991:64995 Coq.ZArith.Zpower <> two_p def
R65002:65006 Coq.ZArith.Zpower <> two_p def
R64954:64956 compcert.flocq.Core.Fcore_Raux <> Z2R def
R64999:65001 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64988:64990 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R64959:64970 compcert.lib.Integers Int unsigned def
R64973:64984 compcert.lib.Integers Int64 hiword def
R64991:64995 Coq.ZArith.Zpower <> two_p def
R65002:65006 Coq.ZArith.Zpower <> two_p def
R64854:64870 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R64939:64939 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R64805:64807 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R64791:64794 compcert.flocq.Core.Fcore_Raux <> bpow def
R64796:64801 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R64808:64810 compcert.flocq.Core.Fcore_Raux <> Z2R def
R64842:64844 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R64813:64824 compcert.lib.Integers Int unsigned def
R64827:64838 compcert.lib.Integers Int64 hiword def
R64845:64849 Coq.ZArith.Zpower <> two_p def
R64885:64887 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R64871:64874 compcert.flocq.Core.Fcore_Raux <> bpow def
R64876:64881 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R64888:64890 compcert.flocq.Core.Fcore_Raux <> Z2R def
R64927:64929 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R64893:64904 compcert.lib.Integers Int unsigned def
R64907:64914 compcert.lib.Integers Int repr def
R64917:64921 Coq.ZArith.Zpower <> two_p def
R64930:64934 Coq.ZArith.Zpower <> two_p def
R65034:65046 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R65034:65046 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R65105:65116 compcert.lib.Floats Float floatoflongu def
R65119:65136 compcert.lib.Floats Float binary_normalize64 def
R65161:65186 compcert.lib.Floats Float binary_normalize64_correct def
R65209:65213 Coq.Init.Datatypes <> false constr
R65189:65202 compcert.lib.Integers Int64 unsigned def
R65161:65186 compcert.lib.Floats Float binary_normalize64_correct def
R65209:65213 Coq.Init.Datatypes <> false constr
R65189:65202 compcert.lib.Integers Int64 unsigned def
R65236:65238 compcert.flocq.Core.Fcore_defs <> F2R def
R65258:65292 compcert.flocq.Core.Fcore_defs <> Float constr
R65266:65279 compcert.lib.Integers Int64 unsigned def
R65247:65252 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R65314:65316 compcert.flocq.Core.Fcore_Raux <> Z2R def
R65319:65332 compcert.lib.Integers Int64 unsigned def
R65366:65368 compcert.flocq.Core.Fcore_defs <> F2R def
R65371:65374 compcert.flocq.Core.Fcore_defs <> Fexp proj
R65377:65380 compcert.flocq.Core.Fcore_defs <> Fnum proj
R65383:65386 compcert.flocq.Core.Fcore_Raux <> bpow def
R65314:65316 compcert.flocq.Core.Fcore_Raux <> Z2R def
R65319:65332 compcert.lib.Integers Int64 unsigned def
R65236:65238 compcert.flocq.Core.Fcore_defs <> F2R def
R65258:65292 compcert.flocq.Core.Fcore_defs <> Float constr
R65266:65279 compcert.lib.Integers Int64 unsigned def
R65247:65252 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R65539:65559 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R65415:65418 Coq.Reals.Rbasic_fun <> Rabs def
R65421:65425 compcert.flocq.Core.Fcore_generic_fmt <> round def
R65515:65517 compcert.flocq.Core.Fcore_Raux <> Z2R def
R65520:65533 compcert.lib.Integers Int64 unsigned def
R65494:65503 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R65505:65511 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R65435:65441 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R65452:65454 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65445:65447 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65427:65432 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R65560:65563 compcert.flocq.Core.Fcore_Raux <> bpow def
R65565:65570 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R65539:65559 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R65415:65418 Coq.Reals.Rbasic_fun <> Rabs def
R65421:65425 compcert.flocq.Core.Fcore_generic_fmt <> round def
R65515:65517 compcert.flocq.Core.Fcore_Raux <> Z2R def
R65520:65533 compcert.lib.Integers Int64 unsigned def
R65494:65503 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R65505:65511 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R65435:65441 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R65452:65454 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65445:65447 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65427:65432 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R65560:65563 compcert.flocq.Core.Fcore_Raux <> bpow def
R65565:65570 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R65627:65638 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R65604:65615 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R65604:65615 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R65627:65638 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R65691:65693 compcert.flocq.Core.Fcore_Raux <> Z2R def
R65696:65700 Coq.ZArith.Zpower <> two_p def
R65672:65683 Coq.Reals.RIneq <> Rle_lt_trans thm
R65691:65693 compcert.flocq.Core.Fcore_Raux <> Z2R def
R65696:65700 Coq.ZArith.Zpower <> two_p def
R65672:65683 Coq.Reals.RIneq <> Rle_lt_trans thm
R65716:65721 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R65716:65721 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R65759:65771 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R65759:65771 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R65794:65801 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R65794:65801 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R65810:65821 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R65810:65821 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R65858:65877 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R65879:65885 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R65858:65877 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R65879:65885 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R65914:65920 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R65914:65920 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R65929:65934 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R65929:65934 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R65960:65972 compcert.lib.Integers Int64 modulus def
R65945:65949 Coq.ZArith.Zpower <> two_p def
R65945:65949 Coq.ZArith.Zpower <> two_p def
R65960:65972 compcert.lib.Integers Int64 modulus def
R66009:66028 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R66030:66036 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R66009:66028 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R66030:66036 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R66061:66079 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R66081:66086 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R66061:66079 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R66081:66086 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R66138:66150 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R66138:66150 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R66185:66187 compcert.lib.Floats Float add def
R66190:66197 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_plus def
R66222:66234 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R66577:66586 compcert.lib.Floats Float from_words def
R66601:66612 compcert.lib.Integers Int64 loword def
R66588:66598 compcert.lib.Floats Float ox4330_0000 def
R66314:66319 compcert.flocq.Appli.Fappli_IEEE <> Bminus def
R66493:66502 compcert.lib.Floats Float from_words def
R66517:66524 compcert.lib.Integers Int repr def
R66527:66531 Coq.ZArith.Zpower <> two_p def
R66504:66514 compcert.lib.Floats Float ox4530_0000 def
R66407:66416 compcert.lib.Floats Float from_words def
R66431:66442 compcert.lib.Integers Int64 hiword def
R66418:66428 compcert.lib.Floats Float ox4530_0000 def
R66354:66360 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R66345:66352 compcert.lib.Floats Float binop_pl def
R66337:66343 Coq.Init.Logic <> eq_refl constr
R66329:66335 Coq.Init.Logic <> eq_refl constr
R66269:66275 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R66260:66267 compcert.lib.Floats Float binop_pl def
R66252:66258 Coq.Init.Logic <> eq_refl constr
R66244:66250 Coq.Init.Logic <> eq_refl constr
R66222:66234 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R66577:66586 compcert.lib.Floats Float from_words def
R66601:66612 compcert.lib.Integers Int64 loword def
R66588:66598 compcert.lib.Floats Float ox4330_0000 def
R66314:66319 compcert.flocq.Appli.Fappli_IEEE <> Bminus def
R66493:66502 compcert.lib.Floats Float from_words def
R66517:66524 compcert.lib.Integers Int repr def
R66527:66531 Coq.ZArith.Zpower <> two_p def
R66504:66514 compcert.lib.Floats Float ox4530_0000 def
R66407:66416 compcert.lib.Floats Float from_words def
R66431:66442 compcert.lib.Integers Int64 hiword def
R66418:66428 compcert.lib.Floats Float ox4530_0000 def
R66354:66360 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R66345:66352 compcert.lib.Floats Float binop_pl def
R66337:66343 Coq.Init.Logic <> eq_refl constr
R66329:66335 Coq.Init.Logic <> eq_refl constr
R66269:66275 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R66260:66267 compcert.lib.Floats Float binop_pl def
R66252:66258 Coq.Init.Logic <> eq_refl constr
R66244:66250 Coq.Init.Logic <> eq_refl constr
R66666:66668 compcert.flocq.Core.Fcore_Raux <> Z2R def
R66671:66675 Coq.ZArith.Zpower <> two_p def
R66644:66647 compcert.flocq.Core.Fcore_Raux <> bpow def
R66649:66654 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R66644:66647 compcert.flocq.Core.Fcore_Raux <> bpow def
R66649:66654 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R66666:66668 compcert.flocq.Core.Fcore_Raux <> Z2R def
R66671:66675 Coq.ZArith.Zpower <> two_p def
R66719:66726 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R66719:66726 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R66719:66726 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R66719:66726 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R66806:66828 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66869:66869 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66795:66797 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R66784:66786 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R66755:66766 compcert.lib.Integers Int unsigned def
R66769:66780 compcert.lib.Integers Int64 hiword def
R66787:66791 Coq.ZArith.Zpower <> two_p def
R66798:66802 Coq.ZArith.Zpower <> two_p def
R66837:66839 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66829:66833 Coq.ZArith.Zpower <> two_p def
R66840:66851 compcert.lib.Integers Int unsigned def
R66854:66865 compcert.lib.Integers Int64 loword def
R66928:66930 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66917:66919 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R66888:66899 compcert.lib.Integers Int unsigned def
R66902:66913 compcert.lib.Integers Int64 hiword def
R66920:66924 Coq.ZArith.Zpower <> two_p def
R66931:66942 compcert.lib.Integers Int unsigned def
R66945:66956 compcert.lib.Integers Int64 loword def
R66928:66930 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66917:66919 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R66888:66899 compcert.lib.Integers Int unsigned def
R66902:66913 compcert.lib.Integers Int64 hiword def
R66920:66924 Coq.ZArith.Zpower <> two_p def
R66931:66942 compcert.lib.Integers Int unsigned def
R66945:66956 compcert.lib.Integers Int64 loword def
R66806:66828 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66869:66869 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66795:66797 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R66784:66786 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R66755:66766 compcert.lib.Integers Int unsigned def
R66769:66780 compcert.lib.Integers Int64 hiword def
R66787:66791 Coq.ZArith.Zpower <> two_p def
R66798:66802 Coq.ZArith.Zpower <> two_p def
R66837:66839 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66829:66833 Coq.ZArith.Zpower <> two_p def
R66840:66851 compcert.lib.Integers Int unsigned def
R66854:66865 compcert.lib.Integers Int64 loword def
R67011:67028 compcert.lib.Integers Int64 ofwords_add' thm
R67031:67053 compcert.lib.Integers Int64 ofwords_recompose thm
R67056:67068 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R67011:67028 compcert.lib.Integers Int64 ofwords_add' thm
R67031:67053 compcert.lib.Integers Int64 ofwords_recompose thm
R67056:67068 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R67106:67113 Coq.ZArith.BinInt Z eq_dec def
R67116:67129 compcert.lib.Integers Int64 unsigned def
R67106:67113 Coq.ZArith.BinInt Z eq_dec def
R67116:67129 compcert.lib.Integers Int64 unsigned def
R67157:67163 Coq.Init.Logic <> f_equal thm
R67165:67174 compcert.lib.Integers Int64 repr def
R67157:67163 Coq.Init.Logic <> f_equal thm
R67165:67174 compcert.lib.Integers Int64 repr def
R67191:67209 compcert.lib.Integers Int64 repr_unsigned thm
R67191:67209 compcert.lib.Integers Int64 repr_unsigned thm
R67321:67324 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R67325:67328 Coq.Reals.Rbasic_fun <> Rabs def
R67331:67335 compcert.flocq.Core.Fcore_generic_fmt <> round def
R67427:67429 compcert.flocq.Core.Fcore_Raux <> Z2R def
R67432:67445 compcert.lib.Integers Int64 unsigned def
R67406:67415 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R67417:67423 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R67345:67351 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R67362:67364 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R67355:67357 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R67337:67342 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R67321:67324 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R67325:67328 Coq.Reals.Rbasic_fun <> Rabs def
R67331:67335 compcert.flocq.Core.Fcore_generic_fmt <> round def
R67427:67429 compcert.flocq.Core.Fcore_Raux <> Z2R def
R67432:67445 compcert.lib.Integers Int64 unsigned def
R67406:67415 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R67417:67423 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R67345:67351 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R67362:67364 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R67355:67357 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R67337:67342 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R67517:67528 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R67482:67493 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R67499:67505 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R67482:67493 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R67517:67528 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R67499:67505 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R67571:67583 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R67571:67583 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R67627:67645 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R67627:67645 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R67675:67682 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R67686:67691 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R67675:67682 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R67686:67691 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R67717:67728 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R67717:67728 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R67751:67770 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R67772:67778 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R67751:67770 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R67772:67778 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R67830:67849 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R67851:67857 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R67830:67849 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R67851:67857 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R67919:67925 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R67919:67925 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R67951:67966 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize def
R68012:68014 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R68040:68046 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R68040:68046 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R68063:68068 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R68063:68068 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R68161:68163 Coq.Init.Logic <> :type_scope:x_'='_x not
R68144:68152 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R68164:68167 Coq.Init.Datatypes <> true constr
R68161:68163 Coq.Init.Logic <> :type_scope:x_'='_x not
R68144:68152 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R68164:68167 Coq.Init.Datatypes <> true constr
R68229:68231 Coq.Init.Logic <> :type_scope:x_'='_x not
R68218:68220 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R68229:68231 Coq.Init.Logic <> :type_scope:x_'='_x not
R68218:68220 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R68300:68302 Coq.Init.Logic <> :type_scope:x_'='_x not
R68277:68292 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R68303:68306 Coq.Init.Datatypes <> true constr
R68300:68302 Coq.Init.Logic <> :type_scope:x_'='_x not
R68277:68292 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R68303:68306 Coq.Init.Datatypes <> true constr
R68514:68516 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R68542:68548 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R68542:68548 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R68565:68570 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R68565:68570 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R68669:68675 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R68669:68675 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R68685:68690 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R68696:68696 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R68685:68690 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R68696:68696 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R68753:68757 Coq.ZArith.Zpower <> two_p def
R68786:68790 Coq.ZArith.Zpower <> two_p def
R68812:68812 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R68726:68736 compcert.lib.Integers Int modulus def
R68753:68757 Coq.ZArith.Zpower <> two_p def
R68786:68790 Coq.ZArith.Zpower <> two_p def
R68812:68812 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R68867:68875 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R68878:68894 compcert.lib.Integers Int unsigned_repr thm
R68900:68911 Coq.ZArith.Zpower <> two_p_is_exp thm
R68915:68922 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R68867:68875 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R68878:68894 compcert.lib.Integers Int unsigned_repr thm
R68900:68911 Coq.ZArith.Zpower <> two_p_is_exp thm
R68915:68922 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R68915:68922 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R69019:69038 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R69019:69038 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R69051:69058 compcert.flocq.Prop.Fprop_Sterbenz <> sterbenz thm
R69051:69058 compcert.flocq.Prop.Fprop_Sterbenz <> sterbenz thm
R69073:69088 compcert.flocq.Core.Fcore_FLT <> FLT_exp_monotone inst
R69073:69088 compcert.flocq.Core.Fcore_FLT <> FLT_exp_monotone inst
R69103:69120 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R69103:69120 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R69135:69152 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R69135:69152 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R69177:69193 compcert.lib.Integers Int unsigned_repr thm
R69177:69193 compcert.lib.Integers Int unsigned_repr thm
R69243:69246 compcert.flocq.Core.Fcore_Raux <> bpow def
R69261:69268 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R69275:69282 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R69261:69268 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R69261:69268 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R69261:69268 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R69275:69282 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R69308:69316 Coq.ZArith.BinInt Z pow_pos def
R69318:69323 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R69358:69360 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R69350:69354 Coq.ZArith.Zpower <> two_p def
R69361:69365 Coq.ZArith.Zpower <> two_p def
R69386:69390 Coq.ZArith.Zpower <> two_p def
R69417:69427 compcert.lib.Integers Int modulus def
R69308:69316 Coq.ZArith.BinInt Z pow_pos def
R69318:69323 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R69358:69360 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R69350:69354 Coq.ZArith.Zpower <> two_p def
R69361:69365 Coq.ZArith.Zpower <> two_p def
R69386:69390 Coq.ZArith.Zpower <> two_p def
R69417:69427 compcert.lib.Integers Int modulus def
R69529:69531 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R69471:69473 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69471:69473 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69529:69531 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R69549:69552 Coq.Reals.Rdefinitions <> Rdiv def
R69615:69621 compcert.flocq.Core.Fcore_Raux <> Z2R_neq thm
R69563:69570 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R69573:69583 Coq.Reals.Raxioms <> Rmult_assoc prfax
R69586:69591 Coq.Reals.RIneq <> Rinv_r thm
R69594:69602 Coq.Reals.RIneq <> Rmult_1_r thm
R69563:69570 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R69573:69583 Coq.Reals.Raxioms <> Rmult_assoc prfax
R69586:69591 Coq.Reals.RIneq <> Rinv_r thm
R69615:69621 compcert.flocq.Core.Fcore_Raux <> Z2R_neq thm
R69594:69602 Coq.Reals.RIneq <> Rmult_1_r thm
R69656:69661 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R69656:69661 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R69656:69661 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
prf 69685:69702 Float floatoflong_decomp
R69730:69736 Coq.Init.Logic <> :type_scope:x_'='_x not
R69717:69727 compcert.lib.Floats Float floatoflong def
R69729:69729 compcert.lib.Floats <> l var
R69737:69739 compcert.lib.Floats Float add def
R69831:69841 compcert.lib.Floats Float floatofintu def
R69844:69855 compcert.lib.Integers Int64 loword def
R69857:69857 compcert.lib.Floats <> l var
R69742:69744 compcert.lib.Floats Float mul def
R69777:69786 compcert.lib.Floats Float pow2_float def
R69798:69801 Coq.Init.Logic <> conj constr
R69811:69817 Coq.Init.Logic <> eq_refl constr
R69803:69809 Coq.Init.Logic <> eq_refl constr
R69788:69792 Coq.Init.Datatypes <> false constr
R69747:69756 compcert.lib.Floats Float floatofint def
R69759:69770 compcert.lib.Integers Int64 hiword def
R69772:69772 compcert.lib.Floats <> l var
R69888:69898 compcert.lib.Floats Float floatofintu def
R69901:69910 compcert.lib.Floats Float floatofint def
R69925:69948 compcert.lib.Floats Float binary_normalize64_exact thm
R69951:69960 compcert.lib.Integers Int signed def
R69963:69974 compcert.lib.Integers Int64 hiword def
R69925:69948 compcert.lib.Floats Float binary_normalize64_exact thm
R69951:69960 compcert.lib.Integers Int signed def
R69963:69974 compcert.lib.Integers Int64 hiword def
R69998:70013 compcert.lib.Integers Int signed_range thm
R70016:70027 compcert.lib.Integers Int64 hiword def
R69998:70013 compcert.lib.Integers Int signed_range thm
R70016:70027 compcert.lib.Integers Int64 hiword def
R70060:70069 compcert.lib.Integers Int signed def
R70072:70083 compcert.lib.Integers Int64 hiword def
R70060:70069 compcert.lib.Integers Int signed def
R70072:70083 compcert.lib.Integers Int64 hiword def
R70113:70113 Coq.Numbers.BinNums <> Z ind
R70168:70170 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R70172:70174 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R70171:70171 compcert.lib.Floats <> z var
R70171:70171 compcert.lib.Floats <> z var
R70127:70130 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R70132:70135 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R70131:70131 compcert.lib.Floats <> z var
R70131:70131 compcert.lib.Floats <> z var
R70113:70113 Coq.Numbers.BinNums <> Z ind
R70168:70170 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R70172:70174 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R70171:70171 compcert.lib.Floats <> z var
R70171:70171 compcert.lib.Floats <> z var
R70127:70130 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R70132:70135 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R70131:70131 compcert.lib.Floats <> z var
R70131:70131 compcert.lib.Floats <> z var
R70227:70250 compcert.lib.Floats Float binary_normalize64_exact thm
R70253:70264 compcert.lib.Integers Int unsigned def
R70267:70278 compcert.lib.Integers Int64 loword def
R70227:70250 compcert.lib.Floats Float binary_normalize64_exact thm
R70253:70264 compcert.lib.Integers Int unsigned def
R70267:70278 compcert.lib.Integers Int64 loword def
R70302:70319 compcert.lib.Integers Int unsigned_range thm
R70322:70333 compcert.lib.Integers Int64 loword def
R70302:70319 compcert.lib.Integers Int unsigned_range thm
R70322:70333 compcert.lib.Integers Int64 loword def
R70367:70378 compcert.lib.Integers Int unsigned def
R70381:70392 compcert.lib.Integers Int64 loword def
R70367:70378 compcert.lib.Integers Int unsigned def
R70381:70392 compcert.lib.Integers Int64 loword def
R70422:70422 Coq.Numbers.BinNums <> Z ind
R70466:70468 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R70470:70472 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R70469:70469 compcert.lib.Floats <> z var
R70469:70469 compcert.lib.Floats <> z var
R70426:70429 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R70431:70433 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R70430:70430 compcert.lib.Floats <> z var
R70430:70430 compcert.lib.Floats <> z var
R70422:70422 Coq.Numbers.BinNums <> Z ind
R70466:70468 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R70470:70472 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R70469:70469 compcert.lib.Floats <> z var
R70469:70469 compcert.lib.Floats <> z var
R70426:70429 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R70431:70433 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R70430:70430 compcert.lib.Floats <> z var
R70430:70430 compcert.lib.Floats <> z var
R70522:70524 compcert.lib.Floats Float mul def
R70527:70534 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_mult def
R70551:70563 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R70722:70731 compcert.lib.Floats Float pow2_float def
R70743:70746 Coq.Init.Logic <> conj constr
R70756:70762 Coq.Init.Logic <> eq_refl constr
R70748:70754 Coq.Init.Logic <> eq_refl constr
R70733:70737 Coq.Init.Datatypes <> false constr
R70635:70652 compcert.lib.Floats Float binary_normalize64 def
R70686:70690 Coq.Init.Datatypes <> false constr
R70655:70664 compcert.lib.Integers Int signed def
R70667:70678 compcert.lib.Integers Int64 hiword def
R70598:70604 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R70589:70596 compcert.lib.Floats Float binop_pl def
R70581:70587 Coq.Init.Logic <> eq_refl constr
R70573:70579 Coq.Init.Logic <> eq_refl constr
R70551:70563 compcert.flocq.Appli.Fappli_IEEE <> Bmult_correct thm
R70722:70731 compcert.lib.Floats Float pow2_float def
R70743:70746 Coq.Init.Logic <> conj constr
R70756:70762 Coq.Init.Logic <> eq_refl constr
R70748:70754 Coq.Init.Logic <> eq_refl constr
R70733:70737 Coq.Init.Datatypes <> false constr
R70635:70652 compcert.lib.Floats Float binary_normalize64 def
R70686:70690 Coq.Init.Datatypes <> false constr
R70655:70664 compcert.lib.Integers Int signed def
R70667:70678 compcert.lib.Integers Int64 hiword def
R70598:70604 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R70589:70596 compcert.lib.Floats Float binop_pl def
R70581:70587 Coq.Init.Logic <> eq_refl constr
R70573:70579 Coq.Init.Logic <> eq_refl constr
R70799:70801 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R70812:70821 compcert.lib.Floats Float pow2_float def
R70833:70836 Coq.Init.Logic <> conj constr
R70846:70852 Coq.Init.Logic <> eq_refl constr
R70838:70844 Coq.Init.Logic <> eq_refl constr
R70823:70827 Coq.Init.Datatypes <> false constr
R70799:70801 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R70812:70821 compcert.lib.Floats Float pow2_float def
R70833:70836 Coq.Init.Logic <> conj constr
R70846:70852 Coq.Init.Logic <> eq_refl constr
R70838:70844 Coq.Init.Logic <> eq_refl constr
R70823:70827 Coq.Init.Datatypes <> false constr
R70911:70913 compcert.flocq.Core.Fcore_Raux <> Z2R def
R70923:70923 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R70911:70913 compcert.flocq.Core.Fcore_Raux <> Z2R def
R70923:70923 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R70971:70973 compcert.flocq.Core.Fcore_Raux <> Z2R def
R70971:70973 compcert.flocq.Core.Fcore_Raux <> Z2R def
R71003:71010 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R71003:71010 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R71032:71034 Coq.Init.Logic <> :type_scope:x_'='_x not
R71035:71037 compcert.flocq.Core.Fcore_Raux <> Z2R def
R71032:71034 Coq.Init.Logic <> :type_scope:x_'='_x not
R71035:71037 compcert.flocq.Core.Fcore_Raux <> Z2R def
R71094:71096 compcert.flocq.Core.Fcore_Raux <> Z2R def
R71094:71096 compcert.flocq.Core.Fcore_Raux <> Z2R def
R71115:71120 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R71115:71120 compcert.flocq.Core.Fcore_Raux <> eq_Z2R thm
R71180:71195 compcert.lib.Integers Int signed_range thm
R71198:71209 compcert.lib.Integers Int64 hiword def
R71180:71195 compcert.lib.Integers Int signed_range thm
R71198:71209 compcert.lib.Integers Int64 hiword def
R71225:71238 compcert.lib.Integers Int min_signed def
R71225:71238 compcert.lib.Integers Int min_signed def
R71275:71288 compcert.lib.Integers Int max_signed def
R71275:71288 compcert.lib.Integers Int max_signed def
R71326:71333 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R71326:71333 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R71352:71364 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R71352:71364 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R71387:71399 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R71486:71489 compcert.flocq.Core.Fcore_Raux <> bpow def
R71491:71496 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R71402:71405 Coq.Reals.Rbasic_fun <> Rabs def
R71408:71410 compcert.flocq.Core.Fcore_Raux <> Z2R def
R71440:71442 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R71413:71422 compcert.lib.Integers Int signed def
R71425:71436 compcert.lib.Integers Int64 hiword def
R71387:71399 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R71486:71489 compcert.flocq.Core.Fcore_Raux <> bpow def
R71491:71496 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R71402:71405 Coq.Reals.Rbasic_fun <> Rabs def
R71408:71410 compcert.flocq.Core.Fcore_Raux <> Z2R def
R71440:71442 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R71413:71422 compcert.lib.Integers Int signed def
R71425:71436 compcert.lib.Integers Int64 hiword def
R71577:71579 compcert.lib.Floats Float add def
R71582:71589 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_plus def
R71612:71624 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R71924:71941 compcert.lib.Floats Float binary_normalize64 def
R71977:71981 Coq.Init.Datatypes <> false constr
R71944:71955 compcert.lib.Integers Int unsigned def
R71958:71969 compcert.lib.Integers Int64 loword def
R71690:71694 compcert.flocq.Appli.Fappli_IEEE <> Bmult def
R71850:71859 compcert.lib.Floats Float pow2_float def
R71871:71874 Coq.Init.Logic <> conj constr
R71884:71890 Coq.Init.Logic <> eq_refl constr
R71876:71882 Coq.Init.Logic <> eq_refl constr
R71861:71865 Coq.Init.Datatypes <> false constr
R71763:71780 compcert.lib.Floats Float binary_normalize64 def
R71814:71818 Coq.Init.Datatypes <> false constr
R71783:71792 compcert.lib.Integers Int signed def
R71795:71806 compcert.lib.Integers Int64 hiword def
R71729:71735 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R71720:71727 compcert.lib.Floats Float binop_pl def
R71712:71718 Coq.Init.Logic <> eq_refl constr
R71704:71710 Coq.Init.Logic <> eq_refl constr
R71659:71665 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R71650:71657 compcert.lib.Floats Float binop_pl def
R71642:71648 Coq.Init.Logic <> eq_refl constr
R71634:71640 Coq.Init.Logic <> eq_refl constr
R71612:71624 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R71924:71941 compcert.lib.Floats Float binary_normalize64 def
R71977:71981 Coq.Init.Datatypes <> false constr
R71944:71955 compcert.lib.Integers Int unsigned def
R71958:71969 compcert.lib.Integers Int64 loword def
R71690:71694 compcert.flocq.Appli.Fappli_IEEE <> Bmult def
R71850:71859 compcert.lib.Floats Float pow2_float def
R71871:71874 Coq.Init.Logic <> conj constr
R71884:71890 Coq.Init.Logic <> eq_refl constr
R71876:71882 Coq.Init.Logic <> eq_refl constr
R71861:71865 Coq.Init.Datatypes <> false constr
R71763:71780 compcert.lib.Floats Float binary_normalize64 def
R71814:71818 Coq.Init.Datatypes <> false constr
R71783:71792 compcert.lib.Integers Int signed def
R71795:71806 compcert.lib.Integers Int64 hiword def
R71729:71735 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R71720:71727 compcert.lib.Floats Float binop_pl def
R71712:71718 Coq.Init.Logic <> eq_refl constr
R71704:71710 Coq.Init.Logic <> eq_refl constr
R71659:71665 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R71650:71657 compcert.lib.Floats Float binop_pl def
R71642:71648 Coq.Init.Logic <> eq_refl constr
R71634:71640 Coq.Init.Logic <> eq_refl constr
R72019:72026 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R72019:72026 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R72067:72071 Coq.ZArith.Zpower <> two_p def
R72067:72071 Coq.ZArith.Zpower <> two_p def
R72103:72121 compcert.lib.Integers Int64 ofwords_add'' thm
R72124:72146 compcert.lib.Integers Int64 ofwords_recompose thm
R72103:72121 compcert.lib.Integers Int64 ofwords_add'' thm
R72124:72146 compcert.lib.Integers Int64 ofwords_recompose thm
R72173:72185 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R72376:72379 compcert.flocq.Core.Fcore_Raux <> bpow def
R72381:72386 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R72208:72211 Coq.Reals.Rbasic_fun <> Rabs def
R72237:72241 compcert.flocq.Core.Fcore_generic_fmt <> round def
R72331:72333 compcert.flocq.Core.Fcore_Raux <> Z2R def
R72336:72347 compcert.lib.Integers Int64 signed def
R72310:72319 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R72321:72327 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R72251:72257 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R72268:72270 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R72261:72263 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R72243:72248 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R72173:72185 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_spec thm
R72376:72379 compcert.flocq.Core.Fcore_Raux <> bpow def
R72381:72386 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R72208:72211 Coq.Reals.Rbasic_fun <> Rabs def
R72237:72241 compcert.flocq.Core.Fcore_generic_fmt <> round def
R72331:72333 compcert.flocq.Core.Fcore_Raux <> Z2R def
R72336:72347 compcert.lib.Integers Int64 signed def
R72310:72319 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R72321:72327 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R72251:72257 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R72268:72270 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R72261:72263 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R72243:72248 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R72413:72423 compcert.lib.Floats Float floatoflong def
R72433:72450 compcert.lib.Floats Float binary_normalize64 def
R72475:72500 compcert.lib.Floats Float binary_normalize64_correct def
R72521:72525 Coq.Init.Datatypes <> false constr
R72503:72514 compcert.lib.Integers Int64 signed def
R72475:72500 compcert.lib.Floats Float binary_normalize64_correct def
R72521:72525 Coq.Init.Datatypes <> false constr
R72503:72514 compcert.lib.Integers Int64 signed def
R72548:72550 compcert.flocq.Core.Fcore_defs <> F2R def
R72570:72602 compcert.flocq.Core.Fcore_defs <> Float constr
R72578:72589 compcert.lib.Integers Int64 signed def
R72559:72564 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R72624:72626 compcert.flocq.Core.Fcore_Raux <> Z2R def
R72629:72640 compcert.lib.Integers Int64 signed def
R72674:72676 compcert.flocq.Core.Fcore_defs <> F2R def
R72679:72682 compcert.flocq.Core.Fcore_defs <> Fexp proj
R72685:72688 compcert.flocq.Core.Fcore_defs <> Fnum proj
R72691:72694 compcert.flocq.Core.Fcore_Raux <> bpow def
R72624:72626 compcert.flocq.Core.Fcore_Raux <> Z2R def
R72629:72640 compcert.lib.Integers Int64 signed def
R72548:72550 compcert.flocq.Core.Fcore_defs <> F2R def
R72570:72602 compcert.flocq.Core.Fcore_defs <> Float constr
R72578:72589 compcert.lib.Integers Int64 signed def
R72559:72564 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R72723:72735 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R72723:72735 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R72773:72784 compcert.lib.Integers Int64 eq_dec thm
R72788:72797 compcert.lib.Integers Int64 zero def
R72773:72784 compcert.lib.Integers Int64 eq_dec thm
R72788:72797 compcert.lib.Integers Int64 zero def
R72868:72871 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R72872:72876 compcert.flocq.Core.Fcore_generic_fmt <> round def
R72965:72967 compcert.flocq.Core.Fcore_Raux <> Z2R def
R72970:72973 Coq.ZArith.BinInt <> Zabs syndef
R72976:72987 compcert.lib.Integers Int64 signed def
R72915:72924 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R72926:72932 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R72886:72892 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R72903:72905 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R72896:72898 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R72878:72883 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R72868:72871 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R72872:72876 compcert.flocq.Core.Fcore_generic_fmt <> round def
R72965:72967 compcert.flocq.Core.Fcore_Raux <> Z2R def
R72970:72973 Coq.ZArith.BinInt <> Zabs syndef
R72976:72987 compcert.lib.Integers Int64 signed def
R72915:72924 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R72926:72932 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R72886:72892 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R72903:72905 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R72896:72898 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R72878:72883 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R73022:73034 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R73022:73034 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R73069:73076 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R73069:73076 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R73085:73096 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R73085:73096 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R73118:73137 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R73118:73137 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R73174:73177 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R73160:73171 compcert.lib.Integers Int64 signed def
R73174:73177 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R73160:73171 compcert.lib.Integers Int64 signed def
R73222:73238 compcert.lib.Integers Int64 repr_signed thm
R73222:73238 compcert.lib.Integers Int64 repr_signed thm
R73284:73286 compcert.flocq.Core.Fcore_Raux <> Z2R def
R73284:73286 compcert.flocq.Core.Fcore_Raux <> Z2R def
R73298:73303 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R73298:73303 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R73337:73356 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R73337:73356 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R73378:73396 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R73378:73396 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R73449:73455 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R73449:73455 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R73513:73524 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R73483:73494 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R73483:73494 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R73513:73524 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R73574:73583 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R73585:73591 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R73558:73566 compcert.flocq.Core.Fcore_rnd_ne <> ZnearestE syndef
R73558:73566 compcert.flocq.Core.Fcore_rnd_ne <> ZnearestE syndef
R73574:73583 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R73585:73591 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R73619:73636 compcert.lib.Floats Float binary_normalize64 def
R73660:73666 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R73660:73666 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R73696:73711 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize def
R73764:73768 Coq.Init.Datatypes <> false constr
R73746:73757 compcert.lib.Integers Int64 signed def
R73737:73743 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R73729:73735 Coq.Init.Logic <> eq_refl constr
R73721:73727 Coq.Init.Logic <> eq_refl constr
R73696:73711 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize def
R73764:73768 Coq.Init.Datatypes <> false constr
R73746:73757 compcert.lib.Integers Int64 signed def
R73737:73743 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R73729:73735 Coq.Init.Logic <> eq_refl constr
R73721:73727 Coq.Init.Logic <> eq_refl constr
R73809:73811 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R73837:73843 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R73837:73843 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R73860:73865 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R73860:73865 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R73968:73970 Coq.Init.Logic <> :type_scope:x_'='_x not
R73951:73959 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R73971:73974 Coq.Init.Datatypes <> true constr
R73968:73970 Coq.Init.Logic <> :type_scope:x_'='_x not
R73951:73959 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R73971:73974 Coq.Init.Datatypes <> true constr
R74020:74022 Coq.Init.Logic <> :type_scope:x_'='_x not
R74009:74011 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R74020:74022 Coq.Init.Logic <> :type_scope:x_'='_x not
R74009:74011 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R74079:74081 Coq.Init.Logic <> :type_scope:x_'='_x not
R74056:74071 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R74082:74085 Coq.Init.Datatypes <> true constr
R74079:74081 Coq.Init.Logic <> :type_scope:x_'='_x not
R74056:74071 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R74082:74085 Coq.Init.Datatypes <> true constr
R74261:74263 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R74287:74293 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R74287:74293 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R74310:74315 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R74310:74315 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R74456:74460 compcert.flocq.Core.Fcore_generic_fmt <> round def
R74563:74566 compcert.flocq.Core.Fcore_Raux <> bpow def
R74568:74573 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R74542:74551 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R74553:74559 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R74470:74476 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R74487:74489 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R74480:74482 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R74462:74467 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R74436:74444 Coq.Reals.RIneq <> Rle_trans thm
R74456:74460 compcert.flocq.Core.Fcore_generic_fmt <> round def
R74563:74566 compcert.flocq.Core.Fcore_Raux <> bpow def
R74568:74573 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R74542:74551 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R74553:74559 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R74470:74476 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R74487:74489 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R74480:74482 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R74462:74467 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R74436:74444 Coq.Reals.RIneq <> Rle_trans thm
R74605:74617 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R74605:74617 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R74645:74651 compcert.flocq.Core.Fcore_Raux <> le_bpow thm
R74645:74651 compcert.flocq.Core.Fcore_Raux <> le_bpow thm
R74685:74704 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R74685:74704 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R74725:74743 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R74725:74743 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R74792:74803 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R74792:74803 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R74814:74825 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R74814:74825 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R74859:74866 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R74859:74866 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R74875:74886 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R74875:74886 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R74908:74927 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R74908:74927 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R74953:74959 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R74953:74959 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R74994:74996 compcert.flocq.Core.Fcore_Raux <> Z2R def
R74998:75010 compcert.lib.Integers Int64 modulus def
R74970:74973 compcert.flocq.Core.Fcore_Raux <> bpow def
R74975:74980 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R74970:74973 compcert.flocq.Core.Fcore_Raux <> bpow def
R74975:74980 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R74994:74996 compcert.flocq.Core.Fcore_Raux <> Z2R def
R74998:75010 compcert.lib.Integers Int64 modulus def
R75032:75037 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R75032:75037 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R75062:75079 compcert.lib.Integers Int64 signed_range thm
R75062:75079 compcert.lib.Integers Int64 signed_range thm
R75119:75121 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R75105:75105 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R75106:75118 compcert.lib.Integers Int64 modulus def
R75122:75137 compcert.lib.Integers Int64 min_signed def
R75119:75121 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R75105:75105 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R75106:75118 compcert.lib.Integers Int64 modulus def
R75122:75137 compcert.lib.Integers Int64 min_signed def
R75192:75194 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R75176:75191 compcert.lib.Integers Int64 max_signed def
R75195:75207 compcert.lib.Integers Int64 modulus def
R75192:75194 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R75176:75191 compcert.lib.Integers Int64 max_signed def
R75195:75207 compcert.lib.Integers Int64 modulus def
R75285:75291 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R75285:75291 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R75338:75340 compcert.flocq.Core.Fcore_Raux <> Z2R def
R75349:75351 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R75343:75348 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R75314:75317 compcert.flocq.Core.Fcore_Raux <> bpow def
R75319:75324 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R75314:75317 compcert.flocq.Core.Fcore_Raux <> bpow def
R75319:75324 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R75338:75340 compcert.flocq.Core.Fcore_Raux <> Z2R def
R75349:75351 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R75343:75348 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R75378:75383 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R75378:75383 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R75413:75415 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R75406:75408 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R75400:75405 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R75413:75415 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R75406:75408 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R75400:75405 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R75486:75505 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R75486:75505 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R75522:75529 Coq.ZArith.BinInt Z eq_dec def
R75532:75541 compcert.lib.Integers Int signed def
R75544:75555 compcert.lib.Integers Int64 hiword def
R75522:75529 Coq.ZArith.BinInt Z eq_dec def
R75532:75541 compcert.lib.Integers Int signed def
R75544:75555 compcert.lib.Integers Int64 hiword def
R75586:75601 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
R75586:75601 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_0 thm
R75614:75635 compcert.flocq.Core.Fcore_FLT <> generic_format_FLT_FLX thm
R75614:75635 compcert.flocq.Core.Fcore_FLT <> generic_format_FLT_FLX thm
R75666:75669 compcert.flocq.Core.Fcore_Raux <> bpow def
R75671:75676 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R75650:75658 Coq.Reals.RIneq <> Rle_trans thm
R75666:75669 compcert.flocq.Core.Fcore_Raux <> bpow def
R75671:75676 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R75650:75658 Coq.Reals.RIneq <> Rle_trans thm
R75688:75694 compcert.flocq.Core.Fcore_Raux <> bpow_le thm
R75688:75694 compcert.flocq.Core.Fcore_Raux <> bpow_le thm
R75739:75741 compcert.flocq.Core.Fcore_Raux <> Z2R def
R75718:75721 compcert.flocq.Core.Fcore_Raux <> bpow def
R75723:75728 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R75718:75721 compcert.flocq.Core.Fcore_Raux <> bpow def
R75723:75728 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R75739:75741 compcert.flocq.Core.Fcore_Raux <> Z2R def
R75758:75764 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R75758:75764 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R75773:75778 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R75773:75778 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R75826:75843 compcert.flocq.Core.Fcore_FLX <> generic_format_FLX thm
R75826:75843 compcert.flocq.Core.Fcore_FLX <> generic_format_FLX thm
R75863:75909 compcert.flocq.Core.Fcore_defs <> Float constr
R75871:75880 compcert.lib.Integers Int signed def
R75883:75894 compcert.lib.Integers Int64 hiword def
R75863:75909 compcert.flocq.Core.Fcore_defs <> Float constr
R75871:75880 compcert.lib.Integers Int signed def
R75883:75894 compcert.lib.Integers Int64 hiword def
R75928:75930 compcert.flocq.Core.Fcore_defs <> F2R def
R75933:75936 compcert.flocq.Core.Fcore_defs <> Fnum proj
R75939:75942 compcert.flocq.Core.Fcore_defs <> Fexp proj
R75966:75973 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R75966:75973 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R76002:76004 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R75996:76001 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R76002:76004 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R75996:76001 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
prf 76078:76099 Float floatoflong_from_words
R76129:76135 Coq.Init.Logic <> :type_scope:x_'='_x not
R76116:76126 compcert.lib.Floats Float floatoflong def
R76128:76128 compcert.lib.Floats <> l var
R76136:76138 compcert.lib.Floats Float add def
R76288:76297 compcert.lib.Floats Float from_words def
R76312:76323 compcert.lib.Integers Int64 loword def
R76325:76325 compcert.lib.Floats <> l var
R76299:76309 compcert.lib.Floats Float ox4330_0000 def
R76141:76143 compcert.lib.Floats Float sub def
R76223:76232 compcert.lib.Floats Float from_words def
R76247:76254 compcert.lib.Integers Int repr def
R76265:76265 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R76257:76261 Coq.ZArith.Zpower <> two_p def
R76266:76270 Coq.ZArith.Zpower <> two_p def
R76234:76244 compcert.lib.Floats Float ox4530_0000 def
R76146:76155 compcert.lib.Floats Float from_words def
R76170:76176 compcert.lib.Integers Int add def
R76195:76205 compcert.lib.Floats Float ox8000_0000 def
R76179:76190 compcert.lib.Integers Int64 hiword def
R76192:76192 compcert.lib.Floats <> l var
R76157:76167 compcert.lib.Floats Float ox4530_0000 def
R76362:76379 compcert.lib.Integers Int64 signed_range thm
R76401:76416 compcert.lib.Integers Int64 min_signed def
R76434:76449 compcert.lib.Integers Int64 max_signed def
R76362:76379 compcert.lib.Integers Int64 signed_range thm
R76401:76416 compcert.lib.Integers Int64 min_signed def
R76434:76449 compcert.lib.Integers Int64 max_signed def
R76467:76484 compcert.lib.Integers Int unsigned_range thm
R76487:76493 compcert.lib.Integers Int add def
R76512:76522 compcert.lib.Floats Float ox8000_0000 def
R76496:76507 compcert.lib.Integers Int64 hiword def
R76467:76484 compcert.lib.Integers Int unsigned_range thm
R76487:76493 compcert.lib.Integers Int add def
R76512:76522 compcert.lib.Floats Float ox8000_0000 def
R76496:76507 compcert.lib.Integers Int64 hiword def
R76539:76554 compcert.lib.Floats Float from_words_value thm
R76557:76568 compcert.lib.Integers Int64 loword def
R76539:76554 compcert.lib.Floats Float from_words_value thm
R76557:76568 compcert.lib.Integers Int64 loword def
R76587:76603 compcert.lib.Floats Float from_words_value' thm
R76606:76612 compcert.lib.Integers Int add def
R76631:76641 compcert.lib.Floats Float ox8000_0000 def
R76615:76626 compcert.lib.Integers Int64 hiword def
R76587:76603 compcert.lib.Floats Float from_words_value' thm
R76606:76612 compcert.lib.Integers Int add def
R76631:76641 compcert.lib.Floats Float ox8000_0000 def
R76615:76626 compcert.lib.Integers Int64 hiword def
R76658:76674 compcert.lib.Floats Float from_words_value' thm
R76677:76684 compcert.lib.Integers Int repr def
R76695:76695 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R76687:76691 Coq.ZArith.Zpower <> two_p def
R76696:76700 Coq.ZArith.Zpower <> two_p def
R76658:76674 compcert.lib.Floats Float from_words_value' thm
R76677:76684 compcert.lib.Integers Int repr def
R76695:76695 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R76687:76691 Coq.ZArith.Zpower <> two_p def
R76696:76700 Coq.ZArith.Zpower <> two_p def
R76718:76720 compcert.lib.Floats Float sub def
R76723:76731 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_minus def
R76748:76761 compcert.flocq.Appli.Fappli_IEEE <> Bminus_correct thm
R76927:76936 compcert.lib.Floats Float from_words def
R76951:76958 compcert.lib.Integers Int repr def
R76969:76969 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R76961:76965 Coq.ZArith.Zpower <> two_p def
R76970:76974 Coq.ZArith.Zpower <> two_p def
R76938:76948 compcert.lib.Floats Float ox4530_0000 def
R76834:76843 compcert.lib.Floats Float from_words def
R76858:76864 compcert.lib.Integers Int add def
R76883:76893 compcert.lib.Floats Float ox8000_0000 def
R76867:76878 compcert.lib.Integers Int64 hiword def
R76845:76855 compcert.lib.Floats Float ox4530_0000 def
R76796:76802 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R76787:76794 compcert.lib.Floats Float binop_pl def
R76779:76785 Coq.Init.Logic <> eq_refl constr
R76771:76777 Coq.Init.Logic <> eq_refl constr
R76748:76761 compcert.flocq.Appli.Fappli_IEEE <> Bminus_correct thm
R76927:76936 compcert.lib.Floats Float from_words def
R76951:76958 compcert.lib.Integers Int repr def
R76969:76969 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R76961:76965 Coq.ZArith.Zpower <> two_p def
R76970:76974 Coq.ZArith.Zpower <> two_p def
R76938:76948 compcert.lib.Floats Float ox4530_0000 def
R76834:76843 compcert.lib.Floats Float from_words def
R76858:76864 compcert.lib.Integers Int add def
R76883:76893 compcert.lib.Floats Float ox8000_0000 def
R76867:76878 compcert.lib.Integers Int64 hiword def
R76845:76855 compcert.lib.Floats Float ox4530_0000 def
R76796:76802 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R76787:76794 compcert.lib.Floats Float binop_pl def
R76779:76785 Coq.Init.Logic <> eq_refl constr
R76771:76777 Coq.Init.Logic <> eq_refl constr
R77000:77012 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R77000:77012 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R77041:77067 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R77041:77067 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R77171:77187 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R77265:77265 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R77103:77105 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R77089:77092 compcert.flocq.Core.Fcore_Raux <> bpow def
R77094:77099 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R77106:77108 compcert.flocq.Core.Fcore_Raux <> Z2R def
R77111:77111 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77158:77161 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77139:77141 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77112:77121 compcert.lib.Integers Int signed def
R77124:77135 compcert.lib.Integers Int64 hiword def
R77142:77157 compcert.lib.Integers Int half_modulus def
R77162:77166 Coq.ZArith.Zpower <> two_p def
R77202:77204 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R77188:77191 compcert.flocq.Core.Fcore_Raux <> bpow def
R77193:77198 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R77205:77207 compcert.flocq.Core.Fcore_Raux <> Z2R def
R77253:77255 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77210:77221 compcert.lib.Integers Int unsigned def
R77224:77231 compcert.lib.Integers Int repr def
R77242:77242 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77234:77238 Coq.ZArith.Zpower <> two_p def
R77243:77247 Coq.ZArith.Zpower <> two_p def
R77256:77260 Coq.ZArith.Zpower <> two_p def
R77280:77282 compcert.flocq.Core.Fcore_Raux <> Z2R def
R77357:77357 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R77347:77348 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R77336:77338 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77285:77296 compcert.lib.Integers Int unsigned def
R77299:77305 compcert.lib.Integers Int add def
R77324:77334 compcert.lib.Floats Float ox8000_0000 def
R77308:77319 compcert.lib.Integers Int64 hiword def
R77339:77343 Coq.ZArith.Zpower <> two_p def
R77349:77353 Coq.ZArith.Zpower <> two_p def
R77358:77362 Coq.ZArith.Zpower <> two_p def
R77280:77282 compcert.flocq.Core.Fcore_Raux <> Z2R def
R77357:77357 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R77347:77348 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R77336:77338 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77285:77296 compcert.lib.Integers Int unsigned def
R77299:77305 compcert.lib.Integers Int add def
R77324:77334 compcert.lib.Floats Float ox8000_0000 def
R77308:77319 compcert.lib.Integers Int64 hiword def
R77339:77343 Coq.ZArith.Zpower <> two_p def
R77349:77353 Coq.ZArith.Zpower <> two_p def
R77358:77362 Coq.ZArith.Zpower <> two_p def
R77171:77187 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R77265:77265 Coq.Reals.Rdefinitions <> :R_scope:x_'-'_x not
R77103:77105 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R77089:77092 compcert.flocq.Core.Fcore_Raux <> bpow def
R77094:77099 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R77106:77108 compcert.flocq.Core.Fcore_Raux <> Z2R def
R77111:77111 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77158:77161 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77139:77141 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77112:77121 compcert.lib.Integers Int signed def
R77124:77135 compcert.lib.Integers Int64 hiword def
R77142:77157 compcert.lib.Integers Int half_modulus def
R77162:77166 Coq.ZArith.Zpower <> two_p def
R77202:77204 Coq.Reals.Rdefinitions <> :R_scope:x_'+'_x not
R77188:77191 compcert.flocq.Core.Fcore_Raux <> bpow def
R77193:77198 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R77205:77207 compcert.flocq.Core.Fcore_Raux <> Z2R def
R77253:77255 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77210:77221 compcert.lib.Integers Int unsigned def
R77224:77231 compcert.lib.Integers Int repr def
R77242:77242 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77234:77238 Coq.ZArith.Zpower <> two_p def
R77243:77247 Coq.ZArith.Zpower <> two_p def
R77256:77260 Coq.ZArith.Zpower <> two_p def
R77390:77402 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R77390:77402 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R77461:77471 compcert.lib.Floats Float floatoflong def
R77474:77491 compcert.lib.Floats Float binary_normalize64 def
R77516:77541 compcert.lib.Floats Float binary_normalize64_correct def
R77562:77566 Coq.Init.Datatypes <> false constr
R77544:77555 compcert.lib.Integers Int64 signed def
R77516:77541 compcert.lib.Floats Float binary_normalize64_correct def
R77562:77566 Coq.Init.Datatypes <> false constr
R77544:77555 compcert.lib.Integers Int64 signed def
R77589:77591 compcert.flocq.Core.Fcore_defs <> F2R def
R77611:77643 compcert.flocq.Core.Fcore_defs <> Float constr
R77619:77630 compcert.lib.Integers Int64 signed def
R77600:77605 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R77665:77667 compcert.flocq.Core.Fcore_Raux <> Z2R def
R77670:77681 compcert.lib.Integers Int64 signed def
R77715:77717 compcert.flocq.Core.Fcore_defs <> F2R def
R77720:77723 compcert.flocq.Core.Fcore_defs <> Fexp proj
R77726:77729 compcert.flocq.Core.Fcore_defs <> Fnum proj
R77732:77735 compcert.flocq.Core.Fcore_Raux <> bpow def
R77665:77667 compcert.flocq.Core.Fcore_Raux <> Z2R def
R77670:77681 compcert.lib.Integers Int64 signed def
R77589:77591 compcert.flocq.Core.Fcore_defs <> F2R def
R77611:77643 compcert.flocq.Core.Fcore_defs <> Float constr
R77619:77630 compcert.lib.Integers Int64 signed def
R77600:77605 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R77886:77906 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R77764:77767 Coq.Reals.Rbasic_fun <> Rabs def
R77770:77774 compcert.flocq.Core.Fcore_generic_fmt <> round def
R77864:77866 compcert.flocq.Core.Fcore_Raux <> Z2R def
R77869:77880 compcert.lib.Integers Int64 signed def
R77843:77852 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R77854:77860 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R77784:77790 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R77801:77803 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R77794:77796 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R77776:77781 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R77907:77910 compcert.flocq.Core.Fcore_Raux <> bpow def
R77912:77917 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R77886:77906 Coq.Reals.Rdefinitions <> :R_scope:x_'<'_x not
R77764:77767 Coq.Reals.Rbasic_fun <> Rabs def
R77770:77774 compcert.flocq.Core.Fcore_generic_fmt <> round def
R77864:77866 compcert.flocq.Core.Fcore_Raux <> Z2R def
R77869:77880 compcert.lib.Integers Int64 signed def
R77843:77852 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R77854:77860 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R77784:77790 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R77801:77803 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R77794:77796 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R77776:77781 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R77907:77910 compcert.flocq.Core.Fcore_Raux <> bpow def
R77912:77917 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R77974:77985 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R77951:77962 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R77951:77962 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R77974:77985 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R78038:78040 compcert.flocq.Core.Fcore_Raux <> Z2R def
R78043:78047 Coq.ZArith.Zpower <> two_p def
R78019:78030 Coq.Reals.RIneq <> Rle_lt_trans thm
R78038:78040 compcert.flocq.Core.Fcore_Raux <> Z2R def
R78043:78047 Coq.ZArith.Zpower <> two_p def
R78019:78030 Coq.Reals.RIneq <> Rle_lt_trans thm
R78063:78068 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R78063:78068 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R78106:78118 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R78106:78118 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R78141:78148 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R78141:78148 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R78157:78168 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R78157:78168 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R78205:78224 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R78226:78232 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R78205:78224 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R78226:78232 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R78261:78267 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R78261:78267 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R78276:78281 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R78276:78281 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R78312:78316 Coq.ZArith.Zpower <> two_p def
R78312:78316 Coq.ZArith.Zpower <> two_p def
R78357:78376 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R78378:78384 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R78357:78376 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R78378:78384 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R78409:78427 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R78429:78434 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R78409:78427 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R78429:78434 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R78486:78498 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R78486:78498 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R78533:78535 compcert.lib.Floats Float add def
R78538:78545 compcert.flocq.Appli.Fappli_IEEE_bits <> b64_plus def
R78570:78582 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R78958:78967 compcert.lib.Floats Float from_words def
R78982:78993 compcert.lib.Integers Int64 loword def
R78969:78979 compcert.lib.Floats Float ox4330_0000 def
R78662:78667 compcert.flocq.Appli.Fappli_IEEE <> Bminus def
R78863:78872 compcert.lib.Floats Float from_words def
R78887:78894 compcert.lib.Integers Int repr def
R78905:78907 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R78897:78901 Coq.ZArith.Zpower <> two_p def
R78908:78912 Coq.ZArith.Zpower <> two_p def
R78874:78884 compcert.lib.Floats Float ox4530_0000 def
R78755:78764 compcert.lib.Floats Float from_words def
R78779:78785 compcert.lib.Integers Int add def
R78804:78814 compcert.lib.Floats Float ox8000_0000 def
R78788:78799 compcert.lib.Integers Int64 hiword def
R78766:78776 compcert.lib.Floats Float ox4530_0000 def
R78702:78708 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R78693:78700 compcert.lib.Floats Float binop_pl def
R78685:78691 Coq.Init.Logic <> eq_refl constr
R78677:78683 Coq.Init.Logic <> eq_refl constr
R78617:78623 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R78608:78615 compcert.lib.Floats Float binop_pl def
R78600:78606 Coq.Init.Logic <> eq_refl constr
R78592:78598 Coq.Init.Logic <> eq_refl constr
R78570:78582 compcert.flocq.Appli.Fappli_IEEE <> Bplus_correct thm
R78958:78967 compcert.lib.Floats Float from_words def
R78982:78993 compcert.lib.Integers Int64 loword def
R78969:78979 compcert.lib.Floats Float ox4330_0000 def
R78662:78667 compcert.flocq.Appli.Fappli_IEEE <> Bminus def
R78863:78872 compcert.lib.Floats Float from_words def
R78887:78894 compcert.lib.Integers Int repr def
R78905:78907 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R78897:78901 Coq.ZArith.Zpower <> two_p def
R78908:78912 Coq.ZArith.Zpower <> two_p def
R78874:78884 compcert.lib.Floats Float ox4530_0000 def
R78755:78764 compcert.lib.Floats Float from_words def
R78779:78785 compcert.lib.Integers Int add def
R78804:78814 compcert.lib.Floats Float ox8000_0000 def
R78788:78799 compcert.lib.Integers Int64 hiword def
R78766:78776 compcert.lib.Floats Float ox4530_0000 def
R78702:78708 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R78693:78700 compcert.lib.Floats Float binop_pl def
R78685:78691 Coq.Init.Logic <> eq_refl constr
R78677:78683 Coq.Init.Logic <> eq_refl constr
R78617:78623 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R78608:78615 compcert.lib.Floats Float binop_pl def
R78600:78606 Coq.Init.Logic <> eq_refl constr
R78592:78598 Coq.Init.Logic <> eq_refl constr
R79047:79049 compcert.flocq.Core.Fcore_Raux <> Z2R def
R79052:79056 Coq.ZArith.Zpower <> two_p def
R79025:79028 compcert.flocq.Core.Fcore_Raux <> bpow def
R79030:79035 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R79025:79028 compcert.flocq.Core.Fcore_Raux <> bpow def
R79030:79035 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R79047:79049 compcert.flocq.Core.Fcore_Raux <> Z2R def
R79052:79056 Coq.ZArith.Zpower <> two_p def
R79100:79107 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R79110:79136 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R79100:79107 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R79100:79107 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R79100:79107 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R79110:79136 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R79196:79198 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R79180:79195 compcert.lib.Integers Int half_modulus def
R79199:79203 Coq.ZArith.Zpower <> two_p def
R79164:79168 Coq.ZArith.Zpower <> two_p def
R79164:79168 Coq.ZArith.Zpower <> two_p def
R79196:79198 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R79180:79195 compcert.lib.Integers Int half_modulus def
R79199:79203 Coq.ZArith.Zpower <> two_p def
R79361:79387 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79428:79428 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79329:79332 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R79360:79360 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R79318:79320 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R79236:79236 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R79283:79309 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R79264:79266 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79237:79246 compcert.lib.Integers Int signed def
R79249:79260 compcert.lib.Integers Int64 hiword def
R79267:79282 compcert.lib.Integers Int half_modulus def
R79310:79314 Coq.ZArith.Zpower <> two_p def
R79321:79325 Coq.ZArith.Zpower <> two_p def
R79349:79351 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R79333:79348 compcert.lib.Integers Int half_modulus def
R79352:79356 Coq.ZArith.Zpower <> two_p def
R79396:79398 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79388:79392 Coq.ZArith.Zpower <> two_p def
R79399:79410 compcert.lib.Integers Int unsigned def
R79413:79424 compcert.lib.Integers Int64 loword def
R79485:79487 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79474:79476 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R79447:79456 compcert.lib.Integers Int signed def
R79459:79470 compcert.lib.Integers Int64 hiword def
R79477:79481 Coq.ZArith.Zpower <> two_p def
R79488:79499 compcert.lib.Integers Int unsigned def
R79502:79513 compcert.lib.Integers Int64 loword def
R79485:79487 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79474:79476 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R79447:79456 compcert.lib.Integers Int signed def
R79459:79470 compcert.lib.Integers Int64 hiword def
R79477:79481 Coq.ZArith.Zpower <> two_p def
R79488:79499 compcert.lib.Integers Int unsigned def
R79502:79513 compcert.lib.Integers Int64 loword def
R79361:79387 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79428:79428 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79329:79332 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R79360:79360 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R79318:79320 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R79236:79236 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R79283:79309 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R79264:79266 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79237:79246 compcert.lib.Integers Int signed def
R79249:79260 compcert.lib.Integers Int64 hiword def
R79267:79282 compcert.lib.Integers Int half_modulus def
R79310:79314 Coq.ZArith.Zpower <> two_p def
R79321:79325 Coq.ZArith.Zpower <> two_p def
R79349:79351 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R79333:79348 compcert.lib.Integers Int half_modulus def
R79352:79356 Coq.ZArith.Zpower <> two_p def
R79396:79398 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R79388:79392 Coq.ZArith.Zpower <> two_p def
R79399:79410 compcert.lib.Integers Int unsigned def
R79413:79424 compcert.lib.Integers Int64 loword def
R79568:79586 compcert.lib.Integers Int64 ofwords_add'' thm
R79589:79611 compcert.lib.Integers Int64 ofwords_recompose thm
R79614:79626 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R79568:79586 compcert.lib.Integers Int64 ofwords_add'' thm
R79589:79611 compcert.lib.Integers Int64 ofwords_recompose thm
R79614:79626 compcert.flocq.Core.Fcore_Raux <> Rlt_bool_true thm
R79664:79671 Coq.ZArith.BinInt Z eq_dec def
R79674:79685 compcert.lib.Integers Int64 signed def
R79664:79671 Coq.ZArith.BinInt Z eq_dec def
R79674:79685 compcert.lib.Integers Int64 signed def
R79713:79719 Coq.Init.Logic <> f_equal thm
R79721:79730 compcert.lib.Integers Int64 repr def
R79713:79719 Coq.Init.Logic <> f_equal thm
R79721:79730 compcert.lib.Integers Int64 repr def
R79747:79763 compcert.lib.Integers Int64 repr_signed thm
R79747:79763 compcert.lib.Integers Int64 repr_signed thm
R79875:79878 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R79879:79882 Coq.Reals.Rbasic_fun <> Rabs def
R79885:79889 compcert.flocq.Core.Fcore_generic_fmt <> round def
R79981:79983 compcert.flocq.Core.Fcore_Raux <> Z2R def
R79986:79997 compcert.lib.Integers Int64 signed def
R79960:79969 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R79971:79977 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R79899:79905 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R79916:79918 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R79909:79911 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R79891:79896 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R79875:79878 Coq.Reals.Rdefinitions <> :R_scope:x_'<='_x not
R79879:79882 Coq.Reals.Rbasic_fun <> Rabs def
R79885:79889 compcert.flocq.Core.Fcore_generic_fmt <> round def
R79981:79983 compcert.flocq.Core.Fcore_Raux <> Z2R def
R79986:79997 compcert.lib.Integers Int64 signed def
R79960:79969 compcert.flocq.Appli.Fappli_IEEE <> round_mode def
R79971:79977 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R79899:79905 compcert.flocq.Core.Fcore_FLT <> FLT_exp def
R79916:79918 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R79909:79911 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R79891:79896 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R80069:80080 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R80034:80045 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R80051:80057 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R80034:80045 compcert.flocq.Core.Fcore_rnd_ne <> round_NE_abs thm
R80069:80080 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R80051:80057 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R80123:80135 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R80123:80135 compcert.flocq.Core.Fcore_generic_fmt <> round_generic thm
R80179:80197 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R80179:80197 compcert.flocq.Core.Fcore_generic_fmt <> generic_format_bpow thm
R80227:80234 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R80238:80243 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R80227:80234 compcert.flocq.Core.Fcore_generic_fmt <> round_le thm
R80238:80243 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R80269:80280 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R80269:80280 compcert.flocq.Appli.Fappli_IEEE <> fexp_correct inst
R80303:80322 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R80324:80330 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R80303:80322 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R80324:80330 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R80382:80401 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R80403:80409 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R80382:80401 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R80403:80409 compcert.flocq.Appli.Fappli_IEEE <> mode_NE constr
R80471:80477 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R80471:80477 compcert.flocq.Appli.Fappli_IEEE <> B2R_inj thm
R80503:80518 compcert.flocq.Appli.Fappli_IEEE <> binary_normalize def
R80564:80566 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R80592:80598 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R80592:80598 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R80615:80620 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R80615:80620 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R80713:80715 Coq.Init.Logic <> :type_scope:x_'='_x not
R80696:80704 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R80716:80719 Coq.Init.Datatypes <> true constr
R80713:80715 Coq.Init.Logic <> :type_scope:x_'='_x not
R80696:80704 compcert.flocq.Appli.Fappli_IEEE <> is_finite def
R80716:80719 Coq.Init.Datatypes <> true constr
R80781:80783 Coq.Init.Logic <> :type_scope:x_'='_x not
R80770:80772 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R80781:80783 Coq.Init.Logic <> :type_scope:x_'='_x not
R80770:80772 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R80852:80854 Coq.Init.Logic <> :type_scope:x_'='_x not
R80829:80844 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R80855:80858 Coq.Init.Datatypes <> true constr
R80852:80854 Coq.Init.Logic <> :type_scope:x_'='_x not
R80829:80844 compcert.flocq.Appli.Fappli_IEEE <> is_finite_strict def
R80855:80858 Coq.Init.Datatypes <> true constr
R81066:81068 compcert.flocq.Appli.Fappli_IEEE <> B2R def
R81094:81100 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R81094:81100 Coq.Reals.Rbasic_fun <> Rabs_R0 thm
R81117:81122 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R81117:81122 compcert.flocq.Core.Fcore_Raux <> le_Z2R thm
R81221:81227 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R81221:81227 compcert.flocq.Core.Fcore_Raux <> Z2R_abs thm
R81237:81242 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R81248:81248 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R81237:81242 compcert.flocq.Core.Fcore_Raux <> Z2R_lt thm
R81248:81248 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R81305:81309 Coq.ZArith.Zpower <> two_p def
R81338:81342 Coq.ZArith.Zpower <> two_p def
R81363:81367 Coq.ZArith.Zpower <> two_p def
R81389:81389 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R81278:81288 compcert.lib.Integers Int modulus def
R81305:81309 Coq.ZArith.Zpower <> two_p def
R81338:81342 Coq.ZArith.Zpower <> two_p def
R81363:81367 Coq.ZArith.Zpower <> two_p def
R81389:81389 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R81444:81470 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R81474:81482 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R81444:81470 compcert.lib.Floats Float ox8000_0000_signed_unsigned thm
R81474:81482 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R81474:81482 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R81474:81482 compcert.flocq.Core.Fcore_Raux <> Z2R_minus thm
R81505:81507 compcert.flocq.Core.Fcore_Raux <> Z2R def
R81555:81557 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R81510:81521 compcert.lib.Integers Int unsigned def
R81524:81531 compcert.lib.Integers Int repr def
R81542:81544 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R81534:81538 Coq.ZArith.Zpower <> two_p def
R81545:81549 Coq.ZArith.Zpower <> two_p def
R81558:81562 Coq.ZArith.Zpower <> two_p def
R81505:81507 compcert.flocq.Core.Fcore_Raux <> Z2R def
R81555:81557 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R81510:81521 compcert.lib.Integers Int unsigned def
R81524:81531 compcert.lib.Integers Int repr def
R81542:81544 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R81534:81538 Coq.ZArith.Zpower <> two_p def
R81545:81549 Coq.ZArith.Zpower <> two_p def
R81558:81562 Coq.ZArith.Zpower <> two_p def
R81590:81592 compcert.flocq.Core.Fcore_Raux <> Z2R def
R81595:81599 Coq.ZArith.Zpower <> two_p def
R81590:81592 compcert.flocq.Core.Fcore_Raux <> Z2R def
R81595:81599 Coq.ZArith.Zpower <> two_p def
R81621:81623 compcert.flocq.Core.Fcore_Raux <> Z2R def
R81626:81630 Coq.ZArith.Zpower <> two_p def
R81621:81623 compcert.flocq.Core.Fcore_Raux <> Z2R def
R81626:81630 Coq.ZArith.Zpower <> two_p def
R81654:81673 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R81654:81673 compcert.flocq.Appli.Fappli_IEEE <> valid_rnd_round_mode inst
R81686:81693 compcert.flocq.Prop.Fprop_Sterbenz <> sterbenz thm
R81686:81693 compcert.flocq.Prop.Fprop_Sterbenz <> sterbenz thm
R81708:81723 compcert.flocq.Core.Fcore_FLT <> FLT_exp_monotone inst
R81708:81723 compcert.flocq.Core.Fcore_FLT <> FLT_exp_monotone inst
R81738:81755 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R81738:81755 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R81770:81787 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R81770:81787 compcert.flocq.Appli.Fappli_IEEE <> generic_format_B2R thm
R81812:81828 compcert.lib.Integers Int unsigned_repr thm
R81812:81828 compcert.lib.Integers Int unsigned_repr thm
R81878:81881 compcert.flocq.Core.Fcore_Raux <> bpow def
R81896:81903 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R81910:81917 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R81896:81903 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R81896:81903 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R81896:81903 compcert.flocq.Core.Fcore_Raux <> Z2R_plus thm
R81910:81917 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R81943:81951 Coq.ZArith.BinInt Z pow_pos def
R81953:81958 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R81979:81987 Coq.ZArith.BinInt Z pow_pos def
R81989:81994 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R82021:82021 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82041:82044 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82030:82032 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82022:82026 Coq.ZArith.Zpower <> two_p def
R82033:82037 Coq.ZArith.Zpower <> two_p def
R82045:82049 Coq.ZArith.Zpower <> two_p def
R82070:82074 Coq.ZArith.Zpower <> two_p def
R82101:82111 compcert.lib.Integers Int modulus def
R81943:81951 Coq.ZArith.BinInt Z pow_pos def
R81953:81958 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R81979:81987 Coq.ZArith.BinInt Z pow_pos def
R81989:81994 compcert.flocq.Appli.Fappli_IEEE <> radix2 def
R82021:82021 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82041:82044 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82030:82032 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82022:82026 Coq.ZArith.Zpower <> two_p def
R82033:82037 Coq.ZArith.Zpower <> two_p def
R82045:82049 Coq.ZArith.Zpower <> two_p def
R82070:82074 Coq.ZArith.Zpower <> two_p def
R82101:82111 compcert.lib.Integers Int modulus def
R82216:82218 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82155:82157 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82155:82157 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82216:82218 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82236:82239 Coq.Reals.Rdefinitions <> Rdiv def
R82302:82308 compcert.flocq.Core.Fcore_Raux <> Z2R_neq thm
R82250:82257 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R82260:82270 Coq.Reals.Raxioms <> Rmult_assoc prfax
R82273:82278 Coq.Reals.RIneq <> Rinv_r thm
R82281:82289 Coq.Reals.RIneq <> Rmult_1_r thm
R82250:82257 compcert.flocq.Core.Fcore_Raux <> Z2R_mult thm
R82260:82270 Coq.Reals.Raxioms <> Rmult_assoc prfax
R82273:82278 Coq.Reals.RIneq <> Rinv_r thm
R82302:82308 compcert.flocq.Core.Fcore_Raux <> Z2R_neq thm
R82281:82289 Coq.Reals.RIneq <> Rmult_1_r thm
R82343:82348 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R82343:82348 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R82343:82348 compcert.flocq.Core.Fcore_Raux <> Z2R_le thm
R82380:82383 compcert.lib.Floats Float zero def
R82385:82390 compcert.lib.Floats Float eq_dec def
R82392:82394 compcert.lib.Floats Float neg def
R82396:82398 compcert.lib.Floats Float abs def
R82400:82412 compcert.lib.Floats Float singleoffloat def
R82414:82423 compcert.lib.Floats Float intoffloat def
R82425:82435 compcert.lib.Floats Float intuoffloat def
R82437:82446 compcert.lib.Floats Float floatofint def
R82448:82458 compcert.lib.Floats Float floatofintu def
R82462:82464 compcert.lib.Floats Float add def
R82466:82468 compcert.lib.Floats Float sub def
R82470:82472 compcert.lib.Floats Float mul def
R82474:82476 compcert.lib.Floats Float div def
R82478:82480 compcert.lib.Floats Float cmp def
R82482:82495 compcert.lib.Floats Float bits_of_double def
R82497:82510 compcert.lib.Floats Float double_of_bits def
R82512:82525 compcert.lib.Floats Float bits_of_single def
R82527:82540 compcert.lib.Floats Float single_of_bits def
R82542:82551 compcert.lib.Floats Float from_words def
R82559:82563 compcert.lib.Floats <> <> mod
