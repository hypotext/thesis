DIGEST 6e274318b6cc4284dfaf707c5953a46f
Fcompcert.lib.Integers
R1125:1133 Coq.Logic.Eqdep_dec <> <> lib
R1151:1155 Coq.ZArith.Zquot <> <> lib
R1173:1175 Coq.ZArith.Zwf <> <> lib
R1193:1198 compcert.lib.Coqlib <> <> lib
ind 1234:1243 <> comparison
constr 1259:1261 <> Ceq
constr 1307:1309 <> Cne
constr 1360:1362 <> Clt
constr 1413:1415 <> Cle
constr 1475:1477 <> Cgt
constr 1531:1533 <> Cge
R1265:1274 compcert.lib.Integers <> comparison ind
R1313:1322 compcert.lib.Integers <> comparison ind
R1366:1375 compcert.lib.Integers <> comparison ind
R1419:1428 compcert.lib.Integers <> comparison ind
R1481:1490 compcert.lib.Integers <> comparison ind
R1537:1546 compcert.lib.Integers <> comparison ind
def 1604:1620 <> negate_comparison
R1626:1635 compcert.lib.Integers <> comparison ind
R1639:1648 compcert.lib.Integers <> comparison ind
R1661:1661 compcert.lib.Integers <> c var
R1672:1674 compcert.lib.Integers <> Ceq constr
R1679:1681 compcert.lib.Integers <> Cne constr
R1687:1689 compcert.lib.Integers <> Cne constr
R1694:1696 compcert.lib.Integers <> Ceq constr
R1702:1704 compcert.lib.Integers <> Clt constr
R1709:1711 compcert.lib.Integers <> Cge constr
R1717:1719 compcert.lib.Integers <> Cle constr
R1724:1726 compcert.lib.Integers <> Cgt constr
R1732:1734 compcert.lib.Integers <> Cgt constr
R1739:1741 compcert.lib.Integers <> Cle constr
R1747:1749 compcert.lib.Integers <> Cge constr
R1754:1756 compcert.lib.Integers <> Clt constr
def 1777:1791 <> swap_comparison
R1797:1806 compcert.lib.Integers <> comparison ind
R1810:1819 compcert.lib.Integers <> comparison ind
R1832:1832 compcert.lib.Integers <> c var
R1843:1845 compcert.lib.Integers <> Ceq constr
R1850:1852 compcert.lib.Integers <> Ceq constr
R1858:1860 compcert.lib.Integers <> Cne constr
R1865:1867 compcert.lib.Integers <> Cne constr
R1873:1875 compcert.lib.Integers <> Clt constr
R1880:1882 compcert.lib.Integers <> Cgt constr
R1888:1890 compcert.lib.Integers <> Cle constr
R1895:1897 compcert.lib.Integers <> Cge constr
R1903:1905 compcert.lib.Integers <> Cgt constr
R1910:1912 compcert.lib.Integers <> Clt constr
R1918:1920 compcert.lib.Integers <> Cge constr
R1925:1927 compcert.lib.Integers <> Cle constr
modtype 2003:2010 <> WORDSIZE
var 2024:2031 WORDSIZE wordsize
R2034:2036 Coq.Init.Datatypes <> nat ind
ax 2047:2063 WORDSIZE wordsize_not_zero
R2074:2077 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2066:2073 compcert.lib.Integers WORDSIZE wordsize defax
R2089:2096 compcert.lib.Integers <> <> modtype
R2252:2259 compcert.lib.Integers <> <> mod
mod 2243:2246 <> Make
def 2275:2282 Make wordsize
R2285:2287 Coq.Init.Datatypes <> nat ind
R2292:2302 compcert.lib.Integers WS wordsize defax
def 2316:2324 Make zwordsize
R2327:2327 Coq.Numbers.BinNums <> Z ind
R2332:2339 Coq.ZArith.BinInt <> Z_of_nat syndef
R2341:2348 compcert.lib.Integers Make wordsize def
def 2362:2368 Make modulus
R2372:2372 Coq.Numbers.BinNums <> Z ind
R2377:2389 Coq.ZArith.Zpower <> two_power_nat def
R2391:2398 compcert.lib.Integers Make wordsize def
def 2412:2423 Make half_modulus
R2427:2427 Coq.Numbers.BinNums <> Z ind
R2439:2441 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R2432:2438 compcert.lib.Integers Make modulus def
def 2456:2467 Make max_unsigned
R2471:2471 Coq.Numbers.BinNums <> Z ind
R2483:2485 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R2476:2482 compcert.lib.Integers Make modulus def
def 2500:2509 Make max_signed
R2513:2513 Coq.Numbers.BinNums <> Z ind
R2530:2532 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R2518:2529 compcert.lib.Integers Make half_modulus def
def 2547:2556 Make min_signed
R2560:2560 Coq.Numbers.BinNums <> Z ind
R2565:2566 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R2567:2578 compcert.lib.Integers Make half_modulus def
prf 2589:2600 Make wordsize_pos
R2612:2614 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R2603:2611 compcert.lib.Integers Make zwordsize def
R2634:2642 compcert.lib.Integers Make zwordsize def
R2645:2652 compcert.lib.Integers Make wordsize def
R2666:2685 compcert.lib.Integers WS wordsize_not_zero prfax
R2666:2685 compcert.lib.Integers WS wordsize_not_zero prfax
prf 2708:2720 Make modulus_power
R2730:2732 Coq.Init.Logic <> :type_scope:x_'='_x not
R2723:2729 compcert.lib.Integers Make modulus def
R2733:2737 Coq.ZArith.Zpower <> two_p def
R2739:2747 compcert.lib.Integers Make zwordsize def
R2766:2772 compcert.lib.Integers Make modulus def
R2781:2799 compcert.lib.Coqlib <> two_power_nat_two_p thm
R2781:2799 compcert.lib.Coqlib <> two_power_nat_two_p thm
prf 2815:2825 Make modulus_pos
R2835:2837 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R2828:2834 compcert.lib.Integers Make modulus def
R2858:2870 compcert.lib.Integers Make modulus_power thm
R2858:2870 compcert.lib.Integers Make modulus_power thm
R2879:2891 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R2879:2891 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R2905:2916 compcert.lib.Integers Make wordsize_pos thm
R2905:2916 compcert.lib.Integers Make wordsize_pos thm
constr 3178:3182 Make mkint
rec 3165:3167 Make int
proj 3186:3191 Make intval
proj 3197:3204 Make intrange
R3194:3194 Coq.Numbers.BinNums <> Z ind
R3209:3211 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R3218:3220 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R3212:3217 compcert.lib.Integers <> intval meth
R3212:3217 compcert.lib.Integers <> intval meth
R3221:3227 compcert.lib.Integers Make modulus def
def 3289:3299 Make P_mod_two_p
R3305:3312 Coq.Numbers.BinNums <> positive ind
R3319:3321 Coq.Init.Datatypes <> nat ind
R3337:3337 Coq.Numbers.BinNums <> Z ind
R3350:3350 compcert.lib.Integers <> n var
R3361:3361 Coq.Init.Datatypes <> O constr
R3372:3372 Coq.Init.Datatypes <> S constr
R3391:3391 compcert.lib.Integers <> p var
R3406:3407 Coq.Numbers.BinNums <> xH constr
R3422:3423 Coq.Numbers.BinNums <> xO constr
R3430:3437 Coq.ZArith.BinInt Z double def
R3440:3450 compcert.lib.Integers <> P_mod_two_p def
R3465:3466 Coq.Numbers.BinNums <> xI constr
R3473:3485 Coq.ZArith.BinInt Z succ_double def
R3488:3498 compcert.lib.Integers <> P_mod_two_p def
def 3534:3546 Make Z_mod_modulus
R3552:3552 Coq.Numbers.BinNums <> Z ind
R3557:3557 Coq.Numbers.BinNums <> Z ind
R3570:3570 compcert.lib.Integers <> x var
R3581:3582 Coq.Numbers.BinNums <> Z0 constr
R3593:3596 Coq.Numbers.BinNums <> Zpos constr
R3603:3613 compcert.lib.Integers Make P_mod_two_p def
R3617:3624 compcert.lib.Integers Make wordsize def
R3630:3633 Coq.Numbers.BinNums <> Zneg constr
R3649:3659 compcert.lib.Integers Make P_mod_two_p def
R3663:3670 compcert.lib.Integers Make wordsize def
R3678:3680 compcert.lib.Coqlib <> zeq def
R3682:3682 compcert.lib.Integers <> r var
R3705:3707 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R3698:3704 compcert.lib.Integers Make modulus def
R3708:3708 compcert.lib.Integers <> r var
prf 3724:3740 Make P_mod_two_p_range
R3758:3761 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3777:3779 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3762:3772 compcert.lib.Integers Make P_mod_two_p def
R3776:3776 compcert.lib.Integers <> n var
R3774:3774 compcert.lib.Integers <> p var
R3762:3772 compcert.lib.Integers Make P_mod_two_p def
R3776:3776 compcert.lib.Integers <> n var
R3774:3774 compcert.lib.Integers <> p var
R3780:3792 Coq.ZArith.Zpower <> two_power_nat def
R3794:3794 compcert.lib.Integers <> n var
R3846:3860 compcert.lib.Coqlib <> two_power_nat_O thm
R3846:3860 compcert.lib.Coqlib <> two_power_nat_O thm
R3882:3896 Coq.ZArith.Zpower <> two_power_nat_S thm
R3882:3896 Coq.ZArith.Zpower <> two_power_nat_S thm
R3945:3962 Coq.ZArith.BinInt Z succ_double_spec thm
R3945:3962 Coq.ZArith.BinInt Z succ_double_spec thm
R4006:4018 Coq.ZArith.BinInt Z double_spec thm
R4006:4018 Coq.ZArith.BinInt Z double_spec thm
R4046:4062 compcert.lib.Coqlib <> two_power_nat_pos thm
R4046:4062 compcert.lib.Coqlib <> two_power_nat_pos thm
prf 4087:4100 Make P_mod_two_p_eq
R4132:4134 Coq.Init.Logic <> :type_scope:x_'='_x not
R4117:4127 compcert.lib.Integers Make P_mod_two_p def
R4131:4131 compcert.lib.Integers <> n var
R4129:4129 compcert.lib.Integers <> p var
R4135:4135 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R4142:4148 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R4164:4164 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R4136:4139 Coq.Numbers.BinNums <> Zpos constr
R4141:4141 compcert.lib.Integers <> p var
R4149:4161 Coq.ZArith.Zpower <> two_power_nat def
R4163:4163 compcert.lib.Integers <> n var
R4196:4202 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4204:4205 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4212:4214 Coq.Init.Logic <> :type_scope:x_'='_x not
R4206:4209 Coq.Numbers.BinNums <> Zpos constr
R4211:4211 compcert.lib.Integers <> p var
R4234:4236 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4216:4218 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4215:4215 compcert.lib.Integers <> y var
R4219:4231 Coq.ZArith.Zpower <> two_power_nat def
R4233:4233 compcert.lib.Integers <> n var
R4237:4247 compcert.lib.Integers Make P_mod_two_p def
R4251:4251 compcert.lib.Integers <> n var
R4249:4249 compcert.lib.Integers <> p var
R4196:4202 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4204:4205 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4212:4214 Coq.Init.Logic <> :type_scope:x_'='_x not
R4206:4209 Coq.Numbers.BinNums <> Zpos constr
R4211:4211 compcert.lib.Integers <> p var
R4234:4236 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4216:4218 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4215:4215 compcert.lib.Integers <> y var
R4219:4231 Coq.ZArith.Zpower <> two_power_nat def
R4233:4233 compcert.lib.Integers <> n var
R4237:4247 compcert.lib.Integers Make P_mod_two_p def
R4251:4251 compcert.lib.Integers <> n var
R4249:4249 compcert.lib.Integers <> p var
R4305:4319 compcert.lib.Coqlib <> two_power_nat_O thm
R4305:4319 compcert.lib.Coqlib <> two_power_nat_O thm
R4330:4333 Coq.Numbers.BinNums <> Zpos constr
R4330:4333 Coq.Numbers.BinNums <> Zpos constr
R4359:4373 Coq.ZArith.Zpower <> two_power_nat_S thm
R4359:4373 Coq.ZArith.Zpower <> two_power_nat_S thm
R4477:4479 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4468:4470 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4471:4474 Coq.Numbers.BinNums <> Zpos constr
R4451:4454 Coq.Numbers.BinNums <> Zpos constr
R4457:4458 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R4451:4454 Coq.Numbers.BinNums <> Zpos constr
R4457:4458 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R4477:4479 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R4468:4470 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4471:4474 Coq.Numbers.BinNums <> Zpos constr
R4513:4530 Coq.ZArith.BinInt Z succ_double_spec thm
R4513:4530 Coq.ZArith.BinInt Z succ_double_spec thm
R4620:4622 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4623:4626 Coq.Numbers.BinNums <> Zpos constr
R4603:4606 Coq.Numbers.BinNums <> Zpos constr
R4609:4610 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R4603:4606 Coq.Numbers.BinNums <> Zpos constr
R4609:4610 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R4620:4622 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4623:4626 Coq.Numbers.BinNums <> Zpos constr
R4662:4674 Coq.ZArith.BinInt Z double_spec thm
R4677:4687 compcert.lib.Integers Make P_mod_two_p def
R4662:4674 Coq.ZArith.BinInt Z double_spec thm
R4677:4687 compcert.lib.Integers Make P_mod_two_p def
R4791:4801 compcert.lib.Coqlib <> Zmod_unique thm
R4791:4801 compcert.lib.Coqlib <> Zmod_unique thm
R4823:4839 compcert.lib.Integers Make P_mod_two_p_range thm
R4823:4839 compcert.lib.Integers Make P_mod_two_p_range thm
prf 4854:4872 Make Z_mod_modulus_range
R4888:4891 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R4907:4909 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R4892:4904 compcert.lib.Integers Make Z_mod_modulus def
R4906:4906 compcert.lib.Integers <> x var
R4892:4904 compcert.lib.Integers Make Z_mod_modulus def
R4906:4906 compcert.lib.Integers <> x var
R4910:4916 compcert.lib.Integers Make modulus def
R4943:4955 compcert.lib.Integers Make Z_mod_modulus def
R4988:4998 compcert.lib.Integers Make modulus_pos thm
R4988:4998 compcert.lib.Integers Make modulus_pos thm
R5018:5034 compcert.lib.Integers Make P_mod_two_p_range thm
R5018:5034 compcert.lib.Integers Make P_mod_two_p_range thm
R5051:5061 compcert.lib.Integers Make P_mod_two_p def
R5065:5072 compcert.lib.Integers Make wordsize def
R5051:5061 compcert.lib.Integers Make P_mod_two_p def
R5065:5072 compcert.lib.Integers Make wordsize def
R5089:5092 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5094:5096 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5097:5103 compcert.lib.Integers Make modulus def
R5115:5131 compcert.lib.Integers Make P_mod_two_p_range thm
R5089:5092 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5094:5096 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R5097:5103 compcert.lib.Integers Make modulus def
R5115:5131 compcert.lib.Integers Make P_mod_two_p_range thm
R5148:5150 compcert.lib.Coqlib <> zeq def
R5148:5150 compcert.lib.Coqlib <> zeq def
R5176:5186 compcert.lib.Integers Make modulus_pos thm
R5176:5186 compcert.lib.Integers Make modulus_pos thm
prf 5221:5240 Make Z_mod_modulus_range'
R5257:5259 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R5275:5277 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R5260:5272 compcert.lib.Integers Make Z_mod_modulus def
R5274:5274 compcert.lib.Integers <> x var
R5260:5272 compcert.lib.Integers Make Z_mod_modulus def
R5274:5274 compcert.lib.Integers <> x var
R5278:5284 compcert.lib.Integers Make modulus def
R5316:5334 compcert.lib.Integers Make Z_mod_modulus_range thm
R5316:5334 compcert.lib.Integers Make Z_mod_modulus_range thm
prf 5359:5374 Make Z_mod_modulus_eq
R5404:5406 Coq.Init.Logic <> :type_scope:x_'='_x not
R5389:5401 compcert.lib.Integers Make Z_mod_modulus def
R5403:5403 compcert.lib.Integers <> x var
R5408:5412 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R5407:5407 compcert.lib.Integers <> x var
R5413:5419 compcert.lib.Integers Make modulus def
R5446:5458 compcert.lib.Integers Make Z_mod_modulus def
R5485:5492 Coq.ZArith.Zdiv <> Zmod_0_l thm
R5485:5492 Coq.ZArith.Zdiv <> Zmod_0_l thm
R5511:5524 compcert.lib.Integers Make P_mod_two_p_eq thm
R5511:5524 compcert.lib.Integers Make P_mod_two_p_eq thm
R5544:5560 compcert.lib.Integers Make P_mod_two_p_range thm
R5562:5569 compcert.lib.Integers Make wordsize def
R5575:5588 compcert.lib.Integers Make P_mod_two_p_eq thm
R5590:5597 compcert.lib.Integers Make wordsize def
R5544:5560 compcert.lib.Integers Make P_mod_two_p_range thm
R5562:5569 compcert.lib.Integers Make wordsize def
R5575:5588 compcert.lib.Integers Make P_mod_two_p_eq thm
R5590:5597 compcert.lib.Integers Make wordsize def
R5612:5618 compcert.lib.Integers Make modulus def
R5612:5618 compcert.lib.Integers Make modulus def
R5646:5657 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R5668:5674 compcert.lib.Integers Make modulus def
R5660:5663 Coq.Numbers.BinNums <> Zpos constr
R5646:5657 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R5668:5674 compcert.lib.Integers Make modulus def
R5660:5663 Coq.Numbers.BinNums <> Zpos constr
R5684:5694 compcert.lib.Integers Make modulus_pos thm
R5684:5694 compcert.lib.Integers Make modulus_pos thm
R5727:5729 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R5721:5724 Coq.Numbers.BinNums <> Zpos constr
R5730:5736 compcert.lib.Integers Make modulus def
R5727:5729 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R5721:5724 Coq.Numbers.BinNums <> Zpos constr
R5730:5736 compcert.lib.Integers Make modulus def
R5759:5769 compcert.lib.Integers Make P_mod_two_p def
R5773:5780 compcert.lib.Integers Make wordsize def
R5759:5769 compcert.lib.Integers Make P_mod_two_p def
R5773:5780 compcert.lib.Integers Make wordsize def
R5841:5843 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5851:5851 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5844:5848 Coq.ZArith.BinInt Z pos syndef
R5826:5830 Coq.ZArith.BinInt Z neg syndef
R5826:5830 Coq.ZArith.BinInt Z neg syndef
R5841:5843 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5851:5851 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5844:5848 Coq.ZArith.BinInt Z pos syndef
R5865:5867 compcert.lib.Coqlib <> zeq def
R5865:5867 compcert.lib.Coqlib <> zeq def
R5915:5915 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5897:5907 compcert.lib.Coqlib <> Zmod_unique thm
R5915:5915 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R5897:5907 compcert.lib.Coqlib <> Zmod_unique thm
R5967:5977 compcert.lib.Integers Make modulus_pos thm
R5967:5977 compcert.lib.Integers Make modulus_pos thm
R6029:6031 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R6027:6027 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R6009:6019 compcert.lib.Coqlib <> Zmod_unique thm
R6029:6031 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R6027:6027 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R6009:6019 compcert.lib.Coqlib <> Zmod_unique thm
def 6249:6256 Make unsigned
R6262:6264 compcert.lib.Integers Make int rec
R6269:6269 Coq.Numbers.BinNums <> Z ind
R6274:6279 compcert.lib.Integers Make intval proj
R6281:6281 compcert.lib.Integers <> n var
def 6296:6301 Make signed
R6307:6309 compcert.lib.Integers Make int rec
R6314:6314 Coq.Numbers.BinNums <> Z ind
R6330:6337 compcert.lib.Integers Make unsigned def
R6339:6339 compcert.lib.Integers <> n var
R6349:6351 compcert.lib.Coqlib <> zlt def
R6355:6366 compcert.lib.Integers Make half_modulus def
R6353:6353 compcert.lib.Integers <> x var
R6381:6383 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R6380:6380 compcert.lib.Integers <> x var
R6384:6390 compcert.lib.Integers Make modulus def
R6373:6373 compcert.lib.Integers <> x var
def 6544:6547 Make repr
R6553:6553 Coq.Numbers.BinNums <> Z ind
R6558:6560 compcert.lib.Integers Make int rec
R6568:6572 compcert.lib.Integers Make mkint constr
R6593:6612 compcert.lib.Integers Make Z_mod_modulus_range' thm
R6614:6614 compcert.lib.Integers <> x var
R6575:6587 compcert.lib.Integers Make Z_mod_modulus def
R6589:6589 compcert.lib.Integers <> x var
def 6630:6633 Make zero
R6638:6641 compcert.lib.Integers Make repr def
def 6657:6659 Make one
R6665:6668 compcert.lib.Integers Make repr def
def 6684:6687 Make mone
R6692:6695 compcert.lib.Integers Make repr def
def 6714:6722 Make iwordsize
R6727:6730 compcert.lib.Integers Make repr def
R6732:6740 compcert.lib.Integers Make zwordsize def
prf 6750:6757 Make mkint_eq
R6799:6801 Coq.Init.Logic <> :type_scope:x_'='_x not
R6789:6793 compcert.lib.Integers Make mkint constr
R6797:6798 compcert.lib.Integers <> Px var
R6795:6795 compcert.lib.Integers <> x var
R6802:6806 compcert.lib.Integers Make mkint constr
R6810:6811 compcert.lib.Integers <> Py var
R6808:6808 compcert.lib.Integers <> y var
R6781:6783 Coq.Init.Logic <> :type_scope:x_'='_x not
R6780:6780 compcert.lib.Integers <> x var
R6784:6784 compcert.lib.Integers <> y var
R6863:6863 Coq.Numbers.BinNums <> Z ind
R6875:6877 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6874:6874 compcert.lib.Integers <> n var
R6878:6878 compcert.lib.Integers <> m var
R6884:6886 Coq.Init.Logic <> :type_scope:x_'='_x not
R6882:6883 compcert.lib.Integers <> P1 var
R6887:6888 compcert.lib.Integers <> P2 var
R6863:6863 Coq.Numbers.BinNums <> Z ind
R6875:6877 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R6874:6874 compcert.lib.Integers <> n var
R6878:6878 compcert.lib.Integers <> m var
R6884:6886 Coq.Init.Logic <> :type_scope:x_'='_x not
R6882:6883 compcert.lib.Integers <> P1 var
R6887:6888 compcert.lib.Integers <> P2 var
R6907:6909 Coq.ZArith.BinInt Z lt def
R6931:6947 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
R6931:6947 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
prf 7179:7184 Make eq_dec
R7200:7202 compcert.lib.Integers Make int rec
R7206:7206 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7212:7216 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7223:7223 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7208:7210 Coq.Init.Logic <> :type_scope:x_'='_x not
R7207:7207 compcert.lib.Integers <> x var
R7211:7211 compcert.lib.Integers <> y var
R7218:7221 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7217:7217 compcert.lib.Integers <> x var
R7222:7222 compcert.lib.Integers <> y var
R7277:7279 compcert.lib.Coqlib <> zeq def
R7277:7279 compcert.lib.Coqlib <> zeq def
R7313:7320 compcert.lib.Integers Make mkint_eq thm
R7313:7320 compcert.lib.Integers Make mkint_eq thm
def 7459:7460 Make eq
R7468:7470 compcert.lib.Integers Make int rec
R7475:7478 Coq.Init.Datatypes <> bool ind
R7489:7491 compcert.lib.Coqlib <> zeq def
R7507:7514 compcert.lib.Integers Make unsigned def
R7516:7516 compcert.lib.Integers <> y var
R7494:7501 compcert.lib.Integers Make unsigned def
R7503:7503 compcert.lib.Integers <> x var
R7534:7538 Coq.Init.Datatypes <> false constr
R7524:7527 Coq.Init.Datatypes <> true constr
def 7552:7553 Make lt
R7561:7563 compcert.lib.Integers Make int rec
R7568:7571 Coq.Init.Datatypes <> bool ind
R7581:7583 compcert.lib.Coqlib <> zlt def
R7597:7602 compcert.lib.Integers Make signed def
R7604:7604 compcert.lib.Integers <> y var
R7586:7591 compcert.lib.Integers Make signed def
R7593:7593 compcert.lib.Integers <> x var
R7622:7626 Coq.Init.Datatypes <> false constr
R7612:7615 Coq.Init.Datatypes <> true constr
def 7640:7642 Make ltu
R7650:7652 compcert.lib.Integers Make int rec
R7657:7660 Coq.Init.Datatypes <> bool ind
R7670:7672 compcert.lib.Coqlib <> zlt def
R7688:7695 compcert.lib.Integers Make unsigned def
R7697:7697 compcert.lib.Integers <> y var
R7675:7682 compcert.lib.Integers Make unsigned def
R7684:7684 compcert.lib.Integers <> x var
R7715:7719 Coq.Init.Datatypes <> false constr
R7705:7708 Coq.Init.Datatypes <> true constr
def 7734:7736 Make neg
R7742:7744 compcert.lib.Integers Make int rec
R7749:7751 compcert.lib.Integers Make int rec
R7756:7759 compcert.lib.Integers Make repr def
R7762:7763 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R7764:7771 compcert.lib.Integers Make unsigned def
R7773:7773 compcert.lib.Integers <> x var
def 7789:7791 Make add
R7799:7801 compcert.lib.Integers Make int rec
R7806:7808 compcert.lib.Integers Make int rec
R7815:7818 compcert.lib.Integers Make repr def
R7831:7833 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R7821:7828 compcert.lib.Integers Make unsigned def
R7830:7830 compcert.lib.Integers <> x var
R7834:7841 compcert.lib.Integers Make unsigned def
R7843:7843 compcert.lib.Integers <> y var
def 7858:7860 Make sub
R7868:7870 compcert.lib.Integers Make int rec
R7875:7877 compcert.lib.Integers Make int rec
R7884:7887 compcert.lib.Integers Make repr def
R7900:7902 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R7890:7897 compcert.lib.Integers Make unsigned def
R7899:7899 compcert.lib.Integers <> x var
R7903:7910 compcert.lib.Integers Make unsigned def
R7912:7912 compcert.lib.Integers <> y var
def 7927:7929 Make mul
R7937:7939 compcert.lib.Integers Make int rec
R7944:7946 compcert.lib.Integers Make int rec
R7953:7956 compcert.lib.Integers Make repr def
R7969:7971 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R7959:7966 compcert.lib.Integers Make unsigned def
R7968:7968 compcert.lib.Integers <> x var
R7972:7979 compcert.lib.Integers Make unsigned def
R7981:7981 compcert.lib.Integers <> y var
def 7997:8000 Make divs
R8008:8010 compcert.lib.Integers Make int rec
R8015:8017 compcert.lib.Integers Make int rec
R8024:8027 compcert.lib.Integers Make repr def
R8030:8035 Coq.ZArith.BinInt Z quot def
R8049:8054 compcert.lib.Integers Make signed def
R8056:8056 compcert.lib.Integers <> y var
R8038:8043 compcert.lib.Integers Make signed def
R8045:8045 compcert.lib.Integers <> x var
def 8072:8075 Make mods
R8083:8085 compcert.lib.Integers Make int rec
R8090:8092 compcert.lib.Integers Make int rec
R8099:8102 compcert.lib.Integers Make repr def
R8105:8109 Coq.ZArith.BinInt Z rem def
R8123:8128 compcert.lib.Integers Make signed def
R8130:8130 compcert.lib.Integers <> y var
R8112:8117 compcert.lib.Integers Make signed def
R8119:8119 compcert.lib.Integers <> x var
def 8147:8150 Make divu
R8158:8160 compcert.lib.Integers Make int rec
R8165:8167 compcert.lib.Integers Make int rec
R8174:8177 compcert.lib.Integers Make repr def
R8190:8192 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R8180:8187 compcert.lib.Integers Make unsigned def
R8189:8189 compcert.lib.Integers <> x var
R8193:8200 compcert.lib.Integers Make unsigned def
R8202:8202 compcert.lib.Integers <> y var
def 8217:8220 Make modu
R8228:8230 compcert.lib.Integers Make int rec
R8235:8237 compcert.lib.Integers Make int rec
R8244:8247 compcert.lib.Integers Make repr def
R8250:8250 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8261:8267 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8278:8278 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8251:8258 compcert.lib.Integers Make unsigned def
R8260:8260 compcert.lib.Integers <> x var
R8268:8275 compcert.lib.Integers Make unsigned def
R8277:8277 compcert.lib.Integers <> y var
def 8330:8332 Make and
R8340:8342 compcert.lib.Integers Make int rec
R8346:8348 compcert.lib.Integers Make int rec
R8353:8356 compcert.lib.Integers Make repr def
R8359:8364 Coq.ZArith.BinInt Z land def
R8380:8387 compcert.lib.Integers Make unsigned def
R8389:8389 compcert.lib.Integers <> y var
R8367:8374 compcert.lib.Integers Make unsigned def
R8376:8376 compcert.lib.Integers <> x var
def 8405:8406 Make or
R8414:8416 compcert.lib.Integers Make int rec
R8420:8422 compcert.lib.Integers Make int rec
R8427:8430 compcert.lib.Integers Make repr def
R8433:8437 Coq.ZArith.BinInt Z lor def
R8453:8460 compcert.lib.Integers Make unsigned def
R8462:8462 compcert.lib.Integers <> y var
R8440:8447 compcert.lib.Integers Make unsigned def
R8449:8449 compcert.lib.Integers <> x var
def 8478:8480 Make xor
R8488:8490 compcert.lib.Integers Make int rec
R8495:8497 compcert.lib.Integers Make int rec
R8502:8505 compcert.lib.Integers Make repr def
R8508:8513 Coq.ZArith.BinInt Z lxor def
R8529:8536 compcert.lib.Integers Make unsigned def
R8538:8538 compcert.lib.Integers <> y var
R8516:8523 compcert.lib.Integers Make unsigned def
R8525:8525 compcert.lib.Integers <> x var
def 8555:8557 Make not
R8563:8565 compcert.lib.Integers Make int rec
R8570:8572 compcert.lib.Integers Make int rec
R8577:8579 compcert.lib.Integers Make xor def
R8583:8586 compcert.lib.Integers Make mone def
R8581:8581 compcert.lib.Integers <> x var
def 8629:8631 Make shl
R8639:8641 compcert.lib.Integers Make int rec
R8645:8647 compcert.lib.Integers Make int rec
R8652:8655 compcert.lib.Integers Make repr def
R8658:8665 Coq.ZArith.BinInt Z shiftl def
R8681:8688 compcert.lib.Integers Make unsigned def
R8690:8690 compcert.lib.Integers <> y var
R8668:8675 compcert.lib.Integers Make unsigned def
R8677:8677 compcert.lib.Integers <> x var
def 8706:8709 Make shru
R8717:8719 compcert.lib.Integers Make int rec
R8723:8725 compcert.lib.Integers Make int rec
R8730:8733 compcert.lib.Integers Make repr def
R8736:8743 Coq.ZArith.BinInt Z shiftr def
R8759:8766 compcert.lib.Integers Make unsigned def
R8768:8768 compcert.lib.Integers <> y var
R8746:8753 compcert.lib.Integers Make unsigned def
R8755:8755 compcert.lib.Integers <> x var
def 8784:8786 Make shr
R8794:8796 compcert.lib.Integers Make int rec
R8800:8802 compcert.lib.Integers Make int rec
R8807:8810 compcert.lib.Integers Make repr def
R8813:8820 Coq.ZArith.BinInt Z shiftr def
R8834:8841 compcert.lib.Integers Make unsigned def
R8843:8843 compcert.lib.Integers <> y var
R8823:8828 compcert.lib.Integers Make signed def
R8830:8830 compcert.lib.Integers <> x var
def 8860:8862 Make rol
R8870:8872 compcert.lib.Integers Make int rec
R8877:8879 compcert.lib.Integers Make int rec
R8895:8895 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8906:8911 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R8896:8903 compcert.lib.Integers Make unsigned def
R8905:8905 compcert.lib.Integers <> y var
R8912:8920 compcert.lib.Integers Make zwordsize def
R8927:8930 compcert.lib.Integers Make repr def
R8933:8937 Coq.ZArith.BinInt Z lor def
R8966:8973 Coq.ZArith.BinInt Z shiftr def
R8998:9000 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R8989:8997 compcert.lib.Integers Make zwordsize def
R9001:9001 compcert.lib.Integers <> n var
R8976:8983 compcert.lib.Integers Make unsigned def
R8985:8985 compcert.lib.Integers <> x var
R8940:8947 Coq.ZArith.BinInt Z shiftl def
R8962:8962 compcert.lib.Integers <> n var
R8950:8957 compcert.lib.Integers Make unsigned def
R8959:8959 compcert.lib.Integers <> x var
def 9018:9020 Make ror
R9028:9030 compcert.lib.Integers Make int rec
R9035:9037 compcert.lib.Integers Make int rec
R9053:9053 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R9064:9069 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R9054:9061 compcert.lib.Integers Make unsigned def
R9063:9063 compcert.lib.Integers <> y var
R9070:9078 compcert.lib.Integers Make zwordsize def
R9085:9088 compcert.lib.Integers Make repr def
R9091:9095 Coq.ZArith.BinInt Z lor def
R9124:9131 Coq.ZArith.BinInt Z shiftl def
R9156:9158 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R9147:9155 compcert.lib.Integers Make zwordsize def
R9159:9159 compcert.lib.Integers <> n var
R9134:9141 compcert.lib.Integers Make unsigned def
R9143:9143 compcert.lib.Integers <> x var
R9098:9105 Coq.ZArith.BinInt Z shiftr def
R9120:9120 compcert.lib.Integers <> n var
R9108:9115 compcert.lib.Integers Make unsigned def
R9117:9117 compcert.lib.Integers <> x var
def 9177:9180 Make rolm
R9190:9192 compcert.lib.Integers Make int rec
R9196:9198 compcert.lib.Integers Make int rec
R9203:9205 compcert.lib.Integers Make and def
R9217:9217 compcert.lib.Integers <> m var
R9208:9210 compcert.lib.Integers Make rol def
R9214:9214 compcert.lib.Integers <> a var
R9212:9212 compcert.lib.Integers <> x var
def 9358:9361 Make shrx
R9369:9371 compcert.lib.Integers Make int rec
R9375:9377 compcert.lib.Integers Make int rec
R9384:9387 compcert.lib.Integers Make divs def
R9392:9394 compcert.lib.Integers Make shl def
R9400:9400 compcert.lib.Integers <> y var
R9396:9398 compcert.lib.Integers Make one def
R9389:9389 compcert.lib.Integers <> x var
def 9452:9456 Make mulhu
R9464:9466 compcert.lib.Integers Make int rec
R9470:9472 compcert.lib.Integers Make int rec
R9477:9480 compcert.lib.Integers Make repr def
R9483:9483 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9507:9510 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9494:9496 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R9484:9491 compcert.lib.Integers Make unsigned def
R9493:9493 compcert.lib.Integers <> x var
R9497:9504 compcert.lib.Integers Make unsigned def
R9506:9506 compcert.lib.Integers <> y var
R9511:9517 compcert.lib.Integers Make modulus def
def 9532:9536 Make mulhs
R9544:9546 compcert.lib.Integers Make int rec
R9550:9552 compcert.lib.Integers Make int rec
R9557:9560 compcert.lib.Integers Make repr def
R9563:9563 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9583:9586 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R9572:9574 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R9564:9569 compcert.lib.Integers Make signed def
R9571:9571 compcert.lib.Integers <> x var
R9575:9580 compcert.lib.Integers Make signed def
R9582:9582 compcert.lib.Integers <> y var
R9587:9593 compcert.lib.Integers Make modulus def
def 9633:9640 Make negative
R9646:9648 compcert.lib.Integers Make int rec
R9652:9654 compcert.lib.Integers Make int rec
R9664:9665 compcert.lib.Integers Make lt def
R9669:9672 compcert.lib.Integers Make zero def
R9667:9667 compcert.lib.Integers <> x var
R9688:9691 compcert.lib.Integers Make zero def
R9679:9681 compcert.lib.Integers Make one def
def 9706:9714 Make add_carry
R9726:9728 compcert.lib.Integers Make int rec
R9732:9734 compcert.lib.Integers Make int rec
R9744:9746 compcert.lib.Coqlib <> zlt def
R9789:9795 compcert.lib.Integers Make modulus def
R9772:9774 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9759:9761 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9749:9756 compcert.lib.Integers Make unsigned def
R9758:9758 compcert.lib.Integers <> x var
R9762:9769 compcert.lib.Integers Make unsigned def
R9771:9771 compcert.lib.Integers <> y var
R9775:9782 compcert.lib.Integers Make unsigned def
R9784:9786 compcert.lib.Integers <> cin var
R9812:9814 compcert.lib.Integers Make one def
R9802:9805 compcert.lib.Integers Make zero def
def 9829:9840 Make add_overflow
R9852:9854 compcert.lib.Integers Make int rec
R9858:9860 compcert.lib.Integers Make int rec
R9895:9897 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9884:9886 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9876:9881 compcert.lib.Integers Make signed def
R9883:9883 compcert.lib.Integers <> x var
R9887:9892 compcert.lib.Integers Make signed def
R9894:9894 compcert.lib.Integers <> y var
R9898:9903 compcert.lib.Integers Make signed def
R9905:9907 compcert.lib.Integers <> cin var
R9933:9936 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R9917:9919 compcert.lib.Coqlib <> zle def
R9932:9932 compcert.lib.Integers <> s var
R9921:9930 compcert.lib.Integers Make min_signed def
R9937:9939 compcert.lib.Coqlib <> zle def
R9943:9952 compcert.lib.Integers Make max_signed def
R9941:9941 compcert.lib.Integers <> s var
R9969:9971 compcert.lib.Integers Make one def
R9959:9962 compcert.lib.Integers Make zero def
def 9986:9995 Make sub_borrow
R10007:10009 compcert.lib.Integers Make int rec
R10013:10015 compcert.lib.Integers Make int rec
R10025:10027 compcert.lib.Coqlib <> zlt def
R10053:10055 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10040:10042 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10030:10037 compcert.lib.Integers Make unsigned def
R10039:10039 compcert.lib.Integers <> x var
R10043:10050 compcert.lib.Integers Make unsigned def
R10052:10052 compcert.lib.Integers <> y var
R10056:10063 compcert.lib.Integers Make unsigned def
R10065:10067 compcert.lib.Integers <> bin var
R10086:10089 compcert.lib.Integers Make zero def
R10077:10079 compcert.lib.Integers Make one def
def 10104:10115 Make sub_overflow
R10127:10129 compcert.lib.Integers Make int rec
R10133:10135 compcert.lib.Integers Make int rec
R10170:10172 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10159:10161 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R10151:10156 compcert.lib.Integers Make signed def
R10158:10158 compcert.lib.Integers <> x var
R10162:10167 compcert.lib.Integers Make signed def
R10169:10169 compcert.lib.Integers <> y var
R10173:10178 compcert.lib.Integers Make signed def
R10180:10182 compcert.lib.Integers <> bin var
R10208:10211 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R10192:10194 compcert.lib.Coqlib <> zle def
R10207:10207 compcert.lib.Integers <> s var
R10196:10205 compcert.lib.Integers Make min_signed def
R10212:10214 compcert.lib.Coqlib <> zle def
R10218:10227 compcert.lib.Integers Make max_signed def
R10216:10216 compcert.lib.Integers <> s var
R10244:10246 compcert.lib.Integers Make one def
R10234:10237 compcert.lib.Integers Make zero def
def 10349:10357 Make shr_carry
R10365:10367 compcert.lib.Integers Make int rec
R10372:10374 compcert.lib.Integers Make int rec
R10393:10396 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R10384:10385 compcert.lib.Integers Make lt def
R10389:10392 compcert.lib.Integers Make zero def
R10387:10387 compcert.lib.Integers <> x var
R10397:10400 Coq.Init.Datatypes <> negb def
R10403:10404 compcert.lib.Integers Make eq def
R10436:10439 compcert.lib.Integers Make zero def
R10407:10409 compcert.lib.Integers Make and def
R10414:10416 compcert.lib.Integers Make sub def
R10430:10432 compcert.lib.Integers Make one def
R10419:10421 compcert.lib.Integers Make shl def
R10427:10427 compcert.lib.Integers <> y var
R10423:10425 compcert.lib.Integers Make one def
R10411:10411 compcert.lib.Integers <> x var
R10458:10461 compcert.lib.Integers Make zero def
R10449:10451 compcert.lib.Integers Make one def
def 10509:10516 Make Zshiftin
R10522:10525 Coq.Init.Datatypes <> bool ind
R10532:10532 Coq.Numbers.BinNums <> Z ind
R10537:10537 Coq.Numbers.BinNums <> Z ind
R10547:10547 compcert.lib.Integers <> b var
R10575:10582 Coq.ZArith.BinInt Z double def
R10584:10584 compcert.lib.Integers <> x var
R10554:10566 Coq.ZArith.BinInt Z succ_double def
R10568:10568 compcert.lib.Integers <> x var
def 11126:11134 Make Zzero_ext
R11140:11140 Coq.Numbers.BinNums <> Z ind
R11147:11147 Coq.Numbers.BinNums <> Z ind
R11152:11152 Coq.Numbers.BinNums <> Z ind
R11159:11164 Coq.ZArith.BinInt Z iter def
R11245:11245 compcert.lib.Integers <> x var
R11187:11194 compcert.lib.Integers Make Zshiftin def
R11207:11209 compcert.lib.Integers <> rec var
R11212:11217 Coq.ZArith.BinInt Z div2 def
R11219:11219 compcert.lib.Integers <> x var
R11197:11201 Coq.ZArith.BinInt Z odd def
R11203:11203 compcert.lib.Integers <> x var
R11166:11166 compcert.lib.Integers <> n var
def 11260:11268 Make Zsign_ext
R11274:11274 Coq.Numbers.BinNums <> Z ind
R11281:11281 Coq.Numbers.BinNums <> Z ind
R11286:11286 Coq.Numbers.BinNums <> Z ind
R11293:11298 Coq.ZArith.BinInt Z iter def
R11411:11411 compcert.lib.Integers <> x var
R11383:11387 Coq.ZArith.BinInt Z odd def
R11389:11389 compcert.lib.Integers <> x var
R11329:11336 compcert.lib.Integers Make Zshiftin def
R11349:11351 compcert.lib.Integers <> rec var
R11354:11359 Coq.ZArith.BinInt Z div2 def
R11361:11361 compcert.lib.Integers <> x var
R11339:11343 Coq.ZArith.BinInt Z odd def
R11345:11345 compcert.lib.Integers <> x var
R11301:11306 Coq.ZArith.BinInt Z pred def
R11308:11308 compcert.lib.Integers <> n var
def 11426:11433 Make zero_ext
R11439:11439 Coq.Numbers.BinNums <> Z ind
R11446:11448 compcert.lib.Integers Make int rec
R11453:11455 compcert.lib.Integers Make int rec
R11460:11463 compcert.lib.Integers Make repr def
R11466:11474 compcert.lib.Integers Make Zzero_ext def
R11479:11486 compcert.lib.Integers Make unsigned def
R11488:11488 compcert.lib.Integers <> x var
R11476:11476 compcert.lib.Integers <> n var
def 11505:11512 Make sign_ext
R11518:11518 Coq.Numbers.BinNums <> Z ind
R11525:11527 compcert.lib.Integers Make int rec
R11532:11534 compcert.lib.Integers Make int rec
R11539:11542 compcert.lib.Integers Make repr def
R11545:11553 compcert.lib.Integers Make Zsign_ext def
R11558:11565 compcert.lib.Integers Make unsigned def
R11567:11567 compcert.lib.Integers <> x var
R11555:11555 compcert.lib.Integers <> n var
def 11643:11652 Make Z_one_bits
R11658:11660 Coq.Init.Datatypes <> nat ind
R11667:11667 Coq.Numbers.BinNums <> Z ind
R11674:11674 Coq.Numbers.BinNums <> Z ind
R11689:11692 Coq.Init.Datatypes <> list ind
R11694:11694 Coq.Numbers.BinNums <> Z ind
R11707:11707 compcert.lib.Integers <> n var
R11718:11718 Coq.Init.Datatypes <> O constr
R11723:11725 Coq.Init.Datatypes <> nil constr
R11731:11731 Coq.Init.Datatypes <> S constr
R11747:11751 Coq.ZArith.BinInt Z odd def
R11753:11753 compcert.lib.Integers <> x var
R11812:11821 compcert.lib.Integers <> Z_one_bits def
R11838:11838 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11837:11837 compcert.lib.Integers <> i var
R11826:11831 Coq.ZArith.BinInt Z div2 def
R11833:11833 compcert.lib.Integers <> x var
R11767:11770 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R11766:11766 compcert.lib.Integers <> i var
R11771:11780 compcert.lib.Integers <> Z_one_bits def
R11797:11797 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11796:11796 compcert.lib.Integers <> i var
R11785:11790 Coq.ZArith.BinInt Z div2 def
R11792:11792 compcert.lib.Integers <> x var
def 11861:11868 Make one_bits
R11874:11876 compcert.lib.Integers Make int rec
R11881:11884 Coq.Init.Datatypes <> list ind
R11886:11888 compcert.lib.Integers Make int rec
R11895:11902 Coq.Lists.List <> map def
R11910:11919 compcert.lib.Integers Make Z_one_bits def
R11931:11938 compcert.lib.Integers Make unsigned def
R11940:11940 compcert.lib.Integers <> x var
R11921:11928 compcert.lib.Integers Make wordsize def
R11904:11907 compcert.lib.Integers Make repr def
def 11997:12005 Make is_power2
R12011:12013 compcert.lib.Integers Make int rec
R12018:12023 Coq.Init.Datatypes <> option ind
R12025:12027 compcert.lib.Integers Make int rec
R12040:12049 compcert.lib.Integers Make Z_one_bits def
R12061:12068 compcert.lib.Integers Make unsigned def
R12070:12070 compcert.lib.Integers <> x var
R12051:12058 compcert.lib.Integers Make wordsize def
R12085:12088 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R12089:12091 Coq.Init.Datatypes <> nil constr
R12096:12099 Coq.Init.Datatypes <> Some constr
R12102:12105 compcert.lib.Integers Make repr def
R12119:12122 Coq.Init.Datatypes <> None constr
def 12164:12166 Make cmp
R12172:12181 compcert.lib.Integers Make comparison ind
R12190:12192 compcert.lib.Integers Make int rec
R12197:12200 Coq.Init.Datatypes <> bool ind
R12213:12213 compcert.lib.Integers <> c var
R12224:12226 compcert.lib.Integers Make Ceq constr
R12231:12232 compcert.lib.Integers Make eq def
R12236:12236 compcert.lib.Integers <> y var
R12234:12234 compcert.lib.Integers <> x var
R12242:12244 compcert.lib.Integers Make Cne constr
R12249:12252 Coq.Init.Datatypes <> negb def
R12255:12256 compcert.lib.Integers Make eq def
R12260:12260 compcert.lib.Integers <> y var
R12258:12258 compcert.lib.Integers <> x var
R12267:12269 compcert.lib.Integers Make Clt constr
R12274:12275 compcert.lib.Integers Make lt def
R12279:12279 compcert.lib.Integers <> y var
R12277:12277 compcert.lib.Integers <> x var
R12285:12287 compcert.lib.Integers Make Cle constr
R12292:12295 Coq.Init.Datatypes <> negb def
R12298:12299 compcert.lib.Integers Make lt def
R12303:12303 compcert.lib.Integers <> x var
R12301:12301 compcert.lib.Integers <> y var
R12310:12312 compcert.lib.Integers Make Cgt constr
R12317:12318 compcert.lib.Integers Make lt def
R12322:12322 compcert.lib.Integers <> x var
R12320:12320 compcert.lib.Integers <> y var
R12328:12330 compcert.lib.Integers Make Cge constr
R12335:12338 Coq.Init.Datatypes <> negb def
R12341:12342 compcert.lib.Integers Make lt def
R12346:12346 compcert.lib.Integers <> y var
R12344:12344 compcert.lib.Integers <> x var
def 12368:12371 Make cmpu
R12377:12386 compcert.lib.Integers Make comparison ind
R12395:12397 compcert.lib.Integers Make int rec
R12402:12405 Coq.Init.Datatypes <> bool ind
R12418:12418 compcert.lib.Integers <> c var
R12429:12431 compcert.lib.Integers Make Ceq constr
R12436:12437 compcert.lib.Integers Make eq def
R12441:12441 compcert.lib.Integers <> y var
R12439:12439 compcert.lib.Integers <> x var
R12447:12449 compcert.lib.Integers Make Cne constr
R12454:12457 Coq.Init.Datatypes <> negb def
R12460:12461 compcert.lib.Integers Make eq def
R12465:12465 compcert.lib.Integers <> y var
R12463:12463 compcert.lib.Integers <> x var
R12472:12474 compcert.lib.Integers Make Clt constr
R12479:12481 compcert.lib.Integers Make ltu def
R12485:12485 compcert.lib.Integers <> y var
R12483:12483 compcert.lib.Integers <> x var
R12491:12493 compcert.lib.Integers Make Cle constr
R12498:12501 Coq.Init.Datatypes <> negb def
R12504:12506 compcert.lib.Integers Make ltu def
R12510:12510 compcert.lib.Integers <> x var
R12508:12508 compcert.lib.Integers <> y var
R12517:12519 compcert.lib.Integers Make Cgt constr
R12524:12526 compcert.lib.Integers Make ltu def
R12530:12530 compcert.lib.Integers <> x var
R12528:12528 compcert.lib.Integers <> y var
R12536:12538 compcert.lib.Integers Make Cge constr
R12543:12546 Coq.Init.Datatypes <> negb def
R12549:12551 compcert.lib.Integers Make ltu def
R12555:12555 compcert.lib.Integers <> y var
R12553:12553 compcert.lib.Integers <> x var
def 12577:12584 Make is_false
R12590:12592 compcert.lib.Integers Make int rec
R12606:12608 Coq.Init.Logic <> :type_scope:x_'='_x not
R12605:12605 compcert.lib.Integers <> x var
R12609:12612 compcert.lib.Integers Make zero def
def 12626:12632 Make is_true
R12639:12641 compcert.lib.Integers Make int rec
R12655:12658 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R12654:12654 compcert.lib.Integers <> x var
R12659:12662 compcert.lib.Integers Make zero def
def 12676:12682 Make notbool
R12689:12691 compcert.lib.Integers Make int rec
R12696:12698 compcert.lib.Integers Make int rec
R12707:12708 compcert.lib.Integers Make eq def
R12712:12715 compcert.lib.Integers Make zero def
R12710:12710 compcert.lib.Integers <> x var
R12731:12734 compcert.lib.Integers Make zero def
R12722:12724 compcert.lib.Integers Make one def
prf 12858:12875 Make half_modulus_power
R12892:12894 Coq.Init.Logic <> :type_scope:x_'='_x not
R12880:12891 compcert.lib.Integers Make half_modulus def
R12895:12899 Coq.ZArith.Zpower <> two_p def
R12911:12913 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R12902:12910 compcert.lib.Integers Make zwordsize def
R12934:12945 compcert.lib.Integers Make half_modulus def
R12956:12968 compcert.lib.Integers Make modulus_power thm
R12956:12968 compcert.lib.Integers Make modulus_power thm
R12995:12997 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R12986:12994 compcert.lib.Integers Make zwordsize def
R12995:12997 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R12986:12994 compcert.lib.Integers Make zwordsize def
R13014:13022 compcert.lib.Integers Make zwordsize def
R13031:13035 Coq.ZArith.BinInt <> Zsucc syndef
R13031:13035 Coq.ZArith.BinInt <> Zsucc syndef
R13014:13022 compcert.lib.Integers Make zwordsize def
R13053:13059 Coq.ZArith.Zpower <> two_p_S thm
R13053:13059 Coq.ZArith.Zpower <> two_p_S thm
R13070:13079 Coq.ZArith.BinInt <> Zmult_comm syndef
R13070:13079 Coq.ZArith.BinInt <> Zmult_comm syndef
R13088:13097 Coq.ZArith.Zdiv <> Z_div_mult thm
R13088:13097 Coq.ZArith.Zdiv <> Z_div_mult thm
R13132:13143 compcert.lib.Integers Make wordsize_pos thm
R13132:13143 compcert.lib.Integers Make wordsize_pos thm
prf 13187:13206 Make half_modulus_modulus
R13216:13218 Coq.Init.Logic <> :type_scope:x_'='_x not
R13209:13215 compcert.lib.Integers Make modulus def
R13220:13222 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R13223:13234 compcert.lib.Integers Make half_modulus def
R13254:13271 compcert.lib.Integers Make half_modulus_power thm
R13254:13271 compcert.lib.Integers Make half_modulus_power thm
R13282:13294 compcert.lib.Integers Make modulus_power thm
R13282:13294 compcert.lib.Integers Make modulus_power thm
R13311:13317 Coq.ZArith.Zpower <> two_p_S thm
R13311:13317 Coq.ZArith.Zpower <> two_p_S thm
R13348:13359 compcert.lib.Integers Make wordsize_pos thm
R13348:13359 compcert.lib.Integers Make wordsize_pos thm
prf 13538:13553 Make half_modulus_pos
R13568:13570 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R13556:13567 compcert.lib.Integers Make half_modulus def
R13591:13608 compcert.lib.Integers Make half_modulus_power thm
R13591:13608 compcert.lib.Integers Make half_modulus_power thm
R13617:13629 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R13617:13629 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R13643:13654 compcert.lib.Integers Make wordsize_pos thm
R13643:13654 compcert.lib.Integers Make wordsize_pos thm
prf 13677:13690 Make min_signed_neg
R13703:13705 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R13693:13702 compcert.lib.Integers Make min_signed def
R13725:13734 compcert.lib.Integers Make min_signed def
R13748:13763 compcert.lib.Integers Make half_modulus_pos thm
R13748:13763 compcert.lib.Integers Make half_modulus_pos thm
prf 13786:13799 Make max_signed_pos
R13812:13815 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R13802:13811 compcert.lib.Integers Make max_signed def
R13835:13844 compcert.lib.Integers Make max_signed def
R13858:13873 compcert.lib.Integers Make half_modulus_pos thm
R13858:13873 compcert.lib.Integers Make half_modulus_pos thm
prf 13896:13916 Make wordsize_max_unsigned
R13928:13931 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R13919:13927 compcert.lib.Integers Make zwordsize def
R13932:13943 compcert.lib.Integers Make max_unsigned def
R13972:13974 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R13963:13971 compcert.lib.Integers Make zwordsize def
R13975:13981 compcert.lib.Integers Make modulus def
R13972:13974 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R13963:13971 compcert.lib.Integers Make zwordsize def
R13975:13981 compcert.lib.Integers Make modulus def
R13997:14009 compcert.lib.Integers Make modulus_power thm
R13997:14009 compcert.lib.Integers Make modulus_power thm
R14018:14029 compcert.lib.Coqlib <> two_p_strict thm
R14018:14029 compcert.lib.Coqlib <> two_p_strict thm
R14048:14059 compcert.lib.Integers Make wordsize_pos thm
R14048:14059 compcert.lib.Integers Make wordsize_pos thm
R14079:14090 compcert.lib.Integers Make max_unsigned def
prf 14113:14137 Make two_wordsize_max_unsigned
R14157:14160 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R14153:14155 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14141:14143 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R14144:14152 compcert.lib.Integers Make zwordsize def
R14161:14172 compcert.lib.Integers Make max_unsigned def
R14209:14211 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14205:14207 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14193:14195 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R14196:14204 compcert.lib.Integers Make zwordsize def
R14212:14218 compcert.lib.Integers Make modulus def
R14209:14211 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14205:14207 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14193:14195 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R14196:14204 compcert.lib.Integers Make zwordsize def
R14212:14218 compcert.lib.Integers Make modulus def
R14234:14246 compcert.lib.Integers Make modulus_power thm
R14234:14246 compcert.lib.Integers Make modulus_power thm
R14255:14268 compcert.lib.Coqlib <> two_p_strict_2 thm
R14255:14268 compcert.lib.Coqlib <> two_p_strict_2 thm
R14282:14293 compcert.lib.Integers Make wordsize_pos thm
R14282:14293 compcert.lib.Integers Make wordsize_pos thm
R14312:14323 compcert.lib.Integers Make max_unsigned def
prf 14346:14364 Make max_signed_unsigned
R14377:14379 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R14367:14376 compcert.lib.Integers Make max_signed def
R14380:14391 compcert.lib.Integers Make max_unsigned def
R14410:14419 compcert.lib.Integers Make max_signed def
R14422:14433 compcert.lib.Integers Make max_unsigned def
R14444:14463 compcert.lib.Integers Make half_modulus_modulus thm
R14444:14463 compcert.lib.Integers Make half_modulus_modulus thm
R14480:14495 compcert.lib.Integers Make half_modulus_pos thm
R14480:14495 compcert.lib.Integers Make half_modulus_pos thm
prf 14517:14532 Make unsigned_repr_eq
R14564:14566 Coq.Init.Logic <> :type_scope:x_'='_x not
R14547:14554 compcert.lib.Integers Make unsigned def
R14557:14560 compcert.lib.Integers Make repr def
R14562:14562 compcert.lib.Integers <> x var
R14567:14570 Coq.ZArith.Zdiv <> Zmod syndef
R14574:14580 compcert.lib.Integers Make modulus def
R14572:14572 compcert.lib.Integers <> x var
R14613:14628 compcert.lib.Integers Make Z_mod_modulus_eq thm
R14613:14628 compcert.lib.Integers Make Z_mod_modulus_eq thm
prf 14644:14657 Make signed_repr_eq
R14687:14689 Coq.Init.Logic <> :type_scope:x_'='_x not
R14672:14677 compcert.lib.Integers Make signed def
R14680:14683 compcert.lib.Integers Make repr def
R14685:14685 compcert.lib.Integers <> x var
R14693:14695 compcert.lib.Coqlib <> zlt def
R14714:14725 compcert.lib.Integers Make half_modulus def
R14698:14701 Coq.ZArith.Zdiv <> Zmod syndef
R14705:14711 compcert.lib.Integers Make modulus def
R14703:14703 compcert.lib.Integers <> x var
R14766:14768 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R14752:14755 Coq.ZArith.Zdiv <> Zmod syndef
R14759:14765 compcert.lib.Integers Make modulus def
R14757:14757 compcert.lib.Integers <> x var
R14769:14775 compcert.lib.Integers Make modulus def
R14732:14735 Coq.ZArith.Zdiv <> Zmod syndef
R14739:14745 compcert.lib.Integers Make modulus def
R14737:14737 compcert.lib.Integers <> x var
R14802:14807 compcert.lib.Integers Make signed def
R14818:14833 compcert.lib.Integers Make unsigned_repr_eq thm
R14818:14833 compcert.lib.Integers Make unsigned_repr_eq thm
sec 14980:14988 Make EQ_MODULO
var 15001:15005 Make.EQ_MODULO modul
R15008:15008 Coq.Numbers.BinNums <> Z ind
var 15022:15030 Make.EQ_MODULO modul_pos
R15038:15040 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R15033:15037 compcert.lib.Integers <> Make.EQ_MODULO.modul var
def 15056:15060 Make eqmod
R15068:15068 Coq.Numbers.BinNums <> Z ind
R15081:15087 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15089:15090 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15092:15094 Coq.Init.Logic <> :type_scope:x_'='_x not
R15091:15091 compcert.lib.Integers <> x var
R15104:15106 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15096:15098 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R15095:15095 compcert.lib.Integers <> k var
R15099:15103 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15107:15107 compcert.lib.Integers <> y var
prf 15117:15126 Make eqmod_refl
R15139:15143 compcert.lib.Integers Make eqmod def
R15147:15147 compcert.lib.Integers <> x var
R15145:15145 compcert.lib.Integers <> x var
prf 15201:15211 Make eqmod_refl2
R15235:15239 compcert.lib.Integers Make eqmod def
R15243:15243 compcert.lib.Integers <> y var
R15241:15241 compcert.lib.Integers <> x var
R15227:15229 Coq.Init.Logic <> :type_scope:x_'='_x not
R15226:15226 compcert.lib.Integers <> x var
R15230:15230 compcert.lib.Integers <> y var
R15278:15287 compcert.lib.Integers Make eqmod_refl thm
R15278:15287 compcert.lib.Integers Make eqmod_refl thm
prf 15302:15310 Make eqmod_sym
R15338:15342 compcert.lib.Integers Make eqmod def
R15346:15346 compcert.lib.Integers <> x var
R15344:15344 compcert.lib.Integers <> y var
R15325:15329 compcert.lib.Integers Make eqmod def
R15333:15333 compcert.lib.Integers <> y var
R15331:15331 compcert.lib.Integers <> x var
R15390:15390 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R15390:15390 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
prf 15422:15432 Make eqmod_trans
R15475:15479 compcert.lib.Integers Make eqmod def
R15483:15483 compcert.lib.Integers <> z var
R15481:15481 compcert.lib.Integers <> x var
R15462:15466 compcert.lib.Integers Make eqmod def
R15470:15470 compcert.lib.Integers <> z var
R15468:15468 compcert.lib.Integers <> y var
R15449:15453 compcert.lib.Integers Make eqmod def
R15457:15457 compcert.lib.Integers <> y var
R15455:15455 compcert.lib.Integers <> x var
R15544:15546 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15544:15546 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
prf 15588:15601 Make eqmod_small_eq
R15668:15670 Coq.Init.Logic <> :type_scope:x_'='_x not
R15667:15667 compcert.lib.Integers <> x var
R15671:15671 compcert.lib.Integers <> y var
R15650:15653 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R15655:15657 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R15654:15654 compcert.lib.Integers <> y var
R15654:15654 compcert.lib.Integers <> y var
R15658:15662 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15632:15635 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R15637:15639 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R15636:15636 compcert.lib.Integers <> x var
R15636:15636 compcert.lib.Integers <> x var
R15640:15644 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15618:15622 compcert.lib.Integers Make eqmod def
R15626:15626 compcert.lib.Integers <> y var
R15624:15624 compcert.lib.Integers <> x var
R15722:15732 compcert.lib.Coqlib <> Zdiv_unique thm
R15722:15732 compcert.lib.Coqlib <> Zdiv_unique thm
R15768:15777 compcert.lib.Coqlib <> Zdiv_small thm
R15781:15785 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15768:15777 compcert.lib.Coqlib <> Zdiv_small thm
R15781:15785 compcert.lib.Integers <> Make.EQ_MODULO.modul var
prf 15825:15836 Make eqmod_mod_eq
R15877:15879 Coq.Init.Logic <> :type_scope:x_'='_x not
R15867:15871 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R15866:15866 compcert.lib.Integers <> x var
R15872:15876 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15881:15885 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R15880:15880 compcert.lib.Integers <> y var
R15886:15890 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R15853:15857 compcert.lib.Integers Make eqmod def
R15861:15861 compcert.lib.Integers <> y var
R15859:15859 compcert.lib.Integers <> x var
R15941:15950 Coq.ZArith.BinInt <> Zplus_comm syndef
R15941:15950 Coq.ZArith.BinInt <> Zplus_comm syndef
R15959:15968 Coq.ZArith.Zdiv <> Z_mod_plus thm
R15959:15968 Coq.ZArith.Zdiv <> Z_mod_plus thm
prf 15989:15997 Make eqmod_mod
R16012:16016 compcert.lib.Integers Make eqmod def
R16022:16026 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R16021:16021 compcert.lib.Integers <> x var
R16027:16031 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R16018:16018 compcert.lib.Integers <> x var
R16066:16068 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R16069:16073 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R16066:16068 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R16069:16073 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R16088:16097 Coq.ZArith.BinInt <> Zmult_comm syndef
R16088:16097 Coq.ZArith.BinInt <> Zmult_comm syndef
R16106:16117 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R16106:16117 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
prf 16138:16146 Make eqmod_add
R16193:16197 compcert.lib.Integers Make eqmod def
R16209:16211 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16208:16208 compcert.lib.Integers <> b var
R16212:16212 compcert.lib.Integers <> d var
R16201:16203 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16200:16200 compcert.lib.Integers <> a var
R16204:16204 compcert.lib.Integers <> c var
R16180:16184 compcert.lib.Integers Make eqmod def
R16188:16188 compcert.lib.Integers <> d var
R16186:16186 compcert.lib.Integers <> c var
R16167:16171 compcert.lib.Integers Make eqmod def
R16175:16175 compcert.lib.Integers <> b var
R16173:16173 compcert.lib.Integers <> a var
R16294:16296 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16294:16296 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
prf 16320:16328 Make eqmod_neg
R16358:16362 compcert.lib.Integers Make eqmod def
R16370:16370 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16371:16371 compcert.lib.Integers <> y var
R16365:16365 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16366:16366 compcert.lib.Integers <> x var
R16345:16349 compcert.lib.Integers Make eqmod def
R16353:16353 compcert.lib.Integers <> y var
R16351:16351 compcert.lib.Integers <> x var
R16416:16416 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R16416:16416 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
prf 16452:16460 Make eqmod_sub
R16507:16511 compcert.lib.Integers Make eqmod def
R16523:16525 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R16522:16522 compcert.lib.Integers <> b var
R16526:16526 compcert.lib.Integers <> d var
R16515:16517 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R16514:16514 compcert.lib.Integers <> a var
R16518:16518 compcert.lib.Integers <> c var
R16494:16498 compcert.lib.Integers Make eqmod def
R16502:16502 compcert.lib.Integers <> d var
R16500:16500 compcert.lib.Integers <> c var
R16481:16485 compcert.lib.Integers Make eqmod def
R16489:16489 compcert.lib.Integers <> b var
R16487:16487 compcert.lib.Integers <> a var
R16608:16610 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R16608:16610 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
prf 16634:16643 Make eqmod_mult
R16690:16694 compcert.lib.Integers Make eqmod def
R16706:16708 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16705:16705 compcert.lib.Integers <> c var
R16709:16709 compcert.lib.Integers <> d var
R16698:16700 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16697:16697 compcert.lib.Integers <> a var
R16701:16701 compcert.lib.Integers <> b var
R16677:16681 compcert.lib.Integers Make eqmod def
R16685:16685 compcert.lib.Integers <> d var
R16683:16683 compcert.lib.Integers <> b var
R16664:16668 compcert.lib.Integers Make eqmod def
R16672:16672 compcert.lib.Integers <> c var
R16670:16670 compcert.lib.Integers <> a var
R16815:16817 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16806:16808 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16798:16800 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16793:16795 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16801:16805 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R16810:16812 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16820:16822 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16815:16817 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16806:16808 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R16798:16800 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16793:16795 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16801:16805 compcert.lib.Integers <> Make.EQ_MODULO.modul var
R16810:16812 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16820:16822 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16845:16853 compcert.lib.Integers Make.EQ_MODULO <> sec
prf 16863:16875 Make eqmod_divides
R16926:16930 compcert.lib.Integers Make eqmod def
R16936:16936 compcert.lib.Integers <> y var
R16934:16934 compcert.lib.Integers <> x var
R16932:16932 compcert.lib.Integers <> m var
R16911:16917 Coq.ZArith.Znumtheory <> Zdivide syndef
R16921:16921 compcert.lib.Integers <> n var
R16919:16919 compcert.lib.Integers <> m var
R16896:16900 compcert.lib.Integers Make eqmod def
R16906:16906 compcert.lib.Integers <> y var
R16904:16904 compcert.lib.Integers <> x var
R16902:16902 compcert.lib.Integers <> n var
R17018:17018 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17018:17018 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R17035:17045 Coq.ZArith.BinInt <> Zmult_assoc syndef
R17035:17045 Coq.ZArith.BinInt <> Zmult_assoc syndef
R17196:17206 compcert.lib.Integers Make modulus_pos thm
def 17227:17229 Make eqm
R17234:17238 compcert.lib.Integers Make eqmod def
R17240:17246 compcert.lib.Integers Make modulus def
prf 17256:17263 Make eqm_refl
R17276:17278 compcert.lib.Integers Make eqm def
R17282:17282 compcert.lib.Integers <> x var
R17280:17280 compcert.lib.Integers <> x var
R17292:17301 compcert.lib.Integers Make eqmod_refl thm
R17303:17309 compcert.lib.Integers Make modulus def
R17326:17333 compcert.lib.Integers Make eqm_refl thm
prf 17349:17357 Make eqm_refl2
R17383:17385 compcert.lib.Integers Make eqm def
R17389:17389 compcert.lib.Integers <> y var
R17387:17387 compcert.lib.Integers <> x var
R17375:17377 Coq.Init.Logic <> :type_scope:x_'='_x not
R17374:17374 compcert.lib.Integers <> x var
R17378:17378 compcert.lib.Integers <> y var
R17399:17409 compcert.lib.Integers Make eqmod_refl2 thm
R17411:17417 compcert.lib.Integers Make modulus def
R17434:17442 compcert.lib.Integers Make eqm_refl2 thm
prf 17458:17464 Make eqm_sym
R17490:17492 compcert.lib.Integers Make eqm def
R17496:17496 compcert.lib.Integers <> x var
R17494:17494 compcert.lib.Integers <> y var
R17479:17481 compcert.lib.Integers Make eqm def
R17485:17485 compcert.lib.Integers <> y var
R17483:17483 compcert.lib.Integers <> x var
R17506:17514 compcert.lib.Integers Make eqmod_sym thm
R17516:17522 compcert.lib.Integers Make modulus def
R17539:17545 compcert.lib.Integers Make eqm_sym thm
prf 17561:17569 Make eqm_trans
R17608:17610 compcert.lib.Integers Make eqm def
R17614:17614 compcert.lib.Integers <> z var
R17612:17612 compcert.lib.Integers <> x var
R17597:17599 compcert.lib.Integers Make eqm def
R17603:17603 compcert.lib.Integers <> z var
R17601:17601 compcert.lib.Integers <> y var
R17586:17588 compcert.lib.Integers Make eqm def
R17592:17592 compcert.lib.Integers <> y var
R17590:17590 compcert.lib.Integers <> x var
R17624:17634 compcert.lib.Integers Make eqmod_trans thm
R17636:17642 compcert.lib.Integers Make modulus def
R17659:17667 compcert.lib.Integers Make eqm_trans thm
prf 17683:17694 Make eqm_small_eq
R17763:17765 Coq.Init.Logic <> :type_scope:x_'='_x not
R17762:17762 compcert.lib.Integers <> x var
R17766:17766 compcert.lib.Integers <> y var
R17743:17746 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R17748:17750 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R17747:17747 compcert.lib.Integers <> y var
R17747:17747 compcert.lib.Integers <> y var
R17751:17757 compcert.lib.Integers Make modulus def
R17723:17726 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R17728:17730 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R17727:17727 compcert.lib.Integers <> x var
R17727:17727 compcert.lib.Integers <> x var
R17731:17737 compcert.lib.Integers Make modulus def
R17711:17713 compcert.lib.Integers Make eqm def
R17717:17717 compcert.lib.Integers <> y var
R17715:17715 compcert.lib.Integers <> x var
R17776:17789 compcert.lib.Integers Make eqmod_small_eq thm
R17791:17797 compcert.lib.Integers Make modulus def
R17814:17825 compcert.lib.Integers Make eqm_small_eq thm
prf 17841:17847 Make eqm_add
R17890:17892 compcert.lib.Integers Make eqm def
R17904:17906 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17903:17903 compcert.lib.Integers <> b var
R17907:17907 compcert.lib.Integers <> d var
R17896:17898 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17895:17895 compcert.lib.Integers <> a var
R17899:17899 compcert.lib.Integers <> c var
R17879:17881 compcert.lib.Integers Make eqm def
R17885:17885 compcert.lib.Integers <> d var
R17883:17883 compcert.lib.Integers <> c var
R17868:17870 compcert.lib.Integers Make eqm def
R17874:17874 compcert.lib.Integers <> b var
R17872:17872 compcert.lib.Integers <> a var
R17918:17926 compcert.lib.Integers Make eqmod_add thm
R17928:17934 compcert.lib.Integers Make modulus def
R17951:17957 compcert.lib.Integers Make eqm_add thm
prf 17973:17979 Make eqm_neg
R18007:18009 compcert.lib.Integers Make eqm def
R18017:18017 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R18018:18018 compcert.lib.Integers <> y var
R18012:18012 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R18013:18013 compcert.lib.Integers <> x var
R17996:17998 compcert.lib.Integers Make eqm def
R18002:18002 compcert.lib.Integers <> y var
R18000:18000 compcert.lib.Integers <> x var
R18029:18037 compcert.lib.Integers Make eqmod_neg thm
R18039:18045 compcert.lib.Integers Make modulus def
R18062:18068 compcert.lib.Integers Make eqm_neg thm
prf 18084:18090 Make eqm_sub
R18133:18135 compcert.lib.Integers Make eqm def
R18147:18149 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R18146:18146 compcert.lib.Integers <> b var
R18150:18150 compcert.lib.Integers <> d var
R18139:18141 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R18138:18138 compcert.lib.Integers <> a var
R18142:18142 compcert.lib.Integers <> c var
R18122:18124 compcert.lib.Integers Make eqm def
R18128:18128 compcert.lib.Integers <> d var
R18126:18126 compcert.lib.Integers <> c var
R18111:18113 compcert.lib.Integers Make eqm def
R18117:18117 compcert.lib.Integers <> b var
R18115:18115 compcert.lib.Integers <> a var
R18161:18169 compcert.lib.Integers Make eqmod_sub thm
R18171:18177 compcert.lib.Integers Make modulus def
R18194:18200 compcert.lib.Integers Make eqm_sub thm
prf 18216:18223 Make eqm_mult
R18266:18268 compcert.lib.Integers Make eqm def
R18280:18282 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R18279:18279 compcert.lib.Integers <> c var
R18283:18283 compcert.lib.Integers <> d var
R18272:18274 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R18271:18271 compcert.lib.Integers <> a var
R18275:18275 compcert.lib.Integers <> b var
R18255:18257 compcert.lib.Integers Make eqm def
R18261:18261 compcert.lib.Integers <> d var
R18259:18259 compcert.lib.Integers <> b var
R18244:18246 compcert.lib.Integers Make eqm def
R18250:18250 compcert.lib.Integers <> c var
R18248:18248 compcert.lib.Integers <> a var
R18294:18303 compcert.lib.Integers Make eqmod_mult thm
R18305:18311 compcert.lib.Integers Make modulus def
R18328:18335 compcert.lib.Integers Make eqm_mult thm
prf 18412:18423 Make eqm_samerepr
R18455:18457 Coq.Init.Logic <> :type_scope:x_'='_x not
R18449:18452 compcert.lib.Integers Make repr def
R18454:18454 compcert.lib.Integers <> x var
R18458:18461 compcert.lib.Integers Make repr def
R18463:18463 compcert.lib.Integers <> y var
R18438:18440 compcert.lib.Integers Make eqm def
R18444:18444 compcert.lib.Integers <> y var
R18442:18442 compcert.lib.Integers <> x var
R18490:18493 compcert.lib.Integers Make repr def
R18502:18509 compcert.lib.Integers Make mkint_eq thm
R18502:18509 compcert.lib.Integers Make mkint_eq thm
R18524:18539 compcert.lib.Integers Make Z_mod_modulus_eq thm
R18524:18539 compcert.lib.Integers Make Z_mod_modulus_eq thm
R18524:18539 compcert.lib.Integers Make Z_mod_modulus_eq thm
R18524:18539 compcert.lib.Integers Make Z_mod_modulus_eq thm
R18548:18559 compcert.lib.Integers Make eqmod_mod_eq thm
R18548:18559 compcert.lib.Integers Make eqmod_mod_eq thm
prf 18599:18615 Make eqm_unsigned_repr
R18630:18632 compcert.lib.Integers Make eqm def
R18637:18644 compcert.lib.Integers Make unsigned def
R18647:18650 compcert.lib.Integers Make repr def
R18652:18652 compcert.lib.Integers <> z var
R18634:18634 compcert.lib.Integers <> z var
R18673:18675 compcert.lib.Integers Make eqm def
R18694:18709 compcert.lib.Integers Make unsigned_repr_eq thm
R18694:18709 compcert.lib.Integers Make unsigned_repr_eq thm
R18718:18726 compcert.lib.Integers Make eqmod_mod thm
R18718:18726 compcert.lib.Integers Make eqmod_mod thm
R18763:18779 compcert.lib.Integers Make eqm_unsigned_repr thm
prf 18795:18813 Make eqm_unsigned_repr_l
R18841:18843 compcert.lib.Integers Make eqm def
R18865:18865 compcert.lib.Integers <> b var
R18846:18853 compcert.lib.Integers Make unsigned def
R18856:18859 compcert.lib.Integers Make repr def
R18861:18861 compcert.lib.Integers <> a var
R18830:18832 compcert.lib.Integers Make eqm def
R18836:18836 compcert.lib.Integers <> b var
R18834:18834 compcert.lib.Integers <> a var
R18891:18899 compcert.lib.Integers Make eqm_trans thm
R18891:18899 compcert.lib.Integers Make eqm_trans thm
R18918:18924 compcert.lib.Integers Make eqm_sym thm
R18918:18924 compcert.lib.Integers Make eqm_sym thm
R18933:18949 compcert.lib.Integers Make eqm_unsigned_repr thm
R18933:18949 compcert.lib.Integers Make eqm_unsigned_repr thm
R18976:18994 compcert.lib.Integers Make eqm_unsigned_repr_l thm
prf 19010:19028 Make eqm_unsigned_repr_r
R19056:19058 compcert.lib.Integers Make eqm def
R19063:19070 compcert.lib.Integers Make unsigned def
R19073:19076 compcert.lib.Integers Make repr def
R19078:19078 compcert.lib.Integers <> b var
R19060:19060 compcert.lib.Integers <> a var
R19045:19047 compcert.lib.Integers Make eqm def
R19051:19051 compcert.lib.Integers <> b var
R19049:19049 compcert.lib.Integers <> a var
R19106:19114 compcert.lib.Integers Make eqm_trans thm
R19106:19114 compcert.lib.Integers Make eqm_trans thm
R19138:19154 compcert.lib.Integers Make eqm_unsigned_repr thm
R19138:19154 compcert.lib.Integers Make eqm_unsigned_repr thm
R19176:19194 compcert.lib.Integers Make eqm_unsigned_repr_r thm
prf 19210:19228 Make eqm_signed_unsigned
R19243:19245 compcert.lib.Integers Make eqm def
R19259:19266 compcert.lib.Integers Make unsigned def
R19268:19268 compcert.lib.Integers <> x var
R19248:19253 compcert.lib.Integers Make signed def
R19255:19255 compcert.lib.Integers <> x var
R19301:19306 compcert.lib.Integers Make signed def
R19319:19326 compcert.lib.Integers Make unsigned def
R19319:19326 compcert.lib.Integers Make unsigned def
R19340:19342 compcert.lib.Coqlib <> zlt def
R19346:19357 compcert.lib.Integers Make half_modulus def
R19340:19342 compcert.lib.Coqlib <> zlt def
R19346:19357 compcert.lib.Integers Make half_modulus def
R19376:19385 compcert.lib.Integers Make eqmod_refl thm
R19376:19385 compcert.lib.Integers Make eqmod_refl thm
prf 19427:19440 Make unsigned_range
R19456:19459 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R19470:19472 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R19460:19467 compcert.lib.Integers Make unsigned def
R19469:19469 compcert.lib.Integers <> i var
R19460:19467 compcert.lib.Integers Make unsigned def
R19469:19469 compcert.lib.Integers <> i var
R19473:19479 compcert.lib.Integers Make modulus def
R19535:19548 compcert.lib.Integers Make unsigned_range thm
prf 19566:19581 Make unsigned_range_2
R19597:19600 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R19611:19614 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R19601:19608 compcert.lib.Integers Make unsigned def
R19610:19610 compcert.lib.Integers <> i var
R19601:19608 compcert.lib.Integers Make unsigned def
R19610:19610 compcert.lib.Integers <> i var
R19615:19626 compcert.lib.Integers Make max_unsigned def
R19652:19663 compcert.lib.Integers Make max_unsigned def
R19681:19694 compcert.lib.Integers Make unsigned_range thm
R19681:19694 compcert.lib.Integers Make unsigned_range thm
R19725:19740 compcert.lib.Integers Make unsigned_range_2 thm
prf 19758:19769 Make signed_range
R19794:19797 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R19806:19809 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R19784:19793 compcert.lib.Integers Make min_signed def
R19798:19803 compcert.lib.Integers Make signed def
R19805:19805 compcert.lib.Integers <> i var
R19798:19803 compcert.lib.Integers Make signed def
R19805:19805 compcert.lib.Integers <> i var
R19810:19819 compcert.lib.Integers Make max_signed def
R19846:19851 compcert.lib.Integers Make signed def
R19869:19882 compcert.lib.Integers Make unsigned_range thm
R19869:19882 compcert.lib.Integers Make unsigned_range thm
R19898:19905 compcert.lib.Integers Make unsigned def
R19898:19905 compcert.lib.Integers Make unsigned def
R19927:19929 compcert.lib.Coqlib <> zlt def
R19933:19944 compcert.lib.Integers Make half_modulus def
R19927:19929 compcert.lib.Coqlib <> zlt def
R19933:19944 compcert.lib.Integers Make half_modulus def
R19964:19973 compcert.lib.Integers Make max_signed def
R19987:20000 compcert.lib.Integers Make min_signed_neg thm
R19987:20000 compcert.lib.Integers Make min_signed_neg thm
R20019:20028 compcert.lib.Integers Make min_signed def
R20031:20040 compcert.lib.Integers Make max_signed def
R20053:20072 compcert.lib.Integers Make half_modulus_modulus thm
R20053:20072 compcert.lib.Integers Make half_modulus_modulus thm
prf 20104:20116 Make repr_unsigned
R20148:20150 Coq.Init.Logic <> :type_scope:x_'='_x not
R20131:20134 compcert.lib.Integers Make repr def
R20137:20144 compcert.lib.Integers Make unsigned def
R20146:20146 compcert.lib.Integers <> i var
R20151:20151 compcert.lib.Integers <> i var
R20189:20192 compcert.lib.Integers Make repr def
R20201:20208 compcert.lib.Integers Make mkint_eq thm
R20201:20208 compcert.lib.Integers Make mkint_eq thm
R20221:20236 compcert.lib.Integers Make Z_mod_modulus_eq thm
R20221:20236 compcert.lib.Integers Make Z_mod_modulus_eq thm
R20245:20254 compcert.lib.Coqlib <> Zmod_small thm
R20245:20254 compcert.lib.Coqlib <> Zmod_small thm
R20282:20294 compcert.lib.Integers Make repr_unsigned thm
prf 20310:20320 Make repr_signed
R20350:20352 Coq.Init.Logic <> :type_scope:x_'='_x not
R20335:20338 compcert.lib.Integers Make repr def
R20341:20346 compcert.lib.Integers Make signed def
R20348:20348 compcert.lib.Integers <> i var
R20353:20353 compcert.lib.Integers <> i var
R20387:20390 compcert.lib.Integers Make repr def
R20393:20400 compcert.lib.Integers Make unsigned def
R20387:20390 compcert.lib.Integers Make repr def
R20393:20400 compcert.lib.Integers Make unsigned def
R20416:20427 compcert.lib.Integers Make eqm_samerepr thm
R20416:20427 compcert.lib.Integers Make eqm_samerepr thm
R20436:20454 compcert.lib.Integers Make eqm_signed_unsigned thm
R20436:20454 compcert.lib.Integers Make eqm_signed_unsigned thm
R20491:20501 compcert.lib.Integers Make repr_signed thm
R20518:20521 compcert.lib.Integers Make repr def
prf 20531:20541 Make eqm_repr_eq
R20584:20586 Coq.Init.Logic <> :type_scope:x_'='_x not
R20578:20581 compcert.lib.Integers Make repr def
R20583:20583 compcert.lib.Integers <> x var
R20587:20587 compcert.lib.Integers <> y var
R20556:20558 compcert.lib.Integers Make eqm def
R20563:20570 compcert.lib.Integers Make unsigned def
R20572:20572 compcert.lib.Integers <> y var
R20560:20560 compcert.lib.Integers <> x var
R20619:20631 compcert.lib.Integers Make repr_unsigned thm
R20619:20631 compcert.lib.Integers Make repr_unsigned thm
R20643:20654 compcert.lib.Integers Make eqm_samerepr thm
R20643:20654 compcert.lib.Integers Make eqm_samerepr thm
prf 20677:20689 Make unsigned_repr
R20747:20749 Coq.Init.Logic <> :type_scope:x_'='_x not
R20730:20737 compcert.lib.Integers Make unsigned def
R20740:20743 compcert.lib.Integers Make repr def
R20745:20745 compcert.lib.Integers <> z var
R20750:20750 compcert.lib.Integers <> z var
R20705:20708 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20710:20713 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20709:20709 compcert.lib.Integers <> z var
R20709:20709 compcert.lib.Integers <> z var
R20714:20725 compcert.lib.Integers Make max_unsigned def
R20778:20793 compcert.lib.Integers Make unsigned_repr_eq thm
R20778:20793 compcert.lib.Integers Make unsigned_repr_eq thm
R20805:20814 compcert.lib.Coqlib <> Zmod_small thm
R20805:20814 compcert.lib.Coqlib <> Zmod_small thm
R20824:20835 compcert.lib.Integers Make max_unsigned def
R20868:20880 compcert.lib.Integers Make unsigned_repr thm
prf 20898:20908 Make signed_repr
R20971:20973 Coq.Init.Logic <> :type_scope:x_'='_x not
R20956:20961 compcert.lib.Integers Make signed def
R20964:20967 compcert.lib.Integers Make repr def
R20969:20969 compcert.lib.Integers <> z var
R20974:20974 compcert.lib.Integers <> z var
R20933:20936 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20938:20941 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R20923:20932 compcert.lib.Integers Make min_signed def
R20937:20937 compcert.lib.Integers <> z var
R20937:20937 compcert.lib.Integers <> z var
R20942:20951 compcert.lib.Integers Make max_signed def
R21001:21006 compcert.lib.Integers Make signed def
R21019:21021 compcert.lib.Coqlib <> zle def
R21019:21021 compcert.lib.Coqlib <> zle def
R21040:21047 compcert.lib.Integers Make unsigned def
R21050:21053 compcert.lib.Integers Make repr def
R21040:21047 compcert.lib.Integers Make unsigned def
R21050:21053 compcert.lib.Integers Make repr def
R21077:21084 compcert.lib.Coqlib <> zlt_true thm
R21077:21084 compcert.lib.Coqlib <> zlt_true thm
R21100:21109 compcert.lib.Integers Make max_signed def
R21142:21154 compcert.lib.Integers Make unsigned_repr thm
R21142:21154 compcert.lib.Integers Make unsigned_repr thm
R21168:21186 compcert.lib.Integers Make max_signed_unsigned thm
R21168:21186 compcert.lib.Integers Make max_signed_unsigned thm
R21212:21214 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21215:21221 compcert.lib.Integers Make modulus def
R21212:21214 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R21215:21221 compcert.lib.Integers Make modulus def
R21236:21239 compcert.lib.Integers Make repr def
R21250:21253 compcert.lib.Integers Make repr def
R21250:21253 compcert.lib.Integers Make repr def
R21236:21239 compcert.lib.Integers Make repr def
R21271:21278 compcert.lib.Integers Make unsigned def
R21281:21284 compcert.lib.Integers Make repr def
R21271:21278 compcert.lib.Integers Make unsigned def
R21281:21284 compcert.lib.Integers Make repr def
R21310:21318 compcert.lib.Coqlib <> zlt_false thm
R21310:21318 compcert.lib.Coqlib <> zlt_false thm
R21359:21368 compcert.lib.Integers Make min_signed def
R21386:21405 compcert.lib.Integers Make half_modulus_modulus thm
R21386:21405 compcert.lib.Integers Make half_modulus_modulus thm
R21434:21446 compcert.lib.Integers Make unsigned_repr thm
R21434:21446 compcert.lib.Integers Make unsigned_repr thm
R21462:21473 compcert.lib.Integers Make max_unsigned def
R21483:21492 compcert.lib.Integers Make min_signed def
R21495:21504 compcert.lib.Integers Make max_signed def
R21522:21541 compcert.lib.Integers Make half_modulus_modulus thm
R21522:21541 compcert.lib.Integers Make half_modulus_modulus thm
R21560:21571 compcert.lib.Integers Make eqm_samerepr thm
R21560:21571 compcert.lib.Integers Make eqm_samerepr thm
prf 21621:21638 Make signed_eq_unsigned
R21689:21691 Coq.Init.Logic <> :type_scope:x_'='_x not
R21681:21686 compcert.lib.Integers Make signed def
R21688:21688 compcert.lib.Integers <> x var
R21692:21699 compcert.lib.Integers Make unsigned def
R21701:21701 compcert.lib.Integers <> x var
R21663:21666 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R21653:21660 compcert.lib.Integers Make unsigned def
R21662:21662 compcert.lib.Integers <> x var
R21667:21676 compcert.lib.Integers Make max_signed def
R21728:21733 compcert.lib.Integers Make signed def
R21746:21748 compcert.lib.Coqlib <> zlt def
R21763:21774 compcert.lib.Integers Make half_modulus def
R21751:21758 compcert.lib.Integers Make unsigned def
R21746:21748 compcert.lib.Coqlib <> zlt def
R21763:21774 compcert.lib.Integers Make half_modulus def
R21751:21758 compcert.lib.Integers Make unsigned def
R21793:21802 compcert.lib.Integers Make max_signed def
prf 21844:21858 Make signed_positive
R21886:21890 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21881:21884 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R21873:21878 compcert.lib.Integers Make signed def
R21880:21880 compcert.lib.Integers <> x var
R21901:21904 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R21891:21898 compcert.lib.Integers Make unsigned def
R21900:21900 compcert.lib.Integers <> x var
R21905:21914 compcert.lib.Integers Make max_signed def
R21941:21946 compcert.lib.Integers Make signed def
R21949:21958 compcert.lib.Integers Make max_signed def
R21975:21988 compcert.lib.Integers Make unsigned_range thm
R21993:22012 compcert.lib.Integers Make half_modulus_modulus thm
R22014:22029 compcert.lib.Integers Make half_modulus_pos thm
R21975:21988 compcert.lib.Integers Make unsigned_range thm
R21993:22012 compcert.lib.Integers Make half_modulus_modulus thm
R22014:22029 compcert.lib.Integers Make half_modulus_pos thm
R22052:22054 compcert.lib.Coqlib <> zlt def
R22069:22080 compcert.lib.Integers Make half_modulus def
R22057:22064 compcert.lib.Integers Make unsigned def
R22052:22054 compcert.lib.Coqlib <> zlt def
R22069:22080 compcert.lib.Integers Make half_modulus def
R22057:22064 compcert.lib.Integers Make unsigned def
prf 22151:22163 Make unsigned_zero
R22179:22181 Coq.Init.Logic <> :type_scope:x_'='_x not
R22166:22173 compcert.lib.Integers Make unsigned def
R22175:22178 compcert.lib.Integers Make zero def
R22201:22204 compcert.lib.Integers Make zero def
R22215:22230 compcert.lib.Integers Make unsigned_repr_eq thm
R22215:22230 compcert.lib.Integers Make unsigned_repr_eq thm
R22239:22246 Coq.ZArith.Zdiv <> Zmod_0_l thm
R22239:22246 Coq.ZArith.Zdiv <> Zmod_0_l thm
prf 22263:22274 Make unsigned_one
R22289:22291 Coq.Init.Logic <> :type_scope:x_'='_x not
R22277:22284 compcert.lib.Integers Make unsigned def
R22286:22288 compcert.lib.Integers Make one def
R22311:22313 compcert.lib.Integers Make one def
R22324:22339 compcert.lib.Integers Make unsigned_repr_eq thm
R22324:22339 compcert.lib.Integers Make unsigned_repr_eq thm
R22348:22357 compcert.lib.Coqlib <> Zmod_small thm
R22348:22357 compcert.lib.Coqlib <> Zmod_small thm
R22384:22390 compcert.lib.Integers Make modulus def
R22401:22408 compcert.lib.Integers Make wordsize def
R22416:22416 Coq.Init.Datatypes <> S constr
R22418:22421 Coq.Init.Peano <> pred def
R22423:22430 compcert.lib.Integers Make wordsize def
R22416:22416 Coq.Init.Datatypes <> S constr
R22418:22421 Coq.Init.Peano <> pred def
R22423:22430 compcert.lib.Integers Make wordsize def
R22401:22408 compcert.lib.Integers Make wordsize def
R22446:22460 Coq.ZArith.Zpower <> two_power_nat_S thm
R22446:22460 Coq.ZArith.Zpower <> two_power_nat_S thm
R22475:22491 compcert.lib.Coqlib <> two_power_nat_pos thm
R22494:22497 Coq.Init.Peano <> pred def
R22499:22506 compcert.lib.Integers Make wordsize def
R22475:22491 compcert.lib.Coqlib <> two_power_nat_pos thm
R22494:22497 Coq.Init.Peano <> pred def
R22499:22506 compcert.lib.Integers Make wordsize def
R22534:22545 compcert.lib.Integers Make wordsize_pos thm
R22534:22545 compcert.lib.Integers Make wordsize_pos thm
R22555:22563 compcert.lib.Integers Make zwordsize def
prf 22588:22600 Make unsigned_mone
R22616:22618 Coq.Init.Logic <> :type_scope:x_'='_x not
R22603:22610 compcert.lib.Integers Make unsigned def
R22612:22615 compcert.lib.Integers Make mone def
R22626:22628 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R22619:22625 compcert.lib.Integers Make modulus def
R22648:22651 compcert.lib.Integers Make mone def
R22662:22677 compcert.lib.Integers Make unsigned_repr_eq thm
R22662:22677 compcert.lib.Integers Make unsigned_repr_eq thm
R22702:22702 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22714:22717 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22710:22712 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R22703:22709 compcert.lib.Integers Make modulus def
R22718:22718 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R22721:22724 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R22725:22731 compcert.lib.Integers Make modulus def
R22702:22702 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22714:22717 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22710:22712 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R22703:22709 compcert.lib.Integers Make modulus def
R22718:22718 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R22721:22724 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R22725:22731 compcert.lib.Integers Make modulus def
R22745:22759 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R22745:22759 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R22768:22777 compcert.lib.Coqlib <> Zmod_small thm
R22768:22777 compcert.lib.Coqlib <> Zmod_small thm
R22793:22803 compcert.lib.Integers Make modulus_pos thm
R22793:22803 compcert.lib.Integers Make modulus_pos thm
prf 22834:22844 Make signed_zero
R22858:22860 Coq.Init.Logic <> :type_scope:x_'='_x not
R22847:22852 compcert.lib.Integers Make signed def
R22854:22857 compcert.lib.Integers Make zero def
R22880:22885 compcert.lib.Integers Make signed def
R22896:22908 compcert.lib.Integers Make unsigned_zero thm
R22896:22908 compcert.lib.Integers Make unsigned_zero thm
R22917:22924 compcert.lib.Coqlib <> zlt_true thm
R22917:22924 compcert.lib.Coqlib <> zlt_true thm
R22938:22953 compcert.lib.Integers Make half_modulus_pos thm
R22938:22953 compcert.lib.Integers Make half_modulus_pos thm
prf 22977:22987 Make signed_mone
R23001:23003 Coq.Init.Logic <> :type_scope:x_'='_x not
R22990:22995 compcert.lib.Integers Make signed def
R22997:23000 compcert.lib.Integers Make mone def
R23024:23029 compcert.lib.Integers Make signed def
R23040:23052 compcert.lib.Integers Make unsigned_mone thm
R23040:23052 compcert.lib.Integers Make unsigned_mone thm
R23065:23073 compcert.lib.Coqlib <> zlt_false thm
R23065:23073 compcert.lib.Coqlib <> zlt_false thm
R23093:23112 compcert.lib.Integers Make half_modulus_modulus thm
R23093:23112 compcert.lib.Integers Make half_modulus_modulus thm
R23126:23141 compcert.lib.Integers Make half_modulus_pos thm
R23126:23141 compcert.lib.Integers Make half_modulus_pos thm
prf 23167:23178 Make one_not_zero
R23184:23187 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R23181:23183 compcert.lib.Integers Make one def
R23188:23191 compcert.lib.Integers Make zero def
R23223:23226 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R23211:23218 compcert.lib.Integers Make unsigned def
R23220:23222 compcert.lib.Integers Make one def
R23227:23234 compcert.lib.Integers Make unsigned def
R23236:23239 compcert.lib.Integers Make zero def
R23223:23226 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R23211:23218 compcert.lib.Integers Make unsigned def
R23220:23222 compcert.lib.Integers Make one def
R23227:23234 compcert.lib.Integers Make unsigned def
R23236:23239 compcert.lib.Integers Make zero def
R23254:23265 compcert.lib.Integers Make unsigned_one thm
R23276:23288 compcert.lib.Integers Make unsigned_zero thm
R23254:23265 compcert.lib.Integers Make unsigned_one thm
R23276:23288 compcert.lib.Integers Make unsigned_zero thm
prf 23331:23352 Make unsigned_repr_wordsize
R23375:23377 Coq.Init.Logic <> :type_scope:x_'='_x not
R23357:23364 compcert.lib.Integers Make unsigned def
R23366:23374 compcert.lib.Integers Make iwordsize def
R23378:23386 compcert.lib.Integers Make zwordsize def
R23405:23413 compcert.lib.Integers Make iwordsize def
R23424:23439 compcert.lib.Integers Make unsigned_repr_eq thm
R23424:23439 compcert.lib.Integers Make unsigned_repr_eq thm
R23448:23457 compcert.lib.Coqlib <> Zmod_small thm
R23448:23457 compcert.lib.Coqlib <> Zmod_small thm
R23474:23485 compcert.lib.Integers Make wordsize_pos thm
R23487:23507 compcert.lib.Integers Make wordsize_max_unsigned thm
R23517:23528 compcert.lib.Integers Make max_unsigned def
R23474:23485 compcert.lib.Integers Make wordsize_pos thm
R23487:23507 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 23586:23591 Make eq_sym
R23614:23616 Coq.Init.Logic <> :type_scope:x_'='_x not
R23608:23609 compcert.lib.Integers Make eq def
R23613:23613 compcert.lib.Integers <> y var
R23611:23611 compcert.lib.Integers <> x var
R23617:23618 compcert.lib.Integers Make eq def
R23622:23622 compcert.lib.Integers <> x var
R23620:23620 compcert.lib.Integers <> y var
R23649:23650 compcert.lib.Integers Make eq def
R23659:23661 compcert.lib.Coqlib <> zeq def
R23677:23684 compcert.lib.Integers Make unsigned def
R23664:23671 compcert.lib.Integers Make unsigned def
R23659:23661 compcert.lib.Coqlib <> zeq def
R23677:23684 compcert.lib.Integers Make unsigned def
R23664:23671 compcert.lib.Integers Make unsigned def
R23719:23726 compcert.lib.Coqlib <> zeq_true thm
R23719:23726 compcert.lib.Coqlib <> zeq_true thm
R23745:23753 compcert.lib.Coqlib <> zeq_false thm
R23745:23753 compcert.lib.Coqlib <> zeq_false thm
prf 23782:23788 Make eq_spec
R23804:23806 compcert.lib.Integers Make int rec
R23813:23814 compcert.lib.Integers Make eq def
R23818:23818 compcert.lib.Integers <> y var
R23816:23816 compcert.lib.Integers <> x var
R23837:23840 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R23836:23836 compcert.lib.Integers <> x var
R23841:23841 compcert.lib.Integers <> y var
R23826:23828 Coq.Init.Logic <> :type_scope:x_'='_x not
R23825:23825 compcert.lib.Integers <> x var
R23829:23829 compcert.lib.Integers <> y var
R23868:23869 compcert.lib.Integers Make eq def
R23878:23883 compcert.lib.Integers Make eq_dec thm
R23878:23883 compcert.lib.Integers Make eq_dec thm
R23917:23924 compcert.lib.Coqlib <> zeq_true thm
R23917:23924 compcert.lib.Coqlib <> zeq_true thm
R23943:23951 compcert.lib.Coqlib <> zeq_false thm
R23943:23951 compcert.lib.Coqlib <> zeq_false thm
R24022:24029 compcert.lib.Integers Make mkint_eq thm
R24022:24029 compcert.lib.Integers Make mkint_eq thm
prf 24052:24058 Make eq_true
R24077:24079 Coq.Init.Logic <> :type_scope:x_'='_x not
R24071:24072 compcert.lib.Integers Make eq def
R24076:24076 compcert.lib.Integers <> x var
R24074:24074 compcert.lib.Integers <> x var
R24080:24083 Coq.Init.Datatypes <> true constr
R24115:24121 compcert.lib.Integers Make eq_spec thm
R24135:24136 compcert.lib.Integers Make eq def
R24115:24121 compcert.lib.Integers Make eq_spec thm
R24135:24136 compcert.lib.Integers Make eq def
prf 24178:24185 Make eq_false
R24216:24218 Coq.Init.Logic <> :type_scope:x_'='_x not
R24210:24211 compcert.lib.Integers Make eq def
R24215:24215 compcert.lib.Integers <> y var
R24213:24213 compcert.lib.Integers <> x var
R24219:24223 Coq.Init.Datatypes <> false constr
R24201:24204 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R24200:24200 compcert.lib.Integers <> x var
R24205:24205 compcert.lib.Integers <> y var
R24255:24261 compcert.lib.Integers Make eq_spec thm
R24275:24276 compcert.lib.Integers Make eq def
R24255:24261 compcert.lib.Integers Make eq_spec thm
R24275:24276 compcert.lib.Integers Make eq def
prf 24318:24326 Make eq_signed
R24349:24351 Coq.Init.Logic <> :type_scope:x_'='_x not
R24343:24344 compcert.lib.Integers Make eq def
R24348:24348 compcert.lib.Integers <> y var
R24346:24346 compcert.lib.Integers <> x var
R24355:24357 compcert.lib.Coqlib <> zeq def
R24371:24376 compcert.lib.Integers Make signed def
R24378:24378 compcert.lib.Integers <> y var
R24360:24365 compcert.lib.Integers Make signed def
R24367:24367 compcert.lib.Integers <> x var
R24396:24400 Coq.Init.Datatypes <> false constr
R24386:24389 Coq.Init.Datatypes <> true constr
R24432:24438 compcert.lib.Integers Make eq_spec thm
R24429:24430 compcert.lib.Integers Make eq def
R24465:24472 compcert.lib.Coqlib <> zeq_true thm
R24465:24472 compcert.lib.Coqlib <> zeq_true thm
R24494:24496 compcert.lib.Coqlib <> zeq def
R24510:24515 compcert.lib.Integers Make signed def
R24499:24504 compcert.lib.Integers Make signed def
R24494:24496 compcert.lib.Coqlib <> zeq def
R24510:24515 compcert.lib.Integers Make signed def
R24499:24504 compcert.lib.Integers Make signed def
R24550:24560 compcert.lib.Integers Make repr_signed thm
R24550:24560 compcert.lib.Integers Make repr_signed thm
R24578:24588 compcert.lib.Integers Make repr_signed thm
R24578:24588 compcert.lib.Integers Make repr_signed thm
prf 24655:24666 Make add_unsigned
R24688:24690 Coq.Init.Logic <> :type_scope:x_'='_x not
R24681:24683 compcert.lib.Integers Make add def
R24687:24687 compcert.lib.Integers <> y var
R24685:24685 compcert.lib.Integers <> x var
R24691:24694 compcert.lib.Integers Make repr def
R24707:24709 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R24697:24704 compcert.lib.Integers Make unsigned def
R24706:24706 compcert.lib.Integers <> x var
R24710:24717 compcert.lib.Integers Make unsigned def
R24719:24719 compcert.lib.Integers <> y var
prf 24765:24774 Make add_signed
R24796:24798 Coq.Init.Logic <> :type_scope:x_'='_x not
R24789:24791 compcert.lib.Integers Make add def
R24795:24795 compcert.lib.Integers <> y var
R24793:24793 compcert.lib.Integers <> x var
R24799:24802 compcert.lib.Integers Make repr def
R24813:24815 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R24805:24810 compcert.lib.Integers Make signed def
R24812:24812 compcert.lib.Integers <> x var
R24816:24821 compcert.lib.Integers Make signed def
R24823:24823 compcert.lib.Integers <> y var
R24853:24864 compcert.lib.Integers Make add_unsigned thm
R24853:24864 compcert.lib.Integers Make add_unsigned thm
R24873:24884 compcert.lib.Integers Make eqm_samerepr thm
R24873:24884 compcert.lib.Integers Make eqm_samerepr thm
R24895:24901 compcert.lib.Integers Make eqm_add thm
R24910:24916 compcert.lib.Integers Make eqm_sym thm
R24925:24943 compcert.lib.Integers Make eqm_signed_unsigned thm
R24895:24901 compcert.lib.Integers Make eqm_add thm
R24910:24916 compcert.lib.Integers Make eqm_sym thm
R24910:24916 compcert.lib.Integers Make eqm_sym thm
R24925:24943 compcert.lib.Integers Make eqm_signed_unsigned thm
R24925:24943 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 24960:24969 Make add_commut
R24991:24993 Coq.Init.Logic <> :type_scope:x_'='_x not
R24984:24986 compcert.lib.Integers Make add def
R24990:24990 compcert.lib.Integers <> y var
R24988:24988 compcert.lib.Integers <> x var
R24994:24996 compcert.lib.Integers Make add def
R25000:25000 compcert.lib.Integers <> x var
R24998:24998 compcert.lib.Integers <> y var
R25025:25027 compcert.lib.Integers Make add def
prf 25058:25065 Make add_zero
R25088:25090 Coq.Init.Logic <> :type_scope:x_'='_x not
R25078:25080 compcert.lib.Integers Make add def
R25084:25087 compcert.lib.Integers Make zero def
R25082:25082 compcert.lib.Integers <> x var
R25091:25091 compcert.lib.Integers <> x var
R25118:25120 compcert.lib.Integers Make add def
R25131:25143 compcert.lib.Integers Make unsigned_zero thm
R25131:25143 compcert.lib.Integers Make unsigned_zero thm
R25156:25164 Coq.ZArith.BinInt <> Zplus_0_r syndef
R25156:25164 Coq.ZArith.BinInt <> Zplus_0_r syndef
R25173:25185 compcert.lib.Integers Make repr_unsigned thm
R25173:25185 compcert.lib.Integers Make repr_unsigned thm
prf 25202:25211 Make add_zero_l
R25234:25236 Coq.Init.Logic <> :type_scope:x_'='_x not
R25224:25226 compcert.lib.Integers Make add def
R25233:25233 compcert.lib.Integers <> x var
R25228:25231 compcert.lib.Integers Make zero def
R25237:25237 compcert.lib.Integers <> x var
R25265:25274 compcert.lib.Integers Make add_commut thm
R25265:25274 compcert.lib.Integers Make add_commut thm
R25283:25290 compcert.lib.Integers Make add_zero thm
R25283:25290 compcert.lib.Integers Make add_zero thm
prf 25307:25315 Make add_assoc
R25347:25349 Coq.Init.Logic <> :type_scope:x_'='_x not
R25332:25334 compcert.lib.Integers Make add def
R25346:25346 compcert.lib.Integers <> z var
R25337:25339 compcert.lib.Integers Make add def
R25343:25343 compcert.lib.Integers <> y var
R25341:25341 compcert.lib.Integers <> x var
R25350:25352 compcert.lib.Integers Make add def
R25357:25359 compcert.lib.Integers Make add def
R25363:25363 compcert.lib.Integers <> z var
R25361:25361 compcert.lib.Integers <> y var
R25354:25354 compcert.lib.Integers <> x var
R25391:25393 compcert.lib.Integers Make add def
R25409:25416 compcert.lib.Integers Make unsigned def
R25409:25416 compcert.lib.Integers Make unsigned def
R25435:25442 compcert.lib.Integers Make unsigned def
R25435:25442 compcert.lib.Integers Make unsigned def
R25461:25468 compcert.lib.Integers Make unsigned def
R25461:25468 compcert.lib.Integers Make unsigned def
R25482:25493 compcert.lib.Integers Make eqm_samerepr thm
R25482:25493 compcert.lib.Integers Make eqm_samerepr thm
R25521:25521 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25529:25532 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25524:25526 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25505:25513 compcert.lib.Integers Make eqm_trans thm
R25521:25521 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25529:25532 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25524:25526 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25505:25513 compcert.lib.Integers Make eqm_trans thm
R25569:25579 Coq.ZArith.BinInt <> Zplus_assoc syndef
R25569:25579 Coq.ZArith.BinInt <> Zplus_assoc syndef
prf 25612:25621 Make add_permut
R25653:25655 Coq.Init.Logic <> :type_scope:x_'='_x not
R25638:25640 compcert.lib.Integers Make add def
R25645:25647 compcert.lib.Integers Make add def
R25651:25651 compcert.lib.Integers <> z var
R25649:25649 compcert.lib.Integers <> y var
R25642:25642 compcert.lib.Integers <> x var
R25656:25658 compcert.lib.Integers Make add def
R25663:25665 compcert.lib.Integers Make add def
R25669:25669 compcert.lib.Integers <> z var
R25667:25667 compcert.lib.Integers <> x var
R25660:25660 compcert.lib.Integers <> y var
R25699:25708 compcert.lib.Integers Make add_commut thm
R25699:25708 compcert.lib.Integers Make add_commut thm
R25727:25735 compcert.lib.Integers Make add_assoc thm
R25727:25735 compcert.lib.Integers Make add_assoc thm
R25744:25753 compcert.lib.Integers Make add_commut thm
R25744:25753 compcert.lib.Integers Make add_commut thm
prf 25771:25782 Make add_neg_zero
R25808:25810 Coq.Init.Logic <> :type_scope:x_'='_x not
R25795:25797 compcert.lib.Integers Make add def
R25802:25804 compcert.lib.Integers Make neg def
R25806:25806 compcert.lib.Integers <> x var
R25799:25799 compcert.lib.Integers <> x var
R25811:25814 compcert.lib.Integers Make zero def
R25841:25843 compcert.lib.Integers Make add def
R25846:25848 compcert.lib.Integers Make neg def
R25851:25854 compcert.lib.Integers Make zero def
R25863:25874 compcert.lib.Integers Make eqm_samerepr thm
R25863:25874 compcert.lib.Integers Make eqm_samerepr thm
R25905:25908 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25923:25923 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25895:25902 compcert.lib.Integers Make unsigned def
R25909:25911 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R25922:25922 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R25912:25919 compcert.lib.Integers Make unsigned def
R25905:25908 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25923:25923 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25895:25902 compcert.lib.Integers Make unsigned def
R25909:25911 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R25922:25922 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R25912:25919 compcert.lib.Integers Make unsigned def
prf 25966:25983 Make unsigned_add_carry
R26020:26022 Coq.Init.Logic <> :type_scope:x_'='_x not
R26002:26009 compcert.lib.Integers Make unsigned def
R26012:26014 compcert.lib.Integers Make add def
R26018:26018 compcert.lib.Integers <> y var
R26016:26016 compcert.lib.Integers <> x var
R26046:26048 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R26033:26035 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26023:26030 compcert.lib.Integers Make unsigned def
R26032:26032 compcert.lib.Integers <> x var
R26036:26043 compcert.lib.Integers Make unsigned def
R26045:26045 compcert.lib.Integers <> y var
R26078:26080 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R26049:26056 compcert.lib.Integers Make unsigned def
R26059:26067 compcert.lib.Integers Make add_carry def
R26073:26076 compcert.lib.Integers Make zero def
R26071:26071 compcert.lib.Integers <> y var
R26069:26069 compcert.lib.Integers <> x var
R26081:26087 compcert.lib.Integers Make modulus def
R26116:26118 compcert.lib.Integers Make add def
R26121:26129 compcert.lib.Integers Make add_carry def
R26140:26152 compcert.lib.Integers Make unsigned_zero thm
R26140:26152 compcert.lib.Integers Make unsigned_zero thm
R26163:26171 Coq.ZArith.BinInt <> Zplus_0_r syndef
R26163:26171 Coq.ZArith.BinInt <> Zplus_0_r syndef
R26184:26199 compcert.lib.Integers Make unsigned_repr_eq thm
R26184:26199 compcert.lib.Integers Make unsigned_repr_eq thm
R26216:26229 compcert.lib.Integers Make unsigned_range thm
R26235:26248 compcert.lib.Integers Make unsigned_range thm
R26216:26229 compcert.lib.Integers Make unsigned_range thm
R26235:26248 compcert.lib.Integers Make unsigned_range thm
R26275:26277 compcert.lib.Coqlib <> zlt def
R26305:26311 compcert.lib.Integers Make modulus def
R26290:26292 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26280:26287 compcert.lib.Integers Make unsigned def
R26293:26300 compcert.lib.Integers Make unsigned def
R26275:26277 compcert.lib.Coqlib <> zlt def
R26305:26311 compcert.lib.Integers Make modulus def
R26290:26292 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26280:26287 compcert.lib.Integers Make unsigned def
R26293:26300 compcert.lib.Integers Make unsigned def
R26325:26337 compcert.lib.Integers Make unsigned_zero thm
R26325:26337 compcert.lib.Integers Make unsigned_zero thm
R26346:26356 compcert.lib.Coqlib <> Zmod_unique thm
R26346:26356 compcert.lib.Coqlib <> Zmod_unique thm
R26391:26402 compcert.lib.Integers Make unsigned_one thm
R26391:26402 compcert.lib.Integers Make unsigned_one thm
R26411:26421 compcert.lib.Coqlib <> Zmod_unique thm
R26411:26421 compcert.lib.Coqlib <> Zmod_unique thm
prf 26463:26481 Make unsigned_add_either
R26544:26549 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R26518:26520 Coq.Init.Logic <> :type_scope:x_'='_x not
R26500:26507 compcert.lib.Integers Make unsigned def
R26510:26512 compcert.lib.Integers Make add def
R26516:26516 compcert.lib.Integers <> y var
R26514:26514 compcert.lib.Integers <> x var
R26531:26533 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26521:26528 compcert.lib.Integers Make unsigned def
R26530:26530 compcert.lib.Integers <> x var
R26534:26541 compcert.lib.Integers Make unsigned def
R26543:26543 compcert.lib.Integers <> y var
R26568:26570 Coq.Init.Logic <> :type_scope:x_'='_x not
R26550:26557 compcert.lib.Integers Make unsigned def
R26560:26562 compcert.lib.Integers Make add def
R26566:26566 compcert.lib.Integers <> y var
R26564:26564 compcert.lib.Integers <> x var
R26594:26596 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R26581:26583 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26571:26578 compcert.lib.Integers Make unsigned def
R26580:26580 compcert.lib.Integers <> x var
R26584:26591 compcert.lib.Integers Make unsigned def
R26593:26593 compcert.lib.Integers <> y var
R26597:26603 compcert.lib.Integers Make modulus def
R26631:26648 compcert.lib.Integers Make unsigned_add_carry thm
R26631:26648 compcert.lib.Integers Make unsigned_add_carry thm
R26658:26666 compcert.lib.Integers Make add_carry def
R26680:26692 compcert.lib.Integers Make unsigned_zero thm
R26680:26692 compcert.lib.Integers Make unsigned_zero thm
R26703:26711 Coq.ZArith.BinInt <> Zplus_0_r syndef
R26703:26711 Coq.ZArith.BinInt <> Zplus_0_r syndef
R26727:26729 compcert.lib.Coqlib <> zlt def
R26757:26763 compcert.lib.Integers Make modulus def
R26742:26744 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26732:26739 compcert.lib.Integers Make unsigned def
R26745:26752 compcert.lib.Integers Make unsigned def
R26727:26729 compcert.lib.Coqlib <> zlt def
R26757:26763 compcert.lib.Integers Make modulus def
R26742:26744 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26732:26739 compcert.lib.Integers Make unsigned def
R26745:26752 compcert.lib.Integers Make unsigned def
R26777:26789 compcert.lib.Integers Make unsigned_zero thm
R26777:26789 compcert.lib.Integers Make unsigned_zero thm
R26815:26826 compcert.lib.Integers Make unsigned_one thm
R26815:26826 compcert.lib.Integers Make unsigned_one thm
prf 26891:26898 Make neg_repr
R26923:26925 Coq.Init.Logic <> :type_scope:x_'='_x not
R26911:26913 compcert.lib.Integers Make neg def
R26916:26919 compcert.lib.Integers Make repr def
R26921:26921 compcert.lib.Integers <> z var
R26926:26929 compcert.lib.Integers Make repr def
R26932:26932 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R26933:26933 compcert.lib.Integers <> z var
R26961:26963 compcert.lib.Integers Make neg def
R26972:26983 compcert.lib.Integers Make eqm_samerepr thm
R26972:26983 compcert.lib.Integers Make eqm_samerepr thm
prf 27016:27023 Make neg_zero
R27034:27036 Coq.Init.Logic <> :type_scope:x_'='_x not
R27026:27028 compcert.lib.Integers Make neg def
R27030:27033 compcert.lib.Integers Make zero def
R27037:27040 compcert.lib.Integers Make zero def
R27059:27061 compcert.lib.Integers Make neg def
R27072:27084 compcert.lib.Integers Make unsigned_zero thm
R27072:27084 compcert.lib.Integers Make unsigned_zero thm
prf 27108:27121 Make neg_involutive
R27145:27147 Coq.Init.Logic <> :type_scope:x_'='_x not
R27134:27136 compcert.lib.Integers Make neg def
R27139:27141 compcert.lib.Integers Make neg def
R27143:27143 compcert.lib.Integers <> x var
R27148:27148 compcert.lib.Integers <> x var
R27175:27177 compcert.lib.Integers Make neg def
R27188:27198 compcert.lib.Integers Make eqm_repr_eq thm
R27188:27198 compcert.lib.Integers Make eqm_repr_eq thm
R27208:27216 compcert.lib.Integers Make eqm_trans thm
R27208:27216 compcert.lib.Integers Make eqm_trans thm
R27225:27231 compcert.lib.Integers Make eqm_neg thm
R27225:27231 compcert.lib.Integers Make eqm_neg thm
R27242:27260 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R27242:27260 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R27269:27276 compcert.lib.Integers Make eqm_refl thm
R27269:27276 compcert.lib.Integers Make eqm_refl thm
R27285:27293 compcert.lib.Integers Make eqm_refl2 thm
R27285:27293 compcert.lib.Integers Make eqm_refl2 thm
prf 27318:27330 Make neg_add_distr
R27357:27359 Coq.Init.Logic <> :type_scope:x_'='_x not
R27345:27347 compcert.lib.Integers Make neg def
R27349:27351 compcert.lib.Integers Make add def
R27355:27355 compcert.lib.Integers <> y var
R27353:27353 compcert.lib.Integers <> x var
R27360:27362 compcert.lib.Integers Make add def
R27373:27375 compcert.lib.Integers Make neg def
R27377:27377 compcert.lib.Integers <> y var
R27365:27367 compcert.lib.Integers Make neg def
R27369:27369 compcert.lib.Integers <> x var
R27405:27407 compcert.lib.Integers Make neg def
R27410:27412 compcert.lib.Integers Make add def
R27421:27432 compcert.lib.Integers Make eqm_samerepr thm
R27421:27432 compcert.lib.Integers Make eqm_samerepr thm
R27459:27461 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27485:27485 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27472:27474 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27462:27469 compcert.lib.Integers Make unsigned def
R27475:27482 compcert.lib.Integers Make unsigned def
R27443:27451 compcert.lib.Integers Make eqm_trans thm
R27459:27461 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27485:27485 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27472:27474 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27462:27469 compcert.lib.Integers Make unsigned def
R27475:27482 compcert.lib.Integers Make unsigned def
R27443:27451 compcert.lib.Integers Make eqm_trans thm
R27518:27520 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27544:27544 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27531:27533 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27521:27528 compcert.lib.Integers Make unsigned def
R27534:27541 compcert.lib.Integers Make unsigned def
R27558:27558 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27571:27575 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27588:27588 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27559:27560 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27561:27568 compcert.lib.Integers Make unsigned def
R27576:27577 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27578:27585 compcert.lib.Integers Make unsigned def
R27558:27558 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27571:27575 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27588:27588 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27559:27560 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27561:27568 compcert.lib.Integers Make unsigned def
R27576:27577 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27578:27585 compcert.lib.Integers Make unsigned def
R27518:27520 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27544:27544 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R27531:27533 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27521:27528 compcert.lib.Integers Make unsigned def
R27534:27541 compcert.lib.Integers Make unsigned def
prf 27668:27677 Make sub_zero_l
R27700:27702 Coq.Init.Logic <> :type_scope:x_'='_x not
R27690:27692 compcert.lib.Integers Make sub def
R27696:27699 compcert.lib.Integers Make zero def
R27694:27694 compcert.lib.Integers <> x var
R27703:27703 compcert.lib.Integers <> x var
R27730:27732 compcert.lib.Integers Make sub def
R27743:27755 compcert.lib.Integers Make unsigned_zero thm
R27743:27755 compcert.lib.Integers Make unsigned_zero thm
R27780:27782 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R27770:27777 compcert.lib.Integers Make unsigned def
R27792:27799 compcert.lib.Integers Make unsigned def
R27792:27799 compcert.lib.Integers Make unsigned def
R27780:27782 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R27770:27777 compcert.lib.Integers Make unsigned def
R27820:27832 compcert.lib.Integers Make repr_unsigned thm
R27820:27832 compcert.lib.Integers Make repr_unsigned thm
prf 27849:27858 Make sub_zero_r
R27881:27883 Coq.Init.Logic <> :type_scope:x_'='_x not
R27871:27873 compcert.lib.Integers Make sub def
R27880:27880 compcert.lib.Integers <> x var
R27875:27878 compcert.lib.Integers Make zero def
R27884:27886 compcert.lib.Integers Make neg def
R27888:27888 compcert.lib.Integers <> x var
R27915:27917 compcert.lib.Integers Make sub def
R27920:27922 compcert.lib.Integers Make neg def
R27933:27945 compcert.lib.Integers Make unsigned_zero thm
R27933:27945 compcert.lib.Integers Make unsigned_zero thm
prf 27968:27978 Make sub_add_opp
R28000:28002 Coq.Init.Logic <> :type_scope:x_'='_x not
R27993:27995 compcert.lib.Integers Make sub def
R27999:27999 compcert.lib.Integers <> y var
R27997:27997 compcert.lib.Integers <> x var
R28003:28005 compcert.lib.Integers Make add def
R28010:28012 compcert.lib.Integers Make neg def
R28014:28014 compcert.lib.Integers <> y var
R28007:28007 compcert.lib.Integers <> x var
R28042:28044 compcert.lib.Integers Make sub def
R28047:28049 compcert.lib.Integers Make add def
R28052:28054 compcert.lib.Integers Make neg def
R28063:28074 compcert.lib.Integers Make eqm_samerepr thm
R28063:28074 compcert.lib.Integers Make eqm_samerepr thm
R28085:28091 compcert.lib.Integers Make eqm_add thm
R28085:28091 compcert.lib.Integers Make eqm_add thm
prf 28124:28131 Make sub_idem
R28151:28153 Coq.Init.Logic <> :type_scope:x_'='_x not
R28144:28146 compcert.lib.Integers Make sub def
R28150:28150 compcert.lib.Integers <> x var
R28148:28148 compcert.lib.Integers <> x var
R28154:28157 compcert.lib.Integers Make zero def
R28184:28186 compcert.lib.Integers Make sub def
R28196:28199 compcert.lib.Integers Make zero def
prf 28230:28238 Make sub_add_l
R28270:28272 Coq.Init.Logic <> :type_scope:x_'='_x not
R28255:28257 compcert.lib.Integers Make sub def
R28269:28269 compcert.lib.Integers <> z var
R28260:28262 compcert.lib.Integers Make add def
R28266:28266 compcert.lib.Integers <> y var
R28264:28264 compcert.lib.Integers <> x var
R28273:28275 compcert.lib.Integers Make add def
R28287:28287 compcert.lib.Integers <> y var
R28278:28280 compcert.lib.Integers Make sub def
R28284:28284 compcert.lib.Integers <> z var
R28282:28282 compcert.lib.Integers <> x var
R28322:28332 compcert.lib.Integers Make sub_add_opp thm
R28322:28332 compcert.lib.Integers Make sub_add_opp thm
R28322:28332 compcert.lib.Integers Make sub_add_opp thm
R28322:28332 compcert.lib.Integers Make sub_add_opp thm
R28353:28361 compcert.lib.Integers Make add_assoc thm
R28353:28361 compcert.lib.Integers Make add_assoc thm
R28353:28361 compcert.lib.Integers Make add_assoc thm
R28353:28361 compcert.lib.Integers Make add_assoc thm
R28377:28386 compcert.lib.Integers Make add_commut thm
R28377:28386 compcert.lib.Integers Make add_commut thm
prf 28403:28411 Make sub_add_r
R28443:28445 Coq.Init.Logic <> :type_scope:x_'='_x not
R28428:28430 compcert.lib.Integers Make sub def
R28435:28437 compcert.lib.Integers Make add def
R28441:28441 compcert.lib.Integers <> z var
R28439:28439 compcert.lib.Integers <> y var
R28432:28432 compcert.lib.Integers <> x var
R28446:28448 compcert.lib.Integers Make add def
R28461:28463 compcert.lib.Integers Make neg def
R28465:28465 compcert.lib.Integers <> y var
R28451:28453 compcert.lib.Integers Make sub def
R28457:28457 compcert.lib.Integers <> z var
R28455:28455 compcert.lib.Integers <> x var
R28501:28511 compcert.lib.Integers Make sub_add_opp thm
R28501:28511 compcert.lib.Integers Make sub_add_opp thm
R28501:28511 compcert.lib.Integers Make sub_add_opp thm
R28501:28511 compcert.lib.Integers Make sub_add_opp thm
R28524:28536 compcert.lib.Integers Make neg_add_distr thm
R28524:28536 compcert.lib.Integers Make neg_add_distr thm
R28547:28556 compcert.lib.Integers Make add_permut thm
R28547:28556 compcert.lib.Integers Make add_permut thm
R28565:28574 compcert.lib.Integers Make add_commut thm
R28565:28574 compcert.lib.Integers Make add_commut thm
prf 28591:28601 Make sub_shifted
R28645:28647 Coq.Init.Logic <> :type_scope:x_'='_x not
R28622:28624 compcert.lib.Integers Make sub def
R28637:28639 compcert.lib.Integers Make add def
R28643:28643 compcert.lib.Integers <> z var
R28641:28641 compcert.lib.Integers <> y var
R28627:28629 compcert.lib.Integers Make add def
R28633:28633 compcert.lib.Integers <> z var
R28631:28631 compcert.lib.Integers <> x var
R28648:28650 compcert.lib.Integers Make sub def
R28654:28654 compcert.lib.Integers <> y var
R28652:28652 compcert.lib.Integers <> x var
R28682:28692 compcert.lib.Integers Make sub_add_opp thm
R28682:28692 compcert.lib.Integers Make sub_add_opp thm
R28703:28715 compcert.lib.Integers Make neg_add_distr thm
R28703:28715 compcert.lib.Integers Make neg_add_distr thm
R28728:28736 compcert.lib.Integers Make add_assoc thm
R28728:28736 compcert.lib.Integers Make add_assoc thm
R28751:28760 compcert.lib.Integers Make add_commut thm
R28771:28773 compcert.lib.Integers Make neg def
R28763:28765 compcert.lib.Integers Make neg def
R28751:28760 compcert.lib.Integers Make add_commut thm
R28771:28773 compcert.lib.Integers Make neg def
R28763:28765 compcert.lib.Integers Make neg def
R28794:28802 compcert.lib.Integers Make add_assoc thm
R28794:28802 compcert.lib.Integers Make add_assoc thm
R28816:28827 compcert.lib.Integers Make add_neg_zero thm
R28816:28827 compcert.lib.Integers Make add_neg_zero thm
R28841:28850 compcert.lib.Integers Make add_commut thm
R28852:28855 compcert.lib.Integers Make zero def
R28841:28850 compcert.lib.Integers Make add_commut thm
R28852:28855 compcert.lib.Integers Make zero def
R28867:28874 compcert.lib.Integers Make add_zero thm
R28867:28874 compcert.lib.Integers Make add_zero thm
R28895:28905 compcert.lib.Integers Make sub_add_opp thm
R28895:28905 compcert.lib.Integers Make sub_add_opp thm
prf 28922:28931 Make sub_signed
R28955:28957 Coq.Init.Logic <> :type_scope:x_'='_x not
R28948:28950 compcert.lib.Integers Make sub def
R28954:28954 compcert.lib.Integers <> y var
R28952:28952 compcert.lib.Integers <> x var
R28958:28961 compcert.lib.Integers Make repr def
R28972:28974 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R28964:28969 compcert.lib.Integers Make signed def
R28971:28971 compcert.lib.Integers <> x var
R28975:28980 compcert.lib.Integers Make signed def
R28982:28982 compcert.lib.Integers <> y var
R29010:29012 compcert.lib.Integers Make sub def
R29021:29032 compcert.lib.Integers Make eqm_samerepr thm
R29021:29032 compcert.lib.Integers Make eqm_samerepr thm
R29043:29049 compcert.lib.Integers Make eqm_sub thm
R29058:29064 compcert.lib.Integers Make eqm_sym thm
R29073:29091 compcert.lib.Integers Make eqm_signed_unsigned thm
R29043:29049 compcert.lib.Integers Make eqm_sub thm
R29058:29064 compcert.lib.Integers Make eqm_sym thm
R29058:29064 compcert.lib.Integers Make eqm_sym thm
R29073:29091 compcert.lib.Integers Make eqm_signed_unsigned thm
R29073:29091 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 29108:29126 Make unsigned_sub_borrow
R29163:29165 Coq.Init.Logic <> :type_scope:x_'='_x not
R29145:29152 compcert.lib.Integers Make unsigned def
R29155:29157 compcert.lib.Integers Make sub def
R29161:29161 compcert.lib.Integers <> y var
R29159:29159 compcert.lib.Integers <> x var
R29189:29191 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R29176:29178 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R29166:29173 compcert.lib.Integers Make unsigned def
R29175:29175 compcert.lib.Integers <> x var
R29179:29186 compcert.lib.Integers Make unsigned def
R29188:29188 compcert.lib.Integers <> y var
R29222:29224 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R29192:29199 compcert.lib.Integers Make unsigned def
R29202:29211 compcert.lib.Integers Make sub_borrow def
R29217:29220 compcert.lib.Integers Make zero def
R29215:29215 compcert.lib.Integers <> y var
R29213:29213 compcert.lib.Integers <> x var
R29225:29231 compcert.lib.Integers Make modulus def
R29260:29262 compcert.lib.Integers Make sub def
R29265:29274 compcert.lib.Integers Make sub_borrow def
R29285:29297 compcert.lib.Integers Make unsigned_zero thm
R29285:29297 compcert.lib.Integers Make unsigned_zero thm
R29308:29317 Coq.ZArith.BinInt <> Zminus_0_r syndef
R29308:29317 Coq.ZArith.BinInt <> Zminus_0_r syndef
R29330:29345 compcert.lib.Integers Make unsigned_repr_eq thm
R29330:29345 compcert.lib.Integers Make unsigned_repr_eq thm
R29362:29375 compcert.lib.Integers Make unsigned_range thm
R29381:29394 compcert.lib.Integers Make unsigned_range thm
R29362:29375 compcert.lib.Integers Make unsigned_range thm
R29381:29394 compcert.lib.Integers Make unsigned_range thm
R29421:29423 compcert.lib.Coqlib <> zlt def
R29436:29438 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R29426:29433 compcert.lib.Integers Make unsigned def
R29439:29446 compcert.lib.Integers Make unsigned def
R29421:29423 compcert.lib.Coqlib <> zlt def
R29436:29438 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R29426:29433 compcert.lib.Integers Make unsigned def
R29439:29446 compcert.lib.Integers Make unsigned def
R29465:29476 compcert.lib.Integers Make unsigned_one thm
R29465:29476 compcert.lib.Integers Make unsigned_one thm
R29485:29495 compcert.lib.Coqlib <> Zmod_unique thm
R29485:29495 compcert.lib.Coqlib <> Zmod_unique thm
R29533:29545 compcert.lib.Integers Make unsigned_zero thm
R29533:29545 compcert.lib.Integers Make unsigned_zero thm
R29554:29564 compcert.lib.Coqlib <> Zmod_unique thm
R29554:29564 compcert.lib.Coqlib <> Zmod_unique thm
prf 29646:29655 Make mul_commut
R29677:29679 Coq.Init.Logic <> :type_scope:x_'='_x not
R29670:29672 compcert.lib.Integers Make mul def
R29676:29676 compcert.lib.Integers <> y var
R29674:29674 compcert.lib.Integers <> x var
R29680:29682 compcert.lib.Integers Make mul def
R29686:29686 compcert.lib.Integers <> x var
R29684:29684 compcert.lib.Integers <> y var
R29713:29715 compcert.lib.Integers Make mul def
prf 29746:29753 Make mul_zero
R29776:29778 Coq.Init.Logic <> :type_scope:x_'='_x not
R29766:29768 compcert.lib.Integers Make mul def
R29772:29775 compcert.lib.Integers Make zero def
R29770:29770 compcert.lib.Integers <> x var
R29779:29782 compcert.lib.Integers Make zero def
R29809:29811 compcert.lib.Integers Make mul def
R29822:29834 compcert.lib.Integers Make unsigned_zero thm
R29822:29834 compcert.lib.Integers Make unsigned_zero thm
R29847:29850 compcert.lib.Integers Make zero def
prf 29880:29886 Make mul_one
R29908:29910 Coq.Init.Logic <> :type_scope:x_'='_x not
R29899:29901 compcert.lib.Integers Make mul def
R29905:29907 compcert.lib.Integers Make one def
R29903:29903 compcert.lib.Integers <> x var
R29911:29911 compcert.lib.Integers <> x var
R29938:29940 compcert.lib.Integers Make mul def
R29951:29962 compcert.lib.Integers Make unsigned_one thm
R29951:29962 compcert.lib.Integers Make unsigned_one thm
R29981:29984 compcert.lib.Integers Make repr def
R29987:29994 compcert.lib.Integers Make unsigned def
R29981:29984 compcert.lib.Integers Make repr def
R29987:29994 compcert.lib.Integers Make unsigned def
R30022:30034 compcert.lib.Integers Make repr_unsigned thm
R30022:30034 compcert.lib.Integers Make repr_unsigned thm
prf 30051:30058 Make mul_mone
R30081:30083 Coq.Init.Logic <> :type_scope:x_'='_x not
R30071:30073 compcert.lib.Integers Make mul def
R30077:30080 compcert.lib.Integers Make mone def
R30075:30075 compcert.lib.Integers <> x var
R30084:30086 compcert.lib.Integers Make neg def
R30088:30088 compcert.lib.Integers <> x var
R30115:30117 compcert.lib.Integers Make mul def
R30120:30122 compcert.lib.Integers Make neg def
R30133:30145 compcert.lib.Integers Make unsigned_mone thm
R30133:30145 compcert.lib.Integers Make unsigned_mone thm
R30157:30168 compcert.lib.Integers Make eqm_samerepr thm
R30157:30168 compcert.lib.Integers Make eqm_samerepr thm
R30182:30182 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R30183:30190 compcert.lib.Integers Make unsigned def
R30202:30204 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30205:30212 compcert.lib.Integers Make unsigned def
R30202:30204 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30205:30212 compcert.lib.Integers Make unsigned def
R30182:30182 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R30183:30190 compcert.lib.Integers Make unsigned def
R30248:30251 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30263:30263 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30238:30245 compcert.lib.Integers Make unsigned def
R30259:30261 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30252:30258 compcert.lib.Integers Make modulus def
R30292:30294 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30282:30284 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30272:30279 compcert.lib.Integers Make unsigned def
R30285:30291 compcert.lib.Integers Make modulus def
R30295:30302 compcert.lib.Integers Make unsigned def
R30292:30294 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30282:30284 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30272:30279 compcert.lib.Integers Make unsigned def
R30285:30291 compcert.lib.Integers Make modulus def
R30295:30302 compcert.lib.Integers Make unsigned def
R30248:30251 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30263:30263 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30238:30245 compcert.lib.Integers Make unsigned def
R30259:30261 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R30252:30258 compcert.lib.Integers Make modulus def
R30324:30330 compcert.lib.Integers Make eqm_sub thm
R30324:30330 compcert.lib.Integers Make eqm_sub thm
R30341:30348 compcert.lib.Integers Make unsigned def
R30341:30348 compcert.lib.Integers Make unsigned def
R30367:30374 compcert.lib.Integers Make eqm_refl thm
R30367:30374 compcert.lib.Integers Make eqm_refl thm
prf 30391:30399 Make mul_assoc
R30431:30433 Coq.Init.Logic <> :type_scope:x_'='_x not
R30416:30418 compcert.lib.Integers Make mul def
R30430:30430 compcert.lib.Integers <> z var
R30421:30423 compcert.lib.Integers Make mul def
R30427:30427 compcert.lib.Integers <> y var
R30425:30425 compcert.lib.Integers <> x var
R30434:30436 compcert.lib.Integers Make mul def
R30441:30443 compcert.lib.Integers Make mul def
R30447:30447 compcert.lib.Integers <> z var
R30445:30445 compcert.lib.Integers <> y var
R30438:30438 compcert.lib.Integers <> x var
R30475:30477 compcert.lib.Integers Make mul def
R30493:30500 compcert.lib.Integers Make unsigned def
R30493:30500 compcert.lib.Integers Make unsigned def
R30519:30526 compcert.lib.Integers Make unsigned def
R30519:30526 compcert.lib.Integers Make unsigned def
R30545:30552 compcert.lib.Integers Make unsigned def
R30545:30552 compcert.lib.Integers Make unsigned def
R30566:30577 compcert.lib.Integers Make eqm_samerepr thm
R30566:30577 compcert.lib.Integers Make eqm_samerepr thm
R30602:30602 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30610:30613 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30605:30607 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30586:30594 compcert.lib.Integers Make eqm_trans thm
R30602:30602 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30610:30613 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30605:30607 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30586:30594 compcert.lib.Integers Make eqm_trans thm
R30650:30660 Coq.ZArith.BinInt <> Zmult_assoc syndef
R30650:30660 Coq.ZArith.BinInt <> Zmult_assoc syndef
prf 30693:30707 Make mul_add_distr_l
R30741:30743 Coq.Init.Logic <> :type_scope:x_'='_x not
R30726:30728 compcert.lib.Integers Make mul def
R30740:30740 compcert.lib.Integers <> z var
R30731:30733 compcert.lib.Integers Make add def
R30737:30737 compcert.lib.Integers <> y var
R30735:30735 compcert.lib.Integers <> x var
R30744:30746 compcert.lib.Integers Make add def
R30759:30761 compcert.lib.Integers Make mul def
R30765:30765 compcert.lib.Integers <> z var
R30763:30763 compcert.lib.Integers <> y var
R30749:30751 compcert.lib.Integers Make mul def
R30755:30755 compcert.lib.Integers <> z var
R30753:30753 compcert.lib.Integers <> x var
R30793:30795 compcert.lib.Integers Make mul def
R30798:30800 compcert.lib.Integers Make add def
R30811:30822 compcert.lib.Integers Make eqm_samerepr thm
R30811:30822 compcert.lib.Integers Make eqm_samerepr thm
R30838:30845 compcert.lib.Integers Make unsigned def
R30838:30845 compcert.lib.Integers Make unsigned def
R30864:30871 compcert.lib.Integers Make unsigned def
R30864:30871 compcert.lib.Integers Make unsigned def
R30890:30897 compcert.lib.Integers Make unsigned def
R30890:30897 compcert.lib.Integers Make unsigned def
R30927:30927 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30935:30938 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30930:30932 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30911:30919 compcert.lib.Integers Make eqm_trans thm
R30927:30927 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30935:30938 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30930:30932 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30911:30919 compcert.lib.Integers Make eqm_trans thm
R30973:30973 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30981:30984 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30976:30978 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31002:31004 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30997:30999 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31007:31009 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31002:31004 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30997:30999 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31007:31009 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30973:30973 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30981:30984 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R30976:30978 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
prf 31055:31069 Make mul_add_distr_r
R31103:31105 Coq.Init.Logic <> :type_scope:x_'='_x not
R31088:31090 compcert.lib.Integers Make mul def
R31095:31097 compcert.lib.Integers Make add def
R31101:31101 compcert.lib.Integers <> z var
R31099:31099 compcert.lib.Integers <> y var
R31092:31092 compcert.lib.Integers <> x var
R31106:31108 compcert.lib.Integers Make add def
R31121:31123 compcert.lib.Integers Make mul def
R31127:31127 compcert.lib.Integers <> z var
R31125:31125 compcert.lib.Integers <> x var
R31111:31113 compcert.lib.Integers Make mul def
R31117:31117 compcert.lib.Integers <> y var
R31115:31115 compcert.lib.Integers <> x var
R31156:31165 compcert.lib.Integers Make mul_commut thm
R31156:31165 compcert.lib.Integers Make mul_commut thm
R31176:31190 compcert.lib.Integers Make mul_add_distr_l thm
R31176:31190 compcert.lib.Integers Make mul_add_distr_l thm
R31209:31218 compcert.lib.Integers Make mul_commut thm
R31209:31218 compcert.lib.Integers Make mul_commut thm
R31209:31218 compcert.lib.Integers Make mul_commut thm
prf 31236:31250 Make neg_mul_distr_l
R31280:31282 Coq.Init.Logic <> :type_scope:x_'='_x not
R31268:31270 compcert.lib.Integers Make neg def
R31272:31274 compcert.lib.Integers Make mul def
R31278:31278 compcert.lib.Integers <> y var
R31276:31276 compcert.lib.Integers <> x var
R31283:31285 compcert.lib.Integers Make mul def
R31295:31295 compcert.lib.Integers <> y var
R31288:31290 compcert.lib.Integers Make neg def
R31292:31292 compcert.lib.Integers <> x var
R31322:31324 compcert.lib.Integers Make mul def
R31327:31329 compcert.lib.Integers Make neg def
R31345:31352 compcert.lib.Integers Make unsigned def
R31345:31352 compcert.lib.Integers Make unsigned def
R31370:31377 compcert.lib.Integers Make unsigned def
R31370:31377 compcert.lib.Integers Make unsigned def
R31391:31402 compcert.lib.Integers Make eqm_samerepr thm
R31391:31402 compcert.lib.Integers Make eqm_samerepr thm
R31427:31429 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31437:31437 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31432:31434 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31411:31419 compcert.lib.Integers Make eqm_trans thm
R31427:31429 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31437:31437 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31432:31434 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31411:31419 compcert.lib.Integers Make eqm_trans thm
R31470:31472 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31480:31480 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31475:31477 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31489:31489 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31493:31496 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31490:31490 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31489:31489 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31493:31496 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31490:31490 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31470:31472 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31480:31480 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R31475:31477 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
prf 31542:31556 Make neg_mul_distr_r
R31586:31588 Coq.Init.Logic <> :type_scope:x_'='_x not
R31574:31576 compcert.lib.Integers Make neg def
R31578:31580 compcert.lib.Integers Make mul def
R31584:31584 compcert.lib.Integers <> y var
R31582:31582 compcert.lib.Integers <> x var
R31589:31591 compcert.lib.Integers Make mul def
R31596:31598 compcert.lib.Integers Make neg def
R31600:31600 compcert.lib.Integers <> y var
R31593:31593 compcert.lib.Integers <> x var
R31630:31639 compcert.lib.Integers Make mul_commut thm
R31630:31639 compcert.lib.Integers Make mul_commut thm
R31656:31665 compcert.lib.Integers Make mul_commut thm
R31670:31672 compcert.lib.Integers Make neg def
R31656:31665 compcert.lib.Integers Make mul_commut thm
R31670:31672 compcert.lib.Integers Make neg def
R31687:31701 compcert.lib.Integers Make neg_mul_distr_l thm
R31687:31701 compcert.lib.Integers Make neg_mul_distr_l thm
prf 31719:31728 Make mul_signed
R31752:31754 Coq.Init.Logic <> :type_scope:x_'='_x not
R31745:31747 compcert.lib.Integers Make mul def
R31751:31751 compcert.lib.Integers <> y var
R31749:31749 compcert.lib.Integers <> x var
R31755:31758 compcert.lib.Integers Make repr def
R31769:31771 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R31761:31766 compcert.lib.Integers Make signed def
R31768:31768 compcert.lib.Integers <> x var
R31772:31777 compcert.lib.Integers Make signed def
R31779:31779 compcert.lib.Integers <> y var
R31807:31809 compcert.lib.Integers Make mul def
R31818:31829 compcert.lib.Integers Make eqm_samerepr thm
R31818:31829 compcert.lib.Integers Make eqm_samerepr thm
R31840:31847 compcert.lib.Integers Make eqm_mult thm
R31856:31862 compcert.lib.Integers Make eqm_sym thm
R31871:31889 compcert.lib.Integers Make eqm_signed_unsigned thm
R31840:31847 compcert.lib.Integers Make eqm_mult thm
R31856:31862 compcert.lib.Integers Make eqm_sym thm
R31856:31862 compcert.lib.Integers Make eqm_sym thm
R31871:31889 compcert.lib.Integers Make eqm_signed_unsigned thm
R31871:31889 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 31950:31965 Make modu_divu_Euclid
R31996:31998 Coq.Init.Logic <> :type_scope:x_'='_x not
R31995:31995 compcert.lib.Integers <> x var
R31999:32001 compcert.lib.Integers Make add def
R32023:32026 compcert.lib.Integers Make modu def
R32030:32030 compcert.lib.Integers <> y var
R32028:32028 compcert.lib.Integers <> x var
R32004:32006 compcert.lib.Integers Make mul def
R32019:32019 compcert.lib.Integers <> y var
R32009:32012 compcert.lib.Integers Make divu def
R32016:32016 compcert.lib.Integers <> y var
R32014:32014 compcert.lib.Integers <> x var
R31983:31986 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R31982:31982 compcert.lib.Integers <> y var
R31987:31990 compcert.lib.Integers Make zero def
R32058:32060 compcert.lib.Integers Make add def
R32063:32065 compcert.lib.Integers Make mul def
R32068:32071 compcert.lib.Integers Make divu def
R32074:32077 compcert.lib.Integers Make modu def
R32096:32099 compcert.lib.Integers Make repr def
R32102:32109 compcert.lib.Integers Make unsigned def
R32096:32099 compcert.lib.Integers Make repr def
R32102:32109 compcert.lib.Integers Make unsigned def
R32141:32152 compcert.lib.Integers Make eqm_samerepr thm
R32141:32152 compcert.lib.Integers Make eqm_samerepr thm
R32169:32176 compcert.lib.Integers Make unsigned def
R32169:32176 compcert.lib.Integers Make unsigned def
R32193:32200 compcert.lib.Integers Make unsigned def
R32193:32200 compcert.lib.Integers Make unsigned def
R32244:32246 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32230:32230 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32238:32241 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32233:32235 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R32249:32253 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R32214:32222 compcert.lib.Integers Make eqm_trans thm
R32244:32246 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32230:32230 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32238:32241 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R32233:32235 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R32249:32253 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R32214:32222 compcert.lib.Integers Make eqm_trans thm
R32267:32275 compcert.lib.Integers Make eqm_refl2 thm
R32267:32275 compcert.lib.Integers Make eqm_refl2 thm
R32286:32295 Coq.ZArith.BinInt <> Zmult_comm syndef
R32286:32295 Coq.ZArith.BinInt <> Zmult_comm syndef
R32304:32315 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R32304:32315 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R32332:32345 compcert.lib.Integers Make unsigned_range thm
R32332:32345 compcert.lib.Integers Make unsigned_range thm
R32378:32381 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R32368:32375 compcert.lib.Integers Make unsigned def
R32378:32381 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R32368:32375 compcert.lib.Integers Make unsigned def
R32421:32433 compcert.lib.Integers Make repr_unsigned thm
R32421:32433 compcert.lib.Integers Make repr_unsigned thm
R32446:32449 compcert.lib.Integers Make zero def
prf 32516:32524 Make modu_divu
R32562:32564 Coq.Init.Logic <> :type_scope:x_'='_x not
R32554:32557 compcert.lib.Integers Make modu def
R32561:32561 compcert.lib.Integers <> y var
R32559:32559 compcert.lib.Integers <> x var
R32565:32567 compcert.lib.Integers Make sub def
R32572:32574 compcert.lib.Integers Make mul def
R32587:32587 compcert.lib.Integers <> y var
R32577:32580 compcert.lib.Integers Make divu def
R32584:32584 compcert.lib.Integers <> y var
R32582:32582 compcert.lib.Integers <> x var
R32569:32569 compcert.lib.Integers <> x var
R32542:32545 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R32541:32541 compcert.lib.Integers <> y var
R32546:32549 compcert.lib.Integers Make zero def
R32649:32651 Coq.Init.Logic <> :type_scope:x_'='_x not
R32648:32648 compcert.lib.Integers <> c var
R32652:32654 compcert.lib.Integers Make sub def
R32658:32658 compcert.lib.Integers <> b var
R32656:32656 compcert.lib.Integers <> a var
R32634:32636 Coq.Init.Logic <> :type_scope:x_'='_x not
R32633:32633 compcert.lib.Integers <> a var
R32637:32639 compcert.lib.Integers Make add def
R32643:32643 compcert.lib.Integers <> c var
R32641:32641 compcert.lib.Integers <> b var
R32649:32651 Coq.Init.Logic <> :type_scope:x_'='_x not
R32648:32648 compcert.lib.Integers <> c var
R32652:32654 compcert.lib.Integers Make sub def
R32658:32658 compcert.lib.Integers <> b var
R32656:32656 compcert.lib.Integers <> a var
R32634:32636 Coq.Init.Logic <> :type_scope:x_'='_x not
R32633:32633 compcert.lib.Integers <> a var
R32637:32639 compcert.lib.Integers Make add def
R32643:32643 compcert.lib.Integers <> c var
R32641:32641 compcert.lib.Integers <> b var
R32689:32697 compcert.lib.Integers Make sub_add_l thm
R32689:32697 compcert.lib.Integers Make sub_add_l thm
R32708:32715 compcert.lib.Integers Make sub_idem thm
R32708:32715 compcert.lib.Integers Make sub_idem thm
R32728:32737 compcert.lib.Integers Make add_commut thm
R32728:32737 compcert.lib.Integers Make add_commut thm
R32748:32755 compcert.lib.Integers Make add_zero thm
R32748:32755 compcert.lib.Integers Make add_zero thm
R32782:32797 compcert.lib.Integers Make modu_divu_Euclid thm
R32782:32797 compcert.lib.Integers Make modu_divu_Euclid thm
prf 32818:32833 Make mods_divs_Euclid
R32851:32853 Coq.Init.Logic <> :type_scope:x_'='_x not
R32850:32850 compcert.lib.Integers <> x var
R32854:32856 compcert.lib.Integers Make add def
R32878:32881 compcert.lib.Integers Make mods def
R32885:32885 compcert.lib.Integers <> y var
R32883:32883 compcert.lib.Integers <> x var
R32859:32861 compcert.lib.Integers Make mul def
R32874:32874 compcert.lib.Integers <> y var
R32864:32867 compcert.lib.Integers Make divs def
R32871:32871 compcert.lib.Integers <> y var
R32869:32869 compcert.lib.Integers <> x var
R32913:32915 compcert.lib.Integers Make add def
R32918:32920 compcert.lib.Integers Make mul def
R32923:32926 compcert.lib.Integers Make divs def
R32929:32932 compcert.lib.Integers Make mods def
R32951:32954 compcert.lib.Integers Make repr def
R32957:32962 compcert.lib.Integers Make signed def
R32951:32954 compcert.lib.Integers Make repr def
R32957:32962 compcert.lib.Integers Make signed def
R32994:33005 compcert.lib.Integers Make eqm_samerepr thm
R32994:33005 compcert.lib.Integers Make eqm_samerepr thm
R33022:33027 compcert.lib.Integers Make signed def
R33022:33027 compcert.lib.Integers Make signed def
R33044:33049 compcert.lib.Integers Make signed def
R33044:33049 compcert.lib.Integers Make signed def
R33098:33100 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R33079:33079 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R33092:33095 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R33080:33085 Coq.ZArith.BinInt Z quot def
R33101:33105 Coq.ZArith.BinInt Z rem def
R33063:33071 compcert.lib.Integers Make eqm_trans thm
R33098:33100 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R33079:33079 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R33092:33095 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R33080:33085 Coq.ZArith.BinInt Z quot def
R33101:33105 Coq.ZArith.BinInt Z rem def
R33063:33071 compcert.lib.Integers Make eqm_trans thm
R33123:33131 compcert.lib.Integers Make eqm_refl2 thm
R33123:33131 compcert.lib.Integers Make eqm_refl2 thm
R33142:33151 Coq.ZArith.BinInt <> Zmult_comm syndef
R33142:33151 Coq.ZArith.BinInt <> Zmult_comm syndef
R33160:33170 Coq.ZArith.BinInt Z quot_rem' thm
R33160:33170 Coq.ZArith.BinInt Z quot_rem' thm
R33181:33187 compcert.lib.Integers Make eqm_add thm
R33181:33187 compcert.lib.Integers Make eqm_add thm
R33214:33232 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R33214:33232 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R33241:33248 compcert.lib.Integers Make eqm_mult thm
R33241:33248 compcert.lib.Integers Make eqm_mult thm
R33288:33306 compcert.lib.Integers Make eqm_signed_unsigned thm
R33288:33306 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 33324:33332 Make mods_divs
R33357:33359 Coq.Init.Logic <> :type_scope:x_'='_x not
R33349:33352 compcert.lib.Integers Make mods def
R33356:33356 compcert.lib.Integers <> y var
R33354:33354 compcert.lib.Integers <> x var
R33360:33362 compcert.lib.Integers Make sub def
R33367:33369 compcert.lib.Integers Make mul def
R33382:33382 compcert.lib.Integers <> y var
R33372:33375 compcert.lib.Integers Make divs def
R33379:33379 compcert.lib.Integers <> y var
R33377:33377 compcert.lib.Integers <> x var
R33364:33364 compcert.lib.Integers <> x var
R33444:33446 Coq.Init.Logic <> :type_scope:x_'='_x not
R33443:33443 compcert.lib.Integers <> c var
R33447:33449 compcert.lib.Integers Make sub def
R33453:33453 compcert.lib.Integers <> b var
R33451:33451 compcert.lib.Integers <> a var
R33429:33431 Coq.Init.Logic <> :type_scope:x_'='_x not
R33428:33428 compcert.lib.Integers <> a var
R33432:33434 compcert.lib.Integers Make add def
R33438:33438 compcert.lib.Integers <> c var
R33436:33436 compcert.lib.Integers <> b var
R33444:33446 Coq.Init.Logic <> :type_scope:x_'='_x not
R33443:33443 compcert.lib.Integers <> c var
R33447:33449 compcert.lib.Integers Make sub def
R33453:33453 compcert.lib.Integers <> b var
R33451:33451 compcert.lib.Integers <> a var
R33429:33431 Coq.Init.Logic <> :type_scope:x_'='_x not
R33428:33428 compcert.lib.Integers <> a var
R33432:33434 compcert.lib.Integers Make add def
R33438:33438 compcert.lib.Integers <> c var
R33436:33436 compcert.lib.Integers <> b var
R33484:33492 compcert.lib.Integers Make sub_add_l thm
R33484:33492 compcert.lib.Integers Make sub_add_l thm
R33503:33510 compcert.lib.Integers Make sub_idem thm
R33503:33510 compcert.lib.Integers Make sub_idem thm
R33523:33532 compcert.lib.Integers Make add_commut thm
R33523:33532 compcert.lib.Integers Make add_commut thm
R33543:33550 compcert.lib.Integers Make add_zero thm
R33543:33550 compcert.lib.Integers Make add_zero thm
R33576:33591 compcert.lib.Integers Make mods_divs_Euclid thm
R33576:33591 compcert.lib.Integers Make mods_divs_Euclid thm
prf 33608:33615 Make divu_one
R33640:33642 Coq.Init.Logic <> :type_scope:x_'='_x not
R33630:33633 compcert.lib.Integers Make divu def
R33637:33639 compcert.lib.Integers Make one def
R33635:33635 compcert.lib.Integers <> x var
R33643:33643 compcert.lib.Integers <> x var
R33662:33665 compcert.lib.Integers Make divu def
R33684:33695 compcert.lib.Integers Make unsigned_one thm
R33684:33695 compcert.lib.Integers Make unsigned_one thm
R33706:33713 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R33706:33713 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R33722:33734 compcert.lib.Integers Make repr_unsigned thm
R33722:33734 compcert.lib.Integers Make repr_unsigned thm
prf 33751:33758 Make modu_one
R33783:33785 Coq.Init.Logic <> :type_scope:x_'='_x not
R33773:33776 compcert.lib.Integers Make modu def
R33780:33782 compcert.lib.Integers Make one def
R33778:33778 compcert.lib.Integers <> x var
R33786:33789 compcert.lib.Integers Make zero def
R33817:33825 compcert.lib.Integers Make modu_divu thm
R33817:33825 compcert.lib.Integers Make modu_divu thm
R33836:33843 compcert.lib.Integers Make divu_one thm
R33836:33843 compcert.lib.Integers Make divu_one thm
R33854:33860 compcert.lib.Integers Make mul_one thm
R33854:33860 compcert.lib.Integers Make mul_one thm
R33869:33876 compcert.lib.Integers Make sub_idem thm
R33869:33876 compcert.lib.Integers Make sub_idem thm
R33887:33898 compcert.lib.Integers Make one_not_zero thm
R33887:33898 compcert.lib.Integers Make one_not_zero thm
prf 33915:33923 Make divs_mone
R33949:33951 Coq.Init.Logic <> :type_scope:x_'='_x not
R33938:33941 compcert.lib.Integers Make divs def
R33945:33948 compcert.lib.Integers Make mone def
R33943:33943 compcert.lib.Integers <> x var
R33952:33954 compcert.lib.Integers Make neg def
R33956:33956 compcert.lib.Integers <> x var
R33975:33978 compcert.lib.Integers Make divs def
R33981:33983 compcert.lib.Integers Make neg def
R34005:34015 compcert.lib.Integers Make signed_mone thm
R34005:34015 compcert.lib.Integers Make signed_mone thm
R34030:34035 Coq.ZArith.BinInt Z quot def
R34038:34043 compcert.lib.Integers Make signed def
R34060:34062 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34071:34071 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34063:34068 compcert.lib.Integers Make signed def
R34060:34062 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34071:34071 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34063:34068 compcert.lib.Integers Make signed def
R34030:34035 Coq.ZArith.BinInt Z quot def
R34038:34043 compcert.lib.Integers Make signed def
R34083:34094 compcert.lib.Integers Make eqm_samerepr thm
R34083:34094 compcert.lib.Integers Make eqm_samerepr thm
R34103:34109 compcert.lib.Integers Make eqm_neg thm
R34103:34109 compcert.lib.Integers Make eqm_neg thm
R34118:34136 compcert.lib.Integers Make eqm_signed_unsigned thm
R34118:34136 compcert.lib.Integers Make eqm_signed_unsigned thm
R34153:34158 compcert.lib.Integers Make signed def
R34153:34158 compcert.lib.Integers Make signed def
R34202:34203 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34202:34203 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R34218:34228 Coq.ZArith.Zquot <> Zquot_opp_r thm
R34218:34228 Coq.ZArith.Zquot <> Zquot_opp_r thm
R34254:34256 Coq.Init.Logic <> :type_scope:x_'='_x not
R34241:34246 Coq.ZArith.BinInt Z quot def
R34254:34256 Coq.Init.Logic <> :type_scope:x_'='_x not
R34241:34246 Coq.ZArith.BinInt Z quot def
R34281:34297 Coq.ZArith.Zquot <> Zquot_unique_full thm
R34281:34297 Coq.ZArith.Zquot <> Zquot_unique_full thm
R34322:34326 Coq.ZArith.BinInt Z abs def
R34322:34326 Coq.ZArith.BinInt Z abs def
R34354:34356 compcert.lib.Coqlib <> zle def
R34354:34356 compcert.lib.Coqlib <> zle def
R34402:34404 compcert.lib.Integers Make one def
prf 34442:34450 Make mods_mone
R34476:34478 Coq.Init.Logic <> :type_scope:x_'='_x not
R34465:34468 compcert.lib.Integers Make mods def
R34472:34475 compcert.lib.Integers Make mone def
R34470:34470 compcert.lib.Integers <> x var
R34479:34482 compcert.lib.Integers Make zero def
R34510:34518 compcert.lib.Integers Make mods_divs thm
R34510:34518 compcert.lib.Integers Make mods_divs thm
R34529:34537 compcert.lib.Integers Make divs_mone thm
R34529:34537 compcert.lib.Integers Make divs_mone thm
R34554:34568 compcert.lib.Integers Make neg_mul_distr_l thm
R34554:34568 compcert.lib.Integers Make neg_mul_distr_l thm
R34579:34586 compcert.lib.Integers Make mul_mone thm
R34579:34586 compcert.lib.Integers Make mul_mone thm
R34597:34610 compcert.lib.Integers Make neg_involutive thm
R34597:34610 compcert.lib.Integers Make neg_involutive thm
R34619:34626 compcert.lib.Integers Make sub_idem thm
R34619:34626 compcert.lib.Integers Make sub_idem thm
prf 34730:34739 Make Ztestbit_0
R34765:34767 Coq.Init.Logic <> :type_scope:x_'='_x not
R34752:34760 Coq.ZArith.BinInt Z testbit def
R34764:34764 compcert.lib.Integers <> n var
R34768:34772 Coq.Init.Datatypes <> false constr
R34781:34793 Coq.ZArith.BinInt Z testbit_0_l thm
prf 34804:34813 Make Ztestbit_1
R34839:34841 Coq.Init.Logic <> :type_scope:x_'='_x not
R34826:34834 Coq.ZArith.BinInt Z testbit def
R34838:34838 compcert.lib.Integers <> n var
R34842:34844 compcert.lib.Coqlib <> zeq def
R34846:34846 compcert.lib.Integers <> n var
prf 34906:34916 Make Ztestbit_m1
R34955:34957 Coq.Init.Logic <> :type_scope:x_'='_x not
R34939:34947 Coq.ZArith.BinInt Z testbit def
R34954:34954 compcert.lib.Integers <> n var
R34958:34961 Coq.Init.Datatypes <> true constr
R34930:34933 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R34934:34934 compcert.lib.Integers <> n var
prf 35020:35032 Make Zshiftin_spec
R35061:35063 Coq.Init.Logic <> :type_scope:x_'='_x not
R35049:35056 compcert.lib.Integers Make Zshiftin def
R35060:35060 compcert.lib.Integers <> x var
R35058:35058 compcert.lib.Integers <> b var
R35069:35072 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35091:35091 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35065:35067 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R35068:35068 compcert.lib.Integers <> x var
R35076:35076 compcert.lib.Integers <> b var
R35110:35117 compcert.lib.Integers Make Zshiftin def
R35152:35169 Coq.ZArith.BinInt Z succ_double_spec thm
R35152:35169 Coq.ZArith.BinInt Z succ_double_spec thm
R35192:35204 Coq.ZArith.BinInt Z double_spec thm
R35192:35204 Coq.ZArith.BinInt Z double_spec thm
prf 35227:35238 Make Zshiftin_inj
R35307:35310 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R35302:35304 Coq.Init.Logic <> :type_scope:x_'='_x not
R35300:35301 compcert.lib.Integers <> b1 var
R35305:35306 compcert.lib.Integers <> b2 var
R35313:35315 Coq.Init.Logic <> :type_scope:x_'='_x not
R35311:35312 compcert.lib.Integers <> x1 var
R35316:35317 compcert.lib.Integers <> x2 var
R35279:35281 Coq.Init.Logic <> :type_scope:x_'='_x not
R35265:35272 compcert.lib.Integers Make Zshiftin def
R35277:35278 compcert.lib.Integers <> x1 var
R35274:35275 compcert.lib.Integers <> b1 var
R35282:35289 compcert.lib.Integers Make Zshiftin def
R35294:35295 compcert.lib.Integers <> x2 var
R35291:35292 compcert.lib.Integers <> b2 var
R35346:35358 compcert.lib.Integers Make Zshiftin_spec thm
R35346:35358 compcert.lib.Integers Make Zshiftin_spec thm
R35346:35358 compcert.lib.Integers Make Zshiftin_spec thm
R35346:35358 compcert.lib.Integers Make Zshiftin_spec thm
prf 35498:35504 Make Zdecomp
R35520:35522 Coq.Init.Logic <> :type_scope:x_'='_x not
R35519:35519 compcert.lib.Integers <> x var
R35523:35530 compcert.lib.Integers Make Zshiftin def
R35543:35548 Coq.ZArith.BinInt Z div2 def
R35550:35550 compcert.lib.Integers <> x var
R35533:35537 Coq.ZArith.BinInt Z odd def
R35539:35539 compcert.lib.Integers <> x var
R35660:35679 Coq.PArith.BinPos Pos pred_double_succ thm
R35660:35679 Coq.PArith.BinPos Pos pred_double_succ thm
prf 35701:35716 Make Ztestbit_shiftin
R35775:35777 Coq.Init.Logic <> :type_scope:x_'='_x not
R35749:35757 Coq.ZArith.BinInt Z testbit def
R35774:35774 compcert.lib.Integers <> n var
R35760:35767 compcert.lib.Integers Make Zshiftin def
R35771:35771 compcert.lib.Integers <> x var
R35769:35769 compcert.lib.Integers <> b var
R35781:35783 compcert.lib.Coqlib <> zeq def
R35785:35785 compcert.lib.Integers <> n var
R35801:35809 Coq.ZArith.BinInt Z testbit def
R35814:35819 Coq.ZArith.BinInt Z pred def
R35821:35821 compcert.lib.Integers <> n var
R35811:35811 compcert.lib.Integers <> x var
R35794:35794 compcert.lib.Integers <> b var
R35738:35741 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R35742:35742 compcert.lib.Integers <> n var
R35850:35862 compcert.lib.Integers Make Zshiftin_spec thm
R35850:35862 compcert.lib.Integers Make Zshiftin_spec thm
R35875:35877 compcert.lib.Coqlib <> zeq def
R35875:35877 compcert.lib.Coqlib <> zeq def
R35922:35936 Coq.ZArith.BinInt Z testbit_odd_0 thm
R35922:35936 Coq.ZArith.BinInt Z testbit_odd_0 thm
R35953:35961 Coq.ZArith.BinInt <> Zplus_0_r syndef
R35953:35961 Coq.ZArith.BinInt <> Zplus_0_r syndef
R35970:35985 Coq.ZArith.BinInt Z testbit_even_0 thm
R35970:35985 Coq.ZArith.BinInt Z testbit_even_0 thm
R36001:36004 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R36005:36010 Coq.ZArith.BinInt Z pred def
R36001:36004 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R36005:36010 Coq.ZArith.BinInt Z pred def
R36040:36045 Coq.ZArith.BinInt Z pred def
R36040:36045 Coq.ZArith.BinInt Z pred def
R36076:36081 Coq.ZArith.BinInt Z succ def
R36076:36081 Coq.ZArith.BinInt Z succ def
R36138:36155 Coq.ZArith.BinInt Z testbit_odd_succ thm
R36138:36155 Coq.ZArith.BinInt Z testbit_odd_succ thm
R36178:36186 Coq.ZArith.BinInt <> Zplus_0_r syndef
R36178:36186 Coq.ZArith.BinInt <> Zplus_0_r syndef
R36195:36213 Coq.ZArith.BinInt Z testbit_even_succ thm
R36195:36213 Coq.ZArith.BinInt Z testbit_even_succ thm
prf 36235:36255 Make Ztestbit_shiftin_base
R36298:36300 Coq.Init.Logic <> :type_scope:x_'='_x not
R36272:36280 Coq.ZArith.BinInt Z testbit def
R36283:36290 compcert.lib.Integers Make Zshiftin def
R36294:36294 compcert.lib.Integers <> x var
R36292:36292 compcert.lib.Integers <> b var
R36301:36301 compcert.lib.Integers <> b var
R36329:36344 compcert.lib.Integers Make Ztestbit_shiftin thm
R36329:36344 compcert.lib.Integers Make Ztestbit_shiftin thm
R36353:36360 compcert.lib.Coqlib <> zeq_true thm
R36353:36360 compcert.lib.Coqlib <> zeq_true thm
prf 36383:36403 Make Ztestbit_shiftin_succ
R36467:36469 Coq.Init.Logic <> :type_scope:x_'='_x not
R36432:36440 Coq.ZArith.BinInt Z testbit def
R36458:36463 Coq.ZArith.BinInt Z succ def
R36465:36465 compcert.lib.Integers <> n var
R36443:36450 compcert.lib.Integers Make Zshiftin def
R36454:36454 compcert.lib.Integers <> x var
R36452:36452 compcert.lib.Integers <> b var
R36470:36478 Coq.ZArith.BinInt Z testbit def
R36482:36482 compcert.lib.Integers <> n var
R36480:36480 compcert.lib.Integers <> x var
R36423:36426 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R36427:36427 compcert.lib.Integers <> n var
R36510:36525 compcert.lib.Integers Make Ztestbit_shiftin thm
R36510:36525 compcert.lib.Integers Make Ztestbit_shiftin thm
R36536:36544 compcert.lib.Coqlib <> zeq_false thm
R36536:36544 compcert.lib.Coqlib <> zeq_false thm
R36555:36565 Coq.ZArith.BinInt Z pred_succ thm
R36555:36565 Coq.ZArith.BinInt Z pred_succ thm
prf 36604:36614 Make Ztestbit_eq
R36656:36658 Coq.Init.Logic <> :type_scope:x_'='_x not
R36643:36651 Coq.ZArith.BinInt Z testbit def
R36655:36655 compcert.lib.Integers <> n var
R36653:36653 compcert.lib.Integers <> x var
R36662:36664 compcert.lib.Coqlib <> zeq def
R36666:36666 compcert.lib.Integers <> n var
R36688:36696 Coq.ZArith.BinInt Z testbit def
R36710:36715 Coq.ZArith.BinInt Z pred def
R36717:36717 compcert.lib.Integers <> n var
R36699:36704 Coq.ZArith.BinInt Z div2 def
R36706:36706 compcert.lib.Integers <> x var
R36675:36679 Coq.ZArith.BinInt Z odd def
R36681:36681 compcert.lib.Integers <> x var
R36632:36635 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R36636:36636 compcert.lib.Integers <> n var
R36747:36753 compcert.lib.Integers Make Zdecomp thm
R36747:36753 compcert.lib.Integers Make Zdecomp thm
R36770:36785 compcert.lib.Integers Make Ztestbit_shiftin thm
R36770:36785 compcert.lib.Integers Make Ztestbit_shiftin thm
prf 36808:36820 Make Ztestbit_base
R36848:36850 Coq.Init.Logic <> :type_scope:x_'='_x not
R36835:36843 Coq.ZArith.BinInt Z testbit def
R36845:36845 compcert.lib.Integers <> x var
R36851:36855 Coq.ZArith.BinInt Z odd def
R36857:36857 compcert.lib.Integers <> x var
R36885:36895 compcert.lib.Integers Make Ztestbit_eq thm
R36885:36895 compcert.lib.Integers Make Ztestbit_eq thm
R36904:36911 compcert.lib.Coqlib <> zeq_true thm
R36904:36911 compcert.lib.Coqlib <> zeq_true thm
prf 36935:36947 Make Ztestbit_succ
R36996:36998 Coq.Init.Logic <> :type_scope:x_'='_x not
R36974:36982 Coq.ZArith.BinInt Z testbit def
R36987:36992 Coq.ZArith.BinInt Z succ def
R36994:36994 compcert.lib.Integers <> n var
R36984:36984 compcert.lib.Integers <> x var
R36999:37007 Coq.ZArith.BinInt Z testbit def
R37020:37020 compcert.lib.Integers <> n var
R37010:37015 Coq.ZArith.BinInt Z div2 def
R37017:37017 compcert.lib.Integers <> x var
R36965:36968 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R36969:36969 compcert.lib.Integers <> n var
R37048:37058 compcert.lib.Integers Make Ztestbit_eq thm
R37048:37058 compcert.lib.Integers Make Ztestbit_eq thm
R37069:37077 compcert.lib.Coqlib <> zeq_false thm
R37069:37077 compcert.lib.Coqlib <> zeq_false thm
R37088:37098 Coq.ZArith.BinInt Z pred_succ thm
R37088:37098 Coq.ZArith.BinInt Z pred_succ thm
prf 37136:37150 Make eqmod_same_bits
R37241:37245 compcert.lib.Integers Make eqmod def
R37267:37267 compcert.lib.Integers <> y var
R37265:37265 compcert.lib.Integers <> x var
R37248:37260 Coq.ZArith.Zpower <> two_power_nat def
R37262:37262 compcert.lib.Integers <> n var
R37218:37220 Coq.Init.Logic <> :type_scope:x_'='_x not
R37205:37213 Coq.ZArith.BinInt Z testbit def
R37217:37217 compcert.lib.Integers <> i var
R37215:37215 compcert.lib.Integers <> x var
R37221:37229 Coq.ZArith.BinInt Z testbit def
R37233:37233 compcert.lib.Integers <> i var
R37231:37231 compcert.lib.Integers <> y var
R37183:37186 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R37188:37190 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R37187:37187 compcert.lib.Integers <> i var
R37187:37187 compcert.lib.Integers <> i var
R37191:37198 Coq.ZArith.BinInt Z of_nat def
R37200:37200 compcert.lib.Integers <> n var
R37312:37324 Coq.ZArith.Zpower <> two_power_nat def
R37312:37324 Coq.ZArith.Zpower <> two_power_nat def
R37346:37346 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R37346:37346 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R37369:37383 Coq.ZArith.Zpower <> two_power_nat_S thm
R37369:37383 Coq.ZArith.Zpower <> two_power_nat_S thm
R37399:37403 compcert.lib.Integers Make eqmod def
R37435:37440 Coq.ZArith.BinInt Z div2 def
R37424:37429 Coq.ZArith.BinInt Z div2 def
R37406:37418 Coq.ZArith.Zpower <> two_power_nat def
R37399:37403 compcert.lib.Integers Make eqmod def
R37435:37440 Coq.ZArith.BinInt Z div2 def
R37424:37429 Coq.ZArith.BinInt Z div2 def
R37406:37418 Coq.ZArith.Zpower <> two_power_nat def
R37484:37496 compcert.lib.Integers Make Ztestbit_succ thm
R37484:37496 compcert.lib.Integers Make Ztestbit_succ thm
R37484:37496 compcert.lib.Integers Make Ztestbit_succ thm
R37484:37496 compcert.lib.Integers Make Ztestbit_succ thm
R37516:37520 Coq.ZArith.Znat <> inj_S syndef
R37516:37520 Coq.ZArith.Znat <> inj_S syndef
R37598:37604 compcert.lib.Integers Make Zdecomp thm
R37598:37604 compcert.lib.Integers Make Zdecomp thm
R37619:37625 compcert.lib.Integers Make Zdecomp thm
R37619:37625 compcert.lib.Integers Make Zdecomp thm
R37643:37647 Coq.ZArith.BinInt Z odd def
R37658:37662 Coq.ZArith.BinInt Z odd def
R37658:37662 Coq.ZArith.BinInt Z odd def
R37643:37647 Coq.ZArith.BinInt Z odd def
R37691:37703 compcert.lib.Integers Make Zshiftin_spec thm
R37691:37703 compcert.lib.Integers Make Zshiftin_spec thm
R37691:37703 compcert.lib.Integers Make Zshiftin_spec thm
R37691:37703 compcert.lib.Integers Make Zshiftin_spec thm
R37738:37742 Coq.ZArith.Znat <> inj_S syndef
R37738:37742 Coq.ZArith.Znat <> inj_S syndef
R37763:37775 compcert.lib.Integers Make Ztestbit_base thm
R37763:37775 compcert.lib.Integers Make Ztestbit_base thm
R37763:37775 compcert.lib.Integers Make Ztestbit_base thm
R37763:37775 compcert.lib.Integers Make Ztestbit_base thm
prf 37796:37808 Make eqm_same_bits
R37896:37898 compcert.lib.Integers Make eqm def
R37902:37902 compcert.lib.Integers <> y var
R37900:37900 compcert.lib.Integers <> x var
R37873:37875 Coq.Init.Logic <> :type_scope:x_'='_x not
R37860:37868 Coq.ZArith.BinInt Z testbit def
R37872:37872 compcert.lib.Integers <> i var
R37870:37870 compcert.lib.Integers <> x var
R37876:37884 Coq.ZArith.BinInt Z testbit def
R37888:37888 compcert.lib.Integers <> i var
R37886:37886 compcert.lib.Integers <> y var
R37839:37842 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R37844:37846 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R37843:37843 compcert.lib.Integers <> i var
R37843:37843 compcert.lib.Integers <> i var
R37847:37855 compcert.lib.Integers Make zwordsize def
R37912:37926 compcert.lib.Integers Make eqmod_same_bits thm
R37928:37935 compcert.lib.Integers Make wordsize def
prf 37946:37960 Make same_bits_eqmod
R38052:38054 Coq.Init.Logic <> :type_scope:x_'='_x not
R38039:38047 Coq.ZArith.BinInt Z testbit def
R38051:38051 compcert.lib.Integers <> i var
R38049:38049 compcert.lib.Integers <> x var
R38055:38063 Coq.ZArith.BinInt Z testbit def
R38067:38067 compcert.lib.Integers <> i var
R38065:38065 compcert.lib.Integers <> y var
R38015:38018 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38020:38022 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38019:38019 compcert.lib.Integers <> i var
R38019:38019 compcert.lib.Integers <> i var
R38023:38030 Coq.ZArith.BinInt Z of_nat def
R38032:38032 compcert.lib.Integers <> n var
R37983:37987 compcert.lib.Integers Make eqmod def
R38009:38009 compcert.lib.Integers <> y var
R38007:38007 compcert.lib.Integers <> x var
R37990:38002 Coq.ZArith.Zpower <> two_power_nat def
R38004:38004 compcert.lib.Integers <> n var
R38149:38153 Coq.ZArith.Znat <> inj_S syndef
R38149:38153 Coq.ZArith.Znat <> inj_S syndef
R38170:38184 Coq.ZArith.Zpower <> two_power_nat_S thm
R38170:38184 Coq.ZArith.Zpower <> two_power_nat_S thm
R38207:38217 compcert.lib.Integers Make Ztestbit_eq thm
R38207:38217 compcert.lib.Integers Make Ztestbit_eq thm
R38207:38217 compcert.lib.Integers Make Ztestbit_eq thm
R38207:38217 compcert.lib.Integers Make Ztestbit_eq thm
R0:-1 compcert.lib.Integers <> y var
R0:-1 compcert.lib.Integers <> y var
R0:-1 compcert.lib.Integers <> y var
R38307:38326 Coq.Init.Logic <> :type_scope:x_'='_x not
R38278:38285 compcert.lib.Integers Make Zshiftin def
R38298:38303 Coq.ZArith.BinInt Z div2 def
R38288:38292 Coq.ZArith.BinInt Z odd def
R38327:38334 compcert.lib.Integers Make Zshiftin def
R38366:38368 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38348:38350 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R38351:38363 Coq.ZArith.Zpower <> two_power_nat def
R38369:38374 Coq.ZArith.BinInt Z div2 def
R38337:38341 Coq.ZArith.BinInt Z odd def
R38307:38326 Coq.Init.Logic <> :type_scope:x_'='_x not
R38278:38285 compcert.lib.Integers Make Zshiftin def
R38298:38303 Coq.ZArith.BinInt Z div2 def
R38288:38292 Coq.ZArith.BinInt Z odd def
R38327:38334 compcert.lib.Integers Make Zshiftin def
R38366:38368 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38348:38350 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R38351:38363 Coq.ZArith.Zpower <> two_power_nat def
R38369:38374 Coq.ZArith.BinInt Z div2 def
R38337:38341 Coq.ZArith.BinInt Z odd def
R38402:38408 compcert.lib.Integers Make Zdecomp thm
R38402:38408 compcert.lib.Integers Make Zdecomp thm
R38429:38435 compcert.lib.Integers Make Zdecomp thm
R38429:38435 compcert.lib.Integers Make Zdecomp thm
R38474:38486 compcert.lib.Integers Make Zshiftin_spec thm
R38474:38486 compcert.lib.Integers Make Zshiftin_spec thm
R38474:38486 compcert.lib.Integers Make Zshiftin_spec thm
R38474:38486 compcert.lib.Integers Make Zshiftin_spec thm
R38514:38525 compcert.lib.Integers Make Zshiftin_inj thm
R38563:38565 compcert.lib.Coqlib <> zeq def
R38563:38565 compcert.lib.Coqlib <> zeq def
prf 38637:38649 Make same_bits_eqm
R38720:38722 Coq.Init.Logic <> :type_scope:x_'='_x not
R38707:38715 Coq.ZArith.BinInt Z testbit def
R38719:38719 compcert.lib.Integers <> i var
R38717:38717 compcert.lib.Integers <> x var
R38723:38731 Coq.ZArith.BinInt Z testbit def
R38735:38735 compcert.lib.Integers <> i var
R38733:38733 compcert.lib.Integers <> y var
R38684:38687 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38689:38691 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38688:38688 compcert.lib.Integers <> i var
R38688:38688 compcert.lib.Integers <> i var
R38692:38700 compcert.lib.Integers Make zwordsize def
R38670:38672 compcert.lib.Integers Make eqm def
R38676:38676 compcert.lib.Integers <> y var
R38674:38674 compcert.lib.Integers <> x var
R38745:38759 compcert.lib.Integers Make same_bits_eqmod thm
R38761:38768 compcert.lib.Integers Make wordsize def
prf 38780:38801 Make two_power_nat_infinity
R38826:38832 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38834:38835 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38837:38839 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R38836:38836 compcert.lib.Integers <> x var
R38840:38852 Coq.ZArith.Zpower <> two_power_nat def
R38854:38854 compcert.lib.Integers <> n var
R38817:38820 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R38821:38821 compcert.lib.Integers <> x var
R38900:38910 Coq.ZArith.Wf_Z <> natlike_ind thm
R38900:38910 Coq.ZArith.Wf_Z <> natlike_ind thm
R38928:38928 Coq.Init.Datatypes <> O constr
R38928:38928 Coq.Init.Datatypes <> O constr
R38987:38987 Coq.Init.Datatypes <> S constr
R38987:38987 Coq.Init.Datatypes <> S constr
R39001:39015 Coq.ZArith.Zpower <> two_power_nat_S thm
R39001:39015 Coq.ZArith.Zpower <> two_power_nat_S thm
R39033:39049 compcert.lib.Coqlib <> two_power_nat_pos thm
R39033:39049 compcert.lib.Coqlib <> two_power_nat_pos thm
prf 39075:39089 Make equal_same_bits
R39166:39168 Coq.Init.Logic <> :type_scope:x_'='_x not
R39165:39165 compcert.lib.Integers <> x var
R39169:39169 compcert.lib.Integers <> y var
R39142:39144 Coq.Init.Logic <> :type_scope:x_'='_x not
R39129:39137 Coq.ZArith.BinInt Z testbit def
R39141:39141 compcert.lib.Integers <> i var
R39139:39139 compcert.lib.Integers <> x var
R39145:39153 Coq.ZArith.BinInt Z testbit def
R39157:39157 compcert.lib.Integers <> i var
R39155:39155 compcert.lib.Integers <> y var
R39120:39123 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R39124:39124 compcert.lib.Integers <> i var
R39205:39207 compcert.lib.Coqlib <> zlt def
R39230:39232 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39219:39221 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39205:39207 compcert.lib.Coqlib <> zlt def
R39230:39232 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39219:39221 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39248:39251 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R39248:39251 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R39280:39282 compcert.lib.Coqlib <> zlt def
R39280:39282 compcert.lib.Coqlib <> zlt def
R39308:39329 compcert.lib.Integers Make two_power_nat_infinity thm
R39308:39329 compcert.lib.Integers Make two_power_nat_infinity thm
R39367:39371 compcert.lib.Integers Make eqmod def
R39374:39386 Coq.ZArith.Zpower <> two_power_nat def
R39367:39371 compcert.lib.Integers Make eqmod def
R39374:39386 Coq.ZArith.Zpower <> two_power_nat def
R39407:39421 compcert.lib.Integers Make eqmod_same_bits thm
R39407:39421 compcert.lib.Integers Make eqmod_same_bits thm
R0:-1 compcert.lib.Integers <> y var
R39459:39463 compcert.lib.Integers Make eqmod def
R39466:39478 Coq.ZArith.Zpower <> two_power_nat def
R39459:39463 compcert.lib.Integers Make eqmod def
R39466:39478 Coq.ZArith.Zpower <> two_power_nat def
R39513:39515 compcert.lib.Coqlib <> zlt def
R39513:39515 compcert.lib.Coqlib <> zlt def
R39545:39547 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39545:39547 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39567:39575 compcert.lib.Integers Make eqmod_sub thm
R39567:39575 compcert.lib.Integers Make eqmod_sub thm
R39584:39593 compcert.lib.Integers Make eqmod_refl thm
R39584:39593 compcert.lib.Integers Make eqmod_refl thm
R39623:39625 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39623:39625 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39645:39653 compcert.lib.Integers Make eqmod_sub thm
R39645:39653 compcert.lib.Integers Make eqmod_sub thm
R39662:39671 compcert.lib.Integers Make eqmod_refl thm
R39662:39671 compcert.lib.Integers Make eqmod_refl thm
R39680:39688 compcert.lib.Integers Make eqmod_sym thm
R39680:39688 compcert.lib.Integers Make eqmod_sym thm
R39708:39710 Coq.Init.Logic <> :type_scope:x_'='_x not
R39708:39710 Coq.Init.Logic <> :type_scope:x_'='_x not
R39746:39758 Coq.ZArith.Zpower <> two_power_nat def
R39725:39738 compcert.lib.Integers Make eqmod_small_eq thm
R39746:39758 Coq.ZArith.Zpower <> two_power_nat def
R39725:39738 compcert.lib.Integers Make eqmod_small_eq thm
R39789:39805 compcert.lib.Coqlib <> two_power_nat_pos thm
R39789:39805 compcert.lib.Coqlib <> two_power_nat_pos thm
R39846:39848 compcert.lib.Coqlib <> zlt def
R39846:39848 compcert.lib.Coqlib <> zlt def
prf 39875:39890 Make Z_one_complement
R39945:39947 Coq.Init.Logic <> :type_scope:x_'='_x not
R39927:39935 Coq.ZArith.BinInt Z testbit def
R39944:39944 compcert.lib.Integers <> i var
R39940:39940 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39938:39938 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R39939:39939 compcert.lib.Integers <> x var
R39948:39951 Coq.Init.Datatypes <> negb def
R39954:39962 Coq.ZArith.BinInt Z testbit def
R39966:39966 compcert.lib.Integers <> i var
R39964:39964 compcert.lib.Integers <> x var
R39906:39909 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R39910:39910 compcert.lib.Integers <> i var
R40013:40021 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R40013:40021 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R40065:40071 compcert.lib.Integers Make Zdecomp thm
R40065:40071 compcert.lib.Integers Make Zdecomp thm
R40087:40092 Coq.ZArith.BinInt Z div2 def
R40087:40092 Coq.ZArith.BinInt Z div2 def
R40131:40133 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40109:40110 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40111:40118 compcert.lib.Integers Make Zshiftin def
R40121:40125 Coq.ZArith.BinInt Z odd def
R40148:40155 compcert.lib.Integers Make Zshiftin def
R40178:40180 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40175:40176 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40158:40161 Coq.Init.Datatypes <> negb def
R40164:40168 Coq.ZArith.BinInt Z odd def
R40148:40155 compcert.lib.Integers Make Zshiftin def
R40178:40180 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40175:40176 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40158:40161 Coq.Init.Datatypes <> negb def
R40164:40168 Coq.ZArith.BinInt Z odd def
R40131:40133 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40109:40110 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40111:40118 compcert.lib.Integers Make Zshiftin def
R40121:40125 Coq.ZArith.BinInt Z odd def
R40197:40212 compcert.lib.Integers Make Ztestbit_shiftin thm
R40197:40212 compcert.lib.Integers Make Ztestbit_shiftin thm
R40197:40212 compcert.lib.Integers Make Ztestbit_shiftin thm
R40197:40212 compcert.lib.Integers Make Ztestbit_shiftin thm
R40234:40236 compcert.lib.Coqlib <> zeq def
R40234:40236 compcert.lib.Coqlib <> zeq def
R40280:40292 compcert.lib.Integers Make Zshiftin_spec thm
R40280:40292 compcert.lib.Integers Make Zshiftin_spec thm
R40280:40292 compcert.lib.Integers Make Zshiftin_spec thm
R40280:40292 compcert.lib.Integers Make Zshiftin_spec thm
R40305:40309 Coq.ZArith.BinInt Z odd def
R40321:40324 Coq.Init.Datatypes <> negb def
R40305:40309 Coq.ZArith.BinInt Z odd def
R40321:40324 Coq.Init.Datatypes <> negb def
R40321:40324 Coq.Init.Datatypes <> negb def
prf 40345:40358 Make Ztestbit_above
R40443:40445 Coq.Init.Logic <> :type_scope:x_'='_x not
R40430:40438 Coq.ZArith.BinInt Z testbit def
R40442:40442 compcert.lib.Integers <> i var
R40440:40440 compcert.lib.Integers <> x var
R40446:40450 Coq.Init.Datatypes <> false constr
R40410:40413 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R40409:40409 compcert.lib.Integers <> i var
R40414:40421 Coq.ZArith.BinInt Z of_nat def
R40423:40423 compcert.lib.Integers <> n var
R40380:40383 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40385:40387 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40384:40384 compcert.lib.Integers <> x var
R40384:40384 compcert.lib.Integers <> x var
R40388:40400 Coq.ZArith.Zpower <> two_power_nat def
R40402:40402 compcert.lib.Integers <> n var
R40496:40508 Coq.ZArith.Zpower <> two_power_nat def
R40496:40508 Coq.ZArith.Zpower <> two_power_nat def
R40569:40581 Coq.ZArith.BinInt Z testbit_0_l thm
R40569:40581 Coq.ZArith.BinInt Z testbit_0_l thm
R40596:40600 Coq.ZArith.Znat <> inj_S syndef
R40596:40600 Coq.ZArith.Znat <> inj_S syndef
R40617:40627 compcert.lib.Integers Make Ztestbit_eq thm
R40617:40627 compcert.lib.Integers Make Ztestbit_eq thm
R40638:40646 compcert.lib.Coqlib <> zeq_false thm
R40638:40646 compcert.lib.Coqlib <> zeq_false thm
R40672:40686 Coq.ZArith.Zpower <> two_power_nat_S thm
R40672:40686 Coq.ZArith.Zpower <> two_power_nat_S thm
R40703:40709 compcert.lib.Integers Make Zdecomp thm
R40703:40709 compcert.lib.Integers Make Zdecomp thm
R40733:40745 compcert.lib.Integers Make Zshiftin_spec thm
R40733:40745 compcert.lib.Integers Make Zshiftin_spec thm
R40763:40767 Coq.ZArith.BinInt Z odd def
R40763:40767 Coq.ZArith.BinInt Z odd def
prf 40819:40836 Make Ztestbit_above_neg
R40922:40924 Coq.Init.Logic <> :type_scope:x_'='_x not
R40909:40917 Coq.ZArith.BinInt Z testbit def
R40921:40921 compcert.lib.Integers <> i var
R40919:40919 compcert.lib.Integers <> x var
R40925:40928 Coq.Init.Datatypes <> true constr
R40889:40892 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R40888:40888 compcert.lib.Integers <> i var
R40893:40900 Coq.ZArith.BinInt Z of_nat def
R40902:40902 compcert.lib.Integers <> n var
R40873:40876 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40878:40880 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40857:40857 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40858:40870 Coq.ZArith.Zpower <> two_power_nat def
R40872:40872 compcert.lib.Integers <> n var
R40877:40877 compcert.lib.Integers <> x var
R40877:40877 compcert.lib.Integers <> x var
R40960:40960 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40958:40958 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40960:40960 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40958:40958 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R40988:40990 Coq.Init.Logic <> :type_scope:x_'='_x not
R40975:40983 Coq.ZArith.BinInt Z testbit def
R40991:40995 Coq.Init.Datatypes <> false constr
R40988:40990 Coq.Init.Logic <> :type_scope:x_'='_x not
R40975:40983 Coq.ZArith.BinInt Z testbit def
R40991:40995 Coq.Init.Datatypes <> false constr
R41010:41023 compcert.lib.Integers Make Ztestbit_above thm
R41010:41023 compcert.lib.Integers Make Ztestbit_above thm
R41087:41102 compcert.lib.Integers Make Z_one_complement thm
R41087:41102 compcert.lib.Integers Make Z_one_complement thm
R41131:41134 Coq.Init.Datatypes <> negb def
R41136:41140 Coq.Init.Datatypes <> false constr
R41120:41123 Coq.Init.Datatypes <> true constr
R41120:41123 Coq.Init.Datatypes <> true constr
R41131:41134 Coq.Init.Datatypes <> negb def
R41136:41140 Coq.Init.Datatypes <> false constr
R41167:41181 Coq.Bool.Bool <> negb_involutive thm
R41167:41181 Coq.Bool.Bool <> negb_involutive thm
prf 41212:41220 Make Zsign_bit
R41297:41299 Coq.Init.Logic <> :type_scope:x_'='_x not
R41273:41281 Coq.ZArith.BinInt Z testbit def
R41286:41293 Coq.ZArith.BinInt <> Z_of_nat syndef
R41295:41295 compcert.lib.Integers <> n var
R41283:41283 compcert.lib.Integers <> x var
R41303:41305 compcert.lib.Coqlib <> zlt def
R41310:41322 Coq.ZArith.Zpower <> two_power_nat def
R41324:41324 compcert.lib.Integers <> n var
R41307:41307 compcert.lib.Integers <> x var
R41343:41346 Coq.Init.Datatypes <> true constr
R41332:41336 Coq.Init.Datatypes <> false constr
R41240:41243 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41245:41247 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41244:41244 compcert.lib.Integers <> x var
R41244:41244 compcert.lib.Integers <> x var
R41248:41260 Coq.ZArith.Zpower <> two_power_nat def
R41263:41263 Coq.Init.Datatypes <> S constr
R41265:41265 compcert.lib.Integers <> n var
R41392:41404 Coq.ZArith.Zpower <> two_power_nat def
R41392:41404 Coq.ZArith.Zpower <> two_power_nat def
R41440:41443 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R41436:41438 Coq.Init.Logic <> :type_scope:x_'='_x not
R41445:41447 Coq.Init.Logic <> :type_scope:x_'='_x not
R41440:41443 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R41436:41438 Coq.Init.Logic <> :type_scope:x_'='_x not
R41445:41447 Coq.Init.Logic <> :type_scope:x_'='_x not
R41513:41517 Coq.ZArith.Znat <> inj_S syndef
R41513:41517 Coq.ZArith.Znat <> inj_S syndef
R41528:41538 compcert.lib.Integers Make Ztestbit_eq thm
R41528:41538 compcert.lib.Integers Make Ztestbit_eq thm
R41549:41557 compcert.lib.Coqlib <> zeq_false thm
R41549:41557 compcert.lib.Coqlib <> zeq_false thm
R41568:41578 Coq.ZArith.BinInt Z pred_succ thm
R41568:41578 Coq.ZArith.BinInt Z pred_succ thm
R41607:41621 Coq.ZArith.Zpower <> two_power_nat_S thm
R41607:41621 Coq.ZArith.Zpower <> two_power_nat_S thm
R41639:41641 compcert.lib.Coqlib <> zlt def
R41655:41667 Coq.ZArith.Zpower <> two_power_nat def
R41644:41649 Coq.ZArith.BinInt Z div2 def
R41683:41689 compcert.lib.Integers Make Zdecomp thm
R41703:41715 compcert.lib.Integers Make Zshiftin_spec thm
R41639:41641 compcert.lib.Coqlib <> zlt def
R41655:41667 Coq.ZArith.Zpower <> two_power_nat def
R41644:41649 Coq.ZArith.BinInt Z div2 def
R41683:41689 compcert.lib.Integers Make Zdecomp thm
R41683:41689 compcert.lib.Integers Make Zdecomp thm
R41703:41715 compcert.lib.Integers Make Zshiftin_spec thm
R41703:41715 compcert.lib.Integers Make Zshiftin_spec thm
R41730:41737 compcert.lib.Coqlib <> zlt_true thm
R41730:41737 compcert.lib.Coqlib <> zlt_true thm
R41756:41760 Coq.ZArith.BinInt Z odd def
R41756:41760 Coq.ZArith.BinInt Z odd def
R41786:41794 compcert.lib.Coqlib <> zlt_false thm
R41786:41794 compcert.lib.Coqlib <> zlt_false thm
R41813:41817 Coq.ZArith.BinInt Z odd def
R41813:41817 Coq.ZArith.BinInt Z odd def
R41844:41850 compcert.lib.Integers Make Zdecomp thm
R41869:41881 compcert.lib.Integers Make Zshiftin_spec thm
R41844:41850 compcert.lib.Integers Make Zdecomp thm
R41869:41881 compcert.lib.Integers Make Zshiftin_spec thm
R41902:41916 Coq.ZArith.Zpower <> two_power_nat_S thm
R41902:41916 Coq.ZArith.Zpower <> two_power_nat_S thm
R41934:41938 Coq.ZArith.BinInt Z odd def
R41934:41938 Coq.ZArith.BinInt Z odd def
prf 41982:41993 Make Zshiftin_ind
R42009:42009 Coq.Numbers.BinNums <> Z ind
R42105:42105 compcert.lib.Integers <> P var
R42107:42107 compcert.lib.Integers <> x var
R42096:42099 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R42100:42100 compcert.lib.Integers <> x var
R42062:42062 compcert.lib.Integers <> P var
R42065:42072 compcert.lib.Integers Make Zshiftin def
R42076:42076 compcert.lib.Integers <> x var
R42074:42074 compcert.lib.Integers <> b var
R42055:42055 compcert.lib.Integers <> P var
R42057:42057 compcert.lib.Integers <> x var
R42046:42049 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R42050:42050 compcert.lib.Integers <> x var
R42023:42023 compcert.lib.Integers <> P var
R42184:42191 compcert.lib.Integers Make Zshiftin def
R42199:42203 Coq.ZArith.BinInt Z pos syndef
R42193:42196 Coq.Init.Datatypes <> true constr
R42184:42191 compcert.lib.Integers Make Zshiftin def
R42199:42203 Coq.ZArith.BinInt Z pos syndef
R42193:42196 Coq.Init.Datatypes <> true constr
R42234:42241 compcert.lib.Integers Make Zshiftin def
R42250:42254 Coq.ZArith.BinInt Z pos syndef
R42243:42247 Coq.Init.Datatypes <> false constr
R42234:42241 compcert.lib.Integers Make Zshiftin def
R42250:42254 Coq.ZArith.BinInt Z pos syndef
R42243:42247 Coq.Init.Datatypes <> false constr
R42285:42292 compcert.lib.Integers Make Zshiftin def
R42294:42297 Coq.Init.Datatypes <> true constr
R42285:42292 compcert.lib.Integers Make Zshiftin def
R42294:42297 Coq.Init.Datatypes <> true constr
R0:-1 compcert.lib.Integers <> y var
prf 42380:42395 Make Zshiftin_pos_ind
R42411:42411 Coq.Numbers.BinNums <> Z ind
R42505:42505 compcert.lib.Integers <> P var
R42507:42507 compcert.lib.Integers <> x var
R42497:42499 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R42500:42500 compcert.lib.Integers <> x var
R42463:42463 compcert.lib.Integers <> P var
R42466:42473 compcert.lib.Integers Make Zshiftin def
R42477:42477 compcert.lib.Integers <> x var
R42475:42475 compcert.lib.Integers <> b var
R42456:42456 compcert.lib.Integers <> P var
R42458:42458 compcert.lib.Integers <> x var
R42448:42450 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R42451:42451 compcert.lib.Integers <> x var
R42425:42425 compcert.lib.Integers <> P var
R42602:42609 compcert.lib.Integers Make Zshiftin def
R42617:42621 Coq.ZArith.BinInt Z pos syndef
R42611:42614 Coq.Init.Datatypes <> true constr
R42602:42609 compcert.lib.Integers Make Zshiftin def
R42617:42621 Coq.ZArith.BinInt Z pos syndef
R42611:42614 Coq.Init.Datatypes <> true constr
R42652:42659 compcert.lib.Integers Make Zshiftin def
R42668:42672 Coq.ZArith.BinInt Z pos syndef
R42661:42665 Coq.Init.Datatypes <> false constr
R42652:42659 compcert.lib.Integers Make Zshiftin def
R42668:42672 Coq.ZArith.BinInt Z pos syndef
R42661:42665 Coq.Init.Datatypes <> false constr
prf 42710:42720 Make Ztestbit_le
R42824:42827 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R42823:42823 compcert.lib.Integers <> x var
R42828:42828 compcert.lib.Integers <> y var
R42809:42811 Coq.Init.Logic <> :type_scope:x_'='_x not
R42796:42804 Coq.ZArith.BinInt Z testbit def
R42808:42808 compcert.lib.Integers <> i var
R42806:42806 compcert.lib.Integers <> y var
R42812:42815 Coq.Init.Datatypes <> true constr
R42785:42787 Coq.Init.Logic <> :type_scope:x_'='_x not
R42772:42780 Coq.ZArith.BinInt Z testbit def
R42784:42784 compcert.lib.Integers <> i var
R42782:42782 compcert.lib.Integers <> x var
R42788:42791 Coq.Init.Datatypes <> true constr
R42763:42766 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R42767:42767 compcert.lib.Integers <> i var
R42740:42743 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R42744:42744 compcert.lib.Integers <> y var
R42886:42897 compcert.lib.Integers Make Zshiftin_ind thm
R42886:42897 compcert.lib.Integers Make Zshiftin_ind thm
R42949:42963 compcert.lib.Integers Make equal_same_bits thm
R42949:42963 compcert.lib.Integers Make equal_same_bits thm
R42987:42996 compcert.lib.Integers Make Ztestbit_0 thm
R42987:42996 compcert.lib.Integers Make Ztestbit_0 thm
R43009:43017 Coq.ZArith.BinInt Z testbit def
R43009:43017 Coq.ZArith.BinInt Z testbit def
R43074:43083 compcert.lib.Integers Make Ztestbit_0 thm
R43074:43083 compcert.lib.Integers Make Ztestbit_0 thm
R43113:43116 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R43104:43109 Coq.ZArith.BinInt Z div2 def
R43113:43116 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R43104:43109 Coq.ZArith.BinInt Z div2 def
R43158:43162 Coq.ZArith.BinInt <> Zsucc syndef
R43158:43162 Coq.ZArith.BinInt <> Zsucc syndef
R43192:43204 compcert.lib.Integers Make Ztestbit_succ thm
R43192:43204 compcert.lib.Integers Make Ztestbit_succ thm
R43221:43241 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R43221:43241 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R43270:43276 compcert.lib.Integers Make Zdecomp thm
R43270:43276 compcert.lib.Integers Make Zdecomp thm
R43292:43304 compcert.lib.Integers Make Zshiftin_spec thm
R43292:43304 compcert.lib.Integers Make Zshiftin_spec thm
R43292:43304 compcert.lib.Integers Make Zshiftin_spec thm
R43292:43304 compcert.lib.Integers Make Zshiftin_spec thm
R43322:43326 Coq.ZArith.BinInt Z odd def
R43322:43326 Coq.ZArith.BinInt Z odd def
R43417:43429 compcert.lib.Integers Make Ztestbit_base thm
R43417:43429 compcert.lib.Integers Make Ztestbit_base thm
R43451:43471 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R43451:43471 compcert.lib.Integers Make Ztestbit_shiftin_base thm
def 43550:43556 Make testbit
R43562:43564 compcert.lib.Integers Make int rec
R43571:43571 Coq.Numbers.BinNums <> Z ind
R43576:43579 Coq.Init.Datatypes <> bool ind
R43584:43592 Coq.ZArith.BinInt Z testbit def
R43607:43607 compcert.lib.Integers <> i var
R43595:43602 compcert.lib.Integers Make unsigned def
R43604:43604 compcert.lib.Integers <> x var
prf 43617:43628 Make testbit_repr
R43689:43691 Coq.Init.Logic <> :type_scope:x_'='_x not
R43671:43677 compcert.lib.Integers Make testbit def
R43688:43688 compcert.lib.Integers <> i var
R43680:43683 compcert.lib.Integers Make repr def
R43685:43685 compcert.lib.Integers <> x var
R43692:43700 Coq.ZArith.BinInt Z testbit def
R43704:43704 compcert.lib.Integers <> i var
R43702:43702 compcert.lib.Integers <> x var
R43648:43651 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R43653:43655 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R43652:43652 compcert.lib.Integers <> i var
R43652:43652 compcert.lib.Integers <> i var
R43656:43664 compcert.lib.Integers Make zwordsize def
R43731:43737 compcert.lib.Integers Make testbit def
R43746:43758 compcert.lib.Integers Make same_bits_eqm thm
R43746:43758 compcert.lib.Integers Make same_bits_eqm thm
prf 43789:43800 Make same_bits_eq
R43885:43887 Coq.Init.Logic <> :type_scope:x_'='_x not
R43884:43884 compcert.lib.Integers <> x var
R43888:43888 compcert.lib.Integers <> y var
R43863:43865 Coq.Init.Logic <> :type_scope:x_'='_x not
R43852:43858 compcert.lib.Integers Make testbit def
R43862:43862 compcert.lib.Integers <> i var
R43860:43860 compcert.lib.Integers <> x var
R43866:43872 compcert.lib.Integers Make testbit def
R43876:43876 compcert.lib.Integers <> i var
R43874:43874 compcert.lib.Integers <> y var
R43831:43834 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R43836:43838 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R43835:43835 compcert.lib.Integers <> i var
R43835:43835 compcert.lib.Integers <> i var
R43839:43847 compcert.lib.Integers Make zwordsize def
R43920:43932 compcert.lib.Integers Make repr_unsigned thm
R43920:43932 compcert.lib.Integers Make repr_unsigned thm
R43950:43962 compcert.lib.Integers Make repr_unsigned thm
R43950:43962 compcert.lib.Integers Make repr_unsigned thm
R43977:43988 compcert.lib.Integers Make eqm_samerepr thm
R43977:43988 compcert.lib.Integers Make eqm_samerepr thm
R43997:44009 compcert.lib.Integers Make eqm_same_bits thm
R43997:44009 compcert.lib.Integers Make eqm_same_bits thm
prf 44030:44039 Make bits_above
R44085:44087 Coq.Init.Logic <> :type_scope:x_'='_x not
R44074:44080 compcert.lib.Integers Make testbit def
R44084:44084 compcert.lib.Integers <> i var
R44082:44082 compcert.lib.Integers <> x var
R44088:44092 Coq.Init.Datatypes <> false constr
R44057:44060 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R44056:44056 compcert.lib.Integers <> i var
R44061:44069 compcert.lib.Integers Make zwordsize def
R44138:44145 compcert.lib.Integers Make wordsize def
R44118:44131 compcert.lib.Integers Make Ztestbit_above thm
R44138:44145 compcert.lib.Integers Make wordsize def
R44118:44131 compcert.lib.Integers Make Ztestbit_above thm
R44160:44173 compcert.lib.Integers Make unsigned_range thm
R44160:44173 compcert.lib.Integers Make unsigned_range thm
prf 44190:44198 Make bits_zero
R44227:44229 Coq.Init.Logic <> :type_scope:x_'='_x not
R44213:44219 compcert.lib.Integers Make testbit def
R44226:44226 compcert.lib.Integers <> i var
R44221:44224 compcert.lib.Integers Make zero def
R44230:44234 Coq.Init.Datatypes <> false constr
R44261:44267 compcert.lib.Integers Make testbit def
R44278:44290 compcert.lib.Integers Make unsigned_zero thm
R44278:44290 compcert.lib.Integers Make unsigned_zero thm
R44299:44308 compcert.lib.Integers Make Ztestbit_0 thm
R44299:44308 compcert.lib.Integers Make Ztestbit_0 thm
prf 44325:44332 Make bits_one
R44358:44360 Coq.Init.Logic <> :type_scope:x_'='_x not
R44345:44351 compcert.lib.Integers Make testbit def
R44357:44357 compcert.lib.Integers <> n var
R44353:44355 compcert.lib.Integers Make one def
R44361:44363 compcert.lib.Coqlib <> zeq def
R44365:44365 compcert.lib.Integers <> n var
R44386:44392 compcert.lib.Integers Make testbit def
R44411:44422 compcert.lib.Integers Make unsigned_one thm
R44411:44422 compcert.lib.Integers Make unsigned_one thm
R44431:44440 compcert.lib.Integers Make Ztestbit_1 thm
R44431:44440 compcert.lib.Integers Make Ztestbit_1 thm
prf 44456:44464 Make bits_mone
R44515:44517 Coq.Init.Logic <> :type_scope:x_'='_x not
R44501:44507 compcert.lib.Integers Make testbit def
R44514:44514 compcert.lib.Integers <> i var
R44509:44512 compcert.lib.Integers Make mone def
R44518:44521 Coq.Init.Datatypes <> true constr
R44480:44483 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R44485:44487 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R44484:44484 compcert.lib.Integers <> i var
R44484:44484 compcert.lib.Integers <> i var
R44488:44496 compcert.lib.Integers Make zwordsize def
R44548:44551 compcert.lib.Integers Make mone def
R44562:44573 compcert.lib.Integers Make testbit_repr thm
R44562:44573 compcert.lib.Integers Make testbit_repr thm
R44588:44598 compcert.lib.Integers Make Ztestbit_m1 thm
R44588:44598 compcert.lib.Integers Make Ztestbit_m1 thm
R44627:44635 compcert.lib.Integers Make bits_zero thm
R44637:44645 compcert.lib.Integers Make bits_mone thm
R44690:44701 compcert.lib.Integers Make same_bits_eq thm
prf 44758:44777 Make sign_bit_of_unsigned
R44817:44819 Coq.Init.Logic <> :type_scope:x_'='_x not
R44792:44798 compcert.lib.Integers Make testbit def
R44812:44814 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R44803:44811 compcert.lib.Integers Make zwordsize def
R44800:44800 compcert.lib.Integers <> x var
R44823:44825 compcert.lib.Coqlib <> zlt def
R44840:44851 compcert.lib.Integers Make half_modulus def
R44828:44835 compcert.lib.Integers Make unsigned def
R44837:44837 compcert.lib.Integers <> x var
R44869:44872 Coq.Init.Datatypes <> true constr
R44858:44862 Coq.Init.Datatypes <> false constr
R44899:44905 compcert.lib.Integers Make testbit def
R44922:44925 Coq.Init.Peano <> pred def
R44927:44934 compcert.lib.Integers Make wordsize def
R44922:44925 Coq.Init.Peano <> pred def
R44927:44934 compcert.lib.Integers Make wordsize def
R44961:44963 Coq.Init.Logic <> :type_scope:x_'='_x not
R44957:44959 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R44948:44956 compcert.lib.Integers Make zwordsize def
R44964:44971 Coq.ZArith.BinInt <> Z_of_nat syndef
R44961:44963 Coq.Init.Logic <> :type_scope:x_'='_x not
R44957:44959 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R44948:44956 compcert.lib.Integers Make zwordsize def
R44964:44971 Coq.ZArith.BinInt <> Z_of_nat syndef
R44991:44999 compcert.lib.Integers Make zwordsize def
R45007:45014 compcert.lib.Integers Make wordsize def
R45031:45041 compcert.lib.Integers WS wordsize defax
R45031:45041 compcert.lib.Integers WS wordsize defax
R45065:45084 compcert.lib.Integers WS wordsize_not_zero prfax
R45065:45084 compcert.lib.Integers WS wordsize_not_zero prfax
R45105:45109 Coq.ZArith.Znat <> inj_S syndef
R45105:45109 Coq.ZArith.Znat <> inj_S syndef
R45149:45151 Coq.Init.Logic <> :type_scope:x_'='_x not
R45137:45148 compcert.lib.Integers Make half_modulus def
R45152:45164 Coq.ZArith.Zpower <> two_power_nat def
R45149:45151 Coq.Init.Logic <> :type_scope:x_'='_x not
R45137:45148 compcert.lib.Integers Make half_modulus def
R45152:45164 Coq.ZArith.Zpower <> two_power_nat def
R45184:45202 compcert.lib.Coqlib <> two_power_nat_two_p thm
R45184:45202 compcert.lib.Coqlib <> two_power_nat_two_p thm
R45225:45242 compcert.lib.Integers Make half_modulus_power thm
R45225:45242 compcert.lib.Integers Make half_modulus_power thm
R45278:45286 compcert.lib.Integers Make Zsign_bit thm
R45278:45286 compcert.lib.Integers Make Zsign_bit thm
R45297:45311 Coq.ZArith.Zpower <> two_power_nat_S thm
R45297:45311 Coq.ZArith.Zpower <> two_power_nat_S thm
R45343:45362 compcert.lib.Integers Make half_modulus_modulus thm
R45343:45362 compcert.lib.Integers Make half_modulus_modulus thm
R45371:45384 compcert.lib.Integers Make unsigned_range thm
R45371:45384 compcert.lib.Integers Make unsigned_range thm
prf 45401:45411 Make bits_signed
R45462:45464 Coq.Init.Logic <> :type_scope:x_'='_x not
R45440:45448 Coq.ZArith.BinInt Z testbit def
R45461:45461 compcert.lib.Integers <> i var
R45451:45456 compcert.lib.Integers Make signed def
R45458:45458 compcert.lib.Integers <> x var
R45465:45471 compcert.lib.Integers Make testbit def
R45479:45481 compcert.lib.Coqlib <> zlt def
R45485:45493 compcert.lib.Integers Make zwordsize def
R45483:45483 compcert.lib.Integers <> i var
R45516:45518 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R45507:45515 compcert.lib.Integers Make zwordsize def
R45500:45500 compcert.lib.Integers <> i var
R45473:45473 compcert.lib.Integers <> x var
R45429:45432 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R45433:45433 compcert.lib.Integers <> i var
R45552:45554 compcert.lib.Coqlib <> zlt def
R45558:45566 compcert.lib.Integers Make zwordsize def
R45552:45554 compcert.lib.Coqlib <> zlt def
R45558:45566 compcert.lib.Integers Make zwordsize def
R45580:45592 compcert.lib.Integers Make same_bits_eqm thm
R45580:45592 compcert.lib.Integers Make same_bits_eqm thm
R45601:45619 compcert.lib.Integers Make eqm_signed_unsigned thm
R45601:45619 compcert.lib.Integers Make eqm_signed_unsigned thm
R45641:45646 compcert.lib.Integers Make signed def
R45657:45676 compcert.lib.Integers Make sign_bit_of_unsigned thm
R45657:45676 compcert.lib.Integers Make sign_bit_of_unsigned thm
R45689:45691 compcert.lib.Coqlib <> zlt def
R45706:45717 compcert.lib.Integers Make half_modulus def
R45694:45701 compcert.lib.Integers Make unsigned def
R45689:45691 compcert.lib.Coqlib <> zlt def
R45706:45717 compcert.lib.Integers Make half_modulus def
R45694:45701 compcert.lib.Integers Make unsigned def
R45753:45760 compcert.lib.Integers Make wordsize def
R45733:45746 compcert.lib.Integers Make Ztestbit_above thm
R45753:45760 compcert.lib.Integers Make wordsize def
R45733:45746 compcert.lib.Integers Make Ztestbit_above thm
R45769:45782 compcert.lib.Integers Make unsigned_range thm
R45769:45782 compcert.lib.Integers Make unsigned_range thm
R45827:45834 compcert.lib.Integers Make wordsize def
R45803:45820 compcert.lib.Integers Make Ztestbit_above_neg thm
R45827:45834 compcert.lib.Integers Make wordsize def
R45803:45820 compcert.lib.Integers Make Ztestbit_above_neg thm
R45848:45854 compcert.lib.Integers Make modulus def
R45848:45854 compcert.lib.Integers Make modulus def
R45869:45882 compcert.lib.Integers Make unsigned_range thm
R45869:45882 compcert.lib.Integers Make unsigned_range thm
prf 45913:45919 Make bits_le
R46028:46031 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R46018:46025 compcert.lib.Integers Make unsigned def
R46027:46027 compcert.lib.Integers <> x var
R46032:46039 compcert.lib.Integers Make unsigned def
R46041:46041 compcert.lib.Integers <> y var
R46004:46006 Coq.Init.Logic <> :type_scope:x_'='_x not
R45993:45999 compcert.lib.Integers Make testbit def
R46003:46003 compcert.lib.Integers <> i var
R46001:46001 compcert.lib.Integers <> y var
R46007:46010 Coq.Init.Datatypes <> true constr
R45982:45984 Coq.Init.Logic <> :type_scope:x_'='_x not
R45971:45977 compcert.lib.Integers Make testbit def
R45981:45981 compcert.lib.Integers <> i var
R45979:45979 compcert.lib.Integers <> x var
R45985:45988 Coq.Init.Datatypes <> true constr
R45950:45953 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R45955:45957 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R45954:45954 compcert.lib.Integers <> i var
R45954:45954 compcert.lib.Integers <> i var
R45958:45966 compcert.lib.Integers Make zwordsize def
R46067:46077 compcert.lib.Integers Make Ztestbit_le thm
R46067:46077 compcert.lib.Integers Make Ztestbit_le thm
R46092:46105 compcert.lib.Integers Make unsigned_range thm
R46092:46105 compcert.lib.Integers Make unsigned_range thm
R46135:46141 compcert.lib.Integers Make testbit def
R46135:46141 compcert.lib.Integers Make testbit def
R46159:46161 compcert.lib.Coqlib <> zlt def
R46165:46173 compcert.lib.Integers Make zwordsize def
R46159:46161 compcert.lib.Coqlib <> zlt def
R46165:46173 compcert.lib.Integers Make zwordsize def
R46211:46217 compcert.lib.Integers Make testbit def
R46211:46217 compcert.lib.Integers Make testbit def
R46239:46248 compcert.lib.Integers Make bits_above thm
R46239:46248 compcert.lib.Integers Make bits_above thm
prf 46334:46341 Make bits_and
R46403:46405 Coq.Init.Logic <> :type_scope:x_'='_x not
R46384:46390 compcert.lib.Integers Make testbit def
R46402:46402 compcert.lib.Integers <> i var
R46393:46395 compcert.lib.Integers Make and def
R46399:46399 compcert.lib.Integers <> y var
R46397:46397 compcert.lib.Integers <> x var
R46417:46420 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R46406:46412 compcert.lib.Integers Make testbit def
R46416:46416 compcert.lib.Integers <> i var
R46414:46414 compcert.lib.Integers <> x var
R46421:46427 compcert.lib.Integers Make testbit def
R46431:46431 compcert.lib.Integers <> i var
R46429:46429 compcert.lib.Integers <> y var
R46361:46364 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46366:46368 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46365:46365 compcert.lib.Integers <> i var
R46365:46365 compcert.lib.Integers <> i var
R46369:46377 compcert.lib.Integers Make zwordsize def
R46458:46460 compcert.lib.Integers Make and def
R46471:46482 compcert.lib.Integers Make testbit_repr thm
R46471:46482 compcert.lib.Integers Make testbit_repr thm
R46499:46509 Coq.ZArith.BinInt Z land_spec thm
R46499:46509 Coq.ZArith.BinInt Z land_spec thm
R0:-1 compcert.lib.Integers <> y var
prf 46535:46541 Make bits_or
R46602:46604 Coq.Init.Logic <> :type_scope:x_'='_x not
R46584:46590 compcert.lib.Integers Make testbit def
R46601:46601 compcert.lib.Integers <> i var
R46593:46594 compcert.lib.Integers Make or def
R46598:46598 compcert.lib.Integers <> y var
R46596:46596 compcert.lib.Integers <> x var
R46616:46619 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R46605:46611 compcert.lib.Integers Make testbit def
R46615:46615 compcert.lib.Integers <> i var
R46613:46613 compcert.lib.Integers <> x var
R46620:46626 compcert.lib.Integers Make testbit def
R46630:46630 compcert.lib.Integers <> i var
R46628:46628 compcert.lib.Integers <> y var
R46561:46564 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46566:46568 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46565:46565 compcert.lib.Integers <> i var
R46565:46565 compcert.lib.Integers <> i var
R46569:46577 compcert.lib.Integers Make zwordsize def
R46657:46658 compcert.lib.Integers Make or def
R46669:46680 compcert.lib.Integers Make testbit_repr thm
R46669:46680 compcert.lib.Integers Make testbit_repr thm
R46697:46706 Coq.ZArith.BinInt Z lor_spec thm
R46697:46706 Coq.ZArith.BinInt Z lor_spec thm
R0:-1 compcert.lib.Integers <> y var
prf 46732:46739 Make bits_xor
R46801:46803 Coq.Init.Logic <> :type_scope:x_'='_x not
R46782:46788 compcert.lib.Integers Make testbit def
R46800:46800 compcert.lib.Integers <> i var
R46791:46793 compcert.lib.Integers Make xor def
R46797:46797 compcert.lib.Integers <> y var
R46795:46795 compcert.lib.Integers <> x var
R46804:46807 Coq.Init.Datatypes <> xorb def
R46824:46830 compcert.lib.Integers Make testbit def
R46834:46834 compcert.lib.Integers <> i var
R46832:46832 compcert.lib.Integers <> y var
R46810:46816 compcert.lib.Integers Make testbit def
R46820:46820 compcert.lib.Integers <> i var
R46818:46818 compcert.lib.Integers <> x var
R46759:46762 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46764:46766 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46763:46763 compcert.lib.Integers <> i var
R46763:46763 compcert.lib.Integers <> i var
R46767:46775 compcert.lib.Integers Make zwordsize def
R46862:46864 compcert.lib.Integers Make xor def
R46875:46886 compcert.lib.Integers Make testbit_repr thm
R46875:46886 compcert.lib.Integers Make testbit_repr thm
R46903:46913 Coq.ZArith.BinInt Z lxor_spec thm
R46903:46913 Coq.ZArith.BinInt Z lxor_spec thm
R0:-1 compcert.lib.Integers <> y var
prf 46939:46946 Make bits_not
R47004:47006 Coq.Init.Logic <> :type_scope:x_'='_x not
R46987:46993 compcert.lib.Integers Make testbit def
R47003:47003 compcert.lib.Integers <> i var
R46996:46998 compcert.lib.Integers Make not def
R47000:47000 compcert.lib.Integers <> x var
R47007:47010 Coq.Init.Datatypes <> negb def
R47013:47019 compcert.lib.Integers Make testbit def
R47023:47023 compcert.lib.Integers <> i var
R47021:47021 compcert.lib.Integers <> x var
R46964:46967 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46969:46971 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R46968:46968 compcert.lib.Integers <> i var
R46968:46968 compcert.lib.Integers <> i var
R46972:46980 compcert.lib.Integers Make zwordsize def
R47051:47053 compcert.lib.Integers Make not def
R47064:47071 compcert.lib.Integers Make bits_xor thm
R47064:47071 compcert.lib.Integers Make bits_xor thm
R47088:47096 compcert.lib.Integers Make bits_mone thm
R47088:47096 compcert.lib.Integers Make bits_mone thm
R47124:47131 compcert.lib.Integers Make bits_and thm
R47133:47139 compcert.lib.Integers Make bits_or thm
R47141:47148 compcert.lib.Integers Make bits_xor thm
R47150:47157 compcert.lib.Integers Make bits_not thm
prf 47175:47184 Make and_commut
R47206:47208 Coq.Init.Logic <> :type_scope:x_'='_x not
R47199:47201 compcert.lib.Integers Make and def
R47205:47205 compcert.lib.Integers <> y var
R47203:47203 compcert.lib.Integers <> x var
R47209:47211 compcert.lib.Integers Make and def
R47215:47215 compcert.lib.Integers <> x var
R47213:47213 compcert.lib.Integers <> y var
prf 47252:47260 Make and_assoc
R47292:47294 Coq.Init.Logic <> :type_scope:x_'='_x not
R47277:47279 compcert.lib.Integers Make and def
R47291:47291 compcert.lib.Integers <> z var
R47282:47284 compcert.lib.Integers Make and def
R47288:47288 compcert.lib.Integers <> y var
R47286:47286 compcert.lib.Integers <> x var
R47295:47297 compcert.lib.Integers Make and def
R47302:47304 compcert.lib.Integers Make and def
R47308:47308 compcert.lib.Integers <> z var
R47306:47306 compcert.lib.Integers <> y var
R47299:47299 compcert.lib.Integers <> x var
prf 47346:47353 Make and_zero
R47376:47378 Coq.Init.Logic <> :type_scope:x_'='_x not
R47366:47368 compcert.lib.Integers Make and def
R47372:47375 compcert.lib.Integers Make zero def
R47370:47370 compcert.lib.Integers <> x var
R47379:47382 compcert.lib.Integers Make zero def
R47411:47422 Coq.Bool.Bool <> andb_b_false syndef
R47411:47422 Coq.Bool.Bool <> andb_b_false syndef
prf 47441:47450 Make and_zero_l
R47473:47475 Coq.Init.Logic <> :type_scope:x_'='_x not
R47463:47465 compcert.lib.Integers Make and def
R47472:47472 compcert.lib.Integers <> x var
R47467:47470 compcert.lib.Integers Make zero def
R47476:47479 compcert.lib.Integers Make zero def
R47507:47516 compcert.lib.Integers Make and_commut thm
R47507:47516 compcert.lib.Integers Make and_commut thm
R47525:47532 compcert.lib.Integers Make and_zero thm
R47525:47532 compcert.lib.Integers Make and_zero thm
prf 47549:47556 Make and_mone
R47579:47581 Coq.Init.Logic <> :type_scope:x_'='_x not
R47569:47571 compcert.lib.Integers Make and def
R47575:47578 compcert.lib.Integers Make mone def
R47573:47573 compcert.lib.Integers <> x var
R47582:47582 compcert.lib.Integers <> x var
R47611:47621 Coq.Bool.Bool <> andb_b_true syndef
R47611:47621 Coq.Bool.Bool <> andb_b_true syndef
prf 47640:47649 Make and_mone_l
R47672:47674 Coq.Init.Logic <> :type_scope:x_'='_x not
R47662:47664 compcert.lib.Integers Make and def
R47671:47671 compcert.lib.Integers <> x var
R47666:47669 compcert.lib.Integers Make mone def
R47675:47675 compcert.lib.Integers <> x var
R47703:47712 compcert.lib.Integers Make and_commut thm
R47703:47712 compcert.lib.Integers Make and_commut thm
R47721:47728 compcert.lib.Integers Make and_mone thm
R47721:47728 compcert.lib.Integers Make and_mone thm
prf 47745:47752 Make and_idem
R47772:47774 Coq.Init.Logic <> :type_scope:x_'='_x not
R47765:47767 compcert.lib.Integers Make and def
R47771:47771 compcert.lib.Integers <> x var
R47769:47769 compcert.lib.Integers <> x var
R47775:47775 compcert.lib.Integers <> x var
R47808:47814 compcert.lib.Integers Make testbit def
R47808:47814 compcert.lib.Integers Make testbit def
prf 47842:47850 Make or_commut
R47871:47873 Coq.Init.Logic <> :type_scope:x_'='_x not
R47865:47866 compcert.lib.Integers Make or def
R47870:47870 compcert.lib.Integers <> y var
R47868:47868 compcert.lib.Integers <> x var
R47874:47875 compcert.lib.Integers Make or def
R47879:47879 compcert.lib.Integers <> x var
R47877:47877 compcert.lib.Integers <> y var
prf 47916:47923 Make or_assoc
R47953:47955 Coq.Init.Logic <> :type_scope:x_'='_x not
R47940:47941 compcert.lib.Integers Make or def
R47952:47952 compcert.lib.Integers <> z var
R47944:47945 compcert.lib.Integers Make or def
R47949:47949 compcert.lib.Integers <> y var
R47947:47947 compcert.lib.Integers <> x var
R47956:47957 compcert.lib.Integers Make or def
R47962:47963 compcert.lib.Integers Make or def
R47967:47967 compcert.lib.Integers <> z var
R47965:47965 compcert.lib.Integers <> y var
R47959:47959 compcert.lib.Integers <> x var
prf 48005:48011 Make or_zero
R48033:48035 Coq.Init.Logic <> :type_scope:x_'='_x not
R48024:48025 compcert.lib.Integers Make or def
R48029:48032 compcert.lib.Integers Make zero def
R48027:48027 compcert.lib.Integers <> x var
R48036:48036 compcert.lib.Integers <> x var
prf 48076:48084 Make or_zero_l
R48106:48108 Coq.Init.Logic <> :type_scope:x_'='_x not
R48097:48098 compcert.lib.Integers Make or def
R48105:48105 compcert.lib.Integers <> x var
R48100:48103 compcert.lib.Integers Make zero def
R48109:48109 compcert.lib.Integers <> x var
R48137:48145 compcert.lib.Integers Make or_commut thm
R48137:48145 compcert.lib.Integers Make or_commut thm
R48154:48160 compcert.lib.Integers Make or_zero thm
R48154:48160 compcert.lib.Integers Make or_zero thm
prf 48177:48183 Make or_mone
R48205:48207 Coq.Init.Logic <> :type_scope:x_'='_x not
R48196:48197 compcert.lib.Integers Make or def
R48201:48204 compcert.lib.Integers Make mone def
R48199:48199 compcert.lib.Integers <> x var
R48208:48211 compcert.lib.Integers Make mone def
prf 48249:48255 Make or_idem
R48274:48276 Coq.Init.Logic <> :type_scope:x_'='_x not
R48268:48269 compcert.lib.Integers Make or def
R48273:48273 compcert.lib.Integers <> x var
R48271:48271 compcert.lib.Integers <> x var
R48277:48277 compcert.lib.Integers <> x var
R48310:48316 compcert.lib.Integers Make testbit def
R48310:48316 compcert.lib.Integers Make testbit def
prf 48344:48357 Make and_or_distrib
R48392:48394 Coq.Init.Logic <> :type_scope:x_'='_x not
R48378:48380 compcert.lib.Integers Make and def
R48385:48386 compcert.lib.Integers Make or def
R48390:48390 compcert.lib.Integers <> z var
R48388:48388 compcert.lib.Integers <> y var
R48382:48382 compcert.lib.Integers <> x var
R48395:48396 compcert.lib.Integers Make or def
R48409:48411 compcert.lib.Integers Make and def
R48415:48415 compcert.lib.Integers <> z var
R48413:48413 compcert.lib.Integers <> x var
R48399:48401 compcert.lib.Integers Make and def
R48405:48405 compcert.lib.Integers <> y var
R48403:48403 compcert.lib.Integers <> x var
R48445:48453 Coq.Bool.Bool <> demorgan1 syndef
R48445:48453 Coq.Bool.Bool <> demorgan1 syndef
prf 48474:48489 Make and_or_distrib_l
R48524:48526 Coq.Init.Logic <> :type_scope:x_'='_x not
R48510:48512 compcert.lib.Integers Make and def
R48523:48523 compcert.lib.Integers <> z var
R48515:48516 compcert.lib.Integers Make or def
R48520:48520 compcert.lib.Integers <> y var
R48518:48518 compcert.lib.Integers <> x var
R48527:48528 compcert.lib.Integers Make or def
R48541:48543 compcert.lib.Integers Make and def
R48547:48547 compcert.lib.Integers <> z var
R48545:48545 compcert.lib.Integers <> y var
R48531:48533 compcert.lib.Integers Make and def
R48537:48537 compcert.lib.Integers <> z var
R48535:48535 compcert.lib.Integers <> x var
R48577:48586 compcert.lib.Integers Make and_commut thm
R48589:48590 compcert.lib.Integers Make or def
R48577:48586 compcert.lib.Integers Make and_commut thm
R48589:48590 compcert.lib.Integers Make or def
R48607:48620 compcert.lib.Integers Make and_or_distrib thm
R48607:48620 compcert.lib.Integers Make and_or_distrib thm
R48638:48647 compcert.lib.Integers Make and_commut thm
R48638:48647 compcert.lib.Integers Make and_commut thm
R48638:48647 compcert.lib.Integers Make and_commut thm
prf 48664:48677 Make or_and_distrib
R48712:48714 Coq.Init.Logic <> :type_scope:x_'='_x not
R48698:48699 compcert.lib.Integers Make or def
R48704:48706 compcert.lib.Integers Make and def
R48710:48710 compcert.lib.Integers <> z var
R48708:48708 compcert.lib.Integers <> y var
R48701:48701 compcert.lib.Integers <> x var
R48715:48717 compcert.lib.Integers Make and def
R48729:48730 compcert.lib.Integers Make or def
R48734:48734 compcert.lib.Integers <> z var
R48732:48732 compcert.lib.Integers <> x var
R48720:48721 compcert.lib.Integers Make or def
R48725:48725 compcert.lib.Integers <> y var
R48723:48723 compcert.lib.Integers <> x var
R48764:48781 Coq.Bool.Bool <> orb_andb_distrib_r thm
R48764:48781 Coq.Bool.Bool <> orb_andb_distrib_r thm
prf 48803:48818 Make or_and_distrib_l
R48853:48855 Coq.Init.Logic <> :type_scope:x_'='_x not
R48839:48840 compcert.lib.Integers Make or def
R48852:48852 compcert.lib.Integers <> z var
R48843:48845 compcert.lib.Integers Make and def
R48849:48849 compcert.lib.Integers <> y var
R48847:48847 compcert.lib.Integers <> x var
R48856:48858 compcert.lib.Integers Make and def
R48870:48871 compcert.lib.Integers Make or def
R48875:48875 compcert.lib.Integers <> z var
R48873:48873 compcert.lib.Integers <> y var
R48861:48862 compcert.lib.Integers Make or def
R48866:48866 compcert.lib.Integers <> z var
R48864:48864 compcert.lib.Integers <> x var
R48905:48913 compcert.lib.Integers Make or_commut thm
R48916:48918 compcert.lib.Integers Make and def
R48905:48913 compcert.lib.Integers Make or_commut thm
R48916:48918 compcert.lib.Integers Make and def
R48935:48948 compcert.lib.Integers Make or_and_distrib thm
R48935:48948 compcert.lib.Integers Make or_and_distrib thm
R48966:48974 compcert.lib.Integers Make or_commut thm
R48966:48974 compcert.lib.Integers Make or_commut thm
R48966:48974 compcert.lib.Integers Make or_commut thm
prf 48991:49003 Make and_or_absorb
R49032:49034 Coq.Init.Logic <> :type_scope:x_'='_x not
R49018:49020 compcert.lib.Integers Make and def
R49025:49026 compcert.lib.Integers Make or def
R49030:49030 compcert.lib.Integers <> y var
R49028:49028 compcert.lib.Integers <> x var
R49022:49022 compcert.lib.Integers <> x var
R49035:49035 compcert.lib.Integers <> x var
R49094:49096 Coq.Init.Logic <> :type_scope:x_'='_x not
R49082:49086 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49093:49093 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49081:49081 compcert.lib.Integers <> a var
R49088:49091 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49087:49087 compcert.lib.Integers <> a var
R49092:49092 compcert.lib.Integers <> b var
R49097:49097 compcert.lib.Integers <> a var
R49094:49096 Coq.Init.Logic <> :type_scope:x_'='_x not
R49082:49086 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49093:49093 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49081:49081 compcert.lib.Integers <> a var
R49088:49091 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49087:49087 compcert.lib.Integers <> a var
R49092:49092 compcert.lib.Integers <> b var
R49097:49097 compcert.lib.Integers <> a var
prf 49137:49149 Make or_and_absorb
R49178:49180 Coq.Init.Logic <> :type_scope:x_'='_x not
R49164:49165 compcert.lib.Integers Make or def
R49170:49172 compcert.lib.Integers Make and def
R49176:49176 compcert.lib.Integers <> y var
R49174:49174 compcert.lib.Integers <> x var
R49167:49167 compcert.lib.Integers <> x var
R49181:49181 compcert.lib.Integers <> x var
R49239:49241 Coq.Init.Logic <> :type_scope:x_'='_x not
R49227:49231 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49238:49238 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49226:49226 compcert.lib.Integers <> a var
R49233:49236 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49232:49232 compcert.lib.Integers <> a var
R49237:49237 compcert.lib.Integers <> b var
R49242:49242 compcert.lib.Integers <> a var
R49239:49241 Coq.Init.Logic <> :type_scope:x_'='_x not
R49227:49231 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49238:49238 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R49226:49226 compcert.lib.Integers <> a var
R49233:49236 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R49232:49232 compcert.lib.Integers <> a var
R49237:49237 compcert.lib.Integers <> b var
R49242:49242 compcert.lib.Integers <> a var
prf 49282:49291 Make xor_commut
R49313:49315 Coq.Init.Logic <> :type_scope:x_'='_x not
R49306:49308 compcert.lib.Integers Make xor def
R49312:49312 compcert.lib.Integers <> y var
R49310:49310 compcert.lib.Integers <> x var
R49316:49318 compcert.lib.Integers Make xor def
R49322:49322 compcert.lib.Integers <> x var
R49320:49320 compcert.lib.Integers <> y var
R49351:49359 Coq.Bool.Bool <> xorb_comm thm
R49351:49359 Coq.Bool.Bool <> xorb_comm thm
prf 49377:49385 Make xor_assoc
R49417:49419 Coq.Init.Logic <> :type_scope:x_'='_x not
R49402:49404 compcert.lib.Integers Make xor def
R49416:49416 compcert.lib.Integers <> z var
R49407:49409 compcert.lib.Integers Make xor def
R49413:49413 compcert.lib.Integers <> y var
R49411:49411 compcert.lib.Integers <> x var
R49420:49422 compcert.lib.Integers Make xor def
R49427:49429 compcert.lib.Integers Make xor def
R49433:49433 compcert.lib.Integers <> z var
R49431:49431 compcert.lib.Integers <> y var
R49424:49424 compcert.lib.Integers <> x var
R49463:49472 Coq.Bool.Bool <> xorb_assoc syndef
R49463:49472 Coq.Bool.Bool <> xorb_assoc syndef
prf 49489:49496 Make xor_zero
R49519:49521 Coq.Init.Logic <> :type_scope:x_'='_x not
R49509:49511 compcert.lib.Integers Make xor def
R49515:49518 compcert.lib.Integers Make zero def
R49513:49513 compcert.lib.Integers <> x var
R49522:49522 compcert.lib.Integers <> x var
R49551:49560 Coq.Bool.Bool <> xorb_false syndef
R49551:49560 Coq.Bool.Bool <> xorb_false syndef
prf 49580:49589 Make xor_zero_l
R49612:49614 Coq.Init.Logic <> :type_scope:x_'='_x not
R49602:49604 compcert.lib.Integers Make xor def
R49611:49611 compcert.lib.Integers <> x var
R49606:49609 compcert.lib.Integers Make zero def
R49615:49615 compcert.lib.Integers <> x var
R49643:49652 compcert.lib.Integers Make xor_commut thm
R49643:49652 compcert.lib.Integers Make xor_commut thm
R49661:49668 compcert.lib.Integers Make xor_zero thm
R49661:49668 compcert.lib.Integers Make xor_zero thm
prf 49685:49692 Make xor_idem
R49712:49714 Coq.Init.Logic <> :type_scope:x_'='_x not
R49705:49707 compcert.lib.Integers Make xor def
R49711:49711 compcert.lib.Integers <> x var
R49709:49709 compcert.lib.Integers <> x var
R49715:49718 compcert.lib.Integers Make zero def
R49747:49760 Coq.Bool.Bool <> xorb_nilpotent thm
R49747:49760 Coq.Bool.Bool <> xorb_nilpotent thm
prf 49778:49789 Make xor_zero_one
R49804:49806 Coq.Init.Logic <> :type_scope:x_'='_x not
R49792:49794 compcert.lib.Integers Make xor def
R49801:49803 compcert.lib.Integers Make one def
R49796:49799 compcert.lib.Integers Make zero def
R49807:49809 compcert.lib.Integers Make one def
R49827:49836 compcert.lib.Integers Make xor_commut thm
R49827:49836 compcert.lib.Integers Make xor_commut thm
R49845:49852 compcert.lib.Integers Make xor_zero thm
R49845:49852 compcert.lib.Integers Make xor_zero thm
prf 49869:49879 Make xor_one_one
R49893:49895 Coq.Init.Logic <> :type_scope:x_'='_x not
R49882:49884 compcert.lib.Integers Make xor def
R49890:49892 compcert.lib.Integers Make one def
R49886:49888 compcert.lib.Integers Make one def
R49896:49899 compcert.lib.Integers Make zero def
R49915:49922 compcert.lib.Integers Make xor_idem thm
R49915:49922 compcert.lib.Integers Make xor_idem thm
prf 49939:49952 Make xor_zero_equal
R49986:49988 Coq.Init.Logic <> :type_scope:x_'='_x not
R49985:49985 compcert.lib.Integers <> x var
R49989:49989 compcert.lib.Integers <> y var
R49974:49976 Coq.Init.Logic <> :type_scope:x_'='_x not
R49967:49969 compcert.lib.Integers Make xor def
R49973:49973 compcert.lib.Integers <> y var
R49971:49971 compcert.lib.Integers <> x var
R49977:49980 compcert.lib.Integers Make zero def
R50015:50026 compcert.lib.Integers Make same_bits_eq thm
R50015:50026 compcert.lib.Integers Make same_bits_eq thm
R50080:50082 Coq.Init.Logic <> :type_scope:x_'='_x not
R50048:50051 Coq.Init.Datatypes <> xorb def
R50068:50074 compcert.lib.Integers Make testbit def
R50054:50060 compcert.lib.Integers Make testbit def
R50083:50087 Coq.Init.Datatypes <> false constr
R50080:50082 Coq.Init.Logic <> :type_scope:x_'='_x not
R50048:50051 Coq.Init.Datatypes <> xorb def
R50068:50074 compcert.lib.Integers Make testbit def
R50054:50060 compcert.lib.Integers Make testbit def
R50083:50087 Coq.Init.Datatypes <> false constr
R50106:50113 compcert.lib.Integers Make bits_xor thm
R50106:50113 compcert.lib.Integers Make bits_xor thm
R50139:50147 compcert.lib.Integers Make bits_zero thm
R50139:50147 compcert.lib.Integers Make bits_zero thm
R50162:50168 compcert.lib.Integers Make testbit def
R50186:50192 compcert.lib.Integers Make testbit def
R50162:50168 compcert.lib.Integers Make testbit def
R50186:50192 compcert.lib.Integers Make testbit def
R50186:50192 compcert.lib.Integers Make testbit def
prf 50243:50257 Make and_xor_distrib
R50293:50295 Coq.Init.Logic <> :type_scope:x_'='_x not
R50278:50280 compcert.lib.Integers Make and def
R50285:50287 compcert.lib.Integers Make xor def
R50291:50291 compcert.lib.Integers <> z var
R50289:50289 compcert.lib.Integers <> y var
R50282:50282 compcert.lib.Integers <> x var
R50296:50298 compcert.lib.Integers Make xor def
R50311:50313 compcert.lib.Integers Make and def
R50317:50317 compcert.lib.Integers <> z var
R50315:50315 compcert.lib.Integers <> x var
R50301:50303 compcert.lib.Integers Make and def
R50307:50307 compcert.lib.Integers <> y var
R50305:50305 compcert.lib.Integers <> x var
R50381:50383 Coq.Init.Logic <> :type_scope:x_'='_x not
R50367:50371 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50380:50380 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50366:50366 compcert.lib.Integers <> a var
R50372:50375 Coq.Init.Datatypes <> xorb def
R50379:50379 compcert.lib.Integers <> c var
R50377:50377 compcert.lib.Integers <> b var
R50384:50387 Coq.Init.Datatypes <> xorb def
R50400:50403 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50399:50399 compcert.lib.Integers <> a var
R50404:50404 compcert.lib.Integers <> c var
R50391:50394 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50390:50390 compcert.lib.Integers <> a var
R50395:50395 compcert.lib.Integers <> b var
R50381:50383 Coq.Init.Logic <> :type_scope:x_'='_x not
R50367:50371 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50380:50380 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50366:50366 compcert.lib.Integers <> a var
R50372:50375 Coq.Init.Datatypes <> xorb def
R50379:50379 compcert.lib.Integers <> c var
R50377:50377 compcert.lib.Integers <> b var
R50384:50387 Coq.Init.Datatypes <> xorb def
R50400:50403 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50399:50399 compcert.lib.Integers <> a var
R50404:50404 compcert.lib.Integers <> c var
R50391:50394 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R50390:50390 compcert.lib.Integers <> a var
R50395:50395 compcert.lib.Integers <> b var
prf 50447:50452 Make and_le
R50487:50490 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R50469:50476 compcert.lib.Integers Make unsigned def
R50479:50481 compcert.lib.Integers Make and def
R50485:50485 compcert.lib.Integers <> y var
R50483:50483 compcert.lib.Integers <> x var
R50491:50498 compcert.lib.Integers Make unsigned def
R50500:50500 compcert.lib.Integers <> x var
R50526:50532 compcert.lib.Integers Make bits_le thm
R50526:50532 compcert.lib.Integers Make bits_le thm
R50554:50561 compcert.lib.Integers Make bits_and thm
R50554:50561 compcert.lib.Integers Make bits_and thm
R50584:50596 Coq.Bool.Bool <> andb_true_iff thm
R50584:50596 Coq.Bool.Bool <> andb_true_iff thm
R0:-1 compcert.lib.Integers <> y var
prf 50626:50630 Make or_le
R50657:50660 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R50647:50654 compcert.lib.Integers Make unsigned def
R50656:50656 compcert.lib.Integers <> x var
R50661:50668 compcert.lib.Integers Make unsigned def
R50671:50672 compcert.lib.Integers Make or def
R50676:50676 compcert.lib.Integers <> y var
R50674:50674 compcert.lib.Integers <> x var
R50703:50709 compcert.lib.Integers Make bits_le thm
R50703:50709 compcert.lib.Integers Make bits_le thm
R50731:50737 compcert.lib.Integers Make bits_or thm
R50731:50737 compcert.lib.Integers Make bits_or thm
prf 50820:50833 Make not_involutive
R50849:50851 compcert.lib.Integers Make int rec
R50866:50868 Coq.Init.Logic <> :type_scope:x_'='_x not
R50855:50857 compcert.lib.Integers Make not def
R50860:50862 compcert.lib.Integers Make not def
R50864:50864 compcert.lib.Integers <> x var
R50869:50869 compcert.lib.Integers <> x var
R50896:50898 compcert.lib.Integers Make not def
R50909:50917 compcert.lib.Integers Make xor_assoc thm
R50909:50917 compcert.lib.Integers Make xor_assoc thm
R50928:50935 compcert.lib.Integers Make xor_idem thm
R50928:50935 compcert.lib.Integers Make xor_idem thm
R50944:50951 compcert.lib.Integers Make xor_zero thm
R50944:50951 compcert.lib.Integers Make xor_zero thm
prf 50969:50976 Make not_zero
R50989:50991 Coq.Init.Logic <> :type_scope:x_'='_x not
R50981:50983 compcert.lib.Integers Make not def
R50985:50988 compcert.lib.Integers Make zero def
R50992:50995 compcert.lib.Integers Make mone def
R51014:51016 compcert.lib.Integers Make not def
R51027:51036 compcert.lib.Integers Make xor_commut thm
R51027:51036 compcert.lib.Integers Make xor_commut thm
R51045:51052 compcert.lib.Integers Make xor_zero thm
R51045:51052 compcert.lib.Integers Make xor_zero thm
prf 51069:51076 Make not_mone
R51089:51091 Coq.Init.Logic <> :type_scope:x_'='_x not
R51081:51083 compcert.lib.Integers Make not def
R51085:51088 compcert.lib.Integers Make mone def
R51092:51095 compcert.lib.Integers Make zero def
R51119:51132 compcert.lib.Integers Make not_involutive thm
R51134:51137 compcert.lib.Integers Make zero def
R51119:51132 compcert.lib.Integers Make not_involutive thm
R51134:51137 compcert.lib.Integers Make zero def
R51164:51171 compcert.lib.Integers Make not_zero thm
R51164:51171 compcert.lib.Integers Make not_zero thm
prf 51188:51201 Make not_or_and_not
R51230:51232 Coq.Init.Logic <> :type_scope:x_'='_x not
R51218:51220 compcert.lib.Integers Make not def
R51223:51224 compcert.lib.Integers Make or def
R51228:51228 compcert.lib.Integers <> y var
R51226:51226 compcert.lib.Integers <> x var
R51233:51235 compcert.lib.Integers Make and def
R51246:51248 compcert.lib.Integers Make not def
R51250:51250 compcert.lib.Integers <> y var
R51238:51240 compcert.lib.Integers Make not def
R51242:51242 compcert.lib.Integers <> x var
R51280:51287 Coq.Bool.Bool <> negb_orb thm
R51280:51287 Coq.Bool.Bool <> negb_orb thm
prf 51305:51318 Make not_and_or_not
R51348:51350 Coq.Init.Logic <> :type_scope:x_'='_x not
R51335:51337 compcert.lib.Integers Make not def
R51340:51342 compcert.lib.Integers Make and def
R51346:51346 compcert.lib.Integers <> y var
R51344:51344 compcert.lib.Integers <> x var
R51351:51352 compcert.lib.Integers Make or def
R51363:51365 compcert.lib.Integers Make not def
R51367:51367 compcert.lib.Integers <> y var
R51355:51357 compcert.lib.Integers Make not def
R51359:51359 compcert.lib.Integers <> x var
R51397:51405 Coq.Bool.Bool <> negb_andb thm
R51397:51405 Coq.Bool.Bool <> negb_andb thm
prf 51423:51434 Make and_not_self
R51462:51464 Coq.Init.Logic <> :type_scope:x_'='_x not
R51449:51451 compcert.lib.Integers Make and def
R51456:51458 compcert.lib.Integers Make not def
R51460:51460 compcert.lib.Integers <> x var
R51453:51453 compcert.lib.Integers <> x var
R51465:51468 compcert.lib.Integers Make zero def
prf 51506:51516 Make or_not_self
R51543:51545 Coq.Init.Logic <> :type_scope:x_'='_x not
R51531:51532 compcert.lib.Integers Make or def
R51537:51539 compcert.lib.Integers Make not def
R51541:51541 compcert.lib.Integers <> x var
R51534:51534 compcert.lib.Integers <> x var
R51546:51549 compcert.lib.Integers Make mone def
prf 51587:51598 Make xor_not_self
R51626:51628 Coq.Init.Logic <> :type_scope:x_'='_x not
R51613:51615 compcert.lib.Integers Make xor def
R51620:51622 compcert.lib.Integers Make not def
R51624:51624 compcert.lib.Integers <> x var
R51617:51617 compcert.lib.Integers <> x var
R51629:51632 compcert.lib.Integers Make mone def
R51665:51671 compcert.lib.Integers Make testbit def
R51665:51671 compcert.lib.Integers Make testbit def
prf 51698:51709 Make unsigned_not
R51740:51742 Coq.Init.Logic <> :type_scope:x_'='_x not
R51724:51731 compcert.lib.Integers Make unsigned def
R51734:51736 compcert.lib.Integers Make not def
R51738:51738 compcert.lib.Integers <> x var
R51755:51757 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51743:51754 compcert.lib.Integers Make max_unsigned def
R51758:51765 compcert.lib.Integers Make unsigned def
R51767:51767 compcert.lib.Integers <> x var
R51801:51808 compcert.lib.Integers Make unsigned def
R51811:51814 compcert.lib.Integers Make repr def
R51827:51829 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51816:51816 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R51817:51824 compcert.lib.Integers Make unsigned def
R51801:51808 compcert.lib.Integers Make unsigned def
R51811:51814 compcert.lib.Integers Make repr def
R51827:51829 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R51816:51816 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R51817:51824 compcert.lib.Integers Make unsigned def
R51866:51877 compcert.lib.Integers Make testbit_repr thm
R51866:51877 compcert.lib.Integers Make testbit_repr thm
R51902:51917 compcert.lib.Integers Make Z_one_complement thm
R51902:51917 compcert.lib.Integers Make Z_one_complement thm
R51937:51952 compcert.lib.Integers Make unsigned_repr_eq thm
R51937:51952 compcert.lib.Integers Make unsigned_repr_eq thm
R51961:51971 compcert.lib.Coqlib <> Zmod_unique thm
R51961:51971 compcert.lib.Coqlib <> Zmod_unique thm
R51993:52004 compcert.lib.Integers Make max_unsigned def
R52029:52042 compcert.lib.Integers Make unsigned_range thm
R52029:52042 compcert.lib.Integers Make unsigned_range thm
R52055:52066 compcert.lib.Integers Make max_unsigned def
prf 52090:52096 Make not_neg
R52116:52118 Coq.Init.Logic <> :type_scope:x_'='_x not
R52111:52113 compcert.lib.Integers Make not def
R52115:52115 compcert.lib.Integers <> x var
R52119:52121 compcert.lib.Integers Make add def
R52131:52134 compcert.lib.Integers Make mone def
R52124:52126 compcert.lib.Integers Make neg def
R52128:52128 compcert.lib.Integers <> x var
R52171:52183 compcert.lib.Integers Make repr_unsigned thm
R52171:52183 compcert.lib.Integers Make repr_unsigned thm
R52201:52203 compcert.lib.Integers Make add def
R52218:52229 compcert.lib.Integers Make testbit_repr thm
R52218:52229 compcert.lib.Integers Make testbit_repr thm
R52218:52229 compcert.lib.Integers Make testbit_repr thm
R52218:52229 compcert.lib.Integers Make testbit_repr thm
R52254:52262 Coq.ZArith.BinInt Z testbit def
R52276:52278 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R52265:52265 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52266:52273 compcert.lib.Integers Make unsigned def
R52254:52262 Coq.ZArith.BinInt Z testbit def
R52276:52278 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R52265:52265 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52266:52273 compcert.lib.Integers Make unsigned def
R52304:52319 compcert.lib.Integers Make Z_one_complement thm
R52304:52319 compcert.lib.Integers Make Z_one_complement thm
R52337:52349 compcert.lib.Integers Make same_bits_eqm thm
R52337:52349 compcert.lib.Integers Make same_bits_eqm thm
R52380:52382 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R52369:52369 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52370:52377 compcert.lib.Integers Make unsigned def
R52403:52406 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R52409:52409 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R52392:52392 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52393:52400 compcert.lib.Integers Make unsigned def
R52403:52406 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R52409:52409 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R52392:52392 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52393:52400 compcert.lib.Integers Make unsigned def
R52380:52382 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R52369:52369 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R52370:52377 compcert.lib.Integers Make unsigned def
R52430:52436 compcert.lib.Integers Make eqm_add thm
R52430:52436 compcert.lib.Integers Make eqm_add thm
R52449:52451 compcert.lib.Integers Make neg def
R52460:52476 compcert.lib.Integers Make eqm_unsigned_repr thm
R52460:52476 compcert.lib.Integers Make eqm_unsigned_repr thm
R52490:52502 compcert.lib.Integers Make unsigned_mone thm
R52490:52502 compcert.lib.Integers Make unsigned_mone thm
prf 52539:52545 Make neg_not
R52565:52567 Coq.Init.Logic <> :type_scope:x_'='_x not
R52560:52562 compcert.lib.Integers Make neg def
R52564:52564 compcert.lib.Integers <> x var
R52568:52570 compcert.lib.Integers Make add def
R52580:52582 compcert.lib.Integers Make one def
R52573:52575 compcert.lib.Integers Make not def
R52577:52577 compcert.lib.Integers <> x var
R52610:52616 compcert.lib.Integers Make not_neg thm
R52610:52616 compcert.lib.Integers Make not_neg thm
R52627:52635 compcert.lib.Integers Make add_assoc thm
R52627:52635 compcert.lib.Integers Make add_assoc thm
R52650:52652 compcert.lib.Integers Make add def
R52659:52661 compcert.lib.Integers Make one def
R52654:52657 compcert.lib.Integers Make mone def
R52669:52672 compcert.lib.Integers Make zero def
R52669:52672 compcert.lib.Integers Make zero def
R52650:52652 compcert.lib.Integers Make add def
R52659:52661 compcert.lib.Integers Make one def
R52654:52657 compcert.lib.Integers Make mone def
R52683:52690 compcert.lib.Integers Make add_zero thm
R52683:52690 compcert.lib.Integers Make add_zero thm
R52708:52719 compcert.lib.Integers Make eqm_samerepr thm
R52708:52719 compcert.lib.Integers Make eqm_samerepr thm
R52730:52742 compcert.lib.Integers Make unsigned_mone thm
R52730:52742 compcert.lib.Integers Make unsigned_mone thm
R52753:52764 compcert.lib.Integers Make unsigned_one thm
R52753:52764 compcert.lib.Integers Make unsigned_one thm
prf 52804:52814 Make sub_add_not
R52838:52840 Coq.Init.Logic <> :type_scope:x_'='_x not
R52831:52833 compcert.lib.Integers Make sub def
R52837:52837 compcert.lib.Integers <> y var
R52835:52835 compcert.lib.Integers <> x var
R52841:52843 compcert.lib.Integers Make add def
R52861:52863 compcert.lib.Integers Make one def
R52846:52848 compcert.lib.Integers Make add def
R52853:52855 compcert.lib.Integers Make not def
R52857:52857 compcert.lib.Integers <> y var
R52850:52850 compcert.lib.Integers <> x var
R52891:52901 compcert.lib.Integers Make sub_add_opp thm
R52891:52901 compcert.lib.Integers Make sub_add_opp thm
R52912:52918 compcert.lib.Integers Make neg_not thm
R52912:52918 compcert.lib.Integers Make neg_not thm
R52934:52942 compcert.lib.Integers Make add_assoc thm
R52934:52942 compcert.lib.Integers Make add_assoc thm
R52934:52942 compcert.lib.Integers Make add_assoc thm
prf 52965:52977 Make sub_add_not_3
R53038:53040 Coq.Init.Logic <> :type_scope:x_'='_x not
R53023:53025 compcert.lib.Integers Make sub def
R53037:53037 compcert.lib.Integers <> b var
R53028:53030 compcert.lib.Integers Make sub def
R53034:53034 compcert.lib.Integers <> y var
R53032:53032 compcert.lib.Integers <> x var
R53041:53043 compcert.lib.Integers Make add def
R53062:53064 compcert.lib.Integers Make xor def
R53068:53070 compcert.lib.Integers Make one def
R53066:53066 compcert.lib.Integers <> b var
R53046:53048 compcert.lib.Integers Make add def
R53053:53055 compcert.lib.Integers Make not def
R53057:53057 compcert.lib.Integers <> y var
R53050:53050 compcert.lib.Integers <> x var
R53006:53009 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R52999:53001 Coq.Init.Logic <> :type_scope:x_'='_x not
R52998:52998 compcert.lib.Integers <> b var
R53002:53005 compcert.lib.Integers Make zero def
R53011:53013 Coq.Init.Logic <> :type_scope:x_'='_x not
R53010:53010 compcert.lib.Integers <> b var
R53014:53016 compcert.lib.Integers Make one def
R53101:53111 compcert.lib.Integers Make sub_add_not thm
R53101:53111 compcert.lib.Integers Make sub_add_not thm
R53101:53111 compcert.lib.Integers Make sub_add_not thm
R53101:53111 compcert.lib.Integers Make sub_add_not thm
R53124:53132 compcert.lib.Integers Make add_assoc thm
R53124:53132 compcert.lib.Integers Make add_assoc thm
R53124:53132 compcert.lib.Integers Make add_assoc thm
R53124:53132 compcert.lib.Integers Make add_assoc thm
R53124:53132 compcert.lib.Integers Make add_assoc thm
R53124:53132 compcert.lib.Integers Make add_assoc thm
R53166:53172 compcert.lib.Integers Make neg_not thm
R53166:53172 compcert.lib.Integers Make neg_not thm
R53186:53196 compcert.lib.Integers Make sub_add_opp thm
R53186:53196 compcert.lib.Integers Make sub_add_opp thm
R53230:53239 compcert.lib.Integers Make xor_zero_l thm
R53230:53239 compcert.lib.Integers Make xor_zero_l thm
R53250:53259 compcert.lib.Integers Make sub_zero_l thm
R53250:53259 compcert.lib.Integers Make sub_zero_l thm
R53278:53285 compcert.lib.Integers Make xor_idem thm
R53278:53285 compcert.lib.Integers Make xor_idem thm
R53296:53303 compcert.lib.Integers Make sub_idem thm
R53296:53303 compcert.lib.Integers Make sub_idem thm
prf 53326:53345 Make sub_borrow_add_carry
R53407:53409 Coq.Init.Logic <> :type_scope:x_'='_x not
R53391:53400 compcert.lib.Integers Make sub_borrow def
R53406:53406 compcert.lib.Integers <> b var
R53404:53404 compcert.lib.Integers <> y var
R53402:53402 compcert.lib.Integers <> x var
R53410:53412 compcert.lib.Integers Make xor def
R53448:53450 compcert.lib.Integers Make one def
R53415:53423 compcert.lib.Integers Make add_carry def
R53436:53438 compcert.lib.Integers Make xor def
R53442:53444 compcert.lib.Integers Make one def
R53440:53440 compcert.lib.Integers <> b var
R53428:53430 compcert.lib.Integers Make not def
R53432:53432 compcert.lib.Integers <> y var
R53425:53425 compcert.lib.Integers <> x var
R53374:53377 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R53367:53369 Coq.Init.Logic <> :type_scope:x_'='_x not
R53366:53366 compcert.lib.Integers <> b var
R53370:53373 compcert.lib.Integers Make zero def
R53379:53381 Coq.Init.Logic <> :type_scope:x_'='_x not
R53378:53378 compcert.lib.Integers <> b var
R53382:53384 compcert.lib.Integers Make one def
R53477:53486 compcert.lib.Integers Make sub_borrow def
R53489:53497 compcert.lib.Integers Make add_carry def
R53508:53519 compcert.lib.Integers Make unsigned_not thm
R53508:53519 compcert.lib.Integers Make unsigned_not thm
R53534:53541 compcert.lib.Integers Make unsigned def
R53544:53546 compcert.lib.Integers Make xor def
R53550:53552 compcert.lib.Integers Make one def
R53563:53565 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53566:53573 compcert.lib.Integers Make unsigned def
R53563:53565 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53566:53573 compcert.lib.Integers Make unsigned def
R53534:53541 compcert.lib.Integers Make unsigned def
R53544:53546 compcert.lib.Integers Make xor def
R53550:53552 compcert.lib.Integers Make one def
R53591:53593 compcert.lib.Coqlib <> zlt def
R53619:53621 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53606:53608 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53596:53603 compcert.lib.Integers Make unsigned def
R53609:53616 compcert.lib.Integers Make unsigned def
R53622:53629 compcert.lib.Integers Make unsigned def
R53591:53593 compcert.lib.Coqlib <> zlt def
R53619:53621 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53606:53608 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R53596:53603 compcert.lib.Integers Make unsigned def
R53609:53616 compcert.lib.Integers Make unsigned def
R53622:53629 compcert.lib.Integers Make unsigned def
R53646:53653 compcert.lib.Coqlib <> zlt_true thm
R53646:53653 compcert.lib.Coqlib <> zlt_true thm
R53664:53673 compcert.lib.Integers Make xor_zero_l thm
R53664:53673 compcert.lib.Integers Make xor_zero_l thm
R53691:53702 compcert.lib.Integers Make max_unsigned def
R53722:53730 compcert.lib.Coqlib <> zlt_false thm
R53722:53730 compcert.lib.Coqlib <> zlt_false thm
R53741:53748 compcert.lib.Integers Make xor_idem thm
R53741:53748 compcert.lib.Integers Make xor_idem thm
R53766:53777 compcert.lib.Integers Make max_unsigned def
R53821:53830 compcert.lib.Integers Make xor_zero_l thm
R53821:53830 compcert.lib.Integers Make xor_zero_l thm
R53841:53852 compcert.lib.Integers Make unsigned_one thm
R53855:53867 compcert.lib.Integers Make unsigned_zero thm
R53841:53852 compcert.lib.Integers Make unsigned_one thm
R53855:53867 compcert.lib.Integers Make unsigned_zero thm
R53886:53893 compcert.lib.Integers Make xor_idem thm
R53886:53893 compcert.lib.Integers Make xor_idem thm
R53904:53915 compcert.lib.Integers Make unsigned_one thm
R53918:53930 compcert.lib.Integers Make unsigned_zero thm
R53904:53915 compcert.lib.Integers Make unsigned_one thm
R53918:53930 compcert.lib.Integers Make unsigned_zero thm
prf 54017:54027 Make Z_add_is_or
R54158:54160 Coq.Init.Logic <> :type_scope:x_'='_x not
R54139:54147 Coq.ZArith.BinInt Z testbit def
R54157:54157 compcert.lib.Integers <> i var
R54151:54153 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R54150:54150 compcert.lib.Integers <> x var
R54154:54154 compcert.lib.Integers <> y var
R54174:54177 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R54161:54169 Coq.ZArith.BinInt Z testbit def
R54173:54173 compcert.lib.Integers <> i var
R54171:54171 compcert.lib.Integers <> x var
R54178:54186 Coq.ZArith.BinInt Z testbit def
R54190:54190 compcert.lib.Integers <> i var
R54188:54188 compcert.lib.Integers <> y var
R54124:54126 Coq.Init.Logic <> :type_scope:x_'='_x not
R54107:54110 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R54094:54102 Coq.ZArith.BinInt Z testbit def
R54106:54106 compcert.lib.Integers <> j var
R54104:54104 compcert.lib.Integers <> x var
R54111:54119 Coq.ZArith.BinInt Z testbit def
R54123:54123 compcert.lib.Integers <> j var
R54121:54121 compcert.lib.Integers <> y var
R54127:54131 Coq.Init.Datatypes <> false constr
R54080:54083 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R54085:54088 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R54084:54084 compcert.lib.Integers <> j var
R54084:54084 compcert.lib.Integers <> j var
R54089:54089 compcert.lib.Integers <> i var
R54043:54046 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R54047:54047 compcert.lib.Integers <> i var
R54236:54244 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R54236:54244 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R54293:54299 compcert.lib.Integers Make Zdecomp thm
R54293:54299 compcert.lib.Integers Make Zdecomp thm
R54319:54325 compcert.lib.Integers Make Zdecomp thm
R54319:54325 compcert.lib.Integers Make Zdecomp thm
R54352:54360 Coq.ZArith.BinInt Z testbit def
R54363:54370 compcert.lib.Integers Make Zshiftin def
R54402:54404 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R54394:54399 Coq.ZArith.BinInt Z div2 def
R54405:54410 Coq.ZArith.BinInt Z div2 def
R54380:54383 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R54373:54377 Coq.ZArith.BinInt Z odd def
R54384:54388 Coq.ZArith.BinInt Z odd def
R54352:54360 Coq.ZArith.BinInt Z testbit def
R54363:54370 compcert.lib.Integers Make Zshiftin def
R54402:54404 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R54394:54399 Coq.ZArith.BinInt Z div2 def
R54405:54410 Coq.ZArith.BinInt Z div2 def
R54380:54383 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R54373:54377 Coq.ZArith.BinInt Z odd def
R54384:54388 Coq.ZArith.BinInt Z odd def
R54442:54454 compcert.lib.Integers Make Zshiftin_spec thm
R54442:54454 compcert.lib.Integers Make Zshiftin_spec thm
R54442:54454 compcert.lib.Integers Make Zshiftin_spec thm
R54442:54454 compcert.lib.Integers Make Zshiftin_spec thm
R54442:54454 compcert.lib.Integers Make Zshiftin_spec thm
R54495:54515 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R54495:54515 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R54495:54515 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R54495:54515 compcert.lib.Integers Make Ztestbit_shiftin_base thm
R54534:54538 Coq.ZArith.BinInt Z mul def
R54555:54559 Coq.ZArith.BinInt Z odd def
R54575:54579 Coq.ZArith.BinInt Z odd def
R54555:54559 Coq.ZArith.BinInt Z odd def
R54575:54579 Coq.ZArith.BinInt Z odd def
R54575:54579 Coq.ZArith.BinInt Z odd def
R54632:54647 compcert.lib.Integers Make Ztestbit_shiftin thm
R54632:54647 compcert.lib.Integers Make Ztestbit_shiftin thm
R54632:54647 compcert.lib.Integers Make Ztestbit_shiftin thm
R54632:54647 compcert.lib.Integers Make Ztestbit_shiftin thm
R54632:54647 compcert.lib.Integers Make Ztestbit_shiftin thm
R54670:54672 compcert.lib.Coqlib <> zeq def
R54670:54672 compcert.lib.Coqlib <> zeq def
R54746:54751 Coq.ZArith.BinInt Z succ def
R54746:54751 Coq.ZArith.BinInt Z succ def
R54781:54801 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R54781:54801 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R54781:54801 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R54781:54801 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
prf 54844:54852 Make add_is_or
R54898:54900 Coq.Init.Logic <> :type_scope:x_'='_x not
R54891:54893 compcert.lib.Integers Make add def
R54897:54897 compcert.lib.Integers <> y var
R54895:54895 compcert.lib.Integers <> x var
R54901:54902 compcert.lib.Integers Make or def
R54906:54906 compcert.lib.Integers <> y var
R54904:54904 compcert.lib.Integers <> x var
R54878:54880 Coq.Init.Logic <> :type_scope:x_'='_x not
R54871:54873 compcert.lib.Integers Make and def
R54877:54877 compcert.lib.Integers <> y var
R54875:54875 compcert.lib.Integers <> x var
R54881:54884 compcert.lib.Integers Make zero def
R54936:54938 compcert.lib.Integers Make add def
R54949:54960 compcert.lib.Integers Make testbit_repr thm
R54949:54960 compcert.lib.Integers Make testbit_repr thm
R54977:54987 compcert.lib.Integers Make Z_add_is_or thm
R54977:54987 compcert.lib.Integers Make Z_add_is_or thm
R55038:55040 Coq.Init.Logic <> :type_scope:x_'='_x not
R55019:55025 compcert.lib.Integers Make testbit def
R55028:55030 compcert.lib.Integers Make and def
R55041:55047 compcert.lib.Integers Make testbit def
R55049:55052 compcert.lib.Integers Make zero def
R55038:55040 Coq.Init.Logic <> :type_scope:x_'='_x not
R55019:55025 compcert.lib.Integers Make testbit def
R55028:55030 compcert.lib.Integers Make and def
R55041:55047 compcert.lib.Integers Make testbit def
R55049:55052 compcert.lib.Integers Make zero def
prf 55136:55144 Make xor_is_or
R55186:55188 Coq.Init.Logic <> :type_scope:x_'='_x not
R55179:55181 compcert.lib.Integers Make xor def
R55185:55185 compcert.lib.Integers <> y var
R55183:55183 compcert.lib.Integers <> x var
R55189:55190 compcert.lib.Integers Make or def
R55194:55194 compcert.lib.Integers <> y var
R55192:55192 compcert.lib.Integers <> x var
R55168:55170 Coq.Init.Logic <> :type_scope:x_'='_x not
R55161:55163 compcert.lib.Integers Make and def
R55167:55167 compcert.lib.Integers <> y var
R55165:55165 compcert.lib.Integers <> x var
R55171:55174 compcert.lib.Integers Make zero def
R55247:55249 Coq.Init.Logic <> :type_scope:x_'='_x not
R55228:55234 compcert.lib.Integers Make testbit def
R55237:55239 compcert.lib.Integers Make and def
R55250:55256 compcert.lib.Integers Make testbit def
R55258:55261 compcert.lib.Integers Make zero def
R55247:55249 Coq.Init.Logic <> :type_scope:x_'='_x not
R55228:55234 compcert.lib.Integers Make testbit def
R55237:55239 compcert.lib.Integers Make and def
R55250:55256 compcert.lib.Integers Make testbit def
R55258:55261 compcert.lib.Integers Make zero def
R55331:55337 compcert.lib.Integers Make testbit def
R55355:55361 compcert.lib.Integers Make testbit def
R55331:55337 compcert.lib.Integers Make testbit def
R55355:55361 compcert.lib.Integers Make testbit def
R55355:55361 compcert.lib.Integers Make testbit def
prf 55407:55416 Make add_is_xor
R55462:55464 Coq.Init.Logic <> :type_scope:x_'='_x not
R55455:55457 compcert.lib.Integers Make add def
R55461:55461 compcert.lib.Integers <> y var
R55459:55459 compcert.lib.Integers <> x var
R55465:55467 compcert.lib.Integers Make xor def
R55471:55471 compcert.lib.Integers <> y var
R55469:55469 compcert.lib.Integers <> x var
R55442:55444 Coq.Init.Logic <> :type_scope:x_'='_x not
R55435:55437 compcert.lib.Integers Make and def
R55441:55441 compcert.lib.Integers <> y var
R55439:55439 compcert.lib.Integers <> x var
R55445:55448 compcert.lib.Integers Make zero def
R55499:55507 compcert.lib.Integers Make xor_is_or thm
R55499:55507 compcert.lib.Integers Make xor_is_or thm
R55522:55530 compcert.lib.Integers Make add_is_or thm
R55522:55530 compcert.lib.Integers Make add_is_or thm
prf 55553:55559 Make add_and
R55623:55625 Coq.Init.Logic <> :type_scope:x_'='_x not
R55600:55602 compcert.lib.Integers Make add def
R55615:55617 compcert.lib.Integers Make and def
R55621:55621 compcert.lib.Integers <> z var
R55619:55619 compcert.lib.Integers <> x var
R55605:55607 compcert.lib.Integers Make and def
R55611:55611 compcert.lib.Integers <> y var
R55609:55609 compcert.lib.Integers <> x var
R55626:55628 compcert.lib.Integers Make and def
R55633:55634 compcert.lib.Integers Make or def
R55638:55638 compcert.lib.Integers <> z var
R55636:55636 compcert.lib.Integers <> y var
R55630:55630 compcert.lib.Integers <> x var
R55587:55589 Coq.Init.Logic <> :type_scope:x_'='_x not
R55580:55582 compcert.lib.Integers Make and def
R55586:55586 compcert.lib.Integers <> z var
R55584:55584 compcert.lib.Integers <> y var
R55590:55593 compcert.lib.Integers Make zero def
R55667:55675 compcert.lib.Integers Make add_is_or thm
R55667:55675 compcert.lib.Integers Make add_is_or thm
R55688:55701 compcert.lib.Integers Make and_or_distrib thm
R55688:55701 compcert.lib.Integers Make and_or_distrib thm
R55721:55730 compcert.lib.Integers Make and_commut thm
R55721:55730 compcert.lib.Integers Make and_commut thm
R55748:55756 compcert.lib.Integers Make and_assoc thm
R55748:55756 compcert.lib.Integers Make and_assoc thm
R55781:55789 compcert.lib.Integers Make and_assoc thm
R55781:55789 compcert.lib.Integers Make and_assoc thm
R55781:55789 compcert.lib.Integers Make and_assoc thm
R55807:55816 compcert.lib.Integers Make and_commut thm
R55819:55821 compcert.lib.Integers Make and def
R55807:55816 compcert.lib.Integers Make and_commut thm
R55819:55821 compcert.lib.Integers Make and def
R55843:55851 compcert.lib.Integers Make and_assoc thm
R55843:55851 compcert.lib.Integers Make and_assoc thm
R55875:55884 compcert.lib.Integers Make and_commut thm
R55875:55884 compcert.lib.Integers Make and_commut thm
R55893:55900 compcert.lib.Integers Make and_zero thm
R55893:55900 compcert.lib.Integers Make and_zero thm
prf 55947:55954 Make bits_shl
R56018:56022 Coq.Init.Logic <> :type_scope:x_'='_x not
R55999:56005 compcert.lib.Integers Make testbit def
R56017:56017 compcert.lib.Integers <> i var
R56008:56010 compcert.lib.Integers Make shl def
R56014:56014 compcert.lib.Integers <> y var
R56012:56012 compcert.lib.Integers <> x var
R56026:56028 compcert.lib.Coqlib <> zlt def
R56033:56040 compcert.lib.Integers Make unsigned def
R56042:56042 compcert.lib.Integers <> y var
R56030:56030 compcert.lib.Integers <> i var
R56061:56067 compcert.lib.Integers Make testbit def
R56073:56075 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R56072:56072 compcert.lib.Integers <> i var
R56076:56083 compcert.lib.Integers Make unsigned def
R56085:56085 compcert.lib.Integers <> y var
R56069:56069 compcert.lib.Integers <> x var
R56050:56054 Coq.Init.Datatypes <> false constr
R55976:55979 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R55981:55983 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R55980:55980 compcert.lib.Integers <> i var
R55980:55980 compcert.lib.Integers <> i var
R55984:55992 compcert.lib.Integers Make zwordsize def
R56113:56115 compcert.lib.Integers Make shl def
R56126:56137 compcert.lib.Integers Make testbit_repr thm
R56126:56137 compcert.lib.Integers Make testbit_repr thm
R56159:56161 compcert.lib.Coqlib <> zlt def
R56166:56173 compcert.lib.Integers Make unsigned def
R56159:56161 compcert.lib.Coqlib <> zlt def
R56166:56173 compcert.lib.Integers Make unsigned def
R56189:56205 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56189:56205 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56222:56239 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56222:56239 Coq.ZArith.BinInt Z shiftl_spec_high thm
prf 56268:56276 Make bits_shru
R56341:56345 Coq.Init.Logic <> :type_scope:x_'='_x not
R56321:56327 compcert.lib.Integers Make testbit def
R56340:56340 compcert.lib.Integers <> i var
R56330:56333 compcert.lib.Integers Make shru def
R56337:56337 compcert.lib.Integers <> y var
R56335:56335 compcert.lib.Integers <> x var
R56349:56351 compcert.lib.Coqlib <> zlt def
R56370:56378 compcert.lib.Integers Make zwordsize def
R56355:56357 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56354:56354 compcert.lib.Integers <> i var
R56358:56365 compcert.lib.Integers Make unsigned def
R56367:56367 compcert.lib.Integers <> y var
R56417:56421 Coq.Init.Datatypes <> false constr
R56385:56391 compcert.lib.Integers Make testbit def
R56397:56399 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56396:56396 compcert.lib.Integers <> i var
R56400:56407 compcert.lib.Integers Make unsigned def
R56409:56409 compcert.lib.Integers <> y var
R56393:56393 compcert.lib.Integers <> x var
R56298:56301 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R56303:56305 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R56302:56302 compcert.lib.Integers <> i var
R56302:56302 compcert.lib.Integers <> i var
R56306:56314 compcert.lib.Integers Make zwordsize def
R56448:56451 compcert.lib.Integers Make shru def
R56462:56473 compcert.lib.Integers Make testbit_repr thm
R56462:56473 compcert.lib.Integers Make testbit_repr thm
R56493:56505 Coq.ZArith.BinInt Z shiftr_spec thm
R56493:56505 Coq.ZArith.BinInt Z shiftr_spec thm
R56514:56520 compcert.lib.Integers Make testbit def
R56526:56528 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56529:56536 compcert.lib.Integers Make unsigned def
R56514:56520 compcert.lib.Integers Make testbit def
R56526:56528 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56529:56536 compcert.lib.Integers Make unsigned def
R56555:56557 compcert.lib.Coqlib <> zlt def
R56576:56584 compcert.lib.Integers Make zwordsize def
R56561:56563 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56564:56571 compcert.lib.Integers Make unsigned def
R56555:56557 compcert.lib.Coqlib <> zlt def
R56576:56584 compcert.lib.Integers Make zwordsize def
R56561:56563 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56564:56571 compcert.lib.Integers Make unsigned def
R56604:56613 compcert.lib.Integers Make bits_above thm
R56604:56613 compcert.lib.Integers Make bits_above thm
prf 56644:56651 Make bits_shr
R56715:56719 Coq.Init.Logic <> :type_scope:x_'='_x not
R56696:56702 compcert.lib.Integers Make testbit def
R56714:56714 compcert.lib.Integers <> i var
R56705:56707 compcert.lib.Integers Make shr def
R56711:56711 compcert.lib.Integers <> y var
R56709:56709 compcert.lib.Integers <> x var
R56720:56726 compcert.lib.Integers Make testbit def
R56734:56736 compcert.lib.Coqlib <> zlt def
R56755:56763 compcert.lib.Integers Make zwordsize def
R56740:56742 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56739:56739 compcert.lib.Integers <> i var
R56743:56750 compcert.lib.Integers Make unsigned def
R56752:56752 compcert.lib.Integers <> y var
R56799:56801 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R56790:56798 compcert.lib.Integers Make zwordsize def
R56771:56773 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R56770:56770 compcert.lib.Integers <> i var
R56774:56781 compcert.lib.Integers Make unsigned def
R56783:56783 compcert.lib.Integers <> y var
R56728:56728 compcert.lib.Integers <> x var
R56673:56676 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R56678:56680 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R56677:56677 compcert.lib.Integers <> i var
R56677:56677 compcert.lib.Integers <> i var
R56681:56689 compcert.lib.Integers Make zwordsize def
R56830:56832 compcert.lib.Integers Make shr def
R56843:56854 compcert.lib.Integers Make testbit_repr thm
R56843:56854 compcert.lib.Integers Make testbit_repr thm
R56874:56886 Coq.ZArith.BinInt Z shiftr_spec thm
R56874:56886 Coq.ZArith.BinInt Z shiftr_spec thm
R56895:56905 compcert.lib.Integers Make bits_signed thm
R56895:56905 compcert.lib.Integers Make bits_signed thm
R56923:56936 compcert.lib.Integers Make unsigned_range thm
R56923:56936 compcert.lib.Integers Make unsigned_range thm
R56977:56984 compcert.lib.Integers Make bits_shl thm
R56986:56994 compcert.lib.Integers Make bits_shru thm
R56996:57003 compcert.lib.Integers Make bits_shr thm
prf 57021:57028 Make shl_zero
R57051:57053 Coq.Init.Logic <> :type_scope:x_'='_x not
R57041:57043 compcert.lib.Integers Make shl def
R57047:57050 compcert.lib.Integers Make zero def
R57045:57045 compcert.lib.Integers <> x var
R57054:57054 compcert.lib.Integers <> x var
R57085:57097 compcert.lib.Integers Make unsigned_zero thm
R57085:57097 compcert.lib.Integers Make unsigned_zero thm
R57108:57116 compcert.lib.Coqlib <> zlt_false thm
R57108:57116 compcert.lib.Coqlib <> zlt_false thm
prf 57154:57170 Make bitwise_binop_shl
R57339:57341 Coq.Init.Logic <> :type_scope:x_'='_x not
R57318:57318 compcert.lib.Integers <> f var
R57331:57333 compcert.lib.Integers Make shl def
R57337:57337 compcert.lib.Integers <> n var
R57335:57335 compcert.lib.Integers <> y var
R57321:57323 compcert.lib.Integers Make shl def
R57327:57327 compcert.lib.Integers <> n var
R57325:57325 compcert.lib.Integers <> x var
R57342:57344 compcert.lib.Integers Make shl def
R57354:57354 compcert.lib.Integers <> n var
R57347:57347 compcert.lib.Integers <> f var
R57351:57351 compcert.lib.Integers <> y var
R57349:57349 compcert.lib.Integers <> x var
R57304:57306 Coq.Init.Logic <> :type_scope:x_'='_x not
R57290:57291 compcert.lib.Integers <> f' var
R57299:57303 Coq.Init.Datatypes <> false constr
R57293:57297 Coq.Init.Datatypes <> false constr
R57307:57311 Coq.Init.Datatypes <> false constr
R57250:57252 Coq.Init.Logic <> :type_scope:x_'='_x not
R57233:57239 compcert.lib.Integers Make testbit def
R57249:57249 compcert.lib.Integers <> i var
R57242:57242 compcert.lib.Integers <> f var
R57246:57246 compcert.lib.Integers <> y var
R57244:57244 compcert.lib.Integers <> x var
R57253:57254 compcert.lib.Integers <> f' var
R57271:57277 compcert.lib.Integers Make testbit def
R57281:57281 compcert.lib.Integers <> i var
R57279:57279 compcert.lib.Integers <> y var
R57257:57263 compcert.lib.Integers Make testbit def
R57267:57267 compcert.lib.Integers <> i var
R57265:57265 compcert.lib.Integers <> x var
R57212:57215 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R57217:57219 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R57216:57216 compcert.lib.Integers <> i var
R57216:57216 compcert.lib.Integers <> i var
R57220:57228 compcert.lib.Integers Make zwordsize def
R57380:57391 compcert.lib.Integers Make same_bits_eq thm
R57380:57391 compcert.lib.Integers Make same_bits_eq thm
R57431:57438 compcert.lib.Integers Make bits_shl thm
R57431:57438 compcert.lib.Integers Make bits_shl thm
R57431:57438 compcert.lib.Integers Make bits_shl thm
R57431:57438 compcert.lib.Integers Make bits_shl thm
R57431:57438 compcert.lib.Integers Make bits_shl thm
R57459:57461 compcert.lib.Coqlib <> zlt def
R57466:57473 compcert.lib.Integers Make unsigned def
R57459:57461 compcert.lib.Coqlib <> zlt def
R57466:57473 compcert.lib.Integers Make unsigned def
R57517:57530 compcert.lib.Integers Make unsigned_range thm
R57517:57530 compcert.lib.Integers Make unsigned_range thm
prf 57558:57564 Make and_shl
R57608:57610 Coq.Init.Logic <> :type_scope:x_'='_x not
R57585:57587 compcert.lib.Integers Make and def
R57600:57602 compcert.lib.Integers Make shl def
R57606:57606 compcert.lib.Integers <> n var
R57604:57604 compcert.lib.Integers <> y var
R57590:57592 compcert.lib.Integers Make shl def
R57596:57596 compcert.lib.Integers <> n var
R57594:57594 compcert.lib.Integers <> x var
R57611:57613 compcert.lib.Integers Make shl def
R57625:57625 compcert.lib.Integers <> n var
R57616:57618 compcert.lib.Integers Make and def
R57622:57622 compcert.lib.Integers <> y var
R57620:57620 compcert.lib.Integers <> x var
R57674:57677 Coq.Init.Datatypes <> andb def
R57651:57667 compcert.lib.Integers Make bitwise_binop_shl thm
R57674:57677 Coq.Init.Datatypes <> andb def
R57651:57667 compcert.lib.Integers Make bitwise_binop_shl thm
R57686:57693 compcert.lib.Integers Make bits_and thm
R57686:57693 compcert.lib.Integers Make bits_and thm
prf 57716:57721 Make or_shl
R57764:57766 Coq.Init.Logic <> :type_scope:x_'='_x not
R57742:57743 compcert.lib.Integers Make or def
R57756:57758 compcert.lib.Integers Make shl def
R57762:57762 compcert.lib.Integers <> n var
R57760:57760 compcert.lib.Integers <> y var
R57746:57748 compcert.lib.Integers Make shl def
R57752:57752 compcert.lib.Integers <> n var
R57750:57750 compcert.lib.Integers <> x var
R57767:57769 compcert.lib.Integers Make shl def
R57780:57780 compcert.lib.Integers <> n var
R57772:57773 compcert.lib.Integers Make or def
R57777:57777 compcert.lib.Integers <> y var
R57775:57775 compcert.lib.Integers <> x var
R57829:57831 Coq.Init.Datatypes <> orb def
R57806:57822 compcert.lib.Integers Make bitwise_binop_shl thm
R57829:57831 Coq.Init.Datatypes <> orb def
R57806:57822 compcert.lib.Integers Make bitwise_binop_shl thm
R57840:57846 compcert.lib.Integers Make bits_or thm
R57840:57846 compcert.lib.Integers Make bits_or thm
prf 57869:57875 Make xor_shl
R57919:57921 Coq.Init.Logic <> :type_scope:x_'='_x not
R57896:57898 compcert.lib.Integers Make xor def
R57911:57913 compcert.lib.Integers Make shl def
R57917:57917 compcert.lib.Integers <> n var
R57915:57915 compcert.lib.Integers <> y var
R57901:57903 compcert.lib.Integers Make shl def
R57907:57907 compcert.lib.Integers <> n var
R57905:57905 compcert.lib.Integers <> x var
R57922:57924 compcert.lib.Integers Make shl def
R57936:57936 compcert.lib.Integers <> n var
R57927:57929 compcert.lib.Integers Make xor def
R57933:57933 compcert.lib.Integers <> y var
R57931:57931 compcert.lib.Integers <> x var
R57985:57988 Coq.Init.Datatypes <> xorb def
R57962:57978 compcert.lib.Integers Make bitwise_binop_shl thm
R57985:57988 Coq.Init.Datatypes <> xorb def
R57962:57978 compcert.lib.Integers Make bitwise_binop_shl thm
R57997:58004 compcert.lib.Integers Make bits_xor thm
R57997:58004 compcert.lib.Integers Make bits_xor thm
prf 58025:58031 Make ltu_inv
R58067:58070 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R58081:58083 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R58071:58078 compcert.lib.Integers Make unsigned def
R58080:58080 compcert.lib.Integers <> x var
R58071:58078 compcert.lib.Integers Make unsigned def
R58080:58080 compcert.lib.Integers <> x var
R58084:58091 compcert.lib.Integers Make unsigned def
R58093:58093 compcert.lib.Integers <> y var
R58055:58057 Coq.Init.Logic <> :type_scope:x_'='_x not
R58048:58050 compcert.lib.Integers Make ltu def
R58054:58054 compcert.lib.Integers <> y var
R58052:58052 compcert.lib.Integers <> x var
R58058:58061 Coq.Init.Datatypes <> true constr
R58112:58114 compcert.lib.Integers Make ltu def
R58135:58137 compcert.lib.Coqlib <> zlt def
R58153:58160 compcert.lib.Integers Make unsigned def
R58140:58147 compcert.lib.Integers Make unsigned def
R58135:58137 compcert.lib.Coqlib <> zlt def
R58153:58160 compcert.lib.Integers Make unsigned def
R58140:58147 compcert.lib.Integers Make unsigned def
R58194:58207 compcert.lib.Integers Make unsigned_range thm
R58194:58207 compcert.lib.Integers Make unsigned_range thm
prf 58248:58264 Make ltu_iwordsize_inv
R58306:58309 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R58320:58322 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R58310:58317 compcert.lib.Integers Make unsigned def
R58319:58319 compcert.lib.Integers <> x var
R58310:58317 compcert.lib.Integers Make unsigned def
R58319:58319 compcert.lib.Integers <> x var
R58323:58331 compcert.lib.Integers Make zwordsize def
R58294:58296 Coq.Init.Logic <> :type_scope:x_'='_x not
R58279:58281 compcert.lib.Integers Make ltu def
R58285:58293 compcert.lib.Integers Make iwordsize def
R58283:58283 compcert.lib.Integers <> x var
R58297:58300 Coq.Init.Datatypes <> true constr
R58359:58365 compcert.lib.Integers Make ltu_inv thm
R58383:58404 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58383:58404 compcert.lib.Integers Make unsigned_repr_wordsize thm
prf 58427:58433 Make shl_shl
R58562:58564 Coq.Init.Logic <> :type_scope:x_'='_x not
R58547:58549 compcert.lib.Integers Make shl def
R58561:58561 compcert.lib.Integers <> z var
R58552:58554 compcert.lib.Integers Make shl def
R58558:58558 compcert.lib.Integers <> y var
R58556:58556 compcert.lib.Integers <> x var
R58565:58567 compcert.lib.Integers Make shl def
R58572:58574 compcert.lib.Integers Make add def
R58578:58578 compcert.lib.Integers <> z var
R58576:58576 compcert.lib.Integers <> y var
R58569:58569 compcert.lib.Integers <> x var
R58534:58536 Coq.Init.Logic <> :type_scope:x_'='_x not
R58511:58513 compcert.lib.Integers Make ltu def
R58525:58533 compcert.lib.Integers Make iwordsize def
R58516:58518 compcert.lib.Integers Make add def
R58522:58522 compcert.lib.Integers <> z var
R58520:58520 compcert.lib.Integers <> y var
R58537:58540 Coq.Init.Datatypes <> true constr
R58498:58500 Coq.Init.Logic <> :type_scope:x_'='_x not
R58483:58485 compcert.lib.Integers Make ltu def
R58489:58497 compcert.lib.Integers Make iwordsize def
R58487:58487 compcert.lib.Integers <> z var
R58501:58504 Coq.Init.Datatypes <> true constr
R58469:58471 Coq.Init.Logic <> :type_scope:x_'='_x not
R58454:58456 compcert.lib.Integers Make ltu def
R58460:58468 compcert.lib.Integers Make iwordsize def
R58458:58458 compcert.lib.Integers <> y var
R58472:58475 Coq.Init.Datatypes <> true constr
R58614:58630 compcert.lib.Integers Make ltu_iwordsize_inv thm
R58638:58654 compcert.lib.Integers Make ltu_iwordsize_inv thm
R58614:58630 compcert.lib.Integers Make ltu_iwordsize_inv thm
R58638:58654 compcert.lib.Integers Make ltu_iwordsize_inv thm
R58699:58701 Coq.Init.Logic <> :type_scope:x_'='_x not
R58681:58688 compcert.lib.Integers Make unsigned def
R58691:58693 compcert.lib.Integers Make add def
R58712:58714 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R58702:58709 compcert.lib.Integers Make unsigned def
R58715:58722 compcert.lib.Integers Make unsigned def
R58699:58701 Coq.Init.Logic <> :type_scope:x_'='_x not
R58681:58688 compcert.lib.Integers Make unsigned def
R58691:58693 compcert.lib.Integers Make add def
R58712:58714 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R58702:58709 compcert.lib.Integers Make unsigned def
R58715:58722 compcert.lib.Integers Make unsigned def
R58739:58741 compcert.lib.Integers Make add def
R58750:58762 compcert.lib.Integers Make unsigned_repr thm
R58750:58762 compcert.lib.Integers Make unsigned_repr thm
R58781:58805 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R58781:58805 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R58823:58834 compcert.lib.Integers Make same_bits_eq thm
R58823:58834 compcert.lib.Integers Make same_bits_eq thm
R58856:58863 compcert.lib.Integers Make bits_shl thm
R58856:58863 compcert.lib.Integers Make bits_shl thm
R58884:58886 compcert.lib.Coqlib <> zlt def
R58891:58898 compcert.lib.Integers Make unsigned def
R58884:58886 compcert.lib.Coqlib <> zlt def
R58891:58898 compcert.lib.Integers Make unsigned def
R58917:58924 compcert.lib.Integers Make bits_shl thm
R58917:58924 compcert.lib.Integers Make bits_shl thm
R58941:58948 compcert.lib.Coqlib <> zlt_true thm
R58941:58948 compcert.lib.Coqlib <> zlt_true thm
R58976:58983 compcert.lib.Integers Make bits_shl thm
R58976:58983 compcert.lib.Integers Make bits_shl thm
R58996:58998 compcert.lib.Coqlib <> zlt def
R59018:59025 compcert.lib.Integers Make unsigned def
R59002:59004 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R59005:59012 compcert.lib.Integers Make unsigned def
R58996:58998 compcert.lib.Coqlib <> zlt def
R59018:59025 compcert.lib.Integers Make unsigned def
R59002:59004 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R59005:59012 compcert.lib.Integers Make unsigned def
R59046:59053 compcert.lib.Integers Make bits_shl thm
R59046:59053 compcert.lib.Integers Make bits_shl thm
R59070:59077 compcert.lib.Coqlib <> zlt_true thm
R59070:59077 compcert.lib.Coqlib <> zlt_true thm
R59108:59115 compcert.lib.Integers Make bits_shl thm
R59108:59115 compcert.lib.Integers Make bits_shl thm
R59132:59140 compcert.lib.Coqlib <> zlt_false thm
R59132:59140 compcert.lib.Coqlib <> zlt_false thm
prf 59193:59201 Make shru_zero
R59225:59227 Coq.Init.Logic <> :type_scope:x_'='_x not
R59214:59217 compcert.lib.Integers Make shru def
R59221:59224 compcert.lib.Integers Make zero def
R59219:59219 compcert.lib.Integers <> x var
R59228:59228 compcert.lib.Integers <> x var
R59259:59271 compcert.lib.Integers Make unsigned_zero thm
R59259:59271 compcert.lib.Integers Make unsigned_zero thm
R59282:59289 compcert.lib.Coqlib <> zlt_true thm
R59282:59289 compcert.lib.Coqlib <> zlt_true thm
prf 59327:59344 Make bitwise_binop_shru
R59515:59517 Coq.Init.Logic <> :type_scope:x_'='_x not
R59492:59492 compcert.lib.Integers <> f var
R59506:59509 compcert.lib.Integers Make shru def
R59513:59513 compcert.lib.Integers <> n var
R59511:59511 compcert.lib.Integers <> y var
R59495:59498 compcert.lib.Integers Make shru def
R59502:59502 compcert.lib.Integers <> n var
R59500:59500 compcert.lib.Integers <> x var
R59518:59521 compcert.lib.Integers Make shru def
R59531:59531 compcert.lib.Integers <> n var
R59524:59524 compcert.lib.Integers <> f var
R59528:59528 compcert.lib.Integers <> y var
R59526:59526 compcert.lib.Integers <> x var
R59478:59480 Coq.Init.Logic <> :type_scope:x_'='_x not
R59464:59465 compcert.lib.Integers <> f' var
R59473:59477 Coq.Init.Datatypes <> false constr
R59467:59471 Coq.Init.Datatypes <> false constr
R59481:59485 Coq.Init.Datatypes <> false constr
R59424:59426 Coq.Init.Logic <> :type_scope:x_'='_x not
R59407:59413 compcert.lib.Integers Make testbit def
R59423:59423 compcert.lib.Integers <> i var
R59416:59416 compcert.lib.Integers <> f var
R59420:59420 compcert.lib.Integers <> y var
R59418:59418 compcert.lib.Integers <> x var
R59427:59428 compcert.lib.Integers <> f' var
R59445:59451 compcert.lib.Integers Make testbit def
R59455:59455 compcert.lib.Integers <> i var
R59453:59453 compcert.lib.Integers <> y var
R59431:59437 compcert.lib.Integers Make testbit def
R59441:59441 compcert.lib.Integers <> i var
R59439:59439 compcert.lib.Integers <> x var
R59386:59389 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R59391:59393 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R59390:59390 compcert.lib.Integers <> i var
R59390:59390 compcert.lib.Integers <> i var
R59394:59402 compcert.lib.Integers Make zwordsize def
R59557:59568 compcert.lib.Integers Make same_bits_eq thm
R59557:59568 compcert.lib.Integers Make same_bits_eq thm
R59608:59616 compcert.lib.Integers Make bits_shru thm
R59608:59616 compcert.lib.Integers Make bits_shru thm
R59608:59616 compcert.lib.Integers Make bits_shru thm
R59608:59616 compcert.lib.Integers Make bits_shru thm
R59608:59616 compcert.lib.Integers Make bits_shru thm
R59637:59639 compcert.lib.Coqlib <> zlt def
R59658:59666 compcert.lib.Integers Make zwordsize def
R59643:59645 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R59646:59653 compcert.lib.Integers Make unsigned def
R59637:59639 compcert.lib.Coqlib <> zlt def
R59658:59666 compcert.lib.Integers Make zwordsize def
R59643:59645 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R59646:59653 compcert.lib.Integers Make unsigned def
R59707:59720 compcert.lib.Integers Make unsigned_range thm
R59707:59720 compcert.lib.Integers Make unsigned_range thm
prf 59748:59755 Make and_shru
R59801:59803 Coq.Init.Logic <> :type_scope:x_'='_x not
R59776:59778 compcert.lib.Integers Make and def
R59792:59795 compcert.lib.Integers Make shru def
R59799:59799 compcert.lib.Integers <> n var
R59797:59797 compcert.lib.Integers <> y var
R59781:59784 compcert.lib.Integers Make shru def
R59788:59788 compcert.lib.Integers <> n var
R59786:59786 compcert.lib.Integers <> x var
R59804:59807 compcert.lib.Integers Make shru def
R59819:59819 compcert.lib.Integers <> n var
R59810:59812 compcert.lib.Integers Make and def
R59816:59816 compcert.lib.Integers <> y var
R59814:59814 compcert.lib.Integers <> x var
R59869:59872 Coq.Init.Datatypes <> andb def
R59845:59862 compcert.lib.Integers Make bitwise_binop_shru thm
R59869:59872 Coq.Init.Datatypes <> andb def
R59845:59862 compcert.lib.Integers Make bitwise_binop_shru thm
R59887:59894 compcert.lib.Integers Make bits_and thm
R59887:59894 compcert.lib.Integers Make bits_and thm
prf 59911:59917 Make or_shru
R59962:59964 Coq.Init.Logic <> :type_scope:x_'='_x not
R59938:59939 compcert.lib.Integers Make or def
R59953:59956 compcert.lib.Integers Make shru def
R59960:59960 compcert.lib.Integers <> n var
R59958:59958 compcert.lib.Integers <> y var
R59942:59945 compcert.lib.Integers Make shru def
R59949:59949 compcert.lib.Integers <> n var
R59947:59947 compcert.lib.Integers <> x var
R59965:59968 compcert.lib.Integers Make shru def
R59979:59979 compcert.lib.Integers <> n var
R59971:59972 compcert.lib.Integers Make or def
R59976:59976 compcert.lib.Integers <> y var
R59974:59974 compcert.lib.Integers <> x var
R60029:60031 Coq.Init.Datatypes <> orb def
R60005:60022 compcert.lib.Integers Make bitwise_binop_shru thm
R60029:60031 Coq.Init.Datatypes <> orb def
R60005:60022 compcert.lib.Integers Make bitwise_binop_shru thm
R60046:60052 compcert.lib.Integers Make bits_or thm
R60046:60052 compcert.lib.Integers Make bits_or thm
prf 60069:60076 Make xor_shru
R60122:60124 Coq.Init.Logic <> :type_scope:x_'='_x not
R60097:60099 compcert.lib.Integers Make xor def
R60113:60116 compcert.lib.Integers Make shru def
R60120:60120 compcert.lib.Integers <> n var
R60118:60118 compcert.lib.Integers <> y var
R60102:60105 compcert.lib.Integers Make shru def
R60109:60109 compcert.lib.Integers <> n var
R60107:60107 compcert.lib.Integers <> x var
R60125:60128 compcert.lib.Integers Make shru def
R60140:60140 compcert.lib.Integers <> n var
R60131:60133 compcert.lib.Integers Make xor def
R60137:60137 compcert.lib.Integers <> y var
R60135:60135 compcert.lib.Integers <> x var
R60190:60193 Coq.Init.Datatypes <> xorb def
R60166:60183 compcert.lib.Integers Make bitwise_binop_shru thm
R60190:60193 Coq.Init.Datatypes <> xorb def
R60166:60183 compcert.lib.Integers Make bitwise_binop_shru thm
R60208:60215 compcert.lib.Integers Make bits_xor thm
R60208:60215 compcert.lib.Integers Make bits_xor thm
prf 60232:60240 Make shru_shru
R60371:60373 Coq.Init.Logic <> :type_scope:x_'='_x not
R60354:60357 compcert.lib.Integers Make shru def
R60370:60370 compcert.lib.Integers <> z var
R60360:60363 compcert.lib.Integers Make shru def
R60367:60367 compcert.lib.Integers <> y var
R60365:60365 compcert.lib.Integers <> x var
R60374:60377 compcert.lib.Integers Make shru def
R60382:60384 compcert.lib.Integers Make add def
R60388:60388 compcert.lib.Integers <> z var
R60386:60386 compcert.lib.Integers <> y var
R60379:60379 compcert.lib.Integers <> x var
R60341:60343 Coq.Init.Logic <> :type_scope:x_'='_x not
R60318:60320 compcert.lib.Integers Make ltu def
R60332:60340 compcert.lib.Integers Make iwordsize def
R60323:60325 compcert.lib.Integers Make add def
R60329:60329 compcert.lib.Integers <> z var
R60327:60327 compcert.lib.Integers <> y var
R60344:60347 Coq.Init.Datatypes <> true constr
R60305:60307 Coq.Init.Logic <> :type_scope:x_'='_x not
R60290:60292 compcert.lib.Integers Make ltu def
R60296:60304 compcert.lib.Integers Make iwordsize def
R60294:60294 compcert.lib.Integers <> z var
R60308:60311 Coq.Init.Datatypes <> true constr
R60276:60278 Coq.Init.Logic <> :type_scope:x_'='_x not
R60261:60263 compcert.lib.Integers Make ltu def
R60267:60275 compcert.lib.Integers Make iwordsize def
R60265:60265 compcert.lib.Integers <> y var
R60279:60282 Coq.Init.Datatypes <> true constr
R60423:60439 compcert.lib.Integers Make ltu_iwordsize_inv thm
R60447:60463 compcert.lib.Integers Make ltu_iwordsize_inv thm
R60423:60439 compcert.lib.Integers Make ltu_iwordsize_inv thm
R60447:60463 compcert.lib.Integers Make ltu_iwordsize_inv thm
R60508:60510 Coq.Init.Logic <> :type_scope:x_'='_x not
R60490:60497 compcert.lib.Integers Make unsigned def
R60500:60502 compcert.lib.Integers Make add def
R60521:60523 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60511:60518 compcert.lib.Integers Make unsigned def
R60524:60531 compcert.lib.Integers Make unsigned def
R60508:60510 Coq.Init.Logic <> :type_scope:x_'='_x not
R60490:60497 compcert.lib.Integers Make unsigned def
R60500:60502 compcert.lib.Integers Make add def
R60521:60523 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60511:60518 compcert.lib.Integers Make unsigned def
R60524:60531 compcert.lib.Integers Make unsigned def
R60548:60550 compcert.lib.Integers Make add def
R60559:60571 compcert.lib.Integers Make unsigned_repr thm
R60559:60571 compcert.lib.Integers Make unsigned_repr thm
R60590:60614 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R60590:60614 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R60632:60643 compcert.lib.Integers Make same_bits_eq thm
R60632:60643 compcert.lib.Integers Make same_bits_eq thm
R60665:60673 compcert.lib.Integers Make bits_shru thm
R60665:60673 compcert.lib.Integers Make bits_shru thm
R60694:60696 compcert.lib.Coqlib <> zlt def
R60715:60723 compcert.lib.Integers Make zwordsize def
R60700:60702 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60703:60710 compcert.lib.Integers Make unsigned def
R60694:60696 compcert.lib.Coqlib <> zlt def
R60715:60723 compcert.lib.Integers Make zwordsize def
R60700:60702 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60703:60710 compcert.lib.Integers Make unsigned def
R60739:60747 compcert.lib.Integers Make bits_shru thm
R60739:60747 compcert.lib.Integers Make bits_shru thm
R60760:60762 compcert.lib.Coqlib <> zlt def
R60794:60802 compcert.lib.Integers Make zwordsize def
R60779:60781 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60766:60768 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60769:60776 compcert.lib.Integers Make unsigned def
R60782:60789 compcert.lib.Integers Make unsigned def
R60760:60762 compcert.lib.Coqlib <> zlt def
R60794:60802 compcert.lib.Integers Make zwordsize def
R60779:60781 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60766:60768 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R60769:60776 compcert.lib.Integers Make unsigned def
R60782:60789 compcert.lib.Integers Make unsigned def
R60820:60828 compcert.lib.Integers Make bits_shru thm
R60820:60828 compcert.lib.Integers Make bits_shru thm
R60845:60852 compcert.lib.Coqlib <> zlt_true thm
R60845:60852 compcert.lib.Coqlib <> zlt_true thm
R60894:60902 compcert.lib.Integers Make bits_shru thm
R60894:60902 compcert.lib.Integers Make bits_shru thm
R60919:60927 compcert.lib.Coqlib <> zlt_false thm
R60919:60927 compcert.lib.Coqlib <> zlt_false thm
R60969:60977 compcert.lib.Integers Make bits_shru thm
R60969:60977 compcert.lib.Integers Make bits_shru thm
R60994:61002 compcert.lib.Coqlib <> zlt_false thm
R60994:61002 compcert.lib.Coqlib <> zlt_false thm
prf 61032:61039 Make shr_zero
R61062:61064 Coq.Init.Logic <> :type_scope:x_'='_x not
R61052:61054 compcert.lib.Integers Make shr def
R61058:61061 compcert.lib.Integers Make zero def
R61056:61056 compcert.lib.Integers <> x var
R61065:61065 compcert.lib.Integers <> x var
R61096:61108 compcert.lib.Integers Make unsigned_zero thm
R61096:61108 compcert.lib.Integers Make unsigned_zero thm
R61119:61126 compcert.lib.Coqlib <> zlt_true thm
R61119:61126 compcert.lib.Coqlib <> zlt_true thm
prf 61164:61180 Make bitwise_binop_shr
R61321:61323 Coq.Init.Logic <> :type_scope:x_'='_x not
R61300:61300 compcert.lib.Integers <> f var
R61313:61315 compcert.lib.Integers Make shr def
R61319:61319 compcert.lib.Integers <> n var
R61317:61317 compcert.lib.Integers <> y var
R61303:61305 compcert.lib.Integers Make shr def
R61309:61309 compcert.lib.Integers <> n var
R61307:61307 compcert.lib.Integers <> x var
R61324:61326 compcert.lib.Integers Make shr def
R61336:61336 compcert.lib.Integers <> n var
R61329:61329 compcert.lib.Integers <> f var
R61333:61333 compcert.lib.Integers <> y var
R61331:61331 compcert.lib.Integers <> x var
R61260:61262 Coq.Init.Logic <> :type_scope:x_'='_x not
R61243:61249 compcert.lib.Integers Make testbit def
R61259:61259 compcert.lib.Integers <> i var
R61252:61252 compcert.lib.Integers <> f var
R61256:61256 compcert.lib.Integers <> y var
R61254:61254 compcert.lib.Integers <> x var
R61263:61264 compcert.lib.Integers <> f' var
R61281:61287 compcert.lib.Integers Make testbit def
R61291:61291 compcert.lib.Integers <> i var
R61289:61289 compcert.lib.Integers <> y var
R61267:61273 compcert.lib.Integers Make testbit def
R61277:61277 compcert.lib.Integers <> i var
R61275:61275 compcert.lib.Integers <> x var
R61222:61225 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R61227:61229 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R61226:61226 compcert.lib.Integers <> i var
R61226:61226 compcert.lib.Integers <> i var
R61230:61238 compcert.lib.Integers Make zwordsize def
R61362:61373 compcert.lib.Integers Make same_bits_eq thm
R61362:61373 compcert.lib.Integers Make same_bits_eq thm
R61413:61420 compcert.lib.Integers Make bits_shr thm
R61413:61420 compcert.lib.Integers Make bits_shr thm
R61413:61420 compcert.lib.Integers Make bits_shr thm
R61413:61420 compcert.lib.Integers Make bits_shr thm
R61413:61420 compcert.lib.Integers Make bits_shr thm
R61461:61463 compcert.lib.Coqlib <> zlt def
R61482:61490 compcert.lib.Integers Make zwordsize def
R61467:61469 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R61470:61477 compcert.lib.Integers Make unsigned def
R61461:61463 compcert.lib.Coqlib <> zlt def
R61482:61490 compcert.lib.Integers Make zwordsize def
R61467:61469 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R61470:61477 compcert.lib.Integers Make unsigned def
R61509:61522 compcert.lib.Integers Make unsigned_range thm
R61509:61522 compcert.lib.Integers Make unsigned_range thm
prf 61558:61564 Make and_shr
R61608:61610 Coq.Init.Logic <> :type_scope:x_'='_x not
R61585:61587 compcert.lib.Integers Make and def
R61600:61602 compcert.lib.Integers Make shr def
R61606:61606 compcert.lib.Integers <> n var
R61604:61604 compcert.lib.Integers <> y var
R61590:61592 compcert.lib.Integers Make shr def
R61596:61596 compcert.lib.Integers <> n var
R61594:61594 compcert.lib.Integers <> x var
R61611:61613 compcert.lib.Integers Make shr def
R61625:61625 compcert.lib.Integers <> n var
R61616:61618 compcert.lib.Integers Make and def
R61622:61622 compcert.lib.Integers <> y var
R61620:61620 compcert.lib.Integers <> x var
R61674:61677 Coq.Init.Datatypes <> andb def
R61651:61667 compcert.lib.Integers Make bitwise_binop_shr thm
R61674:61677 Coq.Init.Datatypes <> andb def
R61651:61667 compcert.lib.Integers Make bitwise_binop_shr thm
R61686:61693 compcert.lib.Integers Make bits_and thm
R61686:61693 compcert.lib.Integers Make bits_and thm
prf 61710:61715 Make or_shr
R61758:61760 Coq.Init.Logic <> :type_scope:x_'='_x not
R61736:61737 compcert.lib.Integers Make or def
R61750:61752 compcert.lib.Integers Make shr def
R61756:61756 compcert.lib.Integers <> n var
R61754:61754 compcert.lib.Integers <> y var
R61740:61742 compcert.lib.Integers Make shr def
R61746:61746 compcert.lib.Integers <> n var
R61744:61744 compcert.lib.Integers <> x var
R61761:61763 compcert.lib.Integers Make shr def
R61774:61774 compcert.lib.Integers <> n var
R61766:61767 compcert.lib.Integers Make or def
R61771:61771 compcert.lib.Integers <> y var
R61769:61769 compcert.lib.Integers <> x var
R61823:61825 Coq.Init.Datatypes <> orb def
R61800:61816 compcert.lib.Integers Make bitwise_binop_shr thm
R61823:61825 Coq.Init.Datatypes <> orb def
R61800:61816 compcert.lib.Integers Make bitwise_binop_shr thm
R61834:61840 compcert.lib.Integers Make bits_or thm
R61834:61840 compcert.lib.Integers Make bits_or thm
prf 61857:61863 Make xor_shr
R61907:61909 Coq.Init.Logic <> :type_scope:x_'='_x not
R61884:61886 compcert.lib.Integers Make xor def
R61899:61901 compcert.lib.Integers Make shr def
R61905:61905 compcert.lib.Integers <> n var
R61903:61903 compcert.lib.Integers <> y var
R61889:61891 compcert.lib.Integers Make shr def
R61895:61895 compcert.lib.Integers <> n var
R61893:61893 compcert.lib.Integers <> x var
R61910:61912 compcert.lib.Integers Make shr def
R61924:61924 compcert.lib.Integers <> n var
R61915:61917 compcert.lib.Integers Make xor def
R61921:61921 compcert.lib.Integers <> y var
R61919:61919 compcert.lib.Integers <> x var
R61973:61976 Coq.Init.Datatypes <> xorb def
R61950:61966 compcert.lib.Integers Make bitwise_binop_shr thm
R61973:61976 Coq.Init.Datatypes <> xorb def
R61950:61966 compcert.lib.Integers Make bitwise_binop_shr thm
R61985:61992 compcert.lib.Integers Make bits_xor thm
R61985:61992 compcert.lib.Integers Make bits_xor thm
prf 62009:62015 Make shr_shr
R62144:62146 Coq.Init.Logic <> :type_scope:x_'='_x not
R62129:62131 compcert.lib.Integers Make shr def
R62143:62143 compcert.lib.Integers <> z var
R62134:62136 compcert.lib.Integers Make shr def
R62140:62140 compcert.lib.Integers <> y var
R62138:62138 compcert.lib.Integers <> x var
R62147:62149 compcert.lib.Integers Make shr def
R62154:62156 compcert.lib.Integers Make add def
R62160:62160 compcert.lib.Integers <> z var
R62158:62158 compcert.lib.Integers <> y var
R62151:62151 compcert.lib.Integers <> x var
R62116:62118 Coq.Init.Logic <> :type_scope:x_'='_x not
R62093:62095 compcert.lib.Integers Make ltu def
R62107:62115 compcert.lib.Integers Make iwordsize def
R62098:62100 compcert.lib.Integers Make add def
R62104:62104 compcert.lib.Integers <> z var
R62102:62102 compcert.lib.Integers <> y var
R62119:62122 Coq.Init.Datatypes <> true constr
R62080:62082 Coq.Init.Logic <> :type_scope:x_'='_x not
R62065:62067 compcert.lib.Integers Make ltu def
R62071:62079 compcert.lib.Integers Make iwordsize def
R62069:62069 compcert.lib.Integers <> z var
R62083:62086 Coq.Init.Datatypes <> true constr
R62051:62053 Coq.Init.Logic <> :type_scope:x_'='_x not
R62036:62038 compcert.lib.Integers Make ltu def
R62042:62050 compcert.lib.Integers Make iwordsize def
R62040:62040 compcert.lib.Integers <> y var
R62054:62057 Coq.Init.Datatypes <> true constr
R62195:62211 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62219:62235 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62195:62211 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62219:62235 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62280:62282 Coq.Init.Logic <> :type_scope:x_'='_x not
R62262:62269 compcert.lib.Integers Make unsigned def
R62272:62274 compcert.lib.Integers Make add def
R62293:62295 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62283:62290 compcert.lib.Integers Make unsigned def
R62296:62303 compcert.lib.Integers Make unsigned def
R62280:62282 Coq.Init.Logic <> :type_scope:x_'='_x not
R62262:62269 compcert.lib.Integers Make unsigned def
R62272:62274 compcert.lib.Integers Make add def
R62293:62295 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62283:62290 compcert.lib.Integers Make unsigned def
R62296:62303 compcert.lib.Integers Make unsigned def
R62320:62322 compcert.lib.Integers Make add def
R62331:62343 compcert.lib.Integers Make unsigned_repr thm
R62331:62343 compcert.lib.Integers Make unsigned_repr thm
R62362:62386 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R62362:62386 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R62404:62415 compcert.lib.Integers Make same_bits_eq thm
R62404:62415 compcert.lib.Integers Make same_bits_eq thm
R62438:62445 compcert.lib.Integers Make bits_shr thm
R62438:62445 compcert.lib.Integers Make bits_shr thm
R62438:62445 compcert.lib.Integers Make bits_shr thm
R62438:62445 compcert.lib.Integers Make bits_shr thm
R62438:62445 compcert.lib.Integers Make bits_shr thm
R62475:62477 compcert.lib.Coqlib <> zlt def
R62496:62504 compcert.lib.Integers Make zwordsize def
R62481:62483 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62484:62491 compcert.lib.Integers Make unsigned def
R62475:62477 compcert.lib.Coqlib <> zlt def
R62496:62504 compcert.lib.Integers Make zwordsize def
R62481:62483 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62484:62491 compcert.lib.Integers Make unsigned def
R62532:62535 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62559:62559 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62546:62548 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62536:62543 compcert.lib.Integers Make unsigned def
R62549:62556 compcert.lib.Integers Make unsigned def
R62582:62584 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62569:62571 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62572:62579 compcert.lib.Integers Make unsigned def
R62585:62592 compcert.lib.Integers Make unsigned def
R62582:62584 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62569:62571 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62572:62579 compcert.lib.Integers Make unsigned def
R62585:62592 compcert.lib.Integers Make unsigned def
R62532:62535 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62559:62559 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62546:62548 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62536:62543 compcert.lib.Integers Make unsigned def
R62549:62556 compcert.lib.Integers Make unsigned def
R62625:62633 compcert.lib.Coqlib <> zlt_false thm
R62639:62641 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62642:62649 compcert.lib.Integers Make unsigned def
R62652:62654 compcert.lib.Integers Make add def
R62625:62633 compcert.lib.Coqlib <> zlt_false thm
R62639:62641 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62642:62649 compcert.lib.Integers Make unsigned def
R62652:62654 compcert.lib.Integers Make add def
R62676:62678 compcert.lib.Coqlib <> zlt def
R62709:62717 compcert.lib.Integers Make zwordsize def
R62694:62696 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62690:62692 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R62681:62689 compcert.lib.Integers Make zwordsize def
R62697:62704 compcert.lib.Integers Make unsigned def
R62676:62678 compcert.lib.Coqlib <> zlt def
R62709:62717 compcert.lib.Integers Make zwordsize def
R62694:62696 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62690:62692 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R62681:62689 compcert.lib.Integers Make zwordsize def
R62697:62704 compcert.lib.Integers Make unsigned def
R62750:62752 compcert.lib.Coqlib <> zlt def
R62771:62779 compcert.lib.Integers Make zwordsize def
R62756:62758 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62759:62766 compcert.lib.Integers Make unsigned def
R62750:62752 compcert.lib.Coqlib <> zlt def
R62771:62779 compcert.lib.Integers Make zwordsize def
R62756:62758 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R62759:62766 compcert.lib.Integers Make unsigned def
prf 62804:62815 Make and_shr_shru
R62860:62862 Coq.Init.Logic <> :type_scope:x_'='_x not
R62836:62838 compcert.lib.Integers Make and def
R62851:62854 compcert.lib.Integers Make shru def
R62858:62858 compcert.lib.Integers <> z var
R62856:62856 compcert.lib.Integers <> y var
R62841:62843 compcert.lib.Integers Make shr def
R62847:62847 compcert.lib.Integers <> z var
R62845:62845 compcert.lib.Integers <> x var
R62863:62866 compcert.lib.Integers Make shru def
R62878:62878 compcert.lib.Integers <> z var
R62869:62871 compcert.lib.Integers Make and def
R62875:62875 compcert.lib.Integers <> y var
R62873:62873 compcert.lib.Integers <> x var
R62904:62915 compcert.lib.Integers Make same_bits_eq thm
R62904:62915 compcert.lib.Integers Make same_bits_eq thm
R62936:62943 compcert.lib.Integers Make bits_and thm
R62936:62943 compcert.lib.Integers Make bits_and thm
R62960:62967 compcert.lib.Integers Make bits_shr thm
R62960:62967 compcert.lib.Integers Make bits_shr thm
R62985:62993 compcert.lib.Integers Make bits_shru thm
R62985:62993 compcert.lib.Integers Make bits_shru thm
R62985:62993 compcert.lib.Integers Make bits_shru thm
R62985:62993 compcert.lib.Integers Make bits_shru thm
R63014:63016 compcert.lib.Coqlib <> zlt def
R63035:63043 compcert.lib.Integers Make zwordsize def
R63020:63022 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R63023:63030 compcert.lib.Integers Make unsigned def
R63014:63016 compcert.lib.Coqlib <> zlt def
R63035:63043 compcert.lib.Integers Make zwordsize def
R63020:63022 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R63023:63030 compcert.lib.Integers Make unsigned def
R63059:63066 compcert.lib.Integers Make bits_and thm
R63059:63066 compcert.lib.Integers Make bits_and thm
R63087:63100 compcert.lib.Integers Make unsigned_range thm
R63087:63100 compcert.lib.Integers Make unsigned_range thm
R63123:63134 Coq.Bool.Bool <> andb_false_r thm
R63123:63134 Coq.Bool.Bool <> andb_false_r thm
prf 63151:63166 Make shr_and_shru_and
R63228:63230 Coq.Init.Logic <> :type_scope:x_'='_x not
R63213:63215 compcert.lib.Integers Make and def
R63227:63227 compcert.lib.Integers <> z var
R63218:63220 compcert.lib.Integers Make shr def
R63224:63224 compcert.lib.Integers <> y var
R63222:63222 compcert.lib.Integers <> x var
R63231:63233 compcert.lib.Integers Make and def
R63246:63246 compcert.lib.Integers <> z var
R63236:63239 compcert.lib.Integers Make shru def
R63243:63243 compcert.lib.Integers <> y var
R63241:63241 compcert.lib.Integers <> x var
R63203:63205 Coq.Init.Logic <> :type_scope:x_'='_x not
R63187:63190 compcert.lib.Integers Make shru def
R63202:63202 compcert.lib.Integers <> y var
R63193:63195 compcert.lib.Integers Make shl def
R63199:63199 compcert.lib.Integers <> y var
R63197:63197 compcert.lib.Integers <> z var
R63206:63206 compcert.lib.Integers <> z var
R63294:63301 compcert.lib.Integers Make and_shru thm
R63294:63301 compcert.lib.Integers Make and_shru thm
R63312:63323 compcert.lib.Integers Make and_shr_shru thm
R63312:63323 compcert.lib.Integers Make and_shr_shru thm
prf 63346:63357 Make shru_lt_zero
R63403:63405 Coq.Init.Logic <> :type_scope:x_'='_x not
R63374:63377 compcert.lib.Integers Make shru def
R63382:63385 compcert.lib.Integers Make repr def
R63397:63399 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R63388:63396 compcert.lib.Integers Make zwordsize def
R63379:63379 compcert.lib.Integers <> x var
R63409:63410 compcert.lib.Integers Make lt def
R63414:63417 compcert.lib.Integers Make zero def
R63412:63412 compcert.lib.Integers <> x var
R63433:63436 compcert.lib.Integers Make zero def
R63424:63426 compcert.lib.Integers Make one def
R63462:63473 compcert.lib.Integers Make same_bits_eq thm
R63462:63473 compcert.lib.Integers Make same_bits_eq thm
R63494:63502 compcert.lib.Integers Make bits_shru thm
R63494:63502 compcert.lib.Integers Make bits_shru thm
R63521:63533 compcert.lib.Integers Make unsigned_repr thm
R63521:63533 compcert.lib.Integers Make unsigned_repr thm
R63549:63551 compcert.lib.Coqlib <> zeq def
R63549:63551 compcert.lib.Coqlib <> zeq def
R63578:63586 Coq.ZArith.BinInt <> Zplus_0_l syndef
R63578:63586 Coq.ZArith.BinInt <> Zplus_0_l syndef
R63597:63604 compcert.lib.Coqlib <> zlt_true thm
R63597:63604 compcert.lib.Coqlib <> zlt_true thm
R63617:63636 compcert.lib.Integers Make sign_bit_of_unsigned thm
R63617:63636 compcert.lib.Integers Make sign_bit_of_unsigned thm
R63648:63649 compcert.lib.Integers Make lt def
R63660:63670 compcert.lib.Integers Make signed_zero thm
R63660:63670 compcert.lib.Integers Make signed_zero thm
R63680:63685 compcert.lib.Integers Make signed def
R63701:63703 compcert.lib.Coqlib <> zlt def
R63718:63729 compcert.lib.Integers Make half_modulus def
R63706:63713 compcert.lib.Integers Make unsigned def
R63701:63703 compcert.lib.Coqlib <> zlt def
R63718:63729 compcert.lib.Integers Make half_modulus def
R63706:63713 compcert.lib.Integers Make unsigned def
R63743:63751 compcert.lib.Coqlib <> zlt_false thm
R63743:63751 compcert.lib.Coqlib <> zlt_false thm
R63772:63785 compcert.lib.Integers Make unsigned_range thm
R63772:63785 compcert.lib.Integers Make unsigned_range thm
R63809:63816 compcert.lib.Coqlib <> zlt_true thm
R63809:63816 compcert.lib.Coqlib <> zlt_true thm
R63826:63828 compcert.lib.Integers Make one def
R63839:63850 compcert.lib.Integers Make testbit_repr thm
R63839:63850 compcert.lib.Integers Make testbit_repr thm
R63874:63887 compcert.lib.Integers Make unsigned_range thm
R63874:63887 compcert.lib.Integers Make unsigned_range thm
R63920:63928 compcert.lib.Coqlib <> zlt_false thm
R63920:63928 compcert.lib.Coqlib <> zlt_false thm
R63940:63946 compcert.lib.Integers Make testbit def
R63957:63967 compcert.lib.Integers Make Ztestbit_eq thm
R63957:63967 compcert.lib.Integers Make Ztestbit_eq thm
R63978:63986 compcert.lib.Coqlib <> zeq_false thm
R63978:63986 compcert.lib.Coqlib <> zeq_false thm
R64002:64003 compcert.lib.Integers Make lt def
R64007:64010 compcert.lib.Integers Make zero def
R64002:64003 compcert.lib.Integers Make lt def
R64007:64010 compcert.lib.Integers Make zero def
R64025:64036 compcert.lib.Integers Make unsigned_one thm
R64025:64036 compcert.lib.Integers Make unsigned_one thm
R64045:64050 Coq.ZArith.BinInt Z div2 def
R64045:64050 Coq.ZArith.BinInt Z div2 def
R64061:64073 Coq.ZArith.BinInt Z testbit_0_l thm
R64061:64073 Coq.ZArith.BinInt Z testbit_0_l thm
R64092:64104 compcert.lib.Integers Make unsigned_zero thm
R64092:64104 compcert.lib.Integers Make unsigned_zero thm
R64113:64118 Coq.ZArith.BinInt Z div2 def
R64113:64118 Coq.ZArith.BinInt Z div2 def
R64129:64141 Coq.ZArith.BinInt Z testbit_0_l thm
R64129:64141 Coq.ZArith.BinInt Z testbit_0_l thm
R64185:64205 compcert.lib.Integers Make wordsize_max_unsigned thm
R64185:64205 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 64229:64239 Make shr_lt_zero
R64284:64286 Coq.Init.Logic <> :type_scope:x_'='_x not
R64256:64258 compcert.lib.Integers Make shr def
R64263:64266 compcert.lib.Integers Make repr def
R64278:64280 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64269:64277 compcert.lib.Integers Make zwordsize def
R64260:64260 compcert.lib.Integers <> x var
R64290:64291 compcert.lib.Integers Make lt def
R64295:64298 compcert.lib.Integers Make zero def
R64293:64293 compcert.lib.Integers <> x var
R64315:64318 compcert.lib.Integers Make zero def
R64305:64308 compcert.lib.Integers Make mone def
R64344:64355 compcert.lib.Integers Make same_bits_eq thm
R64344:64355 compcert.lib.Integers Make same_bits_eq thm
R64376:64383 compcert.lib.Integers Make bits_shr thm
R64376:64383 compcert.lib.Integers Make bits_shr thm
R64402:64414 compcert.lib.Integers Make unsigned_repr thm
R64402:64414 compcert.lib.Integers Make unsigned_repr thm
R64433:64439 compcert.lib.Integers Make testbit def
R64453:64455 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64444:64452 compcert.lib.Integers Make zwordsize def
R64433:64439 compcert.lib.Integers Make testbit def
R64453:64455 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64444:64452 compcert.lib.Integers Make zwordsize def
R64482:64484 compcert.lib.Coqlib <> zlt def
R64508:64516 compcert.lib.Integers Make zwordsize def
R64488:64491 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64505:64505 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64501:64503 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64492:64500 compcert.lib.Integers Make zwordsize def
R64482:64484 compcert.lib.Coqlib <> zlt def
R64508:64516 compcert.lib.Integers Make zwordsize def
R64488:64491 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64505:64505 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R64501:64503 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64492:64500 compcert.lib.Integers Make zwordsize def
R64537:64556 compcert.lib.Integers Make sign_bit_of_unsigned thm
R64537:64556 compcert.lib.Integers Make sign_bit_of_unsigned thm
R64569:64570 compcert.lib.Integers Make lt def
R64581:64591 compcert.lib.Integers Make signed_zero thm
R64581:64591 compcert.lib.Integers Make signed_zero thm
R64601:64606 compcert.lib.Integers Make signed def
R64622:64624 compcert.lib.Coqlib <> zlt def
R64639:64650 compcert.lib.Integers Make half_modulus def
R64627:64634 compcert.lib.Integers Make unsigned def
R64622:64624 compcert.lib.Coqlib <> zlt def
R64639:64650 compcert.lib.Integers Make half_modulus def
R64627:64634 compcert.lib.Integers Make unsigned def
R64664:64672 compcert.lib.Coqlib <> zlt_false thm
R64664:64672 compcert.lib.Coqlib <> zlt_false thm
R64683:64691 compcert.lib.Integers Make bits_zero thm
R64683:64691 compcert.lib.Integers Make bits_zero thm
R64712:64725 compcert.lib.Integers Make unsigned_range thm
R64712:64725 compcert.lib.Integers Make unsigned_range thm
R64749:64756 compcert.lib.Coqlib <> zlt_true thm
R64749:64756 compcert.lib.Coqlib <> zlt_true thm
R64767:64775 compcert.lib.Integers Make bits_mone thm
R64767:64775 compcert.lib.Integers Make bits_mone thm
R64796:64809 compcert.lib.Integers Make unsigned_range thm
R64796:64809 compcert.lib.Integers Make unsigned_range thm
R64835:64855 compcert.lib.Integers Make wordsize_max_unsigned thm
R64835:64855 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 64912:64919 Make bits_rol
R64984:64986 Coq.Init.Logic <> :type_scope:x_'='_x not
R64965:64971 compcert.lib.Integers Make testbit def
R64983:64983 compcert.lib.Integers <> i var
R64974:64976 compcert.lib.Integers Make rol def
R64980:64980 compcert.lib.Integers <> y var
R64978:64978 compcert.lib.Integers <> x var
R64987:64993 compcert.lib.Integers Make testbit def
R64998:64998 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R65013:65018 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R65000:65002 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R64999:64999 compcert.lib.Integers <> i var
R65003:65010 compcert.lib.Integers Make unsigned def
R65012:65012 compcert.lib.Integers <> y var
R65019:65027 compcert.lib.Integers Make zwordsize def
R64995:64995 compcert.lib.Integers <> x var
R64942:64945 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R64947:64949 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R64946:64946 compcert.lib.Integers <> i var
R64946:64946 compcert.lib.Integers <> i var
R64950:64958 compcert.lib.Integers Make zwordsize def
R65055:65057 compcert.lib.Integers Make rol def
R65071:65082 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R65097:65105 compcert.lib.Integers Make zwordsize def
R65085:65092 compcert.lib.Integers Make unsigned def
R65071:65082 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R65097:65105 compcert.lib.Integers Make zwordsize def
R65085:65092 compcert.lib.Integers Make unsigned def
R65115:65126 compcert.lib.Integers Make wordsize_pos thm
R65115:65126 compcert.lib.Integers Make wordsize_pos thm
R65152:65156 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R65142:65149 compcert.lib.Integers Make unsigned def
R65157:65165 compcert.lib.Integers Make zwordsize def
R65152:65156 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R65142:65149 compcert.lib.Integers Make unsigned def
R65157:65165 compcert.lib.Integers Make zwordsize def
R65189:65191 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R65179:65186 compcert.lib.Integers Make unsigned def
R65192:65200 compcert.lib.Integers Make zwordsize def
R65189:65191 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R65179:65186 compcert.lib.Integers Make unsigned def
R65192:65200 compcert.lib.Integers Make zwordsize def
R65229:65236 Coq.ZArith.Zdiv <> Z_mod_lt thm
R65251:65259 compcert.lib.Integers Make zwordsize def
R65239:65246 compcert.lib.Integers Make unsigned def
R65229:65236 Coq.ZArith.Zdiv <> Z_mod_lt thm
R65251:65259 compcert.lib.Integers Make zwordsize def
R65239:65246 compcert.lib.Integers Make unsigned def
R65269:65280 compcert.lib.Integers Make wordsize_pos thm
R65269:65280 compcert.lib.Integers Make wordsize_pos thm
R65318:65329 compcert.lib.Integers Make testbit_repr thm
R65318:65329 compcert.lib.Integers Make testbit_repr thm
R65348:65357 Coq.ZArith.BinInt Z lor_spec thm
R65348:65357 Coq.ZArith.BinInt Z lor_spec thm
R65368:65380 Coq.ZArith.BinInt Z shiftr_spec thm
R65368:65380 Coq.ZArith.BinInt Z shiftr_spec thm
R65406:65408 compcert.lib.Coqlib <> zlt def
R65406:65408 compcert.lib.Coqlib <> zlt def
R65428:65444 Coq.ZArith.BinInt Z shiftl_spec_low thm
R65428:65444 Coq.ZArith.BinInt Z shiftl_spec_low thm
R65471:65477 compcert.lib.Integers Make testbit def
R65529:65531 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65527:65527 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R65509:65519 compcert.lib.Coqlib <> Zmod_unique thm
R65529:65531 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65527:65527 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R65509:65519 compcert.lib.Coqlib <> Zmod_unique thm
R65581:65598 Coq.ZArith.BinInt Z shiftl_spec_high thm
R65581:65598 Coq.ZArith.BinInt Z shiftl_spec_high thm
R65611:65617 compcert.lib.Integers Make testbit def
R65623:65626 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65640:65640 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65636:65638 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65627:65635 compcert.lib.Integers Make zwordsize def
R65611:65617 compcert.lib.Integers Make testbit def
R65623:65626 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65640:65640 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65636:65638 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65627:65635 compcert.lib.Integers Make zwordsize def
R65657:65666 compcert.lib.Integers Make bits_above thm
R65657:65666 compcert.lib.Integers Make bits_above thm
R65677:65687 Coq.Bool.Bool <> orb_false_r thm
R65677:65687 Coq.Bool.Bool <> orb_false_r thm
R65700:65706 compcert.lib.Integers Make testbit def
R65712:65714 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65700:65706 compcert.lib.Integers Make testbit def
R65712:65714 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R65767:65767 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R65749:65759 compcert.lib.Coqlib <> Zmod_unique thm
R65767:65767 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R65749:65759 compcert.lib.Coqlib <> Zmod_unique thm
prf 65840:65847 Make bits_ror
R65911:65913 Coq.Init.Logic <> :type_scope:x_'='_x not
R65892:65898 compcert.lib.Integers Make testbit def
R65910:65910 compcert.lib.Integers <> i var
R65901:65903 compcert.lib.Integers Make ror def
R65907:65907 compcert.lib.Integers <> y var
R65905:65905 compcert.lib.Integers <> x var
R65914:65920 compcert.lib.Integers Make testbit def
R65925:65925 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R65940:65945 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R65927:65929 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R65926:65926 compcert.lib.Integers <> i var
R65930:65937 compcert.lib.Integers Make unsigned def
R65939:65939 compcert.lib.Integers <> y var
R65946:65954 compcert.lib.Integers Make zwordsize def
R65922:65922 compcert.lib.Integers <> x var
R65869:65872 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R65874:65876 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R65873:65873 compcert.lib.Integers <> i var
R65873:65873 compcert.lib.Integers <> i var
R65877:65885 compcert.lib.Integers Make zwordsize def
R65982:65984 compcert.lib.Integers Make ror def
R65998:66009 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R66024:66032 compcert.lib.Integers Make zwordsize def
R66012:66019 compcert.lib.Integers Make unsigned def
R65998:66009 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R66024:66032 compcert.lib.Integers Make zwordsize def
R66012:66019 compcert.lib.Integers Make unsigned def
R66042:66053 compcert.lib.Integers Make wordsize_pos thm
R66042:66053 compcert.lib.Integers Make wordsize_pos thm
R66079:66083 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R66069:66076 compcert.lib.Integers Make unsigned def
R66084:66092 compcert.lib.Integers Make zwordsize def
R66079:66083 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R66069:66076 compcert.lib.Integers Make unsigned def
R66084:66092 compcert.lib.Integers Make zwordsize def
R66116:66118 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R66106:66113 compcert.lib.Integers Make unsigned def
R66119:66127 compcert.lib.Integers Make zwordsize def
R66116:66118 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R66106:66113 compcert.lib.Integers Make unsigned def
R66119:66127 compcert.lib.Integers Make zwordsize def
R66156:66163 Coq.ZArith.Zdiv <> Z_mod_lt thm
R66178:66186 compcert.lib.Integers Make zwordsize def
R66166:66173 compcert.lib.Integers Make unsigned def
R66156:66163 Coq.ZArith.Zdiv <> Z_mod_lt thm
R66178:66186 compcert.lib.Integers Make zwordsize def
R66166:66173 compcert.lib.Integers Make unsigned def
R66196:66207 compcert.lib.Integers Make wordsize_pos thm
R66196:66207 compcert.lib.Integers Make wordsize_pos thm
R66245:66256 compcert.lib.Integers Make testbit_repr thm
R66245:66256 compcert.lib.Integers Make testbit_repr thm
R66275:66284 Coq.ZArith.BinInt Z lor_spec thm
R66275:66284 Coq.ZArith.BinInt Z lor_spec thm
R66295:66307 Coq.ZArith.BinInt Z shiftr_spec thm
R66295:66307 Coq.ZArith.BinInt Z shiftr_spec thm
R66333:66335 compcert.lib.Coqlib <> zlt def
R66345:66353 compcert.lib.Integers Make zwordsize def
R66339:66341 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66333:66335 compcert.lib.Coqlib <> zlt def
R66345:66353 compcert.lib.Integers Make zwordsize def
R66339:66341 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66369:66385 Coq.ZArith.BinInt Z shiftl_spec_low thm
R66369:66385 Coq.ZArith.BinInt Z shiftl_spec_low thm
R66402:66412 Coq.Bool.Bool <> orb_false_r thm
R66402:66412 Coq.Bool.Bool <> orb_false_r thm
R66427:66433 compcert.lib.Integers Make testbit def
R66465:66475 compcert.lib.Coqlib <> Zmod_unique thm
R66465:66475 compcert.lib.Coqlib <> Zmod_unique thm
R66537:66554 Coq.ZArith.BinInt Z shiftl_spec_high thm
R66537:66554 Coq.ZArith.BinInt Z shiftl_spec_high thm
R66567:66573 compcert.lib.Integers Make testbit def
R66579:66581 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66567:66573 compcert.lib.Integers Make testbit def
R66579:66581 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66600:66609 compcert.lib.Integers Make bits_above thm
R66600:66609 compcert.lib.Integers Make bits_above thm
R66631:66637 compcert.lib.Integers Make testbit def
R66689:66691 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66670:66680 compcert.lib.Coqlib <> Zmod_unique thm
R66689:66691 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R66670:66680 compcert.lib.Coqlib <> Zmod_unique thm
R66771:66778 compcert.lib.Integers Make bits_rol thm
R66780:66787 compcert.lib.Integers Make bits_ror thm
prf 66805:66812 Make shl_rolm
R66866:66868 Coq.Init.Logic <> :type_scope:x_'='_x not
R66859:66861 compcert.lib.Integers Make shl def
R66865:66865 compcert.lib.Integers <> n var
R66863:66863 compcert.lib.Integers <> x var
R66869:66872 compcert.lib.Integers Make rolm def
R66879:66881 compcert.lib.Integers Make shl def
R66888:66888 compcert.lib.Integers <> n var
R66883:66886 compcert.lib.Integers Make mone def
R66876:66876 compcert.lib.Integers <> n var
R66874:66874 compcert.lib.Integers <> x var
R66846:66848 Coq.Init.Logic <> :type_scope:x_'='_x not
R66831:66833 compcert.lib.Integers Make ltu def
R66837:66845 compcert.lib.Integers Make iwordsize def
R66835:66835 compcert.lib.Integers <> n var
R66849:66852 Coq.Init.Datatypes <> true constr
R66917:66923 compcert.lib.Integers Make ltu_inv thm
R66941:66962 compcert.lib.Integers Make unsigned_repr_wordsize thm
R66941:66962 compcert.lib.Integers Make unsigned_repr_wordsize thm
R66982:66985 compcert.lib.Integers Make rolm def
R66994:67005 compcert.lib.Integers Make same_bits_eq thm
R66994:67005 compcert.lib.Integers Make same_bits_eq thm
R67027:67034 compcert.lib.Integers Make bits_and thm
R67027:67034 compcert.lib.Integers Make bits_and thm
R67052:67059 compcert.lib.Integers Make bits_shl thm
R67052:67059 compcert.lib.Integers Make bits_shl thm
R67052:67059 compcert.lib.Integers Make bits_shl thm
R67052:67059 compcert.lib.Integers Make bits_shl thm
R67076:67083 compcert.lib.Integers Make bits_rol thm
R67076:67083 compcert.lib.Integers Make bits_rol thm
R67105:67107 compcert.lib.Coqlib <> zlt def
R67112:67119 compcert.lib.Integers Make unsigned def
R67105:67107 compcert.lib.Coqlib <> zlt def
R67112:67119 compcert.lib.Integers Make unsigned def
R67138:67149 Coq.Bool.Bool <> andb_false_r thm
R67138:67149 Coq.Bool.Bool <> andb_false_r thm
R67174:67187 compcert.lib.Integers Make unsigned_range thm
R67174:67187 compcert.lib.Integers Make unsigned_range thm
R67214:67222 compcert.lib.Integers Make bits_mone thm
R67214:67222 compcert.lib.Integers Make bits_mone thm
R67233:67243 Coq.Bool.Bool <> andb_true_r thm
R67233:67243 Coq.Bool.Bool <> andb_true_r thm
R67276:67285 compcert.lib.Coqlib <> Zmod_small thm
R67276:67285 compcert.lib.Coqlib <> Zmod_small thm
prf 67321:67329 Make shru_rolm
R67384:67386 Coq.Init.Logic <> :type_scope:x_'='_x not
R67376:67379 compcert.lib.Integers Make shru def
R67383:67383 compcert.lib.Integers <> n var
R67381:67381 compcert.lib.Integers <> x var
R67387:67390 compcert.lib.Integers Make rolm def
R67413:67416 compcert.lib.Integers Make shru def
R67423:67423 compcert.lib.Integers <> n var
R67418:67421 compcert.lib.Integers Make mone def
R67395:67397 compcert.lib.Integers Make sub def
R67409:67409 compcert.lib.Integers <> n var
R67399:67407 compcert.lib.Integers Make iwordsize def
R67392:67392 compcert.lib.Integers <> x var
R67363:67365 Coq.Init.Logic <> :type_scope:x_'='_x not
R67348:67350 compcert.lib.Integers Make ltu def
R67354:67362 compcert.lib.Integers Make iwordsize def
R67352:67352 compcert.lib.Integers <> n var
R67366:67369 Coq.Init.Datatypes <> true constr
R67452:67458 compcert.lib.Integers Make ltu_inv thm
R67476:67497 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67476:67497 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67517:67520 compcert.lib.Integers Make rolm def
R67529:67540 compcert.lib.Integers Make same_bits_eq thm
R67529:67540 compcert.lib.Integers Make same_bits_eq thm
R67562:67569 compcert.lib.Integers Make bits_and thm
R67562:67569 compcert.lib.Integers Make bits_and thm
R67587:67595 compcert.lib.Integers Make bits_shru thm
R67587:67595 compcert.lib.Integers Make bits_shru thm
R67587:67595 compcert.lib.Integers Make bits_shru thm
R67587:67595 compcert.lib.Integers Make bits_shru thm
R67612:67619 compcert.lib.Integers Make bits_rol thm
R67612:67619 compcert.lib.Integers Make bits_rol thm
R67641:67643 compcert.lib.Coqlib <> zlt def
R67662:67670 compcert.lib.Integers Make zwordsize def
R67647:67649 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67650:67657 compcert.lib.Integers Make unsigned def
R67641:67643 compcert.lib.Coqlib <> zlt def
R67662:67670 compcert.lib.Integers Make zwordsize def
R67647:67649 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R67650:67657 compcert.lib.Integers Make unsigned def
R67690:67703 compcert.lib.Integers Make unsigned_range thm
R67690:67703 compcert.lib.Integers Make unsigned_range thm
R67730:67738 compcert.lib.Integers Make bits_mone thm
R67730:67738 compcert.lib.Integers Make bits_mone thm
R67749:67759 Coq.Bool.Bool <> andb_true_r thm
R67749:67759 Coq.Bool.Bool <> andb_true_r thm
R67782:67784 compcert.lib.Integers Make sub def
R67795:67807 compcert.lib.Integers Make unsigned_repr thm
R67795:67807 compcert.lib.Integers Make unsigned_repr thm
R67818:67839 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67818:67839 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67862:67872 compcert.lib.Coqlib <> Zmod_unique thm
R67862:67872 compcert.lib.Coqlib <> Zmod_unique thm
R67911:67932 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67911:67932 compcert.lib.Integers Make unsigned_repr_wordsize thm
R67946:67966 compcert.lib.Integers Make wordsize_max_unsigned thm
R67946:67966 compcert.lib.Integers Make wordsize_max_unsigned thm
R68000:68011 Coq.Bool.Bool <> andb_false_r thm
R68000:68011 Coq.Bool.Bool <> andb_false_r thm
prf 68034:68041 Make rol_zero
R68068:68070 Coq.Init.Logic <> :type_scope:x_'='_x not
R68058:68060 compcert.lib.Integers Make rol def
R68064:68067 compcert.lib.Integers Make zero def
R68062:68062 compcert.lib.Integers <> x var
R68071:68071 compcert.lib.Integers <> x var
R68111:68123 compcert.lib.Integers Make unsigned_zero thm
R68111:68123 compcert.lib.Integers Make unsigned_zero thm
R68134:68143 Coq.ZArith.BinInt <> Zminus_0_r syndef
R68134:68143 Coq.ZArith.BinInt <> Zminus_0_r syndef
R68155:68164 compcert.lib.Coqlib <> Zmod_small thm
R68155:68164 compcert.lib.Coqlib <> Zmod_small thm
prf 68186:68202 Make bitwise_binop_rol
R68335:68337 Coq.Init.Logic <> :type_scope:x_'='_x not
R68322:68324 compcert.lib.Integers Make rol def
R68334:68334 compcert.lib.Integers <> n var
R68327:68327 compcert.lib.Integers <> f var
R68331:68331 compcert.lib.Integers <> y var
R68329:68329 compcert.lib.Integers <> x var
R68338:68338 compcert.lib.Integers <> f var
R68351:68353 compcert.lib.Integers Make rol def
R68357:68357 compcert.lib.Integers <> n var
R68355:68355 compcert.lib.Integers <> y var
R68341:68343 compcert.lib.Integers Make rol def
R68347:68347 compcert.lib.Integers <> n var
R68345:68345 compcert.lib.Integers <> x var
R68282:68284 Coq.Init.Logic <> :type_scope:x_'='_x not
R68265:68271 compcert.lib.Integers Make testbit def
R68281:68281 compcert.lib.Integers <> i var
R68274:68274 compcert.lib.Integers <> f var
R68278:68278 compcert.lib.Integers <> y var
R68276:68276 compcert.lib.Integers <> x var
R68285:68286 compcert.lib.Integers <> f' var
R68303:68309 compcert.lib.Integers Make testbit def
R68313:68313 compcert.lib.Integers <> i var
R68311:68311 compcert.lib.Integers <> y var
R68289:68295 compcert.lib.Integers Make testbit def
R68299:68299 compcert.lib.Integers <> i var
R68297:68297 compcert.lib.Integers <> x var
R68244:68247 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R68249:68251 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R68248:68248 compcert.lib.Integers <> i var
R68248:68248 compcert.lib.Integers <> i var
R68252:68260 compcert.lib.Integers Make zwordsize def
R68384:68395 compcert.lib.Integers Make same_bits_eq thm
R68384:68395 compcert.lib.Integers Make same_bits_eq thm
R68435:68442 compcert.lib.Integers Make bits_rol thm
R68435:68442 compcert.lib.Integers Make bits_rol thm
R68435:68442 compcert.lib.Integers Make bits_rol thm
R68435:68442 compcert.lib.Integers Make bits_rol thm
R68435:68442 compcert.lib.Integers Make bits_rol thm
R68477:68484 Coq.ZArith.Zdiv <> Z_mod_lt thm
R68477:68484 Coq.ZArith.Zdiv <> Z_mod_lt thm
R68493:68504 compcert.lib.Integers Make wordsize_pos thm
R68493:68504 compcert.lib.Integers Make wordsize_pos thm
prf 68521:68527 Make rol_and
R68563:68565 Coq.Init.Logic <> :type_scope:x_'='_x not
R68548:68550 compcert.lib.Integers Make rol def
R68562:68562 compcert.lib.Integers <> n var
R68553:68555 compcert.lib.Integers Make and def
R68559:68559 compcert.lib.Integers <> y var
R68557:68557 compcert.lib.Integers <> x var
R68566:68568 compcert.lib.Integers Make and def
R68581:68583 compcert.lib.Integers Make rol def
R68587:68587 compcert.lib.Integers <> n var
R68585:68585 compcert.lib.Integers <> y var
R68571:68573 compcert.lib.Integers Make rol def
R68577:68577 compcert.lib.Integers <> n var
R68575:68575 compcert.lib.Integers <> x var
R68637:68640 Coq.Init.Datatypes <> andb def
R68614:68630 compcert.lib.Integers Make bitwise_binop_rol thm
R68637:68640 Coq.Init.Datatypes <> andb def
R68614:68630 compcert.lib.Integers Make bitwise_binop_rol thm
R68649:68656 compcert.lib.Integers Make bits_and thm
R68649:68656 compcert.lib.Integers Make bits_and thm
prf 68673:68678 Make rol_or
R68713:68715 Coq.Init.Logic <> :type_scope:x_'='_x not
R68699:68701 compcert.lib.Integers Make rol def
R68712:68712 compcert.lib.Integers <> n var
R68704:68705 compcert.lib.Integers Make or def
R68709:68709 compcert.lib.Integers <> y var
R68707:68707 compcert.lib.Integers <> x var
R68716:68717 compcert.lib.Integers Make or def
R68730:68732 compcert.lib.Integers Make rol def
R68736:68736 compcert.lib.Integers <> n var
R68734:68734 compcert.lib.Integers <> y var
R68720:68722 compcert.lib.Integers Make rol def
R68726:68726 compcert.lib.Integers <> n var
R68724:68724 compcert.lib.Integers <> x var
R68786:68788 Coq.Init.Datatypes <> orb def
R68763:68779 compcert.lib.Integers Make bitwise_binop_rol thm
R68786:68788 Coq.Init.Datatypes <> orb def
R68763:68779 compcert.lib.Integers Make bitwise_binop_rol thm
R68797:68803 compcert.lib.Integers Make bits_or thm
R68797:68803 compcert.lib.Integers Make bits_or thm
prf 68820:68826 Make rol_xor
R68862:68864 Coq.Init.Logic <> :type_scope:x_'='_x not
R68847:68849 compcert.lib.Integers Make rol def
R68861:68861 compcert.lib.Integers <> n var
R68852:68854 compcert.lib.Integers Make xor def
R68858:68858 compcert.lib.Integers <> y var
R68856:68856 compcert.lib.Integers <> x var
R68865:68867 compcert.lib.Integers Make xor def
R68880:68882 compcert.lib.Integers Make rol def
R68886:68886 compcert.lib.Integers <> n var
R68884:68884 compcert.lib.Integers <> y var
R68870:68872 compcert.lib.Integers Make rol def
R68876:68876 compcert.lib.Integers <> n var
R68874:68874 compcert.lib.Integers <> x var
R68936:68939 Coq.Init.Datatypes <> xorb def
R68913:68929 compcert.lib.Integers Make bitwise_binop_rol thm
R68936:68939 Coq.Init.Datatypes <> xorb def
R68913:68929 compcert.lib.Integers Make bitwise_binop_rol thm
R68948:68955 compcert.lib.Integers Make bits_xor thm
R68948:68955 compcert.lib.Integers Make bits_xor thm
prf 68972:68978 Make rol_rol
R69045:69047 Coq.Init.Logic <> :type_scope:x_'='_x not
R69030:69032 compcert.lib.Integers Make rol def
R69044:69044 compcert.lib.Integers <> m var
R69035:69037 compcert.lib.Integers Make rol def
R69041:69041 compcert.lib.Integers <> n var
R69039:69039 compcert.lib.Integers <> x var
R69048:69050 compcert.lib.Integers Make rol def
R69055:69058 compcert.lib.Integers Make modu def
R69070:69078 compcert.lib.Integers Make iwordsize def
R69061:69063 compcert.lib.Integers Make add def
R69067:69067 compcert.lib.Integers <> m var
R69065:69065 compcert.lib.Integers <> n var
R69052:69052 compcert.lib.Integers <> x var
R68999:69005 Coq.ZArith.Znumtheory <> Zdivide syndef
R69017:69023 compcert.lib.Integers Make modulus def
R69007:69015 compcert.lib.Integers Make zwordsize def
R69117:69128 compcert.lib.Integers Make eqmod_mod_eq thm
R69117:69128 compcert.lib.Integers Make eqmod_mod_eq thm
R69137:69148 compcert.lib.Integers Make wordsize_pos thm
R69137:69148 compcert.lib.Integers Make wordsize_pos thm
R69164:69171 compcert.lib.Integers Make unsigned def
R69187:69194 compcert.lib.Integers Make unsigned def
R69164:69171 compcert.lib.Integers Make unsigned def
R69187:69194 compcert.lib.Integers Make unsigned def
R69231:69233 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69227:69229 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69208:69218 compcert.lib.Integers Make eqmod_trans thm
R69231:69233 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69227:69229 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69208:69218 compcert.lib.Integers Make eqmod_trans thm
R69246:69254 compcert.lib.Integers Make eqmod_sub thm
R69246:69254 compcert.lib.Integers Make eqmod_sub thm
R69265:69273 compcert.lib.Integers Make eqmod_sym thm
R69265:69273 compcert.lib.Integers Make eqmod_sym thm
R69282:69290 compcert.lib.Integers Make eqmod_mod thm
R69282:69290 compcert.lib.Integers Make eqmod_mod thm
R69299:69310 compcert.lib.Integers Make wordsize_pos thm
R69299:69310 compcert.lib.Integers Make wordsize_pos thm
R69322:69331 compcert.lib.Integers Make eqmod_refl thm
R69322:69331 compcert.lib.Integers Make eqmod_refl thm
R69350:69352 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69346:69348 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69363:69366 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69372:69372 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69368:69370 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69363:69366 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69372:69372 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69368:69370 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69350:69352 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69346:69348 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R69393:69401 compcert.lib.Integers Make eqmod_sub thm
R69393:69401 compcert.lib.Integers Make eqmod_sub thm
R69412:69421 compcert.lib.Integers Make eqmod_refl thm
R69412:69421 compcert.lib.Integers Make eqmod_refl thm
R69450:69453 Coq.ZArith.Zdiv <> Zmod syndef
R69481:69489 compcert.lib.Integers Make zwordsize def
R69466:69468 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69456:69463 compcert.lib.Integers Make unsigned def
R69469:69476 compcert.lib.Integers Make unsigned def
R69432:69442 compcert.lib.Integers Make eqmod_trans thm
R69450:69453 Coq.ZArith.Zdiv <> Zmod syndef
R69481:69489 compcert.lib.Integers Make zwordsize def
R69466:69468 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69456:69463 compcert.lib.Integers Make unsigned def
R69469:69476 compcert.lib.Integers Make unsigned def
R69432:69442 compcert.lib.Integers Make eqmod_trans thm
R69505:69507 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69518:69520 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69518:69520 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69505:69507 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R69540:69548 compcert.lib.Integers Make eqmod_mod thm
R69540:69548 compcert.lib.Integers Make eqmod_mod thm
R69557:69568 compcert.lib.Integers Make wordsize_pos thm
R69557:69568 compcert.lib.Integers Make wordsize_pos thm
R69580:69583 compcert.lib.Integers Make modu def
R69586:69588 compcert.lib.Integers Make add def
R69615:69636 compcert.lib.Integers Make unsigned_repr_wordsize thm
R69615:69636 compcert.lib.Integers Make unsigned_repr_wordsize thm
R69659:69663 compcert.lib.Integers Make eqmod def
R69678:69685 compcert.lib.Integers Make unsigned def
R69688:69691 compcert.lib.Integers Make repr def
R69693:69693 compcert.lib.Integers <> a var
R69675:69675 compcert.lib.Integers <> a var
R69665:69673 compcert.lib.Integers Make zwordsize def
R69659:69663 compcert.lib.Integers Make eqmod def
R69678:69685 compcert.lib.Integers Make unsigned def
R69688:69691 compcert.lib.Integers Make repr def
R69693:69693 compcert.lib.Integers <> a var
R69675:69675 compcert.lib.Integers <> a var
R69665:69673 compcert.lib.Integers Make zwordsize def
R69718:69730 compcert.lib.Integers Make eqmod_divides thm
R69718:69730 compcert.lib.Integers Make eqmod_divides thm
R69739:69755 compcert.lib.Integers Make eqm_unsigned_repr thm
R69739:69755 compcert.lib.Integers Make eqm_unsigned_repr thm
R69779:69789 compcert.lib.Integers Make eqmod_trans thm
R69779:69789 compcert.lib.Integers Make eqmod_trans thm
R69814:69824 compcert.lib.Integers Make eqmod_refl2 thm
R69814:69824 compcert.lib.Integers Make eqmod_refl2 thm
R69833:69844 compcert.lib.Integers Make eqmod_mod_eq thm
R69833:69844 compcert.lib.Integers Make eqmod_mod_eq thm
R69853:69864 compcert.lib.Integers Make wordsize_pos thm
R69853:69864 compcert.lib.Integers Make wordsize_pos thm
R69882:69889 Coq.ZArith.Zdiv <> Z_mod_lt thm
R69882:69889 Coq.ZArith.Zdiv <> Z_mod_lt thm
R69898:69909 compcert.lib.Integers Make wordsize_pos thm
R69898:69909 compcert.lib.Integers Make wordsize_pos thm
prf 69926:69934 Make rolm_zero
R69966:69968 Coq.Init.Logic <> :type_scope:x_'='_x not
R69953:69956 compcert.lib.Integers Make rolm def
R69965:69965 compcert.lib.Integers <> m var
R69960:69963 compcert.lib.Integers Make zero def
R69958:69958 compcert.lib.Integers <> x var
R69969:69971 compcert.lib.Integers Make and def
R69975:69975 compcert.lib.Integers <> m var
R69973:69973 compcert.lib.Integers <> x var
R70002:70005 compcert.lib.Integers Make rolm def
R70016:70023 compcert.lib.Integers Make rol_zero thm
R70016:70023 compcert.lib.Integers Make rol_zero thm
prf 70046:70054 Make rolm_rolm
R70139:70145 Coq.Init.Logic <> :type_scope:x_'='_x not
R70114:70117 compcert.lib.Integers Make rolm def
R70137:70138 compcert.lib.Integers <> m2 var
R70134:70135 compcert.lib.Integers <> n2 var
R70120:70123 compcert.lib.Integers Make rolm def
R70130:70131 compcert.lib.Integers <> m1 var
R70127:70128 compcert.lib.Integers <> n1 var
R70125:70125 compcert.lib.Integers <> x var
R70146:70149 compcert.lib.Integers Make rolm def
R70194:70196 compcert.lib.Integers Make and def
R70210:70211 compcert.lib.Integers <> m2 var
R70199:70201 compcert.lib.Integers Make rol def
R70206:70207 compcert.lib.Integers <> n2 var
R70203:70204 compcert.lib.Integers <> m1 var
R70154:70157 compcert.lib.Integers Make modu def
R70171:70179 compcert.lib.Integers Make iwordsize def
R70160:70162 compcert.lib.Integers Make add def
R70167:70168 compcert.lib.Integers <> n2 var
R70164:70165 compcert.lib.Integers <> n1 var
R70151:70151 compcert.lib.Integers <> x var
R70083:70089 Coq.ZArith.Znumtheory <> Zdivide syndef
R70101:70107 compcert.lib.Integers Make modulus def
R70091:70099 compcert.lib.Integers Make zwordsize def
R70241:70244 compcert.lib.Integers Make rolm def
R70255:70261 compcert.lib.Integers Make rol_and thm
R70255:70261 compcert.lib.Integers Make rol_and thm
R70272:70280 compcert.lib.Integers Make and_assoc thm
R70272:70280 compcert.lib.Integers Make and_assoc thm
R70294:70300 compcert.lib.Integers Make rol_rol thm
R70294:70300 compcert.lib.Integers Make rol_rol thm
prf 70336:70342 Make or_rolm
R70397:70399 Coq.Init.Logic <> :type_scope:x_'='_x not
R70367:70368 compcert.lib.Integers Make or def
R70385:70388 compcert.lib.Integers Make rolm def
R70394:70395 compcert.lib.Integers <> m2 var
R70392:70392 compcert.lib.Integers <> n var
R70390:70390 compcert.lib.Integers <> x var
R70371:70374 compcert.lib.Integers Make rolm def
R70380:70381 compcert.lib.Integers <> m1 var
R70378:70378 compcert.lib.Integers <> n var
R70376:70376 compcert.lib.Integers <> x var
R70400:70403 compcert.lib.Integers Make rolm def
R70410:70411 compcert.lib.Integers Make or def
R70416:70417 compcert.lib.Integers <> m2 var
R70413:70414 compcert.lib.Integers <> m1 var
R70407:70407 compcert.lib.Integers <> n var
R70405:70405 compcert.lib.Integers <> x var
R70445:70448 compcert.lib.Integers Make rolm def
R70467:70480 compcert.lib.Integers Make and_or_distrib thm
R70467:70480 compcert.lib.Integers Make and_or_distrib thm
prf 70498:70504 Make ror_rol
R70558:70560 Coq.Init.Logic <> :type_scope:x_'='_x not
R70551:70553 compcert.lib.Integers Make ror def
R70557:70557 compcert.lib.Integers <> y var
R70555:70555 compcert.lib.Integers <> x var
R70561:70563 compcert.lib.Integers Make rol def
R70568:70570 compcert.lib.Integers Make sub def
R70582:70582 compcert.lib.Integers <> y var
R70572:70580 compcert.lib.Integers Make iwordsize def
R70565:70565 compcert.lib.Integers <> x var
R70538:70540 Coq.Init.Logic <> :type_scope:x_'='_x not
R70523:70525 compcert.lib.Integers Make ltu def
R70529:70537 compcert.lib.Integers Make iwordsize def
R70527:70527 compcert.lib.Integers <> y var
R70541:70544 Coq.Init.Datatypes <> true constr
R70617:70633 compcert.lib.Integers Make ltu_iwordsize_inv thm
R70617:70633 compcert.lib.Integers Make ltu_iwordsize_inv thm
R70657:70668 compcert.lib.Integers Make same_bits_eq thm
R70657:70668 compcert.lib.Integers Make same_bits_eq thm
R70689:70696 compcert.lib.Integers Make bits_ror thm
R70689:70696 compcert.lib.Integers Make bits_ror thm
R70713:70720 compcert.lib.Integers Make bits_rol thm
R70713:70720 compcert.lib.Integers Make bits_rol thm
R70748:70750 compcert.lib.Integers Make sub def
R70761:70773 compcert.lib.Integers Make unsigned_repr thm
R70761:70773 compcert.lib.Integers Make unsigned_repr thm
R70784:70805 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70784:70805 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70816:70827 compcert.lib.Integers Make eqmod_mod_eq thm
R70816:70827 compcert.lib.Integers Make eqmod_mod_eq thm
R70836:70847 compcert.lib.Integers Make wordsize_pos thm
R70836:70847 compcert.lib.Integers Make wordsize_pos thm
R70877:70898 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70877:70898 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70915:70926 compcert.lib.Integers Make wordsize_pos thm
R70940:70960 compcert.lib.Integers Make wordsize_max_unsigned thm
R70915:70926 compcert.lib.Integers Make wordsize_pos thm
R70940:70960 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 70985:70995 Make ror_rol_neg
R71044:71046 Coq.Init.Logic <> :type_scope:x_'='_x not
R71037:71039 compcert.lib.Integers Make ror def
R71043:71043 compcert.lib.Integers <> y var
R71041:71041 compcert.lib.Integers <> x var
R71047:71049 compcert.lib.Integers Make rol def
R71054:71056 compcert.lib.Integers Make neg def
R71058:71058 compcert.lib.Integers <> y var
R71051:71051 compcert.lib.Integers <> x var
R71012:71012 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R71022:71024 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R71032:71032 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R71013:71021 compcert.lib.Integers Make zwordsize def
R71025:71031 compcert.lib.Integers Make modulus def
R71085:71096 compcert.lib.Integers Make same_bits_eq thm
R71085:71096 compcert.lib.Integers Make same_bits_eq thm
R71117:71124 compcert.lib.Integers Make bits_ror thm
R71117:71124 compcert.lib.Integers Make bits_ror thm
R71143:71150 compcert.lib.Integers Make bits_rol thm
R71143:71150 compcert.lib.Integers Make bits_rol thm
R71179:71190 compcert.lib.Integers Make eqmod_mod_eq thm
R71179:71190 compcert.lib.Integers Make eqmod_mod_eq thm
R71228:71231 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R71244:71244 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R71232:71233 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R71234:71241 compcert.lib.Integers Make unsigned def
R71209:71219 compcert.lib.Integers Make eqmod_trans thm
R71228:71231 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R71244:71244 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R71232:71233 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R71234:71241 compcert.lib.Integers Make unsigned def
R71209:71219 compcert.lib.Integers Make eqmod_trans thm
R71257:71267 compcert.lib.Integers Make eqmod_refl2 thm
R71257:71267 compcert.lib.Integers Make eqmod_refl2 thm
R71286:71294 compcert.lib.Integers Make eqmod_sub thm
R71286:71294 compcert.lib.Integers Make eqmod_sub thm
R71303:71312 compcert.lib.Integers Make eqmod_refl thm
R71303:71312 compcert.lib.Integers Make eqmod_refl thm
R71342:71348 compcert.lib.Integers Make modulus def
R71323:71335 compcert.lib.Integers Make eqmod_divides thm
R71342:71348 compcert.lib.Integers Make modulus def
R71323:71335 compcert.lib.Integers Make eqmod_divides thm
R71360:71376 compcert.lib.Integers Make eqm_unsigned_repr thm
R71360:71376 compcert.lib.Integers Make eqm_unsigned_repr thm
prf 71399:71404 Make or_ror
R71513:71515 Coq.Init.Logic <> :type_scope:x_'='_x not
R71506:71508 compcert.lib.Integers Make ror def
R71512:71512 compcert.lib.Integers <> z var
R71510:71510 compcert.lib.Integers <> x var
R71516:71517 compcert.lib.Integers Make or def
R71530:71533 compcert.lib.Integers Make shru def
R71537:71537 compcert.lib.Integers <> z var
R71535:71535 compcert.lib.Integers <> x var
R71520:71522 compcert.lib.Integers Make shl def
R71526:71526 compcert.lib.Integers <> y var
R71524:71524 compcert.lib.Integers <> x var
R71488:71490 Coq.Init.Logic <> :type_scope:x_'='_x not
R71481:71483 compcert.lib.Integers Make add def
R71487:71487 compcert.lib.Integers <> z var
R71485:71485 compcert.lib.Integers <> y var
R71491:71499 compcert.lib.Integers Make iwordsize def
R71468:71470 Coq.Init.Logic <> :type_scope:x_'='_x not
R71453:71455 compcert.lib.Integers Make ltu def
R71459:71467 compcert.lib.Integers Make iwordsize def
R71457:71457 compcert.lib.Integers <> z var
R71471:71474 Coq.Init.Datatypes <> true constr
R71440:71442 Coq.Init.Logic <> :type_scope:x_'='_x not
R71425:71427 compcert.lib.Integers Make ltu def
R71431:71439 compcert.lib.Integers Make iwordsize def
R71429:71429 compcert.lib.Integers <> y var
R71443:71446 Coq.Init.Datatypes <> true constr
R71572:71588 compcert.lib.Integers Make ltu_iwordsize_inv thm
R71596:71612 compcert.lib.Integers Make ltu_iwordsize_inv thm
R71572:71588 compcert.lib.Integers Make ltu_iwordsize_inv thm
R71596:71612 compcert.lib.Integers Make ltu_iwordsize_inv thm
R71638:71640 compcert.lib.Integers Make ror def
R71643:71644 compcert.lib.Integers Make or def
R71647:71649 compcert.lib.Integers Make shl def
R71652:71655 compcert.lib.Integers Make shru def
R71664:71675 compcert.lib.Integers Make same_bits_eq thm
R71664:71675 compcert.lib.Integers Make same_bits_eq thm
R71698:71709 compcert.lib.Integers Make testbit_repr thm
R71698:71709 compcert.lib.Integers Make testbit_repr thm
R71698:71709 compcert.lib.Integers Make testbit_repr thm
R71698:71709 compcert.lib.Integers Make testbit_repr thm
R71730:71739 Coq.ZArith.BinInt Z lor_spec thm
R71730:71739 Coq.ZArith.BinInt Z lor_spec thm
R71730:71739 Coq.ZArith.BinInt Z lor_spec thm
R71730:71739 Coq.ZArith.BinInt Z lor_spec thm
R71750:71757 Coq.Bool.Bool <> orb_comm thm
R71750:71757 Coq.Bool.Bool <> orb_comm thm
R71775:71787 compcert.lib.Integers Make same_bits_eqm thm
R71775:71787 compcert.lib.Integers Make same_bits_eqm thm
R71775:71787 compcert.lib.Integers Make same_bits_eqm thm
R71806:71824 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R71806:71824 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R71833:71841 compcert.lib.Integers Make eqm_refl2 thm
R71833:71841 compcert.lib.Integers Make eqm_refl2 thm
R71865:71874 compcert.lib.Coqlib <> Zmod_small thm
R71865:71874 compcert.lib.Coqlib <> Zmod_small thm
R71914:71916 Coq.Init.Logic <> :type_scope:x_'='_x not
R71896:71903 compcert.lib.Integers Make unsigned def
R71906:71908 compcert.lib.Integers Make add def
R71917:71925 compcert.lib.Integers Make zwordsize def
R71914:71916 Coq.Init.Logic <> :type_scope:x_'='_x not
R71896:71903 compcert.lib.Integers Make unsigned def
R71906:71908 compcert.lib.Integers Make add def
R71917:71925 compcert.lib.Integers Make zwordsize def
R71954:71975 compcert.lib.Integers Make unsigned_repr_wordsize thm
R71954:71975 compcert.lib.Integers Make unsigned_repr_wordsize thm
R71990:71992 compcert.lib.Integers Make add def
R72009:72021 compcert.lib.Integers Make unsigned_repr thm
R72009:72021 compcert.lib.Integers Make unsigned_repr thm
R72058:72082 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R72058:72082 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R72103:72121 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R72103:72121 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R72130:72138 compcert.lib.Integers Make eqm_refl2 thm
R72130:72138 compcert.lib.Integers Make eqm_refl2 thm
R72161:72170 compcert.lib.Coqlib <> Zmod_small thm
R72161:72170 compcert.lib.Coqlib <> Zmod_small thm
def 72249:72258 Make powerserie
R72264:72267 Coq.Init.Datatypes <> list ind
R72269:72269 Coq.Numbers.BinNums <> Z ind
R72273:72273 Coq.Numbers.BinNums <> Z ind
R72286:72286 compcert.lib.Integers <> l var
R72297:72299 Coq.Init.Datatypes <> nil constr
R72311:72314 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72328:72330 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72321:72325 Coq.ZArith.Zpower <> two_p def
R72331:72340 compcert.lib.Integers <> powerserie def
prf 72359:72379 Make Z_one_bits_powerserie
R72415:72417 Coq.Init.Logic <> :type_scope:x_'='_x not
R72414:72414 compcert.lib.Integers <> x var
R72418:72427 compcert.lib.Integers Make powerserie def
R72430:72439 compcert.lib.Integers Make Z_one_bits def
R72450:72450 compcert.lib.Integers <> x var
R72441:72448 compcert.lib.Integers Make wordsize def
R72395:72398 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72400:72402 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72399:72399 compcert.lib.Integers <> x var
R72399:72399 compcert.lib.Integers <> x var
R72403:72409 compcert.lib.Integers Make modulus def
R72549:72551 Coq.Init.Logic <> :type_scope:x_'='_x not
R72539:72541 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R72538:72538 compcert.lib.Integers <> x var
R72542:72546 Coq.ZArith.Zpower <> two_p def
R72548:72548 compcert.lib.Integers <> i var
R72552:72561 compcert.lib.Integers Make powerserie def
R72564:72573 compcert.lib.Integers Make Z_one_bits def
R72579:72579 compcert.lib.Integers <> i var
R72577:72577 compcert.lib.Integers <> x var
R72575:72575 compcert.lib.Integers <> n var
R72507:72510 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72512:72514 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72511:72511 compcert.lib.Integers <> x var
R72511:72511 compcert.lib.Integers <> x var
R72515:72527 Coq.ZArith.Zpower <> two_power_nat def
R72529:72529 compcert.lib.Integers <> n var
R72493:72496 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R72497:72497 compcert.lib.Integers <> i var
R72549:72551 Coq.Init.Logic <> :type_scope:x_'='_x not
R72539:72541 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R72538:72538 compcert.lib.Integers <> x var
R72542:72546 Coq.ZArith.Zpower <> two_p def
R72548:72548 compcert.lib.Integers <> i var
R72552:72561 compcert.lib.Integers Make powerserie def
R72564:72573 compcert.lib.Integers Make Z_one_bits def
R72579:72579 compcert.lib.Integers <> i var
R72577:72577 compcert.lib.Integers <> x var
R72575:72575 compcert.lib.Integers <> n var
R72507:72510 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72512:72514 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R72511:72511 compcert.lib.Integers <> x var
R72511:72511 compcert.lib.Integers <> x var
R72515:72527 Coq.ZArith.Zpower <> two_power_nat def
R72529:72529 compcert.lib.Integers <> n var
R72493:72496 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R72497:72497 compcert.lib.Integers <> i var
R72628:72642 compcert.lib.Coqlib <> two_power_nat_O thm
R72628:72642 compcert.lib.Coqlib <> two_power_nat_O thm
R72663:72665 Coq.Init.Logic <> :type_scope:x_'='_x not
R72663:72665 Coq.Init.Logic <> :type_scope:x_'='_x not
R72705:72719 Coq.ZArith.Zpower <> two_power_nat_S thm
R72705:72719 Coq.ZArith.Zpower <> two_power_nat_S thm
R72734:72743 compcert.lib.Integers Make Z_one_bits def
R72734:72743 compcert.lib.Integers Make Z_one_bits def
R72757:72763 compcert.lib.Integers Make Zdecomp thm
R72757:72763 compcert.lib.Integers Make Zdecomp thm
R72783:72795 compcert.lib.Integers Make Zshiftin_spec thm
R72783:72795 compcert.lib.Integers Make Zshiftin_spec thm
R72842:72844 Coq.Init.Logic <> :type_scope:x_'='_x not
R72826:72828 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R72818:72823 Coq.ZArith.BinInt Z div2 def
R72829:72833 Coq.ZArith.Zpower <> two_p def
R72837:72839 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72845:72854 compcert.lib.Integers Make powerserie def
R72857:72866 compcert.lib.Integers Make Z_one_bits def
R72883:72885 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72871:72876 Coq.ZArith.BinInt Z div2 def
R72842:72844 Coq.Init.Logic <> :type_scope:x_'='_x not
R72826:72828 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R72818:72823 Coq.ZArith.BinInt Z div2 def
R72829:72833 Coq.ZArith.Zpower <> two_p def
R72837:72839 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72845:72854 compcert.lib.Integers Make powerserie def
R72857:72866 compcert.lib.Integers Make Z_one_bits def
R72883:72885 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R72871:72876 Coq.ZArith.BinInt Z div2 def
R72928:72932 Coq.ZArith.BinInt Z odd def
R72928:72932 Coq.ZArith.BinInt Z odd def
R72956:72967 Coq.ZArith.Zpower <> two_p_is_exp thm
R72956:72967 Coq.ZArith.Zpower <> two_p_is_exp thm
R72984:72988 Coq.ZArith.Zpower <> two_p def
R72984:72988 Coq.ZArith.Zpower <> two_p def
R73018:73024 compcert.lib.Integers Make Zdecomp thm
R73018:73024 compcert.lib.Integers Make Zdecomp thm
R73043:73055 compcert.lib.Integers Make Zshiftin_spec thm
R73043:73055 compcert.lib.Integers Make Zshiftin_spec thm
R73071:73075 Coq.ZArith.BinInt Z odd def
R73087:73096 compcert.lib.Integers Make powerserie def
R73071:73075 Coq.ZArith.BinInt Z odd def
R73087:73096 compcert.lib.Integers Make powerserie def
R73087:73096 compcert.lib.Integers Make powerserie def
R73173:73177 Coq.ZArith.Zpower <> two_p def
R73173:73177 Coq.ZArith.Zpower <> two_p def
prf 73228:73243 Make Z_one_bits_range
R73295:73298 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73300:73302 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73299:73299 compcert.lib.Integers <> i var
R73299:73299 compcert.lib.Integers <> i var
R73303:73311 compcert.lib.Integers Make zwordsize def
R73260:73261 Coq.Lists.List <> In def
R73266:73275 compcert.lib.Integers Make Z_one_bits def
R73286:73286 compcert.lib.Integers <> x var
R73277:73284 compcert.lib.Integers Make wordsize def
R73263:73263 compcert.lib.Integers <> i var
R73379:73382 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73384:73386 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73378:73378 compcert.lib.Integers <> i var
R73383:73383 compcert.lib.Integers <> j var
R73383:73383 compcert.lib.Integers <> j var
R73388:73390 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73387:73387 compcert.lib.Integers <> i var
R73391:73398 Coq.ZArith.BinInt <> Z_of_nat syndef
R73400:73400 compcert.lib.Integers <> n var
R73351:73352 Coq.Lists.List <> In def
R73357:73366 compcert.lib.Integers Make Z_one_bits def
R73372:73372 compcert.lib.Integers <> i var
R73370:73370 compcert.lib.Integers <> x var
R73368:73368 compcert.lib.Integers <> n var
R73354:73354 compcert.lib.Integers <> j var
R73379:73382 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73384:73386 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73378:73378 compcert.lib.Integers <> i var
R73383:73383 compcert.lib.Integers <> j var
R73383:73383 compcert.lib.Integers <> j var
R73388:73390 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73387:73387 compcert.lib.Integers <> i var
R73391:73398 Coq.ZArith.BinInt <> Z_of_nat syndef
R73400:73400 compcert.lib.Integers <> n var
R73351:73352 Coq.Lists.List <> In def
R73357:73366 compcert.lib.Integers Make Z_one_bits def
R73372:73372 compcert.lib.Integers <> i var
R73370:73370 compcert.lib.Integers <> x var
R73368:73368 compcert.lib.Integers <> n var
R73354:73354 compcert.lib.Integers <> j var
R73429:73430 Coq.Lists.List <> In def
R73429:73430 Coq.Lists.List <> In def
R73429:73430 Coq.Lists.List <> In def
R0:-1 compcert.lib.Integers <> y var
R0:-1 compcert.lib.Integers <> y var
R0:-1 compcert.lib.Integers <> y var
R73466:73470 Coq.ZArith.Znat <> inj_S syndef
R73466:73470 Coq.ZArith.Znat <> inj_S syndef
R73526:73529 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73531:73533 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73535:73537 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73538:73543 Coq.ZArith.BinInt Z succ def
R73546:73553 Coq.ZArith.BinInt Z of_nat def
R73483:73484 Coq.Lists.List <> In def
R73489:73498 compcert.lib.Integers Make Z_one_bits def
R73515:73517 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73503:73508 Coq.ZArith.BinInt Z div2 def
R73526:73529 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73531:73533 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73535:73537 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73538:73543 Coq.ZArith.BinInt Z succ def
R73546:73553 Coq.ZArith.BinInt Z of_nat def
R73483:73484 Coq.Lists.List <> In def
R73489:73498 compcert.lib.Integers Make Z_one_bits def
R73515:73517 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73503:73508 Coq.ZArith.BinInt Z div2 def
R73611:73615 Coq.ZArith.BinInt Z odd def
R73611:73615 Coq.ZArith.BinInt Z odd def
R73703:73710 compcert.lib.Integers Make wordsize def
R73703:73710 compcert.lib.Integers Make wordsize def
R73728:73736 compcert.lib.Integers Make zwordsize def
R73728:73736 compcert.lib.Integers Make zwordsize def
prf 73758:73770 Make is_power2_rng
R73822:73825 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73839:73841 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R73826:73833 compcert.lib.Integers Make unsigned def
R73835:73838 compcert.lib.Integers <> logn var
R73826:73833 compcert.lib.Integers Make unsigned def
R73835:73838 compcert.lib.Integers <> logn var
R73842:73850 compcert.lib.Integers Make zwordsize def
R73803:73805 Coq.Init.Logic <> :type_scope:x_'='_x not
R73792:73800 compcert.lib.Integers Make is_power2 def
R73802:73802 compcert.lib.Integers <> n var
R73806:73809 Coq.Init.Datatypes <> Some constr
R73811:73814 compcert.lib.Integers <> logn var
R73884:73892 compcert.lib.Integers Make is_power2 def
R73909:73924 compcert.lib.Integers Make Z_one_bits_range thm
R73927:73934 compcert.lib.Integers Make unsigned def
R73909:73924 compcert.lib.Integers Make Z_one_bits_range thm
R73927:73934 compcert.lib.Integers Make unsigned def
R73953:73962 compcert.lib.Integers Make Z_one_bits def
R73974:73981 compcert.lib.Integers Make unsigned def
R73964:73971 compcert.lib.Integers Make wordsize def
R73953:73962 compcert.lib.Integers Make Z_one_bits def
R73974:73981 compcert.lib.Integers Make unsigned def
R73964:73971 compcert.lib.Integers Make wordsize def
R74092:74095 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R74097:74099 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R74100:74108 compcert.lib.Integers Make zwordsize def
R74092:74095 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R74097:74099 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R74100:74108 compcert.lib.Integers Make zwordsize def
R74151:74163 compcert.lib.Integers Make unsigned_repr thm
R74151:74163 compcert.lib.Integers Make unsigned_repr thm
R74183:74203 compcert.lib.Integers Make wordsize_max_unsigned thm
R74183:74203 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 74251:74265 Make is_power2_range
R74332:74334 Coq.Init.Logic <> :type_scope:x_'='_x not
R74314:74316 compcert.lib.Integers Make ltu def
R74323:74331 compcert.lib.Integers Make iwordsize def
R74318:74321 compcert.lib.Integers <> logn var
R74335:74338 Coq.Init.Datatypes <> true constr
R74298:74300 Coq.Init.Logic <> :type_scope:x_'='_x not
R74287:74295 compcert.lib.Integers Make is_power2 def
R74297:74297 compcert.lib.Integers <> n var
R74301:74304 Coq.Init.Datatypes <> Some constr
R74306:74309 compcert.lib.Integers <> logn var
R74365:74367 compcert.lib.Integers Make ltu def
R74378:74399 compcert.lib.Integers Make unsigned_repr_wordsize thm
R74378:74399 compcert.lib.Integers Make unsigned_repr_wordsize thm
R74410:74417 compcert.lib.Coqlib <> zlt_true thm
R74410:74417 compcert.lib.Coqlib <> zlt_true thm
R74432:74444 compcert.lib.Integers Make is_power2_rng thm
R74432:74444 compcert.lib.Integers Make is_power2_rng thm
R0:-1 compcert.lib.Integers <> y var
prf 74474:74490 Make is_power2_correct
R74551:74553 Coq.Init.Logic <> :type_scope:x_'='_x not
R74541:74548 compcert.lib.Integers Make unsigned def
R74550:74550 compcert.lib.Integers <> n var
R74554:74558 Coq.ZArith.Zpower <> two_p def
R74561:74568 compcert.lib.Integers Make unsigned def
R74570:74573 compcert.lib.Integers <> logn var
R74523:74525 Coq.Init.Logic <> :type_scope:x_'='_x not
R74512:74520 compcert.lib.Integers Make is_power2 def
R74522:74522 compcert.lib.Integers <> n var
R74526:74529 Coq.Init.Datatypes <> Some constr
R74531:74534 compcert.lib.Integers <> logn var
R74608:74616 compcert.lib.Integers Make is_power2 def
R74633:74653 compcert.lib.Integers Make Z_one_bits_powerserie thm
R74669:74682 compcert.lib.Integers Make unsigned_range thm
R74656:74663 compcert.lib.Integers Make unsigned def
R74633:74653 compcert.lib.Integers Make Z_one_bits_powerserie thm
R74669:74682 compcert.lib.Integers Make unsigned_range thm
R74656:74663 compcert.lib.Integers Make unsigned def
R74703:74718 compcert.lib.Integers Make Z_one_bits_range thm
R74721:74728 compcert.lib.Integers Make unsigned def
R74703:74718 compcert.lib.Integers Make Z_one_bits_range thm
R74721:74728 compcert.lib.Integers Make unsigned def
R74747:74756 compcert.lib.Integers Make Z_one_bits def
R74768:74775 compcert.lib.Integers Make unsigned def
R74758:74765 compcert.lib.Integers Make wordsize def
R74747:74756 compcert.lib.Integers Make Z_one_bits def
R74768:74775 compcert.lib.Integers Make unsigned def
R74758:74765 compcert.lib.Integers Make wordsize def
R74899:74911 compcert.lib.Integers Make unsigned_repr thm
R74899:74911 compcert.lib.Integers Make unsigned_repr thm
R74923:74927 Coq.ZArith.Zpower <> two_p def
R74945:74947 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R74938:74942 Coq.ZArith.Zpower <> two_p def
R74945:74947 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R74938:74942 Coq.ZArith.Zpower <> two_p def
R74923:74927 Coq.ZArith.Zpower <> two_p def
R75000:75020 compcert.lib.Integers Make wordsize_max_unsigned thm
R75000:75020 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 75088:75098 Make two_p_range
R75140:75143 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R75151:75154 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R75144:75148 Coq.ZArith.Zpower <> two_p def
R75150:75150 compcert.lib.Integers <> n var
R75144:75148 Coq.ZArith.Zpower <> two_p def
R75150:75150 compcert.lib.Integers <> n var
R75155:75166 compcert.lib.Integers Make max_unsigned def
R75116:75119 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R75121:75123 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R75120:75120 compcert.lib.Integers <> n var
R75120:75120 compcert.lib.Integers <> n var
R75124:75132 compcert.lib.Integers Make zwordsize def
R75210:75212 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R75203:75207 Coq.ZArith.Zpower <> two_p def
R75210:75212 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R75203:75207 Coq.ZArith.Zpower <> two_p def
R75223:75235 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R75223:75235 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R75266:75286 compcert.lib.Coqlib <> two_p_monotone_strict thm
R75266:75286 compcert.lib.Coqlib <> two_p_monotone_strict thm
R75306:75314 compcert.lib.Integers Make zwordsize def
R75328:75346 compcert.lib.Coqlib <> two_power_nat_two_p thm
R75328:75346 compcert.lib.Coqlib <> two_power_nat_two_p thm
R75359:75370 compcert.lib.Integers Make max_unsigned def
R75373:75379 compcert.lib.Integers Make modulus def
prf 75403:75417 Make Z_one_bits_zero
R75450:75452 Coq.Init.Logic <> :type_scope:x_'='_x not
R75434:75443 compcert.lib.Integers Make Z_one_bits def
R75449:75449 compcert.lib.Integers <> i var
R75445:75445 compcert.lib.Integers <> n var
R75453:75455 Coq.Init.Datatypes <> nil constr
prf 75514:75529 Make Z_one_bits_two_p
R75599:75601 Coq.Init.Logic <> :type_scope:x_'='_x not
R75575:75584 compcert.lib.Integers Make Z_one_bits def
R75598:75598 compcert.lib.Integers <> i var
R75589:75593 Coq.ZArith.Zpower <> two_p def
R75595:75595 compcert.lib.Integers <> x var
R75586:75586 compcert.lib.Integers <> n var
R75602:75602 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R75608:75612 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R75604:75606 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R75603:75603 compcert.lib.Integers <> i var
R75607:75607 compcert.lib.Integers <> x var
R75613:75615 Coq.Init.Datatypes <> nil constr
R75551:75554 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R75556:75558 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R75555:75555 compcert.lib.Integers <> x var
R75555:75555 compcert.lib.Integers <> x var
R75559:75566 Coq.ZArith.BinInt <> Z_of_nat syndef
R75568:75568 compcert.lib.Integers <> n var
R75697:75701 Coq.ZArith.Znat <> inj_S syndef
R75697:75701 Coq.ZArith.Znat <> inj_S syndef
R75725:75728 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R75721:75723 Coq.Init.Logic <> :type_scope:x_'='_x not
R75730:75732 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R75725:75728 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R75721:75723 Coq.Init.Logic <> :type_scope:x_'='_x not
R75730:75732 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R75797:75811 compcert.lib.Integers Make Z_one_bits_zero thm
R75797:75811 compcert.lib.Integers Make Z_one_bits_zero thm
R75847:75850 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R75839:75841 Coq.Init.Logic <> :type_scope:x_'='_x not
R75824:75828 Coq.ZArith.BinInt Z odd def
R75831:75835 Coq.ZArith.Zpower <> two_p def
R75842:75846 Coq.Init.Datatypes <> false constr
R75867:75869 Coq.Init.Logic <> :type_scope:x_'='_x not
R75851:75856 Coq.ZArith.BinInt Z div2 def
R75859:75863 Coq.ZArith.Zpower <> two_p def
R75870:75874 Coq.ZArith.Zpower <> two_p def
R75878:75878 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R75847:75850 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R75839:75841 Coq.Init.Logic <> :type_scope:x_'='_x not
R75824:75828 Coq.ZArith.BinInt Z odd def
R75831:75835 Coq.ZArith.Zpower <> two_p def
R75842:75846 Coq.Init.Datatypes <> false constr
R75867:75869 Coq.Init.Logic <> :type_scope:x_'='_x not
R75851:75856 Coq.ZArith.BinInt Z div2 def
R75859:75863 Coq.ZArith.Zpower <> two_p def
R75870:75874 Coq.ZArith.Zpower <> two_p def
R75878:75878 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R75894:75905 compcert.lib.Integers Make Zshiftin_inj thm
R75894:75905 compcert.lib.Integers Make Zshiftin_inj thm
R75919:75925 compcert.lib.Integers Make Zdecomp thm
R75919:75925 compcert.lib.Integers Make Zdecomp thm
R75937:75949 compcert.lib.Integers Make Zshiftin_spec thm
R75937:75949 compcert.lib.Integers Make Zshiftin_spec thm
R75937:75949 compcert.lib.Integers Make Zshiftin_spec thm
R75967:75973 Coq.ZArith.Zpower <> two_p_S thm
R75967:75973 Coq.ZArith.Zpower <> two_p_S thm
R75984:75992 Coq.ZArith.BinInt <> Zplus_0_r syndef
R75984:75992 Coq.ZArith.BinInt <> Zplus_0_r syndef
prf 76114:76128 Make is_power2_two_p
R76193:76195 Coq.Init.Logic <> :type_scope:x_'='_x not
R76167:76175 compcert.lib.Integers Make is_power2 def
R76178:76181 compcert.lib.Integers Make repr def
R76184:76188 Coq.ZArith.Zpower <> two_p def
R76190:76190 compcert.lib.Integers <> n var
R76196:76199 Coq.Init.Datatypes <> Some constr
R76202:76205 compcert.lib.Integers Make repr def
R76207:76207 compcert.lib.Integers <> n var
R76144:76147 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R76149:76151 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R76148:76148 compcert.lib.Integers <> n var
R76148:76148 compcert.lib.Integers <> n var
R76152:76160 compcert.lib.Integers Make zwordsize def
R76235:76243 compcert.lib.Integers Make is_power2 def
R76254:76266 compcert.lib.Integers Make unsigned_repr thm
R76254:76266 compcert.lib.Integers Make unsigned_repr thm
R76280:76295 compcert.lib.Integers Make Z_one_bits_two_p thm
R76280:76295 compcert.lib.Integers Make Z_one_bits_two_p thm
R76318:76328 compcert.lib.Integers Make two_p_range thm
R76318:76328 compcert.lib.Integers Make two_p_range thm
prf 76499:76515 Make Zshiftl_mul_two_p
R76554:76556 Coq.Init.Logic <> :type_scope:x_'='_x not
R76542:76549 Coq.ZArith.BinInt Z shiftl def
R76553:76553 compcert.lib.Integers <> n var
R76551:76551 compcert.lib.Integers <> x var
R76558:76560 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R76557:76557 compcert.lib.Integers <> x var
R76561:76565 Coq.ZArith.Zpower <> two_p def
R76567:76567 compcert.lib.Integers <> n var
R76533:76536 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R76537:76537 compcert.lib.Integers <> n var
R76638:76650 Coq.PArith.BinPos Pos peano_ind def
R76638:76650 Coq.PArith.BinPos Pos peano_ind def
R76668:76680 Coq.ZArith.Zpower <> two_power_pos def
R76668:76680 Coq.ZArith.Zpower <> two_power_pos def
R76728:76740 Coq.PArith.BinPos Pos iter_succ thm
R76728:76740 Coq.PArith.BinPos Pos iter_succ thm
R76769:76784 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R76769:76784 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R76795:76814 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R76795:76814 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R76831:76843 Coq.ZArith.Zpower <> two_power_pos def
R76831:76843 Coq.ZArith.Zpower <> two_power_pos def
prf 76904:76916 Make shl_mul_two_p
R76942:76944 Coq.Init.Logic <> :type_scope:x_'='_x not
R76935:76937 compcert.lib.Integers Make shl def
R76941:76941 compcert.lib.Integers <> y var
R76939:76939 compcert.lib.Integers <> x var
R76945:76947 compcert.lib.Integers Make mul def
R76952:76955 compcert.lib.Integers Make repr def
R76958:76962 Coq.ZArith.Zpower <> two_p def
R76965:76972 compcert.lib.Integers Make unsigned def
R76974:76974 compcert.lib.Integers <> y var
R76949:76949 compcert.lib.Integers <> x var
R77004:77006 compcert.lib.Integers Make shl def
R77009:77011 compcert.lib.Integers Make mul def
R77020:77031 compcert.lib.Integers Make eqm_samerepr thm
R77020:77031 compcert.lib.Integers Make eqm_samerepr thm
R77044:77060 compcert.lib.Integers Make Zshiftl_mul_two_p thm
R77044:77060 compcert.lib.Integers Make Zshiftl_mul_two_p thm
R77094:77107 compcert.lib.Integers Make unsigned_range thm
R77094:77107 compcert.lib.Integers Make unsigned_range thm
prf 77134:77140 Make shl_mul
R77166:77168 Coq.Init.Logic <> :type_scope:x_'='_x not
R77159:77161 compcert.lib.Integers Make shl def
R77165:77165 compcert.lib.Integers <> y var
R77163:77163 compcert.lib.Integers <> x var
R77169:77171 compcert.lib.Integers Make mul def
R77176:77178 compcert.lib.Integers Make shl def
R77184:77184 compcert.lib.Integers <> y var
R77180:77182 compcert.lib.Integers Make one def
R77173:77173 compcert.lib.Integers <> x var
R77225:77227 Coq.Init.Logic <> :type_scope:x_'='_x not
R77216:77218 compcert.lib.Integers Make shl def
R77220:77222 compcert.lib.Integers Make one def
R77228:77231 compcert.lib.Integers Make repr def
R77234:77238 Coq.ZArith.Zpower <> two_p def
R77241:77248 compcert.lib.Integers Make unsigned def
R77225:77227 Coq.Init.Logic <> :type_scope:x_'='_x not
R77216:77218 compcert.lib.Integers Make shl def
R77220:77222 compcert.lib.Integers Make one def
R77228:77231 compcert.lib.Integers Make repr def
R77234:77238 Coq.ZArith.Zpower <> two_p def
R77241:77248 compcert.lib.Integers Make unsigned def
R77272:77284 compcert.lib.Integers Make shl_mul_two_p thm
R77272:77284 compcert.lib.Integers Make shl_mul_two_p thm
R77295:77304 compcert.lib.Integers Make mul_commut thm
R77295:77304 compcert.lib.Integers Make mul_commut thm
R77315:77321 compcert.lib.Integers Make mul_one thm
R77315:77321 compcert.lib.Integers Make mul_one thm
R77353:77365 compcert.lib.Integers Make shl_mul_two_p thm
R77353:77365 compcert.lib.Integers Make shl_mul_two_p thm
prf 77382:77389 Make mul_pow2
R77449:77451 Coq.Init.Logic <> :type_scope:x_'='_x not
R77442:77444 compcert.lib.Integers Make mul def
R77448:77448 compcert.lib.Integers <> n var
R77446:77446 compcert.lib.Integers <> x var
R77452:77454 compcert.lib.Integers Make shl def
R77458:77461 compcert.lib.Integers <> logn var
R77456:77456 compcert.lib.Integers <> x var
R77424:77426 Coq.Init.Logic <> :type_scope:x_'='_x not
R77413:77421 compcert.lib.Integers Make is_power2 def
R77423:77423 compcert.lib.Integers <> n var
R77427:77430 Coq.Init.Datatypes <> Some constr
R77432:77435 compcert.lib.Integers <> logn var
R77493:77509 compcert.lib.Integers Make is_power2_correct thm
R77493:77509 compcert.lib.Integers Make is_power2_correct thm
R77539:77551 compcert.lib.Integers Make shl_mul_two_p thm
R77539:77551 compcert.lib.Integers Make shl_mul_two_p thm
R77577:77589 compcert.lib.Integers Make repr_unsigned thm
R77577:77589 compcert.lib.Integers Make repr_unsigned thm
prf 77614:77630 Make shifted_or_is_add
R77722:77724 Coq.Init.Logic <> :type_scope:x_'='_x not
R77701:77702 compcert.lib.Integers Make or def
R77721:77721 compcert.lib.Integers <> y var
R77705:77707 compcert.lib.Integers Make shl def
R77712:77715 compcert.lib.Integers Make repr def
R77717:77717 compcert.lib.Integers <> n var
R77709:77709 compcert.lib.Integers <> x var
R77725:77728 compcert.lib.Integers Make repr def
R77750:77752 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R77740:77742 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R77730:77737 compcert.lib.Integers Make unsigned def
R77739:77739 compcert.lib.Integers <> x var
R77743:77747 Coq.ZArith.Zpower <> two_p def
R77749:77749 compcert.lib.Integers <> n var
R77753:77760 compcert.lib.Integers Make unsigned def
R77762:77762 compcert.lib.Integers <> y var
R77685:77687 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R77675:77682 compcert.lib.Integers Make unsigned def
R77684:77684 compcert.lib.Integers <> y var
R77688:77692 Coq.ZArith.Zpower <> two_p def
R77694:77694 compcert.lib.Integers <> n var
R77652:77655 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77657:77659 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R77656:77656 compcert.lib.Integers <> n var
R77656:77656 compcert.lib.Integers <> n var
R77660:77668 compcert.lib.Integers Make zwordsize def
R77794:77802 compcert.lib.Integers Make add_is_or thm
R77794:77802 compcert.lib.Integers Make add_is_or thm
R77817:77819 compcert.lib.Integers Make add def
R77828:77839 compcert.lib.Integers Make eqm_samerepr thm
R77828:77839 compcert.lib.Integers Make eqm_samerepr thm
R77848:77854 compcert.lib.Integers Make eqm_add thm
R77848:77854 compcert.lib.Integers Make eqm_add thm
R77886:77898 compcert.lib.Integers Make shl_mul_two_p thm
R77886:77898 compcert.lib.Integers Make shl_mul_two_p thm
R77908:77910 compcert.lib.Integers Make mul def
R77919:77937 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R77919:77937 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R77950:77957 compcert.lib.Integers Make eqm_mult thm
R77950:77957 compcert.lib.Integers Make eqm_mult thm
R77982:78000 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R77982:78000 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R78014:78022 compcert.lib.Integers Make eqm_refl2 thm
R78014:78022 compcert.lib.Integers Make eqm_refl2 thm
R78033:78045 compcert.lib.Integers Make unsigned_repr thm
R78033:78045 compcert.lib.Integers Make unsigned_repr thm
R78070:78090 compcert.lib.Integers Make wordsize_max_unsigned thm
R78070:78090 compcert.lib.Integers Make wordsize_max_unsigned thm
R78127:78139 compcert.lib.Integers Make unsigned_repr thm
R78127:78139 compcert.lib.Integers Make unsigned_repr thm
R78157:78159 compcert.lib.Coqlib <> zlt def
R78157:78159 compcert.lib.Coqlib <> zlt def
R78194:78200 compcert.lib.Integers Make testbit def
R78212:78216 Coq.Init.Datatypes <> false constr
R78212:78216 Coq.Init.Datatypes <> false constr
R78194:78200 compcert.lib.Integers Make testbit def
R78225:78236 Coq.Bool.Bool <> andb_false_r thm
R78225:78236 Coq.Bool.Bool <> andb_false_r thm
R78263:78269 compcert.lib.Integers Make testbit def
R78311:78313 Coq.Init.Logic <> :type_scope:x_'='_x not
R78290:78297 Coq.ZArith.BinInt Z of_nat def
R78300:78307 Coq.ZArith.BinInt Z to_nat def
R78327:78334 Coq.ZArith.Znat Z2Nat id thm
R78311:78313 Coq.Init.Logic <> :type_scope:x_'='_x not
R78290:78297 Coq.ZArith.BinInt Z of_nat def
R78300:78307 Coq.ZArith.BinInt Z to_nat def
R78327:78334 Coq.ZArith.Znat Z2Nat id thm
R78378:78385 Coq.ZArith.BinInt Z to_nat def
R78357:78370 compcert.lib.Integers Make Ztestbit_above thm
R78378:78385 Coq.ZArith.BinInt Z to_nat def
R78357:78370 compcert.lib.Integers Make Ztestbit_above thm
R78429:78447 compcert.lib.Coqlib <> two_power_nat_two_p thm
R78429:78447 compcert.lib.Coqlib <> two_power_nat_two_p thm
R78475:78488 compcert.lib.Integers Make unsigned_range thm
R78475:78488 compcert.lib.Integers Make unsigned_range thm
R78542:78562 compcert.lib.Integers Make wordsize_max_unsigned thm
R78542:78562 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 78653:78669 Make Zshiftr_div_two_p
R78708:78710 Coq.Init.Logic <> :type_scope:x_'='_x not
R78696:78703 Coq.ZArith.BinInt Z shiftr def
R78707:78707 compcert.lib.Integers <> n var
R78705:78705 compcert.lib.Integers <> x var
R78712:78714 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R78711:78711 compcert.lib.Integers <> x var
R78715:78719 Coq.ZArith.Zpower <> two_p def
R78721:78721 compcert.lib.Integers <> n var
R78687:78690 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R78691:78691 compcert.lib.Integers <> n var
R78760:78767 Coq.ZArith.BinInt Z shiftr def
R78789:78796 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R78789:78796 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R78826:78838 Coq.PArith.BinPos Pos peano_ind def
R78826:78838 Coq.PArith.BinPos Pos peano_ind def
R78856:78868 Coq.ZArith.Zpower <> two_power_pos def
R78856:78868 Coq.ZArith.Zpower <> two_power_pos def
R78894:78902 Coq.ZArith.Zdiv <> Zdiv2_div thm
R78894:78902 Coq.ZArith.Zdiv <> Zdiv2_div thm
R78928:78940 Coq.PArith.BinPos Pos iter_succ thm
R78928:78940 Coq.PArith.BinPos Pos iter_succ thm
R78969:78984 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R78969:78984 Coq.PArith.BinPos <> Pplus_one_succ_l thm
R78995:79014 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R78995:79014 Coq.ZArith.Zpower <> two_power_pos_is_exp thm
R79031:79043 Coq.ZArith.Zpower <> two_power_pos def
R79031:79043 Coq.ZArith.Zpower <> two_power_pos def
R79070:79078 Coq.ZArith.Zdiv <> Zdiv2_div thm
R79070:79078 Coq.ZArith.Zdiv <> Zdiv2_div thm
R79089:79098 Coq.ZArith.BinInt <> Zmult_comm syndef
R79089:79098 Coq.ZArith.BinInt <> Zmult_comm syndef
R79107:79115 compcert.lib.Coqlib <> Zdiv_Zdiv thm
R79107:79115 compcert.lib.Coqlib <> Zdiv_Zdiv thm
R79132:79148 Coq.ZArith.Zpower <> two_power_pos_nat thm
R79132:79148 Coq.ZArith.Zpower <> two_power_pos_nat thm
R79157:79173 compcert.lib.Coqlib <> two_power_nat_pos thm
R79157:79173 compcert.lib.Coqlib <> two_power_nat_pos thm
prf 79225:79238 Make shru_div_two_p
R79265:79267 Coq.Init.Logic <> :type_scope:x_'='_x not
R79257:79260 compcert.lib.Integers Make shru def
R79264:79264 compcert.lib.Integers <> y var
R79262:79262 compcert.lib.Integers <> x var
R79268:79271 compcert.lib.Integers Make repr def
R79284:79286 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R79274:79281 compcert.lib.Integers Make unsigned def
R79283:79283 compcert.lib.Integers <> x var
R79287:79291 Coq.ZArith.Zpower <> two_p def
R79294:79301 compcert.lib.Integers Make unsigned def
R79303:79303 compcert.lib.Integers <> y var
R79332:79335 compcert.lib.Integers Make shru def
R79349:79365 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79349:79365 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79388:79401 compcert.lib.Integers Make unsigned_range thm
R79388:79401 compcert.lib.Integers Make unsigned_range thm
prf 79428:79436 Make divu_pow2
R79497:79499 Coq.Init.Logic <> :type_scope:x_'='_x not
R79489:79492 compcert.lib.Integers Make divu def
R79496:79496 compcert.lib.Integers <> n var
R79494:79494 compcert.lib.Integers <> x var
R79500:79503 compcert.lib.Integers Make shru def
R79507:79510 compcert.lib.Integers <> logn var
R79505:79505 compcert.lib.Integers <> x var
R79471:79473 Coq.Init.Logic <> :type_scope:x_'='_x not
R79460:79468 compcert.lib.Integers Make is_power2 def
R79470:79470 compcert.lib.Integers <> n var
R79474:79477 Coq.Init.Datatypes <> Some constr
R79479:79482 compcert.lib.Integers <> logn var
R79542:79558 compcert.lib.Integers Make is_power2_correct thm
R79542:79558 compcert.lib.Integers Make is_power2_correct thm
R79597:79600 compcert.lib.Integers Make divu def
R79621:79634 compcert.lib.Integers Make shru_div_two_p thm
R79621:79634 compcert.lib.Integers Make shru_div_two_p thm
prf 79714:79726 Make shr_div_two_p
R79752:79754 Coq.Init.Logic <> :type_scope:x_'='_x not
R79745:79747 compcert.lib.Integers Make shr def
R79751:79751 compcert.lib.Integers <> y var
R79749:79749 compcert.lib.Integers <> x var
R79755:79758 compcert.lib.Integers Make repr def
R79769:79771 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R79761:79766 compcert.lib.Integers Make signed def
R79768:79768 compcert.lib.Integers <> x var
R79772:79776 Coq.ZArith.Zpower <> two_p def
R79779:79786 compcert.lib.Integers Make unsigned def
R79788:79788 compcert.lib.Integers <> y var
R79817:79819 compcert.lib.Integers Make shr def
R79832:79848 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79832:79848 compcert.lib.Integers Make Zshiftr_div_two_p thm
R79871:79884 compcert.lib.Integers Make unsigned_range thm
R79871:79884 compcert.lib.Integers Make unsigned_range thm
prf 79911:79919 Make divs_pow2
R79980:79982 Coq.Init.Logic <> :type_scope:x_'='_x not
R79972:79975 compcert.lib.Integers Make divs def
R79979:79979 compcert.lib.Integers <> n var
R79977:79977 compcert.lib.Integers <> x var
R79983:79986 compcert.lib.Integers Make shrx def
R79990:79993 compcert.lib.Integers <> logn var
R79988:79988 compcert.lib.Integers <> x var
R79954:79956 Coq.Init.Logic <> :type_scope:x_'='_x not
R79943:79951 compcert.lib.Integers Make is_power2 def
R79953:79953 compcert.lib.Integers <> n var
R79957:79960 Coq.Init.Datatypes <> Some constr
R79962:79965 compcert.lib.Integers <> logn var
R80025:80041 compcert.lib.Integers Make is_power2_correct thm
R80025:80041 compcert.lib.Integers Make is_power2_correct thm
R80067:80070 compcert.lib.Integers Make shrx def
R80081:80093 compcert.lib.Integers Make shl_mul_two_p thm
R80081:80093 compcert.lib.Integers Make shl_mul_two_p thm
R80106:80115 compcert.lib.Integers Make mul_commut thm
R80106:80115 compcert.lib.Integers Make mul_commut thm
R80126:80132 compcert.lib.Integers Make mul_one thm
R80126:80132 compcert.lib.Integers Make mul_one thm
R80160:80172 compcert.lib.Integers Make repr_unsigned thm
R80160:80172 compcert.lib.Integers Make repr_unsigned thm
prf 80254:80271 Make Ztestbit_mod_two_p
R80343:80345 Coq.Init.Logic <> :type_scope:x_'='_x not
R80314:80322 Coq.ZArith.BinInt Z testbit def
R80342:80342 compcert.lib.Integers <> i var
R80326:80331 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80339:80339 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80325:80325 compcert.lib.Integers <> x var
R80332:80336 Coq.ZArith.Zpower <> two_p def
R80338:80338 compcert.lib.Integers <> n var
R80349:80351 compcert.lib.Coqlib <> zlt def
R80355:80355 compcert.lib.Integers <> n var
R80353:80353 compcert.lib.Integers <> i var
R80381:80385 Coq.Init.Datatypes <> false constr
R80362:80370 Coq.ZArith.BinInt Z testbit def
R80374:80374 compcert.lib.Integers <> i var
R80372:80372 compcert.lib.Integers <> x var
R80303:80306 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R80307:80307 compcert.lib.Integers <> i var
R80293:80296 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R80297:80297 compcert.lib.Integers <> n var
R80448:80458 Coq.ZArith.Wf_Z <> natlike_ind thm
R80448:80458 Coq.ZArith.Wf_Z <> natlike_ind thm
R80487:80491 Coq.ZArith.Zpower <> two_p def
R80487:80491 Coq.ZArith.Zpower <> two_p def
R80512:80519 Coq.ZArith.Zdiv <> Zmod_1_r thm
R80512:80519 Coq.ZArith.Zdiv <> Zmod_1_r thm
R80530:80542 Coq.ZArith.BinInt Z testbit_0_l thm
R80530:80542 Coq.ZArith.BinInt Z testbit_0_l thm
R80558:80566 compcert.lib.Coqlib <> zlt_false thm
R80558:80566 compcert.lib.Coqlib <> zlt_false thm
R80602:80608 Coq.ZArith.Zpower <> two_p_S thm
R80602:80608 Coq.ZArith.Zpower <> two_p_S thm
R80633:80638 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80650:80650 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80640:80642 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80643:80647 Coq.ZArith.Zpower <> two_p def
R80667:80674 compcert.lib.Integers Make Zshiftin def
R80697:80701 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80688:80693 Coq.ZArith.BinInt Z div2 def
R80702:80706 Coq.ZArith.Zpower <> two_p def
R80677:80681 Coq.ZArith.BinInt Z odd def
R80667:80674 compcert.lib.Integers Make Zshiftin def
R80697:80701 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80688:80693 Coq.ZArith.BinInt Z div2 def
R80702:80706 Coq.ZArith.Zpower <> two_p def
R80677:80681 Coq.ZArith.BinInt Z odd def
R80633:80638 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80650:80650 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R80640:80642 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R80643:80647 Coq.ZArith.Zpower <> two_p def
R80725:80740 compcert.lib.Integers Make Ztestbit_shiftin thm
R80725:80740 compcert.lib.Integers Make Ztestbit_shiftin thm
R80758:80768 compcert.lib.Integers Make Ztestbit_eq thm
R80758:80768 compcert.lib.Integers Make Ztestbit_eq thm
R80793:80795 compcert.lib.Coqlib <> zeq def
R80793:80795 compcert.lib.Coqlib <> zeq def
R80818:80825 compcert.lib.Coqlib <> zlt_true thm
R80818:80825 compcert.lib.Coqlib <> zlt_true thm
R80869:80871 compcert.lib.Coqlib <> zlt def
R80874:80879 Coq.ZArith.BinInt Z pred def
R80869:80871 compcert.lib.Coqlib <> zlt def
R80874:80879 Coq.ZArith.BinInt Z pred def
R80904:80911 compcert.lib.Coqlib <> zlt_true thm
R80904:80911 compcert.lib.Coqlib <> zlt_true thm
R80943:80951 compcert.lib.Coqlib <> zlt_false thm
R80943:80951 compcert.lib.Coqlib <> zlt_false thm
R80997:81003 compcert.lib.Integers Make Zdecomp thm
R80997:81003 compcert.lib.Integers Make Zdecomp thm
R81026:81031 Coq.ZArith.BinInt Z div2 def
R81026:81031 Coq.ZArith.BinInt Z div2 def
R81080:81082 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R81083:81087 Coq.ZArith.Zpower <> two_p def
R81060:81070 compcert.lib.Coqlib <> Zmod_unique thm
R81080:81082 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R81083:81087 Coq.ZArith.Zpower <> two_p def
R81060:81070 compcert.lib.Coqlib <> Zmod_unique thm
R81108:81120 compcert.lib.Integers Make Zshiftin_spec thm
R81108:81120 compcert.lib.Integers Make Zshiftin_spec thm
R81108:81120 compcert.lib.Integers Make Zshiftin_spec thm
R81108:81120 compcert.lib.Integers Make Zshiftin_spec thm
R81131:81141 Coq.ZArith.BinInt <> Zplus_assoc syndef
R81131:81141 Coq.ZArith.BinInt <> Zplus_assoc syndef
R81174:81177 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R81219:81219 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R81202:81204 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R81185:81188 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R81201:81201 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R81178:81182 Coq.ZArith.Zpower <> two_p def
R81191:81193 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R81194:81198 Coq.ZArith.Zpower <> two_p def
R81207:81211 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81212:81216 Coq.ZArith.Zpower <> two_p def
R81174:81177 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R81219:81219 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R81202:81204 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R81185:81188 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R81201:81201 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R81178:81182 Coq.ZArith.Zpower <> two_p def
R81191:81193 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R81194:81198 Coq.ZArith.Zpower <> two_p def
R81207:81211 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81212:81216 Coq.ZArith.Zpower <> two_p def
R81244:81255 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R81244:81255 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R81264:81276 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R81264:81276 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R81311:81323 compcert.lib.Integers Make Zshiftin_spec thm
R81311:81323 compcert.lib.Integers Make Zshiftin_spec thm
R81335:81342 Coq.ZArith.Zdiv <> Z_mod_lt thm
R81348:81352 Coq.ZArith.Zpower <> two_p def
R81335:81342 Coq.ZArith.Zdiv <> Z_mod_lt thm
R81348:81352 Coq.ZArith.Zpower <> two_p def
R81365:81377 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R81365:81377 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R81402:81406 Coq.ZArith.BinInt Z odd def
R81402:81406 Coq.ZArith.BinInt Z odd def
prf 81436:81452 Make Ztestbit_two_p_m1
R81516:81518 Coq.Init.Logic <> :type_scope:x_'='_x not
R81491:81499 Coq.ZArith.BinInt Z testbit def
R81515:81515 compcert.lib.Integers <> i var
R81509:81511 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R81502:81506 Coq.ZArith.Zpower <> two_p def
R81508:81508 compcert.lib.Integers <> n var
R81522:81524 compcert.lib.Coqlib <> zlt def
R81528:81528 compcert.lib.Integers <> n var
R81526:81526 compcert.lib.Integers <> i var
R81545:81549 Coq.Init.Datatypes <> false constr
R81535:81538 Coq.Init.Datatypes <> true constr
R81480:81483 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R81484:81484 compcert.lib.Integers <> i var
R81470:81473 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R81474:81474 compcert.lib.Integers <> n var
R81585:81587 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R81578:81582 Coq.ZArith.Zpower <> two_p def
R81597:81597 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81600:81606 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81614:81614 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81607:81611 Coq.ZArith.Zpower <> two_p def
R81597:81597 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81600:81606 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81614:81614 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R81607:81611 Coq.ZArith.Zpower <> two_p def
R81585:81587 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R81578:81582 Coq.ZArith.Zpower <> two_p def
R81629:81646 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81629:81646 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R81665:81667 compcert.lib.Coqlib <> zlt def
R81665:81667 compcert.lib.Coqlib <> zlt def
R81687:81697 compcert.lib.Integers Make Ztestbit_m1 thm
R81687:81697 compcert.lib.Integers Make Ztestbit_m1 thm
R81714:81724 compcert.lib.Coqlib <> Zmod_unique thm
R81714:81724 compcert.lib.Coqlib <> Zmod_unique thm
R81755:81767 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R81755:81767 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 81801:81808 Make modu_and
R81869:81871 Coq.Init.Logic <> :type_scope:x_'='_x not
R81861:81864 compcert.lib.Integers Make modu def
R81868:81868 compcert.lib.Integers <> n var
R81866:81866 compcert.lib.Integers <> x var
R81872:81874 compcert.lib.Integers Make and def
R81879:81881 compcert.lib.Integers Make sub def
R81885:81887 compcert.lib.Integers Make one def
R81883:81883 compcert.lib.Integers <> n var
R81876:81876 compcert.lib.Integers <> x var
R81843:81845 Coq.Init.Logic <> :type_scope:x_'='_x not
R81832:81840 compcert.lib.Integers Make is_power2 def
R81842:81842 compcert.lib.Integers <> n var
R81846:81849 Coq.Init.Datatypes <> Some constr
R81851:81854 compcert.lib.Integers <> logn var
R81920:81936 compcert.lib.Integers Make is_power2_correct thm
R81920:81936 compcert.lib.Integers Make is_power2_correct thm
R81967:81979 compcert.lib.Integers Make is_power2_rng thm
R81967:81979 compcert.lib.Integers Make is_power2_rng thm
R82004:82015 compcert.lib.Integers Make same_bits_eq thm
R82004:82015 compcert.lib.Integers Make same_bits_eq thm
R82036:82043 compcert.lib.Integers Make bits_and thm
R82036:82043 compcert.lib.Integers Make bits_and thm
R82062:82064 compcert.lib.Integers Make sub def
R82075:82086 compcert.lib.Integers Make testbit_repr thm
R82075:82086 compcert.lib.Integers Make testbit_repr thm
R82117:82128 compcert.lib.Integers Make unsigned_one thm
R82117:82128 compcert.lib.Integers Make unsigned_one thm
R82141:82144 compcert.lib.Integers Make modu def
R82155:82166 compcert.lib.Integers Make testbit_repr thm
R82155:82166 compcert.lib.Integers Make testbit_repr thm
R82197:82214 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R82197:82214 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R82225:82241 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R82225:82241 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R82257:82259 compcert.lib.Coqlib <> zlt def
R82264:82271 compcert.lib.Integers Make unsigned def
R82257:82259 compcert.lib.Coqlib <> zlt def
R82264:82271 compcert.lib.Integers Make unsigned def
R82292:82302 Coq.Bool.Bool <> andb_true_r thm
R82292:82302 Coq.Bool.Bool <> andb_true_r thm
R82321:82332 Coq.Bool.Bool <> andb_false_r thm
R82321:82332 Coq.Bool.Bool <> andb_false_r thm
R0:-1 compcert.lib.Integers <> y var
R0:-1 compcert.lib.Integers <> y var
R0:-1 compcert.lib.Integers <> y var
R0:-1 compcert.lib.Integers <> y var
prf 82449:82458 Make Zquot_Zdiv
R82498:82500 Coq.Init.Logic <> :type_scope:x_'='_x not
R82488:82493 Coq.ZArith.BinInt Z quot def
R82497:82497 compcert.lib.Integers <> y var
R82495:82495 compcert.lib.Integers <> x var
R82504:82506 compcert.lib.Coqlib <> zlt def
R82508:82508 compcert.lib.Integers <> x var
R82539:82541 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82538:82538 compcert.lib.Integers <> x var
R82542:82542 compcert.lib.Integers <> y var
R82517:82517 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82527:82530 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82523:82525 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82519:82521 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82518:82518 compcert.lib.Integers <> x var
R82522:82522 compcert.lib.Integers <> y var
R82531:82531 compcert.lib.Integers <> y var
R82478:82480 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R82477:82477 compcert.lib.Integers <> y var
R82572:82574 compcert.lib.Coqlib <> zlt def
R82572:82574 compcert.lib.Coqlib <> zlt def
R82643:82646 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82652:82652 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82626:82626 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82636:82641 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82632:82634 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82628:82630 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82648:82650 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82602:82618 Coq.ZArith.Zquot <> Zquot_unique_full thm
R82643:82646 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82652:82652 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82626:82626 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82636:82641 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82632:82634 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82628:82630 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82648:82650 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82602:82618 Coq.ZArith.Zquot <> Zquot_unique_full thm
R82706:82713 Coq.ZArith.Zdiv <> Z_mod_lt thm
R82721:82723 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82717:82719 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82706:82713 Coq.ZArith.Zdiv <> Z_mod_lt thm
R82721:82723 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82717:82719 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82753:82760 Coq.ZArith.BinInt Z abs_eq thm
R82753:82760 Coq.ZArith.BinInt Z abs_eq thm
R82798:82798 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82840:82844 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82848:82848 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82820:82822 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82800:82803 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82819:82819 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82804:82804 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82814:82817 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82810:82812 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82806:82808 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82823:82823 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82833:82838 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82829:82831 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82825:82827 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82846:82846 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82798:82798 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82840:82844 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82848:82848 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82820:82822 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82800:82803 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82819:82819 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R82804:82804 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82814:82817 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R82810:82812 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82806:82808 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82823:82823 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82833:82838 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R82829:82831 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82825:82827 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R82846:82846 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82870:82881 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R82870:82881 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R82913:82926 Coq.ZArith.Zquot <> Zquot_Zdiv_pos thm
R82913:82926 Coq.ZArith.Zquot <> Zquot_Zdiv_pos thm
prf 82950:82957 Make shrx_shr
R83025:83027 Coq.Init.Logic <> :type_scope:x_'='_x not
R83017:83020 compcert.lib.Integers Make shrx def
R83024:83024 compcert.lib.Integers <> y var
R83022:83022 compcert.lib.Integers <> x var
R83028:83030 compcert.lib.Integers Make shr def
R83087:83087 compcert.lib.Integers <> y var
R83036:83037 compcert.lib.Integers Make lt def
R83041:83044 compcert.lib.Integers Make zero def
R83039:83039 compcert.lib.Integers <> x var
R83084:83084 compcert.lib.Integers <> x var
R83051:83053 compcert.lib.Integers Make add def
R83058:83060 compcert.lib.Integers Make sub def
R83074:83076 compcert.lib.Integers Make one def
R83063:83065 compcert.lib.Integers Make shl def
R83071:83071 compcert.lib.Integers <> y var
R83067:83069 compcert.lib.Integers Make one def
R83055:83055 compcert.lib.Integers <> x var
R83004:83006 Coq.Init.Logic <> :type_scope:x_'='_x not
R82976:82978 compcert.lib.Integers Make ltu def
R82983:82986 compcert.lib.Integers Make repr def
R82998:83000 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R82989:82997 compcert.lib.Integers Make zwordsize def
R82980:82980 compcert.lib.Integers <> y var
R83007:83010 Coq.Init.Datatypes <> true constr
R83120:83127 compcert.lib.Integers Make unsigned def
R83120:83127 compcert.lib.Integers Make unsigned def
R83144:83147 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R83150:83152 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R83162:83164 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R83153:83161 compcert.lib.Integers Make zwordsize def
R83144:83147 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R83150:83152 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R83162:83164 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R83153:83161 compcert.lib.Integers Make zwordsize def
R83181:83187 compcert.lib.Integers Make ltu_inv thm
R83205:83217 compcert.lib.Integers Make unsigned_repr thm
R83205:83217 compcert.lib.Integers Make unsigned_repr thm
R83242:83253 compcert.lib.Integers Make wordsize_pos thm
R83255:83275 compcert.lib.Integers Make wordsize_max_unsigned thm
R83242:83253 compcert.lib.Integers Make wordsize_pos thm
R83255:83275 compcert.lib.Integers Make wordsize_max_unsigned thm
R83295:83307 compcert.lib.Integers Make shr_div_two_p thm
R83295:83307 compcert.lib.Integers Make shr_div_two_p thm
R83317:83320 compcert.lib.Integers Make shrx def
R83330:83333 compcert.lib.Integers Make divs def
R83357:83359 Coq.Init.Logic <> :type_scope:x_'='_x not
R83348:83350 compcert.lib.Integers Make shl def
R83352:83354 compcert.lib.Integers Make one def
R83360:83363 compcert.lib.Integers Make repr def
R83366:83370 Coq.ZArith.Zpower <> two_p def
R83357:83359 Coq.Init.Logic <> :type_scope:x_'='_x not
R83348:83350 compcert.lib.Integers Make shl def
R83352:83354 compcert.lib.Integers Make one def
R83360:83363 compcert.lib.Integers Make repr def
R83366:83370 Coq.ZArith.Zpower <> two_p def
R83396:83398 compcert.lib.Integers Make mul def
R83405:83408 compcert.lib.Integers Make repr def
R83411:83415 Coq.ZArith.Zpower <> two_p def
R83400:83402 compcert.lib.Integers Make one def
R83396:83398 compcert.lib.Integers Make mul def
R83405:83408 compcert.lib.Integers Make repr def
R83411:83415 Coq.ZArith.Zpower <> two_p def
R83400:83402 compcert.lib.Integers Make one def
R83444:83451 compcert.lib.Integers Make mul_pow2 thm
R83444:83451 compcert.lib.Integers Make mul_pow2 thm
R83470:83473 compcert.lib.Integers Make repr def
R83470:83473 compcert.lib.Integers Make repr def
R83491:83505 compcert.lib.Integers Make is_power2_two_p thm
R83491:83505 compcert.lib.Integers Make is_power2_two_p thm
R83521:83533 compcert.lib.Integers Make repr_unsigned thm
R83521:83533 compcert.lib.Integers Make repr_unsigned thm
R83548:83557 compcert.lib.Integers Make mul_commut thm
R83548:83557 compcert.lib.Integers Make mul_commut thm
R83566:83572 compcert.lib.Integers Make mul_one thm
R83566:83572 compcert.lib.Integers Make mul_one thm
R83593:83595 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R83585:83589 Coq.ZArith.Zpower <> two_p def
R83593:83595 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R83585:83589 Coq.ZArith.Zpower <> two_p def
R83606:83618 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83606:83618 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83646:83648 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R83638:83642 Coq.ZArith.Zpower <> two_p def
R83649:83660 compcert.lib.Integers Make half_modulus def
R83646:83648 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R83638:83642 Coq.ZArith.Zpower <> two_p def
R83649:83660 compcert.lib.Integers Make half_modulus def
R83677:83694 compcert.lib.Integers Make half_modulus_power thm
R83677:83694 compcert.lib.Integers Make half_modulus_power thm
R83708:83728 compcert.lib.Coqlib <> two_p_monotone_strict thm
R83708:83728 compcert.lib.Coqlib <> two_p_monotone_strict thm
R83755:83757 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R83747:83751 Coq.ZArith.Zpower <> two_p def
R83758:83764 compcert.lib.Integers Make modulus def
R83755:83757 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R83747:83751 Coq.ZArith.Zpower <> two_p def
R83758:83764 compcert.lib.Integers Make modulus def
R83780:83792 compcert.lib.Integers Make modulus_power thm
R83780:83792 compcert.lib.Integers Make modulus_power thm
R83801:83821 compcert.lib.Coqlib <> two_p_monotone_strict thm
R83801:83821 compcert.lib.Coqlib <> two_p_monotone_strict thm
R83862:83864 Coq.Init.Logic <> :type_scope:x_'='_x not
R83842:83849 compcert.lib.Integers Make unsigned def
R83852:83854 compcert.lib.Integers Make shl def
R83856:83858 compcert.lib.Integers Make one def
R83865:83869 Coq.ZArith.Zpower <> two_p def
R83862:83864 Coq.Init.Logic <> :type_scope:x_'='_x not
R83842:83849 compcert.lib.Integers Make unsigned def
R83852:83854 compcert.lib.Integers Make shl def
R83856:83858 compcert.lib.Integers Make one def
R83865:83869 Coq.ZArith.Zpower <> two_p def
R83898:83910 compcert.lib.Integers Make unsigned_repr thm
R83898:83910 compcert.lib.Integers Make unsigned_repr thm
R83920:83931 compcert.lib.Integers Make max_unsigned def
R83969:83971 Coq.Init.Logic <> :type_scope:x_'='_x not
R83951:83956 compcert.lib.Integers Make signed def
R83959:83961 compcert.lib.Integers Make shl def
R83963:83965 compcert.lib.Integers Make one def
R83972:83976 Coq.ZArith.Zpower <> two_p def
R83969:83971 Coq.Init.Logic <> :type_scope:x_'='_x not
R83951:83956 compcert.lib.Integers Make signed def
R83959:83961 compcert.lib.Integers Make shl def
R83963:83965 compcert.lib.Integers Make one def
R83972:83976 Coq.ZArith.Zpower <> two_p def
R84005:84015 compcert.lib.Integers Make signed_repr thm
R84005:84015 compcert.lib.Integers Make signed_repr thm
R84029:84038 compcert.lib.Integers Make max_signed def
R84052:84065 compcert.lib.Integers Make min_signed_neg thm
R84052:84065 compcert.lib.Integers Make min_signed_neg thm
R84099:84108 compcert.lib.Integers Make Zquot_Zdiv thm
R84099:84108 compcert.lib.Integers Make Zquot_Zdiv thm
R84126:84127 compcert.lib.Integers Make lt def
R84138:84148 compcert.lib.Integers Make signed_zero thm
R84138:84148 compcert.lib.Integers Make signed_zero thm
R84165:84167 compcert.lib.Coqlib <> zlt def
R84170:84175 compcert.lib.Integers Make signed def
R84165:84167 compcert.lib.Coqlib <> zlt def
R84170:84175 compcert.lib.Integers Make signed def
R84200:84209 compcert.lib.Integers Make add_signed thm
R84200:84209 compcert.lib.Integers Make add_signed thm
R84250:84252 Coq.Init.Logic <> :type_scope:x_'='_x not
R84222:84227 compcert.lib.Integers Make signed def
R84230:84232 compcert.lib.Integers Make sub def
R84246:84248 compcert.lib.Integers Make one def
R84235:84237 compcert.lib.Integers Make shl def
R84239:84241 compcert.lib.Integers Make one def
R84261:84263 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84253:84257 Coq.ZArith.Zpower <> two_p def
R84250:84252 Coq.Init.Logic <> :type_scope:x_'='_x not
R84222:84227 compcert.lib.Integers Make signed def
R84230:84232 compcert.lib.Integers Make sub def
R84246:84248 compcert.lib.Integers Make one def
R84235:84237 compcert.lib.Integers Make shl def
R84239:84241 compcert.lib.Integers Make one def
R84261:84263 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84253:84257 Coq.ZArith.Zpower <> two_p def
R84279:84281 compcert.lib.Integers Make sub def
R84304:84315 compcert.lib.Integers Make unsigned_one thm
R84304:84315 compcert.lib.Integers Make unsigned_one thm
R84330:84340 compcert.lib.Integers Make signed_repr thm
R84330:84340 compcert.lib.Integers Make signed_repr thm
R84358:84371 compcert.lib.Integers Make min_signed_neg thm
R84358:84371 compcert.lib.Integers Make min_signed_neg thm
R84381:84390 compcert.lib.Integers Make max_signed def
R84423:84433 compcert.lib.Integers Make signed_repr thm
R84423:84433 compcert.lib.Integers Make signed_repr thm
R84475:84486 compcert.lib.Integers Make signed_range thm
R84475:84486 compcert.lib.Integers Make signed_range thm
R84524:84527 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R84520:84522 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84512:84516 Coq.ZArith.Zpower <> two_p def
R84528:84537 compcert.lib.Integers Make max_signed def
R84524:84527 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R84520:84522 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84512:84516 Coq.ZArith.Zpower <> two_p def
R84528:84537 compcert.lib.Integers Make max_signed def
R84548:84557 compcert.lib.Integers Make max_signed def
prf 84588:84597 Make shrx_shr_2
R84665:84667 Coq.Init.Logic <> :type_scope:x_'='_x not
R84657:84660 compcert.lib.Integers Make shrx def
R84664:84664 compcert.lib.Integers <> y var
R84662:84662 compcert.lib.Integers <> x var
R84668:84670 compcert.lib.Integers Make shr def
R84736:84736 compcert.lib.Integers <> y var
R84673:84675 compcert.lib.Integers Make add def
R84680:84683 compcert.lib.Integers Make shru def
R84717:84719 compcert.lib.Integers Make sub def
R84731:84731 compcert.lib.Integers <> y var
R84721:84729 compcert.lib.Integers Make iwordsize def
R84686:84688 compcert.lib.Integers Make shr def
R84693:84696 compcert.lib.Integers Make repr def
R84708:84710 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84699:84707 compcert.lib.Integers Make zwordsize def
R84690:84690 compcert.lib.Integers <> x var
R84677:84677 compcert.lib.Integers <> x var
R84644:84646 Coq.Init.Logic <> :type_scope:x_'='_x not
R84616:84618 compcert.lib.Integers Make ltu def
R84623:84626 compcert.lib.Integers Make repr def
R84638:84640 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84629:84637 compcert.lib.Integers Make zwordsize def
R84620:84620 compcert.lib.Integers <> y var
R84647:84650 Coq.Init.Datatypes <> true constr
R84767:84774 compcert.lib.Integers Make shrx_shr thm
R84767:84774 compcert.lib.Integers Make shrx_shr thm
R84804:84814 compcert.lib.Integers Make shr_lt_zero thm
R84804:84814 compcert.lib.Integers Make shr_lt_zero thm
R84827:84828 compcert.lib.Integers Make lt def
R84832:84835 compcert.lib.Integers Make zero def
R84827:84828 compcert.lib.Integers Make lt def
R84832:84835 compcert.lib.Integers Make zero def
R84852:84859 compcert.lib.Integers Make unsigned def
R84852:84859 compcert.lib.Integers Make unsigned def
R84879:84892 compcert.lib.Integers Make unsigned_range thm
R84879:84892 compcert.lib.Integers Make unsigned_range thm
R84926:84929 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R84932:84934 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R84944:84946 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84935:84943 compcert.lib.Integers Make zwordsize def
R84926:84929 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R84932:84934 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R84944:84946 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R84935:84943 compcert.lib.Integers Make zwordsize def
R84963:84969 compcert.lib.Integers Make ltu_inv thm
R84987:84999 compcert.lib.Integers Make unsigned_repr thm
R84987:84999 compcert.lib.Integers Make unsigned_repr thm
R85024:85035 compcert.lib.Integers Make wordsize_pos thm
R85037:85057 compcert.lib.Integers Make wordsize_max_unsigned thm
R85024:85035 compcert.lib.Integers Make wordsize_pos thm
R85037:85057 compcert.lib.Integers Make wordsize_max_unsigned thm
R85085:85087 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R85077:85081 Coq.ZArith.Zpower <> two_p def
R85088:85094 compcert.lib.Integers Make modulus def
R85085:85087 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R85077:85081 Coq.ZArith.Zpower <> two_p def
R85088:85094 compcert.lib.Integers Make modulus def
R85110:85122 compcert.lib.Integers Make modulus_power thm
R85110:85122 compcert.lib.Integers Make modulus_power thm
R85131:85151 compcert.lib.Coqlib <> two_p_monotone_strict thm
R85131:85151 compcert.lib.Coqlib <> two_p_monotone_strict thm
R85181:85193 compcert.lib.Integers Make shl_mul_two_p thm
R85181:85193 compcert.lib.Integers Make shl_mul_two_p thm
R85213:85222 compcert.lib.Integers Make mul_commut thm
R85213:85222 compcert.lib.Integers Make mul_commut thm
R85233:85239 compcert.lib.Integers Make mul_one thm
R85233:85239 compcert.lib.Integers Make mul_one thm
R85251:85253 compcert.lib.Integers Make sub def
R85264:85275 compcert.lib.Integers Make unsigned_one thm
R85264:85275 compcert.lib.Integers Make unsigned_one thm
R85286:85298 compcert.lib.Integers Make unsigned_repr thm
R85286:85298 compcert.lib.Integers Make unsigned_repr thm
R85312:85333 compcert.lib.Integers Make unsigned_repr_wordsize thm
R85312:85333 compcert.lib.Integers Make unsigned_repr_wordsize thm
R85354:85365 compcert.lib.Integers Make same_bits_eq thm
R85354:85365 compcert.lib.Integers Make same_bits_eq thm
R85384:85392 compcert.lib.Integers Make bits_shru thm
R85384:85392 compcert.lib.Integers Make bits_shru thm
R85414:85425 compcert.lib.Integers Make testbit_repr thm
R85414:85425 compcert.lib.Integers Make testbit_repr thm
R85444:85460 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R85444:85460 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R85511:85531 compcert.lib.Integers Make wordsize_max_unsigned thm
R85482:85494 compcert.lib.Integers Make unsigned_repr thm
R85482:85494 compcert.lib.Integers Make unsigned_repr thm
R85511:85531 compcert.lib.Integers Make wordsize_max_unsigned thm
R85554:85556 compcert.lib.Coqlib <> zlt def
R85554:85556 compcert.lib.Coqlib <> zlt def
R85576:85583 compcert.lib.Coqlib <> zlt_true thm
R85576:85583 compcert.lib.Coqlib <> zlt_true thm
R85603:85611 compcert.lib.Integers Make bits_mone thm
R85603:85611 compcert.lib.Integers Make bits_mone thm
R85639:85647 compcert.lib.Coqlib <> zlt_false thm
R85639:85647 compcert.lib.Coqlib <> zlt_false thm
R85683:85685 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R85675:85679 Coq.ZArith.Zpower <> two_p def
R85699:85711 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R85683:85685 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R85675:85679 Coq.ZArith.Zpower <> two_p def
R85699:85711 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R85729:85740 compcert.lib.Integers Make max_unsigned def
R85761:85764 compcert.lib.Integers Make shru def
R85772:85774 compcert.lib.Integers Make sub def
R85776:85784 compcert.lib.Integers Make iwordsize def
R85766:85769 compcert.lib.Integers Make zero def
R85795:85798 compcert.lib.Integers Make zero def
R85795:85798 compcert.lib.Integers Make zero def
R85761:85764 compcert.lib.Integers Make shru def
R85772:85774 compcert.lib.Integers Make sub def
R85776:85784 compcert.lib.Integers Make iwordsize def
R85766:85769 compcert.lib.Integers Make zero def
R85812:85819 compcert.lib.Integers Make add_zero thm
R85812:85819 compcert.lib.Integers Make add_zero thm
R85851:85853 compcert.lib.Coqlib <> zlt def
R85888:85896 compcert.lib.Integers Make zwordsize def
R85857:85859 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85860:85867 compcert.lib.Integers Make unsigned def
R85870:85872 compcert.lib.Integers Make sub def
R85874:85882 compcert.lib.Integers Make iwordsize def
R85851:85853 compcert.lib.Coqlib <> zlt def
R85888:85896 compcert.lib.Integers Make zwordsize def
R85857:85859 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85860:85867 compcert.lib.Integers Make unsigned def
R85870:85872 compcert.lib.Integers Make sub def
R85874:85882 compcert.lib.Integers Make iwordsize def
prf 85918:85927 Make Zdiv_shift
R85972:85974 Coq.Init.Logic <> :type_scope:x_'='_x not
R85955:85955 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85967:85970 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85957:85960 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85966:85966 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85956:85956 compcert.lib.Integers <> x var
R85962:85964 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R85961:85961 compcert.lib.Integers <> y var
R85971:85971 compcert.lib.Integers <> y var
R85980:85982 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R85976:85978 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R85975:85975 compcert.lib.Integers <> x var
R85979:85979 compcert.lib.Integers <> y var
R85986:85988 compcert.lib.Coqlib <> zeq def
R85991:85994 Coq.ZArith.Zdiv <> Zmod syndef
R85998:85998 compcert.lib.Integers <> y var
R85996:85996 compcert.lib.Integers <> x var
R85945:85947 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R85944:85944 compcert.lib.Integers <> y var
R86047:86058 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R86047:86058 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R86080:86087 Coq.ZArith.Zdiv <> Z_mod_lt thm
R86080:86087 Coq.ZArith.Zdiv <> Z_mod_lt thm
R86112:86114 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R86112:86114 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R86130:86134 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R86130:86134 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R86159:86161 compcert.lib.Coqlib <> zeq def
R86159:86161 compcert.lib.Coqlib <> zeq def
R86197:86199 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86178:86188 compcert.lib.Coqlib <> Zdiv_unique thm
R86197:86199 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86178:86188 compcert.lib.Coqlib <> Zdiv_unique thm
R86267:86269 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86248:86258 compcert.lib.Coqlib <> Zdiv_unique thm
R86267:86269 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86248:86258 compcert.lib.Coqlib <> Zdiv_unique thm
prf 86313:86322 Make shrx_carry
R86390:86392 Coq.Init.Logic <> :type_scope:x_'='_x not
R86382:86385 compcert.lib.Integers Make shrx def
R86389:86389 compcert.lib.Integers <> y var
R86387:86387 compcert.lib.Integers <> x var
R86393:86395 compcert.lib.Integers Make add def
R86408:86416 compcert.lib.Integers Make shr_carry def
R86420:86420 compcert.lib.Integers <> y var
R86418:86418 compcert.lib.Integers <> x var
R86398:86400 compcert.lib.Integers Make shr def
R86404:86404 compcert.lib.Integers <> y var
R86402:86402 compcert.lib.Integers <> x var
R86369:86371 Coq.Init.Logic <> :type_scope:x_'='_x not
R86341:86343 compcert.lib.Integers Make ltu def
R86348:86351 compcert.lib.Integers Make repr def
R86363:86365 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86354:86362 compcert.lib.Integers Make zwordsize def
R86345:86345 compcert.lib.Integers <> y var
R86372:86375 Coq.Init.Datatypes <> true constr
R86449:86456 compcert.lib.Integers Make shrx_shr thm
R86449:86456 compcert.lib.Integers Make shrx_shr thm
R86472:86480 compcert.lib.Integers Make shr_carry def
R86492:86493 compcert.lib.Integers Make lt def
R86507:86512 compcert.lib.Integers Make signed def
R86507:86512 compcert.lib.Integers Make signed def
R86526:86536 compcert.lib.Integers Make signed_zero thm
R86526:86536 compcert.lib.Integers Make signed_zero thm
R86552:86554 compcert.lib.Coqlib <> zlt def
R86552:86554 compcert.lib.Coqlib <> zlt def
R86584:86591 compcert.lib.Integers Make add_zero thm
R86584:86591 compcert.lib.Integers Make add_zero thm
R86613:86620 compcert.lib.Integers Make unsigned def
R86613:86620 compcert.lib.Integers Make unsigned def
R86637:86640 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R86643:86645 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R86655:86657 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86646:86654 compcert.lib.Integers Make zwordsize def
R86637:86640 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R86643:86645 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R86655:86657 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R86646:86654 compcert.lib.Integers Make zwordsize def
R86674:86680 compcert.lib.Integers Make ltu_inv thm
R86698:86710 compcert.lib.Integers Make unsigned_repr thm
R86698:86710 compcert.lib.Integers Make unsigned_repr thm
R86734:86745 compcert.lib.Integers Make wordsize_pos thm
R86747:86767 compcert.lib.Integers Make wordsize_max_unsigned thm
R86734:86745 compcert.lib.Integers Make wordsize_pos thm
R86747:86767 compcert.lib.Integers Make wordsize_max_unsigned thm
R86796:86798 Coq.Init.Logic <> :type_scope:x_'='_x not
R86787:86789 compcert.lib.Integers Make shl def
R86791:86793 compcert.lib.Integers Make one def
R86799:86802 compcert.lib.Integers Make repr def
R86805:86809 Coq.ZArith.Zpower <> two_p def
R86796:86798 Coq.Init.Logic <> :type_scope:x_'='_x not
R86787:86789 compcert.lib.Integers Make shl def
R86791:86793 compcert.lib.Integers Make one def
R86799:86802 compcert.lib.Integers Make repr def
R86805:86809 Coq.ZArith.Zpower <> two_p def
R86829:86841 compcert.lib.Integers Make shl_mul_two_p thm
R86829:86841 compcert.lib.Integers Make shl_mul_two_p thm
R86852:86861 compcert.lib.Integers Make mul_commut thm
R86852:86861 compcert.lib.Integers Make mul_commut thm
R86870:86876 compcert.lib.Integers Make mul_one thm
R86870:86876 compcert.lib.Integers Make mul_one thm
R86916:86918 Coq.Init.Logic <> :type_scope:x_'='_x not
R86889:86891 compcert.lib.Integers Make and def
R86896:86898 compcert.lib.Integers Make sub def
R86912:86914 compcert.lib.Integers Make one def
R86901:86903 compcert.lib.Integers Make shl def
R86905:86907 compcert.lib.Integers Make one def
R86919:86922 compcert.lib.Integers Make modu def
R86927:86930 compcert.lib.Integers Make repr def
R86933:86937 Coq.ZArith.Zpower <> two_p def
R86916:86918 Coq.Init.Logic <> :type_scope:x_'='_x not
R86889:86891 compcert.lib.Integers Make and def
R86896:86898 compcert.lib.Integers Make sub def
R86912:86914 compcert.lib.Integers Make one def
R86901:86903 compcert.lib.Integers Make shl def
R86905:86907 compcert.lib.Integers Make one def
R86919:86922 compcert.lib.Integers Make modu def
R86927:86930 compcert.lib.Integers Make repr def
R86933:86937 Coq.ZArith.Zpower <> two_p def
R86978:86985 compcert.lib.Integers Make modu_and thm
R86978:86985 compcert.lib.Integers Make modu_and thm
R87017:87031 compcert.lib.Integers Make is_power2_two_p thm
R87017:87031 compcert.lib.Integers Make is_power2_two_p thm
R87053:87065 compcert.lib.Integers Make repr_unsigned thm
R87053:87065 compcert.lib.Integers Make repr_unsigned thm
R87129:87141 compcert.lib.Integers Make shr_div_two_p thm
R87129:87141 compcert.lib.Integers Make shr_div_two_p thm
R87129:87141 compcert.lib.Integers Make shr_div_two_p thm
R87129:87141 compcert.lib.Integers Make shr_div_two_p thm
R87180:87182 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R87172:87176 Coq.ZArith.Zpower <> two_p def
R87180:87182 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R87172:87176 Coq.ZArith.Zpower <> two_p def
R87193:87205 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R87193:87205 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R87233:87235 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R87225:87229 Coq.ZArith.Zpower <> two_p def
R87236:87242 compcert.lib.Integers Make modulus def
R87233:87235 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R87225:87229 Coq.ZArith.Zpower <> two_p def
R87236:87242 compcert.lib.Integers Make modulus def
R87258:87270 compcert.lib.Integers Make modulus_power thm
R87258:87270 compcert.lib.Integers Make modulus_power thm
R87279:87299 compcert.lib.Coqlib <> two_p_monotone_strict thm
R87279:87299 compcert.lib.Coqlib <> two_p_monotone_strict thm
R87327:87329 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R87319:87323 Coq.ZArith.Zpower <> two_p def
R87330:87341 compcert.lib.Integers Make half_modulus def
R87327:87329 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R87319:87323 Coq.ZArith.Zpower <> two_p def
R87330:87341 compcert.lib.Integers Make half_modulus def
R87358:87375 compcert.lib.Integers Make half_modulus_power thm
R87358:87375 compcert.lib.Integers Make half_modulus_power thm
R87389:87409 compcert.lib.Coqlib <> two_p_monotone_strict thm
R87389:87409 compcert.lib.Coqlib <> two_p_monotone_strict thm
R87436:87438 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R87428:87432 Coq.ZArith.Zpower <> two_p def
R87439:87445 compcert.lib.Integers Make modulus def
R87436:87438 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R87428:87432 Coq.ZArith.Zpower <> two_p def
R87439:87445 compcert.lib.Integers Make modulus def
R87461:87473 compcert.lib.Integers Make modulus_power thm
R87461:87473 compcert.lib.Integers Make modulus_power thm
R87482:87502 compcert.lib.Coqlib <> two_p_monotone_strict thm
R87482:87502 compcert.lib.Coqlib <> two_p_monotone_strict thm
R87547:87549 Coq.Init.Logic <> :type_scope:x_'='_x not
R87522:87524 compcert.lib.Integers Make sub def
R87544:87546 compcert.lib.Integers Make one def
R87527:87530 compcert.lib.Integers Make repr def
R87533:87537 Coq.ZArith.Zpower <> two_p def
R87550:87553 compcert.lib.Integers Make repr def
R87564:87566 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87556:87560 Coq.ZArith.Zpower <> two_p def
R87547:87549 Coq.Init.Logic <> :type_scope:x_'='_x not
R87522:87524 compcert.lib.Integers Make sub def
R87544:87546 compcert.lib.Integers Make one def
R87527:87530 compcert.lib.Integers Make repr def
R87533:87537 Coq.ZArith.Zpower <> two_p def
R87550:87553 compcert.lib.Integers Make repr def
R87564:87566 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87556:87560 Coq.ZArith.Zpower <> two_p def
R87583:87585 compcert.lib.Integers Make sub def
R87594:87605 compcert.lib.Integers Make eqm_samerepr thm
R87594:87605 compcert.lib.Integers Make eqm_samerepr thm
R87614:87620 compcert.lib.Integers Make eqm_sub thm
R87614:87620 compcert.lib.Integers Make eqm_sub thm
R87629:87635 compcert.lib.Integers Make eqm_sym thm
R87644:87660 compcert.lib.Integers Make eqm_unsigned_repr thm
R87629:87635 compcert.lib.Integers Make eqm_sym thm
R87644:87660 compcert.lib.Integers Make eqm_unsigned_repr thm
R87676:87687 compcert.lib.Integers Make unsigned_one thm
R87676:87687 compcert.lib.Integers Make unsigned_one thm
R87696:87703 compcert.lib.Integers Make eqm_refl thm
R87696:87703 compcert.lib.Integers Make eqm_refl thm
R87728:87737 compcert.lib.Integers Make add_signed thm
R87728:87737 compcert.lib.Integers Make add_signed thm
R87760:87770 compcert.lib.Integers Make signed_repr thm
R87781:87783 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87773:87777 Coq.ZArith.Zpower <> two_p def
R87760:87770 compcert.lib.Integers Make signed_repr thm
R87781:87783 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R87773:87777 Coq.ZArith.Zpower <> two_p def
R87797:87807 compcert.lib.Integers Make signed_repr thm
R87797:87807 compcert.lib.Integers Make signed_repr thm
R87820:87823 compcert.lib.Integers Make modu def
R87834:87846 compcert.lib.Integers Make unsigned_repr thm
R87834:87846 compcert.lib.Integers Make unsigned_repr thm
R87859:87860 compcert.lib.Integers Make eq def
R87871:87883 compcert.lib.Integers Make unsigned_zero thm
R87871:87883 compcert.lib.Integers Make unsigned_zero thm
R87894:87906 compcert.lib.Integers Make unsigned_repr thm
R87894:87906 compcert.lib.Integers Make unsigned_repr thm
R87943:87945 Coq.Init.Logic <> :type_scope:x_'='_x not
R87930:87934 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87920:87927 compcert.lib.Integers Make unsigned def
R87935:87939 Coq.ZArith.Zpower <> two_p def
R87948:87952 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87953:87957 Coq.ZArith.Zpower <> two_p def
R87943:87945 Coq.Init.Logic <> :type_scope:x_'='_x not
R87930:87934 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87920:87927 compcert.lib.Integers Make unsigned def
R87935:87939 Coq.ZArith.Zpower <> two_p def
R87948:87952 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R87953:87957 Coq.ZArith.Zpower <> two_p def
R87974:87985 compcert.lib.Integers Make eqmod_mod_eq thm
R87974:87985 compcert.lib.Integers Make eqmod_mod_eq thm
R88019:88025 compcert.lib.Integers Make modulus def
R88000:88012 compcert.lib.Integers Make eqmod_divides thm
R88019:88025 compcert.lib.Integers Make modulus def
R88000:88012 compcert.lib.Integers Make eqmod_divides thm
R88038:88040 compcert.lib.Integers Make eqm def
R88038:88040 compcert.lib.Integers Make eqm def
R88060:88066 compcert.lib.Integers Make eqm_sym thm
R88060:88066 compcert.lib.Integers Make eqm_sym thm
R88075:88093 compcert.lib.Integers Make eqm_signed_unsigned thm
R88075:88093 compcert.lib.Integers Make eqm_signed_unsigned thm
R88107:88113 compcert.lib.Integers Make modulus def
R88124:88142 compcert.lib.Coqlib <> two_power_nat_two_p thm
R88124:88142 compcert.lib.Coqlib <> two_power_nat_two_p thm
R88158:88162 Coq.ZArith.Zpower <> two_p def
R88174:88176 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R88165:88173 compcert.lib.Integers Make zwordsize def
R88158:88162 Coq.ZArith.Zpower <> two_p def
R88174:88176 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R88165:88173 compcert.lib.Integers Make zwordsize def
R88194:88205 Coq.ZArith.Zpower <> two_p_is_exp thm
R88194:88205 Coq.ZArith.Zpower <> two_p_is_exp thm
R88226:88234 compcert.lib.Integers Make zwordsize def
R88226:88234 compcert.lib.Integers Make zwordsize def
R88280:88289 compcert.lib.Integers Make Zdiv_shift thm
R88280:88289 compcert.lib.Integers Make Zdiv_shift thm
R88307:88309 compcert.lib.Integers Make add def
R88318:88329 compcert.lib.Integers Make eqm_samerepr thm
R88318:88329 compcert.lib.Integers Make eqm_samerepr thm
R88338:88344 compcert.lib.Integers Make eqm_add thm
R88338:88344 compcert.lib.Integers Make eqm_add thm
R88356:88372 compcert.lib.Integers Make eqm_unsigned_repr thm
R88356:88372 compcert.lib.Integers Make eqm_unsigned_repr thm
R88388:88390 compcert.lib.Coqlib <> zeq def
R88395:88399 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R88400:88404 Coq.ZArith.Zpower <> two_p def
R88388:88390 compcert.lib.Coqlib <> zeq def
R88395:88399 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R88400:88404 Coq.ZArith.Zpower <> two_p def
R88431:88443 compcert.lib.Integers Make unsigned_zero thm
R88431:88443 compcert.lib.Integers Make unsigned_zero thm
R88452:88459 compcert.lib.Integers Make eqm_refl thm
R88452:88459 compcert.lib.Integers Make eqm_refl thm
R88472:88483 compcert.lib.Integers Make unsigned_one thm
R88472:88483 compcert.lib.Integers Make unsigned_one thm
R88492:88499 compcert.lib.Integers Make eqm_refl thm
R88492:88499 compcert.lib.Integers Make eqm_refl thm
R88516:88523 Coq.ZArith.Zdiv <> Z_mod_lt thm
R88539:88543 Coq.ZArith.Zpower <> two_p def
R88526:88533 compcert.lib.Integers Make unsigned def
R88516:88523 Coq.ZArith.Zdiv <> Z_mod_lt thm
R88539:88543 Coq.ZArith.Zpower <> two_p def
R88526:88533 compcert.lib.Integers Make unsigned def
R88561:88572 compcert.lib.Integers Make max_unsigned def
R88591:88602 compcert.lib.Integers Make max_unsigned def
R88626:88637 compcert.lib.Integers Make signed_range thm
R88626:88637 compcert.lib.Integers Make signed_range thm
R88681:88690 compcert.lib.Integers Make max_signed def
R88714:88727 compcert.lib.Integers Make min_signed_neg thm
R88714:88727 compcert.lib.Integers Make min_signed_neg thm
R88737:88746 compcert.lib.Integers Make max_signed def
prf 88815:88831 Make shr_shru_positive
R88877:88879 Coq.Init.Logic <> :type_scope:x_'='_x not
R88870:88872 compcert.lib.Integers Make shr def
R88876:88876 compcert.lib.Integers <> y var
R88874:88874 compcert.lib.Integers <> x var
R88880:88883 compcert.lib.Integers Make shru def
R88887:88887 compcert.lib.Integers <> y var
R88885:88885 compcert.lib.Integers <> x var
R88858:88861 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R88850:88855 compcert.lib.Integers Make signed def
R88857:88857 compcert.lib.Integers <> x var
R88917:88929 compcert.lib.Integers Make shr_div_two_p thm
R88917:88929 compcert.lib.Integers Make shr_div_two_p thm
R88940:88953 compcert.lib.Integers Make shru_div_two_p thm
R88940:88953 compcert.lib.Integers Make shru_div_two_p thm
R88966:88983 compcert.lib.Integers Make signed_eq_unsigned thm
R88966:88983 compcert.lib.Integers Make signed_eq_unsigned thm
R88998:89012 compcert.lib.Integers Make signed_positive thm
R88998:89012 compcert.lib.Integers Make signed_positive thm
prf 89033:89044 Make and_positive
R89094:89097 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R89078:89083 compcert.lib.Integers Make signed def
R89086:89088 compcert.lib.Integers Make and def
R89092:89092 compcert.lib.Integers <> y var
R89090:89090 compcert.lib.Integers <> x var
R89069:89072 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R89061:89066 compcert.lib.Integers Make signed def
R89068:89068 compcert.lib.Integers <> y var
R89138:89140 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R89128:89135 compcert.lib.Integers Make unsigned def
R89141:89152 compcert.lib.Integers Make half_modulus def
R89138:89140 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R89128:89135 compcert.lib.Integers Make unsigned def
R89141:89152 compcert.lib.Integers Make half_modulus def
R89164:89178 compcert.lib.Integers Make signed_positive thm
R89164:89178 compcert.lib.Integers Make signed_positive thm
R89193:89202 compcert.lib.Integers Make max_signed def
R89231:89250 compcert.lib.Integers Make sign_bit_of_unsigned thm
R89231:89250 compcert.lib.Integers Make sign_bit_of_unsigned thm
R89264:89271 compcert.lib.Coqlib <> zlt_true thm
R89264:89271 compcert.lib.Coqlib <> zlt_true thm
R89304:89323 compcert.lib.Integers Make sign_bit_of_unsigned thm
R89326:89328 compcert.lib.Integers Make and def
R89304:89323 compcert.lib.Integers Make sign_bit_of_unsigned thm
R89326:89328 compcert.lib.Integers Make and def
R89345:89352 compcert.lib.Integers Make bits_and thm
R89345:89352 compcert.lib.Integers Make bits_and thm
R89377:89388 Coq.Bool.Bool <> andb_false_r thm
R89377:89388 Coq.Bool.Bool <> andb_false_r thm
R89398:89403 compcert.lib.Integers Make signed def
R89418:89420 compcert.lib.Coqlib <> zlt def
R89443:89454 compcert.lib.Integers Make half_modulus def
R89423:89430 compcert.lib.Integers Make unsigned def
R89433:89435 compcert.lib.Integers Make and def
R89418:89420 compcert.lib.Coqlib <> zlt def
R89443:89454 compcert.lib.Integers Make half_modulus def
R89423:89430 compcert.lib.Integers Make unsigned def
R89433:89435 compcert.lib.Integers Make and def
R89480:89493 compcert.lib.Integers Make unsigned_range thm
R89496:89498 compcert.lib.Integers Make and def
R89480:89493 compcert.lib.Integers Make unsigned_range thm
R89496:89498 compcert.lib.Integers Make and def
R89541:89552 compcert.lib.Integers Make wordsize_pos thm
R89541:89552 compcert.lib.Integers Make wordsize_pos thm
prf 89576:89594 Make shr_and_is_shru_and
R89651:89653 Coq.Init.Logic <> :type_scope:x_'='_x not
R89636:89638 compcert.lib.Integers Make shr def
R89650:89650 compcert.lib.Integers <> z var
R89641:89643 compcert.lib.Integers Make and def
R89647:89647 compcert.lib.Integers <> y var
R89645:89645 compcert.lib.Integers <> x var
R89654:89657 compcert.lib.Integers Make shru def
R89669:89669 compcert.lib.Integers <> z var
R89660:89662 compcert.lib.Integers Make and def
R89666:89666 compcert.lib.Integers <> y var
R89664:89664 compcert.lib.Integers <> x var
R89624:89626 Coq.Init.Logic <> :type_scope:x_'='_x not
R89615:89616 compcert.lib.Integers Make lt def
R89620:89623 compcert.lib.Integers Make zero def
R89618:89618 compcert.lib.Integers <> y var
R89627:89631 Coq.Init.Datatypes <> false constr
R89695:89711 compcert.lib.Integers Make shr_shru_positive thm
R89695:89711 compcert.lib.Integers Make shr_shru_positive thm
R89720:89731 compcert.lib.Integers Make and_positive thm
R89720:89731 compcert.lib.Integers Make and_positive thm
R89744:89745 compcert.lib.Integers Make lt def
R89761:89771 compcert.lib.Integers Make signed_zero thm
R89761:89771 compcert.lib.Integers Make signed_zero thm
R89789:89791 compcert.lib.Coqlib <> zlt def
R89794:89799 compcert.lib.Integers Make signed def
R89789:89791 compcert.lib.Coqlib <> zlt def
R89794:89799 compcert.lib.Integers Make signed def
prf 89906:89915 Make Ziter_base
R89948:89948 compcert.lib.Integers <> A var
R89943:89943 compcert.lib.Integers <> A var
R89976:89978 Coq.Init.Logic <> :type_scope:x_'='_x not
R89964:89969 Coq.ZArith.BinInt Z iter def
R89975:89975 compcert.lib.Integers <> x var
R89973:89973 compcert.lib.Integers <> f var
R89971:89971 compcert.lib.Integers <> n var
R89979:89979 compcert.lib.Integers <> x var
R89955:89958 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R89954:89954 compcert.lib.Integers <> n var
R90006:90011 Coq.ZArith.BinInt Z iter def
prf 90073:90082 Make Ziter_succ
R90115:90115 compcert.lib.Integers <> A var
R90110:90110 compcert.lib.Integers <> A var
R90154:90156 Coq.Init.Logic <> :type_scope:x_'='_x not
R90133:90138 Coq.ZArith.BinInt Z iter def
R90153:90153 compcert.lib.Integers <> x var
R90151:90151 compcert.lib.Integers <> f var
R90141:90146 Coq.ZArith.BinInt Z succ def
R90148:90148 compcert.lib.Integers <> n var
R90157:90157 compcert.lib.Integers <> f var
R90160:90165 Coq.ZArith.BinInt Z iter def
R90171:90171 compcert.lib.Integers <> x var
R90169:90169 compcert.lib.Integers <> f var
R90167:90167 compcert.lib.Integers <> n var
R90124:90127 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R90128:90128 compcert.lib.Integers <> n var
R90234:90244 Coq.PArith.BinPos Pos add_1_r thm
R90234:90244 Coq.PArith.BinPos Pos add_1_r thm
R90253:90265 Coq.PArith.BinPos Pos iter_succ thm
R90253:90265 Coq.PArith.BinPos Pos iter_succ thm
prf 90312:90323 Make Znatlike_ind
R90339:90339 Coq.Numbers.BinNums <> Z ind
R90441:90441 compcert.lib.Integers <> P var
R90443:90443 compcert.lib.Integers <> n var
R90412:90412 compcert.lib.Integers <> P var
R90415:90420 Coq.ZArith.BinInt Z succ def
R90422:90422 compcert.lib.Integers <> n var
R90405:90405 compcert.lib.Integers <> P var
R90407:90407 compcert.lib.Integers <> n var
R90396:90399 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R90400:90400 compcert.lib.Integers <> n var
R90374:90374 compcert.lib.Integers <> P var
R90376:90376 compcert.lib.Integers <> n var
R90365:90368 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R90364:90364 compcert.lib.Integers <> n var
R90473:90475 compcert.lib.Coqlib <> zle def
R90473:90475 compcert.lib.Coqlib <> zle def
R90491:90501 Coq.ZArith.Wf_Z <> natlike_ind thm
R90491:90501 Coq.ZArith.Wf_Z <> natlike_ind thm
prf 90557:90570 Make Zzero_ext_spec
R90628:90630 Coq.Init.Logic <> :type_scope:x_'='_x not
R90601:90609 Coq.ZArith.BinInt Z testbit def
R90627:90627 compcert.lib.Integers <> i var
R90612:90620 compcert.lib.Integers Make Zzero_ext def
R90624:90624 compcert.lib.Integers <> x var
R90622:90622 compcert.lib.Integers <> n var
R90634:90636 compcert.lib.Coqlib <> zlt def
R90640:90640 compcert.lib.Integers <> n var
R90638:90638 compcert.lib.Integers <> i var
R90666:90670 Coq.Init.Datatypes <> false constr
R90647:90655 Coq.ZArith.BinInt Z testbit def
R90659:90659 compcert.lib.Integers <> i var
R90657:90657 compcert.lib.Integers <> x var
R90590:90593 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R90594:90594 compcert.lib.Integers <> i var
R90689:90697 compcert.lib.Integers Make Zzero_ext def
R90718:90729 compcert.lib.Integers Make Znatlike_ind thm
R90718:90729 compcert.lib.Integers Make Znatlike_ind thm
R90753:90762 compcert.lib.Integers Make Ziter_base thm
R90753:90762 compcert.lib.Integers Make Ziter_base thm
R90783:90791 compcert.lib.Coqlib <> zlt_false thm
R90783:90791 compcert.lib.Coqlib <> zlt_false thm
R90802:90811 compcert.lib.Integers Make Ztestbit_0 thm
R90802:90811 compcert.lib.Integers Make Ztestbit_0 thm
R90847:90856 compcert.lib.Integers Make Ziter_succ thm
R90847:90856 compcert.lib.Integers Make Ziter_succ thm
R90878:90893 compcert.lib.Integers Make Ztestbit_shiftin thm
R90878:90893 compcert.lib.Integers Make Ztestbit_shiftin thm
R90916:90926 compcert.lib.Integers Make Ztestbit_eq thm
R90916:90926 compcert.lib.Integers Make Ztestbit_eq thm
R90955:90957 compcert.lib.Coqlib <> zeq def
R90955:90957 compcert.lib.Coqlib <> zeq def
R90988:90995 compcert.lib.Coqlib <> zlt_true thm
R90988:90995 compcert.lib.Coqlib <> zlt_true thm
R91040:91042 compcert.lib.Coqlib <> zlt def
R91045:91050 Coq.ZArith.BinInt Z pred def
R91040:91042 compcert.lib.Coqlib <> zlt def
R91045:91050 Coq.ZArith.BinInt Z pred def
R91073:91080 compcert.lib.Coqlib <> zlt_true thm
R91073:91080 compcert.lib.Coqlib <> zlt_true thm
R91110:91118 compcert.lib.Coqlib <> zlt_false thm
R91110:91118 compcert.lib.Coqlib <> zlt_false thm
prf 91159:91171 Make bits_zero_ext
R91227:91229 Coq.Init.Logic <> :type_scope:x_'='_x not
R91203:91209 compcert.lib.Integers Make testbit def
R91226:91226 compcert.lib.Integers <> i var
R91212:91219 compcert.lib.Integers Make zero_ext def
R91223:91223 compcert.lib.Integers <> x var
R91221:91221 compcert.lib.Integers <> n var
R91233:91235 compcert.lib.Coqlib <> zlt def
R91239:91239 compcert.lib.Integers <> n var
R91237:91237 compcert.lib.Integers <> i var
R91263:91267 Coq.Init.Datatypes <> false constr
R91246:91252 compcert.lib.Integers Make testbit def
R91256:91256 compcert.lib.Integers <> i var
R91254:91254 compcert.lib.Integers <> x var
R91192:91195 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R91196:91196 compcert.lib.Integers <> i var
R91294:91301 compcert.lib.Integers Make zero_ext def
R91314:91316 compcert.lib.Coqlib <> zlt def
R91320:91328 compcert.lib.Integers Make zwordsize def
R91314:91316 compcert.lib.Coqlib <> zlt def
R91320:91328 compcert.lib.Integers Make zwordsize def
R91342:91353 compcert.lib.Integers Make testbit_repr thm
R91342:91353 compcert.lib.Integers Make testbit_repr thm
R91370:91383 compcert.lib.Integers Make Zzero_ext_spec thm
R91370:91383 compcert.lib.Integers Make Zzero_ext_spec thm
R91410:91419 compcert.lib.Integers Make bits_above thm
R91410:91419 compcert.lib.Integers Make bits_above thm
R91410:91419 compcert.lib.Integers Make bits_above thm
R91410:91419 compcert.lib.Integers Make bits_above thm
R91438:91440 compcert.lib.Coqlib <> zlt def
R91438:91440 compcert.lib.Coqlib <> zlt def
prf 91466:91479 Make Zsign_ext_spec
R91546:91548 Coq.Init.Logic <> :type_scope:x_'='_x not
R91519:91527 Coq.ZArith.BinInt Z testbit def
R91545:91545 compcert.lib.Integers <> i var
R91530:91538 compcert.lib.Integers Make Zsign_ext def
R91542:91542 compcert.lib.Integers <> x var
R91540:91540 compcert.lib.Integers <> n var
R91549:91557 Coq.ZArith.BinInt Z testbit def
R91565:91567 compcert.lib.Coqlib <> zlt def
R91571:91571 compcert.lib.Integers <> n var
R91569:91569 compcert.lib.Integers <> i var
R91586:91588 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R91585:91585 compcert.lib.Integers <> n var
R91578:91578 compcert.lib.Integers <> i var
R91559:91559 compcert.lib.Integers <> x var
R91509:91511 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R91512:91512 compcert.lib.Integers <> n var
R91499:91502 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R91503:91503 compcert.lib.Integers <> i var
R91659:91677 Coq.ZArith.Wf_Z <> Zlt_lower_bound_ind thm
R91659:91677 Coq.ZArith.Wf_Z <> Zlt_lower_bound_ind thm
R91705:91713 compcert.lib.Integers Make Zsign_ext def
R91738:91740 compcert.lib.Coqlib <> zeq def
R91738:91740 compcert.lib.Coqlib <> zeq def
R91789:91791 compcert.lib.Coqlib <> zlt def
R91789:91791 compcert.lib.Coqlib <> zlt def
R91834:91846 compcert.lib.Integers Make Ztestbit_base thm
R91834:91846 compcert.lib.Integers Make Ztestbit_base thm
R91865:91869 Coq.ZArith.BinInt Z odd def
R91865:91869 Coq.ZArith.BinInt Z odd def
R91889:91899 compcert.lib.Integers Make Ztestbit_m1 thm
R91889:91899 compcert.lib.Integers Make Ztestbit_m1 thm
R91921:91930 compcert.lib.Integers Make Ztestbit_0 thm
R91921:91930 compcert.lib.Integers Make Ztestbit_0 thm
R91949:91951 compcert.lib.Coqlib <> zlt def
R91949:91951 compcert.lib.Coqlib <> zlt def
R91983:91988 Coq.ZArith.BinInt Z pred def
R91983:91988 Coq.ZArith.BinInt Z pred def
R92011:92016 Coq.ZArith.BinInt Z succ def
R92019:92024 Coq.ZArith.BinInt Z pred def
R92011:92016 Coq.ZArith.BinInt Z succ def
R92019:92024 Coq.ZArith.BinInt Z pred def
R92046:92055 compcert.lib.Integers Make Ziter_succ thm
R92046:92055 compcert.lib.Integers Make Ziter_succ thm
R92066:92081 compcert.lib.Integers Make Ztestbit_shiftin thm
R92066:92081 compcert.lib.Integers Make Ztestbit_shiftin thm
R92101:92103 compcert.lib.Coqlib <> zeq def
R92101:92103 compcert.lib.Coqlib <> zeq def
R92137:92144 compcert.lib.Coqlib <> zlt_true thm
R92137:92144 compcert.lib.Coqlib <> zlt_true thm
R92155:92167 compcert.lib.Integers Make Ztestbit_base thm
R92155:92167 compcert.lib.Integers Make Ztestbit_base thm
R92223:92225 compcert.lib.Coqlib <> zlt def
R92239:92244 Coq.ZArith.BinInt Z pred def
R92228:92233 Coq.ZArith.BinInt Z pred def
R92223:92225 compcert.lib.Coqlib <> zlt def
R92239:92244 Coq.ZArith.BinInt Z pred def
R92228:92233 Coq.ZArith.BinInt Z pred def
R92267:92274 compcert.lib.Coqlib <> zlt_true thm
R92267:92274 compcert.lib.Coqlib <> zlt_true thm
R92286:92296 compcert.lib.Integers Make Ztestbit_eq thm
R92286:92296 compcert.lib.Integers Make Ztestbit_eq thm
R92319:92327 compcert.lib.Coqlib <> zeq_false thm
R92319:92327 compcert.lib.Coqlib <> zeq_false thm
R92359:92367 compcert.lib.Coqlib <> zlt_false thm
R92359:92367 compcert.lib.Coqlib <> zlt_false thm
R92379:92389 compcert.lib.Integers Make Ztestbit_eq thm
R92393:92395 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92379:92389 compcert.lib.Integers Make Ztestbit_eq thm
R92393:92395 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92412:92420 compcert.lib.Coqlib <> zeq_false thm
R92412:92420 compcert.lib.Coqlib <> zeq_false thm
prf 92562:92574 Make bits_sign_ext
R92651:92653 Coq.Init.Logic <> :type_scope:x_'='_x not
R92627:92633 compcert.lib.Integers Make testbit def
R92650:92650 compcert.lib.Integers <> i var
R92636:92643 compcert.lib.Integers Make sign_ext def
R92647:92647 compcert.lib.Integers <> x var
R92645:92645 compcert.lib.Integers <> n var
R92654:92660 compcert.lib.Integers Make testbit def
R92668:92670 compcert.lib.Coqlib <> zlt def
R92674:92674 compcert.lib.Integers <> n var
R92672:92672 compcert.lib.Integers <> i var
R92689:92691 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R92688:92688 compcert.lib.Integers <> n var
R92681:92681 compcert.lib.Integers <> i var
R92662:92662 compcert.lib.Integers <> x var
R92617:92619 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R92620:92620 compcert.lib.Integers <> n var
R92595:92598 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R92600:92602 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R92599:92599 compcert.lib.Integers <> i var
R92599:92599 compcert.lib.Integers <> i var
R92603:92611 compcert.lib.Integers Make zwordsize def
R92720:92727 compcert.lib.Integers Make sign_ext def
R92740:92751 compcert.lib.Integers Make testbit_repr thm
R92740:92751 compcert.lib.Integers Make testbit_repr thm
R92768:92781 compcert.lib.Integers Make Zsign_ext_spec thm
R92768:92781 compcert.lib.Integers Make Zsign_ext_spec thm
R92794:92796 compcert.lib.Coqlib <> zlt def
R92794:92796 compcert.lib.Coqlib <> zlt def
R92845:92857 compcert.lib.Integers Make bits_zero_ext thm
R92859:92871 compcert.lib.Integers Make bits_sign_ext thm
prf 92889:92902 Make zero_ext_above
R92949:92951 Coq.Init.Logic <> :type_scope:x_'='_x not
R92937:92944 compcert.lib.Integers Make zero_ext def
R92948:92948 compcert.lib.Integers <> x var
R92946:92946 compcert.lib.Integers <> n var
R92952:92952 compcert.lib.Integers <> x var
R92920:92923 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R92919:92919 compcert.lib.Integers <> n var
R92924:92932 compcert.lib.Integers Make zwordsize def
R92978:92989 compcert.lib.Integers Make same_bits_eq thm
R92978:92989 compcert.lib.Integers Make same_bits_eq thm
R93010:93022 compcert.lib.Integers Make bits_zero_ext thm
R93010:93022 compcert.lib.Integers Make bits_zero_ext thm
R93031:93038 compcert.lib.Coqlib <> zlt_true thm
R93031:93038 compcert.lib.Coqlib <> zlt_true thm
prf 93069:93082 Make sign_ext_above
R93129:93131 Coq.Init.Logic <> :type_scope:x_'='_x not
R93117:93124 compcert.lib.Integers Make sign_ext def
R93128:93128 compcert.lib.Integers <> x var
R93126:93126 compcert.lib.Integers <> n var
R93132:93132 compcert.lib.Integers <> x var
R93100:93103 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R93099:93099 compcert.lib.Integers <> n var
R93104:93112 compcert.lib.Integers Make zwordsize def
R93158:93169 compcert.lib.Integers Make same_bits_eq thm
R93158:93169 compcert.lib.Integers Make same_bits_eq thm
R93189:93196 compcert.lib.Integers Make sign_ext def
R93207:93218 compcert.lib.Integers Make testbit_repr thm
R93207:93218 compcert.lib.Integers Make testbit_repr thm
R93238:93251 compcert.lib.Integers Make Zsign_ext_spec thm
R93238:93251 compcert.lib.Integers Make Zsign_ext_spec thm
R93262:93269 compcert.lib.Coqlib <> zlt_true thm
R93262:93269 compcert.lib.Coqlib <> zlt_true thm
prf 93313:93324 Make zero_ext_and
R93363:93365 Coq.Init.Logic <> :type_scope:x_'='_x not
R93351:93358 compcert.lib.Integers Make zero_ext def
R93362:93362 compcert.lib.Integers <> x var
R93360:93360 compcert.lib.Integers <> n var
R93366:93368 compcert.lib.Integers Make and def
R93373:93376 compcert.lib.Integers Make repr def
R93386:93388 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R93379:93383 Coq.ZArith.Zpower <> two_p def
R93385:93385 compcert.lib.Integers <> n var
R93370:93370 compcert.lib.Integers <> x var
R93342:93345 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R93346:93346 compcert.lib.Integers <> n var
R93422:93433 compcert.lib.Integers Make testbit_repr thm
R93422:93433 compcert.lib.Integers Make testbit_repr thm
R93450:93466 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R93450:93466 compcert.lib.Integers Make Ztestbit_two_p_m1 thm
R0:-1 compcert.lib.Integers <> y var
R0:-1 compcert.lib.Integers <> y var
R0:-1 compcert.lib.Integers <> y var
R93492:93494 compcert.lib.Coqlib <> zlt def
R93492:93494 compcert.lib.Coqlib <> zlt def
R93513:93523 Coq.Bool.Bool <> andb_true_r thm
R93513:93523 Coq.Bool.Bool <> andb_true_r thm
R93543:93554 Coq.Bool.Bool <> andb_false_r thm
R93543:93554 Coq.Bool.Bool <> andb_false_r thm
R0:-1 compcert.lib.Integers <> y var
prf 93586:93597 Make zero_ext_mod
R93662:93664 Coq.Init.Logic <> :type_scope:x_'='_x not
R93639:93646 compcert.lib.Integers Make unsigned def
R93649:93656 compcert.lib.Integers Make zero_ext def
R93660:93660 compcert.lib.Integers <> x var
R93658:93658 compcert.lib.Integers <> n var
R93665:93668 Coq.ZArith.Zdiv <> Zmod syndef
R93684:93688 Coq.ZArith.Zpower <> two_p def
R93690:93690 compcert.lib.Integers <> n var
R93671:93678 compcert.lib.Integers Make unsigned def
R93680:93680 compcert.lib.Integers <> x var
R93615:93618 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R93620:93622 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R93619:93619 compcert.lib.Integers <> n var
R93619:93619 compcert.lib.Integers <> n var
R93623:93631 compcert.lib.Integers Make zwordsize def
R93717:93731 compcert.lib.Integers Make equal_same_bits thm
R93717:93731 compcert.lib.Integers Make equal_same_bits thm
R93752:93769 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R93752:93769 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R93786:93792 compcert.lib.Integers Make testbit def
R93795:93802 compcert.lib.Integers Make zero_ext def
R93786:93792 compcert.lib.Integers Make testbit def
R93795:93802 compcert.lib.Integers Make zero_ext def
R93826:93828 compcert.lib.Coqlib <> zlt def
R93832:93840 compcert.lib.Integers Make zwordsize def
R93826:93828 compcert.lib.Coqlib <> zlt def
R93832:93840 compcert.lib.Integers Make zwordsize def
R93854:93866 compcert.lib.Integers Make bits_zero_ext thm
R93854:93866 compcert.lib.Integers Make bits_zero_ext thm
R93885:93894 compcert.lib.Integers Make bits_above thm
R93885:93894 compcert.lib.Integers Make bits_above thm
R93905:93913 compcert.lib.Coqlib <> zlt_false thm
R93905:93913 compcert.lib.Coqlib <> zlt_false thm
prf 93960:93973 Make zero_ext_widen
R94037:94039 Coq.Init.Logic <> :type_scope:x_'='_x not
R94011:94018 compcert.lib.Integers Make zero_ext def
R94024:94031 compcert.lib.Integers Make zero_ext def
R94035:94035 compcert.lib.Integers <> x var
R94033:94033 compcert.lib.Integers <> n var
R94020:94021 compcert.lib.Integers <> n' var
R94040:94047 compcert.lib.Integers Make zero_ext def
R94051:94051 compcert.lib.Integers <> x var
R94049:94049 compcert.lib.Integers <> n var
R93994:93997 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R93999:94002 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R93998:93998 compcert.lib.Integers <> n var
R93998:93998 compcert.lib.Integers <> n var
R94003:94004 compcert.lib.Integers <> n' var
R94084:94086 compcert.lib.Coqlib <> zlt def
R94084:94086 compcert.lib.Coqlib <> zlt def
R94103:94110 compcert.lib.Coqlib <> zlt_true thm
R94103:94110 compcert.lib.Coqlib <> zlt_true thm
R94133:94135 compcert.lib.Coqlib <> zlt def
R94133:94135 compcert.lib.Coqlib <> zlt def
R0:-1 compcert.lib.Integers <> y var
R0:-1 compcert.lib.Integers <> y var
prf 94180:94193 Make sign_ext_widen
R94257:94259 Coq.Init.Logic <> :type_scope:x_'='_x not
R94231:94238 compcert.lib.Integers Make sign_ext def
R94244:94251 compcert.lib.Integers Make sign_ext def
R94255:94255 compcert.lib.Integers <> x var
R94253:94253 compcert.lib.Integers <> n var
R94240:94241 compcert.lib.Integers <> n' var
R94260:94267 compcert.lib.Integers Make sign_ext def
R94271:94271 compcert.lib.Integers <> x var
R94269:94269 compcert.lib.Integers <> n var
R94214:94216 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R94218:94222 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R94217:94217 compcert.lib.Integers <> n var
R94217:94217 compcert.lib.Integers <> n var
R94223:94224 compcert.lib.Integers <> n' var
R94301:94303 compcert.lib.Coqlib <> zlt def
R94308:94316 compcert.lib.Integers Make zwordsize def
R94301:94303 compcert.lib.Coqlib <> zlt def
R94308:94316 compcert.lib.Integers Make zwordsize def
R94343:94345 compcert.lib.Coqlib <> zlt def
R94343:94345 compcert.lib.Coqlib <> zlt def
R94373:94381 compcert.lib.Coqlib <> zlt_false thm
R94373:94381 compcert.lib.Coqlib <> zlt_false thm
R94404:94406 compcert.lib.Coqlib <> zlt def
R94411:94413 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R94404:94406 compcert.lib.Coqlib <> zlt def
R94411:94413 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R94465:94467 compcert.lib.Coqlib <> zlt def
R94465:94467 compcert.lib.Coqlib <> zlt def
R94508:94521 compcert.lib.Integers Make sign_ext_above thm
R94508:94521 compcert.lib.Integers Make sign_ext_above thm
prf 94544:94562 Make sign_zero_ext_widen
R94625:94627 Coq.Init.Logic <> :type_scope:x_'='_x not
R94599:94606 compcert.lib.Integers Make sign_ext def
R94612:94619 compcert.lib.Integers Make zero_ext def
R94623:94623 compcert.lib.Integers <> x var
R94621:94621 compcert.lib.Integers <> n var
R94608:94609 compcert.lib.Integers <> n' var
R94628:94635 compcert.lib.Integers Make zero_ext def
R94639:94639 compcert.lib.Integers <> x var
R94637:94637 compcert.lib.Integers <> n var
R94583:94586 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R94588:94590 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R94587:94587 compcert.lib.Integers <> n var
R94587:94587 compcert.lib.Integers <> n var
R94591:94592 compcert.lib.Integers <> n' var
R94669:94671 compcert.lib.Coqlib <> zlt def
R94676:94684 compcert.lib.Integers Make zwordsize def
R94669:94671 compcert.lib.Coqlib <> zlt def
R94676:94684 compcert.lib.Integers Make zwordsize def
R94714:94716 compcert.lib.Coqlib <> zlt def
R94714:94716 compcert.lib.Coqlib <> zlt def
R94744:94752 compcert.lib.Coqlib <> zlt_false thm
R94744:94752 compcert.lib.Coqlib <> zlt_false thm
R94744:94752 compcert.lib.Coqlib <> zlt_false thm
R94744:94752 compcert.lib.Coqlib <> zlt_false thm
R94795:94797 compcert.lib.Coqlib <> zlt def
R94795:94797 compcert.lib.Coqlib <> zlt def
R94830:94843 compcert.lib.Integers Make sign_ext_above thm
R94830:94843 compcert.lib.Integers Make sign_ext_above thm
prf 94866:94880 Make zero_ext_narrow
R94944:94946 Coq.Init.Logic <> :type_scope:x_'='_x not
R94918:94925 compcert.lib.Integers Make zero_ext def
R94930:94937 compcert.lib.Integers Make zero_ext def
R94942:94942 compcert.lib.Integers <> x var
R94939:94940 compcert.lib.Integers <> n' var
R94927:94927 compcert.lib.Integers <> n var
R94947:94954 compcert.lib.Integers Make zero_ext def
R94958:94958 compcert.lib.Integers <> x var
R94956:94956 compcert.lib.Integers <> n var
R94901:94904 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R94906:94909 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R94905:94905 compcert.lib.Integers <> n var
R94905:94905 compcert.lib.Integers <> n var
R94910:94911 compcert.lib.Integers <> n' var
R94991:94993 compcert.lib.Coqlib <> zlt def
R94991:94993 compcert.lib.Coqlib <> zlt def
R95010:95017 compcert.lib.Coqlib <> zlt_true thm
R95010:95017 compcert.lib.Coqlib <> zlt_true thm
prf 95073:95087 Make sign_ext_narrow
R95150:95152 Coq.Init.Logic <> :type_scope:x_'='_x not
R95124:95131 compcert.lib.Integers Make sign_ext def
R95136:95143 compcert.lib.Integers Make sign_ext def
R95148:95148 compcert.lib.Integers <> x var
R95145:95146 compcert.lib.Integers <> n' var
R95133:95133 compcert.lib.Integers <> n var
R95153:95160 compcert.lib.Integers Make sign_ext def
R95164:95164 compcert.lib.Integers <> x var
R95162:95162 compcert.lib.Integers <> n var
R95108:95110 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R95112:95115 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R95111:95111 compcert.lib.Integers <> n var
R95111:95111 compcert.lib.Integers <> n var
R95116:95117 compcert.lib.Integers <> n' var
R95194:95196 compcert.lib.Coqlib <> zlt def
R95200:95208 compcert.lib.Integers Make zwordsize def
R95194:95196 compcert.lib.Coqlib <> zlt def
R95200:95208 compcert.lib.Integers Make zwordsize def
R95235:95237 compcert.lib.Coqlib <> zlt def
R95260:95267 compcert.lib.Coqlib <> zlt_true thm
R95235:95237 compcert.lib.Coqlib <> zlt def
R95260:95267 compcert.lib.Coqlib <> zlt_true thm
R95260:95267 compcert.lib.Coqlib <> zlt_true thm
R95299:95301 compcert.lib.Coqlib <> zlt def
R95299:95301 compcert.lib.Coqlib <> zlt def
R95343:95356 compcert.lib.Integers Make sign_ext_above thm
R95343:95356 compcert.lib.Integers Make sign_ext_above thm
prf 95392:95411 Make zero_sign_ext_narrow
R95474:95476 Coq.Init.Logic <> :type_scope:x_'='_x not
R95448:95455 compcert.lib.Integers Make zero_ext def
R95460:95467 compcert.lib.Integers Make sign_ext def
R95472:95472 compcert.lib.Integers <> x var
R95469:95470 compcert.lib.Integers <> n' var
R95457:95457 compcert.lib.Integers <> n var
R95477:95484 compcert.lib.Integers Make zero_ext def
R95488:95488 compcert.lib.Integers <> x var
R95486:95486 compcert.lib.Integers <> n var
R95432:95434 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R95436:95439 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<='_x not
R95435:95435 compcert.lib.Integers <> n var
R95435:95435 compcert.lib.Integers <> n var
R95440:95441 compcert.lib.Integers <> n' var
R95518:95520 compcert.lib.Coqlib <> zlt def
R95525:95533 compcert.lib.Integers Make zwordsize def
R95518:95520 compcert.lib.Coqlib <> zlt def
R95525:95533 compcert.lib.Integers Make zwordsize def
R95563:95565 compcert.lib.Coqlib <> zlt def
R95563:95565 compcert.lib.Coqlib <> zlt def
R95589:95596 compcert.lib.Coqlib <> zlt_true thm
R95589:95596 compcert.lib.Coqlib <> zlt_true thm
R95645:95658 compcert.lib.Integers Make sign_ext_above thm
R95645:95658 compcert.lib.Integers Make sign_ext_above thm
prf 95681:95693 Make zero_ext_idem
R95745:95747 Coq.Init.Logic <> :type_scope:x_'='_x not
R95720:95727 compcert.lib.Integers Make zero_ext def
R95732:95739 compcert.lib.Integers Make zero_ext def
R95743:95743 compcert.lib.Integers <> x var
R95741:95741 compcert.lib.Integers <> n var
R95729:95729 compcert.lib.Integers <> n var
R95748:95755 compcert.lib.Integers Make zero_ext def
R95759:95759 compcert.lib.Integers <> x var
R95757:95757 compcert.lib.Integers <> n var
R95711:95714 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R95715:95715 compcert.lib.Integers <> n var
R95785:95798 compcert.lib.Integers Make zero_ext_widen thm
R95785:95798 compcert.lib.Integers Make zero_ext_widen thm
prf 95822:95834 Make sign_ext_idem
R95885:95887 Coq.Init.Logic <> :type_scope:x_'='_x not
R95860:95867 compcert.lib.Integers Make sign_ext def
R95872:95879 compcert.lib.Integers Make sign_ext def
R95883:95883 compcert.lib.Integers <> x var
R95881:95881 compcert.lib.Integers <> n var
R95869:95869 compcert.lib.Integers <> n var
R95888:95895 compcert.lib.Integers Make sign_ext def
R95899:95899 compcert.lib.Integers <> x var
R95897:95897 compcert.lib.Integers <> n var
R95852:95854 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R95855:95855 compcert.lib.Integers <> n var
R95925:95938 compcert.lib.Integers Make sign_ext_widen thm
R95925:95938 compcert.lib.Integers Make sign_ext_widen thm
prf 95962:95978 Make sign_ext_zero_ext
R96029:96031 Coq.Init.Logic <> :type_scope:x_'='_x not
R96004:96011 compcert.lib.Integers Make sign_ext def
R96016:96023 compcert.lib.Integers Make zero_ext def
R96027:96027 compcert.lib.Integers <> x var
R96025:96025 compcert.lib.Integers <> n var
R96013:96013 compcert.lib.Integers <> n var
R96032:96039 compcert.lib.Integers Make sign_ext def
R96043:96043 compcert.lib.Integers <> x var
R96041:96041 compcert.lib.Integers <> n var
R95996:95998 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R95999:95999 compcert.lib.Integers <> n var
R96073:96075 compcert.lib.Coqlib <> zlt def
R96079:96087 compcert.lib.Integers Make zwordsize def
R96073:96075 compcert.lib.Coqlib <> zlt def
R96079:96087 compcert.lib.Integers Make zwordsize def
R96117:96119 compcert.lib.Coqlib <> zlt def
R96117:96119 compcert.lib.Coqlib <> zlt def
R96138:96145 compcert.lib.Coqlib <> zlt_true thm
R96138:96145 compcert.lib.Coqlib <> zlt_true thm
R96164:96171 compcert.lib.Coqlib <> zlt_true thm
R96164:96171 compcert.lib.Coqlib <> zlt_true thm
R96200:96202 compcert.lib.Coqlib <> zlt def
R96200:96202 compcert.lib.Coqlib <> zlt def
R96227:96240 compcert.lib.Integers Make zero_ext_above thm
R96227:96240 compcert.lib.Integers Make zero_ext_above thm
prf 96263:96279 Make zero_ext_sign_ext
R96330:96332 Coq.Init.Logic <> :type_scope:x_'='_x not
R96305:96312 compcert.lib.Integers Make zero_ext def
R96317:96324 compcert.lib.Integers Make sign_ext def
R96328:96328 compcert.lib.Integers <> x var
R96326:96326 compcert.lib.Integers <> n var
R96314:96314 compcert.lib.Integers <> n var
R96333:96340 compcert.lib.Integers Make zero_ext def
R96344:96344 compcert.lib.Integers <> x var
R96342:96342 compcert.lib.Integers <> n var
R96297:96299 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R96300:96300 compcert.lib.Integers <> n var
R96370:96389 compcert.lib.Integers Make zero_sign_ext_narrow thm
R96370:96389 compcert.lib.Integers Make zero_sign_ext_narrow thm
prf 96413:96440 Make sign_ext_equal_if_zero_equal
R96515:96517 Coq.Init.Logic <> :type_scope:x_'='_x not
R96503:96510 compcert.lib.Integers Make sign_ext def
R96514:96514 compcert.lib.Integers <> x var
R96512:96512 compcert.lib.Integers <> n var
R96518:96525 compcert.lib.Integers Make sign_ext def
R96529:96529 compcert.lib.Integers <> y var
R96527:96527 compcert.lib.Integers <> n var
R96482:96484 Coq.Init.Logic <> :type_scope:x_'='_x not
R96470:96477 compcert.lib.Integers Make zero_ext def
R96481:96481 compcert.lib.Integers <> x var
R96479:96479 compcert.lib.Integers <> n var
R96485:96492 compcert.lib.Integers Make zero_ext def
R96496:96496 compcert.lib.Integers <> y var
R96494:96494 compcert.lib.Integers <> n var
R96460:96462 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R96463:96463 compcert.lib.Integers <> n var
R96561:96577 compcert.lib.Integers Make sign_ext_zero_ext thm
R96561:96577 compcert.lib.Integers Make sign_ext_zero_ext thm
R96601:96617 compcert.lib.Integers Make sign_ext_zero_ext thm
R96601:96617 compcert.lib.Integers Make sign_ext_zero_ext thm
prf 96653:96669 Make zero_ext_shru_shl
R96720:96723 compcert.lib.Integers Make repr def
R96735:96737 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96726:96734 compcert.lib.Integers Make zwordsize def
R96738:96738 compcert.lib.Integers <> n var
R96758:96760 Coq.Init.Logic <> :type_scope:x_'='_x not
R96746:96753 compcert.lib.Integers Make zero_ext def
R96757:96757 compcert.lib.Integers <> x var
R96755:96755 compcert.lib.Integers <> n var
R96761:96764 compcert.lib.Integers Make shru def
R96776:96776 compcert.lib.Integers <> y var
R96767:96769 compcert.lib.Integers Make shl def
R96773:96773 compcert.lib.Integers <> y var
R96771:96771 compcert.lib.Integers <> x var
R96689:96691 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R96693:96695 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R96692:96692 compcert.lib.Integers <> n var
R96692:96692 compcert.lib.Integers <> n var
R96696:96704 compcert.lib.Integers Make zwordsize def
R96816:96818 Coq.Init.Logic <> :type_scope:x_'='_x not
R96806:96813 compcert.lib.Integers Make unsigned def
R96828:96830 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96819:96827 compcert.lib.Integers Make zwordsize def
R96816:96818 Coq.Init.Logic <> :type_scope:x_'='_x not
R96806:96813 compcert.lib.Integers Make unsigned def
R96828:96830 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R96819:96827 compcert.lib.Integers Make zwordsize def
R96855:96867 compcert.lib.Integers Make unsigned_repr thm
R96855:96867 compcert.lib.Integers Make unsigned_repr thm
R96881:96901 compcert.lib.Integers Make wordsize_max_unsigned thm
R96881:96901 compcert.lib.Integers Make wordsize_max_unsigned thm
R96919:96930 compcert.lib.Integers Make same_bits_eq thm
R96919:96930 compcert.lib.Integers Make same_bits_eq thm
R96951:96963 compcert.lib.Integers Make bits_zero_ext thm
R96951:96963 compcert.lib.Integers Make bits_zero_ext thm
R96977:96985 compcert.lib.Integers Make bits_shru thm
R96977:96985 compcert.lib.Integers Make bits_shru thm
R97006:97008 compcert.lib.Coqlib <> zlt def
R97006:97008 compcert.lib.Coqlib <> zlt def
R97026:97033 compcert.lib.Coqlib <> zlt_true thm
R97026:97033 compcert.lib.Coqlib <> zlt_true thm
R97044:97051 compcert.lib.Integers Make bits_shl thm
R97044:97051 compcert.lib.Integers Make bits_shl thm
R97062:97070 compcert.lib.Coqlib <> zlt_false thm
R97062:97070 compcert.lib.Coqlib <> zlt_false thm
R97124:97132 compcert.lib.Coqlib <> zlt_false thm
R97124:97132 compcert.lib.Coqlib <> zlt_false thm
prf 97172:97187 Make sign_ext_shr_shl
R97238:97241 compcert.lib.Integers Make repr def
R97253:97255 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R97244:97252 compcert.lib.Integers Make zwordsize def
R97256:97256 compcert.lib.Integers <> n var
R97276:97278 Coq.Init.Logic <> :type_scope:x_'='_x not
R97264:97271 compcert.lib.Integers Make sign_ext def
R97275:97275 compcert.lib.Integers <> x var
R97273:97273 compcert.lib.Integers <> n var
R97279:97281 compcert.lib.Integers Make shr def
R97293:97293 compcert.lib.Integers <> y var
R97284:97286 compcert.lib.Integers Make shl def
R97290:97290 compcert.lib.Integers <> y var
R97288:97288 compcert.lib.Integers <> x var
R97207:97209 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R97211:97213 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R97210:97210 compcert.lib.Integers <> n var
R97210:97210 compcert.lib.Integers <> n var
R97214:97222 compcert.lib.Integers Make zwordsize def
R97333:97335 Coq.Init.Logic <> :type_scope:x_'='_x not
R97323:97330 compcert.lib.Integers Make unsigned def
R97345:97347 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R97336:97344 compcert.lib.Integers Make zwordsize def
R97333:97335 Coq.Init.Logic <> :type_scope:x_'='_x not
R97323:97330 compcert.lib.Integers Make unsigned def
R97345:97347 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R97336:97344 compcert.lib.Integers Make zwordsize def
R97372:97384 compcert.lib.Integers Make unsigned_repr thm
R97372:97384 compcert.lib.Integers Make unsigned_repr thm
R97398:97418 compcert.lib.Integers Make wordsize_max_unsigned thm
R97398:97418 compcert.lib.Integers Make wordsize_max_unsigned thm
R97436:97447 compcert.lib.Integers Make same_bits_eq thm
R97436:97447 compcert.lib.Integers Make same_bits_eq thm
R97468:97480 compcert.lib.Integers Make bits_sign_ext thm
R97468:97480 compcert.lib.Integers Make bits_sign_ext thm
R97494:97501 compcert.lib.Integers Make bits_shr thm
R97494:97501 compcert.lib.Integers Make bits_shr thm
R97522:97524 compcert.lib.Coqlib <> zlt def
R97522:97524 compcert.lib.Coqlib <> zlt def
R97542:97549 compcert.lib.Coqlib <> zlt_true thm
R97542:97549 compcert.lib.Coqlib <> zlt_true thm
R97560:97567 compcert.lib.Integers Make bits_shl thm
R97560:97567 compcert.lib.Integers Make bits_shl thm
R97578:97586 compcert.lib.Coqlib <> zlt_false thm
R97578:97586 compcert.lib.Coqlib <> zlt_false thm
R97640:97648 compcert.lib.Coqlib <> zlt_false thm
R97640:97648 compcert.lib.Coqlib <> zlt_false thm
R97659:97666 compcert.lib.Integers Make bits_shl thm
R97659:97666 compcert.lib.Integers Make bits_shl thm
R97677:97685 compcert.lib.Coqlib <> zlt_false thm
R97677:97685 compcert.lib.Coqlib <> zlt_false thm
prf 97860:97873 Make zero_ext_range
R97913:97916 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97940:97942 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97917:97924 compcert.lib.Integers Make unsigned def
R97927:97934 compcert.lib.Integers Make zero_ext def
R97938:97938 compcert.lib.Integers <> x var
R97936:97936 compcert.lib.Integers <> n var
R97917:97924 compcert.lib.Integers Make unsigned def
R97927:97934 compcert.lib.Integers Make zero_ext def
R97938:97938 compcert.lib.Integers <> x var
R97936:97936 compcert.lib.Integers <> n var
R97943:97947 Coq.ZArith.Zpower <> two_p def
R97949:97949 compcert.lib.Integers <> n var
R97891:97894 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97896:97898 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R97895:97895 compcert.lib.Integers <> n var
R97895:97895 compcert.lib.Integers <> n var
R97899:97907 compcert.lib.Integers Make zwordsize def
R97977:97988 compcert.lib.Integers Make zero_ext_mod thm
R97977:97988 compcert.lib.Integers Make zero_ext_mod thm
R98003:98010 Coq.ZArith.Zdiv <> Z_mod_lt thm
R98003:98010 Coq.ZArith.Zdiv <> Z_mod_lt thm
R98019:98031 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R98019:98031 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 98054:98067 Make eqmod_zero_ext
R98106:98110 compcert.lib.Integers Make eqmod def
R98149:98156 compcert.lib.Integers Make unsigned def
R98158:98158 compcert.lib.Integers <> x var
R98123:98130 compcert.lib.Integers Make unsigned def
R98133:98140 compcert.lib.Integers Make zero_ext def
R98144:98144 compcert.lib.Integers <> x var
R98142:98142 compcert.lib.Integers <> n var
R98113:98117 Coq.ZArith.Zpower <> two_p def
R98119:98119 compcert.lib.Integers <> n var
R98085:98088 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R98090:98092 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R98089:98089 compcert.lib.Integers <> n var
R98089:98089 compcert.lib.Integers <> n var
R98093:98101 compcert.lib.Integers Make zwordsize def
R98187:98198 compcert.lib.Integers Make zero_ext_mod thm
R98187:98198 compcert.lib.Integers Make zero_ext_mod thm
R98213:98221 compcert.lib.Integers Make eqmod_sym thm
R98213:98221 compcert.lib.Integers Make eqmod_sym thm
R98230:98238 compcert.lib.Integers Make eqmod_mod thm
R98230:98238 compcert.lib.Integers Make eqmod_mod thm
R98250:98262 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R98250:98262 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 98402:98415 Make sign_ext_range
R98465:98468 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R98490:98492 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R98453:98453 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R98454:98458 Coq.ZArith.Zpower <> two_p def
R98462:98462 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98461:98461 compcert.lib.Integers <> n var
R98469:98474 compcert.lib.Integers Make signed def
R98477:98484 compcert.lib.Integers Make sign_ext def
R98488:98488 compcert.lib.Integers <> x var
R98486:98486 compcert.lib.Integers <> n var
R98469:98474 compcert.lib.Integers Make signed def
R98477:98484 compcert.lib.Integers Make sign_ext def
R98488:98488 compcert.lib.Integers <> x var
R98486:98486 compcert.lib.Integers <> n var
R98493:98497 Coq.ZArith.Zpower <> two_p def
R98501:98501 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98500:98500 compcert.lib.Integers <> n var
R98433:98435 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R98437:98439 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R98436:98436 compcert.lib.Integers <> n var
R98436:98436 compcert.lib.Integers <> n var
R98440:98448 compcert.lib.Integers Make zwordsize def
R98531:98546 compcert.lib.Integers Make sign_ext_shr_shl thm
R98531:98546 compcert.lib.Integers Make sign_ext_shr_shl thm
R98568:98570 compcert.lib.Integers Make shl def
R98575:98578 compcert.lib.Integers Make repr def
R98590:98592 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98581:98589 compcert.lib.Integers Make zwordsize def
R98568:98570 compcert.lib.Integers Make shl def
R98575:98578 compcert.lib.Integers Make repr def
R98590:98592 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98581:98589 compcert.lib.Integers Make zwordsize def
R98622:98624 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R98609:98613 Coq.ZArith.Zpower <> two_p def
R98617:98619 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98638:98650 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R98622:98624 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R98609:98613 Coq.ZArith.Zpower <> two_p def
R98617:98619 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98638:98650 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R98702:98704 Coq.Init.Logic <> :type_scope:x_'='_x not
R98671:98678 compcert.lib.Integers Make unsigned def
R98681:98684 compcert.lib.Integers Make repr def
R98696:98698 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98687:98695 compcert.lib.Integers Make zwordsize def
R98714:98716 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98705:98713 compcert.lib.Integers Make zwordsize def
R98702:98704 Coq.Init.Logic <> :type_scope:x_'='_x not
R98671:98678 compcert.lib.Integers Make unsigned def
R98681:98684 compcert.lib.Integers Make repr def
R98696:98698 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98687:98695 compcert.lib.Integers Make zwordsize def
R98714:98716 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98705:98713 compcert.lib.Integers Make zwordsize def
R98731:98743 compcert.lib.Integers Make unsigned_repr thm
R98731:98743 compcert.lib.Integers Make unsigned_repr thm
R98776:98796 compcert.lib.Integers Make wordsize_max_unsigned thm
R98776:98796 compcert.lib.Integers Make wordsize_max_unsigned thm
R98816:98828 compcert.lib.Integers Make shr_div_two_p thm
R98816:98828 compcert.lib.Integers Make shr_div_two_p thm
R98841:98851 compcert.lib.Integers Make signed_repr thm
R98841:98851 compcert.lib.Integers Make signed_repr thm
R98876:98890 compcert.lib.Coqlib <> Zdiv_interval_1 thm
R98876:98890 compcert.lib.Coqlib <> Zdiv_interval_1 thm
R98916:98928 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R98916:98928 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R98964:98966 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R98949:98950 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R98951:98955 Coq.ZArith.Zpower <> two_p def
R98959:98961 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98967:98971 Coq.ZArith.Zpower <> two_p def
R98983:98985 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98974:98982 compcert.lib.Integers Make zwordsize def
R99001:99003 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R99041:99041 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R99017:99019 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R99004:99008 Coq.ZArith.Zpower <> two_p def
R99012:99014 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99020:99024 Coq.ZArith.Zpower <> two_p def
R99036:99038 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99027:99035 compcert.lib.Integers Make zwordsize def
R99001:99003 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R99041:99041 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R99017:99019 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R99004:99008 Coq.ZArith.Zpower <> two_p def
R99012:99014 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99020:99024 Coq.ZArith.Zpower <> two_p def
R99036:99038 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99027:99035 compcert.lib.Integers Make zwordsize def
R98964:98966 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R98949:98950 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R98951:98955 Coq.ZArith.Zpower <> two_p def
R98959:98961 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98967:98971 Coq.ZArith.Zpower <> two_p def
R98983:98985 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R98974:98982 compcert.lib.Integers Make zwordsize def
R99066:99077 Coq.ZArith.Zpower <> two_p_is_exp thm
R99066:99077 Coq.ZArith.Zpower <> two_p_is_exp thm
R99096:99099 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R99113:99113 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R99092:99094 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99109:99111 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99100:99108 compcert.lib.Integers Make zwordsize def
R99131:99133 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99122:99130 compcert.lib.Integers Make zwordsize def
R99131:99133 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99122:99130 compcert.lib.Integers Make zwordsize def
R99096:99099 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R99113:99113 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R99092:99094 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99109:99111 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R99100:99108 compcert.lib.Integers Make zwordsize def
R99160:99177 compcert.lib.Integers Make half_modulus_power thm
R99160:99177 compcert.lib.Integers Make half_modulus_power thm
R99194:99205 compcert.lib.Integers Make signed_range thm
R99194:99205 compcert.lib.Integers Make signed_range thm
R99218:99227 compcert.lib.Integers Make min_signed def
R99230:99239 compcert.lib.Integers Make max_signed def
R99274:99288 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R99274:99288 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R99297:99308 compcert.lib.Integers Make signed_range thm
R99297:99308 compcert.lib.Integers Make signed_range thm
R99325:99338 compcert.lib.Integers Make min_signed_neg thm
R99325:99338 compcert.lib.Integers Make min_signed_neg thm
R99361:99374 compcert.lib.Integers Make max_signed_pos thm
R99361:99374 compcert.lib.Integers Make max_signed_pos thm
R99404:99416 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R99404:99416 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 99438:99452 Make eqmod_sign_ext'
R99492:99496 compcert.lib.Integers Make eqmod def
R99535:99542 compcert.lib.Integers Make unsigned def
R99544:99544 compcert.lib.Integers <> x var
R99509:99516 compcert.lib.Integers Make unsigned def
R99519:99526 compcert.lib.Integers Make sign_ext def
R99530:99530 compcert.lib.Integers <> x var
R99528:99528 compcert.lib.Integers <> n var
R99499:99503 Coq.ZArith.Zpower <> two_p def
R99505:99505 compcert.lib.Integers <> n var
R99470:99472 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R99474:99476 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R99473:99473 compcert.lib.Integers <> n var
R99473:99473 compcert.lib.Integers <> n var
R99477:99485 compcert.lib.Integers Make zwordsize def
R99578:99585 Coq.ZArith.BinInt Z to_nat def
R99578:99585 Coq.ZArith.BinInt Z to_nat def
R99611:99613 Coq.Init.Logic <> :type_scope:x_'='_x not
R99601:99608 Coq.ZArith.BinInt Z of_nat def
R99627:99634 Coq.ZArith.Znat Z2Nat id thm
R99611:99613 Coq.Init.Logic <> :type_scope:x_'='_x not
R99601:99608 Coq.ZArith.BinInt Z of_nat def
R99627:99634 Coq.ZArith.Znat Z2Nat id thm
R99673:99691 compcert.lib.Coqlib <> two_power_nat_two_p thm
R99673:99691 compcert.lib.Coqlib <> two_power_nat_two_p thm
R99703:99717 compcert.lib.Integers Make eqmod_same_bits thm
R99703:99717 compcert.lib.Integers Make eqmod_same_bits thm
R99770:99776 compcert.lib.Integers Make testbit def
R99779:99786 compcert.lib.Integers Make sign_ext def
R99770:99776 compcert.lib.Integers Make testbit def
R99779:99786 compcert.lib.Integers Make sign_ext def
R99805:99817 compcert.lib.Integers Make bits_sign_ext thm
R99805:99817 compcert.lib.Integers Make bits_sign_ext thm
R99831:99838 compcert.lib.Coqlib <> zlt_true thm
R99831:99838 compcert.lib.Coqlib <> zlt_true thm
prf 99880:99893 Make eqmod_sign_ext
R99933:99937 compcert.lib.Integers Make eqmod def
R99974:99981 compcert.lib.Integers Make unsigned def
R99983:99983 compcert.lib.Integers <> x var
R99950:99955 compcert.lib.Integers Make signed def
R99958:99965 compcert.lib.Integers Make sign_ext def
R99969:99969 compcert.lib.Integers <> x var
R99967:99967 compcert.lib.Integers <> n var
R99940:99944 Coq.ZArith.Zpower <> two_p def
R99946:99946 compcert.lib.Integers <> n var
R99911:99913 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R99915:99917 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R99914:99914 compcert.lib.Integers <> n var
R99914:99914 compcert.lib.Integers <> n var
R99918:99926 compcert.lib.Integers Make zwordsize def
R100028:100035 compcert.lib.Integers Make unsigned def
R100038:100045 compcert.lib.Integers Make sign_ext def
R100010:100020 compcert.lib.Integers Make eqmod_trans thm
R100028:100035 compcert.lib.Integers Make unsigned def
R100038:100045 compcert.lib.Integers Make sign_ext def
R100010:100020 compcert.lib.Integers Make eqmod_trans thm
R100082:100088 compcert.lib.Integers Make modulus def
R100063:100075 compcert.lib.Integers Make eqmod_divides thm
R100082:100088 compcert.lib.Integers Make modulus def
R100063:100075 compcert.lib.Integers Make eqmod_divides thm
R100097:100115 compcert.lib.Integers Make eqm_signed_unsigned thm
R100097:100115 compcert.lib.Integers Make eqm_signed_unsigned thm
R100129:100133 Coq.ZArith.Zpower <> two_p def
R100145:100147 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R100136:100144 compcert.lib.Integers Make zwordsize def
R100129:100133 Coq.ZArith.Zpower <> two_p def
R100145:100147 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R100136:100144 compcert.lib.Integers Make zwordsize def
R100163:100169 compcert.lib.Integers Make modulus def
R100180:100198 compcert.lib.Coqlib <> two_power_nat_two_p thm
R100180:100198 compcert.lib.Coqlib <> two_power_nat_two_p thm
R100206:100214 compcert.lib.Integers Make zwordsize def
R100206:100214 compcert.lib.Integers Make zwordsize def
R100230:100241 Coq.ZArith.Zpower <> two_p_is_exp thm
R100230:100241 Coq.ZArith.Zpower <> two_p_is_exp thm
R100283:100297 compcert.lib.Integers Make eqmod_sign_ext' thm
R100283:100297 compcert.lib.Integers Make eqmod_sign_ext' thm
prf 100396:100409 Make one_bits_range
R100462:100464 Coq.Init.Logic <> :type_scope:x_'='_x not
R100447:100449 compcert.lib.Integers Make ltu def
R100453:100461 compcert.lib.Integers Make iwordsize def
R100451:100451 compcert.lib.Integers <> i var
R100465:100468 Coq.Init.Datatypes <> true constr
R100426:100427 Coq.Lists.List <> In def
R100432:100439 compcert.lib.Integers Make one_bits def
R100441:100441 compcert.lib.Integers <> x var
R100429:100429 compcert.lib.Integers <> i var
R100545:100547 Coq.Init.Logic <> :type_scope:x_'='_x not
R100523:100525 compcert.lib.Integers Make ltu def
R100536:100544 compcert.lib.Integers Make iwordsize def
R100528:100531 compcert.lib.Integers Make repr def
R100533:100533 compcert.lib.Integers <> p var
R100548:100551 Coq.Init.Datatypes <> true constr
R100502:100505 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R100507:100509 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R100506:100506 compcert.lib.Integers <> p var
R100506:100506 compcert.lib.Integers <> p var
R100510:100518 compcert.lib.Integers Make zwordsize def
R100545:100547 Coq.Init.Logic <> :type_scope:x_'='_x not
R100523:100525 compcert.lib.Integers Make ltu def
R100536:100544 compcert.lib.Integers Make iwordsize def
R100528:100531 compcert.lib.Integers Make repr def
R100533:100533 compcert.lib.Integers <> p var
R100548:100551 Coq.Init.Datatypes <> true constr
R100502:100505 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R100507:100509 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R100506:100506 compcert.lib.Integers <> p var
R100506:100506 compcert.lib.Integers <> p var
R100510:100518 compcert.lib.Integers Make zwordsize def
R100574:100576 compcert.lib.Integers Make ltu def
R100579:100587 compcert.lib.Integers Make iwordsize def
R100596:100603 compcert.lib.Coqlib <> zlt_true thm
R100596:100603 compcert.lib.Coqlib <> zlt_true thm
R100626:100638 compcert.lib.Integers Make unsigned_repr thm
R100626:100638 compcert.lib.Integers Make unsigned_repr thm
R100626:100638 compcert.lib.Integers Make unsigned_repr thm
R100626:100638 compcert.lib.Integers Make unsigned_repr thm
R100626:100638 compcert.lib.Integers Make unsigned_repr thm
R100626:100638 compcert.lib.Integers Make unsigned_repr thm
R0:-1 compcert.lib.Integers <> y var
R100664:100684 compcert.lib.Integers Make wordsize_max_unsigned thm
R100664:100684 compcert.lib.Integers Make wordsize_max_unsigned thm
R100709:100729 compcert.lib.Integers Make wordsize_max_unsigned thm
R100709:100729 compcert.lib.Integers Make wordsize_max_unsigned thm
R100756:100763 compcert.lib.Integers Make one_bits def
R100783:100797 compcert.lib.Coqlib <> list_in_map_inv thm
R100783:100797 compcert.lib.Coqlib <> list_in_map_inv thm
R100874:100881 compcert.lib.Integers Make unsigned def
R100851:100866 compcert.lib.Integers Make Z_one_bits_range thm
R100874:100881 compcert.lib.Integers Make unsigned def
R100851:100866 compcert.lib.Integers Make Z_one_bits_range thm
def 100908:100922 Make int_of_one_bits
R100928:100931 Coq.Init.Datatypes <> list ind
R100933:100935 compcert.lib.Integers Make int rec
R100940:100942 compcert.lib.Integers Make int rec
R100955:100955 compcert.lib.Integers <> l var
R100966:100968 Coq.Init.Datatypes <> nil constr
R100973:100976 compcert.lib.Integers Make zero def
R100983:100986 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R100992:100994 compcert.lib.Integers Make add def
R101009:101023 compcert.lib.Integers <> int_of_one_bits def
R100997:100999 compcert.lib.Integers Make shl def
R101001:101003 compcert.lib.Integers Make one def
prf 101044:101058 Make one_bits_decomp
R101074:101076 Coq.Init.Logic <> :type_scope:x_'='_x not
R101073:101073 compcert.lib.Integers <> x var
R101077:101091 compcert.lib.Integers Make int_of_one_bits def
R101094:101101 compcert.lib.Integers Make one_bits def
R101103:101103 compcert.lib.Integers <> x var
R101141:101144 compcert.lib.Integers Make repr def
R101147:101156 compcert.lib.Integers Make powerserie def
R101159:101168 compcert.lib.Integers Make Z_one_bits def
R101180:101187 compcert.lib.Integers Make unsigned def
R101170:101177 compcert.lib.Integers Make wordsize def
R101141:101144 compcert.lib.Integers Make repr def
R101147:101156 compcert.lib.Integers Make powerserie def
R101159:101168 compcert.lib.Integers Make Z_one_bits def
R101180:101187 compcert.lib.Integers Make unsigned def
R101170:101177 compcert.lib.Integers Make wordsize def
R101214:101217 compcert.lib.Integers Make repr def
R101220:101227 compcert.lib.Integers Make unsigned def
R101214:101217 compcert.lib.Integers Make repr def
R101220:101227 compcert.lib.Integers Make unsigned def
R101265:101285 compcert.lib.Integers Make Z_one_bits_powerserie thm
R101265:101285 compcert.lib.Integers Make Z_one_bits_powerserie thm
R101315:101322 compcert.lib.Integers Make one_bits def
R101340:101355 compcert.lib.Integers Make Z_one_bits_range thm
R101358:101365 compcert.lib.Integers Make unsigned def
R101340:101355 compcert.lib.Integers Make Z_one_bits_range thm
R101358:101365 compcert.lib.Integers Make unsigned def
R101386:101395 compcert.lib.Integers Make Z_one_bits def
R101407:101414 compcert.lib.Integers Make unsigned def
R101397:101404 compcert.lib.Integers Make wordsize def
R101386:101395 compcert.lib.Integers Make Z_one_bits def
R101407:101414 compcert.lib.Integers Make unsigned def
R101397:101404 compcert.lib.Integers Make wordsize def
R101501:101503 compcert.lib.Integers Make add def
R101512:101523 compcert.lib.Integers Make eqm_samerepr thm
R101512:101523 compcert.lib.Integers Make eqm_samerepr thm
R101534:101540 compcert.lib.Integers Make eqm_add thm
R101534:101540 compcert.lib.Integers Make eqm_add thm
R101551:101563 compcert.lib.Integers Make shl_mul_two_p thm
R101551:101563 compcert.lib.Integers Make shl_mul_two_p thm
R101574:101583 compcert.lib.Integers Make mul_commut thm
R101574:101583 compcert.lib.Integers Make mul_commut thm
R101597:101603 compcert.lib.Integers Make mul_one thm
R101597:101603 compcert.lib.Integers Make mul_one thm
R101612:101630 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R101612:101630 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R101644:101656 compcert.lib.Integers Make unsigned_repr thm
R101644:101656 compcert.lib.Integers Make unsigned_repr thm
R101694:101698 Coq.Lists.List <> in_eq thm
R101694:101698 Coq.Lists.List <> in_eq thm
R101718:101738 compcert.lib.Integers Make wordsize_max_unsigned thm
R101718:101738 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 101856:101865 Make negate_cmp
R101913:101915 Coq.Init.Logic <> :type_scope:x_'='_x not
R101884:101886 compcert.lib.Integers Make cmp def
R101912:101912 compcert.lib.Integers <> y var
R101910:101910 compcert.lib.Integers <> x var
R101889:101905 compcert.lib.Integers Make negate_comparison def
R101907:101907 compcert.lib.Integers <> c var
R101916:101919 Coq.Init.Datatypes <> negb def
R101922:101924 compcert.lib.Integers Make cmp def
R101930:101930 compcert.lib.Integers <> y var
R101928:101928 compcert.lib.Integers <> x var
R101926:101926 compcert.lib.Integers <> c var
R101982:101990 Coq.Bool.Bool <> negb_elim syndef
R101982:101990 Coq.Bool.Bool <> negb_elim syndef
R101982:101990 Coq.Bool.Bool <> negb_elim syndef
R101982:101990 Coq.Bool.Bool <> negb_elim syndef
R101982:101990 Coq.Bool.Bool <> negb_elim syndef
R101982:101990 Coq.Bool.Bool <> negb_elim syndef
R101982:101990 Coq.Bool.Bool <> negb_elim syndef
prf 102013:102023 Make negate_cmpu
R102072:102074 Coq.Init.Logic <> :type_scope:x_'='_x not
R102042:102045 compcert.lib.Integers Make cmpu def
R102071:102071 compcert.lib.Integers <> y var
R102069:102069 compcert.lib.Integers <> x var
R102048:102064 compcert.lib.Integers Make negate_comparison def
R102066:102066 compcert.lib.Integers <> c var
R102075:102078 Coq.Init.Datatypes <> negb def
R102081:102084 compcert.lib.Integers Make cmpu def
R102090:102090 compcert.lib.Integers <> y var
R102088:102088 compcert.lib.Integers <> x var
R102086:102086 compcert.lib.Integers <> c var
R102142:102150 Coq.Bool.Bool <> negb_elim syndef
R102142:102150 Coq.Bool.Bool <> negb_elim syndef
R102142:102150 Coq.Bool.Bool <> negb_elim syndef
R102142:102150 Coq.Bool.Bool <> negb_elim syndef
R102142:102150 Coq.Bool.Bool <> negb_elim syndef
R102142:102150 Coq.Bool.Bool <> negb_elim syndef
R102142:102150 Coq.Bool.Bool <> negb_elim syndef
prf 102173:102180 Make swap_cmp
R102226:102228 Coq.Init.Logic <> :type_scope:x_'='_x not
R102199:102201 compcert.lib.Integers Make cmp def
R102225:102225 compcert.lib.Integers <> y var
R102223:102223 compcert.lib.Integers <> x var
R102204:102218 compcert.lib.Integers Make swap_comparison def
R102220:102220 compcert.lib.Integers <> c var
R102229:102231 compcert.lib.Integers Make cmp def
R102237:102237 compcert.lib.Integers <> x var
R102235:102235 compcert.lib.Integers <> y var
R102233:102233 compcert.lib.Integers <> c var
R102288:102293 compcert.lib.Integers Make eq_sym thm
R102288:102293 compcert.lib.Integers Make eq_sym thm
R102309:102314 compcert.lib.Integers Make eq_sym thm
R102309:102314 compcert.lib.Integers Make eq_sym thm
prf 102331:102339 Make swap_cmpu
R102386:102388 Coq.Init.Logic <> :type_scope:x_'='_x not
R102358:102361 compcert.lib.Integers Make cmpu def
R102385:102385 compcert.lib.Integers <> y var
R102383:102383 compcert.lib.Integers <> x var
R102364:102378 compcert.lib.Integers Make swap_comparison def
R102380:102380 compcert.lib.Integers <> c var
R102389:102392 compcert.lib.Integers Make cmpu def
R102398:102398 compcert.lib.Integers <> x var
R102396:102396 compcert.lib.Integers <> y var
R102394:102394 compcert.lib.Integers <> c var
R102449:102454 compcert.lib.Integers Make eq_sym thm
R102449:102454 compcert.lib.Integers Make eq_sym thm
R102470:102475 compcert.lib.Integers Make eq_sym thm
R102470:102475 compcert.lib.Integers Make eq_sym thm
prf 102490:102501 Make translate_eq
R102544:102546 Coq.Init.Logic <> :type_scope:x_'='_x not
R102522:102523 compcert.lib.Integers Make eq def
R102536:102538 compcert.lib.Integers Make add def
R102542:102542 compcert.lib.Integers <> d var
R102540:102540 compcert.lib.Integers <> y var
R102526:102528 compcert.lib.Integers Make add def
R102532:102532 compcert.lib.Integers <> d var
R102530:102530 compcert.lib.Integers <> x var
R102547:102548 compcert.lib.Integers Make eq def
R102552:102552 compcert.lib.Integers <> y var
R102550:102550 compcert.lib.Integers <> x var
R102579:102580 compcert.lib.Integers Make eq def
R102589:102591 compcert.lib.Coqlib <> zeq def
R102607:102614 compcert.lib.Integers Make unsigned def
R102594:102601 compcert.lib.Integers Make unsigned def
R102589:102591 compcert.lib.Coqlib <> zeq def
R102607:102614 compcert.lib.Integers Make unsigned def
R102594:102601 compcert.lib.Integers Make unsigned def
R102637:102639 compcert.lib.Integers Make add def
R102659:102666 compcert.lib.Coqlib <> zeq_true thm
R102659:102666 compcert.lib.Coqlib <> zeq_true thm
R102677:102685 compcert.lib.Coqlib <> zeq_false thm
R102677:102685 compcert.lib.Coqlib <> zeq_false thm
R102695:102697 compcert.lib.Integers Make add def
R102730:102741 compcert.lib.Integers Make eqm_small_eq thm
R102730:102741 compcert.lib.Integers Make eqm_small_eq thm
R102771:102778 compcert.lib.Integers Make unsigned def
R102789:102789 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102813:102816 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102800:102802 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102790:102797 compcert.lib.Integers Make unsigned def
R102803:102810 compcert.lib.Integers Make unsigned def
R102817:102824 compcert.lib.Integers Make unsigned def
R102789:102789 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102813:102816 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102800:102802 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102790:102797 compcert.lib.Integers Make unsigned def
R102803:102810 compcert.lib.Integers Make unsigned def
R102817:102824 compcert.lib.Integers Make unsigned def
R102771:102778 compcert.lib.Integers Make unsigned def
R102841:102848 compcert.lib.Integers Make unsigned def
R102859:102859 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102883:102886 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102870:102872 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102860:102867 compcert.lib.Integers Make unsigned def
R102873:102880 compcert.lib.Integers Make unsigned def
R102887:102894 compcert.lib.Integers Make unsigned def
R102859:102859 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102883:102886 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R102870:102872 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102860:102867 compcert.lib.Integers Make unsigned def
R102873:102880 compcert.lib.Integers Make unsigned def
R102887:102894 compcert.lib.Integers Make unsigned def
R102841:102848 compcert.lib.Integers Make unsigned def
R102908:102914 compcert.lib.Integers Make eqm_sub thm
R102908:102914 compcert.lib.Integers Make eqm_sub thm
R102939:102946 compcert.lib.Integers Make unsigned def
R102949:102952 compcert.lib.Integers Make repr def
R102965:102967 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102955:102962 compcert.lib.Integers Make unsigned def
R102968:102975 compcert.lib.Integers Make unsigned def
R102923:102931 compcert.lib.Integers Make eqm_trans thm
R102939:102946 compcert.lib.Integers Make unsigned def
R102949:102952 compcert.lib.Integers Make repr def
R102965:102967 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R102955:102962 compcert.lib.Integers Make unsigned def
R102968:102975 compcert.lib.Integers Make unsigned def
R102923:102931 compcert.lib.Integers Make eqm_trans thm
R103024:103031 compcert.lib.Integers Make unsigned def
R103034:103037 compcert.lib.Integers Make repr def
R103050:103052 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103040:103047 compcert.lib.Integers Make unsigned def
R103053:103060 compcert.lib.Integers Make unsigned def
R103008:103016 compcert.lib.Integers Make eqm_trans thm
R103024:103031 compcert.lib.Integers Make unsigned def
R103034:103037 compcert.lib.Integers Make repr def
R103050:103052 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103040:103047 compcert.lib.Integers Make unsigned def
R103053:103060 compcert.lib.Integers Make unsigned def
R103008:103016 compcert.lib.Integers Make eqm_trans thm
prf 103149:103161 Make translate_ltu
R103305:103307 Coq.Init.Logic <> :type_scope:x_'='_x not
R103282:103284 compcert.lib.Integers Make ltu def
R103297:103299 compcert.lib.Integers Make add def
R103303:103303 compcert.lib.Integers <> d var
R103301:103301 compcert.lib.Integers <> y var
R103287:103289 compcert.lib.Integers Make add def
R103293:103293 compcert.lib.Integers <> d var
R103291:103291 compcert.lib.Integers <> x var
R103308:103310 compcert.lib.Integers Make ltu def
R103314:103314 compcert.lib.Integers <> y var
R103312:103312 compcert.lib.Integers <> x var
R103233:103236 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103260:103263 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103247:103249 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103237:103244 compcert.lib.Integers Make unsigned def
R103246:103246 compcert.lib.Integers <> y var
R103250:103257 compcert.lib.Integers Make unsigned def
R103259:103259 compcert.lib.Integers <> d var
R103247:103249 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103237:103244 compcert.lib.Integers Make unsigned def
R103246:103246 compcert.lib.Integers <> y var
R103250:103257 compcert.lib.Integers Make unsigned def
R103259:103259 compcert.lib.Integers <> d var
R103264:103275 compcert.lib.Integers Make max_unsigned def
R103183:103186 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103210:103213 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103197:103199 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103187:103194 compcert.lib.Integers Make unsigned def
R103196:103196 compcert.lib.Integers <> x var
R103200:103207 compcert.lib.Integers Make unsigned def
R103209:103209 compcert.lib.Integers <> d var
R103197:103199 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103187:103194 compcert.lib.Integers Make unsigned def
R103196:103196 compcert.lib.Integers <> x var
R103200:103207 compcert.lib.Integers Make unsigned def
R103209:103209 compcert.lib.Integers <> d var
R103214:103225 compcert.lib.Integers Make max_unsigned def
R103341:103343 compcert.lib.Integers Make add def
R103353:103355 compcert.lib.Integers Make ltu def
R103375:103387 compcert.lib.Integers Make unsigned_repr thm
R103375:103387 compcert.lib.Integers Make unsigned_repr thm
R103375:103387 compcert.lib.Integers Make unsigned_repr thm
R103375:103387 compcert.lib.Integers Make unsigned_repr thm
R103375:103387 compcert.lib.Integers Make unsigned_repr thm
R103375:103387 compcert.lib.Integers Make unsigned_repr thm
R103402:103404 compcert.lib.Coqlib <> zlt def
R103420:103427 compcert.lib.Integers Make unsigned def
R103407:103414 compcert.lib.Integers Make unsigned def
R103402:103404 compcert.lib.Coqlib <> zlt def
R103420:103427 compcert.lib.Integers Make unsigned def
R103407:103414 compcert.lib.Integers Make unsigned def
R103449:103456 compcert.lib.Coqlib <> zlt_true thm
R103449:103456 compcert.lib.Coqlib <> zlt_true thm
R103474:103482 compcert.lib.Coqlib <> zlt_false thm
R103474:103482 compcert.lib.Coqlib <> zlt_false thm
prf 103506:103519 Make translate_cmpu
R103668:103670 Coq.Init.Logic <> :type_scope:x_'='_x not
R103642:103645 compcert.lib.Integers Make cmpu def
R103660:103662 compcert.lib.Integers Make add def
R103666:103666 compcert.lib.Integers <> d var
R103664:103664 compcert.lib.Integers <> y var
R103650:103652 compcert.lib.Integers Make add def
R103656:103656 compcert.lib.Integers <> d var
R103654:103654 compcert.lib.Integers <> x var
R103647:103647 compcert.lib.Integers <> c var
R103671:103674 compcert.lib.Integers Make cmpu def
R103680:103680 compcert.lib.Integers <> y var
R103678:103678 compcert.lib.Integers <> x var
R103676:103676 compcert.lib.Integers <> c var
R103593:103596 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103620:103623 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103607:103609 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103597:103604 compcert.lib.Integers Make unsigned def
R103606:103606 compcert.lib.Integers <> y var
R103610:103617 compcert.lib.Integers Make unsigned def
R103619:103619 compcert.lib.Integers <> d var
R103607:103609 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103597:103604 compcert.lib.Integers Make unsigned def
R103606:103606 compcert.lib.Integers <> y var
R103610:103617 compcert.lib.Integers Make unsigned def
R103619:103619 compcert.lib.Integers <> d var
R103624:103635 compcert.lib.Integers Make max_unsigned def
R103543:103546 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103570:103573 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103557:103559 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103547:103554 compcert.lib.Integers Make unsigned def
R103556:103556 compcert.lib.Integers <> x var
R103560:103567 compcert.lib.Integers Make unsigned def
R103569:103569 compcert.lib.Integers <> d var
R103557:103559 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103547:103554 compcert.lib.Integers Make unsigned def
R103556:103556 compcert.lib.Integers <> x var
R103560:103567 compcert.lib.Integers Make unsigned def
R103569:103569 compcert.lib.Integers <> d var
R103574:103585 compcert.lib.Integers Make max_unsigned def
R103707:103710 compcert.lib.Integers Make cmpu def
R103723:103734 compcert.lib.Integers Make translate_eq thm
R103723:103734 compcert.lib.Integers Make translate_eq thm
R103752:103764 compcert.lib.Integers Make translate_ltu thm
R103752:103764 compcert.lib.Integers Make translate_ltu thm
R103752:103764 compcert.lib.Integers Make translate_ltu thm
R103752:103764 compcert.lib.Integers Make translate_ltu thm
R103752:103764 compcert.lib.Integers Make translate_ltu thm
R103752:103764 compcert.lib.Integers Make translate_ltu thm
R103752:103764 compcert.lib.Integers Make translate_ltu thm
R103752:103764 compcert.lib.Integers Make translate_ltu thm
prf 103787:103798 Make translate_lt
R103947:103949 Coq.Init.Logic <> :type_scope:x_'='_x not
R103925:103926 compcert.lib.Integers Make lt def
R103939:103941 compcert.lib.Integers Make add def
R103945:103945 compcert.lib.Integers <> d var
R103943:103943 compcert.lib.Integers <> y var
R103929:103931 compcert.lib.Integers Make add def
R103935:103935 compcert.lib.Integers <> d var
R103933:103933 compcert.lib.Integers <> x var
R103950:103951 compcert.lib.Integers Make lt def
R103955:103955 compcert.lib.Integers <> y var
R103953:103953 compcert.lib.Integers <> x var
R103882:103885 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103905:103908 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103872:103881 compcert.lib.Integers Make min_signed def
R103894:103896 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103886:103891 compcert.lib.Integers Make signed def
R103893:103893 compcert.lib.Integers <> y var
R103897:103902 compcert.lib.Integers Make signed def
R103904:103904 compcert.lib.Integers <> d var
R103894:103896 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103886:103891 compcert.lib.Integers Make signed def
R103893:103893 compcert.lib.Integers <> y var
R103897:103902 compcert.lib.Integers Make signed def
R103904:103904 compcert.lib.Integers <> d var
R103909:103918 compcert.lib.Integers Make max_signed def
R103829:103832 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103852:103855 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R103819:103828 compcert.lib.Integers Make min_signed def
R103841:103843 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103833:103838 compcert.lib.Integers Make signed def
R103840:103840 compcert.lib.Integers <> x var
R103844:103849 compcert.lib.Integers Make signed def
R103851:103851 compcert.lib.Integers <> d var
R103841:103843 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R103833:103838 compcert.lib.Integers Make signed def
R103840:103840 compcert.lib.Integers <> x var
R103844:103849 compcert.lib.Integers Make signed def
R103851:103851 compcert.lib.Integers <> d var
R103856:103865 compcert.lib.Integers Make max_signed def
R103990:103999 compcert.lib.Integers Make add_signed thm
R103990:103999 compcert.lib.Integers Make add_signed thm
R103990:103999 compcert.lib.Integers Make add_signed thm
R103990:103999 compcert.lib.Integers Make add_signed thm
R104009:104010 compcert.lib.Integers Make lt def
R104030:104040 compcert.lib.Integers Make signed_repr thm
R104030:104040 compcert.lib.Integers Make signed_repr thm
R104030:104040 compcert.lib.Integers Make signed_repr thm
R104030:104040 compcert.lib.Integers Make signed_repr thm
R104030:104040 compcert.lib.Integers Make signed_repr thm
R104030:104040 compcert.lib.Integers Make signed_repr thm
R104055:104057 compcert.lib.Coqlib <> zlt def
R104071:104076 compcert.lib.Integers Make signed def
R104060:104065 compcert.lib.Integers Make signed def
R104055:104057 compcert.lib.Coqlib <> zlt def
R104071:104076 compcert.lib.Integers Make signed def
R104060:104065 compcert.lib.Integers Make signed def
R104098:104105 compcert.lib.Coqlib <> zlt_true thm
R104098:104105 compcert.lib.Coqlib <> zlt_true thm
R104123:104131 compcert.lib.Coqlib <> zlt_false thm
R104123:104131 compcert.lib.Coqlib <> zlt_false thm
prf 104155:104167 Make translate_cmp
R104321:104323 Coq.Init.Logic <> :type_scope:x_'='_x not
R104296:104298 compcert.lib.Integers Make cmp def
R104313:104315 compcert.lib.Integers Make add def
R104319:104319 compcert.lib.Integers <> d var
R104317:104317 compcert.lib.Integers <> y var
R104303:104305 compcert.lib.Integers Make add def
R104309:104309 compcert.lib.Integers <> d var
R104307:104307 compcert.lib.Integers <> x var
R104300:104300 compcert.lib.Integers <> c var
R104324:104326 compcert.lib.Integers Make cmp def
R104332:104332 compcert.lib.Integers <> y var
R104330:104330 compcert.lib.Integers <> x var
R104328:104328 compcert.lib.Integers <> c var
R104253:104256 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R104276:104279 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R104243:104252 compcert.lib.Integers Make min_signed def
R104265:104267 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R104257:104262 compcert.lib.Integers Make signed def
R104264:104264 compcert.lib.Integers <> y var
R104268:104273 compcert.lib.Integers Make signed def
R104275:104275 compcert.lib.Integers <> d var
R104265:104267 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R104257:104262 compcert.lib.Integers Make signed def
R104264:104264 compcert.lib.Integers <> y var
R104268:104273 compcert.lib.Integers Make signed def
R104275:104275 compcert.lib.Integers <> d var
R104280:104289 compcert.lib.Integers Make max_signed def
R104200:104203 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R104223:104226 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R104190:104199 compcert.lib.Integers Make min_signed def
R104212:104214 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R104204:104209 compcert.lib.Integers Make signed def
R104211:104211 compcert.lib.Integers <> x var
R104215:104220 compcert.lib.Integers Make signed def
R104222:104222 compcert.lib.Integers <> d var
R104212:104214 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R104204:104209 compcert.lib.Integers Make signed def
R104211:104211 compcert.lib.Integers <> x var
R104215:104220 compcert.lib.Integers Make signed def
R104222:104222 compcert.lib.Integers <> d var
R104227:104236 compcert.lib.Integers Make max_signed def
R104359:104361 compcert.lib.Integers Make cmp def
R104374:104385 compcert.lib.Integers Make translate_eq thm
R104374:104385 compcert.lib.Integers Make translate_eq thm
R104403:104414 compcert.lib.Integers Make translate_lt thm
R104403:104414 compcert.lib.Integers Make translate_lt thm
R104403:104414 compcert.lib.Integers Make translate_lt thm
R104403:104414 compcert.lib.Integers Make translate_lt thm
R104403:104414 compcert.lib.Integers Make translate_lt thm
R104403:104414 compcert.lib.Integers Make translate_lt thm
R104403:104414 compcert.lib.Integers Make translate_lt thm
R104403:104414 compcert.lib.Integers Make translate_lt thm
prf 104439:104460 Make notbool_isfalse_istrue
R104489:104495 compcert.lib.Integers Make is_true def
R104498:104504 compcert.lib.Integers Make notbool def
R104506:104506 compcert.lib.Integers <> x var
R104475:104482 compcert.lib.Integers Make is_false def
R104484:104484 compcert.lib.Integers <> x var
R104526:104533 compcert.lib.Integers Make is_false def
R104536:104542 compcert.lib.Integers Make is_true def
R104545:104551 compcert.lib.Integers Make notbool def
R104582:104588 compcert.lib.Integers Make eq_true thm
R104582:104588 compcert.lib.Integers Make eq_true thm
R104597:104608 compcert.lib.Integers Make one_not_zero thm
R104597:104608 compcert.lib.Integers Make one_not_zero thm
prf 104626:104647 Make notbool_istrue_isfalse
R104675:104682 compcert.lib.Integers Make is_false def
R104685:104691 compcert.lib.Integers Make notbool def
R104693:104693 compcert.lib.Integers <> x var
R104662:104668 compcert.lib.Integers Make is_true def
R104670:104670 compcert.lib.Integers <> x var
R104713:104720 compcert.lib.Integers Make is_false def
R104723:104729 compcert.lib.Integers Make is_true def
R104732:104738 compcert.lib.Integers Make notbool def
R104763:104769 compcert.lib.Integers Make eq_spec thm
R104773:104776 compcert.lib.Integers Make zero def
R104763:104769 compcert.lib.Integers Make eq_spec thm
R104773:104776 compcert.lib.Integers Make zero def
R104786:104787 compcert.lib.Integers Make eq def
R104791:104794 compcert.lib.Integers Make zero def
R104786:104787 compcert.lib.Integers Make eq def
R104791:104794 compcert.lib.Integers Make zero def
prf 104842:104855 Make ltu_range_test
R104923:104926 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R104935:104937 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R104927:104932 compcert.lib.Integers Make signed def
R104934:104934 compcert.lib.Integers <> x var
R104927:104932 compcert.lib.Integers Make signed def
R104934:104934 compcert.lib.Integers <> x var
R104938:104945 compcert.lib.Integers Make unsigned def
R104947:104947 compcert.lib.Integers <> y var
R104902:104905 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R104892:104899 compcert.lib.Integers Make unsigned def
R104901:104901 compcert.lib.Integers <> y var
R104906:104915 compcert.lib.Integers Make max_signed def
R104881:104883 Coq.Init.Logic <> :type_scope:x_'='_x not
R104874:104876 compcert.lib.Integers Make ltu def
R104880:104880 compcert.lib.Integers <> y var
R104878:104878 compcert.lib.Integers <> x var
R104884:104887 Coq.Init.Datatypes <> true constr
R104976:104978 compcert.lib.Integers Make ltu def
R104996:104998 compcert.lib.Coqlib <> zlt def
R105014:105021 compcert.lib.Integers Make unsigned def
R105001:105008 compcert.lib.Integers Make unsigned def
R104996:104998 compcert.lib.Coqlib <> zlt def
R105014:105021 compcert.lib.Integers Make unsigned def
R105001:105008 compcert.lib.Integers Make unsigned def
R105056:105073 compcert.lib.Integers Make signed_eq_unsigned thm
R105056:105073 compcert.lib.Integers Make signed_eq_unsigned thm
R105090:105103 compcert.lib.Integers Make unsigned_range thm
R105090:105103 compcert.lib.Integers Make unsigned_range thm
prf 105137:105151 Make lt_sub_overflow
R105218:105220 Coq.Init.Logic <> :type_scope:x_'='_x not
R105170:105172 compcert.lib.Integers Make xor def
R105199:105206 compcert.lib.Integers Make negative def
R105209:105211 compcert.lib.Integers Make sub def
R105215:105215 compcert.lib.Integers <> y var
R105213:105213 compcert.lib.Integers <> x var
R105175:105186 compcert.lib.Integers Make sub_overflow def
R105192:105195 compcert.lib.Integers Make zero def
R105190:105190 compcert.lib.Integers <> y var
R105188:105188 compcert.lib.Integers <> x var
R105224:105225 compcert.lib.Integers Make lt def
R105229:105229 compcert.lib.Integers <> y var
R105227:105227 compcert.lib.Integers <> x var
R105245:105248 compcert.lib.Integers Make zero def
R105236:105238 compcert.lib.Integers Make one def
R105275:105282 compcert.lib.Integers Make negative def
R105285:105296 compcert.lib.Integers Make sub_overflow def
R105299:105300 compcert.lib.Integers Make lt def
R105311:105320 compcert.lib.Integers Make sub_signed thm
R105311:105320 compcert.lib.Integers Make sub_signed thm
R105334:105344 compcert.lib.Integers Make signed_zero thm
R105334:105344 compcert.lib.Integers Make signed_zero thm
R105355:105364 Coq.ZArith.BinInt <> Zminus_0_r syndef
R105355:105364 Coq.ZArith.BinInt <> Zminus_0_r syndef
R105381:105392 compcert.lib.Integers Make signed_range thm
R105398:105409 compcert.lib.Integers Make signed_range thm
R105381:105392 compcert.lib.Integers Make signed_range thm
R105398:105409 compcert.lib.Integers Make signed_range thm
R105427:105432 compcert.lib.Integers Make signed def
R105448:105453 compcert.lib.Integers Make signed def
R105427:105432 compcert.lib.Integers Make signed def
R105448:105453 compcert.lib.Integers Make signed def
R105482:105491 compcert.lib.Integers Make min_signed def
R105494:105503 compcert.lib.Integers Make max_signed def
R105524:105539 compcert.lib.Integers Make half_modulus_pos thm
R105541:105560 compcert.lib.Integers Make half_modulus_modulus thm
R105524:105539 compcert.lib.Integers Make half_modulus_pos thm
R105541:105560 compcert.lib.Integers Make half_modulus_modulus thm
R105589:105591 compcert.lib.Coqlib <> zle def
R105597:105599 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105589:105591 compcert.lib.Coqlib <> zle def
R105597:105599 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105614:105625 compcert.lib.Coqlib <> proj_sumbool def
R105641:105648 compcert.lib.Coqlib <> zle_true thm
R105641:105648 compcert.lib.Coqlib <> zle_true thm
R105683:105691 compcert.lib.Coqlib <> zlt_false thm
R105683:105691 compcert.lib.Coqlib <> zlt_false thm
R105720:105722 compcert.lib.Coqlib <> zlt def
R105732:105743 compcert.lib.Integers Make half_modulus def
R105726:105728 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105720:105722 compcert.lib.Coqlib <> zlt def
R105732:105743 compcert.lib.Integers Make half_modulus def
R105726:105728 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R105758:105769 compcert.lib.Coqlib <> proj_sumbool def
R105780:105787 compcert.lib.Coqlib <> zle_true thm
R105780:105787 compcert.lib.Coqlib <> zle_true thm
R105811:105821 compcert.lib.Integers Make signed_repr thm
R105811:105821 compcert.lib.Integers Make signed_repr thm
R105832:105840 compcert.lib.Coqlib <> zlt_false thm
R105832:105840 compcert.lib.Coqlib <> zlt_false thm
R105858:105865 compcert.lib.Integers Make xor_idem thm
R105858:105865 compcert.lib.Integers Make xor_idem thm
R105879:105888 compcert.lib.Integers Make min_signed def
R105891:105900 compcert.lib.Integers Make max_signed def
R105921:105932 compcert.lib.Coqlib <> proj_sumbool def
R105943:105951 compcert.lib.Coqlib <> zle_false thm
R105943:105951 compcert.lib.Coqlib <> zle_false thm
R105977:105982 compcert.lib.Integers Make signed def
R105985:105988 compcert.lib.Integers Make repr def
R105992:105994 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106011:106013 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106007:106009 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106014:106020 compcert.lib.Integers Make modulus def
R106011:106013 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106007:106009 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106014:106020 compcert.lib.Integers Make modulus def
R105977:105982 compcert.lib.Integers Make signed def
R105985:105988 compcert.lib.Integers Make repr def
R105992:105994 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106036:106043 compcert.lib.Coqlib <> zlt_true thm
R106036:106043 compcert.lib.Coqlib <> zlt_true thm
R106061:106068 compcert.lib.Integers Make xor_idem thm
R106061:106068 compcert.lib.Integers Make xor_idem thm
R106084:106097 compcert.lib.Integers Make signed_repr_eq thm
R106084:106097 compcert.lib.Integers Make signed_repr_eq thm
R106109:106109 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106115:106120 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106111:106113 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106121:106127 compcert.lib.Integers Make modulus def
R106137:106139 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106137:106139 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106109:106109 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106115:106120 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106111:106113 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106121:106127 compcert.lib.Integers Make modulus def
R106157:106165 compcert.lib.Coqlib <> zlt_false thm
R106157:106165 compcert.lib.Coqlib <> zlt_false thm
R106195:106205 compcert.lib.Coqlib <> Zmod_unique thm
R106195:106205 compcert.lib.Coqlib <> Zmod_unique thm
R106231:106242 compcert.lib.Coqlib <> proj_sumbool def
R106258:106265 compcert.lib.Coqlib <> zle_true thm
R106258:106265 compcert.lib.Coqlib <> zle_true thm
R106290:106300 Coq.Bool.Bool <> andb_true_r thm
R106290:106300 Coq.Bool.Bool <> andb_true_r thm
R106314:106321 compcert.lib.Coqlib <> zlt_true thm
R106314:106321 compcert.lib.Coqlib <> zlt_true thm
R106350:106352 compcert.lib.Coqlib <> zlt def
R106363:106363 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R106364:106375 compcert.lib.Integers Make half_modulus def
R106356:106358 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106350:106352 compcert.lib.Coqlib <> zlt def
R106363:106363 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R106364:106375 compcert.lib.Integers Make half_modulus def
R106356:106358 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106391:106402 compcert.lib.Coqlib <> proj_sumbool def
R106413:106421 compcert.lib.Coqlib <> zle_false thm
R106413:106421 compcert.lib.Coqlib <> zle_false thm
R106447:106452 compcert.lib.Integers Make signed def
R106455:106458 compcert.lib.Integers Make repr def
R106462:106464 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106481:106483 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106477:106479 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106484:106490 compcert.lib.Integers Make modulus def
R106481:106483 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106477:106479 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106484:106490 compcert.lib.Integers Make modulus def
R106447:106452 compcert.lib.Integers Make signed def
R106455:106458 compcert.lib.Integers Make repr def
R106462:106464 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106506:106514 compcert.lib.Coqlib <> zlt_false thm
R106506:106514 compcert.lib.Coqlib <> zlt_false thm
R106532:106539 compcert.lib.Integers Make xor_zero thm
R106532:106539 compcert.lib.Integers Make xor_zero thm
R106554:106567 compcert.lib.Integers Make signed_repr_eq thm
R106554:106567 compcert.lib.Integers Make signed_repr_eq thm
R106579:106579 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106585:106590 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106581:106583 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106591:106597 compcert.lib.Integers Make modulus def
R106611:106613 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106607:106609 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106614:106620 compcert.lib.Integers Make modulus def
R106611:106613 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R106607:106609 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106614:106620 compcert.lib.Integers Make modulus def
R106579:106579 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106585:106590 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R106581:106583 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R106591:106597 compcert.lib.Integers Make modulus def
R106637:106644 compcert.lib.Coqlib <> zlt_true thm
R106637:106644 compcert.lib.Coqlib <> zlt_true thm
R106682:106692 compcert.lib.Coqlib <> Zmod_unique thm
R106682:106692 compcert.lib.Coqlib <> Zmod_unique thm
R106723:106734 compcert.lib.Coqlib <> proj_sumbool def
R106745:106752 compcert.lib.Coqlib <> zle_true thm
R106745:106752 compcert.lib.Coqlib <> zle_true thm
R106776:106786 compcert.lib.Integers Make signed_repr thm
R106776:106786 compcert.lib.Integers Make signed_repr thm
R106797:106804 compcert.lib.Coqlib <> zlt_true thm
R106797:106804 compcert.lib.Coqlib <> zlt_true thm
R106822:106831 compcert.lib.Integers Make xor_zero_l thm
R106822:106831 compcert.lib.Integers Make xor_zero_l thm
R106845:106854 compcert.lib.Integers Make min_signed def
R106857:106866 compcert.lib.Integers Make max_signed def
def 106922:106931 Make no_overlap
R106940:106942 compcert.lib.Integers Make int rec
R106951:106951 Coq.Numbers.BinNums <> Z ind
R106961:106963 compcert.lib.Integers Make int rec
R106972:106972 Coq.Numbers.BinNums <> Z ind
R106977:106980 Coq.Init.Datatypes <> bool ind
R106997:107004 compcert.lib.Integers Make unsigned def
R107006:107009 compcert.lib.Integers <> ofs1 var
R107024:107031 compcert.lib.Integers Make unsigned def
R107033:107036 compcert.lib.Integers <> ofs2 var
R107094:107100 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R107139:107139 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R107068:107071 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R107046:107048 compcert.lib.Coqlib <> zlt def
R107061:107067 compcert.lib.Integers Make modulus def
R107053:107055 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107051:107052 compcert.lib.Integers <> x1 var
R107056:107058 compcert.lib.Integers <> sz1 var
R107072:107074 compcert.lib.Coqlib <> zlt def
R107087:107093 compcert.lib.Integers Make modulus def
R107079:107081 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107077:107078 compcert.lib.Integers <> x2 var
R107082:107084 compcert.lib.Integers <> sz2 var
R107118:107121 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R107101:107103 compcert.lib.Coqlib <> zle def
R107116:107117 compcert.lib.Integers <> x2 var
R107108:107110 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107106:107107 compcert.lib.Integers <> x1 var
R107111:107113 compcert.lib.Integers <> sz1 var
R107122:107124 compcert.lib.Coqlib <> zle def
R107137:107138 compcert.lib.Integers <> x1 var
R107129:107131 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107127:107128 compcert.lib.Integers <> x2 var
R107132:107134 compcert.lib.Integers <> sz2 var
prf 107149:107164 Make no_overlap_sound
R107323:107328 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R107295:107298 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R107289:107291 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107265:107272 compcert.lib.Integers Make unsigned def
R107275:107277 compcert.lib.Integers Make add def
R107284:107287 compcert.lib.Integers <> ofs1 var
R107279:107282 compcert.lib.Integers <> base var
R107292:107294 compcert.lib.Integers <> sz1 var
R107299:107306 compcert.lib.Integers Make unsigned def
R107309:107311 compcert.lib.Integers Make add def
R107318:107321 compcert.lib.Integers <> ofs2 var
R107313:107316 compcert.lib.Integers <> base var
R107359:107362 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R107353:107355 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107329:107336 compcert.lib.Integers Make unsigned def
R107339:107341 compcert.lib.Integers Make add def
R107348:107351 compcert.lib.Integers <> ofs2 var
R107343:107346 compcert.lib.Integers <> base var
R107356:107358 compcert.lib.Integers <> sz2 var
R107363:107370 compcert.lib.Integers Make unsigned def
R107373:107375 compcert.lib.Integers Make add def
R107382:107385 compcert.lib.Integers <> ofs1 var
R107377:107380 compcert.lib.Integers <> base var
R107252:107254 Coq.Init.Logic <> :type_scope:x_'='_x not
R107224:107233 compcert.lib.Integers Make no_overlap def
R107249:107251 compcert.lib.Integers <> sz2 var
R107244:107247 compcert.lib.Integers <> ofs2 var
R107240:107242 compcert.lib.Integers <> sz1 var
R107235:107238 compcert.lib.Integers <> ofs1 var
R107255:107258 Coq.Init.Datatypes <> true constr
R107216:107218 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R107213:107215 compcert.lib.Integers <> sz2 var
R107205:107207 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R107202:107204 compcert.lib.Integers <> sz1 var
R107419:107427 Coq.Init.Datatypes <> andb_prop thm
R107419:107427 Coq.Init.Datatypes <> andb_prop thm
R107461:107469 Coq.Init.Datatypes <> andb_prop thm
R107461:107469 Coq.Init.Datatypes <> andb_prop thm
R107500:107516 compcert.lib.Coqlib <> proj_sumbool_true thm
R107559:107575 compcert.lib.Coqlib <> proj_sumbool_true thm
R107654:107657 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R107637:107640 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R107631:107633 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107618:107625 compcert.lib.Integers Make unsigned def
R107641:107648 compcert.lib.Integers Make unsigned def
R107677:107680 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R107671:107673 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107658:107665 compcert.lib.Integers Make unsigned def
R107681:107688 compcert.lib.Integers Make unsigned def
R107654:107657 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R107637:107640 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R107631:107633 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107618:107625 compcert.lib.Integers Make unsigned def
R107641:107648 compcert.lib.Integers Make unsigned def
R107677:107680 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R107671:107673 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R107658:107665 compcert.lib.Integers Make unsigned def
R107681:107688 compcert.lib.Integers Make unsigned def
R107709:107716 Coq.Bool.Bool <> orb_prop thm
R107709:107716 Coq.Bool.Bool <> orb_prop thm
R107740:107756 compcert.lib.Coqlib <> proj_sumbool_true thm
R107740:107756 compcert.lib.Coqlib <> proj_sumbool_true thm
R107780:107796 compcert.lib.Coqlib <> proj_sumbool_true thm
R107780:107796 compcert.lib.Coqlib <> proj_sumbool_true thm
R107832:107845 compcert.lib.Integers Make unsigned_range thm
R107854:107867 compcert.lib.Integers Make unsigned_range thm
R107832:107845 compcert.lib.Integers Make unsigned_range thm
R107854:107867 compcert.lib.Integers Make unsigned_range thm
R107902:107920 compcert.lib.Integers Make unsigned_add_either thm
R107934:107952 compcert.lib.Integers Make unsigned_add_either thm
R107902:107920 compcert.lib.Integers Make unsigned_add_either thm
R107934:107952 compcert.lib.Integers Make unsigned_add_either thm
def 108047:108051 Make Zsize
R108057:108057 Coq.Numbers.BinNums <> Z ind
R108062:108062 Coq.Numbers.BinNums <> Z ind
R108075:108075 compcert.lib.Integers <> x var
R108086:108089 Coq.Numbers.BinNums <> Zpos constr
R108096:108099 Coq.Numbers.BinNums <> Zpos constr
R108102:108109 Coq.PArith.BinPos Pos size def
def 108144:108147 Make size
R108153:108155 compcert.lib.Integers Make int rec
R108160:108160 Coq.Numbers.BinNums <> Z ind
R108165:108169 compcert.lib.Integers Make Zsize def
R108172:108179 compcert.lib.Integers Make unsigned def
R108181:108181 compcert.lib.Integers <> x var
prf 108193:108201 Make Zsize_pos
R108215:108218 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R108219:108223 compcert.lib.Integers Make Zsize def
R108225:108225 compcert.lib.Integers <> x var
R0:-1 compcert.lib.Integers <> y var
prf 108314:108323 Make Zsize_pos'
R108346:108348 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R108349:108353 compcert.lib.Integers Make Zsize def
R108355:108355 compcert.lib.Integers <> x var
R108337:108339 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R108340:108340 compcert.lib.Integers <> x var
prf 108439:108451 Make Zsize_shiftin
R108497:108499 Coq.Init.Logic <> :type_scope:x_'='_x not
R108477:108481 compcert.lib.Integers Make Zsize def
R108484:108491 compcert.lib.Integers Make Zshiftin def
R108495:108495 compcert.lib.Integers <> x var
R108493:108493 compcert.lib.Integers <> b var
R108500:108504 Coq.ZArith.BinInt <> Zsucc syndef
R108507:108511 compcert.lib.Integers Make Zsize def
R108513:108513 compcert.lib.Integers <> x var
R108469:108471 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R108472:108472 compcert.lib.Integers <> x var
R108633:108636 Coq.Numbers.BinNums <> Zpos constr
R108640:108641 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R108603:108610 compcert.lib.Integers Make Zshiftin def
R108618:108621 Coq.Numbers.BinNums <> Zpos constr
R108612:108615 Coq.Init.Datatypes <> true constr
R108603:108610 compcert.lib.Integers Make Zshiftin def
R108618:108621 Coq.Numbers.BinNums <> Zpos constr
R108612:108615 Coq.Init.Datatypes <> true constr
R108633:108636 Coq.Numbers.BinNums <> Zpos constr
R108640:108641 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'1' not
R108672:108682 Coq.PArith.BinPos Pos add_1_r thm
R108672:108682 Coq.PArith.BinPos Pos add_1_r thm
R108733:108736 Coq.Numbers.BinNums <> Zpos constr
R108740:108741 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R108702:108709 compcert.lib.Integers Make Zshiftin def
R108718:108721 Coq.Numbers.BinNums <> Zpos constr
R108711:108715 Coq.Init.Datatypes <> false constr
R108702:108709 compcert.lib.Integers Make Zshiftin def
R108718:108721 Coq.Numbers.BinNums <> Zpos constr
R108711:108715 Coq.Init.Datatypes <> false constr
R108733:108736 Coq.Numbers.BinNums <> Zpos constr
R108740:108741 Coq.PArith.BinPosDef <> :positive_scope:x_'~'_'0' not
R108772:108782 Coq.PArith.BinPos Pos add_1_r thm
R108772:108782 Coq.PArith.BinPos Pos add_1_r thm
prf 108804:108818 Make Ztestbit_size_1
R108871:108873 Coq.Init.Logic <> :type_scope:x_'='_x not
R108842:108850 Coq.ZArith.BinInt Z testbit def
R108855:108859 Coq.ZArith.BinInt <> Zpred syndef
R108862:108866 compcert.lib.Integers Make Zsize def
R108868:108868 compcert.lib.Integers <> x var
R108852:108852 compcert.lib.Integers <> x var
R108874:108877 Coq.Init.Datatypes <> true constr
R108834:108836 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R108837:108837 compcert.lib.Integers <> x var
R108923:108938 compcert.lib.Integers Make Zshiftin_pos_ind thm
R108923:108938 compcert.lib.Integers Make Zshiftin_pos_ind thm
R108965:108977 compcert.lib.Integers Make Zsize_shiftin thm
R108965:108977 compcert.lib.Integers Make Zsize_shiftin thm
R108998:109003 Coq.ZArith.BinInt Z pred def
R109006:109011 Coq.ZArith.BinInt Z succ def
R109014:109018 compcert.lib.Integers Make Zsize def
R109031:109036 Coq.ZArith.BinInt Z succ def
R109039:109044 Coq.ZArith.BinInt Z pred def
R109047:109051 compcert.lib.Integers Make Zsize def
R109031:109036 Coq.ZArith.BinInt Z succ def
R109039:109044 Coq.ZArith.BinInt Z pred def
R109047:109051 compcert.lib.Integers Make Zsize def
R108998:109003 Coq.ZArith.BinInt Z pred def
R109006:109011 Coq.ZArith.BinInt Z succ def
R109014:109018 compcert.lib.Integers Make Zsize def
R109078:109098 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R109078:109098 compcert.lib.Integers Make Ztestbit_shiftin_succ thm
R109119:109128 compcert.lib.Integers Make Zsize_pos' thm
R109119:109128 compcert.lib.Integers Make Zsize_pos' thm
prf 109155:109169 Make Ztestbit_size_2
R109233:109235 Coq.Init.Logic <> :type_scope:x_'='_x not
R109220:109228 Coq.ZArith.BinInt Z testbit def
R109232:109232 compcert.lib.Integers <> i var
R109230:109230 compcert.lib.Integers <> x var
R109236:109240 Coq.Init.Datatypes <> false constr
R109205:109208 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R109204:109204 compcert.lib.Integers <> i var
R109209:109213 compcert.lib.Integers Make Zsize def
R109215:109215 compcert.lib.Integers <> x var
R109185:109188 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R109189:109189 compcert.lib.Integers <> x var
R109278:109280 compcert.lib.Coqlib <> zeq def
R109278:109280 compcert.lib.Coqlib <> zeq def
R109318:109327 compcert.lib.Integers Make Ztestbit_0 thm
R109318:109327 compcert.lib.Integers Make Ztestbit_0 thm
R109353:109368 compcert.lib.Integers Make Zshiftin_pos_ind thm
R109353:109368 compcert.lib.Integers Make Zshiftin_pos_ind thm
R109407:109414 compcert.lib.Integers Make Zshiftin def
R109416:109419 Coq.Init.Datatypes <> true constr
R109407:109414 compcert.lib.Integers Make Zshiftin def
R109416:109419 Coq.Init.Datatypes <> true constr
R109433:109448 compcert.lib.Integers Make Ztestbit_shiftin thm
R109433:109448 compcert.lib.Integers Make Ztestbit_shiftin thm
R109466:109474 compcert.lib.Coqlib <> zeq_false thm
R109466:109474 compcert.lib.Coqlib <> zeq_false thm
R109483:109492 compcert.lib.Integers Make Ztestbit_0 thm
R109483:109492 compcert.lib.Integers Make Ztestbit_0 thm
R109531:109543 compcert.lib.Integers Make Zsize_shiftin thm
R109531:109543 compcert.lib.Integers Make Zsize_shiftin thm
R109576:109585 compcert.lib.Integers Make Zsize_pos' thm
R109576:109585 compcert.lib.Integers Make Zsize_pos' thm
R109615:109630 compcert.lib.Integers Make Ztestbit_shiftin thm
R109615:109630 compcert.lib.Integers Make Ztestbit_shiftin thm
R109641:109649 compcert.lib.Coqlib <> zeq_false thm
R109641:109649 compcert.lib.Coqlib <> zeq_false thm
prf 109715:109730 Make Zsize_interval_1
R109756:109759 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R109761:109763 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R109760:109760 compcert.lib.Integers <> x var
R109760:109760 compcert.lib.Integers <> x var
R109764:109768 Coq.ZArith.Zpower <> two_p def
R109771:109775 compcert.lib.Integers Make Zsize def
R109777:109777 compcert.lib.Integers <> x var
R109746:109749 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R109750:109750 compcert.lib.Integers <> x var
R109810:109812 Coq.Init.Logic <> :type_scope:x_'='_x not
R109814:109819 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R109835:109835 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R109820:109824 Coq.ZArith.Zpower <> two_p def
R109827:109831 compcert.lib.Integers Make Zsize def
R109810:109812 Coq.Init.Logic <> :type_scope:x_'='_x not
R109814:109819 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R109835:109835 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R109820:109824 Coq.ZArith.Zpower <> two_p def
R109827:109831 compcert.lib.Integers Make Zsize def
R109849:109863 compcert.lib.Integers Make equal_same_bits thm
R109849:109863 compcert.lib.Integers Make equal_same_bits thm
R109886:109903 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R109886:109903 compcert.lib.Integers Make Ztestbit_mod_two_p thm
R109927:109929 compcert.lib.Coqlib <> zlt def
R109934:109938 compcert.lib.Integers Make Zsize def
R109927:109929 compcert.lib.Coqlib <> zlt def
R109934:109938 compcert.lib.Integers Make Zsize def
R109957:109971 compcert.lib.Integers Make Ztestbit_size_2 thm
R109957:109971 compcert.lib.Integers Make Ztestbit_size_2 thm
R109991:109999 compcert.lib.Integers Make Zsize_pos thm
R109991:109999 compcert.lib.Integers Make Zsize_pos thm
R110051:110058 Coq.ZArith.Zdiv <> Z_mod_lt thm
R110051:110058 Coq.ZArith.Zdiv <> Z_mod_lt thm
R110067:110079 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R110067:110079 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R110088:110096 compcert.lib.Integers Make Zsize_pos thm
R110088:110096 compcert.lib.Integers Make Zsize_pos thm
prf 110118:110133 Make Zsize_interval_2
R110181:110184 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R110180:110180 compcert.lib.Integers <> n var
R110185:110189 compcert.lib.Integers Make Zsize def
R110191:110191 compcert.lib.Integers <> x var
R110161:110164 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R110166:110168 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R110165:110165 compcert.lib.Integers <> x var
R110165:110165 compcert.lib.Integers <> x var
R110169:110173 Coq.ZArith.Zpower <> two_p def
R110175:110175 compcert.lib.Integers <> n var
R110151:110154 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R110155:110155 compcert.lib.Integers <> n var
R110221:110228 Coq.ZArith.BinInt Z to_nat def
R110221:110228 Coq.ZArith.BinInt Z to_nat def
R110255:110257 Coq.Init.Logic <> :type_scope:x_'='_x not
R110245:110252 Coq.ZArith.BinInt Z of_nat def
R110271:110278 Coq.ZArith.Znat Z2Nat id thm
R110255:110257 Coq.Init.Logic <> :type_scope:x_'='_x not
R110245:110252 Coq.ZArith.BinInt Z of_nat def
R110271:110278 Coq.ZArith.Znat Z2Nat id thm
R110322:110340 compcert.lib.Coqlib <> two_power_nat_two_p thm
R110322:110340 compcert.lib.Coqlib <> two_power_nat_two_p thm
R110362:110364 compcert.lib.Coqlib <> zeq def
R110362:110364 compcert.lib.Coqlib <> zeq def
R110411:110413 compcert.lib.Coqlib <> zlt def
R110418:110422 compcert.lib.Integers Make Zsize def
R110411:110413 compcert.lib.Coqlib <> zlt def
R110418:110422 compcert.lib.Integers Make Zsize def
R110446:110459 compcert.lib.Integers Make Ztestbit_above thm
R110466:110470 Coq.ZArith.BinInt <> Zpred syndef
R110473:110477 compcert.lib.Integers Make Zsize def
R110446:110459 compcert.lib.Integers Make Ztestbit_above thm
R110466:110470 Coq.ZArith.BinInt <> Zpred syndef
R110473:110477 compcert.lib.Integers Make Zsize def
R110509:110523 compcert.lib.Integers Make Ztestbit_size_1 thm
R110509:110523 compcert.lib.Integers Make Ztestbit_size_1 thm
prf 110557:110570 Make Zsize_monotone
R110609:110612 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R110602:110606 compcert.lib.Integers Make Zsize def
R110608:110608 compcert.lib.Integers <> x var
R110613:110617 compcert.lib.Integers Make Zsize def
R110619:110619 compcert.lib.Integers <> y var
R110588:110591 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R110593:110596 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R110592:110592 compcert.lib.Integers <> x var
R110592:110592 compcert.lib.Integers <> x var
R110597:110597 compcert.lib.Integers <> y var
R110645:110650 Coq.ZArith.Zorder <> Zge_le syndef
R110645:110650 Coq.ZArith.Zorder <> Zge_le syndef
R110659:110674 compcert.lib.Integers Make Zsize_interval_2 thm
R110659:110674 compcert.lib.Integers Make Zsize_interval_2 thm
R110683:110691 compcert.lib.Integers Make Zsize_pos thm
R110683:110691 compcert.lib.Integers Make Zsize_pos thm
R110705:110720 compcert.lib.Integers Make Zsize_interval_1 thm
R110705:110720 compcert.lib.Integers Make Zsize_interval_1 thm
prf 110758:110766 Make size_zero
R110778:110780 Coq.Init.Logic <> :type_scope:x_'='_x not
R110769:110772 compcert.lib.Integers Make size def
R110774:110777 compcert.lib.Integers Make zero def
R110800:110803 compcert.lib.Integers Make size def
R110814:110826 compcert.lib.Integers Make unsigned_zero thm
R110814:110826 compcert.lib.Integers Make unsigned_zero thm
prf 110851:110861 Make bits_size_1
R110884:110887 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R110877:110879 Coq.Init.Logic <> :type_scope:x_'='_x not
R110876:110876 compcert.lib.Integers <> x var
R110880:110883 compcert.lib.Integers Make zero def
R110914:110916 Coq.Init.Logic <> :type_scope:x_'='_x not
R110888:110894 compcert.lib.Integers Make testbit def
R110899:110903 Coq.ZArith.BinInt <> Zpred syndef
R110906:110909 compcert.lib.Integers Make size def
R110911:110911 compcert.lib.Integers <> x var
R110896:110896 compcert.lib.Integers <> x var
R110917:110920 Coq.Init.Datatypes <> true constr
R110950:110952 compcert.lib.Coqlib <> zeq def
R110955:110962 compcert.lib.Integers Make unsigned def
R110950:110952 compcert.lib.Coqlib <> zeq def
R110955:110962 compcert.lib.Integers Make unsigned def
R110991:111003 compcert.lib.Integers Make repr_unsigned thm
R110991:111003 compcert.lib.Integers Make repr_unsigned thm
R111041:111055 compcert.lib.Integers Make Ztestbit_size_1 thm
R111041:111055 compcert.lib.Integers Make Ztestbit_size_1 thm
R111070:111083 compcert.lib.Integers Make unsigned_range thm
R111070:111083 compcert.lib.Integers Make unsigned_range thm
prf 111110:111120 Make bits_size_2
R111163:111165 Coq.Init.Logic <> :type_scope:x_'='_x not
R111152:111158 compcert.lib.Integers Make testbit def
R111162:111162 compcert.lib.Integers <> i var
R111160:111160 compcert.lib.Integers <> x var
R111166:111170 Coq.Init.Datatypes <> false constr
R111143:111146 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R111137:111140 compcert.lib.Integers Make size def
R111142:111142 compcert.lib.Integers <> x var
R111147:111147 compcert.lib.Integers <> i var
R111196:111210 compcert.lib.Integers Make Ztestbit_size_2 thm
R111196:111210 compcert.lib.Integers Make Ztestbit_size_2 thm
R111225:111238 compcert.lib.Integers Make unsigned_range thm
R111225:111238 compcert.lib.Integers Make unsigned_range thm
R111260:111263 compcert.lib.Integers Make size def
R111260:111263 compcert.lib.Integers Make size def
prf 111291:111300 Make size_range
R111316:111319 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R111326:111329 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R111320:111323 compcert.lib.Integers Make size def
R111325:111325 compcert.lib.Integers <> x var
R111320:111323 compcert.lib.Integers Make size def
R111325:111325 compcert.lib.Integers <> x var
R111330:111338 compcert.lib.Integers Make zwordsize def
R111371:111379 compcert.lib.Integers Make Zsize_pos thm
R111371:111379 compcert.lib.Integers Make Zsize_pos thm
R111394:111404 compcert.lib.Integers Make bits_size_1 thm
R111394:111404 compcert.lib.Integers Make bits_size_1 thm
R111428:111431 compcert.lib.Integers Make size def
R111442:111454 compcert.lib.Integers Make unsigned_zero thm
R111442:111454 compcert.lib.Integers Make unsigned_zero thm
R111475:111486 compcert.lib.Integers Make wordsize_pos thm
R111475:111486 compcert.lib.Integers Make wordsize_pos thm
R111508:111510 compcert.lib.Coqlib <> zle def
R111521:111529 compcert.lib.Integers Make zwordsize def
R111513:111516 compcert.lib.Integers Make size def
R111508:111510 compcert.lib.Coqlib <> zle def
R111521:111529 compcert.lib.Integers Make zwordsize def
R111513:111516 compcert.lib.Integers Make size def
R111550:111559 compcert.lib.Integers Make bits_above thm
R111550:111559 compcert.lib.Integers Make bits_above thm
prf 111601:111611 Make bits_size_3
R111707:111710 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R111701:111704 compcert.lib.Integers Make size def
R111706:111706 compcert.lib.Integers <> x var
R111711:111711 compcert.lib.Integers <> n var
R111686:111688 Coq.Init.Logic <> :type_scope:x_'='_x not
R111675:111681 compcert.lib.Integers Make testbit def
R111685:111685 compcert.lib.Integers <> i var
R111683:111683 compcert.lib.Integers <> x var
R111689:111693 Coq.Init.Datatypes <> false constr
R111654:111657 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R111659:111661 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R111653:111653 compcert.lib.Integers <> n var
R111658:111658 compcert.lib.Integers <> i var
R111658:111658 compcert.lib.Integers <> i var
R111662:111670 compcert.lib.Integers Make zwordsize def
R111631:111634 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R111635:111635 compcert.lib.Integers <> n var
R111741:111743 compcert.lib.Coqlib <> zle def
R111746:111749 compcert.lib.Integers Make size def
R111741:111743 compcert.lib.Coqlib <> zle def
R111746:111749 compcert.lib.Integers Make size def
R111777:111787 compcert.lib.Integers Make bits_size_1 thm
R111777:111787 compcert.lib.Integers Make bits_size_1 thm
R111812:111815 compcert.lib.Integers Make size def
R111826:111838 compcert.lib.Integers Make unsigned_zero thm
R111826:111838 compcert.lib.Integers Make unsigned_zero thm
R111868:111873 Coq.ZArith.BinInt Z pred def
R111876:111879 compcert.lib.Integers Make size def
R111868:111873 Coq.ZArith.BinInt Z pred def
R111876:111879 compcert.lib.Integers Make size def
R111920:111929 compcert.lib.Integers Make size_range thm
R111920:111929 compcert.lib.Integers Make size_range thm
prf 111956:111966 Make bits_size_4
R112094:112096 Coq.Init.Logic <> :type_scope:x_'='_x not
R112088:112091 compcert.lib.Integers Make size def
R112093:112093 compcert.lib.Integers <> x var
R112097:112097 compcert.lib.Integers <> n var
R112073:112075 Coq.Init.Logic <> :type_scope:x_'='_x not
R112062:112068 compcert.lib.Integers Make testbit def
R112072:112072 compcert.lib.Integers <> i var
R112070:112070 compcert.lib.Integers <> x var
R112076:112080 Coq.Init.Datatypes <> false constr
R112041:112044 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R112046:112048 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R112040:112040 compcert.lib.Integers <> n var
R112045:112045 compcert.lib.Integers <> i var
R112045:112045 compcert.lib.Integers <> i var
R112049:112057 compcert.lib.Integers Make zwordsize def
R112016:112018 Coq.Init.Logic <> :type_scope:x_'='_x not
R111997:112003 compcert.lib.Integers Make testbit def
R112008:112012 Coq.ZArith.BinInt <> Zpred syndef
R112014:112014 compcert.lib.Integers <> n var
R112005:112005 compcert.lib.Integers <> x var
R112019:112022 Coq.Init.Datatypes <> true constr
R111986:111989 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R111990:111990 compcert.lib.Integers <> n var
R112133:112136 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R112127:112130 compcert.lib.Integers Make size def
R112133:112136 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R112127:112130 compcert.lib.Integers Make size def
R112151:112161 compcert.lib.Integers Make bits_size_3 thm
R112151:112161 compcert.lib.Integers Make bits_size_3 thm
R112182:112184 compcert.lib.Coqlib <> zlt def
R112187:112190 compcert.lib.Integers Make size def
R112182:112184 compcert.lib.Coqlib <> zlt def
R112187:112190 compcert.lib.Integers Make size def
R112209:112219 compcert.lib.Integers Make bits_size_2 thm
R112209:112219 compcert.lib.Integers Make bits_size_2 thm
prf 112271:112285 Make size_interval_1
R112301:112304 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R112315:112317 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R112305:112312 compcert.lib.Integers Make unsigned def
R112314:112314 compcert.lib.Integers <> x var
R112305:112312 compcert.lib.Integers Make unsigned def
R112314:112314 compcert.lib.Integers <> x var
R112318:112322 Coq.ZArith.Zpower <> two_p def
R112325:112328 compcert.lib.Integers Make size def
R112330:112330 compcert.lib.Integers <> x var
R112357:112372 compcert.lib.Integers Make Zsize_interval_1 thm
R112357:112372 compcert.lib.Integers Make Zsize_interval_1 thm
R112387:112400 compcert.lib.Integers Make unsigned_range thm
R112387:112400 compcert.lib.Integers Make unsigned_range thm
prf 112427:112441 Make size_interval_2
R112498:112501 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R112497:112497 compcert.lib.Integers <> n var
R112502:112505 compcert.lib.Integers Make size def
R112507:112507 compcert.lib.Integers <> x var
R112469:112472 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R112483:112485 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R112473:112480 compcert.lib.Integers Make unsigned def
R112482:112482 compcert.lib.Integers <> x var
R112473:112480 compcert.lib.Integers Make unsigned def
R112482:112482 compcert.lib.Integers <> x var
R112486:112490 Coq.ZArith.Zpower <> two_p def
R112492:112492 compcert.lib.Integers <> n var
R112459:112462 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R112463:112463 compcert.lib.Integers <> n var
R112533:112548 compcert.lib.Integers Make Zsize_interval_2 thm
R112533:112548 compcert.lib.Integers Make Zsize_interval_2 thm
prf 112571:112578 Make size_and
R112609:112612 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R112595:112598 compcert.lib.Integers Make size def
R112601:112603 compcert.lib.Integers Make and def
R112607:112607 compcert.lib.Integers <> b var
R112605:112605 compcert.lib.Integers <> a var
R112613:112617 Coq.ZArith.BinInt Z min def
R112629:112632 compcert.lib.Integers Make size def
R112634:112634 compcert.lib.Integers <> b var
R112620:112623 compcert.lib.Integers Make size def
R112625:112625 compcert.lib.Integers <> a var
R112667:112670 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R112671:112675 Coq.ZArith.BinInt Z min def
R112687:112690 compcert.lib.Integers Make size def
R112678:112681 compcert.lib.Integers Make size def
R112667:112670 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R112671:112675 Coq.ZArith.BinInt Z min def
R112687:112690 compcert.lib.Integers Make size def
R112678:112681 compcert.lib.Integers Make size def
R112713:112722 compcert.lib.Integers Make size_range thm
R112728:112737 compcert.lib.Integers Make size_range thm
R112713:112722 compcert.lib.Integers Make size_range thm
R112728:112737 compcert.lib.Integers Make size_range thm
R112765:112775 compcert.lib.Integers Make bits_size_3 thm
R112765:112775 compcert.lib.Integers Make bits_size_3 thm
R112802:112809 compcert.lib.Integers Make bits_and thm
R112802:112809 compcert.lib.Integers Make bits_and thm
R112855:112865 compcert.lib.Integers Make bits_size_2 thm
R112855:112865 compcert.lib.Integers Make bits_size_2 thm
R112896:112906 compcert.lib.Integers Make bits_size_2 thm
R112896:112906 compcert.lib.Integers Make bits_size_2 thm
R112918:112929 Coq.Bool.Bool <> andb_false_r thm
R112918:112929 Coq.Bool.Bool <> andb_false_r thm
prf 112965:112976 Make and_interval
R112994:112997 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R113016:113018 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R112998:113005 compcert.lib.Integers Make unsigned def
R113008:113010 compcert.lib.Integers Make and def
R113014:113014 compcert.lib.Integers <> b var
R113012:113012 compcert.lib.Integers <> a var
R112998:113005 compcert.lib.Integers Make unsigned def
R113008:113010 compcert.lib.Integers Make and def
R113014:113014 compcert.lib.Integers <> b var
R113012:113012 compcert.lib.Integers <> a var
R113019:113023 Coq.ZArith.Zpower <> two_p def
R113026:113030 Coq.ZArith.BinInt Z min def
R113042:113045 compcert.lib.Integers Make size def
R113047:113047 compcert.lib.Integers <> b var
R113033:113036 compcert.lib.Integers Make size def
R113038:113038 compcert.lib.Integers <> a var
R113084:113098 compcert.lib.Integers Make size_interval_1 thm
R113101:113103 compcert.lib.Integers Make and def
R113084:113098 compcert.lib.Integers Make size_interval_1 thm
R113101:113103 compcert.lib.Integers Make and def
R113153:113156 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R113131:113135 Coq.ZArith.Zpower <> two_p def
R113138:113141 compcert.lib.Integers Make size def
R113144:113146 compcert.lib.Integers Make and def
R113157:113161 Coq.ZArith.Zpower <> two_p def
R113164:113168 Coq.ZArith.BinInt Z min def
R113180:113183 compcert.lib.Integers Make size def
R113171:113174 compcert.lib.Integers Make size def
R113153:113156 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R113131:113135 Coq.ZArith.Zpower <> two_p def
R113138:113141 compcert.lib.Integers Make size def
R113144:113146 compcert.lib.Integers Make and def
R113157:113161 Coq.ZArith.Zpower <> two_p def
R113164:113168 Coq.ZArith.BinInt Z min def
R113180:113183 compcert.lib.Integers Make size def
R113171:113174 compcert.lib.Integers Make size def
R113199:113212 compcert.lib.Coqlib <> two_p_monotone thm
R113199:113212 compcert.lib.Coqlib <> two_p_monotone thm
R113234:113243 compcert.lib.Integers Make size_range thm
R113246:113248 compcert.lib.Integers Make and def
R113234:113243 compcert.lib.Integers Make size_range thm
R113246:113248 compcert.lib.Integers Make and def
R113273:113280 compcert.lib.Integers Make size_and thm
R113273:113280 compcert.lib.Integers Make size_and thm
prf 113307:113313 Make size_or
R113343:113345 Coq.Init.Logic <> :type_scope:x_'='_x not
R113330:113333 compcert.lib.Integers Make size def
R113336:113337 compcert.lib.Integers Make or def
R113341:113341 compcert.lib.Integers <> b var
R113339:113339 compcert.lib.Integers <> a var
R113346:113350 Coq.ZArith.BinInt Z max def
R113362:113365 compcert.lib.Integers Make size def
R113367:113367 compcert.lib.Integers <> b var
R113353:113356 compcert.lib.Integers Make size def
R113358:113358 compcert.lib.Integers <> a var
R113400:113409 compcert.lib.Integers Make size_range thm
R113415:113424 compcert.lib.Integers Make size_range thm
R113400:113409 compcert.lib.Integers Make size_range thm
R113415:113424 compcert.lib.Integers Make size_range thm
R113450:113460 compcert.lib.Integers Make bits_size_1 thm
R113450:113460 compcert.lib.Integers Make bits_size_1 thm
R113485:113493 compcert.lib.Integers Make size_zero thm
R113485:113493 compcert.lib.Integers Make size_zero thm
R113504:113512 compcert.lib.Integers Make or_zero_l thm
R113504:113512 compcert.lib.Integers Make or_zero_l thm
R113540:113550 compcert.lib.Integers Make bits_size_1 thm
R113540:113550 compcert.lib.Integers Make bits_size_1 thm
R113575:113583 compcert.lib.Integers Make size_zero thm
R113575:113583 compcert.lib.Integers Make size_zero thm
R113594:113600 compcert.lib.Integers Make or_zero thm
R113594:113600 compcert.lib.Integers Make or_zero thm
R113672:113682 compcert.lib.Integers Make bits_size_4 thm
R113672:113682 compcert.lib.Integers Make bits_size_4 thm
R0:-1 compcert.lib.Integers <> y var
R113700:113706 compcert.lib.Integers Make bits_or thm
R113700:113706 compcert.lib.Integers Make bits_or thm
R113727:113736 Coq.Bool.Bool <> orb_true_r thm
R113727:113736 Coq.Bool.Bool <> orb_true_r thm
R113768:113774 compcert.lib.Integers Make bits_or thm
R113768:113774 compcert.lib.Integers Make bits_or thm
R113786:113796 compcert.lib.Integers Make bits_size_2 thm
R113786:113796 compcert.lib.Integers Make bits_size_2 thm
R113786:113796 compcert.lib.Integers Make bits_size_2 thm
R113786:113796 compcert.lib.Integers Make bits_size_2 thm
R113835:113845 compcert.lib.Integers Make bits_size_4 thm
R113835:113845 compcert.lib.Integers Make bits_size_4 thm
R0:-1 compcert.lib.Integers <> y var
R113863:113869 compcert.lib.Integers Make bits_or thm
R113863:113869 compcert.lib.Integers Make bits_or thm
R113890:113899 Coq.Bool.Bool <> orb_true_l thm
R113890:113899 Coq.Bool.Bool <> orb_true_l thm
R113915:113917 compcert.lib.Coqlib <> zeq def
R113920:113923 compcert.lib.Integers Make size def
R113915:113917 compcert.lib.Coqlib <> zeq def
R113920:113923 compcert.lib.Integers Make size def
R113939:113945 compcert.lib.Integers Make testbit def
R113962:113976 Coq.ZArith.BinInt Z testbit_neg_r thm
R113962:113976 Coq.ZArith.BinInt Z testbit_neg_r thm
R114032:114038 compcert.lib.Integers Make bits_or thm
R114032:114038 compcert.lib.Integers Make bits_or thm
R114050:114060 compcert.lib.Integers Make bits_size_2 thm
R114050:114060 compcert.lib.Integers Make bits_size_2 thm
R114050:114060 compcert.lib.Integers Make bits_size_2 thm
R114050:114060 compcert.lib.Integers Make bits_size_2 thm
prf 114107:114117 Make or_interval
R114135:114138 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R114156:114158 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R114139:114146 compcert.lib.Integers Make unsigned def
R114149:114150 compcert.lib.Integers Make or def
R114154:114154 compcert.lib.Integers <> b var
R114152:114152 compcert.lib.Integers <> a var
R114139:114146 compcert.lib.Integers Make unsigned def
R114149:114150 compcert.lib.Integers Make or def
R114154:114154 compcert.lib.Integers <> b var
R114152:114152 compcert.lib.Integers <> a var
R114159:114163 Coq.ZArith.Zpower <> two_p def
R114166:114170 Coq.ZArith.BinInt Z max def
R114182:114185 compcert.lib.Integers Make size def
R114187:114187 compcert.lib.Integers <> b var
R114173:114176 compcert.lib.Integers Make size def
R114178:114178 compcert.lib.Integers <> a var
R114220:114226 compcert.lib.Integers Make size_or thm
R114220:114226 compcert.lib.Integers Make size_or thm
R114235:114249 compcert.lib.Integers Make size_interval_1 thm
R114235:114249 compcert.lib.Integers Make size_interval_1 thm
prf 114267:114274 Make size_xor
R114305:114308 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R114291:114294 compcert.lib.Integers Make size def
R114297:114299 compcert.lib.Integers Make xor def
R114303:114303 compcert.lib.Integers <> b var
R114301:114301 compcert.lib.Integers <> a var
R114309:114313 Coq.ZArith.BinInt Z max def
R114325:114328 compcert.lib.Integers Make size def
R114330:114330 compcert.lib.Integers <> b var
R114316:114319 compcert.lib.Integers Make size def
R114321:114321 compcert.lib.Integers <> a var
R114363:114366 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R114367:114371 Coq.ZArith.BinInt Z max def
R114383:114386 compcert.lib.Integers Make size def
R114374:114377 compcert.lib.Integers Make size def
R114363:114366 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R114367:114371 Coq.ZArith.BinInt Z max def
R114383:114386 compcert.lib.Integers Make size def
R114374:114377 compcert.lib.Integers Make size def
R114409:114418 compcert.lib.Integers Make size_range thm
R114424:114433 compcert.lib.Integers Make size_range thm
R114409:114418 compcert.lib.Integers Make size_range thm
R114424:114433 compcert.lib.Integers Make size_range thm
R114461:114471 compcert.lib.Integers Make bits_size_3 thm
R114461:114471 compcert.lib.Integers Make bits_size_3 thm
R114498:114505 compcert.lib.Integers Make bits_xor thm
R114498:114505 compcert.lib.Integers Make bits_xor thm
R114517:114527 compcert.lib.Integers Make bits_size_2 thm
R114517:114527 compcert.lib.Integers Make bits_size_2 thm
R114517:114527 compcert.lib.Integers Make bits_size_2 thm
R114517:114527 compcert.lib.Integers Make bits_size_2 thm
prf 114594:114605 Make xor_interval
R114623:114626 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R114645:114647 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R114627:114634 compcert.lib.Integers Make unsigned def
R114637:114639 compcert.lib.Integers Make xor def
R114643:114643 compcert.lib.Integers <> b var
R114641:114641 compcert.lib.Integers <> a var
R114627:114634 compcert.lib.Integers Make unsigned def
R114637:114639 compcert.lib.Integers Make xor def
R114643:114643 compcert.lib.Integers <> b var
R114641:114641 compcert.lib.Integers <> a var
R114648:114652 Coq.ZArith.Zpower <> two_p def
R114655:114659 Coq.ZArith.BinInt Z max def
R114671:114674 compcert.lib.Integers Make size def
R114676:114676 compcert.lib.Integers <> b var
R114662:114665 compcert.lib.Integers Make size def
R114667:114667 compcert.lib.Integers <> a var
R114713:114727 compcert.lib.Integers Make size_interval_1 thm
R114730:114732 compcert.lib.Integers Make xor def
R114713:114727 compcert.lib.Integers Make size_interval_1 thm
R114730:114732 compcert.lib.Integers Make xor def
R114782:114785 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R114760:114764 Coq.ZArith.Zpower <> two_p def
R114767:114770 compcert.lib.Integers Make size def
R114773:114775 compcert.lib.Integers Make xor def
R114786:114790 Coq.ZArith.Zpower <> two_p def
R114793:114797 Coq.ZArith.BinInt Z max def
R114809:114812 compcert.lib.Integers Make size def
R114800:114803 compcert.lib.Integers Make size def
R114782:114785 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R114760:114764 Coq.ZArith.Zpower <> two_p def
R114767:114770 compcert.lib.Integers Make size def
R114773:114775 compcert.lib.Integers Make xor def
R114786:114790 Coq.ZArith.Zpower <> two_p def
R114793:114797 Coq.ZArith.BinInt Z max def
R114809:114812 compcert.lib.Integers Make size def
R114800:114803 compcert.lib.Integers Make size def
R114828:114841 compcert.lib.Coqlib <> two_p_monotone thm
R114828:114841 compcert.lib.Coqlib <> two_p_monotone thm
R114863:114872 compcert.lib.Integers Make size_range thm
R114875:114877 compcert.lib.Integers Make xor def
R114863:114872 compcert.lib.Integers Make size_range thm
R114875:114877 compcert.lib.Integers Make xor def
R114902:114909 compcert.lib.Integers Make size_xor thm
R114902:114909 compcert.lib.Integers Make size_xor thm
R114931:114934 compcert.lib.Integers <> <> mod
mod 115009:115019 <> Wordsize_32
def 115035:115042 Wordsize_32 wordsize
prf 115064:115080 Wordsize_32 wordsize_not_zero
R115091:115094 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R115083:115090 compcert.lib.Integers Wordsize_32 wordsize def
R115118:115125 compcert.lib.Integers Wordsize_32 wordsize def
R115149:115159 compcert.lib.Integers <> <> mod
R115177:115180 compcert.lib.Integers <> <> modtype
R115182:115192 compcert.lib.Integers <> <> modtype
mod 115170:115172 <> Int
syndef 115206:115208 <> int
R115213:115219 compcert.lib.Integers Int int rec
prf 115230:115257 <> int_wordsize_divides_modulus
R115262:115268 Coq.ZArith.Znumtheory <> Zdivide syndef
R115294:115304 compcert.lib.Integers Int modulus def
R115271:115278 Coq.ZArith.BinInt <> Z_of_nat syndef
R115280:115291 compcert.lib.Integers Int wordsize def
R115324:115328 Coq.ZArith.Zpower <> two_p def
R115333:115333 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R115324:115328 Coq.ZArith.Zpower <> two_p def
R115333:115333 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
mod 115366:115375 <> Wordsize_8
def 115391:115398 Wordsize_8 wordsize
prf 115419:115435 Wordsize_8 wordsize_not_zero
R115446:115449 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R115438:115445 compcert.lib.Integers Wordsize_8 wordsize def
R115473:115480 compcert.lib.Integers Wordsize_8 wordsize def
R115504:115513 compcert.lib.Integers <> <> mod
R115532:115535 compcert.lib.Integers <> <> modtype
R115537:115546 compcert.lib.Integers <> <> modtype
mod 115524:115527 <> Byte
syndef 115560:115563 <> byte
R115568:115575 compcert.lib.Integers Byte int rec
mod 115586:115596 <> Wordsize_64
def 115612:115619 Wordsize_64 wordsize
prf 115641:115657 Wordsize_64 wordsize_not_zero
R115668:115671 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R115660:115667 compcert.lib.Integers Wordsize_64 wordsize def
R115695:115702 compcert.lib.Integers Wordsize_64 wordsize def
R115726:115736 compcert.lib.Integers <> <> mod
mod 115747:115751 <> Int64
R115763:115766 compcert.lib.Integers <> <> modtype
R115768:115778 compcert.lib.Integers <> <> modtype
def 115847:115856 Int64 iwordsize'
R115859:115865 compcert.lib.Integers Int int rec
R115870:115877 compcert.lib.Integers Int repr def
R115879:115887 compcert.lib.Integers Int64 zwordsize def
def 115902:115905 Int64 shl'
R115911:115913 compcert.lib.Integers Int64 int rec
R115920:115926 compcert.lib.Integers Int int rec
R115930:115932 compcert.lib.Integers Int64 int rec
R115939:115942 compcert.lib.Integers Int64 repr def
R115945:115952 Coq.ZArith.BinInt Z shiftl def
R115968:115979 compcert.lib.Integers Int unsigned def
R115981:115981 compcert.lib.Integers <> y var
R115955:115962 compcert.lib.Integers Int64 unsigned def
R115964:115964 compcert.lib.Integers <> x var
def 115997:116001 Int64 shru'
R116007:116009 compcert.lib.Integers Int64 int rec
R116016:116022 compcert.lib.Integers Int int rec
R116026:116028 compcert.lib.Integers Int64 int rec
R116035:116038 compcert.lib.Integers Int64 repr def
R116041:116048 Coq.ZArith.BinInt Z shiftr def
R116064:116075 compcert.lib.Integers Int unsigned def
R116077:116077 compcert.lib.Integers <> y var
R116051:116058 compcert.lib.Integers Int64 unsigned def
R116060:116060 compcert.lib.Integers <> x var
def 116093:116096 Int64 shr'
R116102:116104 compcert.lib.Integers Int64 int rec
R116111:116117 compcert.lib.Integers Int int rec
R116121:116123 compcert.lib.Integers Int64 int rec
R116130:116133 compcert.lib.Integers Int64 repr def
R116136:116143 Coq.ZArith.BinInt Z shiftr def
R116157:116168 compcert.lib.Integers Int unsigned def
R116170:116170 compcert.lib.Integers <> y var
R116146:116151 compcert.lib.Integers Int64 signed def
R116153:116153 compcert.lib.Integers <> x var
prf 116182:116190 Int64 bits_shl'
R116255:116259 Coq.Init.Logic <> :type_scope:x_'='_x not
R116235:116241 compcert.lib.Integers Int64 testbit def
R116254:116254 compcert.lib.Integers <> i var
R116244:116247 compcert.lib.Integers Int64 shl' def
R116251:116251 compcert.lib.Integers <> y var
R116249:116249 compcert.lib.Integers <> x var
R116263:116265 compcert.lib.Coqlib <> zlt def
R116270:116281 compcert.lib.Integers Int unsigned def
R116283:116283 compcert.lib.Integers <> y var
R116267:116267 compcert.lib.Integers <> i var
R116302:116308 compcert.lib.Integers Int64 testbit def
R116314:116316 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R116313:116313 compcert.lib.Integers <> i var
R116317:116328 compcert.lib.Integers Int unsigned def
R116330:116330 compcert.lib.Integers <> y var
R116310:116310 compcert.lib.Integers <> x var
R116291:116295 Coq.Init.Datatypes <> false constr
R116212:116215 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R116217:116219 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R116216:116216 compcert.lib.Integers <> i var
R116216:116216 compcert.lib.Integers <> i var
R116220:116228 compcert.lib.Integers Int64 zwordsize def
R116358:116361 compcert.lib.Integers Int64 shl' def
R116372:116383 compcert.lib.Integers Int64 testbit_repr thm
R116372:116383 compcert.lib.Integers Int64 testbit_repr thm
R116405:116407 compcert.lib.Coqlib <> zlt def
R116412:116423 compcert.lib.Integers Int unsigned def
R116405:116407 compcert.lib.Coqlib <> zlt def
R116412:116423 compcert.lib.Integers Int unsigned def
R116439:116455 Coq.ZArith.BinInt Z shiftl_spec_low thm
R116439:116455 Coq.ZArith.BinInt Z shiftl_spec_low thm
R116472:116489 Coq.ZArith.BinInt Z shiftl_spec_high thm
R116472:116489 Coq.ZArith.BinInt Z shiftl_spec_high thm
prf 116518:116527 Int64 bits_shru'
R116593:116597 Coq.Init.Logic <> :type_scope:x_'='_x not
R116572:116578 compcert.lib.Integers Int64 testbit def
R116592:116592 compcert.lib.Integers <> i var
R116581:116585 compcert.lib.Integers Int64 shru' def
R116589:116589 compcert.lib.Integers <> y var
R116587:116587 compcert.lib.Integers <> x var
R116601:116603 compcert.lib.Coqlib <> zlt def
R116626:116634 compcert.lib.Integers Int64 zwordsize def
R116607:116609 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116606:116606 compcert.lib.Integers <> i var
R116610:116621 compcert.lib.Integers Int unsigned def
R116623:116623 compcert.lib.Integers <> y var
R116677:116681 Coq.Init.Datatypes <> false constr
R116641:116647 compcert.lib.Integers Int64 testbit def
R116653:116655 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116652:116652 compcert.lib.Integers <> i var
R116656:116667 compcert.lib.Integers Int unsigned def
R116669:116669 compcert.lib.Integers <> y var
R116649:116649 compcert.lib.Integers <> x var
R116549:116552 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R116554:116556 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R116553:116553 compcert.lib.Integers <> i var
R116553:116553 compcert.lib.Integers <> i var
R116557:116565 compcert.lib.Integers Int64 zwordsize def
R116708:116712 compcert.lib.Integers Int64 shru' def
R116723:116734 compcert.lib.Integers Int64 testbit_repr thm
R116723:116734 compcert.lib.Integers Int64 testbit_repr thm
R116754:116766 Coq.ZArith.BinInt Z shiftr_spec thm
R116754:116766 Coq.ZArith.BinInt Z shiftr_spec thm
R116775:116781 compcert.lib.Integers Int64 testbit def
R116787:116789 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116790:116801 compcert.lib.Integers Int unsigned def
R116775:116781 compcert.lib.Integers Int64 testbit def
R116787:116789 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116790:116801 compcert.lib.Integers Int unsigned def
R116820:116822 compcert.lib.Coqlib <> zlt def
R116845:116853 compcert.lib.Integers Int64 zwordsize def
R116826:116828 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116829:116840 compcert.lib.Integers Int unsigned def
R116820:116822 compcert.lib.Coqlib <> zlt def
R116845:116853 compcert.lib.Integers Int64 zwordsize def
R116826:116828 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R116829:116840 compcert.lib.Integers Int unsigned def
R116873:116882 compcert.lib.Integers Int64 bits_above thm
R116873:116882 compcert.lib.Integers Int64 bits_above thm
prf 116913:116921 Int64 bits_shr'
R116986:116990 Coq.Init.Logic <> :type_scope:x_'='_x not
R116966:116972 compcert.lib.Integers Int64 testbit def
R116985:116985 compcert.lib.Integers <> i var
R116975:116978 compcert.lib.Integers Int64 shr' def
R116982:116982 compcert.lib.Integers <> y var
R116980:116980 compcert.lib.Integers <> x var
R116991:116997 compcert.lib.Integers Int64 testbit def
R117005:117007 compcert.lib.Coqlib <> zlt def
R117030:117038 compcert.lib.Integers Int64 zwordsize def
R117011:117013 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R117010:117010 compcert.lib.Integers <> i var
R117014:117025 compcert.lib.Integers Int unsigned def
R117027:117027 compcert.lib.Integers <> y var
R117078:117080 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R117069:117077 compcert.lib.Integers Int64 zwordsize def
R117046:117048 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R117045:117045 compcert.lib.Integers <> i var
R117049:117060 compcert.lib.Integers Int unsigned def
R117062:117062 compcert.lib.Integers <> y var
R116999:116999 compcert.lib.Integers <> x var
R116943:116946 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R116948:116950 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R116947:116947 compcert.lib.Integers <> i var
R116947:116947 compcert.lib.Integers <> i var
R116951:116959 compcert.lib.Integers Int64 zwordsize def
R117109:117112 compcert.lib.Integers Int64 shr' def
R117123:117134 compcert.lib.Integers Int64 testbit_repr thm
R117123:117134 compcert.lib.Integers Int64 testbit_repr thm
R117154:117166 Coq.ZArith.BinInt Z shiftr_spec thm
R117154:117166 Coq.ZArith.BinInt Z shiftr_spec thm
R117175:117185 compcert.lib.Integers Int64 bits_signed thm
R117175:117185 compcert.lib.Integers Int64 bits_signed thm
R117203:117220 compcert.lib.Integers Int unsigned_range thm
R117203:117220 compcert.lib.Integers Int unsigned_range thm
def 117315:117320 Int64 loword
R117326:117328 compcert.lib.Integers Int64 int rec
R117333:117339 compcert.lib.Integers Int int rec
R117344:117351 compcert.lib.Integers Int repr def
R117354:117361 compcert.lib.Integers Int64 unsigned def
R117363:117363 compcert.lib.Integers <> n var
def 117379:117384 Int64 hiword
R117390:117392 compcert.lib.Integers Int64 int rec
R117397:117403 compcert.lib.Integers Int int rec
R117408:117415 compcert.lib.Integers Int repr def
R117418:117425 compcert.lib.Integers Int64 unsigned def
R117428:117431 compcert.lib.Integers Int64 shru def
R117436:117439 compcert.lib.Integers Int64 repr def
R117441:117453 compcert.lib.Integers Int zwordsize def
R117433:117433 compcert.lib.Integers <> n var
def 117471:117477 Int64 ofwords
R117487:117493 compcert.lib.Integers Int int rec
R117498:117500 compcert.lib.Integers Int64 int rec
R117507:117508 compcert.lib.Integers Int64 or def
R117563:117566 compcert.lib.Integers Int64 repr def
R117569:117580 compcert.lib.Integers Int unsigned def
R117582:117583 compcert.lib.Integers <> lo var
R117511:117513 compcert.lib.Integers Int64 shl def
R117541:117544 compcert.lib.Integers Int64 repr def
R117546:117558 compcert.lib.Integers Int zwordsize def
R117516:117519 compcert.lib.Integers Int64 repr def
R117522:117533 compcert.lib.Integers Int unsigned def
R117535:117536 compcert.lib.Integers <> hi var
prf 117595:117605 Int64 bits_loword
R117672:117674 Coq.Init.Logic <> :type_scope:x_'='_x not
R117648:117658 compcert.lib.Integers Int testbit def
R117671:117671 compcert.lib.Integers <> i var
R117661:117666 compcert.lib.Integers Int64 loword def
R117668:117668 compcert.lib.Integers <> n var
R117675:117681 compcert.lib.Integers Int64 testbit def
R117685:117685 compcert.lib.Integers <> i var
R117683:117683 compcert.lib.Integers <> n var
R117623:117626 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117628:117630 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117627:117627 compcert.lib.Integers <> i var
R117627:117627 compcert.lib.Integers <> i var
R117631:117643 compcert.lib.Integers Int zwordsize def
R117712:117717 compcert.lib.Integers Int64 loword def
R117728:117743 compcert.lib.Integers Int testbit_repr thm
R117728:117743 compcert.lib.Integers Int testbit_repr thm
prf 117765:117775 Int64 bits_hiword
R117842:117844 Coq.Init.Logic <> :type_scope:x_'='_x not
R117818:117828 compcert.lib.Integers Int testbit def
R117841:117841 compcert.lib.Integers <> i var
R117831:117836 compcert.lib.Integers Int64 hiword def
R117838:117838 compcert.lib.Integers <> n var
R117845:117851 compcert.lib.Integers Int64 testbit def
R117857:117859 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R117856:117856 compcert.lib.Integers <> i var
R117860:117872 compcert.lib.Integers Int zwordsize def
R117853:117853 compcert.lib.Integers <> n var
R117793:117796 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117798:117800 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R117797:117797 compcert.lib.Integers <> i var
R117797:117797 compcert.lib.Integers <> i var
R117801:117813 compcert.lib.Integers Int zwordsize def
R117900:117905 compcert.lib.Integers Int64 hiword def
R117916:117931 compcert.lib.Integers Int testbit_repr thm
R117916:117931 compcert.lib.Integers Int testbit_repr thm
R117959:117961 Coq.Init.Logic <> :type_scope:x_'='_x not
R117950:117958 compcert.lib.Integers Int64 zwordsize def
R117963:117965 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R117966:117978 compcert.lib.Integers Int zwordsize def
R117959:117961 Coq.Init.Logic <> :type_scope:x_'='_x not
R117950:117958 compcert.lib.Integers Int64 zwordsize def
R117963:117965 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R117966:117978 compcert.lib.Integers Int zwordsize def
R118005:118011 compcert.lib.Integers Int64 testbit def
R118014:118017 compcert.lib.Integers Int64 shru def
R118022:118025 compcert.lib.Integers Int64 repr def
R118027:118039 compcert.lib.Integers Int zwordsize def
R118005:118011 compcert.lib.Integers Int64 testbit def
R118014:118017 compcert.lib.Integers Int64 shru def
R118022:118025 compcert.lib.Integers Int64 repr def
R118027:118039 compcert.lib.Integers Int zwordsize def
R118055:118063 compcert.lib.Integers Int64 bits_shru thm
R118055:118063 compcert.lib.Integers Int64 bits_shru thm
R118112:118124 compcert.lib.Integers Int zwordsize def
R118076:118083 compcert.lib.Integers Int64 unsigned def
R118086:118089 compcert.lib.Integers Int64 repr def
R118091:118103 compcert.lib.Integers Int zwordsize def
R118076:118083 compcert.lib.Integers Int64 unsigned def
R118086:118089 compcert.lib.Integers Int64 repr def
R118091:118103 compcert.lib.Integers Int zwordsize def
R118112:118124 compcert.lib.Integers Int zwordsize def
R118135:118142 compcert.lib.Coqlib <> zlt_true thm
R118135:118142 compcert.lib.Coqlib <> zlt_true thm
prf 118172:118183 Int64 bits_ofwords
R118253:118257 Coq.Init.Logic <> :type_scope:x_'='_x not
R118228:118234 compcert.lib.Integers Int64 testbit def
R118252:118252 compcert.lib.Integers <> i var
R118237:118243 compcert.lib.Integers Int64 ofwords def
R118248:118249 compcert.lib.Integers <> lo var
R118245:118246 compcert.lib.Integers <> hi var
R118261:118263 compcert.lib.Coqlib <> zlt def
R118267:118279 compcert.lib.Integers Int zwordsize def
R118265:118265 compcert.lib.Integers <> i var
R118308:118318 compcert.lib.Integers Int testbit def
R118325:118327 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R118324:118324 compcert.lib.Integers <> i var
R118328:118340 compcert.lib.Integers Int zwordsize def
R118320:118321 compcert.lib.Integers <> hi var
R118286:118296 compcert.lib.Integers Int testbit def
R118301:118301 compcert.lib.Integers <> i var
R118298:118299 compcert.lib.Integers <> lo var
R118205:118208 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R118210:118212 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R118209:118209 compcert.lib.Integers <> i var
R118209:118209 compcert.lib.Integers <> i var
R118213:118221 compcert.lib.Integers Int64 zwordsize def
R118368:118374 compcert.lib.Integers Int64 ofwords def
R118385:118391 compcert.lib.Integers Int64 bits_or thm
R118385:118391 compcert.lib.Integers Int64 bits_or thm
R118408:118415 compcert.lib.Integers Int64 bits_shl thm
R118408:118415 compcert.lib.Integers Int64 bits_shl thm
R118471:118483 compcert.lib.Integers Int zwordsize def
R118435:118442 compcert.lib.Integers Int64 unsigned def
R118445:118448 compcert.lib.Integers Int64 repr def
R118450:118462 compcert.lib.Integers Int zwordsize def
R118435:118442 compcert.lib.Integers Int64 unsigned def
R118445:118448 compcert.lib.Integers Int64 repr def
R118450:118462 compcert.lib.Integers Int zwordsize def
R118471:118483 compcert.lib.Integers Int zwordsize def
R118506:118508 Coq.Init.Logic <> :type_scope:x_'='_x not
R118497:118505 compcert.lib.Integers Int64 zwordsize def
R118510:118512 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R118513:118525 compcert.lib.Integers Int zwordsize def
R118506:118508 Coq.Init.Logic <> :type_scope:x_'='_x not
R118497:118505 compcert.lib.Integers Int64 zwordsize def
R118510:118512 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R118513:118525 compcert.lib.Integers Int zwordsize def
R118556:118558 compcert.lib.Coqlib <> zlt def
R118562:118574 compcert.lib.Integers Int zwordsize def
R118556:118558 compcert.lib.Coqlib <> zlt def
R118562:118574 compcert.lib.Integers Int zwordsize def
R118588:118599 compcert.lib.Integers Int64 testbit_repr thm
R118588:118599 compcert.lib.Integers Int64 testbit_repr thm
R118620:118631 compcert.lib.Integers Int64 testbit_repr thm
R118620:118631 compcert.lib.Integers Int64 testbit_repr thm
R118620:118631 compcert.lib.Integers Int64 testbit_repr thm
R118620:118631 compcert.lib.Integers Int64 testbit_repr thm
R118648:118658 compcert.lib.Integers Int testbit def
R118648:118658 compcert.lib.Integers Int testbit def
R118675:118688 compcert.lib.Integers Int bits_above thm
R118675:118688 compcert.lib.Integers Int bits_above thm
R118697:118707 Coq.Bool.Bool <> orb_false_r thm
R118697:118707 Coq.Bool.Bool <> orb_false_r thm
prf 118738:118747 Int64 lo_ofwords
R118788:118790 Coq.Init.Logic <> :type_scope:x_'='_x not
R118766:118771 compcert.lib.Integers Int64 loword def
R118774:118780 compcert.lib.Integers Int64 ofwords def
R118785:118786 compcert.lib.Integers <> lo var
R118782:118783 compcert.lib.Integers <> hi var
R118791:118792 compcert.lib.Integers <> lo var
R118818:118833 compcert.lib.Integers Int same_bits_eq thm
R118818:118833 compcert.lib.Integers Int same_bits_eq thm
R118855:118865 compcert.lib.Integers Int64 bits_loword thm
R118855:118865 compcert.lib.Integers Int64 bits_loword thm
R118882:118893 compcert.lib.Integers Int64 bits_ofwords thm
R118882:118893 compcert.lib.Integers Int64 bits_ofwords thm
R118902:118909 compcert.lib.Coqlib <> zlt_true thm
R118902:118909 compcert.lib.Coqlib <> zlt_true thm
R118939:118941 Coq.Init.Logic <> :type_scope:x_'='_x not
R118930:118938 compcert.lib.Integers Int64 zwordsize def
R118943:118945 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R118946:118958 compcert.lib.Integers Int zwordsize def
R118939:118941 Coq.Init.Logic <> :type_scope:x_'='_x not
R118930:118938 compcert.lib.Integers Int64 zwordsize def
R118943:118945 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R118946:118958 compcert.lib.Integers Int zwordsize def
prf 118996:119005 Int64 hi_ofwords
R119046:119048 Coq.Init.Logic <> :type_scope:x_'='_x not
R119024:119029 compcert.lib.Integers Int64 hiword def
R119032:119038 compcert.lib.Integers Int64 ofwords def
R119043:119044 compcert.lib.Integers <> lo var
R119040:119041 compcert.lib.Integers <> hi var
R119049:119050 compcert.lib.Integers <> hi var
R119076:119091 compcert.lib.Integers Int same_bits_eq thm
R119076:119091 compcert.lib.Integers Int same_bits_eq thm
R119113:119123 compcert.lib.Integers Int64 bits_hiword thm
R119113:119123 compcert.lib.Integers Int64 bits_hiword thm
R119140:119151 compcert.lib.Integers Int64 bits_ofwords thm
R119140:119151 compcert.lib.Integers Int64 bits_ofwords thm
R119164:119172 compcert.lib.Coqlib <> zlt_false thm
R119164:119172 compcert.lib.Coqlib <> zlt_false thm
R119218:119220 Coq.Init.Logic <> :type_scope:x_'='_x not
R119209:119217 compcert.lib.Integers Int64 zwordsize def
R119222:119224 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R119225:119237 compcert.lib.Integers Int zwordsize def
R119218:119220 Coq.Init.Logic <> :type_scope:x_'='_x not
R119209:119217 compcert.lib.Integers Int64 zwordsize def
R119222:119224 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R119225:119237 compcert.lib.Integers Int zwordsize def
prf 119275:119291 Int64 ofwords_recompose
R119335:119337 Coq.Init.Logic <> :type_scope:x_'='_x not
R119306:119312 compcert.lib.Integers Int64 ofwords def
R119326:119331 compcert.lib.Integers Int64 loword def
R119333:119333 compcert.lib.Integers <> n var
R119315:119320 compcert.lib.Integers Int64 hiword def
R119322:119322 compcert.lib.Integers <> n var
R119338:119338 compcert.lib.Integers <> n var
R119364:119375 compcert.lib.Integers Int64 same_bits_eq thm
R119364:119375 compcert.lib.Integers Int64 same_bits_eq thm
R119394:119405 compcert.lib.Integers Int64 bits_ofwords thm
R119394:119405 compcert.lib.Integers Int64 bits_ofwords thm
R119427:119429 compcert.lib.Coqlib <> zlt def
R119433:119445 compcert.lib.Integers Int zwordsize def
R119427:119429 compcert.lib.Coqlib <> zlt def
R119433:119445 compcert.lib.Integers Int zwordsize def
R119458:119468 compcert.lib.Integers Int64 bits_loword thm
R119458:119468 compcert.lib.Integers Int64 bits_loword thm
R119489:119499 compcert.lib.Integers Int64 bits_hiword thm
R119489:119499 compcert.lib.Integers Int64 bits_hiword thm
R119538:119540 Coq.Init.Logic <> :type_scope:x_'='_x not
R119529:119537 compcert.lib.Integers Int64 zwordsize def
R119542:119544 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R119545:119557 compcert.lib.Integers Int zwordsize def
R119538:119540 Coq.Init.Logic <> :type_scope:x_'='_x not
R119529:119537 compcert.lib.Integers Int64 zwordsize def
R119542:119544 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R119545:119557 compcert.lib.Integers Int zwordsize def
prf 119595:119605 Int64 ofwords_add
R119637:119639 Coq.Init.Logic <> :type_scope:x_'='_x not
R119624:119630 compcert.lib.Integers Int64 ofwords def
R119635:119636 compcert.lib.Integers <> lo var
R119632:119633 compcert.lib.Integers <> hi var
R119640:119643 compcert.lib.Integers Int64 repr def
R119672:119674 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R119661:119663 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R119646:119657 compcert.lib.Integers Int unsigned def
R119659:119660 compcert.lib.Integers <> hi var
R119664:119668 Coq.ZArith.Zpower <> two_p def
R119675:119686 compcert.lib.Integers Int unsigned def
R119688:119689 compcert.lib.Integers <> lo var
R119717:119723 compcert.lib.Integers Int64 ofwords def
R119734:119750 compcert.lib.Integers Int64 shifted_or_is_add thm
R119734:119750 compcert.lib.Integers Int64 shifted_or_is_add thm
R119762:119773 compcert.lib.Integers Int64 eqm_samerepr thm
R119762:119773 compcert.lib.Integers Int64 eqm_samerepr thm
R119782:119788 compcert.lib.Integers Int64 eqm_add thm
R119782:119788 compcert.lib.Integers Int64 eqm_add thm
R119797:119804 compcert.lib.Integers Int64 eqm_mult thm
R119797:119804 compcert.lib.Integers Int64 eqm_mult thm
R119816:119822 compcert.lib.Integers Int64 eqm_sym thm
R119831:119847 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R119816:119822 compcert.lib.Integers Int64 eqm_sym thm
R119831:119847 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R119858:119865 compcert.lib.Integers Int64 eqm_refl thm
R119858:119865 compcert.lib.Integers Int64 eqm_refl thm
R119877:119883 compcert.lib.Integers Int64 eqm_sym thm
R119892:119908 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R119877:119883 compcert.lib.Integers Int64 eqm_sym thm
R119892:119908 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R119920:119932 compcert.lib.Integers Int zwordsize def
R119950:119958 compcert.lib.Integers Int64 zwordsize def
R119920:119932 compcert.lib.Integers Int zwordsize def
R119950:119958 compcert.lib.Integers Int64 zwordsize def
R119986:119998 compcert.lib.Integers Int64 unsigned_repr thm
R119986:119998 compcert.lib.Integers Int64 unsigned_repr thm
R120013:120030 compcert.lib.Integers Int unsigned_range thm
R120013:120030 compcert.lib.Integers Int unsigned_range thm
R120087:120089 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R120071:120086 compcert.lib.Integers Int max_unsigned def
R120090:120101 compcert.lib.Integers Int64 max_unsigned def
R120087:120089 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R120071:120086 compcert.lib.Integers Int max_unsigned def
R120090:120101 compcert.lib.Integers Int64 max_unsigned def
R120138:120157 compcert.lib.Integers Int unsigned_range_2 thm
R120138:120157 compcert.lib.Integers Int unsigned_range_2 thm
prf 120183:120194 Int64 ofwords_add'
R120237:120239 Coq.Init.Logic <> :type_scope:x_'='_x not
R120213:120220 compcert.lib.Integers Int64 unsigned def
R120223:120229 compcert.lib.Integers Int64 ofwords def
R120234:120235 compcert.lib.Integers <> lo var
R120231:120232 compcert.lib.Integers <> hi var
R120266:120268 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R120255:120257 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120240:120251 compcert.lib.Integers Int unsigned def
R120253:120254 compcert.lib.Integers <> hi var
R120258:120262 Coq.ZArith.Zpower <> two_p def
R120269:120280 compcert.lib.Integers Int unsigned def
R120282:120283 compcert.lib.Integers <> lo var
R120311:120321 compcert.lib.Integers Int64 ofwords_add thm
R120311:120321 compcert.lib.Integers Int64 ofwords_add thm
R120330:120342 compcert.lib.Integers Int64 unsigned_repr thm
R120330:120342 compcert.lib.Integers Int64 unsigned_repr thm
R120359:120376 compcert.lib.Integers Int unsigned_range thm
R120383:120400 compcert.lib.Integers Int unsigned_range thm
R120359:120376 compcert.lib.Integers Int unsigned_range thm
R120383:120400 compcert.lib.Integers Int unsigned_range thm
R120433:120443 compcert.lib.Integers Int modulus def
R120418:120422 Coq.ZArith.Zpower <> two_p def
R120418:120422 Coq.ZArith.Zpower <> two_p def
R120433:120443 compcert.lib.Integers Int modulus def
R120455:120465 compcert.lib.Integers Int modulus def
R120455:120465 compcert.lib.Integers Int modulus def
R120493:120504 compcert.lib.Integers Int64 max_unsigned def
R120493:120504 compcert.lib.Integers Int64 max_unsigned def
prf 120555:120566 Int64 eqm_mul_2p32
R120598:120600 compcert.lib.Integers Int64 eqm def
R120619:120621 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120618:120618 compcert.lib.Integers <> y var
R120622:120626 Coq.ZArith.Zpower <> two_p def
R120604:120606 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120603:120603 compcert.lib.Integers <> x var
R120607:120611 Coq.ZArith.Zpower <> two_p def
R120583:120589 compcert.lib.Integers Int eqm def
R120593:120593 compcert.lib.Integers <> y var
R120591:120591 compcert.lib.Integers <> x var
R120721:120725 Coq.ZArith.Zpower <> two_p def
R120703:120713 compcert.lib.Integers Int modulus def
R120703:120713 compcert.lib.Integers Int modulus def
R120721:120725 Coq.ZArith.Zpower <> two_p def
R120764:120766 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120756:120760 Coq.ZArith.Zpower <> two_p def
R120767:120771 Coq.ZArith.Zpower <> two_p def
R120742:120748 compcert.lib.Integers Int64 modulus def
R120742:120748 compcert.lib.Integers Int64 modulus def
R120764:120766 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120756:120760 Coq.ZArith.Zpower <> two_p def
R120767:120771 Coq.ZArith.Zpower <> two_p def
prf 120798:120810 Int64 ofwords_add''
R120851:120853 Coq.Init.Logic <> :type_scope:x_'='_x not
R120829:120834 compcert.lib.Integers Int64 signed def
R120837:120843 compcert.lib.Integers Int64 ofwords def
R120848:120849 compcert.lib.Integers <> lo var
R120845:120846 compcert.lib.Integers <> hi var
R120878:120880 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R120867:120869 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120854:120863 compcert.lib.Integers Int signed def
R120865:120866 compcert.lib.Integers <> hi var
R120870:120874 Coq.ZArith.Zpower <> two_p def
R120881:120892 compcert.lib.Integers Int unsigned def
R120894:120895 compcert.lib.Integers <> lo var
R120923:120933 compcert.lib.Integers Int64 ofwords_add thm
R120923:120933 compcert.lib.Integers Int64 ofwords_add thm
R120947:120950 compcert.lib.Integers Int64 repr def
R120979:120981 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R120968:120970 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120953:120964 compcert.lib.Integers Int unsigned def
R120971:120975 Coq.ZArith.Zpower <> two_p def
R120982:120993 compcert.lib.Integers Int unsigned def
R121011:121014 compcert.lib.Integers Int64 repr def
R121041:121043 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R121030:121032 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R121017:121026 compcert.lib.Integers Int signed def
R121033:121037 Coq.ZArith.Zpower <> two_p def
R121044:121055 compcert.lib.Integers Int unsigned def
R121011:121014 compcert.lib.Integers Int64 repr def
R121041:121043 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R121030:121032 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R121017:121026 compcert.lib.Integers Int signed def
R121033:121037 Coq.ZArith.Zpower <> two_p def
R121044:121055 compcert.lib.Integers Int unsigned def
R120947:120950 compcert.lib.Integers Int64 repr def
R120979:120981 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R120968:120970 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R120953:120964 compcert.lib.Integers Int unsigned def
R120971:120975 Coq.ZArith.Zpower <> two_p def
R120982:120993 compcert.lib.Integers Int unsigned def
R121071:121081 compcert.lib.Integers Int64 signed_repr thm
R121071:121081 compcert.lib.Integers Int64 signed_repr thm
R121098:121113 compcert.lib.Integers Int signed_range thm
R121120:121137 compcert.lib.Integers Int unsigned_range thm
R121098:121113 compcert.lib.Integers Int signed_range thm
R121120:121137 compcert.lib.Integers Int unsigned_range thm
R121170:121180 compcert.lib.Integers Int modulus def
R121155:121159 Coq.ZArith.Zpower <> two_p def
R121155:121159 Coq.ZArith.Zpower <> two_p def
R121170:121180 compcert.lib.Integers Int modulus def
R121223:121225 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R121209:121222 compcert.lib.Integers Int min_signed def
R121226:121236 compcert.lib.Integers Int modulus def
R121192:121201 compcert.lib.Integers Int64 min_signed def
R121192:121201 compcert.lib.Integers Int64 min_signed def
R121223:121225 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R121209:121222 compcert.lib.Integers Int min_signed def
R121226:121236 compcert.lib.Integers Int modulus def
R121308:121310 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R121294:121296 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R121280:121282 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R121266:121279 compcert.lib.Integers Int max_signed def
R121283:121293 compcert.lib.Integers Int modulus def
R121297:121307 compcert.lib.Integers Int modulus def
R121249:121258 compcert.lib.Integers Int64 max_signed def
R121249:121258 compcert.lib.Integers Int64 max_signed def
R121308:121310 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R121294:121296 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R121280:121282 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R121266:121279 compcert.lib.Integers Int max_signed def
R121283:121293 compcert.lib.Integers Int modulus def
R121297:121307 compcert.lib.Integers Int modulus def
R121324:121334 compcert.lib.Integers Int modulus def
R121324:121334 compcert.lib.Integers Int modulus def
R121370:121381 compcert.lib.Integers Int64 eqm_samerepr thm
R121370:121381 compcert.lib.Integers Int64 eqm_samerepr thm
R121390:121396 compcert.lib.Integers Int64 eqm_add thm
R121390:121396 compcert.lib.Integers Int64 eqm_add thm
R121405:121416 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R121405:121416 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R121425:121447 compcert.lib.Integers Int eqm_signed_unsigned thm
R121425:121447 compcert.lib.Integers Int eqm_signed_unsigned thm
R121456:121463 compcert.lib.Integers Int64 eqm_refl thm
R121456:121463 compcert.lib.Integers Int64 eqm_refl thm
prf 121545:121567 Int64 decompose_bitwise_binop
R121845:121847 Coq.Init.Logic <> :type_scope:x_'='_x not
R121810:121812 compcert.lib.Integers <> f64 var
R121831:121837 compcert.lib.Integers Int64 ofwords def
R121842:121843 compcert.lib.Integers <> yl var
R121839:121840 compcert.lib.Integers <> yh var
R121815:121821 compcert.lib.Integers Int64 ofwords def
R121826:121827 compcert.lib.Integers <> xl var
R121823:121824 compcert.lib.Integers <> xh var
R121848:121854 compcert.lib.Integers Int64 ofwords def
R121869:121871 compcert.lib.Integers <> f32 var
R121876:121877 compcert.lib.Integers <> yl var
R121873:121874 compcert.lib.Integers <> xl var
R121857:121859 compcert.lib.Integers <> f32 var
R121864:121865 compcert.lib.Integers <> yh var
R121861:121862 compcert.lib.Integers <> xh var
R121763:121765 Coq.Init.Logic <> :type_scope:x_'='_x not
R121740:121750 compcert.lib.Integers Int testbit def
R121762:121762 compcert.lib.Integers <> i var
R121753:121755 compcert.lib.Integers <> f32 var
R121759:121759 compcert.lib.Integers <> y var
R121757:121757 compcert.lib.Integers <> x var
R121766:121766 compcert.lib.Integers <> f var
R121787:121797 compcert.lib.Integers Int testbit def
R121801:121801 compcert.lib.Integers <> i var
R121799:121799 compcert.lib.Integers <> y var
R121769:121779 compcert.lib.Integers Int testbit def
R121783:121783 compcert.lib.Integers <> i var
R121781:121781 compcert.lib.Integers <> x var
R121715:121718 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R121720:121722 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R121719:121719 compcert.lib.Integers <> i var
R121719:121719 compcert.lib.Integers <> i var
R121723:121735 compcert.lib.Integers Int zwordsize def
R121660:121662 Coq.Init.Logic <> :type_scope:x_'='_x not
R121641:121647 compcert.lib.Integers Int64 testbit def
R121659:121659 compcert.lib.Integers <> i var
R121650:121652 compcert.lib.Integers <> f64 var
R121656:121656 compcert.lib.Integers <> y var
R121654:121654 compcert.lib.Integers <> x var
R121663:121663 compcert.lib.Integers <> f var
R121680:121686 compcert.lib.Integers Int64 testbit def
R121690:121690 compcert.lib.Integers <> i var
R121688:121688 compcert.lib.Integers <> y var
R121666:121672 compcert.lib.Integers Int64 testbit def
R121676:121676 compcert.lib.Integers <> i var
R121674:121674 compcert.lib.Integers <> x var
R121620:121623 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R121625:121627 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R121624:121624 compcert.lib.Integers <> i var
R121624:121624 compcert.lib.Integers <> i var
R121628:121636 compcert.lib.Integers Int64 zwordsize def
R121904:121921 compcert.lib.Integers Int64 same_bits_eq thm
R121904:121921 compcert.lib.Integers Int64 same_bits_eq thm
R121963:121974 compcert.lib.Integers Int64 bits_ofwords thm
R121963:121974 compcert.lib.Integers Int64 bits_ofwords thm
R121963:121974 compcert.lib.Integers Int64 bits_ofwords thm
R121963:121974 compcert.lib.Integers Int64 bits_ofwords thm
R121963:121974 compcert.lib.Integers Int64 bits_ofwords thm
R122004:122006 Coq.Init.Logic <> :type_scope:x_'='_x not
R121995:122003 compcert.lib.Integers Int64 zwordsize def
R122008:122010 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R122011:122023 compcert.lib.Integers Int zwordsize def
R122004:122006 Coq.Init.Logic <> :type_scope:x_'='_x not
R121995:122003 compcert.lib.Integers Int64 zwordsize def
R122008:122010 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R122011:122023 compcert.lib.Integers Int zwordsize def
R122054:122056 compcert.lib.Coqlib <> zlt def
R122060:122072 compcert.lib.Integers Int zwordsize def
R122054:122056 compcert.lib.Coqlib <> zlt def
R122060:122072 compcert.lib.Integers Int zwordsize def
prf 122115:122127 Int64 decompose_and
R122189:122191 Coq.Init.Logic <> :type_scope:x_'='_x not
R122154:122156 compcert.lib.Integers Int64 and def
R122175:122181 compcert.lib.Integers Int64 ofwords def
R122186:122187 compcert.lib.Integers <> yl var
R122183:122184 compcert.lib.Integers <> yh var
R122159:122165 compcert.lib.Integers Int64 ofwords def
R122170:122171 compcert.lib.Integers <> xl var
R122167:122168 compcert.lib.Integers <> xh var
R122192:122198 compcert.lib.Integers Int64 ofwords def
R122217:122223 compcert.lib.Integers Int and def
R122228:122229 compcert.lib.Integers <> yl var
R122225:122226 compcert.lib.Integers <> xl var
R122201:122207 compcert.lib.Integers Int and def
R122212:122213 compcert.lib.Integers <> yh var
R122209:122210 compcert.lib.Integers <> xh var
R122285:122288 Coq.Init.Datatypes <> andb def
R122256:122278 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R122285:122288 Coq.Init.Datatypes <> andb def
R122256:122278 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R122299:122306 compcert.lib.Integers Int64 bits_and thm
R122299:122306 compcert.lib.Integers Int64 bits_and thm
R122315:122326 compcert.lib.Integers Int bits_and thm
R122315:122326 compcert.lib.Integers Int bits_and thm
prf 122341:122352 Int64 decompose_or
R122413:122415 Coq.Init.Logic <> :type_scope:x_'='_x not
R122379:122380 compcert.lib.Integers Int64 or def
R122399:122405 compcert.lib.Integers Int64 ofwords def
R122410:122411 compcert.lib.Integers <> yl var
R122407:122408 compcert.lib.Integers <> yh var
R122383:122389 compcert.lib.Integers Int64 ofwords def
R122394:122395 compcert.lib.Integers <> xl var
R122391:122392 compcert.lib.Integers <> xh var
R122416:122422 compcert.lib.Integers Int64 ofwords def
R122440:122445 compcert.lib.Integers Int or def
R122450:122451 compcert.lib.Integers <> yl var
R122447:122448 compcert.lib.Integers <> xl var
R122425:122430 compcert.lib.Integers Int or def
R122435:122436 compcert.lib.Integers <> yh var
R122432:122433 compcert.lib.Integers <> xh var
R122507:122509 Coq.Init.Datatypes <> orb def
R122478:122500 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R122507:122509 Coq.Init.Datatypes <> orb def
R122478:122500 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R122520:122526 compcert.lib.Integers Int64 bits_or thm
R122520:122526 compcert.lib.Integers Int64 bits_or thm
R122535:122545 compcert.lib.Integers Int bits_or thm
R122535:122545 compcert.lib.Integers Int bits_or thm
prf 122560:122572 Int64 decompose_xor
R122634:122636 Coq.Init.Logic <> :type_scope:x_'='_x not
R122599:122601 compcert.lib.Integers Int64 xor def
R122620:122626 compcert.lib.Integers Int64 ofwords def
R122631:122632 compcert.lib.Integers <> yl var
R122628:122629 compcert.lib.Integers <> yh var
R122604:122610 compcert.lib.Integers Int64 ofwords def
R122615:122616 compcert.lib.Integers <> xl var
R122612:122613 compcert.lib.Integers <> xh var
R122637:122643 compcert.lib.Integers Int64 ofwords def
R122662:122668 compcert.lib.Integers Int xor def
R122673:122674 compcert.lib.Integers <> yl var
R122670:122671 compcert.lib.Integers <> xl var
R122646:122652 compcert.lib.Integers Int xor def
R122657:122658 compcert.lib.Integers <> yh var
R122654:122655 compcert.lib.Integers <> xh var
R122730:122733 Coq.Init.Datatypes <> xorb def
R122701:122723 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R122730:122733 Coq.Init.Datatypes <> xorb def
R122701:122723 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R122744:122751 compcert.lib.Integers Int64 bits_xor thm
R122744:122751 compcert.lib.Integers Int64 bits_xor thm
R122760:122771 compcert.lib.Integers Int bits_xor thm
R122760:122771 compcert.lib.Integers Int bits_xor thm
prf 122786:122798 Int64 decompose_not
R122838:122840 Coq.Init.Logic <> :type_scope:x_'='_x not
R122819:122821 compcert.lib.Integers Int64 not def
R122824:122830 compcert.lib.Integers Int64 ofwords def
R122835:122836 compcert.lib.Integers <> xl var
R122832:122833 compcert.lib.Integers <> xh var
R122841:122847 compcert.lib.Integers Int64 ofwords def
R122863:122869 compcert.lib.Integers Int not def
R122871:122872 compcert.lib.Integers <> xl var
R122850:122856 compcert.lib.Integers Int not def
R122858:122859 compcert.lib.Integers <> xh var
R122900:122902 compcert.lib.Integers Int64 not def
R122905:122911 compcert.lib.Integers Int not def
R122925:122937 compcert.lib.Integers Int64 decompose_xor thm
R122925:122937 compcert.lib.Integers Int64 decompose_xor thm
R122959:122971 compcert.lib.Integers Int64 eq_spec thm
R122979:122985 compcert.lib.Integers Int64 ofwords def
R122996:123003 compcert.lib.Integers Int mone def
R122987:122994 compcert.lib.Integers Int mone def
R122973:122976 compcert.lib.Integers Int64 mone def
R122959:122971 compcert.lib.Integers Int64 eq_spec thm
R122979:122985 compcert.lib.Integers Int64 ofwords def
R122996:123003 compcert.lib.Integers Int mone def
R122987:122994 compcert.lib.Integers Int mone def
R122973:122976 compcert.lib.Integers Int64 mone def
prf 123020:123034 Int64 decompose_shl_1
R123120:123124 Coq.Init.Logic <> :type_scope:x_'='_x not
R123098:123101 compcert.lib.Integers Int64 shl' def
R123119:123119 compcert.lib.Integers <> y var
R123104:123110 compcert.lib.Integers Int64 ofwords def
R123115:123116 compcert.lib.Integers <> xl var
R123112:123113 compcert.lib.Integers <> xh var
R123125:123131 compcert.lib.Integers Int64 ofwords def
R123208:123214 compcert.lib.Integers Int shl def
R123219:123219 compcert.lib.Integers <> y var
R123216:123217 compcert.lib.Integers <> xl var
R123134:123139 compcert.lib.Integers Int or def
R123157:123164 compcert.lib.Integers Int shru def
R123170:123176 compcert.lib.Integers Int sub def
R123192:123192 compcert.lib.Integers <> y var
R123178:123190 compcert.lib.Integers Int iwordsize def
R123166:123167 compcert.lib.Integers <> xl var
R123142:123148 compcert.lib.Integers Int shl def
R123153:123153 compcert.lib.Integers <> y var
R123150:123151 compcert.lib.Integers <> xh var
R123058:123061 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R123076:123078 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R123062:123073 compcert.lib.Integers Int unsigned def
R123075:123075 compcert.lib.Integers <> y var
R123062:123073 compcert.lib.Integers Int unsigned def
R123075:123075 compcert.lib.Integers <> y var
R123079:123091 compcert.lib.Integers Int zwordsize def
R123288:123290 Coq.Init.Logic <> :type_scope:x_'='_x not
R123250:123261 compcert.lib.Integers Int unsigned def
R123264:123270 compcert.lib.Integers Int sub def
R123272:123284 compcert.lib.Integers Int iwordsize def
R123304:123306 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R123291:123303 compcert.lib.Integers Int zwordsize def
R123307:123318 compcert.lib.Integers Int unsigned def
R123288:123290 Coq.Init.Logic <> :type_scope:x_'='_x not
R123250:123261 compcert.lib.Integers Int unsigned def
R123264:123270 compcert.lib.Integers Int sub def
R123272:123284 compcert.lib.Integers Int iwordsize def
R123304:123306 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R123291:123303 compcert.lib.Integers Int zwordsize def
R123307:123318 compcert.lib.Integers Int unsigned def
R123335:123341 compcert.lib.Integers Int sub def
R123352:123368 compcert.lib.Integers Int unsigned_repr thm
R123352:123368 compcert.lib.Integers Int unsigned_repr thm
R123390:123415 compcert.lib.Integers Int unsigned_repr_wordsize thm
R123390:123415 compcert.lib.Integers Int unsigned_repr_wordsize thm
R123429:123453 compcert.lib.Integers Int wordsize_max_unsigned thm
R123429:123453 compcert.lib.Integers Int wordsize_max_unsigned thm
R123484:123486 Coq.Init.Logic <> :type_scope:x_'='_x not
R123475:123483 compcert.lib.Integers Int64 zwordsize def
R123488:123490 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R123491:123503 compcert.lib.Integers Int zwordsize def
R123484:123486 Coq.Init.Logic <> :type_scope:x_'='_x not
R123475:123483 compcert.lib.Integers Int64 zwordsize def
R123488:123490 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R123491:123503 compcert.lib.Integers Int zwordsize def
R123530:123547 compcert.lib.Integers Int64 same_bits_eq thm
R123530:123547 compcert.lib.Integers Int64 same_bits_eq thm
R123568:123576 compcert.lib.Integers Int64 bits_shl' thm
R123568:123576 compcert.lib.Integers Int64 bits_shl' thm
R123605:123616 compcert.lib.Integers Int64 bits_ofwords thm
R123605:123616 compcert.lib.Integers Int64 bits_ofwords thm
R123639:123641 compcert.lib.Coqlib <> zlt def
R123645:123657 compcert.lib.Integers Int zwordsize def
R123639:123641 compcert.lib.Coqlib <> zlt def
R123645:123657 compcert.lib.Integers Int zwordsize def
R123669:123680 compcert.lib.Integers Int bits_shl thm
R123669:123680 compcert.lib.Integers Int bits_shl thm
R123705:123707 compcert.lib.Coqlib <> zlt def
R123712:123723 compcert.lib.Integers Int unsigned def
R123705:123707 compcert.lib.Coqlib <> zlt def
R123712:123723 compcert.lib.Integers Int unsigned def
R123747:123758 compcert.lib.Integers Int64 bits_ofwords thm
R123747:123758 compcert.lib.Integers Int64 bits_ofwords thm
R123778:123785 compcert.lib.Coqlib <> zlt_true thm
R123778:123785 compcert.lib.Coqlib <> zlt_true thm
R123813:123821 compcert.lib.Coqlib <> zlt_false thm
R123813:123821 compcert.lib.Coqlib <> zlt_false thm
R123841:123852 compcert.lib.Integers Int64 bits_ofwords thm
R123841:123852 compcert.lib.Integers Int64 bits_ofwords thm
R123875:123885 compcert.lib.Integers Int bits_or thm
R123875:123885 compcert.lib.Integers Int bits_or thm
R123905:123916 compcert.lib.Integers Int bits_shl thm
R123905:123916 compcert.lib.Integers Int bits_shl thm
R123939:123951 compcert.lib.Integers Int bits_shru thm
R123939:123951 compcert.lib.Integers Int bits_shru thm
R123987:123989 compcert.lib.Coqlib <> zlt def
R124013:124025 compcert.lib.Integers Int zwordsize def
R123993:123995 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R123996:124007 compcert.lib.Integers Int unsigned def
R123987:123989 compcert.lib.Coqlib <> zlt def
R124013:124025 compcert.lib.Integers Int zwordsize def
R123993:123995 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R123996:124007 compcert.lib.Integers Int unsigned def
R124040:124047 compcert.lib.Coqlib <> zlt_true thm
R124040:124047 compcert.lib.Coqlib <> zlt_true thm
R124067:124074 compcert.lib.Coqlib <> zlt_true thm
R124067:124074 compcert.lib.Coqlib <> zlt_true thm
R124096:124106 Coq.Bool.Bool <> orb_false_l thm
R124096:124106 Coq.Bool.Bool <> orb_false_l thm
R124136:124144 compcert.lib.Coqlib <> zlt_false thm
R124136:124144 compcert.lib.Coqlib <> zlt_false thm
R124164:124172 compcert.lib.Coqlib <> zlt_false thm
R124164:124172 compcert.lib.Coqlib <> zlt_false thm
R124195:124205 Coq.Bool.Bool <> orb_false_r thm
R124195:124205 Coq.Bool.Bool <> orb_false_r thm
prf 124236:124250 Int64 decompose_shl_2
R124344:124348 Coq.Init.Logic <> :type_scope:x_'='_x not
R124322:124325 compcert.lib.Integers Int64 shl' def
R124343:124343 compcert.lib.Integers <> y var
R124328:124334 compcert.lib.Integers Int64 ofwords def
R124339:124340 compcert.lib.Integers <> xl var
R124336:124337 compcert.lib.Integers <> xh var
R124349:124355 compcert.lib.Integers Int64 ofwords def
R124396:124403 compcert.lib.Integers Int zero def
R124358:124364 compcert.lib.Integers Int shl def
R124370:124376 compcert.lib.Integers Int sub def
R124380:124392 compcert.lib.Integers Int iwordsize def
R124378:124378 compcert.lib.Integers <> y var
R124366:124367 compcert.lib.Integers <> xl var
R124286:124289 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R124304:124306 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R124273:124285 compcert.lib.Integers Int zwordsize def
R124290:124301 compcert.lib.Integers Int unsigned def
R124303:124303 compcert.lib.Integers <> y var
R124290:124301 compcert.lib.Integers Int unsigned def
R124303:124303 compcert.lib.Integers <> y var
R124307:124315 compcert.lib.Integers Int64 zwordsize def
R124442:124444 Coq.Init.Logic <> :type_scope:x_'='_x not
R124433:124441 compcert.lib.Integers Int64 zwordsize def
R124446:124448 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R124449:124461 compcert.lib.Integers Int zwordsize def
R124442:124444 Coq.Init.Logic <> :type_scope:x_'='_x not
R124433:124441 compcert.lib.Integers Int64 zwordsize def
R124446:124448 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R124449:124461 compcert.lib.Integers Int zwordsize def
R124528:124530 Coq.Init.Logic <> :type_scope:x_'='_x not
R124490:124501 compcert.lib.Integers Int unsigned def
R124504:124510 compcert.lib.Integers Int sub def
R124514:124526 compcert.lib.Integers Int iwordsize def
R124545:124547 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R124531:124542 compcert.lib.Integers Int unsigned def
R124548:124560 compcert.lib.Integers Int zwordsize def
R124528:124530 Coq.Init.Logic <> :type_scope:x_'='_x not
R124490:124501 compcert.lib.Integers Int unsigned def
R124504:124510 compcert.lib.Integers Int sub def
R124514:124526 compcert.lib.Integers Int iwordsize def
R124545:124547 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R124531:124542 compcert.lib.Integers Int unsigned def
R124548:124560 compcert.lib.Integers Int zwordsize def
R124575:124581 compcert.lib.Integers Int sub def
R124592:124608 compcert.lib.Integers Int unsigned_repr thm
R124592:124608 compcert.lib.Integers Int unsigned_repr thm
R124630:124655 compcert.lib.Integers Int unsigned_repr_wordsize thm
R124630:124655 compcert.lib.Integers Int unsigned_repr_wordsize thm
R124670:124689 compcert.lib.Integers Int unsigned_range_2 thm
R124670:124689 compcert.lib.Integers Int unsigned_range_2 thm
R124712:124729 compcert.lib.Integers Int64 same_bits_eq thm
R124712:124729 compcert.lib.Integers Int64 same_bits_eq thm
R124750:124758 compcert.lib.Integers Int64 bits_shl' thm
R124750:124758 compcert.lib.Integers Int64 bits_shl' thm
R124787:124798 compcert.lib.Integers Int64 bits_ofwords thm
R124787:124798 compcert.lib.Integers Int64 bits_ofwords thm
R124821:124823 compcert.lib.Coqlib <> zlt def
R124827:124839 compcert.lib.Integers Int zwordsize def
R124821:124823 compcert.lib.Coqlib <> zlt def
R124827:124839 compcert.lib.Integers Int zwordsize def
R124851:124858 compcert.lib.Coqlib <> zlt_true thm
R124851:124858 compcert.lib.Coqlib <> zlt_true thm
R124876:124888 compcert.lib.Integers Int bits_zero thm
R124876:124888 compcert.lib.Integers Int bits_zero thm
R124901:124912 compcert.lib.Integers Int bits_shl thm
R124901:124912 compcert.lib.Integers Int bits_shl thm
R124937:124939 compcert.lib.Coqlib <> zlt def
R124944:124955 compcert.lib.Integers Int unsigned def
R124937:124939 compcert.lib.Coqlib <> zlt def
R124944:124955 compcert.lib.Integers Int unsigned def
R124972:124979 compcert.lib.Coqlib <> zlt_true thm
R124972:124979 compcert.lib.Coqlib <> zlt_true thm
R125008:125016 compcert.lib.Coqlib <> zlt_false thm
R125008:125016 compcert.lib.Coqlib <> zlt_false thm
R125039:125050 compcert.lib.Integers Int64 bits_ofwords thm
R125039:125050 compcert.lib.Integers Int64 bits_ofwords thm
R125070:125077 compcert.lib.Coqlib <> zlt_true thm
R125070:125077 compcert.lib.Coqlib <> zlt_true thm
prf 125118:125133 Int64 decompose_shru_1
R125220:125224 Coq.Init.Logic <> :type_scope:x_'='_x not
R125197:125201 compcert.lib.Integers Int64 shru' def
R125219:125219 compcert.lib.Integers <> y var
R125204:125210 compcert.lib.Integers Int64 ofwords def
R125215:125216 compcert.lib.Integers <> xl var
R125212:125213 compcert.lib.Integers <> xh var
R125225:125231 compcert.lib.Integers Int64 ofwords def
R125260:125265 compcert.lib.Integers Int or def
R125284:125290 compcert.lib.Integers Int shl def
R125296:125302 compcert.lib.Integers Int sub def
R125318:125318 compcert.lib.Integers <> y var
R125304:125316 compcert.lib.Integers Int iwordsize def
R125292:125293 compcert.lib.Integers <> xh var
R125268:125275 compcert.lib.Integers Int shru def
R125280:125280 compcert.lib.Integers <> y var
R125277:125278 compcert.lib.Integers <> xl var
R125234:125241 compcert.lib.Integers Int shru def
R125246:125246 compcert.lib.Integers <> y var
R125243:125244 compcert.lib.Integers <> xh var
R125157:125160 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R125175:125177 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R125161:125172 compcert.lib.Integers Int unsigned def
R125174:125174 compcert.lib.Integers <> y var
R125161:125172 compcert.lib.Integers Int unsigned def
R125174:125174 compcert.lib.Integers <> y var
R125178:125190 compcert.lib.Integers Int zwordsize def
R125389:125391 Coq.Init.Logic <> :type_scope:x_'='_x not
R125351:125362 compcert.lib.Integers Int unsigned def
R125365:125371 compcert.lib.Integers Int sub def
R125373:125385 compcert.lib.Integers Int iwordsize def
R125405:125407 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R125392:125404 compcert.lib.Integers Int zwordsize def
R125408:125419 compcert.lib.Integers Int unsigned def
R125389:125391 Coq.Init.Logic <> :type_scope:x_'='_x not
R125351:125362 compcert.lib.Integers Int unsigned def
R125365:125371 compcert.lib.Integers Int sub def
R125373:125385 compcert.lib.Integers Int iwordsize def
R125405:125407 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R125392:125404 compcert.lib.Integers Int zwordsize def
R125408:125419 compcert.lib.Integers Int unsigned def
R125436:125442 compcert.lib.Integers Int sub def
R125453:125469 compcert.lib.Integers Int unsigned_repr thm
R125453:125469 compcert.lib.Integers Int unsigned_repr thm
R125491:125516 compcert.lib.Integers Int unsigned_repr_wordsize thm
R125491:125516 compcert.lib.Integers Int unsigned_repr_wordsize thm
R125530:125554 compcert.lib.Integers Int wordsize_max_unsigned thm
R125530:125554 compcert.lib.Integers Int wordsize_max_unsigned thm
R125585:125587 Coq.Init.Logic <> :type_scope:x_'='_x not
R125576:125584 compcert.lib.Integers Int64 zwordsize def
R125589:125591 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R125592:125604 compcert.lib.Integers Int zwordsize def
R125585:125587 Coq.Init.Logic <> :type_scope:x_'='_x not
R125576:125584 compcert.lib.Integers Int64 zwordsize def
R125589:125591 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R125592:125604 compcert.lib.Integers Int zwordsize def
R125631:125648 compcert.lib.Integers Int64 same_bits_eq thm
R125631:125648 compcert.lib.Integers Int64 same_bits_eq thm
R125669:125678 compcert.lib.Integers Int64 bits_shru' thm
R125669:125678 compcert.lib.Integers Int64 bits_shru' thm
R125707:125718 compcert.lib.Integers Int64 bits_ofwords thm
R125707:125718 compcert.lib.Integers Int64 bits_ofwords thm
R125741:125743 compcert.lib.Coqlib <> zlt def
R125747:125759 compcert.lib.Integers Int zwordsize def
R125741:125743 compcert.lib.Coqlib <> zlt def
R125747:125759 compcert.lib.Integers Int zwordsize def
R125773:125780 compcert.lib.Coqlib <> zlt_true thm
R125773:125780 compcert.lib.Coqlib <> zlt_true thm
R125803:125814 compcert.lib.Integers Int64 bits_ofwords thm
R125803:125814 compcert.lib.Integers Int64 bits_ofwords thm
R125836:125846 compcert.lib.Integers Int bits_or thm
R125836:125846 compcert.lib.Integers Int bits_or thm
R125866:125877 compcert.lib.Integers Int bits_shl thm
R125866:125877 compcert.lib.Integers Int bits_shl thm
R125900:125912 compcert.lib.Integers Int bits_shru thm
R125900:125912 compcert.lib.Integers Int bits_shru thm
R125948:125950 compcert.lib.Coqlib <> zlt def
R125974:125986 compcert.lib.Integers Int zwordsize def
R125954:125956 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R125957:125968 compcert.lib.Integers Int unsigned def
R125948:125950 compcert.lib.Coqlib <> zlt def
R125974:125986 compcert.lib.Integers Int zwordsize def
R125954:125956 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R125957:125968 compcert.lib.Integers Int unsigned def
R126001:126008 compcert.lib.Coqlib <> zlt_true thm
R126001:126008 compcert.lib.Coqlib <> zlt_true thm
R126030:126040 Coq.Bool.Bool <> orb_false_r thm
R126030:126040 Coq.Bool.Bool <> orb_false_r thm
R126059:126067 compcert.lib.Coqlib <> zlt_false thm
R126059:126067 compcert.lib.Coqlib <> zlt_false thm
R126090:126100 Coq.Bool.Bool <> orb_false_l thm
R126090:126100 Coq.Bool.Bool <> orb_false_l thm
R126129:126141 compcert.lib.Integers Int bits_shru thm
R126129:126141 compcert.lib.Integers Int bits_shru thm
R126166:126168 compcert.lib.Coqlib <> zlt def
R126191:126199 compcert.lib.Integers Int64 zwordsize def
R126172:126174 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R126175:126186 compcert.lib.Integers Int unsigned def
R126166:126168 compcert.lib.Coqlib <> zlt def
R126191:126199 compcert.lib.Integers Int64 zwordsize def
R126172:126174 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R126175:126186 compcert.lib.Integers Int unsigned def
R126213:126224 compcert.lib.Integers Int64 bits_ofwords thm
R126213:126224 compcert.lib.Integers Int64 bits_ofwords thm
R126247:126254 compcert.lib.Coqlib <> zlt_true thm
R126247:126254 compcert.lib.Coqlib <> zlt_true thm
R126274:126282 compcert.lib.Coqlib <> zlt_false thm
R126274:126282 compcert.lib.Coqlib <> zlt_false thm
R126321:126329 compcert.lib.Coqlib <> zlt_false thm
R126321:126329 compcert.lib.Coqlib <> zlt_false thm
prf 126359:126374 Int64 decompose_shru_2
R126469:126473 Coq.Init.Logic <> :type_scope:x_'='_x not
R126446:126450 compcert.lib.Integers Int64 shru' def
R126468:126468 compcert.lib.Integers <> y var
R126453:126459 compcert.lib.Integers Int64 ofwords def
R126464:126465 compcert.lib.Integers <> xl var
R126461:126462 compcert.lib.Integers <> xh var
R126474:126480 compcert.lib.Integers Int64 ofwords def
R126492:126499 compcert.lib.Integers Int shru def
R126505:126511 compcert.lib.Integers Int sub def
R126515:126527 compcert.lib.Integers Int iwordsize def
R126513:126513 compcert.lib.Integers <> y var
R126501:126502 compcert.lib.Integers <> xh var
R126482:126489 compcert.lib.Integers Int zero def
R126410:126413 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R126428:126430 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R126397:126409 compcert.lib.Integers Int zwordsize def
R126414:126425 compcert.lib.Integers Int unsigned def
R126427:126427 compcert.lib.Integers <> y var
R126414:126425 compcert.lib.Integers Int unsigned def
R126427:126427 compcert.lib.Integers <> y var
R126431:126439 compcert.lib.Integers Int64 zwordsize def
R126568:126570 Coq.Init.Logic <> :type_scope:x_'='_x not
R126559:126567 compcert.lib.Integers Int64 zwordsize def
R126572:126574 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R126575:126587 compcert.lib.Integers Int zwordsize def
R126568:126570 Coq.Init.Logic <> :type_scope:x_'='_x not
R126559:126567 compcert.lib.Integers Int64 zwordsize def
R126572:126574 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R126575:126587 compcert.lib.Integers Int zwordsize def
R126654:126656 Coq.Init.Logic <> :type_scope:x_'='_x not
R126616:126627 compcert.lib.Integers Int unsigned def
R126630:126636 compcert.lib.Integers Int sub def
R126640:126652 compcert.lib.Integers Int iwordsize def
R126671:126673 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R126657:126668 compcert.lib.Integers Int unsigned def
R126674:126686 compcert.lib.Integers Int zwordsize def
R126654:126656 Coq.Init.Logic <> :type_scope:x_'='_x not
R126616:126627 compcert.lib.Integers Int unsigned def
R126630:126636 compcert.lib.Integers Int sub def
R126640:126652 compcert.lib.Integers Int iwordsize def
R126671:126673 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R126657:126668 compcert.lib.Integers Int unsigned def
R126674:126686 compcert.lib.Integers Int zwordsize def
R126701:126707 compcert.lib.Integers Int sub def
R126718:126734 compcert.lib.Integers Int unsigned_repr thm
R126718:126734 compcert.lib.Integers Int unsigned_repr thm
R126756:126781 compcert.lib.Integers Int unsigned_repr_wordsize thm
R126756:126781 compcert.lib.Integers Int unsigned_repr_wordsize thm
R126796:126815 compcert.lib.Integers Int unsigned_range_2 thm
R126796:126815 compcert.lib.Integers Int unsigned_range_2 thm
R126838:126855 compcert.lib.Integers Int64 same_bits_eq thm
R126838:126855 compcert.lib.Integers Int64 same_bits_eq thm
R126876:126885 compcert.lib.Integers Int64 bits_shru' thm
R126876:126885 compcert.lib.Integers Int64 bits_shru' thm
R126914:126925 compcert.lib.Integers Int64 bits_ofwords thm
R126914:126925 compcert.lib.Integers Int64 bits_ofwords thm
R126948:126950 compcert.lib.Coqlib <> zlt def
R126954:126966 compcert.lib.Integers Int zwordsize def
R126948:126950 compcert.lib.Coqlib <> zlt def
R126954:126966 compcert.lib.Integers Int zwordsize def
R126980:126992 compcert.lib.Integers Int bits_shru thm
R126980:126992 compcert.lib.Integers Int bits_shru thm
R127028:127030 compcert.lib.Coqlib <> zlt def
R127053:127061 compcert.lib.Integers Int64 zwordsize def
R127034:127036 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R127037:127048 compcert.lib.Integers Int unsigned def
R127028:127030 compcert.lib.Coqlib <> zlt def
R127053:127061 compcert.lib.Integers Int64 zwordsize def
R127034:127036 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R127037:127048 compcert.lib.Integers Int unsigned def
R127075:127082 compcert.lib.Coqlib <> zlt_true thm
R127075:127082 compcert.lib.Coqlib <> zlt_true thm
R127102:127113 compcert.lib.Integers Int64 bits_ofwords thm
R127102:127113 compcert.lib.Integers Int64 bits_ofwords thm
R127136:127144 compcert.lib.Coqlib <> zlt_false thm
R127136:127144 compcert.lib.Coqlib <> zlt_false thm
R127183:127191 compcert.lib.Coqlib <> zlt_false thm
R127183:127191 compcert.lib.Coqlib <> zlt_false thm
R127219:127227 compcert.lib.Coqlib <> zlt_false thm
R127219:127227 compcert.lib.Coqlib <> zlt_false thm
R127245:127257 compcert.lib.Integers Int bits_zero thm
R127245:127257 compcert.lib.Integers Int bits_zero thm
prf 127272:127286 Int64 decompose_shr_1
R127372:127376 Coq.Init.Logic <> :type_scope:x_'='_x not
R127350:127353 compcert.lib.Integers Int64 shr' def
R127371:127371 compcert.lib.Integers <> y var
R127356:127362 compcert.lib.Integers Int64 ofwords def
R127367:127368 compcert.lib.Integers <> xl var
R127364:127365 compcert.lib.Integers <> xh var
R127377:127383 compcert.lib.Integers Int64 ofwords def
R127411:127416 compcert.lib.Integers Int or def
R127435:127441 compcert.lib.Integers Int shl def
R127447:127453 compcert.lib.Integers Int sub def
R127469:127469 compcert.lib.Integers <> y var
R127455:127467 compcert.lib.Integers Int iwordsize def
R127443:127444 compcert.lib.Integers <> xh var
R127419:127426 compcert.lib.Integers Int shru def
R127431:127431 compcert.lib.Integers <> y var
R127428:127429 compcert.lib.Integers <> xl var
R127386:127392 compcert.lib.Integers Int shr def
R127397:127397 compcert.lib.Integers <> y var
R127394:127395 compcert.lib.Integers <> xh var
R127310:127313 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R127328:127330 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R127314:127325 compcert.lib.Integers Int unsigned def
R127327:127327 compcert.lib.Integers <> y var
R127314:127325 compcert.lib.Integers Int unsigned def
R127327:127327 compcert.lib.Integers <> y var
R127331:127343 compcert.lib.Integers Int zwordsize def
R127540:127542 Coq.Init.Logic <> :type_scope:x_'='_x not
R127502:127513 compcert.lib.Integers Int unsigned def
R127516:127522 compcert.lib.Integers Int sub def
R127524:127536 compcert.lib.Integers Int iwordsize def
R127556:127558 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R127543:127555 compcert.lib.Integers Int zwordsize def
R127559:127570 compcert.lib.Integers Int unsigned def
R127540:127542 Coq.Init.Logic <> :type_scope:x_'='_x not
R127502:127513 compcert.lib.Integers Int unsigned def
R127516:127522 compcert.lib.Integers Int sub def
R127524:127536 compcert.lib.Integers Int iwordsize def
R127556:127558 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R127543:127555 compcert.lib.Integers Int zwordsize def
R127559:127570 compcert.lib.Integers Int unsigned def
R127587:127593 compcert.lib.Integers Int sub def
R127604:127620 compcert.lib.Integers Int unsigned_repr thm
R127604:127620 compcert.lib.Integers Int unsigned_repr thm
R127642:127667 compcert.lib.Integers Int unsigned_repr_wordsize thm
R127642:127667 compcert.lib.Integers Int unsigned_repr_wordsize thm
R127681:127705 compcert.lib.Integers Int wordsize_max_unsigned thm
R127681:127705 compcert.lib.Integers Int wordsize_max_unsigned thm
R127736:127738 Coq.Init.Logic <> :type_scope:x_'='_x not
R127727:127735 compcert.lib.Integers Int64 zwordsize def
R127740:127742 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R127743:127755 compcert.lib.Integers Int zwordsize def
R127736:127738 Coq.Init.Logic <> :type_scope:x_'='_x not
R127727:127735 compcert.lib.Integers Int64 zwordsize def
R127740:127742 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R127743:127755 compcert.lib.Integers Int zwordsize def
R127782:127799 compcert.lib.Integers Int64 same_bits_eq thm
R127782:127799 compcert.lib.Integers Int64 same_bits_eq thm
R127820:127828 compcert.lib.Integers Int64 bits_shr' thm
R127820:127828 compcert.lib.Integers Int64 bits_shr' thm
R127857:127868 compcert.lib.Integers Int64 bits_ofwords thm
R127857:127868 compcert.lib.Integers Int64 bits_ofwords thm
R127891:127893 compcert.lib.Coqlib <> zlt def
R127897:127909 compcert.lib.Integers Int zwordsize def
R127891:127893 compcert.lib.Coqlib <> zlt def
R127897:127909 compcert.lib.Integers Int zwordsize def
R127923:127930 compcert.lib.Coqlib <> zlt_true thm
R127923:127930 compcert.lib.Coqlib <> zlt_true thm
R127953:127964 compcert.lib.Integers Int64 bits_ofwords thm
R127953:127964 compcert.lib.Integers Int64 bits_ofwords thm
R127986:127996 compcert.lib.Integers Int bits_or thm
R127986:127996 compcert.lib.Integers Int bits_or thm
R128016:128027 compcert.lib.Integers Int bits_shl thm
R128016:128027 compcert.lib.Integers Int bits_shl thm
R128050:128062 compcert.lib.Integers Int bits_shru thm
R128050:128062 compcert.lib.Integers Int bits_shru thm
R128098:128100 compcert.lib.Coqlib <> zlt def
R128124:128136 compcert.lib.Integers Int zwordsize def
R128104:128106 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R128107:128118 compcert.lib.Integers Int unsigned def
R128098:128100 compcert.lib.Coqlib <> zlt def
R128124:128136 compcert.lib.Integers Int zwordsize def
R128104:128106 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R128107:128118 compcert.lib.Integers Int unsigned def
R128151:128158 compcert.lib.Coqlib <> zlt_true thm
R128151:128158 compcert.lib.Coqlib <> zlt_true thm
R128180:128190 Coq.Bool.Bool <> orb_false_r thm
R128180:128190 Coq.Bool.Bool <> orb_false_r thm
R128209:128217 compcert.lib.Coqlib <> zlt_false thm
R128209:128217 compcert.lib.Coqlib <> zlt_false thm
R128240:128250 Coq.Bool.Bool <> orb_false_l thm
R128240:128250 Coq.Bool.Bool <> orb_false_l thm
R128279:128290 compcert.lib.Integers Int bits_shr thm
R128279:128290 compcert.lib.Integers Int bits_shr thm
R128315:128317 compcert.lib.Coqlib <> zlt def
R128340:128348 compcert.lib.Integers Int64 zwordsize def
R128321:128323 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R128324:128335 compcert.lib.Integers Int unsigned def
R128315:128317 compcert.lib.Coqlib <> zlt def
R128340:128348 compcert.lib.Integers Int64 zwordsize def
R128321:128323 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R128324:128335 compcert.lib.Integers Int unsigned def
R128362:128373 compcert.lib.Integers Int64 bits_ofwords thm
R128362:128373 compcert.lib.Integers Int64 bits_ofwords thm
R128396:128403 compcert.lib.Coqlib <> zlt_true thm
R128396:128403 compcert.lib.Coqlib <> zlt_true thm
R128423:128431 compcert.lib.Coqlib <> zlt_false thm
R128423:128431 compcert.lib.Coqlib <> zlt_false thm
R128470:128478 compcert.lib.Coqlib <> zlt_false thm
R128470:128478 compcert.lib.Coqlib <> zlt_false thm
R128498:128509 compcert.lib.Integers Int64 bits_ofwords thm
R128498:128509 compcert.lib.Integers Int64 bits_ofwords thm
R128532:128540 compcert.lib.Coqlib <> zlt_false thm
R128532:128540 compcert.lib.Coqlib <> zlt_false thm
prf 128573:128587 Int64 decompose_shr_2
R128681:128685 Coq.Init.Logic <> :type_scope:x_'='_x not
R128659:128662 compcert.lib.Integers Int64 shr' def
R128680:128680 compcert.lib.Integers <> y var
R128665:128671 compcert.lib.Integers Int64 ofwords def
R128676:128677 compcert.lib.Integers <> xl var
R128673:128674 compcert.lib.Integers <> xh var
R128686:128692 compcert.lib.Integers Int64 ofwords def
R128750:128756 compcert.lib.Integers Int shr def
R128762:128768 compcert.lib.Integers Int sub def
R128772:128784 compcert.lib.Integers Int iwordsize def
R128770:128770 compcert.lib.Integers <> y var
R128758:128759 compcert.lib.Integers <> xh var
R128695:128701 compcert.lib.Integers Int shr def
R128707:128713 compcert.lib.Integers Int sub def
R128729:128735 compcert.lib.Integers Int one def
R128715:128727 compcert.lib.Integers Int iwordsize def
R128703:128704 compcert.lib.Integers <> xh var
R128623:128626 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R128641:128643 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R128610:128622 compcert.lib.Integers Int zwordsize def
R128627:128638 compcert.lib.Integers Int unsigned def
R128640:128640 compcert.lib.Integers <> y var
R128627:128638 compcert.lib.Integers Int unsigned def
R128640:128640 compcert.lib.Integers <> y var
R128644:128652 compcert.lib.Integers Int64 zwordsize def
R128825:128827 Coq.Init.Logic <> :type_scope:x_'='_x not
R128816:128824 compcert.lib.Integers Int64 zwordsize def
R128829:128831 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R128832:128844 compcert.lib.Integers Int zwordsize def
R128825:128827 Coq.Init.Logic <> :type_scope:x_'='_x not
R128816:128824 compcert.lib.Integers Int64 zwordsize def
R128829:128831 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R128832:128844 compcert.lib.Integers Int zwordsize def
R128911:128913 Coq.Init.Logic <> :type_scope:x_'='_x not
R128873:128884 compcert.lib.Integers Int unsigned def
R128887:128893 compcert.lib.Integers Int sub def
R128897:128909 compcert.lib.Integers Int iwordsize def
R128928:128930 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R128914:128925 compcert.lib.Integers Int unsigned def
R128931:128943 compcert.lib.Integers Int zwordsize def
R128911:128913 Coq.Init.Logic <> :type_scope:x_'='_x not
R128873:128884 compcert.lib.Integers Int unsigned def
R128887:128893 compcert.lib.Integers Int sub def
R128897:128909 compcert.lib.Integers Int iwordsize def
R128928:128930 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R128914:128925 compcert.lib.Integers Int unsigned def
R128931:128943 compcert.lib.Integers Int zwordsize def
R128958:128964 compcert.lib.Integers Int sub def
R128975:128991 compcert.lib.Integers Int unsigned_repr thm
R128975:128991 compcert.lib.Integers Int unsigned_repr thm
R129013:129038 compcert.lib.Integers Int unsigned_repr_wordsize thm
R129013:129038 compcert.lib.Integers Int unsigned_repr_wordsize thm
R129053:129072 compcert.lib.Integers Int unsigned_range_2 thm
R129053:129072 compcert.lib.Integers Int unsigned_range_2 thm
R129095:129112 compcert.lib.Integers Int64 same_bits_eq thm
R129095:129112 compcert.lib.Integers Int64 same_bits_eq thm
R129133:129141 compcert.lib.Integers Int64 bits_shr' thm
R129133:129141 compcert.lib.Integers Int64 bits_shr' thm
R129170:129181 compcert.lib.Integers Int64 bits_ofwords thm
R129170:129181 compcert.lib.Integers Int64 bits_ofwords thm
R129204:129206 compcert.lib.Coqlib <> zlt def
R129210:129222 compcert.lib.Integers Int zwordsize def
R129204:129206 compcert.lib.Coqlib <> zlt def
R129210:129222 compcert.lib.Integers Int zwordsize def
R129236:129247 compcert.lib.Integers Int bits_shr thm
R129236:129247 compcert.lib.Integers Int bits_shr thm
R129283:129285 compcert.lib.Coqlib <> zlt def
R129308:129316 compcert.lib.Integers Int64 zwordsize def
R129289:129291 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129292:129303 compcert.lib.Integers Int unsigned def
R129283:129285 compcert.lib.Coqlib <> zlt def
R129308:129316 compcert.lib.Integers Int64 zwordsize def
R129289:129291 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129292:129303 compcert.lib.Integers Int unsigned def
R129330:129337 compcert.lib.Coqlib <> zlt_true thm
R129330:129337 compcert.lib.Coqlib <> zlt_true thm
R129357:129368 compcert.lib.Integers Int64 bits_ofwords thm
R129357:129368 compcert.lib.Integers Int64 bits_ofwords thm
R129391:129399 compcert.lib.Coqlib <> zlt_false thm
R129391:129399 compcert.lib.Coqlib <> zlt_false thm
R129438:129446 compcert.lib.Coqlib <> zlt_false thm
R129438:129446 compcert.lib.Coqlib <> zlt_false thm
R129466:129477 compcert.lib.Integers Int64 bits_ofwords thm
R129466:129477 compcert.lib.Integers Int64 bits_ofwords thm
R129500:129508 compcert.lib.Coqlib <> zlt_false thm
R129500:129508 compcert.lib.Coqlib <> zlt_false thm
R129536:129547 compcert.lib.Integers Int bits_shr thm
R129536:129547 compcert.lib.Integers Int bits_shr thm
R129635:129637 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129622:129634 compcert.lib.Integers Int zwordsize def
R129570:129581 compcert.lib.Integers Int unsigned def
R129584:129590 compcert.lib.Integers Int sub def
R129606:129612 compcert.lib.Integers Int one def
R129592:129604 compcert.lib.Integers Int iwordsize def
R129570:129581 compcert.lib.Integers Int unsigned def
R129584:129590 compcert.lib.Integers Int sub def
R129606:129612 compcert.lib.Integers Int one def
R129592:129604 compcert.lib.Integers Int iwordsize def
R129635:129637 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129622:129634 compcert.lib.Integers Int zwordsize def
R129654:129656 compcert.lib.Coqlib <> zlt def
R129679:129687 compcert.lib.Integers Int64 zwordsize def
R129660:129662 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129663:129674 compcert.lib.Integers Int unsigned def
R129701:129712 compcert.lib.Integers Int64 bits_ofwords thm
R129654:129656 compcert.lib.Coqlib <> zlt def
R129679:129687 compcert.lib.Integers Int64 zwordsize def
R129660:129662 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129663:129674 compcert.lib.Integers Int unsigned def
R129701:129712 compcert.lib.Integers Int64 bits_ofwords thm
R129701:129712 compcert.lib.Integers Int64 bits_ofwords thm
R129744:129752 compcert.lib.Coqlib <> zlt_false thm
R129744:129752 compcert.lib.Coqlib <> zlt_false thm
R129786:129788 compcert.lib.Coqlib <> zlt def
R129832:129844 compcert.lib.Integers Int zwordsize def
R129808:129811 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129829:129829 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129792:129794 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129795:129807 compcert.lib.Integers Int zwordsize def
R129825:129827 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129812:129824 compcert.lib.Integers Int zwordsize def
R129786:129788 compcert.lib.Coqlib <> zlt def
R129832:129844 compcert.lib.Integers Int zwordsize def
R129808:129811 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129829:129829 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129792:129794 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129795:129807 compcert.lib.Integers Int zwordsize def
R129825:129827 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129812:129824 compcert.lib.Integers Int zwordsize def
R129875:129883 compcert.lib.Coqlib <> zlt_false thm
R129875:129883 compcert.lib.Coqlib <> zlt_false thm
R129917:129919 compcert.lib.Coqlib <> zlt def
R129963:129975 compcert.lib.Integers Int zwordsize def
R129939:129942 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129960:129960 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129923:129925 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129926:129938 compcert.lib.Integers Int zwordsize def
R129956:129958 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129943:129955 compcert.lib.Integers Int zwordsize def
R129917:129919 compcert.lib.Coqlib <> zlt def
R129963:129975 compcert.lib.Integers Int zwordsize def
R129939:129942 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129960:129960 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R129923:129925 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129926:129938 compcert.lib.Integers Int zwordsize def
R129956:129958 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R129943:129955 compcert.lib.Integers Int zwordsize def
prf 129998:130010 Int64 decompose_add
R130072:130076 Coq.Init.Logic <> :type_scope:x_'='_x not
R130037:130039 compcert.lib.Integers Int64 add def
R130058:130064 compcert.lib.Integers Int64 ofwords def
R130069:130070 compcert.lib.Integers <> yl var
R130066:130067 compcert.lib.Integers <> yh var
R130042:130048 compcert.lib.Integers Int64 ofwords def
R130053:130054 compcert.lib.Integers <> xl var
R130050:130051 compcert.lib.Integers <> xh var
R130077:130083 compcert.lib.Integers Int64 ofwords def
R130153:130159 compcert.lib.Integers Int add def
R130164:130165 compcert.lib.Integers <> yl var
R130161:130162 compcert.lib.Integers <> xl var
R130086:130092 compcert.lib.Integers Int add def
R130111:130123 compcert.lib.Integers Int add_carry def
R130131:130138 compcert.lib.Integers Int zero def
R130128:130129 compcert.lib.Integers <> yl var
R130125:130126 compcert.lib.Integers <> xl var
R130095:130101 compcert.lib.Integers Int add def
R130106:130107 compcert.lib.Integers <> yh var
R130103:130104 compcert.lib.Integers <> xh var
R130204:130214 compcert.lib.Integers Int64 ofwords_add thm
R130204:130214 compcert.lib.Integers Int64 ofwords_add thm
R130225:130236 compcert.lib.Integers Int64 add_unsigned thm
R130225:130236 compcert.lib.Integers Int64 add_unsigned thm
R130247:130258 compcert.lib.Integers Int64 eqm_samerepr thm
R130247:130258 compcert.lib.Integers Int64 eqm_samerepr thm
R130274:130285 compcert.lib.Integers Int64 ofwords_add' thm
R130274:130285 compcert.lib.Integers Int64 ofwords_add' thm
R130274:130285 compcert.lib.Integers Int64 ofwords_add' thm
R130274:130285 compcert.lib.Integers Int64 ofwords_add' thm
R130297:130318 compcert.lib.Integers Int unsigned_add_carry thm
R130297:130318 compcert.lib.Integers Int unsigned_add_carry thm
R130342:130354 compcert.lib.Integers Int add_carry def
R130362:130369 compcert.lib.Integers Int zero def
R130342:130354 compcert.lib.Integers Int add_carry def
R130362:130369 compcert.lib.Integers Int zero def
R130386:130397 compcert.lib.Integers Int unsigned def
R130415:130426 compcert.lib.Integers Int unsigned def
R130446:130457 compcert.lib.Integers Int unsigned def
R130475:130486 compcert.lib.Integers Int unsigned def
R130386:130397 compcert.lib.Integers Int unsigned def
R130415:130426 compcert.lib.Integers Int unsigned def
R130446:130457 compcert.lib.Integers Int unsigned def
R130475:130486 compcert.lib.Integers Int unsigned def
R130520:130524 Coq.ZArith.Zpower <> two_p def
R130502:130512 compcert.lib.Integers Int modulus def
R130502:130512 compcert.lib.Integers Int modulus def
R130520:130524 Coq.ZArith.Zpower <> two_p def
R130560:130563 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130582:130582 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130555:130557 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130544:130546 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130547:130551 Coq.ZArith.Zpower <> two_p def
R130577:130579 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130566:130568 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130569:130573 Coq.ZArith.Zpower <> two_p def
R130616:130619 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130627:130627 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130596:130596 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130604:130607 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130599:130601 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130608:130612 Coq.ZArith.Zpower <> two_p def
R130622:130624 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130616:130619 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130627:130627 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130596:130596 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130604:130607 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130599:130601 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130608:130612 Coq.ZArith.Zpower <> two_p def
R130622:130624 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130560:130563 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130582:130582 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130555:130557 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130544:130546 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130547:130551 Coq.ZArith.Zpower <> two_p def
R130577:130579 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130566:130568 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130569:130573 Coq.ZArith.Zpower <> two_p def
R130702:130719 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130756:130756 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130691:130693 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130650:130661 compcert.lib.Integers Int unsigned def
R130664:130670 compcert.lib.Integers Int add def
R130673:130679 compcert.lib.Integers Int add def
R130694:130698 Coq.ZArith.Zpower <> two_p def
R130727:130729 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130722:130724 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130745:130747 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130730:130741 compcert.lib.Integers Int unsigned def
R130748:130752 Coq.ZArith.Zpower <> two_p def
R130842:130856 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130864:130864 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130770:130770 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130830:130833 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130812:130814 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130771:130782 compcert.lib.Integers Int unsigned def
R130785:130791 compcert.lib.Integers Int add def
R130794:130800 compcert.lib.Integers Int add def
R130815:130826 compcert.lib.Integers Int unsigned def
R130834:130838 Coq.ZArith.Zpower <> two_p def
R130859:130861 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130842:130856 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130864:130864 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130770:130770 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130830:130833 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130812:130814 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130771:130782 compcert.lib.Integers Int unsigned def
R130785:130791 compcert.lib.Integers Int add def
R130794:130800 compcert.lib.Integers Int add def
R130815:130826 compcert.lib.Integers Int unsigned def
R130834:130838 Coq.ZArith.Zpower <> two_p def
R130859:130861 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130702:130719 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130756:130756 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130691:130693 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130650:130661 compcert.lib.Integers Int unsigned def
R130664:130670 compcert.lib.Integers Int add def
R130673:130679 compcert.lib.Integers Int add def
R130694:130698 Coq.ZArith.Zpower <> two_p def
R130727:130729 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130722:130724 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130745:130747 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R130730:130741 compcert.lib.Integers Int unsigned def
R130748:130752 Coq.ZArith.Zpower <> two_p def
R130884:130890 compcert.lib.Integers Int64 eqm_add thm
R130884:130890 compcert.lib.Integers Int64 eqm_add thm
R130902:130909 compcert.lib.Integers Int64 eqm_refl thm
R130902:130909 compcert.lib.Integers Int64 eqm_refl thm
R130918:130929 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R130918:130929 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R130945:130947 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130958:130958 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130984:130987 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130966:130968 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130961:130963 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130969:130980 compcert.lib.Integers Int unsigned def
R130988:130999 compcert.lib.Integers Int unsigned def
R130958:130958 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130984:130987 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R130966:130968 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130961:130963 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R130969:130980 compcert.lib.Integers Int unsigned def
R130988:130999 compcert.lib.Integers Int unsigned def
R130945:130947 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131022:131032 compcert.lib.Integers Int eqm_sub thm
R131022:131032 compcert.lib.Integers Int eqm_sub thm
R131044:131055 compcert.lib.Integers Int eqm_refl thm
R131044:131055 compcert.lib.Integers Int eqm_refl thm
R131066:131088 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R131066:131088 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R131097:131107 compcert.lib.Integers Int eqm_add thm
R131097:131107 compcert.lib.Integers Int eqm_add thm
R131119:131130 compcert.lib.Integers Int eqm_refl thm
R131119:131130 compcert.lib.Integers Int eqm_refl thm
R131142:131164 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R131142:131164 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R131173:131184 compcert.lib.Integers Int eqm_refl thm
R131173:131184 compcert.lib.Integers Int eqm_refl thm
prf 131200:131212 Int64 decompose_sub
R131274:131278 Coq.Init.Logic <> :type_scope:x_'='_x not
R131239:131241 compcert.lib.Integers Int64 sub def
R131260:131266 compcert.lib.Integers Int64 ofwords def
R131271:131272 compcert.lib.Integers <> yl var
R131268:131269 compcert.lib.Integers <> yh var
R131244:131250 compcert.lib.Integers Int64 ofwords def
R131255:131256 compcert.lib.Integers <> xl var
R131252:131253 compcert.lib.Integers <> xh var
R131279:131285 compcert.lib.Integers Int64 ofwords def
R131356:131362 compcert.lib.Integers Int sub def
R131367:131368 compcert.lib.Integers <> yl var
R131364:131365 compcert.lib.Integers <> xl var
R131288:131294 compcert.lib.Integers Int sub def
R131313:131326 compcert.lib.Integers Int sub_borrow def
R131334:131341 compcert.lib.Integers Int zero def
R131331:131332 compcert.lib.Integers <> yl var
R131328:131329 compcert.lib.Integers <> xl var
R131297:131303 compcert.lib.Integers Int sub def
R131308:131309 compcert.lib.Integers <> yh var
R131305:131306 compcert.lib.Integers <> xh var
R131407:131417 compcert.lib.Integers Int64 ofwords_add thm
R131407:131417 compcert.lib.Integers Int64 ofwords_add thm
R131428:131439 compcert.lib.Integers Int64 eqm_samerepr thm
R131428:131439 compcert.lib.Integers Int64 eqm_samerepr thm
R131455:131466 compcert.lib.Integers Int64 ofwords_add' thm
R131455:131466 compcert.lib.Integers Int64 ofwords_add' thm
R131455:131466 compcert.lib.Integers Int64 ofwords_add' thm
R131455:131466 compcert.lib.Integers Int64 ofwords_add' thm
R131478:131500 compcert.lib.Integers Int unsigned_sub_borrow thm
R131478:131500 compcert.lib.Integers Int unsigned_sub_borrow thm
R131524:131537 compcert.lib.Integers Int sub_borrow def
R131545:131552 compcert.lib.Integers Int zero def
R131524:131537 compcert.lib.Integers Int sub_borrow def
R131545:131552 compcert.lib.Integers Int zero def
R131569:131580 compcert.lib.Integers Int unsigned def
R131598:131609 compcert.lib.Integers Int unsigned def
R131629:131640 compcert.lib.Integers Int unsigned def
R131658:131669 compcert.lib.Integers Int unsigned def
R131569:131580 compcert.lib.Integers Int unsigned def
R131598:131609 compcert.lib.Integers Int unsigned def
R131629:131640 compcert.lib.Integers Int unsigned def
R131658:131669 compcert.lib.Integers Int unsigned def
R131703:131707 Coq.ZArith.Zpower <> two_p def
R131685:131695 compcert.lib.Integers Int modulus def
R131685:131695 compcert.lib.Integers Int modulus def
R131703:131707 Coq.ZArith.Zpower <> two_p def
R131743:131746 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131765:131765 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131738:131740 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131727:131729 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131730:131734 Coq.ZArith.Zpower <> two_p def
R131760:131762 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131749:131751 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131752:131756 Coq.ZArith.Zpower <> two_p def
R131799:131802 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131810:131810 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131779:131779 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131787:131790 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131782:131784 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131791:131795 Coq.ZArith.Zpower <> two_p def
R131805:131807 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131799:131802 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131810:131810 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131779:131779 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131787:131790 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131782:131784 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131791:131795 Coq.ZArith.Zpower <> two_p def
R131805:131807 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131743:131746 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131765:131765 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131738:131740 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131727:131729 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131730:131734 Coq.ZArith.Zpower <> two_p def
R131760:131762 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131749:131751 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131752:131756 Coq.ZArith.Zpower <> two_p def
R131885:131902 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131939:131939 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131874:131876 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131833:131844 compcert.lib.Integers Int unsigned def
R131847:131853 compcert.lib.Integers Int sub def
R131856:131862 compcert.lib.Integers Int sub def
R131877:131881 Coq.ZArith.Zpower <> two_p def
R131910:131912 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131905:131907 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131928:131930 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131913:131924 compcert.lib.Integers Int unsigned def
R131931:131935 Coq.ZArith.Zpower <> two_p def
R132025:132039 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132047:132047 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131953:131953 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R132013:132016 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131995:131997 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131954:131965 compcert.lib.Integers Int unsigned def
R131968:131974 compcert.lib.Integers Int sub def
R131977:131983 compcert.lib.Integers Int sub def
R131998:132009 compcert.lib.Integers Int unsigned def
R132017:132021 Coq.ZArith.Zpower <> two_p def
R132042:132044 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R132025:132039 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132047:132047 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131953:131953 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R132013:132016 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131995:131997 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131954:131965 compcert.lib.Integers Int unsigned def
R131968:131974 compcert.lib.Integers Int sub def
R131977:131983 compcert.lib.Integers Int sub def
R131998:132009 compcert.lib.Integers Int unsigned def
R132017:132021 Coq.ZArith.Zpower <> two_p def
R132042:132044 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131885:131902 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131939:131939 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131874:131876 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131833:131844 compcert.lib.Integers Int unsigned def
R131847:131853 compcert.lib.Integers Int sub def
R131856:131862 compcert.lib.Integers Int sub def
R131877:131881 Coq.ZArith.Zpower <> two_p def
R131910:131912 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R131905:131907 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R131928:131930 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R131913:131924 compcert.lib.Integers Int unsigned def
R131931:131935 Coq.ZArith.Zpower <> two_p def
R132067:132073 compcert.lib.Integers Int64 eqm_add thm
R132067:132073 compcert.lib.Integers Int64 eqm_add thm
R132085:132092 compcert.lib.Integers Int64 eqm_refl thm
R132085:132092 compcert.lib.Integers Int64 eqm_refl thm
R132101:132112 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R132101:132112 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R132128:132130 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R132141:132141 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132167:132170 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132149:132151 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R132144:132146 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R132152:132163 compcert.lib.Integers Int unsigned def
R132171:132182 compcert.lib.Integers Int unsigned def
R132141:132141 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132167:132170 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132149:132151 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R132144:132146 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R132152:132163 compcert.lib.Integers Int unsigned def
R132171:132182 compcert.lib.Integers Int unsigned def
R132128:132130 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R132205:132215 compcert.lib.Integers Int eqm_add thm
R132205:132215 compcert.lib.Integers Int eqm_add thm
R132227:132238 compcert.lib.Integers Int eqm_refl thm
R132227:132238 compcert.lib.Integers Int eqm_refl thm
R132249:132271 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R132249:132271 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R132280:132290 compcert.lib.Integers Int eqm_add thm
R132280:132290 compcert.lib.Integers Int eqm_add thm
R132302:132313 compcert.lib.Integers Int eqm_refl thm
R132302:132313 compcert.lib.Integers Int eqm_refl thm
R132325:132347 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R132325:132347 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R132356:132367 compcert.lib.Integers Int eqm_refl thm
R132356:132367 compcert.lib.Integers Int eqm_refl thm
prf 132383:132396 Int64 decompose_sub'
R132458:132462 Coq.Init.Logic <> :type_scope:x_'='_x not
R132423:132425 compcert.lib.Integers Int64 sub def
R132444:132450 compcert.lib.Integers Int64 ofwords def
R132455:132456 compcert.lib.Integers <> yl var
R132452:132453 compcert.lib.Integers <> yh var
R132428:132434 compcert.lib.Integers Int64 ofwords def
R132439:132440 compcert.lib.Integers <> xl var
R132436:132437 compcert.lib.Integers <> xh var
R132463:132469 compcert.lib.Integers Int64 ofwords def
R132558:132564 compcert.lib.Integers Int sub def
R132569:132570 compcert.lib.Integers <> yl var
R132566:132567 compcert.lib.Integers <> xl var
R132472:132478 compcert.lib.Integers Int add def
R132507:132519 compcert.lib.Integers Int add_carry def
R132537:132543 compcert.lib.Integers Int one def
R132525:132531 compcert.lib.Integers Int not def
R132533:132534 compcert.lib.Integers <> yl var
R132521:132522 compcert.lib.Integers <> xl var
R132481:132487 compcert.lib.Integers Int add def
R132493:132499 compcert.lib.Integers Int not def
R132501:132502 compcert.lib.Integers <> yh var
R132489:132490 compcert.lib.Integers <> xh var
R132599:132611 compcert.lib.Integers Int64 decompose_sub thm
R132599:132611 compcert.lib.Integers Int64 decompose_sub thm
R132634:132657 compcert.lib.Integers Int sub_borrow_add_carry thm
R132634:132657 compcert.lib.Integers Int sub_borrow_add_carry thm
R132678:132694 compcert.lib.Integers Int sub_add_not_3 thm
R132678:132694 compcert.lib.Integers Int sub_add_not_3 thm
R132705:132717 compcert.lib.Integers Int xor_assoc thm
R132705:132717 compcert.lib.Integers Int xor_assoc thm
R132728:132739 compcert.lib.Integers Int xor_idem thm
R132728:132739 compcert.lib.Integers Int xor_idem thm
R132753:132764 compcert.lib.Integers Int xor_zero thm
R132753:132764 compcert.lib.Integers Int xor_zero thm
R132783:132796 compcert.lib.Integers Int xor_zero_l thm
R132783:132796 compcert.lib.Integers Int xor_zero_l thm
R132806:132818 compcert.lib.Integers Int add_carry def
R132833:132835 compcert.lib.Coqlib <> zlt def
R132906:132916 compcert.lib.Integers Int modulus def
R132881:132883 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132853:132855 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132838:132849 compcert.lib.Integers Int unsigned def
R132856:132867 compcert.lib.Integers Int unsigned def
R132870:132876 compcert.lib.Integers Int not def
R132884:132895 compcert.lib.Integers Int unsigned def
R132897:132903 compcert.lib.Integers Int one def
R132951:132962 compcert.lib.Integers Int mkint_eq thm
R132833:132835 compcert.lib.Coqlib <> zlt def
R132906:132916 compcert.lib.Integers Int modulus def
R132881:132883 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132853:132855 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R132838:132849 compcert.lib.Integers Int unsigned def
R132856:132867 compcert.lib.Integers Int unsigned def
R132870:132876 compcert.lib.Integers Int not def
R132884:132895 compcert.lib.Integers Int unsigned def
R132897:132903 compcert.lib.Integers Int one def
R132951:132962 compcert.lib.Integers Int mkint_eq thm
R132951:132962 compcert.lib.Integers Int mkint_eq thm
def 132988:132991 Int64 mul'
R132999:133005 compcert.lib.Integers Int int rec
R133010:133012 compcert.lib.Integers Int64 int rec
R133017:133020 compcert.lib.Integers Int64 repr def
R133037:133039 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133023:133034 compcert.lib.Integers Int unsigned def
R133036:133036 compcert.lib.Integers <> x var
R133040:133051 compcert.lib.Integers Int unsigned def
R133053:133053 compcert.lib.Integers <> y var
prf 133064:133073 Int64 mul'_mulhu
R133098:133100 Coq.Init.Logic <> :type_scope:x_'='_x not
R133090:133093 compcert.lib.Integers Int64 mul' def
R133097:133097 compcert.lib.Integers <> y var
R133095:133095 compcert.lib.Integers <> x var
R133101:133107 compcert.lib.Integers Int64 ofwords def
R133126:133132 compcert.lib.Integers Int mul def
R133136:133136 compcert.lib.Integers <> y var
R133134:133134 compcert.lib.Integers <> x var
R133110:133118 compcert.lib.Integers Int mulhu def
R133122:133122 compcert.lib.Integers <> y var
R133120:133120 compcert.lib.Integers <> x var
R133168:133178 compcert.lib.Integers Int64 ofwords_add thm
R133168:133178 compcert.lib.Integers Int64 ofwords_add thm
R133188:133191 compcert.lib.Integers Int64 mul' def
R133194:133202 compcert.lib.Integers Int mulhu def
R133205:133211 compcert.lib.Integers Int mul def
R133241:133243 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133227:133238 compcert.lib.Integers Int unsigned def
R133244:133255 compcert.lib.Integers Int unsigned def
R133241:133243 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133227:133238 compcert.lib.Integers Int unsigned def
R133244:133255 compcert.lib.Integers Int unsigned def
R133275:133277 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R133278:133288 compcert.lib.Integers Int modulus def
R133275:133277 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R133278:133288 compcert.lib.Integers Int modulus def
R133304:133308 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R133309:133319 compcert.lib.Integers Int modulus def
R133304:133308 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R133309:133319 compcert.lib.Integers Int modulus def
R133340:133343 compcert.lib.Integers Int64 repr def
R133362:133364 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133348:133350 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133351:133361 compcert.lib.Integers Int modulus def
R133340:133343 compcert.lib.Integers Int64 repr def
R133362:133364 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133348:133350 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133351:133361 compcert.lib.Integers Int modulus def
R133390:133399 Coq.ZArith.BinInt <> Zmult_comm syndef
R133390:133399 Coq.ZArith.BinInt <> Zmult_comm syndef
R133408:133419 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R133408:133419 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R133428:133442 compcert.lib.Integers Int modulus_pos thm
R133428:133442 compcert.lib.Integers Int modulus_pos thm
R133454:133465 compcert.lib.Integers Int64 eqm_samerepr thm
R133454:133465 compcert.lib.Integers Int64 eqm_samerepr thm
R133474:133480 compcert.lib.Integers Int64 eqm_add thm
R133474:133480 compcert.lib.Integers Int64 eqm_add thm
R133489:133500 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R133489:133500 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R133529:133548 compcert.lib.Integers Int unsigned_repr_eq thm
R133529:133548 compcert.lib.Integers Int unsigned_repr_eq thm
R133557:133564 compcert.lib.Integers Int64 eqm_refl thm
R133557:133564 compcert.lib.Integers Int64 eqm_refl thm
prf 133579:133591 Int64 decompose_mul
R133653:133657 Coq.Init.Logic <> :type_scope:x_'='_x not
R133618:133620 compcert.lib.Integers Int64 mul def
R133639:133645 compcert.lib.Integers Int64 ofwords def
R133650:133651 compcert.lib.Integers <> yl var
R133647:133648 compcert.lib.Integers <> yh var
R133623:133629 compcert.lib.Integers Int64 ofwords def
R133634:133635 compcert.lib.Integers <> xl var
R133631:133632 compcert.lib.Integers <> xh var
R133658:133664 compcert.lib.Integers Int64 ofwords def
R133751:133756 compcert.lib.Integers Int64 loword def
R133759:133762 compcert.lib.Integers Int64 mul' def
R133767:133768 compcert.lib.Integers <> yl var
R133764:133765 compcert.lib.Integers <> xl var
R133667:133673 compcert.lib.Integers Int add def
R133724:133730 compcert.lib.Integers Int mul def
R133735:133736 compcert.lib.Integers <> yl var
R133732:133733 compcert.lib.Integers <> xh var
R133676:133682 compcert.lib.Integers Int add def
R133707:133713 compcert.lib.Integers Int mul def
R133718:133719 compcert.lib.Integers <> yh var
R133715:133716 compcert.lib.Integers <> xl var
R133685:133690 compcert.lib.Integers Int64 hiword def
R133693:133696 compcert.lib.Integers Int64 mul' def
R133701:133702 compcert.lib.Integers <> yl var
R133698:133699 compcert.lib.Integers <> xl var
R133804:133809 compcert.lib.Integers Int64 loword def
R133812:133815 compcert.lib.Integers Int64 mul' def
R133837:133842 compcert.lib.Integers Int64 hiword def
R133845:133848 compcert.lib.Integers Int64 mul' def
R133804:133809 compcert.lib.Integers Int64 loword def
R133812:133815 compcert.lib.Integers Int64 mul' def
R133837:133842 compcert.lib.Integers Int64 hiword def
R133845:133848 compcert.lib.Integers Int64 mul' def
R133895:133897 Coq.Init.Logic <> :type_scope:x_'='_x not
R133874:133881 compcert.lib.Integers Int64 unsigned def
R133884:133887 compcert.lib.Integers Int64 mul' def
R133924:133926 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133913:133915 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133898:133909 compcert.lib.Integers Int unsigned def
R133916:133920 Coq.ZArith.Zpower <> two_p def
R133927:133938 compcert.lib.Integers Int unsigned def
R133895:133897 Coq.Init.Logic <> :type_scope:x_'='_x not
R133874:133881 compcert.lib.Integers Int64 unsigned def
R133884:133887 compcert.lib.Integers Int64 mul' def
R133924:133926 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R133913:133915 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R133898:133909 compcert.lib.Integers Int unsigned def
R133916:133920 Coq.ZArith.Zpower <> two_p def
R133927:133938 compcert.lib.Integers Int unsigned def
R133961:133977 compcert.lib.Integers Int64 ofwords_recompose thm
R133980:133983 compcert.lib.Integers Int64 mul' def
R133961:133977 compcert.lib.Integers Int64 ofwords_recompose thm
R133980:133983 compcert.lib.Integers Int64 mul' def
R134000:134011 compcert.lib.Integers Int64 ofwords_add' thm
R134000:134011 compcert.lib.Integers Int64 ofwords_add' thm
R134036:134046 compcert.lib.Integers Int64 ofwords_add thm
R134036:134046 compcert.lib.Integers Int64 ofwords_add thm
R134056:134058 compcert.lib.Integers Int64 mul def
R134070:134081 compcert.lib.Integers Int64 ofwords_add' thm
R134070:134081 compcert.lib.Integers Int64 ofwords_add' thm
R134070:134081 compcert.lib.Integers Int64 ofwords_add' thm
R134070:134081 compcert.lib.Integers Int64 ofwords_add' thm
R134097:134108 compcert.lib.Integers Int unsigned def
R134126:134137 compcert.lib.Integers Int unsigned def
R134157:134168 compcert.lib.Integers Int unsigned def
R134186:134197 compcert.lib.Integers Int unsigned def
R134097:134108 compcert.lib.Integers Int unsigned def
R134126:134137 compcert.lib.Integers Int unsigned def
R134157:134168 compcert.lib.Integers Int unsigned def
R134186:134197 compcert.lib.Integers Int unsigned def
R134217:134228 compcert.lib.Integers Int unsigned def
R134217:134228 compcert.lib.Integers Int unsigned def
R134251:134262 compcert.lib.Integers Int unsigned def
R134251:134262 compcert.lib.Integers Int unsigned def
R134290:134293 compcert.lib.Integers Int64 repr def
R134333:134335 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134296:134296 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134321:134324 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134297:134297 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134310:134313 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134300:134302 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134305:134307 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134316:134318 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134325:134329 Coq.ZArith.Zpower <> two_p def
R134290:134293 compcert.lib.Integers Int64 repr def
R134333:134335 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134296:134296 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134321:134324 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134297:134297 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134310:134313 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134300:134302 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134305:134307 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134316:134318 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134325:134329 Coq.ZArith.Zpower <> two_p def
R134350:134361 compcert.lib.Integers Int64 eqm_samerepr thm
R134350:134361 compcert.lib.Integers Int64 eqm_samerepr thm
R134370:134376 compcert.lib.Integers Int64 eqm_add thm
R134370:134376 compcert.lib.Integers Int64 eqm_add thm
R134388:134395 compcert.lib.Integers Int64 eqm_refl thm
R134388:134395 compcert.lib.Integers Int64 eqm_refl thm
R134407:134418 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R134407:134418 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R134431:134446 compcert.lib.Integers Int add_unsigned thm
R134431:134446 compcert.lib.Integers Int add_unsigned thm
R134455:134477 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134455:134477 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134486:134496 compcert.lib.Integers Int eqm_add thm
R134486:134496 compcert.lib.Integers Int eqm_add thm
R134509:134524 compcert.lib.Integers Int add_unsigned thm
R134509:134524 compcert.lib.Integers Int add_unsigned thm
R134533:134555 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134533:134555 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134564:134574 compcert.lib.Integers Int eqm_add thm
R134564:134574 compcert.lib.Integers Int eqm_add thm
R134585:134596 compcert.lib.Integers Int eqm_refl thm
R134585:134596 compcert.lib.Integers Int eqm_refl thm
R134608:134614 compcert.lib.Integers Int mul def
R134623:134645 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134623:134645 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134654:134665 compcert.lib.Integers Int eqm_refl thm
R134654:134665 compcert.lib.Integers Int eqm_refl thm
R134677:134683 compcert.lib.Integers Int mul def
R134692:134714 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134692:134714 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R134723:134734 compcert.lib.Integers Int eqm_refl thm
R134723:134734 compcert.lib.Integers Int eqm_refl thm
R134753:134756 compcert.lib.Integers Int64 repr def
R134780:134782 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134759:134766 compcert.lib.Integers Int64 unsigned def
R134769:134772 compcert.lib.Integers Int64 mul' def
R134783:134783 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134801:134804 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134791:134793 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134786:134788 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134796:134798 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134805:134809 Coq.ZArith.Zpower <> two_p def
R134753:134756 compcert.lib.Integers Int64 repr def
R134780:134782 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134759:134766 compcert.lib.Integers Int64 unsigned def
R134769:134772 compcert.lib.Integers Int64 mul' def
R134783:134783 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134801:134804 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134791:134793 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134786:134788 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134796:134798 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134805:134809 Coq.ZArith.Zpower <> two_p def
R134863:134866 compcert.lib.Integers Int64 repr def
R134877:134879 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134872:134874 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134880:134880 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134898:134901 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134888:134890 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134883:134885 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134893:134895 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134902:134906 Coq.ZArith.Zpower <> two_p def
R134863:134866 compcert.lib.Integers Int64 repr def
R134877:134879 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134872:134874 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134880:134880 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134898:134901 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134888:134890 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R134883:134885 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134893:134895 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R134902:134906 Coq.ZArith.Zpower <> two_p def
R134923:134934 compcert.lib.Integers Int64 eqm_samerepr thm
R134923:134934 compcert.lib.Integers Int64 eqm_samerepr thm
R134943:134949 compcert.lib.Integers Int64 eqm_add thm
R134943:134949 compcert.lib.Integers Int64 eqm_add thm
R134961:134968 compcert.lib.Integers Int64 eqm_refl thm
R134961:134968 compcert.lib.Integers Int64 eqm_refl thm
R134981:134984 compcert.lib.Integers Int64 mul' def
R134993:135011 compcert.lib.Integers Int64 eqm_unsigned_repr_l thm
R134993:135011 compcert.lib.Integers Int64 eqm_unsigned_repr_l thm
R135020:135027 compcert.lib.Integers Int64 eqm_refl thm
R135020:135027 compcert.lib.Integers Int64 eqm_refl thm
R135046:135049 compcert.lib.Integers Int64 repr def
R135053:135056 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135097:135097 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135064:135066 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135059:135061 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135067:135067 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135085:135088 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135075:135077 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135070:135072 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135080:135082 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135089:135093 Coq.ZArith.Zpower <> two_p def
R135046:135049 compcert.lib.Integers Int64 repr def
R135053:135056 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135097:135097 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135064:135066 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135059:135061 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135067:135067 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135085:135088 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135075:135077 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135070:135072 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135080:135082 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135089:135093 Coq.ZArith.Zpower <> two_p def
R135112:135120 Coq.ZArith.BinInt <> Zplus_0_l syndef
R135112:135120 Coq.ZArith.BinInt <> Zplus_0_l syndef
R135146:135149 compcert.lib.Integers Int64 repr def
R135183:135186 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135227:135227 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135159:135162 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135182:135182 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135154:135156 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135171:135173 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135163:135167 Coq.ZArith.Zpower <> two_p def
R135174:135178 Coq.ZArith.Zpower <> two_p def
R135194:135196 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135189:135191 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135197:135197 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135215:135218 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135205:135207 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135200:135202 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135210:135212 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135219:135223 Coq.ZArith.Zpower <> two_p def
R135146:135149 compcert.lib.Integers Int64 repr def
R135183:135186 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135227:135227 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135159:135162 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135182:135182 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135154:135156 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135171:135173 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135163:135167 Coq.ZArith.Zpower <> two_p def
R135174:135178 Coq.ZArith.Zpower <> two_p def
R135194:135196 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135189:135191 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135197:135197 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135215:135218 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135205:135207 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R135200:135202 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135210:135212 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135219:135223 Coq.ZArith.Zpower <> two_p def
R135240:135251 compcert.lib.Integers Int64 eqm_samerepr thm
R135240:135251 compcert.lib.Integers Int64 eqm_samerepr thm
R135260:135266 compcert.lib.Integers Int64 eqm_add thm
R135260:135266 compcert.lib.Integers Int64 eqm_add thm
R135278:135285 compcert.lib.Integers Int64 eqm_refl thm
R135278:135285 compcert.lib.Integers Int64 eqm_refl thm
R135325:135331 compcert.lib.Integers Int64 modulus def
R135307:135309 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135299:135303 Coq.ZArith.Zpower <> two_p def
R135310:135314 Coq.ZArith.Zpower <> two_p def
R135307:135309 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135299:135303 Coq.ZArith.Zpower <> two_p def
R135310:135314 Coq.ZArith.Zpower <> two_p def
R135325:135331 compcert.lib.Integers Int64 modulus def
R135346:135348 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135342:135343 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R135346:135348 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R135342:135343 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
prf 135391:135405 Int64 decompose_mul_2
R135467:135471 Coq.Init.Logic <> :type_scope:x_'='_x not
R135432:135434 compcert.lib.Integers Int64 mul def
R135453:135459 compcert.lib.Integers Int64 ofwords def
R135464:135465 compcert.lib.Integers <> yl var
R135461:135462 compcert.lib.Integers <> yh var
R135437:135443 compcert.lib.Integers Int64 ofwords def
R135448:135449 compcert.lib.Integers <> xl var
R135445:135446 compcert.lib.Integers <> xh var
R135472:135478 compcert.lib.Integers Int64 ofwords def
R135561:135567 compcert.lib.Integers Int mul def
R135572:135573 compcert.lib.Integers <> yl var
R135569:135570 compcert.lib.Integers <> xl var
R135481:135487 compcert.lib.Integers Int add def
R135534:135540 compcert.lib.Integers Int mul def
R135545:135546 compcert.lib.Integers <> yl var
R135542:135543 compcert.lib.Integers <> xh var
R135490:135496 compcert.lib.Integers Int add def
R135517:135523 compcert.lib.Integers Int mul def
R135528:135529 compcert.lib.Integers <> yh var
R135525:135526 compcert.lib.Integers <> xl var
R135499:135507 compcert.lib.Integers Int mulhu def
R135512:135513 compcert.lib.Integers <> yl var
R135509:135510 compcert.lib.Integers <> xl var
R135602:135614 compcert.lib.Integers Int64 decompose_mul thm
R135602:135614 compcert.lib.Integers Int64 decompose_mul thm
R135625:135634 compcert.lib.Integers Int64 mul'_mulhu thm
R135625:135634 compcert.lib.Integers Int64 mul'_mulhu thm
R135648:135657 compcert.lib.Integers Int64 hi_ofwords thm
R135660:135669 compcert.lib.Integers Int64 lo_ofwords thm
R135648:135657 compcert.lib.Integers Int64 hi_ofwords thm
R135660:135669 compcert.lib.Integers Int64 lo_ofwords thm
prf 135690:135702 Int64 decompose_ltu
R135764:135766 Coq.Init.Logic <> :type_scope:x_'='_x not
R135729:135731 compcert.lib.Integers Int64 ltu def
R135750:135756 compcert.lib.Integers Int64 ofwords def
R135761:135762 compcert.lib.Integers <> yl var
R135758:135759 compcert.lib.Integers <> yh var
R135734:135740 compcert.lib.Integers Int64 ofwords def
R135745:135746 compcert.lib.Integers <> xl var
R135742:135743 compcert.lib.Integers <> xh var
R135770:135775 compcert.lib.Integers Int eq def
R135780:135781 compcert.lib.Integers <> yh var
R135777:135778 compcert.lib.Integers <> xh var
R135807:135813 compcert.lib.Integers Int ltu def
R135818:135819 compcert.lib.Integers <> yh var
R135815:135816 compcert.lib.Integers <> xh var
R135788:135794 compcert.lib.Integers Int ltu def
R135799:135800 compcert.lib.Integers <> yl var
R135796:135797 compcert.lib.Integers <> xl var
R135846:135848 compcert.lib.Integers Int64 ltu def
R135861:135872 compcert.lib.Integers Int64 ofwords_add' thm
R135861:135872 compcert.lib.Integers Int64 ofwords_add' thm
R135861:135872 compcert.lib.Integers Int64 ofwords_add' thm
R135861:135872 compcert.lib.Integers Int64 ofwords_add' thm
R135882:135888 compcert.lib.Integers Int ltu def
R135891:135896 compcert.lib.Integers Int eq def
R135911:135913 compcert.lib.Coqlib <> zeq def
R135934:135945 compcert.lib.Integers Int unsigned def
R135916:135927 compcert.lib.Integers Int unsigned def
R135911:135913 compcert.lib.Coqlib <> zeq def
R135934:135945 compcert.lib.Integers Int unsigned def
R135916:135927 compcert.lib.Integers Int unsigned def
R135976:135978 compcert.lib.Coqlib <> zlt def
R135999:136010 compcert.lib.Integers Int unsigned def
R135981:135992 compcert.lib.Integers Int unsigned def
R135976:135978 compcert.lib.Coqlib <> zlt def
R135999:136010 compcert.lib.Integers Int unsigned def
R135981:135992 compcert.lib.Integers Int unsigned def
R136027:136034 compcert.lib.Coqlib <> zlt_true thm
R136027:136034 compcert.lib.Coqlib <> zlt_true thm
R136052:136060 compcert.lib.Coqlib <> zlt_false thm
R136052:136060 compcert.lib.Coqlib <> zlt_false thm
R136095:136105 compcert.lib.Integers Int modulus def
R136080:136084 Coq.ZArith.Zpower <> two_p def
R136080:136084 Coq.ZArith.Zpower <> two_p def
R136095:136105 compcert.lib.Integers Int modulus def
R136123:136140 compcert.lib.Integers Int unsigned_range thm
R136147:136164 compcert.lib.Integers Int unsigned_range thm
R136123:136140 compcert.lib.Integers Int unsigned_range thm
R136147:136164 compcert.lib.Integers Int unsigned_range thm
R136181:136191 compcert.lib.Integers Int modulus def
R136181:136191 compcert.lib.Integers Int modulus def
R136230:136232 compcert.lib.Coqlib <> zlt def
R136253:136264 compcert.lib.Integers Int unsigned def
R136235:136246 compcert.lib.Integers Int unsigned def
R136230:136232 compcert.lib.Coqlib <> zlt def
R136253:136264 compcert.lib.Integers Int unsigned def
R136235:136246 compcert.lib.Integers Int unsigned def
R136280:136287 compcert.lib.Coqlib <> zlt_true thm
R136280:136287 compcert.lib.Coqlib <> zlt_true thm
R136305:136313 compcert.lib.Coqlib <> zlt_false thm
R136305:136313 compcert.lib.Coqlib <> zlt_false thm
prf 136335:136347 Int64 decompose_leu
R136416:136420 Coq.Init.Logic <> :type_scope:x_'='_x not
R136374:136377 Coq.Init.Datatypes <> negb def
R136380:136382 compcert.lib.Integers Int64 ltu def
R136401:136407 compcert.lib.Integers Int64 ofwords def
R136412:136413 compcert.lib.Integers <> xl var
R136409:136410 compcert.lib.Integers <> xh var
R136385:136391 compcert.lib.Integers Int64 ofwords def
R136396:136397 compcert.lib.Integers <> yl var
R136393:136394 compcert.lib.Integers <> yh var
R136424:136429 compcert.lib.Integers Int eq def
R136434:136435 compcert.lib.Integers <> yh var
R136431:136432 compcert.lib.Integers <> xh var
R136468:136474 compcert.lib.Integers Int ltu def
R136479:136480 compcert.lib.Integers <> yh var
R136476:136477 compcert.lib.Integers <> xh var
R136442:136445 Coq.Init.Datatypes <> negb def
R136448:136454 compcert.lib.Integers Int ltu def
R136459:136460 compcert.lib.Integers <> xl var
R136456:136457 compcert.lib.Integers <> yl var
R136508:136520 compcert.lib.Integers Int64 decompose_ltu thm
R136508:136520 compcert.lib.Integers Int64 decompose_ltu thm
R136531:136540 compcert.lib.Integers Int eq_sym thm
R136531:136540 compcert.lib.Integers Int eq_sym thm
R136552:136557 compcert.lib.Integers Int eq def
R136570:136572 compcert.lib.Coqlib <> zeq def
R136593:136604 compcert.lib.Integers Int unsigned def
R136575:136586 compcert.lib.Integers Int unsigned def
R136570:136572 compcert.lib.Coqlib <> zeq def
R136593:136604 compcert.lib.Integers Int unsigned def
R136575:136586 compcert.lib.Integers Int unsigned def
R136630:136636 compcert.lib.Integers Int ltu def
R136649:136651 compcert.lib.Coqlib <> zlt def
R136672:136683 compcert.lib.Integers Int unsigned def
R136654:136665 compcert.lib.Integers Int unsigned def
R136649:136651 compcert.lib.Coqlib <> zlt def
R136672:136683 compcert.lib.Integers Int unsigned def
R136654:136665 compcert.lib.Integers Int unsigned def
R136702:136710 compcert.lib.Coqlib <> zlt_false thm
R136702:136710 compcert.lib.Coqlib <> zlt_false thm
R136738:136745 compcert.lib.Coqlib <> zlt_true thm
R136738:136745 compcert.lib.Coqlib <> zlt_true thm
prf 136775:136786 Int64 decompose_lt
R136847:136849 Coq.Init.Logic <> :type_scope:x_'='_x not
R136813:136814 compcert.lib.Integers Int64 lt def
R136833:136839 compcert.lib.Integers Int64 ofwords def
R136844:136845 compcert.lib.Integers <> yl var
R136841:136842 compcert.lib.Integers <> yh var
R136817:136823 compcert.lib.Integers Int64 ofwords def
R136828:136829 compcert.lib.Integers <> xl var
R136825:136826 compcert.lib.Integers <> xh var
R136853:136858 compcert.lib.Integers Int eq def
R136863:136864 compcert.lib.Integers <> yh var
R136860:136861 compcert.lib.Integers <> xh var
R136890:136895 compcert.lib.Integers Int lt def
R136900:136901 compcert.lib.Integers <> yh var
R136897:136898 compcert.lib.Integers <> xh var
R136871:136877 compcert.lib.Integers Int ltu def
R136882:136883 compcert.lib.Integers <> yl var
R136879:136880 compcert.lib.Integers <> xl var
R136928:136929 compcert.lib.Integers Int64 lt def
R136942:136954 compcert.lib.Integers Int64 ofwords_add'' thm
R136942:136954 compcert.lib.Integers Int64 ofwords_add'' thm
R136942:136954 compcert.lib.Integers Int64 ofwords_add'' thm
R136942:136954 compcert.lib.Integers Int64 ofwords_add'' thm
R136965:136977 compcert.lib.Integers Int eq_signed thm
R136965:136977 compcert.lib.Integers Int eq_signed thm
R136993:136995 compcert.lib.Coqlib <> zeq def
R137014:137023 compcert.lib.Integers Int signed def
R136998:137007 compcert.lib.Integers Int signed def
R136993:136995 compcert.lib.Coqlib <> zeq def
R137014:137023 compcert.lib.Integers Int signed def
R136998:137007 compcert.lib.Integers Int signed def
R137051:137057 compcert.lib.Integers Int ltu def
R137070:137072 compcert.lib.Coqlib <> zlt def
R137093:137104 compcert.lib.Integers Int unsigned def
R137075:137086 compcert.lib.Integers Int unsigned def
R137070:137072 compcert.lib.Coqlib <> zlt def
R137093:137104 compcert.lib.Integers Int unsigned def
R137075:137086 compcert.lib.Integers Int unsigned def
R137121:137128 compcert.lib.Coqlib <> zlt_true thm
R137121:137128 compcert.lib.Coqlib <> zlt_true thm
R137146:137154 compcert.lib.Coqlib <> zlt_false thm
R137146:137154 compcert.lib.Coqlib <> zlt_false thm
R137189:137199 compcert.lib.Integers Int modulus def
R137174:137178 Coq.ZArith.Zpower <> two_p def
R137174:137178 Coq.ZArith.Zpower <> two_p def
R137189:137199 compcert.lib.Integers Int modulus def
R137217:137234 compcert.lib.Integers Int unsigned_range thm
R137241:137258 compcert.lib.Integers Int unsigned_range thm
R137217:137234 compcert.lib.Integers Int unsigned_range thm
R137241:137258 compcert.lib.Integers Int unsigned_range thm
R137275:137285 compcert.lib.Integers Int modulus def
R137275:137285 compcert.lib.Integers Int modulus def
R137321:137326 compcert.lib.Integers Int lt def
R137339:137341 compcert.lib.Coqlib <> zlt def
R137360:137369 compcert.lib.Integers Int signed def
R137344:137353 compcert.lib.Integers Int signed def
R137339:137341 compcert.lib.Coqlib <> zlt def
R137360:137369 compcert.lib.Integers Int signed def
R137344:137353 compcert.lib.Integers Int signed def
R137385:137392 compcert.lib.Coqlib <> zlt_true thm
R137385:137392 compcert.lib.Coqlib <> zlt_true thm
R137410:137418 compcert.lib.Coqlib <> zlt_false thm
R137410:137418 compcert.lib.Coqlib <> zlt_false thm
prf 137440:137451 Int64 decompose_le
R137519:137523 Coq.Init.Logic <> :type_scope:x_'='_x not
R137478:137481 Coq.Init.Datatypes <> negb def
R137484:137485 compcert.lib.Integers Int64 lt def
R137504:137510 compcert.lib.Integers Int64 ofwords def
R137515:137516 compcert.lib.Integers <> xl var
R137512:137513 compcert.lib.Integers <> xh var
R137488:137494 compcert.lib.Integers Int64 ofwords def
R137499:137500 compcert.lib.Integers <> yl var
R137496:137497 compcert.lib.Integers <> yh var
R137527:137532 compcert.lib.Integers Int eq def
R137537:137538 compcert.lib.Integers <> yh var
R137534:137535 compcert.lib.Integers <> xh var
R137571:137576 compcert.lib.Integers Int lt def
R137581:137582 compcert.lib.Integers <> yh var
R137578:137579 compcert.lib.Integers <> xh var
R137545:137548 Coq.Init.Datatypes <> negb def
R137551:137557 compcert.lib.Integers Int ltu def
R137562:137563 compcert.lib.Integers <> xl var
R137559:137560 compcert.lib.Integers <> yl var
R137610:137621 compcert.lib.Integers Int64 decompose_lt thm
R137610:137621 compcert.lib.Integers Int64 decompose_lt thm
R137632:137641 compcert.lib.Integers Int eq_sym thm
R137632:137641 compcert.lib.Integers Int eq_sym thm
R137654:137666 compcert.lib.Integers Int eq_signed thm
R137654:137666 compcert.lib.Integers Int eq_signed thm
R137679:137681 compcert.lib.Coqlib <> zeq def
R137700:137709 compcert.lib.Integers Int signed def
R137684:137693 compcert.lib.Integers Int signed def
R137679:137681 compcert.lib.Coqlib <> zeq def
R137700:137709 compcert.lib.Integers Int signed def
R137684:137693 compcert.lib.Integers Int signed def
R137735:137740 compcert.lib.Integers Int lt def
R137753:137755 compcert.lib.Coqlib <> zlt def
R137774:137783 compcert.lib.Integers Int signed def
R137758:137767 compcert.lib.Integers Int signed def
R137753:137755 compcert.lib.Coqlib <> zlt def
R137774:137783 compcert.lib.Integers Int signed def
R137758:137767 compcert.lib.Integers Int signed def
R137802:137810 compcert.lib.Coqlib <> zlt_false thm
R137802:137810 compcert.lib.Coqlib <> zlt_false thm
R137838:137845 compcert.lib.Coqlib <> zlt_true thm
R137838:137845 compcert.lib.Coqlib <> zlt_true thm
R137873:137877 compcert.lib.Integers <> <> mod
syndef 137890:137894 <> int64
R137899:137907 compcert.lib.Integers Int64 int rec
R137925:137932 compcert.lib.Integers Int repr def
R137934:137943 compcert.lib.Integers Int64 repr def
R137945:137953 compcert.lib.Integers Byte repr def
