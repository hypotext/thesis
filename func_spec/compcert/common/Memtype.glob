DIGEST b606d97d1ad155de9b089db69788d5c1
Fcompcert.common.Memtype
R1498:1503 compcert.lib.Coqlib <> <> lib
R1521:1523 compcert.common.AST <> <> lib
R1541:1548 compcert.lib.Integers <> <> lib
R1566:1571 compcert.lib.Floats <> <> lib
R1589:1594 compcert.common.Values <> <> lib
R1612:1618 compcert.common.Memdata <> <> lib
ind 2380:2389 <> permission
constr 2404:2411 <> Freeable
constr 2429:2436 <> Writable
constr 2454:2461 <> Readable
constr 2479:2486 <> Nonempty
R2414:2423 compcert.common.Memtype <> permission ind
R2439:2448 compcert.common.Memtype <> permission ind
R2464:2473 compcert.common.Memtype <> permission ind
R2489:2498 compcert.common.Memtype <> permission ind
ind 2669:2678 <> perm_order
constr 2721:2729 <> perm_refl
constr 2762:2771 <> perm_F_any
constr 2810:2817 <> perm_W_R
constr 2855:2864 <> perm_any_N
R2695:2704 compcert.common.Memtype <> permission ind
R2681:2690 compcert.common.Memtype <> permission ind
R2743:2752 compcert.common.Memtype <> perm_order ind
R2756:2756 compcert.common.Memtype <> p var
R2754:2754 compcert.common.Memtype <> p var
R2784:2793 compcert.common.Memtype <> perm_order ind
R2804:2804 compcert.common.Memtype <> p var
R2795:2802 compcert.common.Memtype <> Freeable constr
R2822:2831 compcert.common.Memtype <> perm_order ind
R2842:2849 compcert.common.Memtype <> Readable constr
R2833:2840 compcert.common.Memtype <> Writable constr
R2877:2886 compcert.common.Memtype <> perm_order ind
R2890:2897 compcert.common.Memtype <> Nonempty constr
R2888:2888 compcert.common.Memtype <> p var
R2919:2928 compcert.common.Memtype <> perm_order ind
prf 2943:2958 <> perm_order_trans
R3020:3029 compcert.common.Memtype <> perm_order ind
R3034:3035 compcert.common.Memtype <> p3 var
R3031:3032 compcert.common.Memtype <> p1 var
R3000:3009 compcert.common.Memtype <> perm_order ind
R3014:3015 compcert.common.Memtype <> p3 var
R3011:3012 compcert.common.Memtype <> p2 var
R2980:2989 compcert.common.Memtype <> perm_order ind
R2994:2995 compcert.common.Memtype <> p2 var
R2991:2992 compcert.common.Memtype <> p1 var
ind 3733:3741 <> perm_kind
constr 3756:3758 <> Max
constr 3775:3777 <> Cur
R3761:3769 compcert.common.Memtype <> perm_kind ind
R3780:3788 compcert.common.Memtype <> perm_kind ind
modtype 3804:3806 <> MEM
ax 3863:3865 MEM mem
ax 3967:3971 MEM empty
R3974:3976 compcert.common.Memtype MEM mem defax
ax 4451:4455 MEM alloc
R4469:4471 compcert.common.Memtype MEM mem defax
R4482:4482 Coq.Numbers.BinNums <> Z ind
R4489:4491 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R4486:4488 compcert.common.Memtype MEM mem defax
R4492:4496 compcert.common.Values <> block def
ax 4715:4718 MEM free
R4732:4734 compcert.common.Memtype MEM mem defax
R4741:4745 compcert.common.Values <> block def
R4756:4756 Coq.Numbers.BinNums <> Z ind
R4760:4765 Coq.Init.Datatypes <> option ind
R4767:4769 compcert.common.Memtype MEM mem defax
ax 5008:5011 MEM load
R5029:5040 compcert.common.AST <> memory_chunk ind
R5047:5049 compcert.common.Memtype MEM mem defax
R5056:5060 compcert.common.Values <> block def
R5069:5069 Coq.Numbers.BinNums <> Z ind
R5073:5078 Coq.Init.Datatypes <> option ind
R5080:5082 compcert.common.Values <> val ind
ax 5346:5350 MEM store
R5368:5379 compcert.common.AST <> memory_chunk ind
R5386:5388 compcert.common.Memtype MEM mem defax
R5395:5399 compcert.common.Values <> block def
R5408:5408 Coq.Numbers.BinNums <> Z ind
R5415:5417 compcert.common.Values <> val ind
R5421:5426 Coq.Init.Datatypes <> option ind
R5428:5430 compcert.common.Memtype MEM mem defax
def 5587:5591 MEM loadv
R5601:5612 compcert.common.AST <> memory_chunk ind
R5619:5621 compcert.common.Memtype MEM mem defax
R5631:5633 compcert.common.Values <> val ind
R5638:5643 Coq.Init.Datatypes <> option ind
R5645:5647 compcert.common.Values <> val ind
R5660:5663 compcert.common.Memtype <> addr var
R5674:5677 compcert.common.Values <> Vptr constr
R5688:5691 compcert.common.Memtype MEM load defax
R5704:5715 compcert.lib.Integers Int unsigned def
R5699:5699 compcert.common.Memtype <> m var
R5693:5697 compcert.common.Memtype <> chunk var
R5731:5734 Coq.Init.Datatypes <> None constr
def 5755:5760 MEM storev
R5770:5781 compcert.common.AST <> memory_chunk ind
R5788:5790 compcert.common.Memtype MEM mem defax
R5802:5804 compcert.common.Values <> val ind
R5809:5814 Coq.Init.Datatypes <> option ind
R5816:5818 compcert.common.Memtype MEM mem defax
R5831:5834 compcert.common.Memtype <> addr var
R5845:5848 compcert.common.Values <> Vptr constr
R5859:5863 compcert.common.Memtype MEM store defax
R5894:5894 compcert.common.Memtype <> v var
R5876:5887 compcert.lib.Integers Int unsigned def
R5871:5871 compcert.common.Memtype <> m var
R5865:5869 compcert.common.Memtype <> chunk var
R5905:5908 Coq.Init.Datatypes <> None constr
ax 6170:6178 MEM loadbytes
R6192:6194 compcert.common.Memtype MEM mem defax
R6201:6205 compcert.common.Values <> block def
R6216:6216 Coq.Numbers.BinNums <> Z ind
R6220:6225 Coq.Init.Datatypes <> option ind
R6228:6231 Coq.Init.Datatypes <> list ind
R6233:6238 compcert.common.Memdata <> memval ind
ax 6447:6456 MEM storebytes
R6470:6472 compcert.common.Memtype MEM mem defax
R6479:6483 compcert.common.Values <> block def
R6492:6492 Coq.Numbers.BinNums <> Z ind
R6503:6506 Coq.Init.Datatypes <> list ind
R6508:6513 compcert.common.Memdata <> memval ind
R6517:6522 Coq.Init.Datatypes <> option ind
R6524:6526 compcert.common.Memtype MEM mem defax
def 6603:6611 MEM free_list
R6617:6619 compcert.common.Memtype MEM mem defax
R6626:6629 Coq.Init.Datatypes <> list ind
R6641:6643 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6637:6639 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6632:6636 compcert.common.Values <> block def
R6640:6640 Coq.Numbers.BinNums <> Z ind
R6644:6644 Coq.Numbers.BinNums <> Z ind
R6660:6665 Coq.Init.Datatypes <> option ind
R6667:6669 compcert.common.Memtype MEM mem defax
R6682:6682 compcert.common.Memtype <> l var
R6693:6695 Coq.Init.Datatypes <> nil constr
R6700:6703 Coq.Init.Datatypes <> Some constr
R6705:6705 compcert.common.Memtype <> m var
R6722:6725 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6711:6711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6713:6714 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6717:6718 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6721:6721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6744:6747 compcert.common.Memtype MEM free defax
R6749:6749 compcert.common.Memtype <> m var
R6772:6775 Coq.Init.Datatypes <> None constr
R6780:6783 Coq.Init.Datatypes <> None constr
R6793:6796 Coq.Init.Datatypes <> Some constr
R6804:6812 compcert.common.Memtype <> free_list def
ax 7113:7121 MEM drop_perm
R7135:7137 compcert.common.Memtype MEM mem defax
R7144:7148 compcert.common.Values <> block def
R7159:7159 Coq.Numbers.BinNums <> Z ind
R7166:7175 compcert.common.Memtype MEM permission ind
R7179:7184 Coq.Init.Datatypes <> option ind
R7186:7188 compcert.common.Memtype MEM mem defax
ax 7689:7697 MEM nextblock
R7707:7711 compcert.common.Values <> block def
R7700:7702 compcert.common.Memtype MEM mem defax
def 7726:7736 MEM valid_block
R7742:7744 compcert.common.Memtype MEM mem defax
R7751:7755 compcert.common.Values <> block def
R7761:7763 compcert.lib.Coqlib <> Plt def
R7768:7776 compcert.common.Memtype MEM nextblock defax
R7778:7778 compcert.common.Memtype <> m var
R7765:7765 compcert.common.Memtype <> b var
ax 7789:7808 MEM valid_not_valid_diff
R7871:7874 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7870:7870 compcert.common.Memtype <> b var
R7875:7876 compcert.common.Memtype <> b' var
R7847:7848 Coq.Init.Logic <> :type_scope:'~'_x not
R7865:7865 Coq.Init.Logic <> :type_scope:'~'_x not
R7849:7859 compcert.common.Memtype MEM valid_block def
R7863:7864 compcert.common.Memtype <> b' var
R7861:7861 compcert.common.Memtype <> m var
R7828:7838 compcert.common.Memtype MEM valid_block def
R7842:7842 compcert.common.Memtype <> b var
R7840:7840 compcert.common.Memtype <> m var
ax 8230:8233 MEM perm
R8247:8249 compcert.common.Memtype MEM mem defax
R8256:8260 compcert.common.Values <> block def
R8269:8269 Coq.Numbers.BinNums <> Z ind
R8276:8284 compcert.common.Memtype MEM perm_kind ind
R8291:8300 compcert.common.Memtype MEM permission ind
ax 8366:8377 MEM perm_implies
R8447:8450 compcert.common.Memtype MEM perm defax
R8462:8463 compcert.common.Memtype <> p2 var
R8460:8460 compcert.common.Memtype <> k var
R8456:8458 compcert.common.Memtype <> ofs var
R8454:8454 compcert.common.Memtype <> b var
R8452:8452 compcert.common.Memtype <> m var
R8427:8436 compcert.common.Memtype MEM perm_order ind
R8441:8442 compcert.common.Memtype <> p2 var
R8438:8439 compcert.common.Memtype <> p1 var
R8406:8409 compcert.common.Memtype MEM perm defax
R8421:8422 compcert.common.Memtype <> p1 var
R8419:8419 compcert.common.Memtype <> k var
R8415:8417 compcert.common.Memtype <> ofs var
R8413:8413 compcert.common.Memtype <> b var
R8411:8411 compcert.common.Memtype <> m var
ax 8560:8571 MEM perm_cur_max
R8616:8619 compcert.common.Memtype MEM perm defax
R8633:8633 compcert.common.Memtype <> p var
R8629:8631 compcert.common.Memtype MEM Max constr
R8625:8627 compcert.common.Memtype <> ofs var
R8623:8623 compcert.common.Memtype <> b var
R8621:8621 compcert.common.Memtype <> m var
R8594:8597 compcert.common.Memtype MEM perm defax
R8611:8611 compcert.common.Memtype <> p var
R8607:8609 compcert.common.Memtype MEM Cur constr
R8603:8605 compcert.common.Memtype <> ofs var
R8601:8601 compcert.common.Memtype <> b var
R8599:8599 compcert.common.Memtype <> m var
ax 8642:8649 MEM perm_cur
R8696:8699 compcert.common.Memtype MEM perm defax
R8711:8711 compcert.common.Memtype <> p var
R8709:8709 compcert.common.Memtype <> k var
R8705:8707 compcert.common.Memtype <> ofs var
R8703:8703 compcert.common.Memtype <> b var
R8701:8701 compcert.common.Memtype <> m var
R8674:8677 compcert.common.Memtype MEM perm defax
R8691:8691 compcert.common.Memtype <> p var
R8687:8689 compcert.common.Memtype MEM Cur constr
R8683:8685 compcert.common.Memtype <> ofs var
R8681:8681 compcert.common.Memtype <> b var
R8679:8679 compcert.common.Memtype <> m var
ax 8720:8727 MEM perm_max
R8772:8775 compcert.common.Memtype MEM perm defax
R8789:8789 compcert.common.Memtype <> p var
R8785:8787 compcert.common.Memtype MEM Max constr
R8781:8783 compcert.common.Memtype <> ofs var
R8779:8779 compcert.common.Memtype <> b var
R8777:8777 compcert.common.Memtype <> m var
R8752:8755 compcert.common.Memtype MEM perm defax
R8767:8767 compcert.common.Memtype <> p var
R8765:8765 compcert.common.Memtype <> k var
R8761:8763 compcert.common.Memtype <> ofs var
R8759:8759 compcert.common.Memtype <> b var
R8757:8757 compcert.common.Memtype <> m var
ax 8938:8953 MEM perm_valid_block
R8998:9008 compcert.common.Memtype MEM valid_block def
R9012:9012 compcert.common.Memtype <> b var
R9010:9010 compcert.common.Memtype <> m var
R8978:8981 compcert.common.Memtype MEM perm defax
R8993:8993 compcert.common.Memtype <> p var
R8991:8991 compcert.common.Memtype <> k var
R8987:8989 compcert.common.Memtype <> ofs var
R8985:8985 compcert.common.Memtype <> b var
R8983:8983 compcert.common.Memtype <> m var
def 9285:9294 MEM range_perm
R9300:9302 compcert.common.Memtype MEM mem defax
R9309:9313 compcert.common.Values <> block def
R9324:9324 Coq.Numbers.BinNums <> Z ind
R9331:9339 compcert.common.Memtype MEM perm_kind ind
R9346:9355 compcert.common.Memtype MEM permission ind
R9400:9403 compcert.common.Memtype MEM perm defax
R9415:9415 compcert.common.Memtype <> p var
R9413:9413 compcert.common.Memtype <> k var
R9409:9411 compcert.common.Memtype <> ofs var
R9407:9407 compcert.common.Memtype <> b var
R9405:9405 compcert.common.Memtype <> m var
R9384:9387 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R9391:9393 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R9382:9383 compcert.common.Memtype <> lo var
R9388:9390 compcert.common.Memtype <> ofs var
R9388:9390 compcert.common.Memtype <> ofs var
R9394:9395 compcert.common.Memtype <> hi var
ax 9425:9442 MEM range_perm_implies
R9524:9533 compcert.common.Memtype MEM range_perm def
R9547:9548 compcert.common.Memtype <> p2 var
R9545:9545 compcert.common.Memtype <> k var
R9542:9543 compcert.common.Memtype <> hi var
R9539:9540 compcert.common.Memtype <> lo var
R9537:9537 compcert.common.Memtype <> b var
R9535:9535 compcert.common.Memtype <> m var
R9504:9513 compcert.common.Memtype MEM perm_order ind
R9518:9519 compcert.common.Memtype <> p2 var
R9515:9516 compcert.common.Memtype <> p1 var
R9475:9484 compcert.common.Memtype MEM range_perm def
R9498:9499 compcert.common.Memtype <> p1 var
R9496:9496 compcert.common.Memtype <> k var
R9493:9494 compcert.common.Memtype <> hi var
R9490:9491 compcert.common.Memtype <> lo var
R9488:9488 compcert.common.Memtype <> b var
R9486:9486 compcert.common.Memtype <> m var
def 9772:9783 MEM valid_access
R9789:9791 compcert.common.Memtype MEM mem defax
R9802:9813 compcert.common.AST <> memory_chunk ind
R9820:9824 compcert.common.Values <> block def
R9833:9833 Coq.Numbers.BinNums <> Z ind
R9840:9849 compcert.common.Memtype MEM permission ind
R9912:9917 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9863:9872 compcert.common.Memtype MEM range_perm def
R9911:9911 compcert.common.Memtype <> p var
R9907:9909 compcert.common.Memtype MEM Cur constr
R9886:9888 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9883:9885 compcert.common.Memtype <> ofs var
R9889:9898 compcert.common.Memdata <> size_chunk def
R9900:9904 compcert.common.Memtype <> chunk var
R9878:9880 compcert.common.Memtype <> ofs var
R9876:9876 compcert.common.Memtype <> b var
R9874:9874 compcert.common.Memtype <> m var
R9918:9918 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R9936:9938 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R9942:9942 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R9919:9929 compcert.common.Memdata <> align_chunk def
R9931:9935 compcert.common.Memtype <> chunk var
R9939:9941 compcert.common.Memtype <> ofs var
ax 9952:9971 MEM valid_access_implies
R10061:10072 compcert.common.Memtype MEM valid_access def
R10088:10089 compcert.common.Memtype <> p2 var
R10084:10086 compcert.common.Memtype <> ofs var
R10082:10082 compcert.common.Memtype <> b var
R10076:10080 compcert.common.Memtype <> chunk var
R10074:10074 compcert.common.Memtype <> m var
R10039:10048 compcert.common.Memtype MEM perm_order ind
R10053:10054 compcert.common.Memtype <> p2 var
R10050:10051 compcert.common.Memtype <> p1 var
R10006:10017 compcert.common.Memtype MEM valid_access def
R10033:10034 compcert.common.Memtype <> p1 var
R10029:10031 compcert.common.Memtype <> ofs var
R10027:10027 compcert.common.Memtype <> b var
R10021:10025 compcert.common.Memtype <> chunk var
R10019:10019 compcert.common.Memtype <> m var
ax 10099:10122 MEM valid_access_valid_block
R10192:10202 compcert.common.Memtype MEM valid_block def
R10206:10206 compcert.common.Memtype <> b var
R10204:10204 compcert.common.Memtype <> m var
R10151:10162 compcert.common.Memtype MEM valid_access def
R10178:10185 compcert.common.Memtype MEM Nonempty constr
R10174:10176 compcert.common.Memtype <> ofs var
R10172:10172 compcert.common.Memtype <> b var
R10166:10170 compcert.common.Memtype <> chunk var
R10164:10164 compcert.common.Memtype <> m var
ax 10216:10232 MEM valid_access_perm
R10299:10302 compcert.common.Memtype MEM perm defax
R10314:10314 compcert.common.Memtype <> p var
R10312:10312 compcert.common.Memtype <> k var
R10308:10310 compcert.common.Memtype <> ofs var
R10306:10306 compcert.common.Memtype <> b var
R10304:10304 compcert.common.Memtype <> m var
R10265:10276 compcert.common.Memtype MEM valid_access def
R10292:10292 compcert.common.Memtype <> p var
R10288:10290 compcert.common.Memtype <> ofs var
R10286:10286 compcert.common.Memtype <> b var
R10280:10284 compcert.common.Memtype <> chunk var
R10278:10278 compcert.common.Memtype <> m var
ax 10448:10460 MEM valid_pointer
R10474:10476 compcert.common.Memtype MEM mem defax
R10483:10487 compcert.common.Values <> block def
R10496:10496 Coq.Numbers.BinNums <> Z ind
R10500:10503 Coq.Init.Datatypes <> bool ind
ax 10513:10539 MEM valid_pointer_nonempty_perm
R10590:10594 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10583:10585 Coq.Init.Logic <> :type_scope:x_'='_x not
R10562:10574 compcert.common.Memtype MEM valid_pointer defax
R10580:10582 compcert.common.Memtype <> ofs var
R10578:10578 compcert.common.Memtype <> b var
R10576:10576 compcert.common.Memtype <> m var
R10586:10589 Coq.Init.Datatypes <> true constr
R10595:10598 compcert.common.Memtype MEM perm defax
R10612:10619 compcert.common.Memtype MEM Nonempty constr
R10608:10610 compcert.common.Memtype MEM Cur constr
R10604:10606 compcert.common.Memtype <> ofs var
R10602:10602 compcert.common.Memtype <> b var
R10600:10600 compcert.common.Memtype <> m var
ax 10628:10653 MEM valid_pointer_valid_access
R10704:10708 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10697:10699 Coq.Init.Logic <> :type_scope:x_'='_x not
R10676:10688 compcert.common.Memtype MEM valid_pointer defax
R10694:10696 compcert.common.Memtype <> ofs var
R10692:10692 compcert.common.Memtype <> b var
R10690:10690 compcert.common.Memtype <> m var
R10700:10703 Coq.Init.Datatypes <> true constr
R10709:10720 compcert.common.Memtype MEM valid_access def
R10744:10751 compcert.common.Memtype MEM Nonempty constr
R10740:10742 compcert.common.Memtype <> ofs var
R10738:10738 compcert.common.Memtype <> b var
R10724:10736 compcert.common.AST <> Mint8unsigned constr
R10722:10722 compcert.common.Memtype <> m var
def 11051:11068 MEM weak_valid_pointer
R11074:11076 compcert.common.Memtype MEM mem defax
R11083:11087 compcert.common.Values <> block def
R11096:11096 Coq.Numbers.BinNums <> Z ind
R11125:11128 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R11104:11116 compcert.common.Memtype MEM valid_pointer defax
R11122:11124 compcert.common.Memtype <> ofs var
R11120:11120 compcert.common.Memtype <> b var
R11118:11118 compcert.common.Memtype <> m var
R11129:11141 compcert.common.Memtype MEM valid_pointer defax
R11151:11153 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R11148:11150 compcert.common.Memtype <> ofs var
R11145:11145 compcert.common.Memtype <> b var
R11143:11143 compcert.common.Memtype <> m var
ax 11165:11187 MEM weak_valid_pointer_spec
R11243:11251 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11236:11238 Coq.Init.Logic <> :type_scope:x_'='_x not
R11210:11227 compcert.common.Memtype MEM weak_valid_pointer def
R11233:11235 compcert.common.Memtype <> ofs var
R11231:11231 compcert.common.Memtype <> b var
R11229:11229 compcert.common.Memtype <> m var
R11239:11242 Coq.Init.Datatypes <> true constr
R11280:11283 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11273:11275 Coq.Init.Logic <> :type_scope:x_'='_x not
R11252:11264 compcert.common.Memtype MEM valid_pointer defax
R11270:11272 compcert.common.Memtype <> ofs var
R11268:11268 compcert.common.Memtype <> b var
R11266:11266 compcert.common.Memtype <> m var
R11276:11279 Coq.Init.Datatypes <> true constr
R11311:11313 Coq.Init.Logic <> :type_scope:x_'='_x not
R11284:11296 compcert.common.Memtype MEM valid_pointer defax
R11306:11308 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R11303:11305 compcert.common.Memtype <> ofs var
R11300:11300 compcert.common.Memtype <> b var
R11298:11298 compcert.common.Memtype <> m var
R11314:11317 Coq.Init.Datatypes <> true constr
ax 11326:11346 MEM valid_pointer_implies
R11427:11429 Coq.Init.Logic <> :type_scope:x_'='_x not
R11401:11418 compcert.common.Memtype MEM weak_valid_pointer def
R11424:11426 compcert.common.Memtype <> ofs var
R11422:11422 compcert.common.Memtype <> b var
R11420:11420 compcert.common.Memtype <> m var
R11430:11433 Coq.Init.Datatypes <> true constr
R11390:11392 Coq.Init.Logic <> :type_scope:x_'='_x not
R11369:11381 compcert.common.Memtype MEM valid_pointer defax
R11387:11389 compcert.common.Memtype <> ofs var
R11385:11385 compcert.common.Memtype <> b var
R11383:11383 compcert.common.Memtype <> m var
R11393:11396 Coq.Init.Datatypes <> true constr
ax 11540:11554 MEM nextblock_empty
R11572:11574 Coq.Init.Logic <> :type_scope:x_'='_x not
R11557:11565 compcert.common.Memtype MEM nextblock defax
R11567:11571 compcert.common.Memtype MEM empty defax
ax 11593:11602 MEM perm_empty
R11623:11623 Coq.Init.Logic <> :type_scope:'~'_x not
R11624:11627 compcert.common.Memtype MEM perm defax
R11643:11643 compcert.common.Memtype <> p var
R11641:11641 compcert.common.Memtype <> k var
R11637:11639 compcert.common.Memtype <> ofs var
R11635:11635 compcert.common.Memtype <> b var
R11629:11633 compcert.common.Memtype MEM empty defax
ax 11652:11669 MEM valid_access_empty
R11696:11696 Coq.Init.Logic <> :type_scope:'~'_x not
R11697:11708 compcert.common.Memtype MEM valid_access def
R11728:11728 compcert.common.Memtype <> p var
R11724:11726 compcert.common.Memtype <> ofs var
R11722:11722 compcert.common.Memtype <> b var
R11716:11720 compcert.common.Memtype <> chunk var
R11710:11714 compcert.common.Memtype MEM empty defax
ax 11841:11857 MEM valid_access_load
R11927:11933 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11935:11936 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11955:11957 Coq.Init.Logic <> :type_scope:x_'='_x not
R11937:11940 compcert.common.Memtype MEM load defax
R11952:11954 compcert.common.Memtype <> ofs var
R11950:11950 compcert.common.Memtype <> b var
R11948:11948 compcert.common.Memtype <> m var
R11942:11946 compcert.common.Memtype <> chunk var
R11958:11961 Coq.Init.Datatypes <> Some constr
R11963:11963 compcert.common.Memtype <> v var
R11886:11897 compcert.common.Memtype MEM valid_access def
R11913:11920 compcert.common.Memtype MEM Readable constr
R11909:11911 compcert.common.Memtype <> ofs var
R11907:11907 compcert.common.Memtype <> b var
R11901:11905 compcert.common.Memtype <> chunk var
R11899:11899 compcert.common.Memtype <> m var
ax 11972:11988 MEM load_valid_access
R12052:12063 compcert.common.Memtype MEM valid_access def
R12079:12086 compcert.common.Memtype MEM Readable constr
R12075:12077 compcert.common.Memtype <> ofs var
R12073:12073 compcert.common.Memtype <> b var
R12067:12071 compcert.common.Memtype <> chunk var
R12065:12065 compcert.common.Memtype <> m var
R12037:12039 Coq.Init.Logic <> :type_scope:x_'='_x not
R12019:12022 compcert.common.Memtype MEM load defax
R12034:12036 compcert.common.Memtype <> ofs var
R12032:12032 compcert.common.Memtype <> b var
R12030:12030 compcert.common.Memtype <> m var
R12024:12028 compcert.common.Memtype <> chunk var
R12040:12043 Coq.Init.Datatypes <> Some constr
R12045:12045 compcert.common.Memtype <> v var
ax 12284:12292 MEM load_type
R12356:12367 compcert.common.Values Val has_type def
R12372:12384 compcert.common.AST <> type_of_chunk def
R12386:12390 compcert.common.Memtype <> chunk var
R12369:12369 compcert.common.Memtype <> v var
R12341:12343 Coq.Init.Logic <> :type_scope:x_'='_x not
R12323:12326 compcert.common.Memtype MEM load defax
R12338:12340 compcert.common.Memtype <> ofs var
R12336:12336 compcert.common.Memtype <> b var
R12334:12334 compcert.common.Memtype <> m var
R12328:12332 compcert.common.Memtype <> chunk var
R12344:12347 Coq.Init.Datatypes <> Some constr
R12349:12349 compcert.common.Memtype <> v var
ax 12517:12525 MEM load_cast
R12595:12599 compcert.common.Memtype <> chunk var
R12610:12620 compcert.common.AST <> Mint8signed constr
R12626:12628 Coq.Init.Logic <> :type_scope:x_'='_x not
R12625:12625 compcert.common.Memtype <> v var
R12629:12640 compcert.common.Values Val sign_ext def
R12644:12644 compcert.common.Memtype <> v var
R12650:12662 compcert.common.AST <> Mint8unsigned constr
R12668:12670 Coq.Init.Logic <> :type_scope:x_'='_x not
R12667:12667 compcert.common.Memtype <> v var
R12671:12682 compcert.common.Values Val zero_ext def
R12686:12686 compcert.common.Memtype <> v var
R12692:12703 compcert.common.AST <> Mint16signed constr
R12709:12711 Coq.Init.Logic <> :type_scope:x_'='_x not
R12708:12708 compcert.common.Memtype <> v var
R12712:12723 compcert.common.Values Val sign_ext def
R12728:12728 compcert.common.Memtype <> v var
R12734:12747 compcert.common.AST <> Mint16unsigned constr
R12753:12755 Coq.Init.Logic <> :type_scope:x_'='_x not
R12752:12752 compcert.common.Memtype <> v var
R12756:12767 compcert.common.Values Val zero_ext def
R12772:12772 compcert.common.Memtype <> v var
R12778:12785 compcert.common.AST <> Mfloat32 constr
R12791:12793 Coq.Init.Logic <> :type_scope:x_'='_x not
R12790:12790 compcert.common.Memtype <> v var
R12794:12810 compcert.common.Values Val singleoffloat def
R12812:12812 compcert.common.Memtype <> v var
R12823:12826 Coq.Init.Logic <> True ind
R12574:12576 Coq.Init.Logic <> :type_scope:x_'='_x not
R12556:12559 compcert.common.Memtype MEM load defax
R12571:12573 compcert.common.Memtype <> ofs var
R12569:12569 compcert.common.Memtype <> b var
R12567:12567 compcert.common.Memtype <> m var
R12561:12565 compcert.common.Memtype <> chunk var
R12577:12580 Coq.Init.Datatypes <> Some constr
R12582:12582 compcert.common.Memtype <> v var
ax 12842:12866 MEM load_int8_signed_unsigned
R12913:12915 Coq.Init.Logic <> :type_scope:x_'='_x not
R12889:12892 compcert.common.Memtype MEM load defax
R12910:12912 compcert.common.Memtype <> ofs var
R12908:12908 compcert.common.Memtype <> b var
R12906:12906 compcert.common.Memtype <> m var
R12894:12904 compcert.common.AST <> Mint8signed constr
R12916:12925 compcert.lib.Coqlib <> option_map def
R12945:12948 compcert.common.Memtype MEM load defax
R12968:12970 compcert.common.Memtype <> ofs var
R12966:12966 compcert.common.Memtype <> b var
R12964:12964 compcert.common.Memtype <> m var
R12950:12962 compcert.common.AST <> Mint8unsigned constr
R12928:12939 compcert.common.Values Val sign_ext def
ax 12981:13006 MEM load_int16_signed_unsigned
R13054:13056 Coq.Init.Logic <> :type_scope:x_'='_x not
R13029:13032 compcert.common.Memtype MEM load defax
R13051:13053 compcert.common.Memtype <> ofs var
R13049:13049 compcert.common.Memtype <> b var
R13047:13047 compcert.common.Memtype <> m var
R13034:13045 compcert.common.AST <> Mint16signed constr
R13057:13066 compcert.lib.Coqlib <> option_map def
R13087:13090 compcert.common.Memtype MEM load defax
R13111:13113 compcert.common.Memtype <> ofs var
R13109:13109 compcert.common.Memtype <> b var
R13107:13107 compcert.common.Memtype <> m var
R13092:13105 compcert.common.AST <> Mint16unsigned constr
R13069:13080 compcert.common.Values Val sign_ext def
ax 13265:13284 MEM range_perm_loadbytes
R13360:13366 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13372:13373 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13395:13397 Coq.Init.Logic <> :type_scope:x_'='_x not
R13374:13382 compcert.common.Memtype MEM loadbytes defax
R13392:13394 compcert.common.Memtype <> len var
R13388:13390 compcert.common.Memtype <> ofs var
R13386:13386 compcert.common.Memtype <> b var
R13384:13384 compcert.common.Memtype <> m var
R13398:13401 Coq.Init.Datatypes <> Some constr
R13403:13407 compcert.common.Memtype <> bytes var
R13311:13320 compcert.common.Memtype MEM range_perm def
R13346:13353 compcert.common.Memtype MEM Readable constr
R13342:13344 compcert.common.Memtype MEM Cur constr
R13334:13336 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13331:13333 compcert.common.Memtype <> ofs var
R13337:13339 compcert.common.Memtype <> len var
R13326:13328 compcert.common.Memtype <> ofs var
R13324:13324 compcert.common.Memtype <> b var
R13322:13322 compcert.common.Memtype <> m var
ax 13416:13435 MEM loadbytes_range_perm
R13508:13517 compcert.common.Memtype MEM range_perm def
R13543:13550 compcert.common.Memtype MEM Readable constr
R13539:13541 compcert.common.Memtype MEM Cur constr
R13531:13533 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R13528:13530 compcert.common.Memtype <> ofs var
R13534:13536 compcert.common.Memtype <> len var
R13523:13525 compcert.common.Memtype <> ofs var
R13521:13521 compcert.common.Memtype <> b var
R13519:13519 compcert.common.Memtype <> m var
R13489:13491 Coq.Init.Logic <> :type_scope:x_'='_x not
R13468:13476 compcert.common.Memtype MEM loadbytes defax
R13486:13488 compcert.common.Memtype <> len var
R13482:13484 compcert.common.Memtype <> ofs var
R13480:13480 compcert.common.Memtype <> b var
R13478:13478 compcert.common.Memtype <> m var
R13492:13495 Coq.Init.Datatypes <> Some constr
R13497:13501 compcert.common.Memtype <> bytes var
ax 13703:13716 MEM loadbytes_load
R13855:13857 Coq.Init.Logic <> :type_scope:x_'='_x not
R13837:13840 compcert.common.Memtype MEM load defax
R13852:13854 compcert.common.Memtype <> ofs var
R13850:13850 compcert.common.Memtype <> b var
R13848:13848 compcert.common.Memtype <> m var
R13842:13846 compcert.common.Memtype <> chunk var
R13858:13861 Coq.Init.Datatypes <> Some constr
R13863:13872 compcert.common.Memdata <> decode_val def
R13880:13884 compcert.common.Memtype <> bytes var
R13874:13878 compcert.common.Memtype <> chunk var
R13806:13806 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R13824:13826 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R13830:13830 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R13807:13817 compcert.common.Memdata <> align_chunk def
R13819:13823 compcert.common.Memtype <> chunk var
R13827:13829 compcert.common.Memtype <> ofs var
R13787:13789 Coq.Init.Logic <> :type_scope:x_'='_x not
R13751:13759 compcert.common.Memtype MEM loadbytes defax
R13770:13779 compcert.common.Memdata <> size_chunk def
R13781:13785 compcert.common.Memtype <> chunk var
R13765:13767 compcert.common.Memtype <> ofs var
R13763:13763 compcert.common.Memtype <> b var
R13761:13761 compcert.common.Memtype <> m var
R13790:13793 Coq.Init.Datatypes <> Some constr
R13795:13799 compcert.common.Memtype <> bytes var
ax 14053:14066 MEM load_loadbytes
R14130:14136 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14142:14143 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14193:14209 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14180:14182 Coq.Init.Logic <> :type_scope:x_'='_x not
R14144:14152 compcert.common.Memtype MEM loadbytes defax
R14163:14172 compcert.common.Memdata <> size_chunk def
R14174:14178 compcert.common.Memtype <> chunk var
R14158:14160 compcert.common.Memtype <> ofs var
R14156:14156 compcert.common.Memtype <> b var
R14154:14154 compcert.common.Memtype <> m var
R14183:14186 Coq.Init.Datatypes <> Some constr
R14188:14192 compcert.common.Memtype <> bytes var
R14211:14213 Coq.Init.Logic <> :type_scope:x_'='_x not
R14210:14210 compcert.common.Memtype <> v var
R14214:14223 compcert.common.Memdata <> decode_val def
R14231:14235 compcert.common.Memtype <> bytes var
R14225:14229 compcert.common.Memtype <> chunk var
R14115:14117 Coq.Init.Logic <> :type_scope:x_'='_x not
R14097:14100 compcert.common.Memtype MEM load defax
R14112:14114 compcert.common.Memtype <> ofs var
R14110:14110 compcert.common.Memtype <> b var
R14108:14108 compcert.common.Memtype <> m var
R14102:14106 compcert.common.Memtype <> chunk var
R14118:14121 Coq.Init.Datatypes <> Some constr
R14123:14123 compcert.common.Memtype <> v var
ax 14321:14336 MEM loadbytes_length
R14417:14419 Coq.Init.Logic <> :type_scope:x_'='_x not
R14405:14410 Coq.Init.Datatypes <> length def
R14412:14416 compcert.common.Memtype <> bytes var
R14420:14427 compcert.lib.Coqlib <> nat_of_Z def
R14429:14429 compcert.common.Memtype <> n var
R14386:14388 Coq.Init.Logic <> :type_scope:x_'='_x not
R14367:14375 compcert.common.Memtype MEM loadbytes defax
R14385:14385 compcert.common.Memtype <> n var
R14381:14383 compcert.common.Memtype <> ofs var
R14379:14379 compcert.common.Memtype <> b var
R14377:14377 compcert.common.Memtype <> m var
R14389:14392 Coq.Init.Datatypes <> Some constr
R14394:14398 compcert.common.Memtype <> bytes var
ax 14439:14453 MEM loadbytes_empty
R14507:14509 Coq.Init.Logic <> :type_scope:x_'='_x not
R14488:14496 compcert.common.Memtype MEM loadbytes defax
R14506:14506 compcert.common.Memtype <> n var
R14502:14504 compcert.common.Memtype <> ofs var
R14500:14500 compcert.common.Memtype <> b var
R14498:14498 compcert.common.Memtype <> m var
R14510:14513 Coq.Init.Datatypes <> Some constr
R14515:14517 Coq.Init.Datatypes <> nil constr
R14479:14482 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R14478:14478 compcert.common.Memtype <> n var
ax 14605:14620 MEM loadbytes_concat
R14801:14803 Coq.Init.Logic <> :type_scope:x_'='_x not
R14774:14782 compcert.common.Memtype MEM loadbytes defax
R14795:14797 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14793:14794 compcert.common.Memtype <> n1 var
R14798:14799 compcert.common.Memtype <> n2 var
R14788:14790 compcert.common.Memtype <> ofs var
R14786:14786 compcert.common.Memtype <> b var
R14784:14784 compcert.common.Memtype <> m var
R14804:14807 Coq.Init.Datatypes <> Some constr
R14815:14818 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14809:14814 compcert.common.Memtype <> bytes1 var
R14819:14824 compcert.common.Memtype <> bytes2 var
R14763:14766 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14761:14762 compcert.common.Memtype <> n2 var
R14752:14755 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14750:14751 compcert.common.Memtype <> n1 var
R14730:14732 Coq.Init.Logic <> :type_scope:x_'='_x not
R14703:14711 compcert.common.Memtype MEM loadbytes defax
R14728:14729 compcert.common.Memtype <> n2 var
R14721:14723 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14718:14720 compcert.common.Memtype <> ofs var
R14724:14725 compcert.common.Memtype <> n1 var
R14715:14715 compcert.common.Memtype <> b var
R14713:14713 compcert.common.Memtype <> m var
R14733:14736 Coq.Init.Datatypes <> Some constr
R14738:14743 compcert.common.Memtype <> bytes2 var
R14683:14685 Coq.Init.Logic <> :type_scope:x_'='_x not
R14663:14671 compcert.common.Memtype MEM loadbytes defax
R14681:14682 compcert.common.Memtype <> n1 var
R14677:14679 compcert.common.Memtype <> ofs var
R14675:14675 compcert.common.Memtype <> b var
R14673:14673 compcert.common.Memtype <> m var
R14686:14689 Coq.Init.Datatypes <> Some constr
R14691:14696 compcert.common.Memtype <> bytes1 var
ax 14834:14848 MEM loadbytes_split
R14953:14959 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14966:14967 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14968:14974 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14981:14987 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15022:15028 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15008:15010 Coq.Init.Logic <> :type_scope:x_'='_x not
R14988:14996 compcert.common.Memtype MEM loadbytes defax
R15006:15007 compcert.common.Memtype <> n1 var
R15002:15004 compcert.common.Memtype <> ofs var
R15000:15000 compcert.common.Memtype <> b var
R14998:14998 compcert.common.Memtype <> m var
R15011:15014 Coq.Init.Datatypes <> Some constr
R15016:15021 compcert.common.Memtype <> bytes1 var
R15070:15075 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15056:15058 Coq.Init.Logic <> :type_scope:x_'='_x not
R15029:15037 compcert.common.Memtype MEM loadbytes defax
R15054:15055 compcert.common.Memtype <> n2 var
R15047:15049 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R15044:15046 compcert.common.Memtype <> ofs var
R15050:15051 compcert.common.Memtype <> n1 var
R15041:15041 compcert.common.Memtype <> b var
R15039:15039 compcert.common.Memtype <> m var
R15059:15062 Coq.Init.Datatypes <> Some constr
R15064:15069 compcert.common.Memtype <> bytes2 var
R15081:15083 Coq.Init.Logic <> :type_scope:x_'='_x not
R15076:15080 compcert.common.Memtype <> bytes var
R15090:15093 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15084:15089 compcert.common.Memtype <> bytes1 var
R15094:15099 compcert.common.Memtype <> bytes2 var
R14942:14945 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14940:14941 compcert.common.Memtype <> n2 var
R14931:14934 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R14929:14930 compcert.common.Memtype <> n1 var
R14910:14912 Coq.Init.Logic <> :type_scope:x_'='_x not
R14883:14891 compcert.common.Memtype MEM loadbytes defax
R14904:14906 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14902:14903 compcert.common.Memtype <> n1 var
R14907:14908 compcert.common.Memtype <> n2 var
R14897:14899 compcert.common.Memtype <> ofs var
R14895:14895 compcert.common.Memtype <> b var
R14893:14893 compcert.common.Memtype <> m var
R14913:14916 Coq.Init.Datatypes <> Some constr
R14918:14922 compcert.common.Memtype <> bytes var
ax 15322:15336 MEM nextblock_store
R15419:15421 Coq.Init.Logic <> :type_scope:x_'='_x not
R15407:15415 compcert.common.Memtype MEM nextblock defax
R15417:15418 compcert.common.Memtype <> m2 var
R15422:15430 compcert.common.Memtype MEM nextblock defax
R15432:15433 compcert.common.Memtype <> m1 var
R15391:15393 Coq.Init.Logic <> :type_scope:x_'='_x not
R15369:15373 compcert.common.Memtype MEM store defax
R15390:15390 compcert.common.Memtype <> v var
R15386:15388 compcert.common.Memtype <> ofs var
R15384:15384 compcert.common.Memtype <> b var
R15381:15382 compcert.common.Memtype <> m1 var
R15375:15379 compcert.common.Memtype <> chunk var
R15394:15397 Coq.Init.Datatypes <> Some constr
R15399:15400 compcert.common.Memtype <> m2 var
ax 15442:15460 MEM store_valid_block_1
R15563:15573 compcert.common.Memtype MEM valid_block def
R15578:15579 compcert.common.Memtype <> b' var
R15575:15576 compcert.common.Memtype <> m2 var
R15542:15552 compcert.common.Memtype MEM valid_block def
R15557:15558 compcert.common.Memtype <> b' var
R15554:15555 compcert.common.Memtype <> m1 var
R15515:15517 Coq.Init.Logic <> :type_scope:x_'='_x not
R15493:15497 compcert.common.Memtype MEM store defax
R15514:15514 compcert.common.Memtype <> v var
R15510:15512 compcert.common.Memtype <> ofs var
R15508:15508 compcert.common.Memtype <> b var
R15505:15506 compcert.common.Memtype <> m1 var
R15499:15503 compcert.common.Memtype <> chunk var
R15518:15521 Coq.Init.Datatypes <> Some constr
R15523:15524 compcert.common.Memtype <> m2 var
ax 15588:15606 MEM store_valid_block_2
R15709:15719 compcert.common.Memtype MEM valid_block def
R15724:15725 compcert.common.Memtype <> b' var
R15721:15722 compcert.common.Memtype <> m1 var
R15688:15698 compcert.common.Memtype MEM valid_block def
R15703:15704 compcert.common.Memtype <> b' var
R15700:15701 compcert.common.Memtype <> m2 var
R15661:15663 Coq.Init.Logic <> :type_scope:x_'='_x not
R15639:15643 compcert.common.Memtype MEM store defax
R15660:15660 compcert.common.Memtype <> v var
R15656:15658 compcert.common.Memtype <> ofs var
R15654:15654 compcert.common.Memtype <> b var
R15651:15652 compcert.common.Memtype <> m1 var
R15645:15649 compcert.common.Memtype <> chunk var
R15664:15667 Coq.Init.Datatypes <> Some constr
R15669:15670 compcert.common.Memtype <> m2 var
ax 15735:15746 MEM perm_store_1
R15860:15863 compcert.common.Memtype MEM perm defax
R15878:15878 compcert.common.Memtype <> p var
R15876:15876 compcert.common.Memtype <> k var
R15871:15874 compcert.common.Memtype <> ofs' var
R15868:15869 compcert.common.Memtype <> b' var
R15865:15866 compcert.common.Memtype <> m2 var
R15837:15840 compcert.common.Memtype MEM perm defax
R15855:15855 compcert.common.Memtype <> p var
R15853:15853 compcert.common.Memtype <> k var
R15848:15851 compcert.common.Memtype <> ofs' var
R15845:15846 compcert.common.Memtype <> b' var
R15842:15843 compcert.common.Memtype <> m1 var
R15801:15803 Coq.Init.Logic <> :type_scope:x_'='_x not
R15779:15783 compcert.common.Memtype MEM store defax
R15800:15800 compcert.common.Memtype <> v var
R15796:15798 compcert.common.Memtype <> ofs var
R15794:15794 compcert.common.Memtype <> b var
R15791:15792 compcert.common.Memtype <> m1 var
R15785:15789 compcert.common.Memtype <> chunk var
R15804:15807 Coq.Init.Datatypes <> Some constr
R15809:15810 compcert.common.Memtype <> m2 var
ax 15887:15898 MEM perm_store_2
R16012:16015 compcert.common.Memtype MEM perm defax
R16030:16030 compcert.common.Memtype <> p var
R16028:16028 compcert.common.Memtype <> k var
R16023:16026 compcert.common.Memtype <> ofs' var
R16020:16021 compcert.common.Memtype <> b' var
R16017:16018 compcert.common.Memtype <> m1 var
R15989:15992 compcert.common.Memtype MEM perm defax
R16007:16007 compcert.common.Memtype <> p var
R16005:16005 compcert.common.Memtype <> k var
R16000:16003 compcert.common.Memtype <> ofs' var
R15997:15998 compcert.common.Memtype <> b' var
R15994:15995 compcert.common.Memtype <> m2 var
R15953:15955 Coq.Init.Logic <> :type_scope:x_'='_x not
R15931:15935 compcert.common.Memtype MEM store defax
R15952:15952 compcert.common.Memtype <> v var
R15948:15950 compcert.common.Memtype <> ofs var
R15946:15946 compcert.common.Memtype <> b var
R15943:15944 compcert.common.Memtype <> m1 var
R15937:15941 compcert.common.Memtype <> chunk var
R15956:15959 Coq.Init.Datatypes <> Some constr
R15961:15962 compcert.common.Memtype <> m2 var
ax 16040:16057 MEM valid_access_store
R16131:16132 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16135:16136 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16140:16142 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16175:16176 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R16165:16167 Coq.Init.Logic <> :type_scope:x_'='_x not
R16143:16147 compcert.common.Memtype MEM store defax
R16164:16164 compcert.common.Memtype <> v var
R16160:16162 compcert.common.Memtype <> ofs var
R16158:16158 compcert.common.Memtype <> b var
R16155:16156 compcert.common.Memtype <> m1 var
R16149:16153 compcert.common.Memtype <> chunk var
R16168:16171 Coq.Init.Datatypes <> Some constr
R16137:16139 compcert.common.Memtype MEM mem defax
R16089:16100 compcert.common.Memtype MEM valid_access def
R16117:16124 compcert.common.Memtype MEM Writable constr
R16113:16115 compcert.common.Memtype <> ofs var
R16111:16111 compcert.common.Memtype <> b var
R16105:16109 compcert.common.Memtype <> chunk var
R16102:16103 compcert.common.Memtype <> m1 var
ax 16185:16204 MEM store_valid_access_1
R16338:16349 compcert.common.Memtype MEM valid_access def
R16369:16369 compcert.common.Memtype <> p var
R16364:16367 compcert.common.Memtype <> ofs' var
R16361:16362 compcert.common.Memtype <> b' var
R16354:16359 compcert.common.Memtype <> chunk' var
R16351:16352 compcert.common.Memtype <> m2 var
R16302:16313 compcert.common.Memtype MEM valid_access def
R16333:16333 compcert.common.Memtype <> p var
R16328:16331 compcert.common.Memtype <> ofs' var
R16325:16326 compcert.common.Memtype <> b' var
R16318:16323 compcert.common.Memtype <> chunk' var
R16315:16316 compcert.common.Memtype <> m1 var
R16259:16261 Coq.Init.Logic <> :type_scope:x_'='_x not
R16237:16241 compcert.common.Memtype MEM store defax
R16258:16258 compcert.common.Memtype <> v var
R16254:16256 compcert.common.Memtype <> ofs var
R16252:16252 compcert.common.Memtype <> b var
R16249:16250 compcert.common.Memtype <> m1 var
R16243:16247 compcert.common.Memtype <> chunk var
R16262:16265 Coq.Init.Datatypes <> Some constr
R16267:16268 compcert.common.Memtype <> m2 var
ax 16378:16397 MEM store_valid_access_2
R16531:16542 compcert.common.Memtype MEM valid_access def
R16562:16562 compcert.common.Memtype <> p var
R16557:16560 compcert.common.Memtype <> ofs' var
R16554:16555 compcert.common.Memtype <> b' var
R16547:16552 compcert.common.Memtype <> chunk' var
R16544:16545 compcert.common.Memtype <> m1 var
R16495:16506 compcert.common.Memtype MEM valid_access def
R16526:16526 compcert.common.Memtype <> p var
R16521:16524 compcert.common.Memtype <> ofs' var
R16518:16519 compcert.common.Memtype <> b' var
R16511:16516 compcert.common.Memtype <> chunk' var
R16508:16509 compcert.common.Memtype <> m2 var
R16452:16454 Coq.Init.Logic <> :type_scope:x_'='_x not
R16430:16434 compcert.common.Memtype MEM store defax
R16451:16451 compcert.common.Memtype <> v var
R16447:16449 compcert.common.Memtype <> ofs var
R16445:16445 compcert.common.Memtype <> b var
R16442:16443 compcert.common.Memtype <> m1 var
R16436:16440 compcert.common.Memtype <> chunk var
R16455:16458 Coq.Init.Datatypes <> Some constr
R16460:16461 compcert.common.Memtype <> m2 var
ax 16571:16590 MEM store_valid_access_3
R16661:16672 compcert.common.Memtype MEM valid_access def
R16689:16696 compcert.common.Memtype MEM Writable constr
R16685:16687 compcert.common.Memtype <> ofs var
R16683:16683 compcert.common.Memtype <> b var
R16677:16681 compcert.common.Memtype <> chunk var
R16674:16675 compcert.common.Memtype <> m1 var
R16645:16647 Coq.Init.Logic <> :type_scope:x_'='_x not
R16623:16627 compcert.common.Memtype MEM store defax
R16644:16644 compcert.common.Memtype <> v var
R16640:16642 compcert.common.Memtype <> ofs var
R16638:16638 compcert.common.Memtype <> b var
R16635:16636 compcert.common.Memtype <> m1 var
R16629:16633 compcert.common.Memtype <> chunk var
R16648:16651 Coq.Init.Datatypes <> Some constr
R16653:16654 compcert.common.Memtype <> m2 var
ax 16737:16754 MEM load_store_similar
R16929:16935 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16938:16939 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16970:16973 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16960:16962 Coq.Init.Logic <> :type_scope:x_'='_x not
R16940:16943 compcert.common.Memtype MEM load defax
R16957:16959 compcert.common.Memtype <> ofs var
R16955:16955 compcert.common.Memtype <> b var
R16952:16953 compcert.common.Memtype <> m2 var
R16945:16950 compcert.common.Memtype <> chunk' var
R16963:16966 Coq.Init.Datatypes <> Some constr
R16968:16969 compcert.common.Memtype <> v' var
R16974:16990 compcert.common.Memdata <> decode_encode_val def
R17007:17008 compcert.common.Memtype <> v' var
R17000:17005 compcert.common.Memtype <> chunk' var
R16994:16998 compcert.common.Memtype <> chunk var
R16992:16992 compcert.common.Memtype <> v var
R16902:16905 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16884:16894 compcert.common.Memdata <> align_chunk def
R16896:16901 compcert.common.Memtype <> chunk' var
R16906:16916 compcert.common.Memdata <> align_chunk def
R16918:16922 compcert.common.Memtype <> chunk var
R16859:16861 Coq.Init.Logic <> :type_scope:x_'='_x not
R16842:16851 compcert.common.Memdata <> size_chunk def
R16853:16858 compcert.common.Memtype <> chunk' var
R16862:16871 compcert.common.Memdata <> size_chunk def
R16873:16877 compcert.common.Memtype <> chunk var
R16809:16811 Coq.Init.Logic <> :type_scope:x_'='_x not
R16787:16791 compcert.common.Memtype MEM store defax
R16808:16808 compcert.common.Memtype <> v var
R16804:16806 compcert.common.Memtype <> ofs var
R16802:16802 compcert.common.Memtype <> b var
R16799:16800 compcert.common.Memtype <> m1 var
R16793:16797 compcert.common.Memtype <> chunk var
R16812:16815 Coq.Init.Datatypes <> Some constr
R16817:16818 compcert.common.Memtype <> m2 var
ax 17018:17032 MEM load_store_same
R17122:17124 Coq.Init.Logic <> :type_scope:x_'='_x not
R17103:17106 compcert.common.Memtype MEM load defax
R17119:17121 compcert.common.Memtype <> ofs var
R17117:17117 compcert.common.Memtype <> b var
R17114:17115 compcert.common.Memtype <> m2 var
R17108:17112 compcert.common.Memtype <> chunk var
R17125:17128 Coq.Init.Datatypes <> Some constr
R17131:17145 compcert.common.Values Val load_result def
R17153:17153 compcert.common.Memtype <> v var
R17147:17151 compcert.common.Memtype <> chunk var
R17087:17089 Coq.Init.Logic <> :type_scope:x_'='_x not
R17065:17069 compcert.common.Memtype MEM store defax
R17086:17086 compcert.common.Memtype <> v var
R17082:17084 compcert.common.Memtype <> ofs var
R17080:17080 compcert.common.Memtype <> b var
R17077:17078 compcert.common.Memtype <> m1 var
R17071:17075 compcert.common.Memtype <> chunk var
R17090:17093 Coq.Init.Datatypes <> Some constr
R17095:17096 compcert.common.Memtype <> m2 var
ax 17164:17179 MEM load_store_other
R17383:17385 Coq.Init.Logic <> :type_scope:x_'='_x not
R17361:17364 compcert.common.Memtype MEM load defax
R17379:17382 compcert.common.Memtype <> ofs' var
R17376:17377 compcert.common.Memtype <> b' var
R17373:17374 compcert.common.Memtype <> m2 var
R17366:17371 compcert.common.Memtype <> chunk' var
R17386:17389 compcert.common.Memtype MEM load defax
R17404:17407 compcert.common.Memtype <> ofs' var
R17401:17402 compcert.common.Memtype <> b' var
R17398:17399 compcert.common.Memtype <> m1 var
R17391:17396 compcert.common.Memtype <> chunk' var
R17282:17287 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17277:17280 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17275:17276 compcert.common.Memtype <> b' var
R17281:17281 compcert.common.Memtype <> b var
R17319:17324 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17312:17315 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R17292:17294 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17288:17291 compcert.common.Memtype <> ofs' var
R17295:17304 compcert.common.Memdata <> size_chunk def
R17306:17311 compcert.common.Memtype <> chunk' var
R17316:17318 compcert.common.Memtype <> ofs var
R17347:17350 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R17328:17330 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17325:17327 compcert.common.Memtype <> ofs var
R17331:17340 compcert.common.Memdata <> size_chunk def
R17342:17346 compcert.common.Memtype <> chunk var
R17351:17354 compcert.common.Memtype <> ofs' var
R17234:17236 Coq.Init.Logic <> :type_scope:x_'='_x not
R17212:17216 compcert.common.Memtype MEM store defax
R17233:17233 compcert.common.Memtype <> v var
R17229:17231 compcert.common.Memtype <> ofs var
R17227:17227 compcert.common.Memtype <> b var
R17224:17225 compcert.common.Memtype <> m1 var
R17218:17222 compcert.common.Memtype <> chunk var
R17237:17240 Coq.Init.Datatypes <> Some constr
R17242:17243 compcert.common.Memtype <> m2 var
ax 17454:17479 MEM load_store_pointer_overlap
R17710:17712 Coq.Init.Logic <> :type_scope:x_'='_x not
R17709:17709 compcert.common.Memtype <> v var
R17713:17718 compcert.common.Values <> Vundef constr
R17696:17698 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R17677:17679 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17674:17676 compcert.common.Memtype <> ofs var
R17680:17689 compcert.common.Memdata <> size_chunk def
R17691:17695 compcert.common.Memtype <> chunk var
R17699:17702 compcert.common.Memtype <> ofs' var
R17662:17664 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R17642:17644 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R17638:17641 compcert.common.Memtype <> ofs' var
R17645:17654 compcert.common.Memdata <> size_chunk def
R17656:17661 compcert.common.Memtype <> chunk' var
R17665:17667 compcert.common.Memtype <> ofs var
R17625:17628 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17621:17624 compcert.common.Memtype <> ofs' var
R17629:17631 compcert.common.Memtype <> ofs var
R17606:17608 Coq.Init.Logic <> :type_scope:x_'='_x not
R17585:17588 compcert.common.Memtype MEM load defax
R17602:17605 compcert.common.Memtype <> ofs' var
R17600:17600 compcert.common.Memtype <> b var
R17597:17598 compcert.common.Memtype <> m2 var
R17590:17595 compcert.common.Memtype <> chunk' var
R17609:17612 Coq.Init.Datatypes <> Some constr
R17614:17614 compcert.common.Memtype <> v var
R17569:17571 Coq.Init.Logic <> :type_scope:x_'='_x not
R17534:17538 compcert.common.Memtype MEM store defax
R17556:17559 compcert.common.Values <> Vptr constr
R17565:17567 compcert.common.Memtype <> v_o var
R17561:17563 compcert.common.Memtype <> v_b var
R17551:17553 compcert.common.Memtype <> ofs var
R17549:17549 compcert.common.Memtype <> b var
R17546:17547 compcert.common.Memtype <> m1 var
R17540:17544 compcert.common.Memtype <> chunk var
R17572:17575 Coq.Init.Datatypes <> Some constr
R17577:17578 compcert.common.Memtype <> m2 var
ax 17727:17753 MEM load_store_pointer_mismatch
R17931:17933 Coq.Init.Logic <> :type_scope:x_'='_x not
R17930:17930 compcert.common.Memtype <> v var
R17934:17939 compcert.common.Values <> Vundef constr
R17904:17907 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17894:17897 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17889:17893 compcert.common.Memtype <> chunk var
R17898:17903 compcert.common.AST <> Mint32 constr
R17914:17917 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17908:17913 compcert.common.Memtype <> chunk' var
R17918:17923 compcert.common.AST <> Mint32 constr
R17874:17876 Coq.Init.Logic <> :type_scope:x_'='_x not
R17854:17857 compcert.common.Memtype MEM load defax
R17871:17873 compcert.common.Memtype <> ofs var
R17869:17869 compcert.common.Memtype <> b var
R17866:17867 compcert.common.Memtype <> m2 var
R17859:17864 compcert.common.Memtype <> chunk' var
R17877:17880 Coq.Init.Datatypes <> Some constr
R17882:17882 compcert.common.Memtype <> v var
R17838:17840 Coq.Init.Logic <> :type_scope:x_'='_x not
R17803:17807 compcert.common.Memtype MEM store defax
R17825:17828 compcert.common.Values <> Vptr constr
R17834:17836 compcert.common.Memtype <> v_o var
R17830:17832 compcert.common.Memtype <> v_b var
R17820:17822 compcert.common.Memtype <> ofs var
R17818:17818 compcert.common.Memtype <> b var
R17815:17816 compcert.common.Memtype <> m1 var
R17809:17813 compcert.common.Memtype <> chunk var
R17841:17844 Coq.Init.Datatypes <> Some constr
R17846:17847 compcert.common.Memtype <> m2 var
ax 17948:17965 MEM load_pointer_store
R18118:18118 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18196:18203 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18280:18280 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18133:18136 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18124:18126 Coq.Init.Logic <> :type_scope:x_'='_x not
R18119:18123 compcert.common.Memtype <> chunk var
R18127:18132 compcert.common.AST <> Mint32 constr
R18153:18156 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18138:18140 Coq.Init.Logic <> :type_scope:x_'='_x not
R18137:18137 compcert.common.Memtype <> v var
R18141:18144 compcert.common.Values <> Vptr constr
R18150:18152 compcert.common.Memtype <> v_o var
R18146:18148 compcert.common.Memtype <> v_b var
R18172:18175 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18163:18165 Coq.Init.Logic <> :type_scope:x_'='_x not
R18157:18162 compcert.common.Memtype <> chunk' var
R18166:18171 compcert.common.AST <> Mint32 constr
R18182:18185 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18178:18180 Coq.Init.Logic <> :type_scope:x_'='_x not
R18176:18177 compcert.common.Memtype <> b' var
R18181:18181 compcert.common.Memtype <> b var
R18190:18192 Coq.Init.Logic <> :type_scope:x_'='_x not
R18186:18189 compcert.common.Memtype <> ofs' var
R18193:18195 compcert.common.Memtype <> ofs var
R18211:18214 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18206:18209 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18204:18205 compcert.common.Memtype <> b' var
R18210:18210 compcert.common.Memtype <> b var
R18246:18249 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18239:18242 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18219:18221 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18215:18218 compcert.common.Memtype <> ofs' var
R18222:18231 compcert.common.Memdata <> size_chunk def
R18233:18238 compcert.common.Memtype <> chunk' var
R18243:18245 compcert.common.Memtype <> ofs var
R18272:18275 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18253:18255 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18250:18252 compcert.common.Memtype <> ofs var
R18256:18265 compcert.common.Memdata <> size_chunk def
R18267:18271 compcert.common.Memtype <> chunk var
R18276:18279 compcert.common.Memtype <> ofs' var
R18091:18093 Coq.Init.Logic <> :type_scope:x_'='_x not
R18069:18072 compcert.common.Memtype MEM load defax
R18087:18090 compcert.common.Memtype <> ofs' var
R18084:18085 compcert.common.Memtype <> b' var
R18081:18082 compcert.common.Memtype <> m2 var
R18074:18079 compcert.common.Memtype <> chunk' var
R18094:18097 Coq.Init.Datatypes <> Some constr
R18099:18102 compcert.common.Values <> Vptr constr
R18108:18110 compcert.common.Memtype <> v_o var
R18104:18106 compcert.common.Memtype <> v_b var
R18020:18022 Coq.Init.Logic <> :type_scope:x_'='_x not
R17998:18002 compcert.common.Memtype MEM store defax
R18019:18019 compcert.common.Memtype <> v var
R18015:18017 compcert.common.Memtype <> ofs var
R18013:18013 compcert.common.Memtype <> b var
R18010:18011 compcert.common.Memtype <> m1 var
R18004:18008 compcert.common.Memtype <> chunk var
R18023:18026 Coq.Init.Datatypes <> Some constr
R18028:18029 compcert.common.Memtype <> m2 var
ax 18337:18356 MEM loadbytes_store_same
R18464:18466 Coq.Init.Logic <> :type_scope:x_'='_x not
R18427:18435 compcert.common.Memtype MEM loadbytes defax
R18447:18456 compcert.common.Memdata <> size_chunk def
R18458:18462 compcert.common.Memtype <> chunk var
R18442:18444 compcert.common.Memtype <> ofs var
R18440:18440 compcert.common.Memtype <> b var
R18437:18438 compcert.common.Memtype <> m2 var
R18467:18470 Coq.Init.Datatypes <> Some constr
R18472:18481 compcert.common.Memdata <> encode_val def
R18489:18489 compcert.common.Memtype <> v var
R18483:18487 compcert.common.Memtype <> chunk var
R18411:18413 Coq.Init.Logic <> :type_scope:x_'='_x not
R18389:18393 compcert.common.Memtype MEM store defax
R18410:18410 compcert.common.Memtype <> v var
R18406:18408 compcert.common.Memtype <> ofs var
R18404:18404 compcert.common.Memtype <> b var
R18401:18402 compcert.common.Memtype <> m1 var
R18395:18399 compcert.common.Memtype <> chunk var
R18414:18417 Coq.Init.Datatypes <> Some constr
R18419:18420 compcert.common.Memtype <> m2 var
ax 18499:18519 MEM loadbytes_store_other
R18708:18710 Coq.Init.Logic <> :type_scope:x_'='_x not
R18686:18694 compcert.common.Memtype MEM loadbytes defax
R18707:18707 compcert.common.Memtype <> n var
R18702:18705 compcert.common.Memtype <> ofs' var
R18699:18700 compcert.common.Memtype <> b' var
R18696:18697 compcert.common.Memtype <> m2 var
R18711:18719 compcert.common.Memtype MEM loadbytes defax
R18732:18732 compcert.common.Memtype <> n var
R18727:18730 compcert.common.Memtype <> ofs' var
R18724:18725 compcert.common.Memtype <> b' var
R18721:18722 compcert.common.Memtype <> m1 var
R18617:18620 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18612:18615 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18610:18611 compcert.common.Memtype <> b' var
R18616:18616 compcert.common.Memtype <> b var
R18627:18630 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18622:18625 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18621:18621 compcert.common.Memtype <> n var
R18646:18649 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18639:18642 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18635:18637 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18631:18634 compcert.common.Memtype <> ofs' var
R18638:18638 compcert.common.Memtype <> n var
R18643:18645 compcert.common.Memtype <> ofs var
R18672:18675 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R18653:18655 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R18650:18652 compcert.common.Memtype <> ofs var
R18656:18665 compcert.common.Memdata <> size_chunk def
R18667:18671 compcert.common.Memtype <> chunk var
R18676:18679 compcert.common.Memtype <> ofs' var
R18574:18576 Coq.Init.Logic <> :type_scope:x_'='_x not
R18552:18556 compcert.common.Memtype MEM store defax
R18573:18573 compcert.common.Memtype <> v var
R18569:18571 compcert.common.Memtype <> ofs var
R18567:18567 compcert.common.Memtype <> b var
R18564:18565 compcert.common.Memtype <> m1 var
R18558:18562 compcert.common.Memtype <> chunk var
R18577:18580 Coq.Init.Datatypes <> Some constr
R18582:18583 compcert.common.Memtype <> m2 var
ax 18839:18861 MEM store_signed_unsigned_8
R18913:18915 Coq.Init.Logic <> :type_scope:x_'='_x not
R18886:18890 compcert.common.Memtype MEM store defax
R18912:18912 compcert.common.Memtype <> v var
R18908:18910 compcert.common.Memtype <> ofs var
R18906:18906 compcert.common.Memtype <> b var
R18904:18904 compcert.common.Memtype <> m var
R18892:18902 compcert.common.AST <> Mint8signed constr
R18916:18920 compcert.common.Memtype MEM store defax
R18944:18944 compcert.common.Memtype <> v var
R18940:18942 compcert.common.Memtype <> ofs var
R18938:18938 compcert.common.Memtype <> b var
R18936:18936 compcert.common.Memtype <> m var
R18922:18934 compcert.common.AST <> Mint8unsigned constr
ax 18953:18976 MEM store_signed_unsigned_16
R19029:19031 Coq.Init.Logic <> :type_scope:x_'='_x not
R19001:19005 compcert.common.Memtype MEM store defax
R19028:19028 compcert.common.Memtype <> v var
R19024:19026 compcert.common.Memtype <> ofs var
R19022:19022 compcert.common.Memtype <> b var
R19020:19020 compcert.common.Memtype <> m var
R19007:19018 compcert.common.AST <> Mint16signed constr
R19032:19036 compcert.common.Memtype MEM store defax
R19061:19061 compcert.common.Memtype <> v var
R19057:19059 compcert.common.Memtype <> ofs var
R19055:19055 compcert.common.Memtype <> b var
R19053:19053 compcert.common.Memtype <> m var
R19038:19051 compcert.common.AST <> Mint16unsigned constr
ax 19070:19088 MEM store_int8_zero_ext
R19166:19170 Coq.Init.Logic <> :type_scope:x_'='_x not
R19113:19117 compcert.common.Memtype MEM store defax
R19142:19145 compcert.common.Values <> Vint constr
R19148:19159 compcert.lib.Integers Int zero_ext def
R19163:19163 compcert.common.Memtype <> n var
R19137:19139 compcert.common.Memtype <> ofs var
R19135:19135 compcert.common.Memtype <> b var
R19133:19133 compcert.common.Memtype <> m var
R19119:19131 compcert.common.AST <> Mint8unsigned constr
R19171:19175 compcert.common.Memtype MEM store defax
R19200:19203 compcert.common.Values <> Vint constr
R19205:19205 compcert.common.Memtype <> n var
R19195:19197 compcert.common.Memtype <> ofs var
R19193:19193 compcert.common.Memtype <> b var
R19191:19191 compcert.common.Memtype <> m var
R19177:19189 compcert.common.AST <> Mint8unsigned constr
ax 19215:19233 MEM store_int8_sign_ext
R19309:19313 Coq.Init.Logic <> :type_scope:x_'='_x not
R19258:19262 compcert.common.Memtype MEM store defax
R19285:19288 compcert.common.Values <> Vint constr
R19291:19302 compcert.lib.Integers Int sign_ext def
R19306:19306 compcert.common.Memtype <> n var
R19280:19282 compcert.common.Memtype <> ofs var
R19278:19278 compcert.common.Memtype <> b var
R19276:19276 compcert.common.Memtype <> m var
R19264:19274 compcert.common.AST <> Mint8signed constr
R19314:19318 compcert.common.Memtype MEM store defax
R19341:19344 compcert.common.Values <> Vint constr
R19346:19346 compcert.common.Memtype <> n var
R19336:19338 compcert.common.Memtype <> ofs var
R19334:19334 compcert.common.Memtype <> b var
R19332:19332 compcert.common.Memtype <> m var
R19320:19330 compcert.common.AST <> Mint8signed constr
ax 19356:19375 MEM store_int16_zero_ext
R19455:19459 Coq.Init.Logic <> :type_scope:x_'='_x not
R19400:19404 compcert.common.Memtype MEM store defax
R19430:19433 compcert.common.Values <> Vint constr
R19436:19447 compcert.lib.Integers Int zero_ext def
R19452:19452 compcert.common.Memtype <> n var
R19425:19427 compcert.common.Memtype <> ofs var
R19423:19423 compcert.common.Memtype <> b var
R19421:19421 compcert.common.Memtype <> m var
R19406:19419 compcert.common.AST <> Mint16unsigned constr
R19460:19464 compcert.common.Memtype MEM store defax
R19490:19493 compcert.common.Values <> Vint constr
R19495:19495 compcert.common.Memtype <> n var
R19485:19487 compcert.common.Memtype <> ofs var
R19483:19483 compcert.common.Memtype <> b var
R19481:19481 compcert.common.Memtype <> m var
R19466:19479 compcert.common.AST <> Mint16unsigned constr
ax 19505:19524 MEM store_int16_sign_ext
R19602:19606 Coq.Init.Logic <> :type_scope:x_'='_x not
R19549:19553 compcert.common.Memtype MEM store defax
R19577:19580 compcert.common.Values <> Vint constr
R19583:19594 compcert.lib.Integers Int sign_ext def
R19599:19599 compcert.common.Memtype <> n var
R19572:19574 compcert.common.Memtype <> ofs var
R19570:19570 compcert.common.Memtype <> b var
R19568:19568 compcert.common.Memtype <> m var
R19555:19566 compcert.common.AST <> Mint16signed constr
R19607:19611 compcert.common.Memtype MEM store defax
R19635:19638 compcert.common.Values <> Vint constr
R19640:19640 compcert.common.Memtype <> n var
R19630:19632 compcert.common.Memtype <> ofs var
R19628:19628 compcert.common.Memtype <> b var
R19626:19626 compcert.common.Memtype <> m var
R19613:19624 compcert.common.AST <> Mint16signed constr
ax 19650:19671 MEM store_float32_truncate
R19751:19755 Coq.Init.Logic <> :type_scope:x_'='_x not
R19696:19700 compcert.common.Memtype MEM store defax
R19720:19725 compcert.common.Values <> Vfloat constr
R19728:19746 compcert.lib.Floats Float singleoffloat def
R19748:19748 compcert.common.Memtype <> n var
R19715:19717 compcert.common.Memtype <> ofs var
R19713:19713 compcert.common.Memtype <> b var
R19711:19711 compcert.common.Memtype <> m var
R19702:19709 compcert.common.AST <> Mfloat32 constr
R19756:19760 compcert.common.Memtype MEM store defax
R19780:19785 compcert.common.Values <> Vfloat constr
R19787:19787 compcert.common.Memtype <> n var
R19775:19777 compcert.common.Memtype <> ofs var
R19773:19773 compcert.common.Memtype <> b var
R19771:19771 compcert.common.Memtype <> m var
R19762:19769 compcert.common.AST <> Mfloat32 constr
ax 20035:20055 MEM range_perm_storebytes
R20155:20156 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20159:20161 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20165:20167 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20203:20204 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R20193:20195 Coq.Init.Logic <> :type_scope:x_'='_x not
R20168:20177 compcert.common.Memtype MEM storebytes defax
R20188:20192 compcert.common.Memtype <> bytes var
R20184:20186 compcert.common.Memtype <> ofs var
R20182:20182 compcert.common.Memtype <> b var
R20179:20180 compcert.common.Memtype <> m1 var
R20196:20199 Coq.Init.Datatypes <> Some constr
R20162:20164 compcert.common.Memtype MEM mem defax
R20085:20094 compcert.common.Memtype MEM range_perm def
R20141:20148 compcert.common.Memtype MEM Writable constr
R20137:20139 compcert.common.Memtype MEM Cur constr
R20109:20111 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20106:20108 compcert.common.Memtype <> ofs var
R20112:20119 Coq.ZArith.BinInt <> Z_of_nat syndef
R20122:20127 Coq.Init.Datatypes <> length def
R20129:20133 compcert.common.Memtype <> bytes var
R20101:20103 compcert.common.Memtype <> ofs var
R20099:20099 compcert.common.Memtype <> b var
R20096:20097 compcert.common.Memtype <> m1 var
ax 20213:20233 MEM storebytes_range_perm
R20305:20314 compcert.common.Memtype MEM range_perm def
R20361:20368 compcert.common.Memtype MEM Writable constr
R20357:20359 compcert.common.Memtype MEM Cur constr
R20329:20331 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R20326:20328 compcert.common.Memtype <> ofs var
R20332:20339 Coq.ZArith.BinInt <> Z_of_nat syndef
R20342:20347 Coq.Init.Datatypes <> length def
R20349:20353 compcert.common.Memtype <> bytes var
R20321:20323 compcert.common.Memtype <> ofs var
R20319:20319 compcert.common.Memtype <> b var
R20316:20317 compcert.common.Memtype <> m1 var
R20289:20291 Coq.Init.Logic <> :type_scope:x_'='_x not
R20264:20273 compcert.common.Memtype MEM storebytes defax
R20284:20288 compcert.common.Memtype <> bytes var
R20280:20282 compcert.common.Memtype <> ofs var
R20278:20278 compcert.common.Memtype <> b var
R20275:20276 compcert.common.Memtype <> m1 var
R20292:20295 Coq.Init.Datatypes <> Some constr
R20297:20298 compcert.common.Memtype <> m2 var
ax 20377:20393 MEM perm_storebytes_1
R20508:20511 compcert.common.Memtype MEM perm defax
R20526:20526 compcert.common.Memtype <> p var
R20524:20524 compcert.common.Memtype <> k var
R20519:20522 compcert.common.Memtype <> ofs' var
R20516:20517 compcert.common.Memtype <> b' var
R20513:20514 compcert.common.Memtype <> m2 var
R20485:20488 compcert.common.Memtype MEM perm defax
R20503:20503 compcert.common.Memtype <> p var
R20501:20501 compcert.common.Memtype <> k var
R20496:20499 compcert.common.Memtype <> ofs' var
R20493:20494 compcert.common.Memtype <> b' var
R20490:20491 compcert.common.Memtype <> m1 var
R20449:20451 Coq.Init.Logic <> :type_scope:x_'='_x not
R20424:20433 compcert.common.Memtype MEM storebytes defax
R20444:20448 compcert.common.Memtype <> bytes var
R20440:20442 compcert.common.Memtype <> ofs var
R20438:20438 compcert.common.Memtype <> b var
R20435:20436 compcert.common.Memtype <> m1 var
R20452:20455 Coq.Init.Datatypes <> Some constr
R20457:20458 compcert.common.Memtype <> m2 var
ax 20535:20551 MEM perm_storebytes_2
R20666:20669 compcert.common.Memtype MEM perm defax
R20684:20684 compcert.common.Memtype <> p var
R20682:20682 compcert.common.Memtype <> k var
R20677:20680 compcert.common.Memtype <> ofs' var
R20674:20675 compcert.common.Memtype <> b' var
R20671:20672 compcert.common.Memtype <> m1 var
R20643:20646 compcert.common.Memtype MEM perm defax
R20661:20661 compcert.common.Memtype <> p var
R20659:20659 compcert.common.Memtype <> k var
R20654:20657 compcert.common.Memtype <> ofs' var
R20651:20652 compcert.common.Memtype <> b' var
R20648:20649 compcert.common.Memtype <> m2 var
R20607:20609 Coq.Init.Logic <> :type_scope:x_'='_x not
R20582:20591 compcert.common.Memtype MEM storebytes defax
R20602:20606 compcert.common.Memtype <> bytes var
R20598:20600 compcert.common.Memtype <> ofs var
R20596:20596 compcert.common.Memtype <> b var
R20593:20594 compcert.common.Memtype <> m1 var
R20610:20613 Coq.Init.Datatypes <> Some constr
R20615:20616 compcert.common.Memtype <> m2 var
ax 20693:20717 MEM storebytes_valid_access_1
R20852:20863 compcert.common.Memtype MEM valid_access def
R20883:20883 compcert.common.Memtype <> p var
R20878:20881 compcert.common.Memtype <> ofs' var
R20875:20876 compcert.common.Memtype <> b' var
R20868:20873 compcert.common.Memtype <> chunk' var
R20865:20866 compcert.common.Memtype <> m2 var
R20816:20827 compcert.common.Memtype MEM valid_access def
R20847:20847 compcert.common.Memtype <> p var
R20842:20845 compcert.common.Memtype <> ofs' var
R20839:20840 compcert.common.Memtype <> b' var
R20832:20837 compcert.common.Memtype <> chunk' var
R20829:20830 compcert.common.Memtype <> m1 var
R20773:20775 Coq.Init.Logic <> :type_scope:x_'='_x not
R20748:20757 compcert.common.Memtype MEM storebytes defax
R20768:20772 compcert.common.Memtype <> bytes var
R20764:20766 compcert.common.Memtype <> ofs var
R20762:20762 compcert.common.Memtype <> b var
R20759:20760 compcert.common.Memtype <> m1 var
R20776:20779 Coq.Init.Datatypes <> Some constr
R20781:20782 compcert.common.Memtype <> m2 var
ax 20892:20916 MEM storebytes_valid_access_2
R21051:21062 compcert.common.Memtype MEM valid_access def
R21082:21082 compcert.common.Memtype <> p var
R21077:21080 compcert.common.Memtype <> ofs' var
R21074:21075 compcert.common.Memtype <> b' var
R21067:21072 compcert.common.Memtype <> chunk' var
R21064:21065 compcert.common.Memtype <> m1 var
R21015:21026 compcert.common.Memtype MEM valid_access def
R21046:21046 compcert.common.Memtype <> p var
R21041:21044 compcert.common.Memtype <> ofs' var
R21038:21039 compcert.common.Memtype <> b' var
R21031:21036 compcert.common.Memtype <> chunk' var
R21028:21029 compcert.common.Memtype <> m2 var
R20972:20974 Coq.Init.Logic <> :type_scope:x_'='_x not
R20947:20956 compcert.common.Memtype MEM storebytes defax
R20967:20971 compcert.common.Memtype <> bytes var
R20963:20965 compcert.common.Memtype <> ofs var
R20961:20961 compcert.common.Memtype <> b var
R20958:20959 compcert.common.Memtype <> m1 var
R20975:20978 Coq.Init.Datatypes <> Some constr
R20980:20981 compcert.common.Memtype <> m2 var
ax 21091:21110 MEM nextblock_storebytes
R21194:21196 Coq.Init.Logic <> :type_scope:x_'='_x not
R21182:21190 compcert.common.Memtype MEM nextblock defax
R21192:21193 compcert.common.Memtype <> m2 var
R21197:21205 compcert.common.Memtype MEM nextblock defax
R21207:21208 compcert.common.Memtype <> m1 var
R21166:21168 Coq.Init.Logic <> :type_scope:x_'='_x not
R21141:21150 compcert.common.Memtype MEM storebytes defax
R21161:21165 compcert.common.Memtype <> bytes var
R21157:21159 compcert.common.Memtype <> ofs var
R21155:21155 compcert.common.Memtype <> b var
R21152:21153 compcert.common.Memtype <> m1 var
R21169:21172 Coq.Init.Datatypes <> Some constr
R21174:21175 compcert.common.Memtype <> m2 var
ax 21217:21240 MEM storebytes_valid_block_1
R21344:21354 compcert.common.Memtype MEM valid_block def
R21359:21360 compcert.common.Memtype <> b' var
R21356:21357 compcert.common.Memtype <> m2 var
R21323:21333 compcert.common.Memtype MEM valid_block def
R21338:21339 compcert.common.Memtype <> b' var
R21335:21336 compcert.common.Memtype <> m1 var
R21296:21298 Coq.Init.Logic <> :type_scope:x_'='_x not
R21271:21280 compcert.common.Memtype MEM storebytes defax
R21291:21295 compcert.common.Memtype <> bytes var
R21287:21289 compcert.common.Memtype <> ofs var
R21285:21285 compcert.common.Memtype <> b var
R21282:21283 compcert.common.Memtype <> m1 var
R21299:21302 Coq.Init.Datatypes <> Some constr
R21304:21305 compcert.common.Memtype <> m2 var
ax 21369:21392 MEM storebytes_valid_block_2
R21496:21506 compcert.common.Memtype MEM valid_block def
R21511:21512 compcert.common.Memtype <> b' var
R21508:21509 compcert.common.Memtype <> m1 var
R21475:21485 compcert.common.Memtype MEM valid_block def
R21490:21491 compcert.common.Memtype <> b' var
R21487:21488 compcert.common.Memtype <> m2 var
R21448:21450 Coq.Init.Logic <> :type_scope:x_'='_x not
R21423:21432 compcert.common.Memtype MEM storebytes defax
R21443:21447 compcert.common.Memtype <> bytes var
R21439:21441 compcert.common.Memtype <> ofs var
R21437:21437 compcert.common.Memtype <> b var
R21434:21435 compcert.common.Memtype <> m1 var
R21451:21454 Coq.Init.Datatypes <> Some constr
R21456:21457 compcert.common.Memtype <> m2 var
ax 21576:21591 MEM storebytes_store
R21735:21737 Coq.Init.Logic <> :type_scope:x_'='_x not
R21713:21717 compcert.common.Memtype MEM store defax
R21734:21734 compcert.common.Memtype <> v var
R21730:21732 compcert.common.Memtype <> ofs var
R21728:21728 compcert.common.Memtype <> b var
R21725:21726 compcert.common.Memtype <> m1 var
R21719:21723 compcert.common.Memtype <> chunk var
R21738:21741 Coq.Init.Datatypes <> Some constr
R21743:21744 compcert.common.Memtype <> m2 var
R21682:21682 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R21700:21702 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R21706:21706 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R21683:21693 compcert.common.Memdata <> align_chunk def
R21695:21699 compcert.common.Memtype <> chunk var
R21703:21705 compcert.common.Memtype <> ofs var
R21666:21668 Coq.Init.Logic <> :type_scope:x_'='_x not
R21626:21635 compcert.common.Memtype MEM storebytes defax
R21647:21656 compcert.common.Memdata <> encode_val def
R21664:21664 compcert.common.Memtype <> v var
R21658:21662 compcert.common.Memtype <> chunk var
R21642:21644 compcert.common.Memtype <> ofs var
R21640:21640 compcert.common.Memtype <> b var
R21637:21638 compcert.common.Memtype <> m1 var
R21669:21672 Coq.Init.Datatypes <> Some constr
R21674:21675 compcert.common.Memtype <> m2 var
ax 21754:21769 MEM store_storebytes
R21882:21884 Coq.Init.Logic <> :type_scope:x_'='_x not
R21842:21851 compcert.common.Memtype MEM storebytes defax
R21863:21872 compcert.common.Memdata <> encode_val def
R21880:21880 compcert.common.Memtype <> v var
R21874:21878 compcert.common.Memtype <> chunk var
R21858:21860 compcert.common.Memtype <> ofs var
R21856:21856 compcert.common.Memtype <> b var
R21853:21854 compcert.common.Memtype <> m1 var
R21885:21888 Coq.Init.Datatypes <> Some constr
R21890:21891 compcert.common.Memtype <> m2 var
R21826:21828 Coq.Init.Logic <> :type_scope:x_'='_x not
R21804:21808 compcert.common.Memtype MEM store defax
R21825:21825 compcert.common.Memtype <> v var
R21821:21823 compcert.common.Memtype <> ofs var
R21819:21819 compcert.common.Memtype <> b var
R21816:21817 compcert.common.Memtype <> m1 var
R21810:21814 compcert.common.Memtype <> chunk var
R21829:21832 Coq.Init.Datatypes <> Some constr
R21834:21835 compcert.common.Memtype <> m2 var
ax 21932:21956 MEM loadbytes_storebytes_same
R22072:22074 Coq.Init.Logic <> :type_scope:x_'='_x not
R22028:22036 compcert.common.Memtype MEM loadbytes defax
R22048:22055 Coq.ZArith.BinInt <> Z_of_nat syndef
R22058:22063 Coq.Init.Datatypes <> length def
R22065:22069 compcert.common.Memtype <> bytes var
R22043:22045 compcert.common.Memtype <> ofs var
R22041:22041 compcert.common.Memtype <> b var
R22038:22039 compcert.common.Memtype <> m2 var
R22075:22078 Coq.Init.Datatypes <> Some constr
R22080:22084 compcert.common.Memtype <> bytes var
R22012:22014 Coq.Init.Logic <> :type_scope:x_'='_x not
R21987:21996 compcert.common.Memtype MEM storebytes defax
R22007:22011 compcert.common.Memtype <> bytes var
R22003:22005 compcert.common.Memtype <> ofs var
R22001:22001 compcert.common.Memtype <> b var
R21998:21999 compcert.common.Memtype <> m1 var
R22015:22018 Coq.Init.Datatypes <> Some constr
R22020:22021 compcert.common.Memtype <> m2 var
ax 22093:22118 MEM loadbytes_storebytes_other
R22329:22331 Coq.Init.Logic <> :type_scope:x_'='_x not
R22305:22313 compcert.common.Memtype MEM loadbytes defax
R22326:22328 compcert.common.Memtype <> len var
R22321:22324 compcert.common.Memtype <> ofs' var
R22318:22319 compcert.common.Memtype <> b' var
R22315:22316 compcert.common.Memtype <> m2 var
R22332:22340 compcert.common.Memtype MEM loadbytes defax
R22353:22355 compcert.common.Memtype <> len var
R22348:22351 compcert.common.Memtype <> ofs' var
R22345:22346 compcert.common.Memtype <> b' var
R22342:22343 compcert.common.Memtype <> m1 var
R22233:22238 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22228:22231 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R22226:22227 compcert.common.Memtype <> b' var
R22232:22232 compcert.common.Memtype <> b var
R22256:22261 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22249:22252 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22243:22245 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22239:22242 compcert.common.Memtype <> ofs' var
R22246:22248 compcert.common.Memtype <> len var
R22253:22255 compcert.common.Memtype <> ofs var
R22291:22294 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22265:22267 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22262:22264 compcert.common.Memtype <> ofs var
R22268:22275 Coq.ZArith.BinInt <> Z_of_nat syndef
R22278:22283 Coq.Init.Datatypes <> length def
R22285:22289 compcert.common.Memtype <> bytes var
R22295:22298 compcert.common.Memtype <> ofs' var
R22215:22218 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R22212:22214 compcert.common.Memtype <> len var
R22174:22176 Coq.Init.Logic <> :type_scope:x_'='_x not
R22149:22158 compcert.common.Memtype MEM storebytes defax
R22169:22173 compcert.common.Memtype <> bytes var
R22165:22167 compcert.common.Memtype <> ofs var
R22163:22163 compcert.common.Memtype <> b var
R22160:22161 compcert.common.Memtype <> m1 var
R22177:22180 Coq.Init.Datatypes <> Some constr
R22182:22183 compcert.common.Memtype <> m2 var
ax 22364:22384 MEM load_storebytes_other
R22593:22595 Coq.Init.Logic <> :type_scope:x_'='_x not
R22572:22575 compcert.common.Memtype MEM load defax
R22589:22592 compcert.common.Memtype <> ofs' var
R22586:22587 compcert.common.Memtype <> b' var
R22583:22584 compcert.common.Memtype <> m2 var
R22577:22581 compcert.common.Memtype <> chunk var
R22596:22599 compcert.common.Memtype MEM load defax
R22613:22616 compcert.common.Memtype <> ofs' var
R22610:22611 compcert.common.Memtype <> b' var
R22607:22608 compcert.common.Memtype <> m1 var
R22601:22605 compcert.common.Memtype <> chunk var
R22487:22492 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22482:22485 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R22480:22481 compcert.common.Memtype <> b' var
R22486:22486 compcert.common.Memtype <> b var
R22523:22528 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22516:22519 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22497:22499 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22493:22496 compcert.common.Memtype <> ofs' var
R22500:22509 compcert.common.Memdata <> size_chunk def
R22511:22515 compcert.common.Memtype <> chunk var
R22520:22522 compcert.common.Memtype <> ofs var
R22558:22561 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R22532:22534 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22529:22531 compcert.common.Memtype <> ofs var
R22535:22542 Coq.ZArith.BinInt <> Z_of_nat syndef
R22545:22550 Coq.Init.Datatypes <> length def
R22552:22556 compcert.common.Memtype <> bytes var
R22562:22565 compcert.common.Memtype <> ofs' var
R22440:22442 Coq.Init.Logic <> :type_scope:x_'='_x not
R22415:22424 compcert.common.Memtype MEM storebytes defax
R22435:22439 compcert.common.Memtype <> bytes var
R22431:22433 compcert.common.Memtype <> ofs var
R22429:22429 compcert.common.Memtype <> b var
R22426:22427 compcert.common.Memtype <> m1 var
R22443:22446 Coq.Init.Datatypes <> Some constr
R22448:22449 compcert.common.Memtype <> m2 var
ax 22706:22722 MEM storebytes_concat
R22913:22915 Coq.Init.Logic <> :type_scope:x_'='_x not
R22876:22885 compcert.common.Memtype MEM storebytes defax
R22902:22905 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R22896:22901 compcert.common.Memtype <> bytes1 var
R22906:22911 compcert.common.Memtype <> bytes2 var
R22891:22893 compcert.common.Memtype <> ofs var
R22889:22889 compcert.common.Memtype <> b var
R22887:22887 compcert.common.Memtype <> m var
R22916:22919 Coq.Init.Datatypes <> Some constr
R22921:22922 compcert.common.Memtype <> m2 var
R22860:22862 Coq.Init.Logic <> :type_scope:x_'='_x not
R22806:22815 compcert.common.Memtype MEM storebytes defax
R22854:22859 compcert.common.Memtype <> bytes2 var
R22826:22828 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R22823:22825 compcert.common.Memtype <> ofs var
R22829:22836 Coq.ZArith.BinInt <> Z_of_nat syndef
R22838:22843 Coq.Init.Datatypes <> length def
R22845:22850 compcert.common.Memtype <> bytes1 var
R22820:22820 compcert.common.Memtype <> b var
R22817:22818 compcert.common.Memtype <> m1 var
R22863:22866 Coq.Init.Datatypes <> Some constr
R22868:22869 compcert.common.Memtype <> m2 var
R22790:22792 Coq.Init.Logic <> :type_scope:x_'='_x not
R22765:22774 compcert.common.Memtype MEM storebytes defax
R22784:22789 compcert.common.Memtype <> bytes1 var
R22780:22782 compcert.common.Memtype <> ofs var
R22778:22778 compcert.common.Memtype <> b var
R22776:22776 compcert.common.Memtype <> m var
R22793:22796 Coq.Init.Datatypes <> Some constr
R22798:22799 compcert.common.Memtype <> m1 var
ax 22931:22946 MEM storebytes_split
R23039:23045 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23048:23054 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23090:23095 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23080:23082 Coq.Init.Logic <> :type_scope:x_'='_x not
R23055:23064 compcert.common.Memtype MEM storebytes defax
R23074:23079 compcert.common.Memtype <> bytes1 var
R23070:23072 compcert.common.Memtype <> ofs var
R23068:23068 compcert.common.Memtype <> b var
R23066:23066 compcert.common.Memtype <> m var
R23083:23086 Coq.Init.Datatypes <> Some constr
R23088:23089 compcert.common.Memtype <> m1 var
R23150:23152 Coq.Init.Logic <> :type_scope:x_'='_x not
R23096:23105 compcert.common.Memtype MEM storebytes defax
R23144:23149 compcert.common.Memtype <> bytes2 var
R23116:23118 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R23113:23115 compcert.common.Memtype <> ofs var
R23119:23126 Coq.ZArith.BinInt <> Z_of_nat syndef
R23128:23133 Coq.Init.Datatypes <> length def
R23135:23140 compcert.common.Memtype <> bytes1 var
R23110:23110 compcert.common.Memtype <> b var
R23107:23108 compcert.common.Memtype <> m1 var
R23153:23156 Coq.Init.Datatypes <> Some constr
R23158:23159 compcert.common.Memtype <> m2 var
R23023:23025 Coq.Init.Logic <> :type_scope:x_'='_x not
R22986:22995 compcert.common.Memtype MEM storebytes defax
R23012:23015 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R23006:23011 compcert.common.Memtype <> bytes1 var
R23016:23021 compcert.common.Memtype <> bytes2 var
R23001:23003 compcert.common.Memtype <> ofs var
R22999:22999 compcert.common.Memtype <> b var
R22997:22997 compcert.common.Memtype <> m var
R23026:23029 Coq.Init.Datatypes <> Some constr
R23031:23032 compcert.common.Memtype <> m2 var
ax 23306:23317 MEM alloc_result
R23375:23377 Coq.Init.Logic <> :type_scope:x_'='_x not
R23374:23374 compcert.common.Memtype <> b var
R23378:23386 compcert.common.Memtype MEM nextblock defax
R23388:23389 compcert.common.Memtype <> m1 var
R23358:23360 Coq.Init.Logic <> :type_scope:x_'='_x not
R23344:23348 compcert.common.Memtype MEM alloc defax
R23356:23357 compcert.common.Memtype <> hi var
R23353:23354 compcert.common.Memtype <> lo var
R23350:23351 compcert.common.Memtype <> m1 var
R23361:23361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23364:23365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23367:23367 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23362:23363 compcert.common.Memtype <> m2 var
R23366:23366 compcert.common.Memtype <> b var
ax 23444:23458 MEM nextblock_alloc
R23527:23529 Coq.Init.Logic <> :type_scope:x_'='_x not
R23515:23523 compcert.common.Memtype MEM nextblock defax
R23525:23526 compcert.common.Memtype <> m2 var
R23530:23534 Coq.PArith.BinPos <> Psucc syndef
R23537:23545 compcert.common.Memtype MEM nextblock defax
R23547:23548 compcert.common.Memtype <> m1 var
R23499:23501 Coq.Init.Logic <> :type_scope:x_'='_x not
R23485:23489 compcert.common.Memtype MEM alloc defax
R23497:23498 compcert.common.Memtype <> hi var
R23494:23495 compcert.common.Memtype <> lo var
R23491:23492 compcert.common.Memtype <> m1 var
R23502:23502 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23505:23506 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23508:23508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23503:23504 compcert.common.Memtype <> m2 var
R23507:23507 compcert.common.Memtype <> b var
ax 23559:23575 MEM valid_block_alloc
R23664:23674 compcert.common.Memtype MEM valid_block def
R23679:23680 compcert.common.Memtype <> b' var
R23676:23677 compcert.common.Memtype <> m2 var
R23643:23653 compcert.common.Memtype MEM valid_block def
R23658:23659 compcert.common.Memtype <> b' var
R23655:23656 compcert.common.Memtype <> m1 var
R23616:23618 Coq.Init.Logic <> :type_scope:x_'='_x not
R23602:23606 compcert.common.Memtype MEM alloc defax
R23614:23615 compcert.common.Memtype <> hi var
R23611:23612 compcert.common.Memtype <> lo var
R23608:23609 compcert.common.Memtype <> m1 var
R23619:23619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23622:23623 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23625:23625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23620:23621 compcert.common.Memtype <> m2 var
R23624:23624 compcert.common.Memtype <> b var
ax 23689:23705 MEM fresh_block_alloc
R23762:23763 Coq.Init.Logic <> :type_scope:'~'_x not
R23780:23780 Coq.Init.Logic <> :type_scope:'~'_x not
R23764:23774 compcert.common.Memtype MEM valid_block def
R23779:23779 compcert.common.Memtype <> b var
R23776:23777 compcert.common.Memtype <> m1 var
R23746:23748 Coq.Init.Logic <> :type_scope:x_'='_x not
R23732:23736 compcert.common.Memtype MEM alloc defax
R23744:23745 compcert.common.Memtype <> hi var
R23741:23742 compcert.common.Memtype <> lo var
R23738:23739 compcert.common.Memtype <> m1 var
R23749:23749 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23752:23753 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23755:23755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23750:23751 compcert.common.Memtype <> m2 var
R23754:23754 compcert.common.Memtype <> b var
ax 23789:23803 MEM valid_new_block
R23860:23870 compcert.common.Memtype MEM valid_block def
R23875:23875 compcert.common.Memtype <> b var
R23872:23873 compcert.common.Memtype <> m2 var
R23844:23846 Coq.Init.Logic <> :type_scope:x_'='_x not
R23830:23834 compcert.common.Memtype MEM alloc defax
R23842:23843 compcert.common.Memtype <> hi var
R23839:23840 compcert.common.Memtype <> lo var
R23836:23837 compcert.common.Memtype <> m1 var
R23847:23847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23850:23851 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23853:23853 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23848:23849 compcert.common.Memtype <> m2 var
R23852:23852 compcert.common.Memtype <> b var
ax 23884:23904 MEM valid_block_alloc_inv
R23999:24002 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R23995:23997 Coq.Init.Logic <> :type_scope:x_'='_x not
R23993:23994 compcert.common.Memtype <> b' var
R23998:23998 compcert.common.Memtype <> b var
R24003:24013 compcert.common.Memtype MEM valid_block def
R24018:24019 compcert.common.Memtype <> b' var
R24015:24016 compcert.common.Memtype <> m1 var
R23972:23982 compcert.common.Memtype MEM valid_block def
R23987:23988 compcert.common.Memtype <> b' var
R23984:23985 compcert.common.Memtype <> m2 var
R23945:23947 Coq.Init.Logic <> :type_scope:x_'='_x not
R23931:23935 compcert.common.Memtype MEM alloc defax
R23943:23944 compcert.common.Memtype <> hi var
R23940:23941 compcert.common.Memtype <> lo var
R23937:23938 compcert.common.Memtype <> m1 var
R23948:23948 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23951:23952 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23954:23954 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23949:23950 compcert.common.Memtype <> m2 var
R23953:23953 compcert.common.Memtype <> b var
ax 24071:24082 MEM perm_alloc_1
R24180:24183 compcert.common.Memtype MEM perm defax
R24197:24197 compcert.common.Memtype <> p var
R24195:24195 compcert.common.Memtype <> k var
R24191:24193 compcert.common.Memtype <> ofs var
R24188:24189 compcert.common.Memtype <> b' var
R24185:24186 compcert.common.Memtype <> m2 var
R24158:24161 compcert.common.Memtype MEM perm defax
R24175:24175 compcert.common.Memtype <> p var
R24173:24173 compcert.common.Memtype <> k var
R24169:24171 compcert.common.Memtype <> ofs var
R24166:24167 compcert.common.Memtype <> b' var
R24163:24164 compcert.common.Memtype <> m1 var
R24123:24125 Coq.Init.Logic <> :type_scope:x_'='_x not
R24109:24113 compcert.common.Memtype MEM alloc defax
R24121:24122 compcert.common.Memtype <> hi var
R24118:24119 compcert.common.Memtype <> lo var
R24115:24116 compcert.common.Memtype <> m1 var
R24126:24126 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24129:24130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24132:24132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24127:24128 compcert.common.Memtype <> m2 var
R24131:24131 compcert.common.Memtype <> b var
ax 24206:24217 MEM perm_alloc_2
R24306:24309 compcert.common.Memtype MEM perm defax
R24322:24329 compcert.common.Memtype MEM Freeable constr
R24320:24320 compcert.common.Memtype <> k var
R24316:24318 compcert.common.Memtype <> ofs var
R24314:24314 compcert.common.Memtype <> b var
R24311:24312 compcert.common.Memtype <> m2 var
R24290:24293 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24297:24299 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24288:24289 compcert.common.Memtype <> lo var
R24294:24296 compcert.common.Memtype <> ofs var
R24294:24296 compcert.common.Memtype <> ofs var
R24300:24301 compcert.common.Memtype <> hi var
R24258:24260 Coq.Init.Logic <> :type_scope:x_'='_x not
R24244:24248 compcert.common.Memtype MEM alloc defax
R24256:24257 compcert.common.Memtype <> hi var
R24253:24254 compcert.common.Memtype <> lo var
R24250:24251 compcert.common.Memtype <> m1 var
R24261:24261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24264:24265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24267:24267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24262:24263 compcert.common.Memtype <> m2 var
R24266:24266 compcert.common.Memtype <> b var
ax 24338:24349 MEM perm_alloc_3
R24445:24448 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24452:24454 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24443:24444 compcert.common.Memtype <> lo var
R24449:24451 compcert.common.Memtype <> ofs var
R24449:24451 compcert.common.Memtype <> ofs var
R24455:24456 compcert.common.Memtype <> hi var
R24422:24425 compcert.common.Memtype MEM perm defax
R24438:24438 compcert.common.Memtype <> p var
R24436:24436 compcert.common.Memtype <> k var
R24432:24434 compcert.common.Memtype <> ofs var
R24430:24430 compcert.common.Memtype <> b var
R24427:24428 compcert.common.Memtype <> m2 var
R24390:24392 Coq.Init.Logic <> :type_scope:x_'='_x not
R24376:24380 compcert.common.Memtype MEM alloc defax
R24388:24389 compcert.common.Memtype <> hi var
R24385:24386 compcert.common.Memtype <> lo var
R24382:24383 compcert.common.Memtype <> m1 var
R24393:24393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24396:24397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24399:24399 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24394:24395 compcert.common.Memtype <> m2 var
R24398:24398 compcert.common.Memtype <> b var
ax 24465:24476 MEM perm_alloc_4
R24585:24588 compcert.common.Memtype MEM perm defax
R24602:24602 compcert.common.Memtype <> p var
R24600:24600 compcert.common.Memtype <> k var
R24596:24598 compcert.common.Memtype <> ofs var
R24593:24594 compcert.common.Memtype <> b' var
R24590:24591 compcert.common.Memtype <> m1 var
R24576:24579 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R24574:24575 compcert.common.Memtype <> b' var
R24580:24580 compcert.common.Memtype <> b var
R24552:24555 compcert.common.Memtype MEM perm defax
R24569:24569 compcert.common.Memtype <> p var
R24567:24567 compcert.common.Memtype <> k var
R24563:24565 compcert.common.Memtype <> ofs var
R24560:24561 compcert.common.Memtype <> b' var
R24557:24558 compcert.common.Memtype <> m2 var
R24517:24519 Coq.Init.Logic <> :type_scope:x_'='_x not
R24503:24507 compcert.common.Memtype MEM alloc defax
R24515:24516 compcert.common.Memtype <> hi var
R24512:24513 compcert.common.Memtype <> lo var
R24509:24510 compcert.common.Memtype <> m1 var
R24520:24520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24523:24524 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24526:24526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24521:24522 compcert.common.Memtype <> m2 var
R24525:24525 compcert.common.Memtype <> b var
ax 24611:24624 MEM perm_alloc_inv
R24730:24737 compcert.common.Values <> eq_block def
R24742:24742 compcert.common.Memtype <> b var
R24739:24740 compcert.common.Memtype <> b' var
R24769:24772 compcert.common.Memtype MEM perm defax
R24786:24786 compcert.common.Memtype <> p var
R24784:24784 compcert.common.Memtype <> k var
R24780:24782 compcert.common.Memtype <> ofs var
R24777:24778 compcert.common.Memtype <> b' var
R24774:24775 compcert.common.Memtype <> m1 var
R24751:24754 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24758:24760 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R24749:24750 compcert.common.Memtype <> lo var
R24755:24757 compcert.common.Memtype <> ofs var
R24755:24757 compcert.common.Memtype <> ofs var
R24761:24762 compcert.common.Memtype <> hi var
R24703:24706 compcert.common.Memtype MEM perm defax
R24720:24720 compcert.common.Memtype <> p var
R24718:24718 compcert.common.Memtype <> k var
R24714:24716 compcert.common.Memtype <> ofs var
R24711:24712 compcert.common.Memtype <> b' var
R24708:24709 compcert.common.Memtype <> m2 var
R24665:24667 Coq.Init.Logic <> :type_scope:x_'='_x not
R24651:24655 compcert.common.Memtype MEM alloc defax
R24663:24664 compcert.common.Memtype <> hi var
R24660:24661 compcert.common.Memtype <> lo var
R24657:24658 compcert.common.Memtype <> m1 var
R24668:24668 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24671:24672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24674:24674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24669:24670 compcert.common.Memtype <> m2 var
R24673:24673 compcert.common.Memtype <> b var
ax 24842:24865 MEM valid_access_alloc_other
R24983:24994 compcert.common.Memtype MEM valid_access def
R25012:25012 compcert.common.Memtype <> p var
R25008:25010 compcert.common.Memtype <> ofs var
R25005:25006 compcert.common.Memtype <> b' var
R24999:25003 compcert.common.Memtype <> chunk var
R24996:24997 compcert.common.Memtype <> m2 var
R24947:24958 compcert.common.Memtype MEM valid_access def
R24976:24976 compcert.common.Memtype <> p var
R24972:24974 compcert.common.Memtype <> ofs var
R24969:24970 compcert.common.Memtype <> b' var
R24963:24967 compcert.common.Memtype <> chunk var
R24960:24961 compcert.common.Memtype <> m1 var
R24906:24908 Coq.Init.Logic <> :type_scope:x_'='_x not
R24892:24896 compcert.common.Memtype MEM alloc defax
R24904:24905 compcert.common.Memtype <> hi var
R24901:24902 compcert.common.Memtype <> lo var
R24898:24899 compcert.common.Memtype <> m1 var
R24909:24909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24912:24913 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24915:24915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24910:24911 compcert.common.Memtype <> m2 var
R24914:24914 compcert.common.Memtype <> b var
ax 25021:25043 MEM valid_access_alloc_same
R25196:25207 compcert.common.Memtype MEM valid_access def
R25224:25231 compcert.common.Memtype MEM Freeable constr
R25220:25222 compcert.common.Memtype <> ofs var
R25218:25218 compcert.common.Memtype <> b var
R25212:25216 compcert.common.Memtype <> chunk var
R25209:25210 compcert.common.Memtype <> m2 var
R25165:25165 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25183:25185 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25189:25189 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25166:25176 compcert.common.Memdata <> align_chunk def
R25178:25182 compcert.common.Memtype <> chunk var
R25186:25188 compcert.common.Memtype <> ofs var
R25155:25158 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25136:25138 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25133:25135 compcert.common.Memtype <> ofs var
R25139:25148 compcert.common.Memdata <> size_chunk def
R25150:25154 compcert.common.Memtype <> chunk var
R25159:25160 compcert.common.Memtype <> hi var
R25122:25125 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25120:25121 compcert.common.Memtype <> lo var
R25126:25128 compcert.common.Memtype <> ofs var
R25084:25086 Coq.Init.Logic <> :type_scope:x_'='_x not
R25070:25074 compcert.common.Memtype MEM alloc defax
R25082:25083 compcert.common.Memtype <> hi var
R25079:25080 compcert.common.Memtype <> lo var
R25076:25077 compcert.common.Memtype <> m1 var
R25087:25087 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25090:25091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25093:25093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25088:25089 compcert.common.Memtype <> m2 var
R25092:25092 compcert.common.Memtype <> b var
ax 25240:25261 MEM valid_access_alloc_inv
R25382:25389 compcert.common.Values <> eq_block def
R25394:25394 compcert.common.Memtype <> b var
R25391:25392 compcert.common.Memtype <> b' var
R25481:25492 compcert.common.Memtype MEM valid_access def
R25510:25510 compcert.common.Memtype <> p var
R25506:25508 compcert.common.Memtype <> ofs var
R25503:25504 compcert.common.Memtype <> b' var
R25497:25501 compcert.common.Memtype <> chunk var
R25494:25495 compcert.common.Memtype <> m1 var
R25412:25415 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25405:25408 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25403:25404 compcert.common.Memtype <> lo var
R25409:25411 compcert.common.Memtype <> ofs var
R25444:25447 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25438:25441 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R25419:25421 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R25416:25418 compcert.common.Memtype <> ofs var
R25422:25431 compcert.common.Memdata <> size_chunk def
R25433:25437 compcert.common.Memtype <> chunk var
R25442:25443 compcert.common.Memtype <> hi var
R25448:25448 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25466:25468 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25472:25472 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R25449:25459 compcert.common.Memdata <> align_chunk def
R25461:25465 compcert.common.Memtype <> chunk var
R25469:25471 compcert.common.Memtype <> ofs var
R25343:25354 compcert.common.Memtype MEM valid_access def
R25372:25372 compcert.common.Memtype <> p var
R25368:25370 compcert.common.Memtype <> ofs var
R25365:25366 compcert.common.Memtype <> b' var
R25359:25363 compcert.common.Memtype <> chunk var
R25356:25357 compcert.common.Memtype <> m2 var
R25302:25304 Coq.Init.Logic <> :type_scope:x_'='_x not
R25288:25292 compcert.common.Memtype MEM alloc defax
R25300:25301 compcert.common.Memtype <> hi var
R25297:25298 compcert.common.Memtype <> lo var
R25294:25295 compcert.common.Memtype <> m1 var
R25305:25305 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25308:25309 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25311:25311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25306:25307 compcert.common.Memtype <> m2 var
R25310:25310 compcert.common.Memtype <> b var
ax 25551:25570 MEM load_alloc_unchanged
R25693:25695 Coq.Init.Logic <> :type_scope:x_'='_x not
R25673:25676 compcert.common.Memtype MEM load defax
R25690:25692 compcert.common.Memtype <> ofs var
R25687:25688 compcert.common.Memtype <> b' var
R25684:25685 compcert.common.Memtype <> m2 var
R25678:25682 compcert.common.Memtype <> chunk var
R25696:25699 compcert.common.Memtype MEM load defax
R25713:25715 compcert.common.Memtype <> ofs var
R25710:25711 compcert.common.Memtype <> b' var
R25707:25708 compcert.common.Memtype <> m1 var
R25701:25705 compcert.common.Memtype <> chunk var
R25650:25660 compcert.common.Memtype MEM valid_block def
R25665:25666 compcert.common.Memtype <> b' var
R25662:25663 compcert.common.Memtype <> m1 var
R25611:25613 Coq.Init.Logic <> :type_scope:x_'='_x not
R25597:25601 compcert.common.Memtype MEM alloc defax
R25609:25610 compcert.common.Memtype <> hi var
R25606:25607 compcert.common.Memtype <> lo var
R25603:25604 compcert.common.Memtype <> m1 var
R25614:25614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25617:25618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25620:25620 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25615:25616 compcert.common.Memtype <> m2 var
R25619:25619 compcert.common.Memtype <> b var
ax 25724:25739 MEM load_alloc_other
R25876:25878 Coq.Init.Logic <> :type_scope:x_'='_x not
R25856:25859 compcert.common.Memtype MEM load defax
R25873:25875 compcert.common.Memtype <> ofs var
R25870:25871 compcert.common.Memtype <> b' var
R25867:25868 compcert.common.Memtype <> m2 var
R25861:25865 compcert.common.Memtype <> chunk var
R25879:25882 Coq.Init.Datatypes <> Some constr
R25884:25884 compcert.common.Memtype <> v var
R25841:25843 Coq.Init.Logic <> :type_scope:x_'='_x not
R25821:25824 compcert.common.Memtype MEM load defax
R25838:25840 compcert.common.Memtype <> ofs var
R25835:25836 compcert.common.Memtype <> b' var
R25832:25833 compcert.common.Memtype <> m1 var
R25826:25830 compcert.common.Memtype <> chunk var
R25844:25847 Coq.Init.Datatypes <> Some constr
R25849:25849 compcert.common.Memtype <> v var
R25780:25782 Coq.Init.Logic <> :type_scope:x_'='_x not
R25766:25770 compcert.common.Memtype MEM alloc defax
R25778:25779 compcert.common.Memtype <> hi var
R25775:25776 compcert.common.Memtype <> lo var
R25772:25773 compcert.common.Memtype <> m1 var
R25783:25783 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25786:25787 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25789:25789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25784:25785 compcert.common.Memtype <> m2 var
R25788:25788 compcert.common.Memtype <> b var
ax 25893:25907 MEM load_alloc_same
R26021:26023 Coq.Init.Logic <> :type_scope:x_'='_x not
R26020:26020 compcert.common.Memtype <> v var
R26024:26029 compcert.common.Values <> Vundef constr
R26005:26007 Coq.Init.Logic <> :type_scope:x_'='_x not
R25986:25989 compcert.common.Memtype MEM load defax
R26002:26004 compcert.common.Memtype <> ofs var
R26000:26000 compcert.common.Memtype <> b var
R25997:25998 compcert.common.Memtype <> m2 var
R25991:25995 compcert.common.Memtype <> chunk var
R26008:26011 Coq.Init.Datatypes <> Some constr
R26013:26013 compcert.common.Memtype <> v var
R25948:25950 Coq.Init.Logic <> :type_scope:x_'='_x not
R25934:25938 compcert.common.Memtype MEM alloc defax
R25946:25947 compcert.common.Memtype <> hi var
R25943:25944 compcert.common.Memtype <> lo var
R25940:25941 compcert.common.Memtype <> m1 var
R25951:25951 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25954:25955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25957:25957 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25952:25953 compcert.common.Memtype <> m2 var
R25956:25956 compcert.common.Memtype <> b var
ax 26038:26053 MEM load_alloc_same'
R26225:26227 Coq.Init.Logic <> :type_scope:x_'='_x not
R26206:26209 compcert.common.Memtype MEM load defax
R26222:26224 compcert.common.Memtype <> ofs var
R26220:26220 compcert.common.Memtype <> b var
R26217:26218 compcert.common.Memtype <> m2 var
R26211:26215 compcert.common.Memtype <> chunk var
R26228:26231 Coq.Init.Datatypes <> Some constr
R26233:26238 compcert.common.Values <> Vundef constr
R26175:26175 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R26193:26195 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R26199:26199 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R26176:26186 compcert.common.Memdata <> align_chunk def
R26188:26192 compcert.common.Memtype <> chunk var
R26196:26198 compcert.common.Memtype <> ofs var
R26165:26168 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R26146:26148 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R26143:26145 compcert.common.Memtype <> ofs var
R26149:26158 compcert.common.Memdata <> size_chunk def
R26160:26164 compcert.common.Memtype <> chunk var
R26169:26170 compcert.common.Memtype <> hi var
R26132:26135 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R26130:26131 compcert.common.Memtype <> lo var
R26136:26138 compcert.common.Memtype <> ofs var
R26094:26096 Coq.Init.Logic <> :type_scope:x_'='_x not
R26080:26084 compcert.common.Memtype MEM alloc defax
R26092:26093 compcert.common.Memtype <> hi var
R26089:26090 compcert.common.Memtype <> lo var
R26086:26087 compcert.common.Memtype <> m1 var
R26097:26097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26100:26101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26103:26103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26098:26099 compcert.common.Memtype <> m2 var
R26102:26102 compcert.common.Memtype <> b var
ax 26391:26405 MEM range_perm_free
R26471:26472 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26475:26476 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26480:26482 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26508:26509 Coq.Init.Specif <> :type_scope:'{'_x_':'_x_'|'_x_'}' not
R26498:26500 Coq.Init.Logic <> :type_scope:x_'='_x not
R26483:26486 compcert.common.Memtype MEM free defax
R26496:26497 compcert.common.Memtype <> hi var
R26493:26494 compcert.common.Memtype <> lo var
R26491:26491 compcert.common.Memtype <> b var
R26488:26489 compcert.common.Memtype <> m1 var
R26501:26504 Coq.Init.Datatypes <> Some constr
R26477:26479 compcert.common.Memtype MEM mem defax
R26431:26440 compcert.common.Memtype MEM range_perm def
R26457:26464 compcert.common.Memtype MEM Freeable constr
R26453:26455 compcert.common.Memtype MEM Cur constr
R26450:26451 compcert.common.Memtype <> hi var
R26447:26448 compcert.common.Memtype <> lo var
R26445:26445 compcert.common.Memtype <> b var
R26442:26443 compcert.common.Memtype <> m1 var
ax 26518:26532 MEM free_range_perm
R26592:26601 compcert.common.Memtype MEM range_perm def
R26619:26626 compcert.common.Memtype MEM Freeable constr
R26615:26617 compcert.common.Memtype MEM Cur constr
R26612:26613 compcert.common.Memtype <> hi var
R26609:26610 compcert.common.Memtype <> lo var
R26606:26607 compcert.common.Memtype <> bf var
R26603:26604 compcert.common.Memtype <> m1 var
R26576:26578 Coq.Init.Logic <> :type_scope:x_'='_x not
R26560:26563 compcert.common.Memtype MEM free defax
R26574:26575 compcert.common.Memtype <> hi var
R26571:26572 compcert.common.Memtype <> lo var
R26568:26569 compcert.common.Memtype <> bf var
R26565:26566 compcert.common.Memtype <> m1 var
R26579:26582 Coq.Init.Datatypes <> Some constr
R26584:26585 compcert.common.Memtype <> m2 var
ax 26683:26696 MEM nextblock_free
R26768:26770 Coq.Init.Logic <> :type_scope:x_'='_x not
R26756:26764 compcert.common.Memtype MEM nextblock defax
R26766:26767 compcert.common.Memtype <> m2 var
R26771:26779 compcert.common.Memtype MEM nextblock defax
R26781:26782 compcert.common.Memtype <> m1 var
R26740:26742 Coq.Init.Logic <> :type_scope:x_'='_x not
R26724:26727 compcert.common.Memtype MEM free defax
R26738:26739 compcert.common.Memtype <> hi var
R26735:26736 compcert.common.Memtype <> lo var
R26732:26733 compcert.common.Memtype <> bf var
R26729:26730 compcert.common.Memtype <> m1 var
R26743:26746 Coq.Init.Datatypes <> Some constr
R26748:26749 compcert.common.Memtype <> m2 var
ax 26791:26808 MEM valid_block_free_1
R26898:26908 compcert.common.Memtype MEM valid_block def
R26913:26913 compcert.common.Memtype <> b var
R26910:26911 compcert.common.Memtype <> m2 var
R26878:26888 compcert.common.Memtype MEM valid_block def
R26893:26893 compcert.common.Memtype <> b var
R26890:26891 compcert.common.Memtype <> m1 var
R26852:26854 Coq.Init.Logic <> :type_scope:x_'='_x not
R26836:26839 compcert.common.Memtype MEM free defax
R26850:26851 compcert.common.Memtype <> hi var
R26847:26848 compcert.common.Memtype <> lo var
R26844:26845 compcert.common.Memtype <> bf var
R26841:26842 compcert.common.Memtype <> m1 var
R26855:26858 Coq.Init.Datatypes <> Some constr
R26860:26861 compcert.common.Memtype <> m2 var
ax 26922:26939 MEM valid_block_free_2
R27029:27039 compcert.common.Memtype MEM valid_block def
R27044:27044 compcert.common.Memtype <> b var
R27041:27042 compcert.common.Memtype <> m1 var
R27009:27019 compcert.common.Memtype MEM valid_block def
R27024:27024 compcert.common.Memtype <> b var
R27021:27022 compcert.common.Memtype <> m2 var
R26983:26985 Coq.Init.Logic <> :type_scope:x_'='_x not
R26967:26970 compcert.common.Memtype MEM free defax
R26981:26982 compcert.common.Memtype <> hi var
R26978:26979 compcert.common.Memtype <> lo var
R26975:26976 compcert.common.Memtype <> bf var
R26972:26973 compcert.common.Memtype <> m1 var
R26986:26989 Coq.Init.Datatypes <> Some constr
R26991:26992 compcert.common.Memtype <> m2 var
ax 27095:27105 MEM perm_free_1
R27246:27249 compcert.common.Memtype MEM perm defax
R27262:27262 compcert.common.Memtype <> p var
R27260:27260 compcert.common.Memtype <> k var
R27256:27258 compcert.common.Memtype <> ofs var
R27254:27254 compcert.common.Memtype <> b var
R27251:27252 compcert.common.Memtype <> m2 var
R27223:27226 compcert.common.Memtype MEM perm defax
R27239:27239 compcert.common.Memtype <> p var
R27237:27237 compcert.common.Memtype <> k var
R27233:27235 compcert.common.Memtype <> ofs var
R27231:27231 compcert.common.Memtype <> b var
R27228:27229 compcert.common.Memtype <> m1 var
R27192:27195 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27186:27189 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R27185:27185 compcert.common.Memtype <> b var
R27190:27191 compcert.common.Memtype <> bf var
R27204:27207 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27199:27201 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R27196:27198 compcert.common.Memtype <> ofs var
R27202:27203 compcert.common.Memtype <> lo var
R27210:27213 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27208:27209 compcert.common.Memtype <> hi var
R27214:27216 compcert.common.Memtype <> ofs var
R27149:27151 Coq.Init.Logic <> :type_scope:x_'='_x not
R27133:27136 compcert.common.Memtype MEM free defax
R27147:27148 compcert.common.Memtype <> hi var
R27144:27145 compcert.common.Memtype <> lo var
R27141:27142 compcert.common.Memtype <> bf var
R27138:27139 compcert.common.Memtype <> m1 var
R27152:27155 Coq.Init.Datatypes <> Some constr
R27157:27158 compcert.common.Memtype <> m2 var
ax 27271:27281 MEM perm_free_2
R27375:27376 Coq.Init.Logic <> :type_scope:'~'_x not
R27377:27380 compcert.common.Memtype MEM perm defax
R27394:27394 compcert.common.Memtype <> p var
R27392:27392 compcert.common.Memtype <> k var
R27388:27390 compcert.common.Memtype <> ofs var
R27385:27386 compcert.common.Memtype <> bf var
R27382:27383 compcert.common.Memtype <> m2 var
R27359:27362 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R27366:27368 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R27357:27358 compcert.common.Memtype <> lo var
R27363:27365 compcert.common.Memtype <> ofs var
R27363:27365 compcert.common.Memtype <> ofs var
R27369:27370 compcert.common.Memtype <> hi var
R27325:27327 Coq.Init.Logic <> :type_scope:x_'='_x not
R27309:27312 compcert.common.Memtype MEM free defax
R27323:27324 compcert.common.Memtype <> hi var
R27320:27321 compcert.common.Memtype <> lo var
R27317:27318 compcert.common.Memtype <> bf var
R27314:27315 compcert.common.Memtype <> m1 var
R27328:27331 Coq.Init.Datatypes <> Some constr
R27333:27334 compcert.common.Memtype <> m2 var
ax 27403:27413 MEM perm_free_3
R27514:27517 compcert.common.Memtype MEM perm defax
R27530:27530 compcert.common.Memtype <> p var
R27528:27528 compcert.common.Memtype <> k var
R27524:27526 compcert.common.Memtype <> ofs var
R27522:27522 compcert.common.Memtype <> b var
R27519:27520 compcert.common.Memtype <> m1 var
R27493:27496 compcert.common.Memtype MEM perm defax
R27509:27509 compcert.common.Memtype <> p var
R27507:27507 compcert.common.Memtype <> k var
R27503:27505 compcert.common.Memtype <> ofs var
R27501:27501 compcert.common.Memtype <> b var
R27498:27499 compcert.common.Memtype <> m2 var
R27457:27459 Coq.Init.Logic <> :type_scope:x_'='_x not
R27441:27444 compcert.common.Memtype MEM free defax
R27455:27456 compcert.common.Memtype <> hi var
R27452:27453 compcert.common.Memtype <> lo var
R27449:27450 compcert.common.Memtype <> bf var
R27446:27447 compcert.common.Memtype <> m1 var
R27460:27463 Coq.Init.Datatypes <> Some constr
R27465:27466 compcert.common.Memtype <> m2 var
ax 27585:27603 MEM valid_access_free_1
R27793:27804 compcert.common.Memtype MEM valid_access def
R27821:27821 compcert.common.Memtype <> p var
R27817:27819 compcert.common.Memtype <> ofs var
R27815:27815 compcert.common.Memtype <> b var
R27809:27813 compcert.common.Memtype <> chunk var
R27806:27807 compcert.common.Memtype <> m2 var
R27730:27733 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27724:27727 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R27723:27723 compcert.common.Memtype <> b var
R27728:27729 compcert.common.Memtype <> bf var
R27742:27745 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27736:27739 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R27734:27735 compcert.common.Memtype <> lo var
R27740:27741 compcert.common.Memtype <> hi var
R27774:27777 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27768:27771 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27749:27751 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27746:27748 compcert.common.Memtype <> ofs var
R27752:27761 compcert.common.Memdata <> size_chunk def
R27763:27767 compcert.common.Memtype <> chunk var
R27772:27773 compcert.common.Memtype <> lo var
R27780:27783 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R27778:27779 compcert.common.Memtype <> hi var
R27784:27786 compcert.common.Memtype <> ofs var
R27687:27698 compcert.common.Memtype MEM valid_access def
R27715:27715 compcert.common.Memtype <> p var
R27711:27713 compcert.common.Memtype <> ofs var
R27709:27709 compcert.common.Memtype <> b var
R27703:27707 compcert.common.Memtype <> chunk var
R27700:27701 compcert.common.Memtype <> m1 var
R27647:27649 Coq.Init.Logic <> :type_scope:x_'='_x not
R27631:27634 compcert.common.Memtype MEM free defax
R27645:27646 compcert.common.Memtype <> hi var
R27642:27643 compcert.common.Memtype <> lo var
R27639:27640 compcert.common.Memtype <> bf var
R27636:27637 compcert.common.Memtype <> m1 var
R27650:27653 Coq.Init.Datatypes <> Some constr
R27655:27656 compcert.common.Memtype <> m2 var
ax 27830:27848 MEM valid_access_free_2
R27986:27987 Coq.Init.Logic <> :type_scope:'~'_x not
R28018:28018 Coq.Init.Logic <> :type_scope:'~'_x not
R27988:27999 compcert.common.Memtype MEM valid_access def
R28017:28017 compcert.common.Memtype <> p var
R28013:28015 compcert.common.Memtype <> ofs var
R28010:28011 compcert.common.Memtype <> bf var
R28004:28008 compcert.common.Memtype <> chunk var
R28001:28002 compcert.common.Memtype <> m2 var
R27975:27977 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R27972:27974 compcert.common.Memtype <> ofs var
R27978:27979 compcert.common.Memtype <> hi var
R27963:27965 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R27944:27946 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R27941:27943 compcert.common.Memtype <> ofs var
R27947:27956 compcert.common.Memdata <> size_chunk def
R27958:27962 compcert.common.Memtype <> chunk var
R27966:27967 compcert.common.Memtype <> lo var
R27932:27934 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R27930:27931 compcert.common.Memtype <> lo var
R27935:27936 compcert.common.Memtype <> hi var
R27892:27894 Coq.Init.Logic <> :type_scope:x_'='_x not
R27876:27879 compcert.common.Memtype MEM free defax
R27890:27891 compcert.common.Memtype <> hi var
R27887:27888 compcert.common.Memtype <> lo var
R27884:27885 compcert.common.Memtype <> bf var
R27881:27882 compcert.common.Memtype <> m1 var
R27895:27898 Coq.Init.Datatypes <> Some constr
R27900:27901 compcert.common.Memtype <> m2 var
ax 28027:28049 MEM valid_access_free_inv_1
R28168:28179 compcert.common.Memtype MEM valid_access def
R28196:28196 compcert.common.Memtype <> p var
R28192:28194 compcert.common.Memtype <> ofs var
R28190:28190 compcert.common.Memtype <> b var
R28184:28188 compcert.common.Memtype <> chunk var
R28181:28182 compcert.common.Memtype <> m1 var
R28133:28144 compcert.common.Memtype MEM valid_access def
R28161:28161 compcert.common.Memtype <> p var
R28157:28159 compcert.common.Memtype <> ofs var
R28155:28155 compcert.common.Memtype <> b var
R28149:28153 compcert.common.Memtype <> chunk var
R28146:28147 compcert.common.Memtype <> m2 var
R28093:28095 Coq.Init.Logic <> :type_scope:x_'='_x not
R28077:28080 compcert.common.Memtype MEM free defax
R28091:28092 compcert.common.Memtype <> hi var
R28088:28089 compcert.common.Memtype <> lo var
R28085:28086 compcert.common.Memtype <> bf var
R28082:28083 compcert.common.Memtype <> m1 var
R28096:28099 Coq.Init.Datatypes <> Some constr
R28101:28102 compcert.common.Memtype <> m2 var
ax 28205:28227 MEM valid_access_free_inv_2
R28353:28356 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28347:28350 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R28345:28346 compcert.common.Memtype <> lo var
R28351:28352 compcert.common.Memtype <> hi var
R28385:28388 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28379:28382 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28360:28362 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28357:28359 compcert.common.Memtype <> ofs var
R28363:28372 compcert.common.Memdata <> size_chunk def
R28374:28378 compcert.common.Memtype <> chunk var
R28383:28384 compcert.common.Memtype <> lo var
R28391:28394 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28389:28390 compcert.common.Memtype <> hi var
R28395:28397 compcert.common.Memtype <> ofs var
R28309:28320 compcert.common.Memtype MEM valid_access def
R28338:28338 compcert.common.Memtype <> p var
R28334:28336 compcert.common.Memtype <> ofs var
R28331:28332 compcert.common.Memtype <> bf var
R28325:28329 compcert.common.Memtype <> chunk var
R28322:28323 compcert.common.Memtype <> m2 var
R28271:28273 Coq.Init.Logic <> :type_scope:x_'='_x not
R28255:28258 compcert.common.Memtype MEM free defax
R28269:28270 compcert.common.Memtype <> hi var
R28266:28267 compcert.common.Memtype <> lo var
R28263:28264 compcert.common.Memtype <> bf var
R28260:28261 compcert.common.Memtype <> m1 var
R28274:28277 Coq.Init.Datatypes <> Some constr
R28279:28280 compcert.common.Memtype <> m2 var
ax 28436:28444 MEM load_free
R28615:28617 Coq.Init.Logic <> :type_scope:x_'='_x not
R28596:28599 compcert.common.Memtype MEM load defax
R28612:28614 compcert.common.Memtype <> ofs var
R28610:28610 compcert.common.Memtype <> b var
R28607:28608 compcert.common.Memtype <> m2 var
R28601:28605 compcert.common.Memtype <> chunk var
R28618:28621 compcert.common.Memtype MEM load defax
R28634:28636 compcert.common.Memtype <> ofs var
R28632:28632 compcert.common.Memtype <> b var
R28629:28630 compcert.common.Memtype <> m1 var
R28623:28627 compcert.common.Memtype <> chunk var
R28533:28536 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28527:28530 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R28526:28526 compcert.common.Memtype <> b var
R28531:28532 compcert.common.Memtype <> bf var
R28545:28548 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28539:28542 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R28537:28538 compcert.common.Memtype <> lo var
R28543:28544 compcert.common.Memtype <> hi var
R28577:28580 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28571:28574 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28552:28554 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R28549:28551 compcert.common.Memtype <> ofs var
R28555:28564 compcert.common.Memdata <> size_chunk def
R28566:28570 compcert.common.Memtype <> chunk var
R28575:28576 compcert.common.Memtype <> lo var
R28583:28586 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R28581:28582 compcert.common.Memtype <> hi var
R28587:28589 compcert.common.Memtype <> ofs var
R28488:28490 Coq.Init.Logic <> :type_scope:x_'='_x not
R28472:28475 compcert.common.Memtype MEM free defax
R28486:28487 compcert.common.Memtype <> hi var
R28483:28484 compcert.common.Memtype <> lo var
R28480:28481 compcert.common.Memtype <> bf var
R28477:28478 compcert.common.Memtype <> m1 var
R28491:28494 Coq.Init.Datatypes <> Some constr
R28496:28497 compcert.common.Memtype <> m2 var
ax 28684:28697 MEM nextblock_drop
R28774:28776 Coq.Init.Logic <> :type_scope:x_'='_x not
R28762:28770 compcert.common.Memtype MEM nextblock defax
R28772:28773 compcert.common.Memtype <> m' var
R28777:28785 compcert.common.Memtype MEM nextblock defax
R28787:28787 compcert.common.Memtype <> m var
R28746:28748 Coq.Init.Logic <> :type_scope:x_'='_x not
R28725:28733 compcert.common.Memtype MEM drop_perm defax
R28745:28745 compcert.common.Memtype <> p var
R28742:28743 compcert.common.Memtype <> hi var
R28739:28740 compcert.common.Memtype <> lo var
R28737:28737 compcert.common.Memtype <> b var
R28735:28735 compcert.common.Memtype <> m var
R28749:28752 Coq.Init.Datatypes <> Some constr
R28754:28755 compcert.common.Memtype <> m' var
ax 28796:28818 MEM drop_perm_valid_block_1
R28914:28924 compcert.common.Memtype MEM valid_block def
R28929:28930 compcert.common.Memtype <> b' var
R28926:28927 compcert.common.Memtype <> m' var
R28894:28904 compcert.common.Memtype MEM valid_block def
R28908:28909 compcert.common.Memtype <> b' var
R28906:28906 compcert.common.Memtype <> m var
R28867:28869 Coq.Init.Logic <> :type_scope:x_'='_x not
R28846:28854 compcert.common.Memtype MEM drop_perm defax
R28866:28866 compcert.common.Memtype <> p var
R28863:28864 compcert.common.Memtype <> hi var
R28860:28861 compcert.common.Memtype <> lo var
R28858:28858 compcert.common.Memtype <> b var
R28856:28856 compcert.common.Memtype <> m var
R28870:28873 Coq.Init.Datatypes <> Some constr
R28875:28876 compcert.common.Memtype <> m' var
ax 28939:28961 MEM drop_perm_valid_block_2
R29058:29068 compcert.common.Memtype MEM valid_block def
R29072:29073 compcert.common.Memtype <> b' var
R29070:29070 compcert.common.Memtype <> m var
R29037:29047 compcert.common.Memtype MEM valid_block def
R29052:29053 compcert.common.Memtype <> b' var
R29049:29050 compcert.common.Memtype <> m' var
R29010:29012 Coq.Init.Logic <> :type_scope:x_'='_x not
R28989:28997 compcert.common.Memtype MEM drop_perm defax
R29009:29009 compcert.common.Memtype <> p var
R29006:29007 compcert.common.Memtype <> hi var
R29003:29004 compcert.common.Memtype <> lo var
R29001:29001 compcert.common.Memtype <> b var
R28999:28999 compcert.common.Memtype <> m var
R29013:29016 Coq.Init.Datatypes <> Some constr
R29018:29019 compcert.common.Memtype <> m' var
ax 29083:29099 MEM range_perm_drop_1
R29164:29173 compcert.common.Memtype MEM range_perm def
R29189:29196 compcert.common.Memtype MEM Freeable constr
R29185:29187 compcert.common.Memtype MEM Cur constr
R29182:29183 compcert.common.Memtype <> hi var
R29179:29180 compcert.common.Memtype <> lo var
R29177:29177 compcert.common.Memtype <> b var
R29175:29175 compcert.common.Memtype <> m var
R29148:29150 Coq.Init.Logic <> :type_scope:x_'='_x not
R29127:29135 compcert.common.Memtype MEM drop_perm defax
R29147:29147 compcert.common.Memtype <> p var
R29144:29145 compcert.common.Memtype <> hi var
R29141:29142 compcert.common.Memtype <> lo var
R29139:29139 compcert.common.Memtype <> b var
R29137:29137 compcert.common.Memtype <> m var
R29151:29154 Coq.Init.Datatypes <> Some constr
R29156:29157 compcert.common.Memtype <> m' var
ax 29205:29221 MEM range_perm_drop_2
R29285:29286 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R29289:29291 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R29323:29324 Coq.Init.Specif <> :type_scope:'{'_x_'|'_x_'}' not
R29313:29315 Coq.Init.Logic <> :type_scope:x_'='_x not
R29292:29300 compcert.common.Memtype MEM drop_perm defax
R29312:29312 compcert.common.Memtype <> p var
R29309:29310 compcert.common.Memtype <> hi var
R29306:29307 compcert.common.Memtype <> lo var
R29304:29304 compcert.common.Memtype <> b var
R29302:29302 compcert.common.Memtype <> m var
R29316:29319 Coq.Init.Datatypes <> Some constr
R29248:29257 compcert.common.Memtype MEM range_perm def
R29273:29280 compcert.common.Memtype MEM Freeable constr
R29269:29271 compcert.common.Memtype MEM Cur constr
R29266:29267 compcert.common.Memtype <> hi var
R29263:29264 compcert.common.Memtype <> lo var
R29261:29261 compcert.common.Memtype <> b var
R29259:29259 compcert.common.Memtype <> m var
ax 29334:29344 MEM perm_drop_1
R29441:29444 compcert.common.Memtype MEM perm defax
R29457:29457 compcert.common.Memtype <> p var
R29455:29455 compcert.common.Memtype <> k var
R29451:29453 compcert.common.Memtype <> ofs var
R29449:29449 compcert.common.Memtype <> b var
R29446:29447 compcert.common.Memtype <> m' var
R29425:29428 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29432:29434 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29423:29424 compcert.common.Memtype <> lo var
R29429:29431 compcert.common.Memtype <> ofs var
R29429:29431 compcert.common.Memtype <> ofs var
R29435:29436 compcert.common.Memtype <> hi var
R29393:29395 Coq.Init.Logic <> :type_scope:x_'='_x not
R29372:29380 compcert.common.Memtype MEM drop_perm defax
R29392:29392 compcert.common.Memtype <> p var
R29389:29390 compcert.common.Memtype <> hi var
R29386:29387 compcert.common.Memtype <> lo var
R29384:29384 compcert.common.Memtype <> b var
R29382:29382 compcert.common.Memtype <> m var
R29396:29399 Coq.Init.Datatypes <> Some constr
R29401:29402 compcert.common.Memtype <> m' var
ax 29466:29476 MEM perm_drop_2
R29598:29607 compcert.common.Memtype MEM perm_order ind
R29611:29612 compcert.common.Memtype <> p' var
R29609:29609 compcert.common.Memtype <> p var
R29576:29579 compcert.common.Memtype MEM perm defax
R29592:29593 compcert.common.Memtype <> p' var
R29590:29590 compcert.common.Memtype <> k var
R29586:29588 compcert.common.Memtype <> ofs var
R29584:29584 compcert.common.Memtype <> b var
R29581:29582 compcert.common.Memtype <> m' var
R29560:29563 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29567:29569 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R29558:29559 compcert.common.Memtype <> lo var
R29564:29566 compcert.common.Memtype <> ofs var
R29564:29566 compcert.common.Memtype <> ofs var
R29570:29571 compcert.common.Memtype <> hi var
R29525:29527 Coq.Init.Logic <> :type_scope:x_'='_x not
R29504:29512 compcert.common.Memtype MEM drop_perm defax
R29524:29524 compcert.common.Memtype <> p var
R29521:29522 compcert.common.Memtype <> hi var
R29518:29519 compcert.common.Memtype <> lo var
R29516:29516 compcert.common.Memtype <> b var
R29514:29514 compcert.common.Memtype <> m var
R29528:29531 Coq.Init.Datatypes <> Some constr
R29533:29534 compcert.common.Memtype <> m' var
ax 29621:29631 MEM perm_drop_3
R29774:29777 compcert.common.Memtype MEM perm defax
R29791:29792 compcert.common.Memtype <> p' var
R29789:29789 compcert.common.Memtype <> k var
R29785:29787 compcert.common.Memtype <> ofs var
R29782:29783 compcert.common.Memtype <> b' var
R29779:29780 compcert.common.Memtype <> m' var
R29752:29755 compcert.common.Memtype MEM perm defax
R29768:29769 compcert.common.Memtype <> p' var
R29766:29766 compcert.common.Memtype <> k var
R29762:29764 compcert.common.Memtype <> ofs var
R29759:29760 compcert.common.Memtype <> b' var
R29757:29757 compcert.common.Memtype <> m var
R29723:29726 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29718:29721 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R29716:29717 compcert.common.Memtype <> b' var
R29722:29722 compcert.common.Memtype <> b var
R29735:29738 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29730:29732 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R29727:29729 compcert.common.Memtype <> ofs var
R29733:29734 compcert.common.Memtype <> lo var
R29741:29744 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R29739:29740 compcert.common.Memtype <> hi var
R29745:29747 compcert.common.Memtype <> ofs var
R29680:29682 Coq.Init.Logic <> :type_scope:x_'='_x not
R29659:29667 compcert.common.Memtype MEM drop_perm defax
R29679:29679 compcert.common.Memtype <> p var
R29676:29677 compcert.common.Memtype <> hi var
R29673:29674 compcert.common.Memtype <> lo var
R29671:29671 compcert.common.Memtype <> b var
R29669:29669 compcert.common.Memtype <> m var
R29683:29686 Coq.Init.Datatypes <> Some constr
R29688:29689 compcert.common.Memtype <> m' var
ax 29801:29811 MEM perm_drop_4
R29919:29922 compcert.common.Memtype MEM perm defax
R29935:29936 compcert.common.Memtype <> p' var
R29933:29933 compcert.common.Memtype <> k var
R29929:29931 compcert.common.Memtype <> ofs var
R29926:29927 compcert.common.Memtype <> b' var
R29924:29924 compcert.common.Memtype <> m var
R29896:29899 compcert.common.Memtype MEM perm defax
R29913:29914 compcert.common.Memtype <> p' var
R29911:29911 compcert.common.Memtype <> k var
R29907:29909 compcert.common.Memtype <> ofs var
R29904:29905 compcert.common.Memtype <> b' var
R29901:29902 compcert.common.Memtype <> m' var
R29860:29862 Coq.Init.Logic <> :type_scope:x_'='_x not
R29839:29847 compcert.common.Memtype MEM drop_perm defax
R29859:29859 compcert.common.Memtype <> p var
R29856:29857 compcert.common.Memtype <> hi var
R29853:29854 compcert.common.Memtype <> lo var
R29851:29851 compcert.common.Memtype <> b var
R29849:29849 compcert.common.Memtype <> m var
R29863:29866 Coq.Init.Datatypes <> Some constr
R29868:29869 compcert.common.Memtype <> m' var
ax 29946:29954 MEM load_drop
R30146:30148 Coq.Init.Logic <> :type_scope:x_'='_x not
R30126:30129 compcert.common.Memtype MEM load defax
R30143:30145 compcert.common.Memtype <> ofs var
R30140:30141 compcert.common.Memtype <> b' var
R30137:30138 compcert.common.Memtype <> m' var
R30131:30135 compcert.common.Memtype <> chunk var
R30149:30152 compcert.common.Memtype MEM load defax
R30165:30167 compcert.common.Memtype <> ofs var
R30162:30163 compcert.common.Memtype <> b' var
R30160:30160 compcert.common.Memtype <> m var
R30154:30158 compcert.common.Memtype <> chunk var
R30050:30053 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30045:30048 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R30043:30044 compcert.common.Memtype <> b' var
R30049:30049 compcert.common.Memtype <> b var
R30082:30085 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30076:30079 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R30057:30059 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R30054:30056 compcert.common.Memtype <> ofs var
R30060:30069 compcert.common.Memdata <> size_chunk def
R30071:30075 compcert.common.Memtype <> chunk var
R30080:30081 compcert.common.Memtype <> lo var
R30095:30098 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30088:30091 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R30086:30087 compcert.common.Memtype <> hi var
R30092:30094 compcert.common.Memtype <> ofs var
R30099:30108 compcert.common.Memtype MEM perm_order ind
R30112:30119 compcert.common.Memtype MEM Readable constr
R30110:30110 compcert.common.Memtype <> p var
R30003:30005 Coq.Init.Logic <> :type_scope:x_'='_x not
R29982:29990 compcert.common.Memtype MEM drop_perm defax
R30002:30002 compcert.common.Memtype <> p var
R29999:30000 compcert.common.Memtype <> hi var
R29996:29997 compcert.common.Memtype <> lo var
R29994:29994 compcert.common.Memtype <> b var
R29992:29992 compcert.common.Memtype <> m var
R30006:30009 Coq.Init.Datatypes <> Some constr
R30011:30012 compcert.common.Memtype <> m' var
ax 30526:30532 MEM extends
R30542:30544 compcert.common.Memtype MEM mem defax
R30535:30537 compcert.common.Memtype MEM mem defax
ax 30562:30573 MEM extends_refl
R30588:30594 compcert.common.Memtype MEM extends defax
R30598:30598 compcert.common.Memtype <> m var
R30596:30596 compcert.common.Memtype <> m var
ax 30608:30619 MEM load_extends
R30709:30715 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30718:30719 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30749:30752 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30739:30741 Coq.Init.Logic <> :type_scope:x_'='_x not
R30720:30723 compcert.common.Memtype MEM load defax
R30736:30738 compcert.common.Memtype <> ofs var
R30734:30734 compcert.common.Memtype <> b var
R30731:30732 compcert.common.Memtype <> m2 var
R30725:30729 compcert.common.Memtype <> chunk var
R30742:30745 Coq.Init.Datatypes <> Some constr
R30747:30748 compcert.common.Memtype <> v2 var
R30753:30763 compcert.common.Values Val lessdef ind
R30768:30769 compcert.common.Memtype <> v2 var
R30765:30766 compcert.common.Memtype <> v1 var
R30693:30695 Coq.Init.Logic <> :type_scope:x_'='_x not
R30674:30677 compcert.common.Memtype MEM load defax
R30690:30692 compcert.common.Memtype <> ofs var
R30688:30688 compcert.common.Memtype <> b var
R30685:30686 compcert.common.Memtype <> m1 var
R30679:30683 compcert.common.Memtype <> chunk var
R30696:30699 Coq.Init.Datatypes <> Some constr
R30701:30702 compcert.common.Memtype <> v1 var
R30655:30661 compcert.common.Memtype MEM extends defax
R30666:30667 compcert.common.Memtype <> m2 var
R30663:30664 compcert.common.Memtype <> m1 var
ax 30779:30791 MEM loadv_extends
R30917:30923 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30926:30927 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30958:30961 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30948:30950 Coq.Init.Logic <> :type_scope:x_'='_x not
R30928:30932 compcert.common.Memtype MEM loadv def
R30943:30947 compcert.common.Memtype <> addr2 var
R30940:30941 compcert.common.Memtype <> m2 var
R30934:30938 compcert.common.Memtype <> chunk var
R30951:30954 Coq.Init.Datatypes <> Some constr
R30956:30957 compcert.common.Memtype <> v2 var
R30962:30972 compcert.common.Values Val lessdef ind
R30977:30978 compcert.common.Memtype <> v2 var
R30974:30975 compcert.common.Memtype <> v1 var
R30888:30898 compcert.common.Values Val lessdef ind
R30906:30910 compcert.common.Memtype <> addr2 var
R30900:30904 compcert.common.Memtype <> addr1 var
R30872:30874 Coq.Init.Logic <> :type_scope:x_'='_x not
R30852:30856 compcert.common.Memtype MEM loadv def
R30867:30871 compcert.common.Memtype <> addr1 var
R30864:30865 compcert.common.Memtype <> m1 var
R30858:30862 compcert.common.Memtype <> chunk var
R30875:30878 Coq.Init.Datatypes <> Some constr
R30880:30881 compcert.common.Memtype <> v1 var
R30833:30839 compcert.common.Memtype MEM extends defax
R30844:30845 compcert.common.Memtype <> m2 var
R30841:30842 compcert.common.Memtype <> m1 var
ax 30988:31004 MEM loadbytes_extends
R31103:31109 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31116:31117 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31154:31171 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31140:31142 Coq.Init.Logic <> :type_scope:x_'='_x not
R31118:31126 compcert.common.Memtype MEM loadbytes defax
R31137:31139 compcert.common.Memtype <> len var
R31133:31135 compcert.common.Memtype <> ofs var
R31131:31131 compcert.common.Memtype <> b var
R31128:31129 compcert.common.Memtype <> m2 var
R31143:31146 Coq.Init.Datatypes <> Some constr
R31148:31153 compcert.common.Memtype <> bytes2 var
R31172:31183 compcert.lib.Coqlib <> list_forall2 ind
R31207:31212 compcert.common.Memtype <> bytes2 var
R31200:31205 compcert.common.Memtype <> bytes1 var
R31185:31198 compcert.common.Memdata <> memval_lessdef def
R31083:31085 Coq.Init.Logic <> :type_scope:x_'='_x not
R31061:31069 compcert.common.Memtype MEM loadbytes defax
R31080:31082 compcert.common.Memtype <> len var
R31076:31078 compcert.common.Memtype <> ofs var
R31074:31074 compcert.common.Memtype <> b var
R31071:31072 compcert.common.Memtype <> m1 var
R31086:31089 Coq.Init.Datatypes <> Some constr
R31091:31096 compcert.common.Memtype <> bytes1 var
R31042:31048 compcert.common.Memtype MEM extends defax
R31053:31054 compcert.common.Memtype <> m2 var
R31050:31051 compcert.common.Memtype <> m1 var
ax 31222:31241 MEM store_within_extends
R31366:31372 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31376:31382 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31417:31422 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31406:31408 Coq.Init.Logic <> :type_scope:x_'='_x not
R31383:31387 compcert.common.Memtype MEM store defax
R31404:31405 compcert.common.Memtype <> v2 var
R31400:31402 compcert.common.Memtype <> ofs var
R31398:31398 compcert.common.Memtype <> b var
R31395:31396 compcert.common.Memtype <> m2 var
R31389:31393 compcert.common.Memtype <> chunk var
R31409:31412 Coq.Init.Datatypes <> Some constr
R31414:31416 compcert.common.Memtype <> m2' var
R31423:31429 compcert.common.Memtype MEM extends defax
R31435:31437 compcert.common.Memtype <> m2' var
R31431:31433 compcert.common.Memtype <> m1' var
R31343:31353 compcert.common.Values Val lessdef ind
R31358:31359 compcert.common.Memtype <> v2 var
R31355:31356 compcert.common.Memtype <> v1 var
R31326:31328 Coq.Init.Logic <> :type_scope:x_'='_x not
R31303:31307 compcert.common.Memtype MEM store defax
R31324:31325 compcert.common.Memtype <> v1 var
R31320:31322 compcert.common.Memtype <> ofs var
R31318:31318 compcert.common.Memtype <> b var
R31315:31316 compcert.common.Memtype <> m1 var
R31309:31313 compcert.common.Memtype <> chunk var
R31329:31332 Coq.Init.Datatypes <> Some constr
R31334:31336 compcert.common.Memtype <> m1' var
R31284:31290 compcert.common.Memtype MEM extends defax
R31295:31296 compcert.common.Memtype <> m2 var
R31292:31293 compcert.common.Memtype <> m1 var
ax 31447:31467 MEM store_outside_extends
R31661:31667 compcert.common.Memtype MEM extends defax
R31672:31674 compcert.common.Memtype <> m2' var
R31669:31670 compcert.common.Memtype <> m1 var
R31649:31653 Coq.Init.Logic <> False ind
R31612:31615 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R31620:31622 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R31609:31611 compcert.common.Memtype <> ofs var
R31616:31619 compcert.common.Memtype <> ofs' var
R31616:31619 compcert.common.Memtype <> ofs' var
R31626:31628 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R31623:31625 compcert.common.Memtype <> ofs var
R31629:31638 compcert.common.Memdata <> size_chunk def
R31640:31644 compcert.common.Memtype <> chunk var
R31578:31581 compcert.common.Memtype MEM perm defax
R31597:31604 compcert.common.Memtype MEM Readable constr
R31593:31595 compcert.common.Memtype MEM Cur constr
R31588:31591 compcert.common.Memtype <> ofs' var
R31586:31586 compcert.common.Memtype <> b var
R31583:31584 compcert.common.Memtype <> m1 var
R31547:31549 Coq.Init.Logic <> :type_scope:x_'='_x not
R31525:31529 compcert.common.Memtype MEM store defax
R31546:31546 compcert.common.Memtype <> v var
R31542:31544 compcert.common.Memtype <> ofs var
R31540:31540 compcert.common.Memtype <> b var
R31537:31538 compcert.common.Memtype <> m2 var
R31531:31535 compcert.common.Memtype <> chunk var
R31550:31553 Coq.Init.Datatypes <> Some constr
R31555:31557 compcert.common.Memtype <> m2' var
R31506:31512 compcert.common.Memtype MEM extends defax
R31517:31518 compcert.common.Memtype <> m2 var
R31514:31515 compcert.common.Memtype <> m1 var
ax 31684:31697 MEM storev_extends
R31858:31864 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31868:31874 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31910:31915 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R31899:31901 Coq.Init.Logic <> :type_scope:x_'='_x not
R31875:31880 compcert.common.Memtype MEM storev def
R31897:31898 compcert.common.Memtype <> v2 var
R31891:31895 compcert.common.Memtype <> addr2 var
R31888:31889 compcert.common.Memtype <> m2 var
R31882:31886 compcert.common.Memtype <> chunk var
R31902:31905 Coq.Init.Datatypes <> Some constr
R31907:31909 compcert.common.Memtype <> m2' var
R31916:31922 compcert.common.Memtype MEM extends defax
R31928:31930 compcert.common.Memtype <> m2' var
R31924:31926 compcert.common.Memtype <> m1' var
R31835:31845 compcert.common.Values Val lessdef ind
R31850:31851 compcert.common.Memtype <> v2 var
R31847:31848 compcert.common.Memtype <> v1 var
R31806:31816 compcert.common.Values Val lessdef ind
R31824:31828 compcert.common.Memtype <> addr2 var
R31818:31822 compcert.common.Memtype <> addr1 var
R31789:31791 Coq.Init.Logic <> :type_scope:x_'='_x not
R31765:31770 compcert.common.Memtype MEM storev def
R31787:31788 compcert.common.Memtype <> v1 var
R31781:31785 compcert.common.Memtype <> addr1 var
R31778:31779 compcert.common.Memtype <> m1 var
R31772:31776 compcert.common.Memtype <> chunk var
R31792:31795 Coq.Init.Datatypes <> Some constr
R31797:31799 compcert.common.Memtype <> m1' var
R31746:31752 compcert.common.Memtype MEM extends defax
R31757:31758 compcert.common.Memtype <> m2 var
R31754:31755 compcert.common.Memtype <> m1 var
ax 31940:31964 MEM storebytes_within_extends
R32118:32124 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32128:32134 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32172:32177 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R32161:32163 Coq.Init.Logic <> :type_scope:x_'='_x not
R32135:32144 compcert.common.Memtype MEM storebytes defax
R32155:32160 compcert.common.Memtype <> bytes2 var
R32151:32153 compcert.common.Memtype <> ofs var
R32149:32149 compcert.common.Memtype <> b var
R32146:32147 compcert.common.Memtype <> m2 var
R32164:32167 Coq.Init.Datatypes <> Some constr
R32169:32171 compcert.common.Memtype <> m2' var
R32178:32184 compcert.common.Memtype MEM extends defax
R32190:32192 compcert.common.Memtype <> m2' var
R32186:32188 compcert.common.Memtype <> m1' var
R32071:32082 compcert.lib.Coqlib <> list_forall2 ind
R32106:32111 compcert.common.Memtype <> bytes2 var
R32099:32104 compcert.common.Memtype <> bytes1 var
R32084:32097 compcert.common.Memdata <> memval_lessdef def
R32054:32056 Coq.Init.Logic <> :type_scope:x_'='_x not
R32028:32037 compcert.common.Memtype MEM storebytes defax
R32048:32053 compcert.common.Memtype <> bytes1 var
R32044:32046 compcert.common.Memtype <> ofs var
R32042:32042 compcert.common.Memtype <> b var
R32039:32040 compcert.common.Memtype <> m1 var
R32057:32060 Coq.Init.Datatypes <> Some constr
R32062:32064 compcert.common.Memtype <> m1' var
R32009:32015 compcert.common.Memtype MEM extends defax
R32020:32021 compcert.common.Memtype <> m2 var
R32017:32018 compcert.common.Memtype <> m1 var
ax 32202:32227 MEM storebytes_outside_extends
R32432:32438 compcert.common.Memtype MEM extends defax
R32443:32445 compcert.common.Memtype <> m2' var
R32440:32441 compcert.common.Memtype <> m1 var
R32420:32424 Coq.Init.Logic <> False ind
R32375:32378 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32383:32385 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32372:32374 compcert.common.Memtype <> ofs var
R32379:32382 compcert.common.Memtype <> ofs' var
R32379:32382 compcert.common.Memtype <> ofs' var
R32389:32391 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R32386:32388 compcert.common.Memtype <> ofs var
R32392:32399 Coq.ZArith.BinInt <> Z_of_nat syndef
R32402:32407 Coq.Init.Datatypes <> length def
R32409:32414 compcert.common.Memtype <> bytes2 var
R32341:32344 compcert.common.Memtype MEM perm defax
R32360:32367 compcert.common.Memtype MEM Readable constr
R32356:32358 compcert.common.Memtype MEM Cur constr
R32351:32354 compcert.common.Memtype <> ofs' var
R32349:32349 compcert.common.Memtype <> b var
R32346:32347 compcert.common.Memtype <> m1 var
R32310:32312 Coq.Init.Logic <> :type_scope:x_'='_x not
R32284:32293 compcert.common.Memtype MEM storebytes defax
R32304:32309 compcert.common.Memtype <> bytes2 var
R32300:32302 compcert.common.Memtype <> ofs var
R32298:32298 compcert.common.Memtype <> b var
R32295:32296 compcert.common.Memtype <> m2 var
R32313:32316 Coq.Init.Datatypes <> Some constr
R32318:32320 compcert.common.Memtype <> m2' var
R32265:32271 compcert.common.Memtype MEM extends defax
R32276:32277 compcert.common.Memtype <> m2 var
R32273:32274 compcert.common.Memtype <> m1 var
ax 32455:32467 MEM alloc_extends
R32592:32598 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32602:32608 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R32636:32641 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R32625:32627 Coq.Init.Logic <> :type_scope:x_'='_x not
R32609:32613 compcert.common.Memtype MEM alloc defax
R32622:32624 compcert.common.Memtype <> hi2 var
R32618:32620 compcert.common.Memtype <> lo2 var
R32615:32616 compcert.common.Memtype <> m2 var
R32628:32628 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32632:32633 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32635:32635 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32629:32631 compcert.common.Memtype <> m2' var
R32634:32634 compcert.common.Memtype <> b var
R32642:32648 compcert.common.Memtype MEM extends defax
R32654:32656 compcert.common.Memtype <> m2' var
R32650:32652 compcert.common.Memtype <> m1' var
R32579:32582 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R32576:32578 compcert.common.Memtype <> hi1 var
R32583:32585 compcert.common.Memtype <> hi2 var
R32565:32568 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R32562:32564 compcert.common.Memtype <> lo2 var
R32569:32571 compcert.common.Memtype <> lo1 var
R32545:32547 Coq.Init.Logic <> :type_scope:x_'='_x not
R32529:32533 compcert.common.Memtype MEM alloc defax
R32542:32544 compcert.common.Memtype <> hi1 var
R32538:32540 compcert.common.Memtype <> lo1 var
R32535:32536 compcert.common.Memtype <> m1 var
R32548:32548 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32552:32553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32555:32555 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32549:32551 compcert.common.Memtype <> m1' var
R32554:32554 compcert.common.Memtype <> b var
R32510:32516 compcert.common.Memtype MEM extends defax
R32521:32522 compcert.common.Memtype <> m2 var
R32518:32519 compcert.common.Memtype <> m1 var
ax 32666:32682 MEM free_left_extends
R32766:32772 compcert.common.Memtype MEM extends defax
R32778:32779 compcert.common.Memtype <> m2 var
R32774:32776 compcert.common.Memtype <> m1' var
R32749:32751 Coq.Init.Logic <> :type_scope:x_'='_x not
R32734:32737 compcert.common.Memtype MEM free defax
R32747:32748 compcert.common.Memtype <> hi var
R32744:32745 compcert.common.Memtype <> lo var
R32742:32742 compcert.common.Memtype <> b var
R32739:32740 compcert.common.Memtype <> m1 var
R32752:32755 Coq.Init.Datatypes <> Some constr
R32757:32759 compcert.common.Memtype <> m1' var
R32715:32721 compcert.common.Memtype MEM extends defax
R32726:32727 compcert.common.Memtype <> m2 var
R32723:32724 compcert.common.Memtype <> m1 var
ax 32789:32806 MEM free_right_extends
R32958:32964 compcert.common.Memtype MEM extends defax
R32969:32971 compcert.common.Memtype <> m2' var
R32966:32967 compcert.common.Memtype <> m1 var
R32946:32950 Coq.Init.Logic <> False ind
R32930:32933 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32937:32939 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R32928:32929 compcert.common.Memtype <> lo var
R32934:32936 compcert.common.Memtype <> ofs var
R32934:32936 compcert.common.Memtype <> ofs var
R32940:32941 compcert.common.Memtype <> hi var
R32907:32910 compcert.common.Memtype MEM perm defax
R32923:32923 compcert.common.Memtype <> p var
R32921:32921 compcert.common.Memtype <> k var
R32917:32919 compcert.common.Memtype <> ofs var
R32915:32915 compcert.common.Memtype <> b var
R32912:32913 compcert.common.Memtype <> m1 var
R32873:32875 Coq.Init.Logic <> :type_scope:x_'='_x not
R32858:32861 compcert.common.Memtype MEM free defax
R32871:32872 compcert.common.Memtype <> hi var
R32868:32869 compcert.common.Memtype <> lo var
R32866:32866 compcert.common.Memtype <> b var
R32863:32864 compcert.common.Memtype <> m2 var
R32876:32879 Coq.Init.Datatypes <> Some constr
R32881:32883 compcert.common.Memtype <> m2' var
R32839:32845 compcert.common.Memtype MEM extends defax
R32850:32851 compcert.common.Memtype <> m2 var
R32847:32848 compcert.common.Memtype <> m1 var
ax 32981:33001 MEM free_parallel_extends
R33085:33091 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R33095:33101 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R33128:33133 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R33117:33119 Coq.Init.Logic <> :type_scope:x_'='_x not
R33102:33105 compcert.common.Memtype MEM free defax
R33115:33116 compcert.common.Memtype <> hi var
R33112:33113 compcert.common.Memtype <> lo var
R33110:33110 compcert.common.Memtype <> b var
R33107:33108 compcert.common.Memtype <> m2 var
R33120:33123 Coq.Init.Datatypes <> Some constr
R33125:33127 compcert.common.Memtype <> m2' var
R33134:33140 compcert.common.Memtype MEM extends defax
R33146:33148 compcert.common.Memtype <> m2' var
R33142:33144 compcert.common.Memtype <> m1' var
R33068:33070 Coq.Init.Logic <> :type_scope:x_'='_x not
R33053:33056 compcert.common.Memtype MEM free defax
R33066:33067 compcert.common.Memtype <> hi var
R33063:33064 compcert.common.Memtype <> lo var
R33061:33061 compcert.common.Memtype <> b var
R33058:33059 compcert.common.Memtype <> m1 var
R33071:33074 Coq.Init.Datatypes <> Some constr
R33076:33078 compcert.common.Memtype <> m1' var
R33034:33040 compcert.common.Memtype MEM extends defax
R33045:33046 compcert.common.Memtype <> m2 var
R33042:33043 compcert.common.Memtype <> m1 var
ax 33158:33176 MEM valid_block_extends
R33235:33239 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R33219:33229 compcert.common.Memtype MEM valid_block def
R33234:33234 compcert.common.Memtype <> b var
R33231:33232 compcert.common.Memtype <> m1 var
R33240:33250 compcert.common.Memtype MEM valid_block def
R33255:33255 compcert.common.Memtype <> b var
R33252:33253 compcert.common.Memtype <> m2 var
R33199:33205 compcert.common.Memtype MEM extends defax
R33210:33211 compcert.common.Memtype <> m2 var
R33207:33208 compcert.common.Memtype <> m1 var
ax 33265:33276 MEM perm_extends
R33345:33348 compcert.common.Memtype MEM perm defax
R33361:33361 compcert.common.Memtype <> p var
R33359:33359 compcert.common.Memtype <> k var
R33355:33357 compcert.common.Memtype <> ofs var
R33353:33353 compcert.common.Memtype <> b var
R33350:33351 compcert.common.Memtype <> m2 var
R33324:33327 compcert.common.Memtype MEM perm defax
R33340:33340 compcert.common.Memtype <> p var
R33338:33338 compcert.common.Memtype <> k var
R33334:33336 compcert.common.Memtype <> ofs var
R33332:33332 compcert.common.Memtype <> b var
R33329:33330 compcert.common.Memtype <> m1 var
R33307:33313 compcert.common.Memtype MEM extends defax
R33318:33319 compcert.common.Memtype <> m2 var
R33315:33316 compcert.common.Memtype <> m1 var
ax 33370:33389 MEM valid_access_extends
R33474:33485 compcert.common.Memtype MEM valid_access def
R33502:33502 compcert.common.Memtype <> p var
R33498:33500 compcert.common.Memtype <> ofs var
R33496:33496 compcert.common.Memtype <> b var
R33490:33494 compcert.common.Memtype <> chunk var
R33487:33488 compcert.common.Memtype <> m2 var
R33441:33452 compcert.common.Memtype MEM valid_access def
R33469:33469 compcert.common.Memtype <> p var
R33465:33467 compcert.common.Memtype <> ofs var
R33463:33463 compcert.common.Memtype <> b var
R33457:33461 compcert.common.Memtype <> chunk var
R33454:33455 compcert.common.Memtype <> m1 var
R33424:33430 compcert.common.Memtype MEM extends defax
R33435:33436 compcert.common.Memtype <> m2 var
R33432:33433 compcert.common.Memtype <> m1 var
ax 33511:33531 MEM valid_pointer_extends
R33630:33632 Coq.Init.Logic <> :type_scope:x_'='_x not
R33608:33620 compcert.common.Memtype MEM valid_pointer defax
R33627:33629 compcert.common.Memtype <> ofs var
R33625:33625 compcert.common.Memtype <> b var
R33622:33623 compcert.common.Memtype <> m2 var
R33633:33636 Coq.Init.Datatypes <> true constr
R33597:33599 Coq.Init.Logic <> :type_scope:x_'='_x not
R33575:33587 compcert.common.Memtype MEM valid_pointer defax
R33594:33596 compcert.common.Memtype <> ofs var
R33592:33592 compcert.common.Memtype <> b var
R33589:33590 compcert.common.Memtype <> m1 var
R33600:33603 Coq.Init.Datatypes <> true constr
R33558:33564 compcert.common.Memtype MEM extends defax
R33569:33570 compcert.common.Memtype <> m2 var
R33566:33567 compcert.common.Memtype <> m1 var
ax 33645:33670 MEM weak_valid_pointer_extends
R33781:33783 Coq.Init.Logic <> :type_scope:x_'='_x not
R33754:33771 compcert.common.Memtype MEM weak_valid_pointer def
R33778:33780 compcert.common.Memtype <> ofs var
R33776:33776 compcert.common.Memtype <> b var
R33773:33774 compcert.common.Memtype <> m2 var
R33784:33787 Coq.Init.Datatypes <> true constr
R33743:33745 Coq.Init.Logic <> :type_scope:x_'='_x not
R33716:33733 compcert.common.Memtype MEM weak_valid_pointer def
R33740:33742 compcert.common.Memtype <> ofs var
R33738:33738 compcert.common.Memtype <> b var
R33735:33736 compcert.common.Memtype <> m1 var
R33746:33749 Coq.Init.Datatypes <> true constr
R33697:33703 compcert.common.Memtype MEM extends defax
R33708:33709 compcert.common.Memtype <> m2 var
R33705:33706 compcert.common.Memtype <> m1 var
ax 34521:34526 MEM inject
R34546:34548 compcert.common.Memtype MEM mem defax
R34539:34541 compcert.common.Memtype MEM mem defax
R34529:34534 compcert.common.Values <> meminj def
ax 34566:34585 MEM valid_block_inject_1
R34668:34678 compcert.common.Memtype MEM valid_block def
R34683:34684 compcert.common.Memtype <> b1 var
R34680:34681 compcert.common.Memtype <> m1 var
R34648:34653 compcert.common.Memtype MEM inject defax
R34660:34661 compcert.common.Memtype <> m2 var
R34657:34658 compcert.common.Memtype <> m1 var
R34655:34655 compcert.common.Memtype <> f var
R34624:34626 Coq.Init.Logic <> :type_scope:x_'='_x not
R34620:34620 compcert.common.Memtype <> f var
R34622:34623 compcert.common.Memtype <> b1 var
R34627:34630 Coq.Init.Datatypes <> Some constr
R34631:34631 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34634:34635 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34641:34641 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34632:34633 compcert.common.Memtype <> b2 var
R34636:34640 compcert.common.Memtype <> delta var
ax 34694:34713 MEM valid_block_inject_2
R34796:34806 compcert.common.Memtype MEM valid_block def
R34811:34812 compcert.common.Memtype <> b2 var
R34808:34809 compcert.common.Memtype <> m2 var
R34776:34781 compcert.common.Memtype MEM inject defax
R34788:34789 compcert.common.Memtype <> m2 var
R34785:34786 compcert.common.Memtype <> m1 var
R34783:34783 compcert.common.Memtype <> f var
R34752:34754 Coq.Init.Logic <> :type_scope:x_'='_x not
R34748:34748 compcert.common.Memtype <> f var
R34750:34751 compcert.common.Memtype <> b1 var
R34755:34758 Coq.Init.Datatypes <> Some constr
R34759:34759 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34762:34763 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34769:34769 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34760:34761 compcert.common.Memtype <> b2 var
R34764:34768 compcert.common.Memtype <> delta var
ax 34822:34832 MEM perm_inject
R34945:34948 compcert.common.Memtype MEM perm defax
R34972:34972 compcert.common.Memtype <> p var
R34970:34970 compcert.common.Memtype <> k var
R34960:34962 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R34957:34959 compcert.common.Memtype <> ofs var
R34963:34967 compcert.common.Memtype <> delta var
R34953:34954 compcert.common.Memtype <> b2 var
R34950:34951 compcert.common.Memtype <> m2 var
R34923:34926 compcert.common.Memtype MEM perm defax
R34940:34940 compcert.common.Memtype <> p var
R34938:34938 compcert.common.Memtype <> k var
R34934:34936 compcert.common.Memtype <> ofs var
R34931:34932 compcert.common.Memtype <> b1 var
R34928:34929 compcert.common.Memtype <> m1 var
R34903:34908 compcert.common.Memtype MEM inject defax
R34915:34916 compcert.common.Memtype <> m2 var
R34912:34913 compcert.common.Memtype <> m1 var
R34910:34910 compcert.common.Memtype <> f var
R34879:34881 Coq.Init.Logic <> :type_scope:x_'='_x not
R34875:34875 compcert.common.Memtype <> f var
R34877:34878 compcert.common.Memtype <> b1 var
R34882:34885 Coq.Init.Datatypes <> Some constr
R34886:34886 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34889:34890 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34896:34896 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34887:34888 compcert.common.Memtype <> b2 var
R34891:34895 compcert.common.Memtype <> delta var
ax 34982:35000 MEM valid_access_inject
R35131:35142 compcert.common.Memtype MEM valid_access def
R35170:35170 compcert.common.Memtype <> p var
R35160:35162 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35157:35159 compcert.common.Memtype <> ofs var
R35163:35167 compcert.common.Memtype <> delta var
R35153:35154 compcert.common.Memtype <> b2 var
R35147:35151 compcert.common.Memtype <> chunk var
R35144:35145 compcert.common.Memtype <> m2 var
R35095:35106 compcert.common.Memtype MEM valid_access def
R35124:35124 compcert.common.Memtype <> p var
R35120:35122 compcert.common.Memtype <> ofs var
R35117:35118 compcert.common.Memtype <> b1 var
R35111:35115 compcert.common.Memtype <> chunk var
R35108:35109 compcert.common.Memtype <> m1 var
R35075:35080 compcert.common.Memtype MEM inject defax
R35087:35088 compcert.common.Memtype <> m2 var
R35084:35085 compcert.common.Memtype <> m1 var
R35082:35082 compcert.common.Memtype <> f var
R35051:35053 Coq.Init.Logic <> :type_scope:x_'='_x not
R35047:35047 compcert.common.Memtype <> f var
R35049:35050 compcert.common.Memtype <> b1 var
R35054:35057 Coq.Init.Datatypes <> Some constr
R35058:35058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35061:35062 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35068:35068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35059:35060 compcert.common.Memtype <> b2 var
R35063:35067 compcert.common.Memtype <> delta var
ax 35180:35199 MEM valid_pointer_inject
R35355:35357 Coq.Init.Logic <> :type_scope:x_'='_x not
R35322:35334 compcert.common.Memtype MEM valid_pointer defax
R35346:35348 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35343:35345 compcert.common.Memtype <> ofs var
R35349:35353 compcert.common.Memtype <> delta var
R35339:35340 compcert.common.Memtype <> b2 var
R35336:35337 compcert.common.Memtype <> m2 var
R35358:35361 Coq.Init.Datatypes <> true constr
R35309:35311 Coq.Init.Logic <> :type_scope:x_'='_x not
R35286:35298 compcert.common.Memtype MEM valid_pointer defax
R35306:35308 compcert.common.Memtype <> ofs var
R35303:35304 compcert.common.Memtype <> b1 var
R35300:35301 compcert.common.Memtype <> m1 var
R35312:35315 Coq.Init.Datatypes <> true constr
R35266:35271 compcert.common.Memtype MEM inject defax
R35278:35279 compcert.common.Memtype <> m2 var
R35275:35276 compcert.common.Memtype <> m1 var
R35273:35273 compcert.common.Memtype <> f var
R35242:35244 Coq.Init.Logic <> :type_scope:x_'='_x not
R35238:35238 compcert.common.Memtype <> f var
R35240:35241 compcert.common.Memtype <> b1 var
R35245:35248 Coq.Init.Datatypes <> Some constr
R35249:35249 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35252:35253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35259:35259 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35250:35251 compcert.common.Memtype <> b2 var
R35254:35258 compcert.common.Memtype <> delta var
ax 35371:35395 MEM weak_valid_pointer_inject
R35561:35563 Coq.Init.Logic <> :type_scope:x_'='_x not
R35523:35540 compcert.common.Memtype MEM weak_valid_pointer def
R35552:35554 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35549:35551 compcert.common.Memtype <> ofs var
R35555:35559 compcert.common.Memtype <> delta var
R35545:35546 compcert.common.Memtype <> b2 var
R35542:35543 compcert.common.Memtype <> m2 var
R35564:35567 Coq.Init.Datatypes <> true constr
R35510:35512 Coq.Init.Logic <> :type_scope:x_'='_x not
R35482:35499 compcert.common.Memtype MEM weak_valid_pointer def
R35507:35509 compcert.common.Memtype <> ofs var
R35504:35505 compcert.common.Memtype <> b1 var
R35501:35502 compcert.common.Memtype <> m1 var
R35513:35516 Coq.Init.Datatypes <> true constr
R35462:35467 compcert.common.Memtype MEM inject defax
R35474:35475 compcert.common.Memtype <> m2 var
R35471:35472 compcert.common.Memtype <> m1 var
R35469:35469 compcert.common.Memtype <> f var
R35438:35440 Coq.Init.Logic <> :type_scope:x_'='_x not
R35434:35434 compcert.common.Memtype <> f var
R35436:35437 compcert.common.Memtype <> b1 var
R35441:35444 Coq.Init.Datatypes <> Some constr
R35445:35445 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35448:35449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35455:35455 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35446:35447 compcert.common.Memtype <> b2 var
R35450:35454 compcert.common.Memtype <> delta var
ax 35577:35590 MEM address_inject
R35767:35769 Coq.Init.Logic <> :type_scope:x_'='_x not
R35723:35734 compcert.lib.Integers Int unsigned def
R35737:35743 compcert.lib.Integers Int add def
R35751:35758 compcert.lib.Integers Int repr def
R35760:35764 compcert.common.Memtype <> delta var
R35745:35748 compcert.common.Memtype <> ofs1 var
R35787:35789 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35770:35781 compcert.lib.Integers Int unsigned def
R35783:35786 compcert.common.Memtype <> ofs1 var
R35790:35794 compcert.common.Memtype <> delta var
R35698:35700 Coq.Init.Logic <> :type_scope:x_'='_x not
R35694:35694 compcert.common.Memtype <> f var
R35696:35697 compcert.common.Memtype <> b1 var
R35701:35704 Coq.Init.Datatypes <> Some constr
R35706:35706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35709:35710 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35716:35716 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35707:35708 compcert.common.Memtype <> b2 var
R35711:35715 compcert.common.Memtype <> delta var
R35652:35655 compcert.common.Memtype MEM perm defax
R35687:35687 compcert.common.Memtype <> p var
R35683:35685 compcert.common.Memtype MEM Cur constr
R35664:35675 compcert.lib.Integers Int unsigned def
R35677:35680 compcert.common.Memtype <> ofs1 var
R35660:35661 compcert.common.Memtype <> b1 var
R35657:35658 compcert.common.Memtype <> m1 var
R35632:35637 compcert.common.Memtype MEM inject defax
R35644:35645 compcert.common.Memtype <> m2 var
R35641:35642 compcert.common.Memtype <> m1 var
R35639:35639 compcert.common.Memtype <> f var
ax 35804:35835 MEM valid_pointer_inject_no_overflow
R35971:35974 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36023:36026 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R35991:35993 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35975:35986 compcert.lib.Integers Int unsigned def
R35988:35990 compcert.common.Memtype <> ofs var
R35994:36005 compcert.lib.Integers Int unsigned def
R36008:36015 compcert.lib.Integers Int repr def
R36017:36021 compcert.common.Memtype <> delta var
R35991:35993 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R35975:35986 compcert.lib.Integers Int unsigned def
R35988:35990 compcert.common.Memtype <> ofs var
R35994:36005 compcert.lib.Integers Int unsigned def
R36008:36015 compcert.lib.Integers Int repr def
R36017:36021 compcert.common.Memtype <> delta var
R36027:36042 compcert.lib.Integers Int max_unsigned def
R35946:35948 Coq.Init.Logic <> :type_scope:x_'='_x not
R35943:35943 compcert.common.Memtype <> f var
R35945:35945 compcert.common.Memtype <> b var
R35949:35952 Coq.Init.Datatypes <> Some constr
R35953:35953 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35956:35957 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35963:35963 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35954:35955 compcert.common.Memtype <> b' var
R35958:35962 compcert.common.Memtype <> delta var
R35930:35932 Coq.Init.Logic <> :type_scope:x_'='_x not
R35893:35905 compcert.common.Memtype MEM valid_pointer defax
R35913:35924 compcert.lib.Integers Int unsigned def
R35926:35928 compcert.common.Memtype <> ofs var
R35910:35910 compcert.common.Memtype <> b var
R35907:35908 compcert.common.Memtype <> m1 var
R35933:35936 Coq.Init.Datatypes <> true constr
R35873:35878 compcert.common.Memtype MEM inject defax
R35885:35886 compcert.common.Memtype <> m2 var
R35882:35883 compcert.common.Memtype <> m1 var
R35880:35880 compcert.common.Memtype <> f var
ax 36052:36088 MEM weak_valid_pointer_inject_no_overflow
R36229:36232 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36281:36284 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R36249:36251 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R36233:36244 compcert.lib.Integers Int unsigned def
R36246:36248 compcert.common.Memtype <> ofs var
R36252:36263 compcert.lib.Integers Int unsigned def
R36266:36273 compcert.lib.Integers Int repr def
R36275:36279 compcert.common.Memtype <> delta var
R36249:36251 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R36233:36244 compcert.lib.Integers Int unsigned def
R36246:36248 compcert.common.Memtype <> ofs var
R36252:36263 compcert.lib.Integers Int unsigned def
R36266:36273 compcert.lib.Integers Int repr def
R36275:36279 compcert.common.Memtype <> delta var
R36285:36300 compcert.lib.Integers Int max_unsigned def
R36204:36206 Coq.Init.Logic <> :type_scope:x_'='_x not
R36201:36201 compcert.common.Memtype <> f var
R36203:36203 compcert.common.Memtype <> b var
R36207:36210 Coq.Init.Datatypes <> Some constr
R36211:36211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36214:36215 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36221:36221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36212:36213 compcert.common.Memtype <> b' var
R36216:36220 compcert.common.Memtype <> delta var
R36188:36190 Coq.Init.Logic <> :type_scope:x_'='_x not
R36146:36163 compcert.common.Memtype MEM weak_valid_pointer def
R36171:36182 compcert.lib.Integers Int unsigned def
R36184:36186 compcert.common.Memtype <> ofs var
R36168:36168 compcert.common.Memtype <> b var
R36165:36166 compcert.common.Memtype <> m1 var
R36191:36194 Coq.Init.Datatypes <> true constr
R36126:36131 compcert.common.Memtype MEM inject defax
R36138:36139 compcert.common.Memtype <> m2 var
R36135:36136 compcert.common.Memtype <> m1 var
R36133:36133 compcert.common.Memtype <> f var
ax 36310:36333 MEM valid_pointer_inject_val
R36525:36527 Coq.Init.Logic <> :type_scope:x_'='_x not
R36486:36498 compcert.common.Memtype MEM valid_pointer defax
R36507:36518 compcert.lib.Integers Int unsigned def
R36520:36523 compcert.common.Memtype <> ofs' var
R36503:36504 compcert.common.Memtype <> b' var
R36500:36501 compcert.common.Memtype <> m2 var
R36528:36531 Coq.Init.Datatypes <> true constr
R36440:36449 compcert.common.Values <> val_inject ind
R36467:36470 compcert.common.Values <> Vptr constr
R36475:36478 compcert.common.Memtype <> ofs' var
R36472:36473 compcert.common.Memtype <> b' var
R36454:36457 compcert.common.Values <> Vptr constr
R36461:36463 compcert.common.Memtype <> ofs var
R36459:36459 compcert.common.Memtype <> b var
R36451:36451 compcert.common.Memtype <> f var
R36427:36429 Coq.Init.Logic <> :type_scope:x_'='_x not
R36390:36402 compcert.common.Memtype MEM valid_pointer defax
R36410:36421 compcert.lib.Integers Int unsigned def
R36423:36425 compcert.common.Memtype <> ofs var
R36407:36407 compcert.common.Memtype <> b var
R36404:36405 compcert.common.Memtype <> m1 var
R36430:36433 Coq.Init.Datatypes <> true constr
R36370:36375 compcert.common.Memtype MEM inject defax
R36382:36383 compcert.common.Memtype <> m2 var
R36379:36380 compcert.common.Memtype <> m1 var
R36377:36377 compcert.common.Memtype <> f var
ax 36541:36569 MEM weak_valid_pointer_inject_val
R36771:36773 Coq.Init.Logic <> :type_scope:x_'='_x not
R36727:36744 compcert.common.Memtype MEM weak_valid_pointer def
R36753:36764 compcert.lib.Integers Int unsigned def
R36766:36769 compcert.common.Memtype <> ofs' var
R36749:36750 compcert.common.Memtype <> b' var
R36746:36747 compcert.common.Memtype <> m2 var
R36774:36777 Coq.Init.Datatypes <> true constr
R36681:36690 compcert.common.Values <> val_inject ind
R36708:36711 compcert.common.Values <> Vptr constr
R36716:36719 compcert.common.Memtype <> ofs' var
R36713:36714 compcert.common.Memtype <> b' var
R36695:36698 compcert.common.Values <> Vptr constr
R36702:36704 compcert.common.Memtype <> ofs var
R36700:36700 compcert.common.Memtype <> b var
R36692:36692 compcert.common.Memtype <> f var
R36668:36670 Coq.Init.Logic <> :type_scope:x_'='_x not
R36626:36643 compcert.common.Memtype MEM weak_valid_pointer def
R36651:36662 compcert.lib.Integers Int unsigned def
R36664:36666 compcert.common.Memtype <> ofs var
R36648:36648 compcert.common.Memtype <> b var
R36645:36646 compcert.common.Memtype <> m1 var
R36671:36674 Coq.Init.Datatypes <> true constr
R36606:36611 compcert.common.Memtype MEM inject defax
R36618:36619 compcert.common.Memtype <> m2 var
R36615:36616 compcert.common.Memtype <> m1 var
R36613:36613 compcert.common.Memtype <> f var
ax 36787:36803 MEM inject_no_overlap
R37038:37041 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37031:37034 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37028:37030 compcert.common.Memtype <> b1' var
R37035:37037 compcert.common.Memtype <> b2' var
R37055:37058 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37046:37048 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R37042:37045 compcert.common.Memtype <> ofs1 var
R37049:37054 compcert.common.Memtype <> delta1 var
R37063:37065 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R37059:37062 compcert.common.Memtype <> ofs2 var
R37066:37071 compcert.common.Memtype <> delta2 var
R36994:36997 compcert.common.Memtype MEM perm defax
R37014:37021 compcert.common.Memtype MEM Nonempty constr
R37010:37012 compcert.common.Memtype MEM Max constr
R37005:37008 compcert.common.Memtype <> ofs2 var
R37002:37003 compcert.common.Memtype <> b2 var
R36999:37000 compcert.common.Memtype <> m1 var
R36960:36963 compcert.common.Memtype MEM perm defax
R36980:36987 compcert.common.Memtype MEM Nonempty constr
R36976:36978 compcert.common.Memtype MEM Max constr
R36971:36974 compcert.common.Memtype <> ofs1 var
R36968:36969 compcert.common.Memtype <> b1 var
R36965:36966 compcert.common.Memtype <> m1 var
R36933:36935 Coq.Init.Logic <> :type_scope:x_'='_x not
R36929:36929 compcert.common.Memtype <> f var
R36931:36932 compcert.common.Memtype <> b2 var
R36936:36939 Coq.Init.Datatypes <> Some constr
R36941:36941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36945:36946 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36953:36953 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36942:36944 compcert.common.Memtype <> b2' var
R36947:36952 compcert.common.Memtype <> delta2 var
R36902:36904 Coq.Init.Logic <> :type_scope:x_'='_x not
R36898:36898 compcert.common.Memtype <> f var
R36900:36901 compcert.common.Memtype <> b1 var
R36905:36908 Coq.Init.Datatypes <> Some constr
R36910:36910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36914:36915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36922:36922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36911:36913 compcert.common.Memtype <> b1' var
R36916:36921 compcert.common.Memtype <> delta1 var
R36886:36889 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36884:36885 compcert.common.Memtype <> b1 var
R36890:36891 compcert.common.Memtype <> b2 var
R36864:36869 compcert.common.Memtype MEM inject defax
R36876:36877 compcert.common.Memtype <> m2 var
R36873:36874 compcert.common.Memtype <> m1 var
R36871:36871 compcert.common.Memtype <> f var
ax 37081:37105 MEM different_pointers_inject
R37372:37377 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37365:37368 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37362:37364 compcert.common.Memtype <> b1' var
R37369:37371 compcert.common.Memtype <> b2' var
R37423:37428 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37378:37389 compcert.lib.Integers Int unsigned def
R37392:37398 compcert.lib.Integers Int add def
R37406:37413 compcert.lib.Integers Int repr def
R37415:37420 compcert.common.Memtype <> delta1 var
R37400:37403 compcert.common.Memtype <> ofs1 var
R37429:37440 compcert.lib.Integers Int unsigned def
R37443:37449 compcert.lib.Integers Int add def
R37457:37464 compcert.lib.Integers Int repr def
R37466:37471 compcert.common.Memtype <> delta2 var
R37451:37454 compcert.common.Memtype <> ofs2 var
R37335:37337 Coq.Init.Logic <> :type_scope:x_'='_x not
R37331:37331 compcert.common.Memtype <> f var
R37333:37334 compcert.common.Memtype <> b2 var
R37338:37341 Coq.Init.Datatypes <> Some constr
R37343:37343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37347:37348 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37355:37355 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37344:37346 compcert.common.Memtype <> b2' var
R37349:37354 compcert.common.Memtype <> delta2 var
R37304:37306 Coq.Init.Logic <> :type_scope:x_'='_x not
R37300:37300 compcert.common.Memtype <> f var
R37302:37303 compcert.common.Memtype <> b1 var
R37307:37310 Coq.Init.Datatypes <> Some constr
R37312:37312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37316:37317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37324:37324 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37313:37315 compcert.common.Memtype <> b1' var
R37318:37323 compcert.common.Memtype <> delta1 var
R37287:37289 Coq.Init.Logic <> :type_scope:x_'='_x not
R37249:37261 compcert.common.Memtype MEM valid_pointer defax
R37269:37280 compcert.lib.Integers Int unsigned def
R37282:37285 compcert.common.Memtype <> ofs2 var
R37265:37266 compcert.common.Memtype <> b2 var
R37263:37263 compcert.common.Memtype <> m var
R37290:37293 Coq.Init.Datatypes <> true constr
R37236:37238 Coq.Init.Logic <> :type_scope:x_'='_x not
R37198:37210 compcert.common.Memtype MEM valid_pointer defax
R37218:37229 compcert.lib.Integers Int unsigned def
R37231:37234 compcert.common.Memtype <> ofs1 var
R37214:37215 compcert.common.Memtype <> b1 var
R37212:37212 compcert.common.Memtype <> m var
R37239:37242 Coq.Init.Datatypes <> true constr
R37186:37189 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37184:37185 compcert.common.Memtype <> b1 var
R37190:37191 compcert.common.Memtype <> b2 var
R37165:37170 compcert.common.Memtype MEM inject defax
R37176:37177 compcert.common.Memtype <> m' var
R37174:37174 compcert.common.Memtype <> m var
R37172:37172 compcert.common.Memtype <> f var
ax 37483:37493 MEM load_inject
R37626:37632 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37635:37636 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37677:37680 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R37667:37669 Coq.Init.Logic <> :type_scope:x_'='_x not
R37637:37640 compcert.common.Memtype MEM load defax
R37658:37660 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R37655:37657 compcert.common.Memtype <> ofs var
R37661:37665 compcert.common.Memtype <> delta var
R37651:37652 compcert.common.Memtype <> b2 var
R37648:37649 compcert.common.Memtype <> m2 var
R37642:37646 compcert.common.Memtype <> chunk var
R37670:37673 Coq.Init.Datatypes <> Some constr
R37675:37676 compcert.common.Memtype <> v2 var
R37681:37690 compcert.common.Values <> val_inject ind
R37697:37698 compcert.common.Memtype <> v2 var
R37694:37695 compcert.common.Memtype <> v1 var
R37692:37692 compcert.common.Memtype <> f var
R37601:37603 Coq.Init.Logic <> :type_scope:x_'='_x not
R37597:37597 compcert.common.Memtype <> f var
R37599:37600 compcert.common.Memtype <> b1 var
R37604:37607 Coq.Init.Datatypes <> Some constr
R37609:37609 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37612:37613 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37619:37619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37610:37611 compcert.common.Memtype <> b2 var
R37614:37618 compcert.common.Memtype <> delta var
R37581:37583 Coq.Init.Logic <> :type_scope:x_'='_x not
R37561:37564 compcert.common.Memtype MEM load defax
R37578:37580 compcert.common.Memtype <> ofs var
R37575:37576 compcert.common.Memtype <> b1 var
R37572:37573 compcert.common.Memtype <> m1 var
R37566:37570 compcert.common.Memtype <> chunk var
R37584:37587 Coq.Init.Datatypes <> Some constr
R37589:37590 compcert.common.Memtype <> v1 var
R37541:37546 compcert.common.Memtype MEM inject defax
R37553:37554 compcert.common.Memtype <> m2 var
R37550:37551 compcert.common.Memtype <> m1 var
R37548:37548 compcert.common.Memtype <> f var
ax 37708:37719 MEM loadv_inject
R37834:37840 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37843:37844 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37872:37875 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R37862:37864 Coq.Init.Logic <> :type_scope:x_'='_x not
R37845:37849 compcert.common.Memtype MEM loadv def
R37860:37861 compcert.common.Memtype <> a2 var
R37857:37858 compcert.common.Memtype <> m2 var
R37851:37855 compcert.common.Memtype <> chunk var
R37865:37868 Coq.Init.Datatypes <> Some constr
R37870:37871 compcert.common.Memtype <> v2 var
R37876:37885 compcert.common.Values <> val_inject ind
R37892:37893 compcert.common.Memtype <> v2 var
R37889:37890 compcert.common.Memtype <> v1 var
R37887:37887 compcert.common.Memtype <> f var
R37810:37819 compcert.common.Values <> val_inject ind
R37826:37827 compcert.common.Memtype <> a2 var
R37823:37824 compcert.common.Memtype <> a1 var
R37821:37821 compcert.common.Memtype <> f var
R37794:37796 Coq.Init.Logic <> :type_scope:x_'='_x not
R37777:37781 compcert.common.Memtype MEM loadv def
R37792:37793 compcert.common.Memtype <> a1 var
R37789:37790 compcert.common.Memtype <> m1 var
R37783:37787 compcert.common.Memtype <> chunk var
R37797:37800 Coq.Init.Datatypes <> Some constr
R37802:37803 compcert.common.Memtype <> v1 var
R37757:37762 compcert.common.Memtype MEM inject defax
R37769:37770 compcert.common.Memtype <> m2 var
R37766:37767 compcert.common.Memtype <> m1 var
R37764:37764 compcert.common.Memtype <> f var
ax 37903:37918 MEM loadbytes_inject
R38060:38066 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38073:38074 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38122:38139 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38108:38110 Coq.Init.Logic <> :type_scope:x_'='_x not
R38075:38083 compcert.common.Memtype MEM loadbytes defax
R38105:38107 compcert.common.Memtype <> len var
R38095:38097 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38092:38094 compcert.common.Memtype <> ofs var
R38098:38102 compcert.common.Memtype <> delta var
R38088:38089 compcert.common.Memtype <> b2 var
R38085:38086 compcert.common.Memtype <> m2 var
R38111:38114 Coq.Init.Datatypes <> Some constr
R38116:38121 compcert.common.Memtype <> bytes2 var
R38140:38151 compcert.lib.Coqlib <> list_forall2 ind
R38178:38183 compcert.common.Memtype <> bytes2 var
R38171:38176 compcert.common.Memtype <> bytes1 var
R38154:38166 compcert.common.Memdata <> memval_inject ind
R38168:38168 compcert.common.Memtype <> f var
R38035:38037 Coq.Init.Logic <> :type_scope:x_'='_x not
R38031:38031 compcert.common.Memtype <> f var
R38033:38034 compcert.common.Memtype <> b1 var
R38038:38041 Coq.Init.Datatypes <> Some constr
R38043:38043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38046:38047 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38053:38053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38044:38045 compcert.common.Memtype <> b2 var
R38048:38052 compcert.common.Memtype <> delta var
R38011:38013 Coq.Init.Logic <> :type_scope:x_'='_x not
R37988:37996 compcert.common.Memtype MEM loadbytes defax
R38008:38010 compcert.common.Memtype <> len var
R38004:38006 compcert.common.Memtype <> ofs var
R38001:38002 compcert.common.Memtype <> b1 var
R37998:37999 compcert.common.Memtype <> m1 var
R38014:38017 Coq.Init.Datatypes <> Some constr
R38019:38024 compcert.common.Memtype <> bytes1 var
R37968:37973 compcert.common.Memtype MEM inject defax
R37980:37981 compcert.common.Memtype <> m2 var
R37977:37978 compcert.common.Memtype <> m1 var
R37975:37975 compcert.common.Memtype <> f var
ax 38193:38211 MEM store_mapped_inject
R38378:38384 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38387:38392 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38437:38444 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38427:38429 Coq.Init.Logic <> :type_scope:x_'='_x not
R38393:38397 compcert.common.Memtype MEM store defax
R38425:38426 compcert.common.Memtype <> v2 var
R38415:38417 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38412:38414 compcert.common.Memtype <> ofs var
R38418:38422 compcert.common.Memtype <> delta var
R38408:38409 compcert.common.Memtype <> b2 var
R38405:38406 compcert.common.Memtype <> m2 var
R38399:38403 compcert.common.Memtype <> chunk var
R38430:38433 Coq.Init.Datatypes <> Some constr
R38435:38436 compcert.common.Memtype <> n2 var
R38445:38450 compcert.common.Memtype MEM inject defax
R38457:38458 compcert.common.Memtype <> n2 var
R38454:38455 compcert.common.Memtype <> n1 var
R38452:38452 compcert.common.Memtype <> f var
R38354:38363 compcert.common.Values <> val_inject ind
R38370:38371 compcert.common.Memtype <> v2 var
R38367:38368 compcert.common.Memtype <> v1 var
R38365:38365 compcert.common.Memtype <> f var
R38329:38331 Coq.Init.Logic <> :type_scope:x_'='_x not
R38325:38325 compcert.common.Memtype <> f var
R38327:38328 compcert.common.Memtype <> b1 var
R38332:38335 Coq.Init.Datatypes <> Some constr
R38337:38337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38340:38341 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38347:38347 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38338:38339 compcert.common.Memtype <> b2 var
R38342:38346 compcert.common.Memtype <> delta var
R38309:38311 Coq.Init.Logic <> :type_scope:x_'='_x not
R38285:38289 compcert.common.Memtype MEM store defax
R38307:38308 compcert.common.Memtype <> v1 var
R38303:38305 compcert.common.Memtype <> ofs var
R38300:38301 compcert.common.Memtype <> b1 var
R38297:38298 compcert.common.Memtype <> m1 var
R38291:38295 compcert.common.Memtype <> chunk var
R38312:38315 Coq.Init.Datatypes <> Some constr
R38317:38318 compcert.common.Memtype <> n1 var
R38265:38270 compcert.common.Memtype MEM inject defax
R38277:38278 compcert.common.Memtype <> m2 var
R38274:38275 compcert.common.Memtype <> m1 var
R38272:38272 compcert.common.Memtype <> f var
ax 38468:38488 MEM store_unmapped_inject
R38607:38612 compcert.common.Memtype MEM inject defax
R38619:38620 compcert.common.Memtype <> m2 var
R38616:38617 compcert.common.Memtype <> n1 var
R38614:38614 compcert.common.Memtype <> f var
R38594:38596 Coq.Init.Logic <> :type_scope:x_'='_x not
R38590:38590 compcert.common.Memtype <> f var
R38592:38593 compcert.common.Memtype <> b1 var
R38597:38600 Coq.Init.Datatypes <> None constr
R38574:38576 Coq.Init.Logic <> :type_scope:x_'='_x not
R38550:38554 compcert.common.Memtype MEM store defax
R38572:38573 compcert.common.Memtype <> v1 var
R38568:38570 compcert.common.Memtype <> ofs var
R38565:38566 compcert.common.Memtype <> b1 var
R38562:38563 compcert.common.Memtype <> m1 var
R38556:38560 compcert.common.Memtype <> chunk var
R38577:38580 Coq.Init.Datatypes <> Some constr
R38582:38583 compcert.common.Memtype <> n1 var
R38530:38535 compcert.common.Memtype MEM inject defax
R38542:38543 compcert.common.Memtype <> m2 var
R38539:38540 compcert.common.Memtype <> m1 var
R38537:38537 compcert.common.Memtype <> f var
ax 38630:38649 MEM store_outside_inject
R38901:38906 compcert.common.Memtype MEM inject defax
R38913:38915 compcert.common.Memtype <> m2' var
R38910:38911 compcert.common.Memtype <> m1 var
R38908:38908 compcert.common.Memtype <> f var
R38884:38886 Coq.Init.Logic <> :type_scope:x_'='_x not
R38862:38866 compcert.common.Memtype MEM store defax
R38883:38883 compcert.common.Memtype <> v var
R38879:38881 compcert.common.Memtype <> ofs var
R38877:38877 compcert.common.Memtype <> b var
R38874:38875 compcert.common.Memtype <> m2 var
R38868:38872 compcert.common.Memtype <> chunk var
R38887:38890 Coq.Init.Datatypes <> Some constr
R38892:38894 compcert.common.Memtype <> m2' var
R38850:38854 Coq.Init.Logic <> False ind
R38805:38808 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38821:38823 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R38802:38804 compcert.common.Memtype <> ofs var
R38813:38815 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38809:38812 compcert.common.Memtype <> ofs' var
R38816:38820 compcert.common.Memtype <> delta var
R38813:38815 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38809:38812 compcert.common.Memtype <> ofs' var
R38816:38820 compcert.common.Memtype <> delta var
R38827:38829 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R38824:38826 compcert.common.Memtype <> ofs var
R38830:38839 compcert.common.Memdata <> size_chunk def
R38841:38845 compcert.common.Memtype <> chunk var
R38766:38769 compcert.common.Memtype MEM perm defax
R38786:38793 compcert.common.Memtype MEM Readable constr
R38782:38784 compcert.common.Memtype MEM Cur constr
R38777:38780 compcert.common.Memtype <> ofs' var
R38774:38775 compcert.common.Memtype <> b' var
R38771:38772 compcert.common.Memtype <> m1 var
R38741:38743 Coq.Init.Logic <> :type_scope:x_'='_x not
R38737:38737 compcert.common.Memtype <> f var
R38739:38740 compcert.common.Memtype <> b' var
R38744:38747 Coq.Init.Datatypes <> Some constr
R38748:38748 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38750:38751 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38757:38757 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38749:38749 compcert.common.Memtype <> b var
R38752:38756 compcert.common.Memtype <> delta var
R38690:38695 compcert.common.Memtype MEM inject defax
R38702:38703 compcert.common.Memtype <> m2 var
R38699:38700 compcert.common.Memtype <> m1 var
R38697:38697 compcert.common.Memtype <> f var
ax 38925:38944 MEM storev_mapped_inject
R39093:39099 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39102:39107 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39139:39142 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39129:39131 Coq.Init.Logic <> :type_scope:x_'='_x not
R39108:39113 compcert.common.Memtype MEM storev def
R39127:39128 compcert.common.Memtype <> v2 var
R39124:39125 compcert.common.Memtype <> a2 var
R39121:39122 compcert.common.Memtype <> m2 var
R39115:39119 compcert.common.Memtype <> chunk var
R39132:39135 Coq.Init.Datatypes <> Some constr
R39137:39138 compcert.common.Memtype <> n2 var
R39143:39148 compcert.common.Memtype MEM inject defax
R39155:39156 compcert.common.Memtype <> n2 var
R39152:39153 compcert.common.Memtype <> n1 var
R39150:39150 compcert.common.Memtype <> f var
R39069:39078 compcert.common.Values <> val_inject ind
R39085:39086 compcert.common.Memtype <> v2 var
R39082:39083 compcert.common.Memtype <> v1 var
R39080:39080 compcert.common.Memtype <> f var
R39045:39054 compcert.common.Values <> val_inject ind
R39061:39062 compcert.common.Memtype <> a2 var
R39058:39059 compcert.common.Memtype <> a1 var
R39056:39056 compcert.common.Memtype <> f var
R39029:39031 Coq.Init.Logic <> :type_scope:x_'='_x not
R39008:39013 compcert.common.Memtype MEM storev def
R39027:39028 compcert.common.Memtype <> v1 var
R39024:39025 compcert.common.Memtype <> a1 var
R39021:39022 compcert.common.Memtype <> m1 var
R39015:39019 compcert.common.Memtype <> chunk var
R39032:39035 Coq.Init.Datatypes <> Some constr
R39037:39038 compcert.common.Memtype <> n1 var
R38988:38993 compcert.common.Memtype MEM inject defax
R39000:39001 compcert.common.Memtype <> m2 var
R38997:38998 compcert.common.Memtype <> m1 var
R38995:38995 compcert.common.Memtype <> f var
ax 39166:39189 MEM storebytes_mapped_inject
R39387:39393 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39396:39401 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39449:39456 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39439:39441 Coq.Init.Logic <> :type_scope:x_'='_x not
R39402:39411 compcert.common.Memtype MEM storebytes defax
R39433:39438 compcert.common.Memtype <> bytes2 var
R39423:39425 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39420:39422 compcert.common.Memtype <> ofs var
R39426:39430 compcert.common.Memtype <> delta var
R39416:39417 compcert.common.Memtype <> b2 var
R39413:39414 compcert.common.Memtype <> m2 var
R39442:39445 Coq.Init.Datatypes <> Some constr
R39447:39448 compcert.common.Memtype <> n2 var
R39457:39462 compcert.common.Memtype MEM inject defax
R39469:39470 compcert.common.Memtype <> n2 var
R39466:39467 compcert.common.Memtype <> n1 var
R39464:39464 compcert.common.Memtype <> f var
R39337:39348 compcert.lib.Coqlib <> list_forall2 ind
R39375:39380 compcert.common.Memtype <> bytes2 var
R39368:39373 compcert.common.Memtype <> bytes1 var
R39351:39363 compcert.common.Memdata <> memval_inject ind
R39365:39365 compcert.common.Memtype <> f var
R39312:39314 Coq.Init.Logic <> :type_scope:x_'='_x not
R39308:39308 compcert.common.Memtype <> f var
R39310:39311 compcert.common.Memtype <> b1 var
R39315:39318 Coq.Init.Datatypes <> Some constr
R39320:39320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39323:39324 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39330:39330 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39321:39322 compcert.common.Memtype <> b2 var
R39325:39329 compcert.common.Memtype <> delta var
R39292:39294 Coq.Init.Logic <> :type_scope:x_'='_x not
R39265:39274 compcert.common.Memtype MEM storebytes defax
R39286:39291 compcert.common.Memtype <> bytes1 var
R39282:39284 compcert.common.Memtype <> ofs var
R39279:39280 compcert.common.Memtype <> b1 var
R39276:39277 compcert.common.Memtype <> m1 var
R39295:39298 Coq.Init.Datatypes <> Some constr
R39300:39301 compcert.common.Memtype <> n1 var
R39245:39250 compcert.common.Memtype MEM inject defax
R39257:39258 compcert.common.Memtype <> m2 var
R39254:39255 compcert.common.Memtype <> m1 var
R39252:39252 compcert.common.Memtype <> f var
ax 39480:39505 MEM storebytes_unmapped_inject
R39625:39630 compcert.common.Memtype MEM inject defax
R39637:39638 compcert.common.Memtype <> m2 var
R39634:39635 compcert.common.Memtype <> n1 var
R39632:39632 compcert.common.Memtype <> f var
R39612:39614 Coq.Init.Logic <> :type_scope:x_'='_x not
R39608:39608 compcert.common.Memtype <> f var
R39610:39611 compcert.common.Memtype <> b1 var
R39615:39618 Coq.Init.Datatypes <> None constr
R39592:39594 Coq.Init.Logic <> :type_scope:x_'='_x not
R39565:39574 compcert.common.Memtype MEM storebytes defax
R39586:39591 compcert.common.Memtype <> bytes1 var
R39582:39584 compcert.common.Memtype <> ofs var
R39579:39580 compcert.common.Memtype <> b1 var
R39576:39577 compcert.common.Memtype <> m1 var
R39595:39598 Coq.Init.Datatypes <> Some constr
R39600:39601 compcert.common.Memtype <> n1 var
R39545:39550 compcert.common.Memtype MEM inject defax
R39557:39558 compcert.common.Memtype <> m2 var
R39554:39555 compcert.common.Memtype <> m1 var
R39552:39552 compcert.common.Memtype <> f var
ax 39648:39672 MEM storebytes_outside_inject
R39935:39940 compcert.common.Memtype MEM inject defax
R39947:39949 compcert.common.Memtype <> m2' var
R39944:39945 compcert.common.Memtype <> m1 var
R39942:39942 compcert.common.Memtype <> f var
R39918:39920 Coq.Init.Logic <> :type_scope:x_'='_x not
R39892:39901 compcert.common.Memtype MEM storebytes defax
R39912:39917 compcert.common.Memtype <> bytes2 var
R39908:39910 compcert.common.Memtype <> ofs var
R39906:39906 compcert.common.Memtype <> b var
R39903:39904 compcert.common.Memtype <> m2 var
R39921:39924 Coq.Init.Datatypes <> Some constr
R39926:39928 compcert.common.Memtype <> m2' var
R39880:39884 Coq.Init.Logic <> False ind
R39827:39830 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R39843:39845 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R39824:39826 compcert.common.Memtype <> ofs var
R39835:39837 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39831:39834 compcert.common.Memtype <> ofs' var
R39838:39842 compcert.common.Memtype <> delta var
R39835:39837 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39831:39834 compcert.common.Memtype <> ofs' var
R39838:39842 compcert.common.Memtype <> delta var
R39849:39851 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R39846:39848 compcert.common.Memtype <> ofs var
R39852:39859 Coq.ZArith.BinInt <> Z_of_nat syndef
R39862:39867 Coq.Init.Datatypes <> length def
R39869:39874 compcert.common.Memtype <> bytes2 var
R39788:39791 compcert.common.Memtype MEM perm defax
R39808:39815 compcert.common.Memtype MEM Readable constr
R39804:39806 compcert.common.Memtype MEM Cur constr
R39799:39802 compcert.common.Memtype <> ofs' var
R39796:39797 compcert.common.Memtype <> b' var
R39793:39794 compcert.common.Memtype <> m1 var
R39763:39765 Coq.Init.Logic <> :type_scope:x_'='_x not
R39759:39759 compcert.common.Memtype <> f var
R39761:39762 compcert.common.Memtype <> b' var
R39766:39769 Coq.Init.Datatypes <> Some constr
R39770:39770 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39772:39773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39779:39779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39771:39771 compcert.common.Memtype <> b var
R39774:39778 compcert.common.Memtype <> delta var
R39712:39717 compcert.common.Memtype MEM inject defax
R39724:39725 compcert.common.Memtype <> m2 var
R39721:39722 compcert.common.Memtype <> m1 var
R39719:39719 compcert.common.Memtype <> f var
ax 39959:39976 MEM alloc_right_inject
R40064:40069 compcert.common.Memtype MEM inject defax
R40076:40078 compcert.common.Memtype <> m2' var
R40073:40074 compcert.common.Memtype <> m1 var
R40071:40071 compcert.common.Memtype <> f var
R40046:40048 Coq.Init.Logic <> :type_scope:x_'='_x not
R40032:40036 compcert.common.Memtype MEM alloc defax
R40044:40045 compcert.common.Memtype <> hi var
R40041:40042 compcert.common.Memtype <> lo var
R40038:40039 compcert.common.Memtype <> m2 var
R40049:40049 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40053:40054 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40057:40057 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40050:40052 compcert.common.Memtype <> m2' var
R40055:40056 compcert.common.Memtype <> b2 var
R40012:40017 compcert.common.Memtype MEM inject defax
R40024:40025 compcert.common.Memtype <> m2 var
R40021:40022 compcert.common.Memtype <> m1 var
R40019:40019 compcert.common.Memtype <> f var
ax 40088:40113 MEM alloc_left_unmapped_inject
R40201:40207 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40210:40216 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40233:40238 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40217:40222 compcert.common.Memtype MEM inject defax
R40231:40232 compcert.common.Memtype <> m2 var
R40227:40229 compcert.common.Memtype <> m1' var
R40224:40225 compcert.common.Memtype <> f' var
R40255:40260 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40239:40249 compcert.common.Values <> inject_incr def
R40253:40254 compcert.common.Memtype <> f' var
R40251:40251 compcert.common.Memtype <> f var
R40273:40279 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40311:40311 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40266:40268 Coq.Init.Logic <> :type_scope:x_'='_x not
R40261:40262 compcert.common.Memtype <> f' var
R40264:40265 compcert.common.Memtype <> b1 var
R40269:40272 Coq.Init.Datatypes <> None constr
R40305:40307 Coq.Init.Logic <> :type_scope:x_'='_x not
R40301:40302 compcert.common.Memtype <> f' var
R40304:40304 compcert.common.Memtype <> b var
R40308:40308 compcert.common.Memtype <> f var
R40310:40310 compcert.common.Memtype <> b var
R40291:40294 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40290:40290 compcert.common.Memtype <> b var
R40295:40296 compcert.common.Memtype <> b1 var
R40183:40185 Coq.Init.Logic <> :type_scope:x_'='_x not
R40169:40173 compcert.common.Memtype MEM alloc defax
R40181:40182 compcert.common.Memtype <> hi var
R40178:40179 compcert.common.Memtype <> lo var
R40175:40176 compcert.common.Memtype <> m1 var
R40186:40186 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40190:40191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40194:40194 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40187:40189 compcert.common.Memtype <> m1' var
R40192:40193 compcert.common.Memtype <> b1 var
R40149:40154 compcert.common.Memtype MEM inject defax
R40161:40162 compcert.common.Memtype <> m2 var
R40158:40159 compcert.common.Memtype <> m1 var
R40156:40156 compcert.common.Memtype <> f var
def 40326:40343 MEM inj_offset_aligned
R40353:40353 Coq.Numbers.BinNums <> Z ind
R40363:40363 Coq.Numbers.BinNums <> Z ind
R40420:40420 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R40438:40440 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R40446:40446 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R40421:40431 compcert.common.Memdata <> align_chunk def
R40433:40437 compcert.common.Memtype <> chunk var
R40441:40445 compcert.common.Memtype <> delta var
R40408:40411 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R40392:40401 compcert.common.Memdata <> size_chunk def
R40403:40407 compcert.common.Memtype <> chunk var
R40412:40415 compcert.common.Memtype <> size var
ax 40456:40479 MEM alloc_left_mapped_inject
R40968:40974 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40977:40983 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41000:41005 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40984:40989 compcert.common.Memtype MEM inject defax
R40998:40999 compcert.common.Memtype <> m2 var
R40994:40996 compcert.common.Memtype <> m1' var
R40991:40992 compcert.common.Memtype <> f' var
R41022:41027 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41006:41016 compcert.common.Values <> inject_incr def
R41020:41021 compcert.common.Memtype <> f' var
R41018:41018 compcert.common.Memtype <> f var
R41051:41057 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41089:41089 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41033:41035 Coq.Init.Logic <> :type_scope:x_'='_x not
R41028:41029 compcert.common.Memtype <> f' var
R41031:41032 compcert.common.Memtype <> b1 var
R41036:41039 Coq.Init.Datatypes <> Some constr
R41040:41040 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41043:41044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41050:41050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41041:41042 compcert.common.Memtype <> b2 var
R41045:41049 compcert.common.Memtype <> delta var
R41083:41085 Coq.Init.Logic <> :type_scope:x_'='_x not
R41079:41080 compcert.common.Memtype <> f' var
R41082:41082 compcert.common.Memtype <> b var
R41086:41086 compcert.common.Memtype <> f var
R41088:41088 compcert.common.Memtype <> b var
R41069:41072 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41068:41068 compcert.common.Memtype <> b var
R41073:41074 compcert.common.Memtype <> b1 var
R40956:40960 Coq.Init.Logic <> False ind
R40923:40926 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40939:40941 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40915:40917 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40913:40914 compcert.common.Memtype <> lo var
R40918:40922 compcert.common.Memtype <> delta var
R40930:40932 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40927:40929 compcert.common.Memtype <> ofs var
R40933:40938 compcert.common.Memtype <> delta' var
R40930:40932 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40927:40929 compcert.common.Memtype <> ofs var
R40933:40938 compcert.common.Memtype <> delta' var
R40944:40946 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40942:40943 compcert.common.Memtype <> hi var
R40947:40951 compcert.common.Memtype <> delta var
R40889:40892 compcert.common.Memtype MEM perm defax
R40905:40905 compcert.common.Memtype <> p var
R40903:40903 compcert.common.Memtype <> k var
R40899:40901 compcert.common.Memtype <> ofs var
R40897:40897 compcert.common.Memtype <> b var
R40894:40895 compcert.common.Memtype <> m1 var
R40861:40863 Coq.Init.Logic <> :type_scope:x_'='_x not
R40858:40858 compcert.common.Memtype <> f var
R40860:40860 compcert.common.Memtype <> b var
R40864:40867 Coq.Init.Datatypes <> Some constr
R40869:40869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40872:40873 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40880:40880 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40870:40871 compcert.common.Memtype <> b2 var
R40874:40879 compcert.common.Memtype <> delta' var
R40791:40808 compcert.common.Memtype MEM inj_offset_aligned def
R40819:40819 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R40817:40818 compcert.common.Memtype <> hi var
R40820:40821 compcert.common.Memtype <> lo var
R40810:40814 compcert.common.Memtype <> delta var
R40756:40759 compcert.common.Memtype MEM perm defax
R40783:40783 compcert.common.Memtype <> p var
R40781:40781 compcert.common.Memtype <> k var
R40771:40773 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R40768:40770 compcert.common.Memtype <> ofs var
R40774:40778 compcert.common.Memtype <> delta var
R40764:40765 compcert.common.Memtype <> b2 var
R40761:40762 compcert.common.Memtype <> m2 var
R40740:40743 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40747:40749 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40738:40739 compcert.common.Memtype <> lo var
R40744:40746 compcert.common.Memtype <> ofs var
R40744:40746 compcert.common.Memtype <> ofs var
R40750:40751 compcert.common.Memtype <> hi var
R40683:40686 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R40679:40681 Coq.Init.Logic <> :type_scope:x_'='_x not
R40674:40678 compcert.common.Memtype <> delta var
R40688:40691 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40695:40697 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R40692:40694 compcert.common.Memtype <> ofs var
R40692:40694 compcert.common.Memtype <> ofs var
R40698:40713 compcert.lib.Integers Int max_unsigned def
R40652:40655 compcert.common.Memtype MEM perm defax
R40669:40669 compcert.common.Memtype <> p var
R40667:40667 compcert.common.Memtype <> k var
R40663:40665 compcert.common.Memtype <> ofs var
R40660:40661 compcert.common.Memtype <> b2 var
R40657:40658 compcert.common.Memtype <> m2 var
R40600:40603 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R40609:40612 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R40604:40608 compcert.common.Memtype <> delta var
R40604:40608 compcert.common.Memtype <> delta var
R40613:40628 compcert.lib.Integers Int max_unsigned def
R40576:40586 compcert.common.Memtype MEM valid_block def
R40591:40592 compcert.common.Memtype <> b2 var
R40588:40589 compcert.common.Memtype <> m2 var
R40558:40560 Coq.Init.Logic <> :type_scope:x_'='_x not
R40544:40548 compcert.common.Memtype MEM alloc defax
R40556:40557 compcert.common.Memtype <> hi var
R40553:40554 compcert.common.Memtype <> lo var
R40550:40551 compcert.common.Memtype <> m1 var
R40561:40561 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40565:40566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40569:40569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40562:40564 compcert.common.Memtype <> m1' var
R40567:40568 compcert.common.Memtype <> b1 var
R40524:40529 compcert.common.Memtype MEM inject defax
R40536:40537 compcert.common.Memtype <> m2 var
R40533:40534 compcert.common.Memtype <> m1 var
R40531:40531 compcert.common.Memtype <> f var
ax 41099:41119 MEM alloc_parallel_inject
R41249:41255 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41258:41259 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41260:41266 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41270:41271 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41272:41278 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41281:41284 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41313:41318 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41301:41303 Coq.Init.Logic <> :type_scope:x_'='_x not
R41285:41289 compcert.common.Memtype MEM alloc defax
R41298:41300 compcert.common.Memtype <> hi2 var
R41294:41296 compcert.common.Memtype <> lo2 var
R41291:41292 compcert.common.Memtype <> m2 var
R41304:41304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41308:41309 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41312:41312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41305:41307 compcert.common.Memtype <> m2' var
R41310:41311 compcert.common.Memtype <> b2 var
R41336:41341 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41319:41324 compcert.common.Memtype MEM inject defax
R41333:41335 compcert.common.Memtype <> m2' var
R41329:41331 compcert.common.Memtype <> m1' var
R41326:41327 compcert.common.Memtype <> f' var
R41358:41363 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41342:41352 compcert.common.Values <> inject_incr def
R41356:41357 compcert.common.Memtype <> f' var
R41354:41354 compcert.common.Memtype <> f var
R41383:41389 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41421:41421 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41369:41371 Coq.Init.Logic <> :type_scope:x_'='_x not
R41364:41365 compcert.common.Memtype <> f' var
R41367:41368 compcert.common.Memtype <> b1 var
R41372:41375 Coq.Init.Datatypes <> Some constr
R41376:41376 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41379:41380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41382:41382 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41377:41378 compcert.common.Memtype <> b2 var
R41415:41417 Coq.Init.Logic <> :type_scope:x_'='_x not
R41411:41412 compcert.common.Memtype <> f' var
R41414:41414 compcert.common.Memtype <> b var
R41418:41418 compcert.common.Memtype <> f var
R41420:41420 compcert.common.Memtype <> b var
R41401:41404 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41400:41400 compcert.common.Memtype <> b var
R41405:41406 compcert.common.Memtype <> b1 var
R41236:41239 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R41233:41235 compcert.common.Memtype <> hi1 var
R41240:41242 compcert.common.Memtype <> hi2 var
R41222:41225 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R41219:41221 compcert.common.Memtype <> lo2 var
R41226:41228 compcert.common.Memtype <> lo1 var
R41201:41203 Coq.Init.Logic <> :type_scope:x_'='_x not
R41185:41189 compcert.common.Memtype MEM alloc defax
R41198:41200 compcert.common.Memtype <> hi1 var
R41194:41196 compcert.common.Memtype <> lo1 var
R41191:41192 compcert.common.Memtype <> m1 var
R41204:41204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41208:41209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41212:41212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41205:41207 compcert.common.Memtype <> m1' var
R41210:41211 compcert.common.Memtype <> b1 var
R41165:41170 compcert.common.Memtype MEM inject defax
R41177:41178 compcert.common.Memtype <> m2 var
R41174:41175 compcert.common.Memtype <> m1 var
R41172:41172 compcert.common.Memtype <> f var
ax 41431:41441 MEM free_inject
R41742:41747 compcert.common.Memtype MEM inject defax
R41755:41757 compcert.common.Memtype <> m2' var
R41751:41753 compcert.common.Memtype <> m1' var
R41749:41749 compcert.common.Memtype <> f var
R41672:41678 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41682:41683 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41684:41690 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41694:41695 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41715:41718 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R41696:41697 Coq.Lists.List <> In def
R41714:41714 compcert.common.Memtype <> l var
R41699:41699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41702:41703 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41707:41708 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41712:41712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41700:41701 compcert.common.Memtype <> b1 var
R41704:41706 compcert.common.Memtype <> lo1 var
R41709:41711 compcert.common.Memtype <> hi1 var
R41722:41725 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41729:41731 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41719:41721 compcert.common.Memtype <> lo1 var
R41726:41728 compcert.common.Memtype <> ofs var
R41726:41728 compcert.common.Memtype <> ofs var
R41732:41734 compcert.common.Memtype <> hi1 var
R41644:41647 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41659:41661 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41642:41643 compcert.common.Memtype <> lo var
R41651:41653 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41648:41650 compcert.common.Memtype <> ofs var
R41654:41658 compcert.common.Memtype <> delta var
R41651:41653 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41648:41650 compcert.common.Memtype <> ofs var
R41654:41658 compcert.common.Memtype <> delta var
R41662:41663 compcert.common.Memtype <> hi var
R41620:41623 compcert.common.Memtype MEM perm defax
R41637:41637 compcert.common.Memtype <> p var
R41635:41635 compcert.common.Memtype <> k var
R41631:41633 compcert.common.Memtype <> ofs var
R41628:41629 compcert.common.Memtype <> b1 var
R41625:41626 compcert.common.Memtype <> m1 var
R41599:41601 Coq.Init.Logic <> :type_scope:x_'='_x not
R41595:41595 compcert.common.Memtype <> f var
R41597:41598 compcert.common.Memtype <> b1 var
R41602:41605 Coq.Init.Datatypes <> Some constr
R41606:41606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41608:41609 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41615:41615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41607:41607 compcert.common.Memtype <> b var
R41610:41614 compcert.common.Memtype <> delta var
R41548:41550 Coq.Init.Logic <> :type_scope:x_'='_x not
R41533:41536 compcert.common.Memtype MEM free defax
R41546:41547 compcert.common.Memtype <> hi var
R41543:41544 compcert.common.Memtype <> lo var
R41541:41541 compcert.common.Memtype <> b var
R41538:41539 compcert.common.Memtype <> m2 var
R41551:41554 Coq.Init.Datatypes <> Some constr
R41556:41558 compcert.common.Memtype <> m2' var
R41516:41518 Coq.Init.Logic <> :type_scope:x_'='_x not
R41502:41510 compcert.common.Memtype MEM free_list def
R41515:41515 compcert.common.Memtype <> l var
R41512:41513 compcert.common.Memtype <> m1 var
R41519:41522 Coq.Init.Datatypes <> Some constr
R41524:41526 compcert.common.Memtype <> m1' var
R41482:41487 compcert.common.Memtype MEM inject defax
R41494:41495 compcert.common.Memtype <> m2 var
R41491:41492 compcert.common.Memtype <> m1 var
R41489:41489 compcert.common.Memtype <> f var
ax 41767:41785 MEM drop_outside_inject
R42002:42007 compcert.common.Memtype MEM inject defax
R42014:42016 compcert.common.Memtype <> m2' var
R42011:42012 compcert.common.Memtype <> m1 var
R42009:42009 compcert.common.Memtype <> f var
R41990:41994 Coq.Init.Logic <> False ind
R41966:41969 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41981:41983 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R41964:41965 compcert.common.Memtype <> lo var
R41973:41975 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41970:41972 compcert.common.Memtype <> ofs var
R41976:41980 compcert.common.Memtype <> delta var
R41973:41975 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R41970:41972 compcert.common.Memtype <> ofs var
R41976:41980 compcert.common.Memtype <> delta var
R41984:41985 compcert.common.Memtype <> hi var
R41942:41945 compcert.common.Memtype MEM perm defax
R41959:41959 compcert.common.Memtype <> p var
R41957:41957 compcert.common.Memtype <> k var
R41953:41955 compcert.common.Memtype <> ofs var
R41950:41951 compcert.common.Memtype <> b' var
R41947:41948 compcert.common.Memtype <> m1 var
R41917:41919 Coq.Init.Logic <> :type_scope:x_'='_x not
R41913:41913 compcert.common.Memtype <> f var
R41915:41916 compcert.common.Memtype <> b' var
R41920:41923 Coq.Init.Datatypes <> Some constr
R41924:41924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41926:41927 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41933:41933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41925:41925 compcert.common.Memtype <> b var
R41928:41932 compcert.common.Memtype <> delta var
R41865:41867 Coq.Init.Logic <> :type_scope:x_'='_x not
R41843:41851 compcert.common.Memtype MEM drop_perm defax
R41864:41864 compcert.common.Memtype <> p var
R41861:41862 compcert.common.Memtype <> hi var
R41858:41859 compcert.common.Memtype <> lo var
R41856:41856 compcert.common.Memtype <> b var
R41853:41854 compcert.common.Memtype <> m2 var
R41868:41871 Coq.Init.Datatypes <> Some constr
R41873:41875 compcert.common.Memtype <> m2' var
R41822:41827 compcert.common.Memtype MEM inject defax
R41834:41835 compcert.common.Memtype <> m2 var
R41831:41832 compcert.common.Memtype <> m1 var
R41829:41829 compcert.common.Memtype <> f var
def 42082:42089 MEM flat_inj
R42097:42101 compcert.common.Values <> block def
R42106:42111 compcert.common.Values <> meminj def
R42126:42130 compcert.common.Values <> block def
R42139:42141 compcert.lib.Coqlib <> plt def
R42145:42147 compcert.common.Memtype <> thr var
R42143:42143 compcert.common.Memtype <> b var
R42170:42173 Coq.Init.Datatypes <> None constr
R42154:42157 Coq.Init.Datatypes <> Some constr
R42158:42158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42160:42161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42163:42163 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42159:42159 compcert.common.Memtype <> b var
ax 42187:42200 MEM inject_neutral
R42216:42220 compcert.common.Values <> block def
R42227:42229 compcert.common.Memtype MEM mem defax
ax 42246:42259 MEM neutral_inject
R42310:42315 compcert.common.Memtype MEM inject defax
R42344:42344 compcert.common.Memtype <> m var
R42342:42342 compcert.common.Memtype <> m var
R42318:42325 compcert.common.Memtype MEM flat_inj def
R42328:42336 compcert.common.Memtype MEM nextblock defax
R42338:42338 compcert.common.Memtype <> m var
R42274:42287 compcert.common.Memtype MEM inject_neutral defax
R42303:42303 compcert.common.Memtype <> m var
R42290:42298 compcert.common.Memtype MEM nextblock defax
R42300:42300 compcert.common.Memtype <> m var
ax 42354:42373 MEM empty_inject_neutral
R42390:42403 compcert.common.Memtype MEM inject_neutral defax
R42409:42413 compcert.common.Memtype MEM empty defax
R42405:42407 compcert.common.Memtype <> thr var
ax 42423:42442 MEM alloc_inject_neutral
R42556:42569 compcert.common.Memtype MEM inject_neutral defax
R42575:42576 compcert.common.Memtype <> m' var
R42571:42573 compcert.common.Memtype <> thr var
R42529:42531 compcert.lib.Coqlib <> Plt def
R42547:42549 compcert.common.Memtype <> thr var
R42534:42542 compcert.common.Memtype MEM nextblock defax
R42544:42544 compcert.common.Memtype <> m var
R42503:42516 compcert.common.Memtype MEM inject_neutral defax
R42522:42522 compcert.common.Memtype <> m var
R42518:42520 compcert.common.Memtype <> thr var
R42487:42489 Coq.Init.Logic <> :type_scope:x_'='_x not
R42474:42478 compcert.common.Memtype MEM alloc defax
R42485:42486 compcert.common.Memtype <> hi var
R42482:42483 compcert.common.Memtype <> lo var
R42480:42480 compcert.common.Memtype <> m var
R42490:42490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42493:42494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42496:42496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42491:42492 compcert.common.Memtype <> m' var
R42495:42495 compcert.common.Memtype <> b var
ax 42586:42605 MEM store_inject_neutral
R42756:42769 compcert.common.Memtype MEM inject_neutral defax
R42775:42776 compcert.common.Memtype <> m' var
R42771:42773 compcert.common.Memtype <> thr var
R42721:42730 compcert.common.Values <> val_inject ind
R42749:42749 compcert.common.Memtype <> v var
R42747:42747 compcert.common.Memtype <> v var
R42733:42740 compcert.common.Memtype MEM flat_inj def
R42742:42744 compcert.common.Memtype <> thr var
R42706:42708 compcert.lib.Coqlib <> Plt def
R42712:42714 compcert.common.Memtype <> thr var
R42710:42710 compcert.common.Memtype <> b var
R42680:42693 compcert.common.Memtype MEM inject_neutral defax
R42699:42699 compcert.common.Memtype <> m var
R42695:42697 compcert.common.Memtype <> thr var
R42664:42666 Coq.Init.Logic <> :type_scope:x_'='_x not
R42643:42647 compcert.common.Memtype MEM store defax
R42663:42663 compcert.common.Memtype <> v var
R42659:42661 compcert.common.Memtype <> ofs var
R42657:42657 compcert.common.Memtype <> b var
R42655:42655 compcert.common.Memtype <> m var
R42649:42653 compcert.common.Memtype <> chunk var
R42667:42670 Coq.Init.Datatypes <> Some constr
R42672:42673 compcert.common.Memtype <> m' var
ax 42786:42804 MEM drop_inject_neutral
R42916:42929 compcert.common.Memtype MEM inject_neutral defax
R42935:42936 compcert.common.Memtype <> m' var
R42931:42933 compcert.common.Memtype <> thr var
R42901:42903 compcert.lib.Coqlib <> Plt def
R42907:42909 compcert.common.Memtype <> thr var
R42905:42905 compcert.common.Memtype <> b var
R42875:42888 compcert.common.Memtype MEM inject_neutral defax
R42894:42894 compcert.common.Memtype <> m var
R42890:42892 compcert.common.Memtype <> thr var
R42859:42861 Coq.Init.Logic <> :type_scope:x_'='_x not
R42838:42846 compcert.common.Memtype MEM drop_perm defax
R42858:42858 compcert.common.Memtype <> p var
R42855:42856 compcert.common.Memtype <> hi var
R42852:42853 compcert.common.Memtype <> lo var
R42850:42850 compcert.common.Memtype <> b var
R42848:42848 compcert.common.Memtype <> m var
R42862:42865 Coq.Init.Datatypes <> Some constr
R42867:42868 compcert.common.Memtype <> m' var
R42944:42946 compcert.common.Memtype <> <> modtype
