9/30/15
* cloned FCF and got it to check
* TODO read ElGamal

9/31/15
* nothing

10/1/15
* started responding to naphat's email
* read his notes
* starting to write email for next week's meeting
* proposal is due next tuesday
  (I should send it Monday morning)
* TODO make a comprehensive TODO list
* TODO thesis every day
* TODO learn probability. read proofs.
* TODO send these two emails ASAP

10/2/15
* responded to naphat's email
* made comprehensive TODO list
* wrote proposal except for related work

10/3/15
* finished proposal and sent it
* sent meeting email
* started reading fcf paper, realized it's not the most impt. thing right now
* read next two pages of HMAC-DRBG paper. lucid up to proof. is it game-based?

10/4/15
* nothing, clashed with ELE pset and CWR assignment

10/5/15
* checked out the two crypto coursera classes; decided on boneh's; watched most of the first lecture on PRGs
* submitted project proposal
* GOAL: watch coursera videos, do the exercises, be able to point to a specific area of HMAC proof that I'm stuck on.

10/6/15
* none, opted to work in morning instead

10/7/15
* morning: finished PRG intro, watched first half of PRG security definitions. we're proving security GIVEN THAT HMAC is secure (given that hash function is secure). actual security would imply P != NP
* night: (~3.5 hrs)
  - finished PRG security defs: adversary as statistical test, secure IFF unpredictable (Yao's theorem)
  - realized that goldwasser (?)'s book is a real and long textbook, not just the 30 pages of notes i have. ordered/downlowded it
  - checked out HMAC proof 1: confusing
  - checked out HMAC proof 2: lucid! random oracle model bad? 
    - hash-based DRBG proof first, then HMAC's?
* TODO: HMAC proof 2, semantic security, el-gamal, game-based crypto reduction proofs, goldwasser book, **figure out where i get stuck on a proof**

10/10/15
* good progress: read HMAC proof 2 paper and understood the proofs.
* they were surprisingly simple. converting random oracle model proofs to game-based proofs? how does this differ from HMAC proof 2? can this be formalized?
* HMAC-DRBG algorithm itself is surprisingly simple: V_{i+1} = HMAC(K, V_i); bits_{i+1} = bits_i || V_{i+1}.
* TODO: write up and send progress. next steps??

10/9/15
* sent email with summary of progress and three questions (on HMAC proof 2) to advisors
* meetings with matt/andrew/lennart and with dave
  * need to learn about better crypto models/proofs than the unreliable random oracle proofs in the paper
* transcribed notes and TODOs from meetings

10/10/15
* not much today. TIL: start the day with the most important work (thesis) not the least important (emails)
* posted on zulip about progress. really appreciated katrina's comment on how much of a cool opportunity this is (both to learn and to contribute) + how interesting my work is to an outsider!
* end-of-day: looked at matt's paper, opened wikipedia tab on "provable security." CPA, CCA = ?
  * math gets real in pages 7, 11
* read this SE on cryptographic oracles: they leak partial info https://security.stackexchange.com/questions/10617/what-is-a-cryptographic-oracle

10/11/15
* thesis'd early!
* read first few pages of symmetric encryption provable security paper (SEPS)

10/12/15
* thesis'd early!
* read more pages of SEPS paper. understood notation, approaching math... 
* need to read FCF

10/13/15
* nothing: ORF pset, pushed it off until morning

10/14/15
* morning: read next page of SEPS paper (LOR-CPA, CCA definition)
* evening: ~4 hours on paper. definitions are easy, understood semantic security
  * stuck on proof that adv(LOR-CPA) <= 2 adv(ROR-CPA). or is it the other way around? i think the intuition should be easy (solving real-or-random with left-or-right) but i don't understand the oracle simulation. 
  * also looked at XOR proofs. can i understand them? the theorem seems okay
* flipped through new goldreich book
* also: the diffie-hellman CCS paper is incredible
* TODO: FCF paper, FCF code, rest of this paper, go back to HMAC proof and try it

10/15/15
* spent the day on writing my research statement for CRA; decided to sleep early

10/16/15
* read symenc and FCF papers, skyped with matt, learned a lot (see notes)
  * it was very helpful to have understood the LOR/ROR definitions and seen the FCF security proof!
  * what could I have done better? read more of both papers, probably
* transcribed (most of) my notes

10/17/15
* tried reading some of FCF paper, didn't get far

10/18/15
* nothing on thesis
* worked on NSF proposal and talked with mario. to look into: featherweight synthesis and cryptoverif (prosecco)

10/19/15
* read a bit of FCF paper
* should prepare some ideas for PLV meeting

10/21/15
* got FCF import to work in code
* wrote HMAC_DRBG types/functions/API spec pseudocode and inner Generate loop implementation
* added naphat's code

10/22/15
* spent the night and day writing my NSF essays, finished and sent them
* but wasn't able to do enough work to have questions for the meeting

10/23/15
* read adam's paper. understood game 1 -> game 2 mostly
* looked through code for game 1, confused about types (mostly the () _ _ ...)
* found a paper PRF proof to look through
* not very efficient but i did learn things

10/23-10/27: nothing

10/28/15
* read rest of section on proof (took too long)
* stuck on "bad event." my thought was that it would be when the random function is called with input it's already been called with (so then it returns the same output instead of a new randomly sampled thing)
* skimmed adam's code. saw/understood part of the bad event, but 2nd adversary event??
* TODO: bellare paper on "until-bad"
* TODO: read the paper proof, look at adam's code, finish my dep types spec, paper proof of its correctness, attempt game-based proof

10/29/15
* (earlier: close-read adam's paper and looked at his code, also USENIX paper section)
* wrote rough sequence of games for HMAC-DRBG
  * confused by HMAC collision probability. birthday attack? (not similar to expression) or just 1/2^{HMAC output size}? (hirose p8)
  * confused about the bad events: 1. RF -> truly random (memoizing); 2. HMAC output equals any of the previous inputs/outputs (= outputs cycle)
  * any other bad events?
* confused about how to approach the first block (simplest possible example)
  * true by assumption? what PRF strength def? adam only has advantage
  * also, 2 blocks
* looked at bellare paper
  * OK until bad; look at and do the PRP/PRF switching lemma?
  * has lots of useful proof tactics
* coq stuck: writing vector version of loop; writing PRF game with sampling random functions
* TODO: clean code, write progress email
* TODO: consider proofs for the more complicated versions of the PRG (esp. reseed/update) 
* TODO: write the full spec
* TODO: work hard on this earlier so i can ask matt questions

10/30/15
* wrote long questions email
* met with Andrew and Lennart (Matt couldn't make it)
* transcribed notes
* some progress on sampling functions and on FCF/loops (still need to email Adam)

10/31/15-11/2/15: nothing

11/3/15
* started IW progress checkpoint; updated progress
* should really be working on IW daily (though the approach of "work on only IW for an entire day" works pretty well too)

11/4/15
* meeting with matt
  * good progress. went over games, cleared up misunderstandings, looked at adam's paper, and came up with a clear new definition to write
* transcribed half of notes
* emailed adam about 4 questions

11/5/15
* at recurse center. sent checkpoint form

11/6/15
* nothing, GRE prep

11/7/15
* responded to matt and adam's emails; looked into CTR-DRBG
* PRF encryption proof induction?

11/8/15
* read adam's email, need to respond to it

11/9/15
* nothing

11/10/15
* responded to adam's email

11/11/15
* responded to adam's email
* need to work every day!!

11/12/15

TODO: read what adam did (up to line 400)
TODO: read adam's 2 emails
TODO: think about extension of proof for HMAC-DRBG
(TODO: in order: new scheme, new game defs (?), new proofs
then extend to loops, etc.)
TODO: review functions, oraclecomp, adversary types

- injection?
- do it myself?
- my current approach feels more reactive than active WRT math -- how to get back on track?

TODO: "paper crypto proofs"
TODO: continue learning about ...? backtracking resistance? better spec?

HMAC differences:
- computes new (key, v) after each total loop
- allows additional input
- HMAC re-seeds with new entropy after a certain number of calls (re-seed counter > re-seed interval)

- might like to figure out the max # blocks wanted

- can we prove backtracking resistance for this simple construction?
  at time n, we know K,V for time n/2, do we compromise time (0..n/2)
  intuitively no because given k,v (output) it's hard to guess k,v (input)
  unless bad events?

- i understand the overall proof outline; can you talk about the intermediate games? like how to put PRF in an oracle and why, comp_spec, ...
- intermediate steps in random function to random bits
- glossary of all the arrows?
- i haven't looked through the detailed proof tactics yet, can we do one on paper?

11/13/15
* separate meetings with matt and adam
* transcribed notes
* asked question on crypto stackexchange about backtracking resistance
https://crypto.stackexchange.com/questions/30546/if-a-prg-is-constructed-by-iterating-a-prf-is-it-backtracking-resistant 

https://security.stackexchange.com/questions/30170/after-how-much-data-encryption-aes-256-we-should-change-key 

https://crypto.stackexchange.com/questions/29966/is-pseudorandom-function-also-a-one-way-function

clear TODOs this time. work every day

11/14/15
* back here: https://crypto.stackexchange.com/questions/30546/if-a-prg-is-constructed-by-iterating-a-prf-is-it-backtracking-resistant
* looked at last answer. PRF = indistinguishable from a RANDOMLY CHOSEN FUNCTION over same domain (vs. output is indistinguishable from random)
why would we want to construct a PRF from a PRP
* oh okay, AES is clearly invertible if we know the key, and "is" a PRF?
* TODO: read adam's code, send email to matt

11/15/15
* nothing

11/16/15
* explained the hybrid argument to jean
* glanced at goldreich's book

11/17/15
* meeting with andrew, lennart, naphat
* talked about streams <-> sampling 
* should I write more of the functional spec?
* tried reasoning about the key changing. not sure what to do

11/18/15
* nothing (sent grad-school-related emails)

11/19
* went over step 4
* wrote backtracking resistance def

11/20
* meeting with matt
* transcribed notes

11/21
* "paired" with rose

11/22
* ??? nothing?

11/23
* emailed matt and adam

11/24
* good progress on reasoning about key changes. seems to reduce to the same collision-in-list argument. could re-seeding be the same argument?
  * TODO: transcribe notes
  * TODO: email matt and adam
  * TODO: study the math behind that argument
* good meeting with andrew and naphat
* transcribed notes
  * TODO: proof about non-dependence on entropy / deterministic calculability of # entropy bits needed as fn of generate
  * TODO: ask adam questions, ping matt

11/25
* opened some files
* forget to work on thesis due to ELE lab
* fixed build
* really need to email adam

11/26
* thesis work
* read FCF paper, learned about denotational semantics (actually understand the brackets) and some PRHL/PRPL, stuck on comp_spec definition
* read and re-did a lot of step 3! first proofs!
* note to self: stay up late two nights before the meeting, not one night

11/27
* thesis meeting
* matt: talked in skype about matt's new key change hybrid argument
  * (Instantiate, Generate, Update, Generate, Update, …) -> (Ideal_seed, Gen, Update, Gen, Update, …) -> (Ideal_seed, Gen, Ideal_seed, Gen, Ideal_seed …) 
  * trying to get concrete about the probabilities, a bit confused here
* adam: talked verbally about comp_spec
  * went over step 3 in fine-grained detail, which was very helpful
  * some magic with comp tactics using the induction hypotheses
  * also talked about the stream -> comp problems. turns out he did this with lists, also a cool proof relating semantics. TODO look at this

11/28
* not much. opened notes, realized i still need to transcribe notes, email matt, work steadily on step 4
* transcribed some progress

11/29
* nothing

11/30
* meeting with matt, half an hour
  * even in the ideal world, still have bad events. aldo going from updatedrbg to choosekey will also have bad events (PRF_advantage and THEN random function to random bits)
* TODO: ping him about email/detailed arguments
* TODO: ** look into how to do the hybrid arguments **
  * rewrite to have a separate function to randomly sample K and V (so we can use it) (and see notes in Skype)
  * how to do the "every other" inductive replacement?
  * does adam have the hybrid library? does he use it?
  * is RndInList OK? adversary picks the # calls, so different?

  * TODO how to start this? i have no idea. how to model call interleaving? adversary gets poly number of calls? games?
* TODO: respond to adam's email
* TODO: do step 4!

* also responded to adam's email, re-made fcf
* TODO fix merge conflicts

* emailed naphat
* TODO: look at naphat's spec, figure out proof on paper, and figure out how to compile

11/30
* meeting with andrew, naphat, and lennart
* meeting with jean yang (see notes)
* emailed matt about RNG

12/1
* i think i did something but i don't remember

12/2
* nothing

12/3
* nothing

12/4
* re-did step 3 proofs, started step 4

12/5
* went through step 4 in detail. important: list of inputs is being gotten from oracle state. also, identical until bad
* instead of emailing adam, emailed matt

---

in between:
* defined main games, adversaries, and theorems
* did the first main proof (equivalent output after moving v-updating to beginning of next oracle call)

---

1/23/16
* opened files, merged changes in oraclehybrid

1/24/16
* skimmed Naphat's paper
* HMAC file wouldn't check FCF; build problem; got stuck on debugging and emailed Adam
* updated TODO list, commented HMAC, deleted unnecessary code, and fixed off-by-one error
* notes to self: `make clean` and COMMENT YOUR CODE
* ~4 hours
